begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|TableScanOperator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobConf
import|;
end_import

begin_comment
comment|// Plugin interface for storage handler which supports input estimation
end_comment

begin_interface
specifier|public
interface|interface
name|InputEstimator
block|{
comment|/**    * Estimate input size based on filter and projection on table scan operator    *    * @param remaining Early exit condition. If it has positive value, further estimation    *                  can be canceled on the point of exceeding it. In this case,    *                  return any bigger length value then this (Long.MAX_VALUE, for eaxmple).    */
name|Estimation
name|estimate
parameter_list|(
name|JobConf
name|job
parameter_list|,
name|TableScanOperator
name|ts
parameter_list|,
name|long
name|remaining
parameter_list|)
throws|throws
name|HiveException
function_decl|;
specifier|public
specifier|static
class|class
name|Estimation
block|{
specifier|private
name|int
name|rowCount
decl_stmt|;
specifier|private
name|long
name|totalLength
decl_stmt|;
specifier|public
name|Estimation
parameter_list|(
name|int
name|rowCount
parameter_list|,
name|long
name|totalLength
parameter_list|)
block|{
name|this
operator|.
name|rowCount
operator|=
name|rowCount
expr_stmt|;
name|this
operator|.
name|totalLength
operator|=
name|totalLength
expr_stmt|;
block|}
specifier|public
name|int
name|getRowCount
parameter_list|()
block|{
return|return
name|rowCount
return|;
block|}
specifier|public
name|long
name|getTotalLength
parameter_list|()
block|{
return|return
name|totalLength
return|;
block|}
block|}
block|}
end_interface

end_unit

