begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|vector
operator|.
name|mapjoin
operator|.
name|optimized
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|JoinUtil
operator|.
name|JoinResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|persistence
operator|.
name|MapJoinTableContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|persistence
operator|.
name|MatchTracker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|persistence
operator|.
name|MapJoinTableContainer
operator|.
name|ReusableGetAdaptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|vector
operator|.
name|mapjoin
operator|.
name|hashtable
operator|.
name|VectorMapJoinBytesHashMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|vector
operator|.
name|mapjoin
operator|.
name|hashtable
operator|.
name|VectorMapJoinHashMapResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|vector
operator|.
name|mapjoin
operator|.
name|hashtable
operator|.
name|VectorMapJoinNonMatchedIterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|HiveException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|binarysortable
operator|.
name|fast
operator|.
name|BinarySortableDeserializeRead
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|typeinfo
operator|.
name|TypeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|typeinfo
operator|.
name|TypeInfoFactory
import|;
end_import

begin_comment
comment|/*  * An string hash map based on the BytesBytesMultiHashMap.  */
end_comment

begin_class
specifier|public
class|class
name|VectorMapJoinOptimizedStringHashMap
extends|extends
name|VectorMapJoinOptimizedHashMap
implements|implements
name|VectorMapJoinBytesHashMap
block|{
specifier|private
name|VectorMapJoinOptimizedStringCommon
name|stringCommon
decl_stmt|;
specifier|private
specifier|static
class|class
name|NonMatchedStringHashMapIterator
extends|extends
name|NonMatchedBytesHashMapIterator
block|{
specifier|private
name|BinarySortableDeserializeRead
name|keyBinarySortableDeserializeRead
decl_stmt|;
name|NonMatchedStringHashMapIterator
parameter_list|(
name|MatchTracker
name|matchTracker
parameter_list|,
name|VectorMapJoinOptimizedStringHashMap
name|hashMap
parameter_list|)
block|{
name|super
argument_list|(
name|matchTracker
argument_list|,
name|hashMap
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|init
parameter_list|()
block|{
name|super
operator|.
name|init
argument_list|()
expr_stmt|;
name|TypeInfo
index|[]
name|typeInfos
init|=
operator|new
name|TypeInfo
index|[]
block|{
name|TypeInfoFactory
operator|.
name|stringTypeInfo
block|}
decl_stmt|;
name|keyBinarySortableDeserializeRead
operator|=
operator|new
name|BinarySortableDeserializeRead
argument_list|(
name|typeInfos
argument_list|,
comment|/* useExternalBuffer */
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|readNonMatchedBytesKey
parameter_list|()
throws|throws
name|HiveException
block|{
name|super
operator|.
name|doReadNonMatchedBytesKey
argument_list|()
expr_stmt|;
name|byte
index|[]
name|bytes
init|=
name|keyRef
operator|.
name|getBytes
argument_list|()
decl_stmt|;
specifier|final
name|int
name|keyOffset
init|=
operator|(
name|int
operator|)
name|keyRef
operator|.
name|getOffset
argument_list|()
decl_stmt|;
specifier|final
name|int
name|keyLength
init|=
name|keyRef
operator|.
name|getLength
argument_list|()
decl_stmt|;
try|try
block|{
name|keyBinarySortableDeserializeRead
operator|.
name|set
argument_list|(
name|bytes
argument_list|,
name|keyOffset
argument_list|,
name|keyLength
argument_list|)
expr_stmt|;
return|return
name|keyBinarySortableDeserializeRead
operator|.
name|readNextField
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HiveException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|byte
index|[]
name|getNonMatchedBytes
parameter_list|()
block|{
return|return
name|keyBinarySortableDeserializeRead
operator|.
name|currentBytes
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getNonMatchedBytesOffset
parameter_list|()
block|{
return|return
name|keyBinarySortableDeserializeRead
operator|.
name|currentBytesStart
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getNonMatchedBytesLength
parameter_list|()
block|{
return|return
name|keyBinarySortableDeserializeRead
operator|.
name|currentBytesLength
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|VectorMapJoinNonMatchedIterator
name|createNonMatchedIterator
parameter_list|(
name|MatchTracker
name|matchTracker
parameter_list|)
block|{
return|return
operator|new
name|NonMatchedStringHashMapIterator
argument_list|(
name|matchTracker
argument_list|,
name|this
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|JoinResult
name|lookup
parameter_list|(
name|byte
index|[]
name|keyBytes
parameter_list|,
name|int
name|keyStart
parameter_list|,
name|int
name|keyLength
parameter_list|,
name|VectorMapJoinHashMapResult
name|hashMapResult
parameter_list|)
throws|throws
name|IOException
block|{
name|SerializedBytes
name|serializedBytes
init|=
name|stringCommon
operator|.
name|serialize
argument_list|(
name|keyBytes
argument_list|,
name|keyStart
argument_list|,
name|keyLength
argument_list|)
decl_stmt|;
return|return
name|super
operator|.
name|lookup
argument_list|(
name|serializedBytes
operator|.
name|bytes
argument_list|,
name|serializedBytes
operator|.
name|offset
argument_list|,
name|serializedBytes
operator|.
name|length
argument_list|,
name|hashMapResult
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|JoinResult
name|lookup
parameter_list|(
name|byte
index|[]
name|keyBytes
parameter_list|,
name|int
name|keyStart
parameter_list|,
name|int
name|keyLength
parameter_list|,
name|VectorMapJoinHashMapResult
name|hashMapResult
parameter_list|,
name|MatchTracker
name|matchTracker
parameter_list|)
throws|throws
name|IOException
block|{
name|SerializedBytes
name|serializedBytes
init|=
name|stringCommon
operator|.
name|serialize
argument_list|(
name|keyBytes
argument_list|,
name|keyStart
argument_list|,
name|keyLength
argument_list|)
decl_stmt|;
return|return
name|super
operator|.
name|lookup
argument_list|(
name|serializedBytes
operator|.
name|bytes
argument_list|,
name|serializedBytes
operator|.
name|offset
argument_list|,
name|serializedBytes
operator|.
name|length
argument_list|,
name|hashMapResult
argument_list|,
name|matchTracker
argument_list|)
return|;
block|}
specifier|public
name|VectorMapJoinOptimizedStringHashMap
parameter_list|(
name|boolean
name|isOuterJoin
parameter_list|,
name|MapJoinTableContainer
name|originalTableContainer
parameter_list|,
name|ReusableGetAdaptor
name|hashMapRowGetter
parameter_list|)
block|{
name|super
argument_list|(
name|originalTableContainer
argument_list|,
name|hashMapRowGetter
argument_list|)
expr_stmt|;
name|stringCommon
operator|=
operator|new
name|VectorMapJoinOptimizedStringCommon
argument_list|(
name|isOuterJoin
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

