begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
operator|.
name|calcite
operator|.
name|rules
operator|.
name|jdbc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|adapter
operator|.
name|java
operator|.
name|JavaTypeFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|adapter
operator|.
name|jdbc
operator|.
name|JdbcImplementor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|RelNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|core
operator|.
name|CorrelationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|core
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rex
operator|.
name|RexNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|SqlDialect
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|SqlNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|SqlNodeList
import|;
end_import

begin_class
specifier|public
class|class
name|HiveJdbcImplementor
extends|extends
name|JdbcImplementor
block|{
specifier|public
name|HiveJdbcImplementor
parameter_list|(
name|SqlDialect
name|dialect
parameter_list|,
name|JavaTypeFactory
name|typeFactory
parameter_list|)
block|{
name|super
argument_list|(
name|dialect
argument_list|,
name|typeFactory
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Result
name|translate
parameter_list|(
name|Project
name|e
parameter_list|)
block|{
comment|// This variant is for the top project as we want to keep
comment|// the column aliases instead of producing STAR
name|Result
name|x
init|=
name|visitChild
argument_list|(
literal|0
argument_list|,
name|e
operator|.
name|getInput
argument_list|()
argument_list|)
decl_stmt|;
name|parseCorrelTable
argument_list|(
name|e
argument_list|,
name|x
argument_list|)
expr_stmt|;
specifier|final
name|Builder
name|builder
init|=
name|x
operator|.
name|builder
argument_list|(
name|e
argument_list|,
name|Clause
operator|.
name|SELECT
argument_list|)
decl_stmt|;
specifier|final
name|List
argument_list|<
name|SqlNode
argument_list|>
name|selectList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|RexNode
name|ref
range|:
name|e
operator|.
name|getChildExps
argument_list|()
control|)
block|{
name|SqlNode
name|sqlExpr
init|=
name|builder
operator|.
name|context
operator|.
name|toSql
argument_list|(
literal|null
argument_list|,
name|ref
argument_list|)
decl_stmt|;
name|addSelect
argument_list|(
name|selectList
argument_list|,
name|sqlExpr
argument_list|,
name|e
operator|.
name|getRowType
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|setSelect
argument_list|(
operator|new
name|SqlNodeList
argument_list|(
name|selectList
argument_list|,
name|POS
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|result
argument_list|()
return|;
block|}
specifier|private
name|void
name|parseCorrelTable
parameter_list|(
name|RelNode
name|relNode
parameter_list|,
name|Result
name|x
parameter_list|)
block|{
for|for
control|(
name|CorrelationId
name|id
range|:
name|relNode
operator|.
name|getVariablesSet
argument_list|()
control|)
block|{
name|correlTableMap
operator|.
name|put
argument_list|(
name|id
argument_list|,
name|x
operator|.
name|qualifiedContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

