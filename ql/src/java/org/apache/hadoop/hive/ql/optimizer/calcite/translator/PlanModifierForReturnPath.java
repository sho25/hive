begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
operator|.
name|calcite
operator|.
name|translator
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|RelNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|util
operator|.
name|Pair
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|FieldSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
operator|.
name|calcite
operator|.
name|CalciteSemanticException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
operator|.
name|calcite
operator|.
name|HiveCalciteUtil
import|;
end_import

begin_class
specifier|public
class|class
name|PlanModifierForReturnPath
block|{
specifier|public
specifier|static
name|RelNode
name|convertOpTree
parameter_list|(
name|RelNode
name|rel
parameter_list|,
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|resultSchema
parameter_list|,
name|boolean
name|isCTAS
parameter_list|)
throws|throws
name|CalciteSemanticException
block|{
name|RelNode
name|newTopNode
init|=
name|rel
decl_stmt|;
name|Pair
argument_list|<
name|RelNode
argument_list|,
name|RelNode
argument_list|>
name|topSelparentPair
init|=
name|HiveCalciteUtil
operator|.
name|getTopLevelSelect
argument_list|(
name|newTopNode
argument_list|)
decl_stmt|;
name|PlanModifierUtil
operator|.
name|fixTopOBSchema
argument_list|(
name|newTopNode
argument_list|,
name|topSelparentPair
argument_list|,
name|resultSchema
argument_list|,
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|isCTAS
condition|)
block|{
name|newTopNode
operator|=
name|PlanModifierForASTConv
operator|.
name|renameTopLevelSelectInResultSchema
argument_list|(
name|newTopNode
argument_list|,
name|topSelparentPair
argument_list|,
name|resultSchema
argument_list|)
expr_stmt|;
block|}
return|return
name|newTopNode
return|;
block|}
block|}
end_class

end_unit

