begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|vector
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|vector
operator|.
name|expressions
operator|.
name|aggregates
operator|.
name|VectorAggregateExpression
import|;
end_import

begin_comment
comment|/**  * Represents a set of aggregation buffers to be used for a specific key for UDAF GROUP BY.  *  */
end_comment

begin_class
specifier|public
class|class
name|VectorAggregationBufferRow
block|{
specifier|private
name|VectorAggregateExpression
operator|.
name|AggregationBuffer
index|[]
name|aggregationBuffers
decl_stmt|;
specifier|private
name|int
name|version
decl_stmt|;
specifier|private
name|int
name|index
decl_stmt|;
specifier|public
name|VectorAggregationBufferRow
parameter_list|(
name|VectorAggregateExpression
operator|.
name|AggregationBuffer
index|[]
name|aggregationBuffers
parameter_list|)
block|{
name|this
operator|.
name|aggregationBuffers
operator|=
name|aggregationBuffers
expr_stmt|;
block|}
comment|/**    * returns the aggregation buffer for an aggregation expression, by index.    */
specifier|public
name|VectorAggregateExpression
operator|.
name|AggregationBuffer
name|getAggregationBuffer
parameter_list|(
name|int
name|bufferIndex
parameter_list|)
block|{
return|return
name|aggregationBuffers
index|[
name|bufferIndex
index|]
return|;
block|}
comment|/**    * returns the array of aggregation buffers (the entire set).    */
specifier|public
name|VectorAggregateExpression
operator|.
name|AggregationBuffer
index|[]
name|getAggregationBuffers
parameter_list|()
block|{
return|return
name|aggregationBuffers
return|;
block|}
comment|/**     * Versioning used to detect staleness of the index cached for benefit of    * {@link org.apache.hadoop.hive.ql.exec.vector.VectorAggregationBufferBatch VectorAggregationBufferBatch}.    */
specifier|public
name|int
name|getVersion
parameter_list|()
block|{
return|return
name|version
return|;
block|}
comment|/**    * cached index used by VectorAggregationBufferBatch.    * @return    */
specifier|public
name|int
name|getIndex
parameter_list|()
block|{
return|return
name|index
return|;
block|}
comment|/**    * accessor for VectorAggregationBufferBatch to set its caching info on this set.    */
specifier|public
name|void
name|setVersionAndIndex
parameter_list|(
name|int
name|version
parameter_list|,
name|int
name|index
parameter_list|)
block|{
name|this
operator|.
name|index
operator|=
name|index
expr_stmt|;
name|this
operator|.
name|version
operator|=
name|version
expr_stmt|;
block|}
comment|/**    * Resets the aggregation buffers for reuse    */
specifier|public
name|void
name|reset
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|aggregationBuffers
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
name|aggregationBuffers
index|[
name|i
index|]
operator|.
name|reset
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

