begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|ColStatistics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|Statistics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|Statistics
operator|.
name|State
import|;
end_import

begin_comment
comment|/**  * The list of column stats and their state.  */
end_comment

begin_class
specifier|public
class|class
name|ColumnStatsList
block|{
comment|/** State. */
specifier|private
name|State
name|state
decl_stmt|;
comment|/** Column stats. */
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|ColStatistics
argument_list|>
name|colStats
decl_stmt|;
specifier|public
name|ColumnStatsList
parameter_list|()
block|{
name|this
operator|.
name|state
operator|=
name|State
operator|.
name|NONE
expr_stmt|;
name|this
operator|.
name|colStats
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
block|}
specifier|public
name|State
name|getState
parameter_list|()
block|{
return|return
name|state
return|;
block|}
specifier|public
name|void
name|updateState
parameter_list|(
name|State
name|newState
parameter_list|)
block|{
name|this
operator|.
name|state
operator|=
name|Statistics
operator|.
name|inferColumnStatsState
argument_list|(
name|this
operator|.
name|state
argument_list|,
name|newState
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|ColStatistics
argument_list|>
name|getColStats
parameter_list|()
block|{
return|return
name|colStats
return|;
block|}
specifier|public
name|void
name|put
parameter_list|(
name|String
name|columnName
parameter_list|,
name|ColStatistics
name|cStats
parameter_list|)
block|{
name|this
operator|.
name|colStats
operator|.
name|put
argument_list|(
name|columnName
argument_list|,
name|cStats
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"{ "
operator|+
name|state
operator|+
literal|", "
operator|+
name|colStats
operator|+
literal|" }"
return|;
block|}
block|}
end_class

end_unit

