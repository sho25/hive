begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|HiveException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|exprNodeColumnDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde
operator|.
name|SerDeField
import|;
end_import

begin_class
specifier|public
class|class
name|ExprNodeColumnEvaluator
extends|extends
name|ExprNodeEvaluator
block|{
specifier|protected
name|exprNodeColumnDesc
name|expr
decl_stmt|;
specifier|transient
name|SerDeField
name|field
decl_stmt|;
specifier|public
name|ExprNodeColumnEvaluator
parameter_list|(
name|exprNodeColumnDesc
name|expr
parameter_list|)
block|{
name|this
operator|.
name|expr
operator|=
name|expr
expr_stmt|;
block|}
specifier|public
name|Object
name|evaluateToObject
parameter_list|(
name|HiveObject
name|row
parameter_list|)
throws|throws
name|HiveException
block|{
return|return
name|evaluate
argument_list|(
name|row
argument_list|)
operator|.
name|getJavaObject
argument_list|()
return|;
block|}
specifier|public
name|HiveObject
name|evaluate
parameter_list|(
name|HiveObject
name|row
parameter_list|)
throws|throws
name|HiveException
block|{
if|if
condition|(
name|field
operator|==
literal|null
condition|)
block|{
name|field
operator|=
name|row
operator|.
name|getFieldFromExpression
argument_list|(
name|expr
operator|.
name|getColumn
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|row
operator|.
name|get
argument_list|(
name|field
argument_list|)
return|;
block|}
block|}
end_class

end_unit

