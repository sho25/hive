begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
package|;
end_package

begin_import
import|import
name|org
operator|.
name|antlr
operator|.
name|runtime
operator|.
name|CharStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|antlr
operator|.
name|runtime
operator|.
name|CommonToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|antlr
operator|.
name|runtime
operator|.
name|Token
import|;
end_import

begin_comment
comment|/**  * This class is designed to hold "constant" CommonTokens, that have fixed type  * and text, and everything else equal to zero. They can therefore be reused  * to save memory. However, to support reuse (canonicalization) we need to  * implement the proper hashCode() and equals() methods.  */
end_comment

begin_class
class|class
name|ImmutableCommonToken
extends|extends
name|CommonToken
block|{
specifier|private
specifier|static
specifier|final
name|String
name|SETTERS_DISABLED
init|=
literal|"All setter methods are intentionally disabled"
decl_stmt|;
specifier|private
specifier|final
name|int
name|hashCode
decl_stmt|;
name|ImmutableCommonToken
parameter_list|(
name|int
name|type
parameter_list|,
name|String
name|text
parameter_list|)
block|{
name|super
argument_list|(
name|type
argument_list|,
name|text
argument_list|)
expr_stmt|;
name|hashCode
operator|=
name|calculateHash
argument_list|()
expr_stmt|;
block|}
specifier|private
name|int
name|calculateHash
parameter_list|()
block|{
return|return
name|type
operator|*
literal|31
operator|+
operator|(
name|text
operator|!=
literal|null
condition|?
name|text
operator|.
name|hashCode
argument_list|()
else|:
literal|0
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|other
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|other
operator|instanceof
name|ImmutableCommonToken
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|ImmutableCommonToken
name|otherToken
init|=
operator|(
name|ImmutableCommonToken
operator|)
name|other
decl_stmt|;
return|return
name|type
operator|==
name|otherToken
operator|.
name|type
operator|&&
operator|(
operator|(
name|text
operator|==
literal|null
operator|&&
name|otherToken
operator|.
name|text
operator|==
literal|null
operator|)
operator|||
name|text
operator|!=
literal|null
operator|&&
name|text
operator|.
name|equals
argument_list|(
name|otherToken
operator|.
name|text
argument_list|)
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|hashCode
return|;
block|}
comment|// All the setter methods are overridden to throw exception, to prevent accidental
comment|// attempts to modify data fields that should be immutable.
annotation|@
name|Override
specifier|public
name|void
name|setLine
parameter_list|(
name|int
name|line
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
name|SETTERS_DISABLED
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setText
parameter_list|(
name|String
name|text
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
name|SETTERS_DISABLED
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setCharPositionInLine
parameter_list|(
name|int
name|charPositionInLine
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
name|SETTERS_DISABLED
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setChannel
parameter_list|(
name|int
name|channel
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
name|SETTERS_DISABLED
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setType
parameter_list|(
name|int
name|type
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
name|SETTERS_DISABLED
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setStartIndex
parameter_list|(
name|int
name|start
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
name|SETTERS_DISABLED
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setStopIndex
parameter_list|(
name|int
name|stop
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
name|SETTERS_DISABLED
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setTokenIndex
parameter_list|(
name|int
name|index
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
name|SETTERS_DISABLED
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setInputStream
parameter_list|(
name|CharStream
name|input
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
name|SETTERS_DISABLED
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

