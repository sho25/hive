begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|vector
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|DateWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|HiveIntervalDayTimeWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|TimestampWritable
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|TimestampUtils
block|{
specifier|static
specifier|final
name|long
name|MILLISECONDS_PER_SECOND
init|=
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|toMillis
argument_list|(
literal|1
argument_list|)
decl_stmt|;
specifier|static
specifier|final
name|long
name|NANOSECONDS_PER_MILLISECOND
init|=
name|TimeUnit
operator|.
name|MILLISECONDS
operator|.
name|toNanos
argument_list|(
literal|1
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|long
name|daysToNanoseconds
parameter_list|(
name|long
name|daysSinceEpoch
parameter_list|)
block|{
return|return
name|DateWritable
operator|.
name|daysToMillis
argument_list|(
operator|(
name|int
operator|)
name|daysSinceEpoch
argument_list|)
operator|*
name|NANOSECONDS_PER_MILLISECOND
return|;
block|}
specifier|public
specifier|static
name|TimestampWritable
name|timestampColumnVectorWritable
parameter_list|(
name|TimestampColumnVector
name|timestampColVector
parameter_list|,
name|int
name|elementNum
parameter_list|,
name|TimestampWritable
name|timestampWritable
parameter_list|)
block|{
name|timestampWritable
operator|.
name|set
argument_list|(
name|timestampColVector
operator|.
name|asScratchTimestamp
argument_list|(
name|elementNum
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|timestampWritable
return|;
block|}
specifier|public
specifier|static
name|HiveIntervalDayTimeWritable
name|intervalDayTimeColumnVectorWritable
parameter_list|(
name|IntervalDayTimeColumnVector
name|intervalDayTimeColVector
parameter_list|,
name|int
name|elementNum
parameter_list|,
name|HiveIntervalDayTimeWritable
name|intervalDayTimeWritable
parameter_list|)
block|{
name|intervalDayTimeWritable
operator|.
name|set
argument_list|(
name|intervalDayTimeColVector
operator|.
name|asScratchIntervalDayTime
argument_list|(
name|elementNum
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|intervalDayTimeWritable
return|;
block|}
block|}
end_class

end_unit

