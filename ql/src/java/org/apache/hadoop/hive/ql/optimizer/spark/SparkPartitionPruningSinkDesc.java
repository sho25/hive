begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
operator|.
name|spark
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|TableScanOperator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|AbstractOperatorDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|Explain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|ExprNodeDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|MapWork
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|TableDesc
import|;
end_import

begin_class
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Spark Partition Pruning Sink Operator"
argument_list|)
specifier|public
class|class
name|SparkPartitionPruningSinkDesc
extends|extends
name|AbstractOperatorDesc
block|{
comment|// column in the target table that will be pruned against
specifier|private
name|String
name|targetColumnName
decl_stmt|;
comment|// type of target column
specifier|private
name|String
name|targetColumnType
decl_stmt|;
specifier|private
name|TableDesc
name|table
decl_stmt|;
specifier|private
specifier|transient
name|TableScanOperator
name|tableScan
decl_stmt|;
comment|// the partition column we're interested in
specifier|private
name|ExprNodeDesc
name|partKey
decl_stmt|;
specifier|private
name|Path
name|path
decl_stmt|;
specifier|private
name|MapWork
name|targetMapWork
decl_stmt|;
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"tmp Path"
argument_list|,
name|explainLevels
operator|=
block|{
name|Explain
operator|.
name|Level
operator|.
name|EXTENDED
block|}
argument_list|)
specifier|public
name|Path
name|getPath
parameter_list|()
block|{
return|return
name|path
return|;
block|}
specifier|public
name|void
name|setPath
parameter_list|(
name|Path
name|path
parameter_list|)
block|{
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
block|}
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"target work"
argument_list|)
specifier|public
name|String
name|getTargetWork
parameter_list|()
block|{
return|return
name|this
operator|.
name|targetMapWork
operator|.
name|getName
argument_list|()
return|;
block|}
specifier|public
name|MapWork
name|getTargetMapWork
parameter_list|()
block|{
return|return
name|this
operator|.
name|targetMapWork
return|;
block|}
specifier|public
name|void
name|setTargetMapWork
parameter_list|(
name|MapWork
name|targetMapWork
parameter_list|)
block|{
name|this
operator|.
name|targetMapWork
operator|=
name|targetMapWork
expr_stmt|;
block|}
specifier|public
name|TableScanOperator
name|getTableScan
parameter_list|()
block|{
return|return
name|tableScan
return|;
block|}
specifier|public
name|void
name|setTableScan
parameter_list|(
name|TableScanOperator
name|tableScan
parameter_list|)
block|{
name|this
operator|.
name|tableScan
operator|=
name|tableScan
expr_stmt|;
block|}
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Target column"
argument_list|)
specifier|public
name|String
name|displayTargetColumn
parameter_list|()
block|{
return|return
name|targetColumnName
operator|+
literal|" ("
operator|+
name|targetColumnType
operator|+
literal|")"
return|;
block|}
specifier|public
name|String
name|getTargetColumnName
parameter_list|()
block|{
return|return
name|targetColumnName
return|;
block|}
specifier|public
name|void
name|setTargetColumnName
parameter_list|(
name|String
name|targetColumnName
parameter_list|)
block|{
name|this
operator|.
name|targetColumnName
operator|=
name|targetColumnName
expr_stmt|;
block|}
specifier|public
name|String
name|getTargetColumnType
parameter_list|()
block|{
return|return
name|targetColumnType
return|;
block|}
specifier|public
name|void
name|setTargetColumnType
parameter_list|(
name|String
name|columnType
parameter_list|)
block|{
name|this
operator|.
name|targetColumnType
operator|=
name|columnType
expr_stmt|;
block|}
specifier|public
name|ExprNodeDesc
name|getPartKey
parameter_list|()
block|{
return|return
name|partKey
return|;
block|}
specifier|public
name|void
name|setPartKey
parameter_list|(
name|ExprNodeDesc
name|partKey
parameter_list|)
block|{
name|this
operator|.
name|partKey
operator|=
name|partKey
expr_stmt|;
block|}
specifier|public
name|TableDesc
name|getTable
parameter_list|()
block|{
return|return
name|table
return|;
block|}
specifier|public
name|void
name|setTable
parameter_list|(
name|TableDesc
name|table
parameter_list|)
block|{
name|this
operator|.
name|table
operator|=
name|table
expr_stmt|;
block|}
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"partition key expr"
argument_list|)
specifier|public
name|String
name|getPartKeyString
parameter_list|()
block|{
return|return
name|partKey
operator|.
name|getExprString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

