begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ForkJoinPool
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ForkJoinWorkerThread
import|;
end_import

begin_comment
comment|/**  * This class allows specifying a prefix for ForkJoinPool thread names.  */
end_comment

begin_class
specifier|public
class|class
name|NamedForkJoinWorkerThreadFactory
implements|implements
name|ForkJoinPool
operator|.
name|ForkJoinWorkerThreadFactory
block|{
name|NamedForkJoinWorkerThreadFactory
parameter_list|(
name|String
name|namePrefix
parameter_list|)
block|{
name|this
operator|.
name|namePrefix
operator|=
name|namePrefix
expr_stmt|;
block|}
specifier|private
specifier|final
name|String
name|namePrefix
decl_stmt|;
annotation|@
name|Override
specifier|public
name|ForkJoinWorkerThread
name|newThread
parameter_list|(
name|ForkJoinPool
name|pool
parameter_list|)
block|{
name|ForkJoinWorkerThread
name|worker
init|=
name|ForkJoinPool
operator|.
name|defaultForkJoinWorkerThreadFactory
operator|.
name|newThread
argument_list|(
name|pool
argument_list|)
decl_stmt|;
name|worker
operator|.
name|setName
argument_list|(
name|namePrefix
operator|+
name|worker
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|worker
return|;
block|}
block|}
end_class

end_unit

