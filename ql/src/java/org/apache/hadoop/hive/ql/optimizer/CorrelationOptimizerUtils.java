begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|ColumnInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|CorrelationCompositeOperator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|CorrelationLocalSimulativeReduceSinkOperator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|FilterOperator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|GroupByOperator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|Operator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|OperatorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|ReduceSinkOperator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|RowSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|SelectOperator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|TableScanOperator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|Utilities
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
operator|.
name|CorrelationOptimizer
operator|.
name|IntraQueryCorrelation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
operator|.
name|OpParseContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
operator|.
name|ParseContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
operator|.
name|RowResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
operator|.
name|SemanticAnalyzer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
operator|.
name|SemanticException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
operator|.
name|TypeCheckProcFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|CorrelationCompositeDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|CorrelationLocalSimulativeReduceSinkDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|CorrelationReducerDispatchDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|ExprNodeColumnDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|ExprNodeDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|FilterDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|ForwardDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|OperatorDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|PlanUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|ReduceSinkDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|SelectDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|TableDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|TableScanDesc
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|CorrelationOptimizerUtils
block|{
specifier|static
specifier|final
specifier|private
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|CorrelationOptimizerUtils
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|boolean
name|isExisted
parameter_list|(
name|ExprNodeDesc
name|expr
parameter_list|,
name|List
argument_list|<
name|ExprNodeDesc
argument_list|>
name|col_list
parameter_list|)
block|{
for|for
control|(
name|ExprNodeDesc
name|thisExpr
range|:
name|col_list
control|)
block|{
if|if
condition|(
name|expr
operator|.
name|getExprString
argument_list|()
operator|.
name|equals
argument_list|(
name|thisExpr
operator|.
name|getExprString
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|public
specifier|static
name|String
name|getColumnName
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|ExprNodeDesc
argument_list|>
name|opColumnExprMap
parameter_list|,
name|ExprNodeDesc
name|expr
parameter_list|)
block|{
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|ExprNodeDesc
argument_list|>
name|entry
range|:
name|opColumnExprMap
operator|.
name|entrySet
argument_list|()
control|)
block|{
if|if
condition|(
name|expr
operator|.
name|getExprString
argument_list|()
operator|.
name|equals
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|getExprString
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|entry
operator|.
name|getKey
argument_list|()
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
specifier|static
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|unionUsedColumnsAndMakeNewSelect
parameter_list|(
name|List
argument_list|<
name|ReduceSinkOperator
argument_list|>
name|rsops
parameter_list|,
name|IntraQueryCorrelation
name|correlation
parameter_list|,
name|Map
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|ExprNodeDesc
argument_list|>
argument_list|>
name|originalOpColumnExprMap
parameter_list|,
name|TableScanOperator
name|input
parameter_list|,
name|ParseContext
name|pGraphContext
parameter_list|,
name|Map
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|,
name|OpParseContext
argument_list|>
name|originalOpParseCtx
parameter_list|)
block|{
name|ArrayList
argument_list|<
name|String
argument_list|>
name|columnNames
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|ExprNodeDesc
argument_list|>
name|colExprMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|ExprNodeDesc
argument_list|>
argument_list|()
decl_stmt|;
name|ArrayList
argument_list|<
name|ExprNodeDesc
argument_list|>
name|col_list
init|=
operator|new
name|ArrayList
argument_list|<
name|ExprNodeDesc
argument_list|>
argument_list|()
decl_stmt|;
name|RowResolver
name|out_rwsch
init|=
operator|new
name|RowResolver
argument_list|()
decl_stmt|;
name|boolean
name|isSelectAll
init|=
literal|false
decl_stmt|;
name|int
name|pos
init|=
literal|0
decl_stmt|;
for|for
control|(
name|ReduceSinkOperator
name|rsop
range|:
name|rsops
control|)
block|{
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|curr
init|=
name|correlation
operator|.
name|getBottom2TSops
argument_list|()
operator|.
name|get
argument_list|(
name|rsop
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getChildOperators
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
while|while
condition|(
literal|true
condition|)
block|{
if|if
condition|(
name|curr
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|SelectOperator
operator|.
name|getOperatorName
argument_list|()
argument_list|)
condition|)
block|{
name|SelectOperator
name|selOp
init|=
operator|(
name|SelectOperator
operator|)
name|curr
decl_stmt|;
if|if
condition|(
name|selOp
operator|.
name|getColumnExprMap
argument_list|()
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|ExprNodeDesc
argument_list|>
name|entry
range|:
name|selOp
operator|.
name|getColumnExprMap
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|ExprNodeDesc
name|expr
init|=
name|entry
operator|.
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|isExisted
argument_list|(
name|expr
argument_list|,
name|col_list
argument_list|)
operator|&&
name|originalOpParseCtx
operator|.
name|get
argument_list|(
name|selOp
argument_list|)
operator|.
name|getRowResolver
argument_list|()
operator|.
name|getInvRslvMap
argument_list|()
operator|.
name|containsKey
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
condition|)
block|{
name|col_list
operator|.
name|add
argument_list|(
name|expr
argument_list|)
expr_stmt|;
name|String
index|[]
name|colRef
init|=
name|originalOpParseCtx
operator|.
name|get
argument_list|(
name|selOp
argument_list|)
operator|.
name|getRowResolver
argument_list|()
operator|.
name|getInvRslvMap
argument_list|()
operator|.
name|get
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|tabAlias
init|=
name|colRef
index|[
literal|0
index|]
decl_stmt|;
name|String
name|colAlias
init|=
name|colRef
index|[
literal|1
index|]
decl_stmt|;
name|String
name|outputName
init|=
name|entry
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|out_rwsch
operator|.
name|put
argument_list|(
name|tabAlias
argument_list|,
name|colAlias
argument_list|,
operator|new
name|ColumnInfo
argument_list|(
name|outputName
argument_list|,
name|expr
operator|.
name|getTypeInfo
argument_list|()
argument_list|,
name|tabAlias
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|pos
operator|++
expr_stmt|;
name|columnNames
operator|.
name|add
argument_list|(
name|outputName
argument_list|)
expr_stmt|;
name|colExprMap
operator|.
name|put
argument_list|(
name|outputName
argument_list|,
name|expr
argument_list|)
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
for|for
control|(
name|ExprNodeDesc
name|expr
range|:
name|selOp
operator|.
name|getConf
argument_list|()
operator|.
name|getColList
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|isExisted
argument_list|(
name|expr
argument_list|,
name|col_list
argument_list|)
condition|)
block|{
name|col_list
operator|.
name|add
argument_list|(
name|expr
argument_list|)
expr_stmt|;
name|String
index|[]
name|colRef
init|=
name|pGraphContext
operator|.
name|getOpParseCtx
argument_list|()
operator|.
name|get
argument_list|(
name|selOp
argument_list|)
operator|.
name|getRowResolver
argument_list|()
operator|.
name|getInvRslvMap
argument_list|()
operator|.
name|get
argument_list|(
name|expr
operator|.
name|getCols
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|tabAlias
init|=
name|colRef
index|[
literal|0
index|]
decl_stmt|;
name|String
name|colAlias
init|=
name|colRef
index|[
literal|1
index|]
decl_stmt|;
name|String
name|outputName
init|=
name|expr
operator|.
name|getCols
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|out_rwsch
operator|.
name|put
argument_list|(
name|tabAlias
argument_list|,
name|colAlias
argument_list|,
operator|new
name|ColumnInfo
argument_list|(
name|outputName
argument_list|,
name|expr
operator|.
name|getTypeInfo
argument_list|()
argument_list|,
name|tabAlias
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|columnNames
operator|.
name|add
argument_list|(
name|outputName
argument_list|)
expr_stmt|;
name|colExprMap
operator|.
name|put
argument_list|(
name|outputName
argument_list|,
name|expr
argument_list|)
expr_stmt|;
name|pos
operator|++
expr_stmt|;
block|}
block|}
block|}
break|break;
block|}
elseif|else
if|if
condition|(
name|curr
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|FilterOperator
operator|.
name|getOperatorName
argument_list|()
argument_list|)
condition|)
block|{
name|isSelectAll
operator|=
literal|true
expr_stmt|;
break|break;
block|}
elseif|else
if|if
condition|(
name|curr
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|ReduceSinkOperator
operator|.
name|getOperatorName
argument_list|()
argument_list|)
condition|)
block|{
name|ReduceSinkOperator
name|thisRSop
init|=
operator|(
name|ReduceSinkOperator
operator|)
name|curr
decl_stmt|;
for|for
control|(
name|ExprNodeDesc
name|expr
range|:
name|thisRSop
operator|.
name|getConf
argument_list|()
operator|.
name|getKeyCols
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|isExisted
argument_list|(
name|expr
argument_list|,
name|col_list
argument_list|)
condition|)
block|{
name|col_list
operator|.
name|add
argument_list|(
name|expr
argument_list|)
expr_stmt|;
assert|assert
name|expr
operator|.
name|getCols
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|1
assert|;
name|String
name|columnName
init|=
name|getColumnName
argument_list|(
name|originalOpColumnExprMap
operator|.
name|get
argument_list|(
name|thisRSop
argument_list|)
argument_list|,
name|expr
argument_list|)
decl_stmt|;
name|String
index|[]
name|colRef
init|=
name|pGraphContext
operator|.
name|getOpParseCtx
argument_list|()
operator|.
name|get
argument_list|(
name|thisRSop
argument_list|)
operator|.
name|getRowResolver
argument_list|()
operator|.
name|getInvRslvMap
argument_list|()
operator|.
name|get
argument_list|(
name|columnName
argument_list|)
decl_stmt|;
name|String
name|tabAlias
init|=
name|colRef
index|[
literal|0
index|]
decl_stmt|;
name|String
name|colAlias
init|=
name|colRef
index|[
literal|1
index|]
decl_stmt|;
name|String
name|outputName
init|=
name|expr
operator|.
name|getCols
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|out_rwsch
operator|.
name|put
argument_list|(
name|tabAlias
argument_list|,
name|colAlias
argument_list|,
operator|new
name|ColumnInfo
argument_list|(
name|outputName
argument_list|,
name|expr
operator|.
name|getTypeInfo
argument_list|()
argument_list|,
name|tabAlias
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|columnNames
operator|.
name|add
argument_list|(
name|outputName
argument_list|)
expr_stmt|;
name|colExprMap
operator|.
name|put
argument_list|(
name|outputName
argument_list|,
name|expr
argument_list|)
expr_stmt|;
name|pos
operator|++
expr_stmt|;
block|}
block|}
for|for
control|(
name|ExprNodeDesc
name|expr
range|:
name|thisRSop
operator|.
name|getConf
argument_list|()
operator|.
name|getValueCols
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|isExisted
argument_list|(
name|expr
argument_list|,
name|col_list
argument_list|)
condition|)
block|{
name|col_list
operator|.
name|add
argument_list|(
name|expr
argument_list|)
expr_stmt|;
assert|assert
name|expr
operator|.
name|getCols
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|1
assert|;
name|String
name|columnName
init|=
name|getColumnName
argument_list|(
name|originalOpColumnExprMap
operator|.
name|get
argument_list|(
name|thisRSop
argument_list|)
argument_list|,
name|expr
argument_list|)
decl_stmt|;
name|String
index|[]
name|colRef
init|=
name|pGraphContext
operator|.
name|getOpParseCtx
argument_list|()
operator|.
name|get
argument_list|(
name|thisRSop
argument_list|)
operator|.
name|getRowResolver
argument_list|()
operator|.
name|getInvRslvMap
argument_list|()
operator|.
name|get
argument_list|(
name|columnName
argument_list|)
decl_stmt|;
name|String
name|tabAlias
init|=
name|colRef
index|[
literal|0
index|]
decl_stmt|;
name|String
name|colAlias
init|=
name|colRef
index|[
literal|1
index|]
decl_stmt|;
name|String
name|outputName
init|=
name|expr
operator|.
name|getCols
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|out_rwsch
operator|.
name|put
argument_list|(
name|tabAlias
argument_list|,
name|colAlias
argument_list|,
operator|new
name|ColumnInfo
argument_list|(
name|outputName
argument_list|,
name|expr
operator|.
name|getTypeInfo
argument_list|()
argument_list|,
name|tabAlias
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|columnNames
operator|.
name|add
argument_list|(
name|outputName
argument_list|)
expr_stmt|;
name|colExprMap
operator|.
name|put
argument_list|(
name|outputName
argument_list|,
name|expr
argument_list|)
expr_stmt|;
name|pos
operator|++
expr_stmt|;
block|}
block|}
break|break;
block|}
else|else
block|{
name|curr
operator|=
name|curr
operator|.
name|getChildOperators
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|output
decl_stmt|;
if|if
condition|(
name|isSelectAll
condition|)
block|{
name|output
operator|=
name|input
expr_stmt|;
block|}
else|else
block|{
name|output
operator|=
name|putOpInsertMap
argument_list|(
name|OperatorFactory
operator|.
name|getAndMakeChild
argument_list|(
operator|new
name|SelectDesc
argument_list|(
name|col_list
argument_list|,
name|columnNames
argument_list|,
literal|false
argument_list|)
argument_list|,
operator|new
name|RowSchema
argument_list|(
name|out_rwsch
operator|.
name|getColumnInfos
argument_list|()
argument_list|)
argument_list|,
name|input
argument_list|)
argument_list|,
name|out_rwsch
argument_list|,
name|pGraphContext
operator|.
name|getOpParseCtx
argument_list|()
argument_list|)
expr_stmt|;
name|output
operator|.
name|setColumnExprMap
argument_list|(
name|colExprMap
argument_list|)
expr_stmt|;
name|output
operator|.
name|setChildOperators
argument_list|(
name|Utilities
operator|.
name|makeList
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|output
return|;
block|}
specifier|public
specifier|static
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|putOpInsertMap
parameter_list|(
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|op
parameter_list|,
name|RowResolver
name|rr
parameter_list|,
name|LinkedHashMap
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|,
name|OpParseContext
argument_list|>
name|opParseCtx
parameter_list|)
block|{
name|OpParseContext
name|ctx
init|=
operator|new
name|OpParseContext
argument_list|(
name|rr
argument_list|)
decl_stmt|;
name|opParseCtx
operator|.
name|put
argument_list|(
name|op
argument_list|,
name|ctx
argument_list|)
expr_stmt|;
name|op
operator|.
name|augmentPlan
argument_list|()
expr_stmt|;
return|return
name|op
return|;
block|}
specifier|public
specifier|static
name|Map
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|,
name|String
argument_list|>
name|getAliasIDtTopOps
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
name|topOps
parameter_list|)
block|{
name|Map
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|,
name|String
argument_list|>
name|aliasIDtTopOps
init|=
operator|new
name|HashMap
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
name|entry
range|:
name|topOps
operator|.
name|entrySet
argument_list|()
control|)
block|{
assert|assert
operator|!
name|aliasIDtTopOps
operator|.
name|containsKey
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
assert|;
name|aliasIDtTopOps
operator|.
name|put
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|,
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|aliasIDtTopOps
return|;
block|}
comment|/**    * Find all peer ReduceSinkOperators (which have the same child operator of op) of op (op    * included).    */
specifier|public
specifier|static
name|List
argument_list|<
name|ReduceSinkOperator
argument_list|>
name|findPeerReduceSinkOperators
parameter_list|(
name|ReduceSinkOperator
name|op
parameter_list|)
block|{
name|List
argument_list|<
name|ReduceSinkOperator
argument_list|>
name|peerReduceSinkOperators
init|=
operator|new
name|ArrayList
argument_list|<
name|ReduceSinkOperator
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
name|children
init|=
name|op
operator|.
name|getChildOperators
argument_list|()
decl_stmt|;
assert|assert
name|children
operator|.
name|size
argument_list|()
operator|==
literal|1
assert|;
comment|// A ReduceSinkOperator should have only one child
for|for
control|(
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|parent
range|:
name|children
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getParentOperators
argument_list|()
control|)
block|{
assert|assert
operator|(
name|parent
operator|instanceof
name|ReduceSinkOperator
operator|)
assert|;
name|peerReduceSinkOperators
operator|.
name|add
argument_list|(
operator|(
name|ReduceSinkOperator
operator|)
name|parent
argument_list|)
expr_stmt|;
block|}
return|return
name|peerReduceSinkOperators
return|;
block|}
specifier|public
specifier|static
name|List
argument_list|<
name|CorrelationLocalSimulativeReduceSinkOperator
argument_list|>
name|findPeerFakeReduceSinkOperators
parameter_list|(
name|CorrelationLocalSimulativeReduceSinkOperator
name|op
parameter_list|)
block|{
name|List
argument_list|<
name|CorrelationLocalSimulativeReduceSinkOperator
argument_list|>
name|peerReduceSinkOperators
init|=
operator|new
name|ArrayList
argument_list|<
name|CorrelationLocalSimulativeReduceSinkOperator
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
name|children
init|=
name|op
operator|.
name|getChildOperators
argument_list|()
decl_stmt|;
assert|assert
name|children
operator|.
name|size
argument_list|()
operator|==
literal|1
assert|;
for|for
control|(
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|parent
range|:
name|children
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getParentOperators
argument_list|()
control|)
block|{
assert|assert
operator|(
name|parent
operator|instanceof
name|ReduceSinkOperator
operator|)
assert|;
name|peerReduceSinkOperators
operator|.
name|add
argument_list|(
operator|(
name|CorrelationLocalSimulativeReduceSinkOperator
operator|)
name|parent
argument_list|)
expr_stmt|;
block|}
return|return
name|peerReduceSinkOperators
return|;
block|}
specifier|public
specifier|static
name|boolean
name|applyCorrelation
parameter_list|(
name|IntraQueryCorrelation
name|correlation
parameter_list|,
name|ParseContext
name|inputpGraphContext
parameter_list|,
name|Map
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|ExprNodeDesc
argument_list|>
argument_list|>
name|originalOpColumnExprMap
parameter_list|,
name|Map
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|,
name|RowResolver
argument_list|>
name|originalOpRowResolver
parameter_list|,
name|Map
argument_list|<
name|ReduceSinkOperator
argument_list|,
name|GroupByOperator
argument_list|>
name|groupbyRegular2MapSide
parameter_list|,
name|Map
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|,
name|OpParseContext
argument_list|>
name|originalOpParseCtx
parameter_list|)
throws|throws
name|SemanticException
block|{
name|ParseContext
name|pGraphContext
init|=
name|inputpGraphContext
decl_stmt|;
comment|// 0: if necessary, replace RS-GBY to GBY-RS-GBY. In GBY-RS-GBY, the type of the first GBY is
comment|// hash, so it can group records
name|LOG
operator|.
name|info
argument_list|(
literal|"apply correlation step 0: replace RS-GBY to GBY-RS-GBY"
argument_list|)
expr_stmt|;
for|for
control|(
name|ReduceSinkOperator
name|rsop
range|:
name|correlation
operator|.
name|getRSGBYToBeReplacedByGBYRSGBY
argument_list|()
control|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"operator "
operator|+
name|rsop
operator|.
name|getIdentifier
argument_list|()
operator|+
literal|" should be replaced"
argument_list|)
expr_stmt|;
assert|assert
operator|!
name|correlation
operator|.
name|getBottomReduceSinkOperators
argument_list|()
operator|.
name|contains
argument_list|(
name|rsop
argument_list|)
assert|;
name|GroupByOperator
name|mapSideGBY
init|=
name|groupbyRegular2MapSide
operator|.
name|get
argument_list|(
name|rsop
argument_list|)
decl_stmt|;
assert|assert
operator|(
name|mapSideGBY
operator|.
name|getChildOperators
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getChildOperators
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|instanceof
name|GroupByOperator
operator|)
assert|;
name|ReduceSinkOperator
name|newRsop
init|=
operator|(
name|ReduceSinkOperator
operator|)
name|mapSideGBY
operator|.
name|getChildOperators
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|GroupByOperator
name|reduceSideGBY
init|=
operator|(
name|GroupByOperator
operator|)
name|newRsop
operator|.
name|getChildOperators
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|GroupByOperator
name|oldReduceSideGBY
init|=
operator|(
name|GroupByOperator
operator|)
name|rsop
operator|.
name|getChildOperators
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
name|parents
init|=
name|rsop
operator|.
name|getParentOperators
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
name|children
init|=
name|oldReduceSideGBY
operator|.
name|getChildOperators
argument_list|()
decl_stmt|;
name|mapSideGBY
operator|.
name|setParentOperators
argument_list|(
name|parents
argument_list|)
expr_stmt|;
for|for
control|(
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|parent
range|:
name|parents
control|)
block|{
name|parent
operator|.
name|replaceChild
argument_list|(
name|rsop
argument_list|,
name|mapSideGBY
argument_list|)
expr_stmt|;
block|}
name|reduceSideGBY
operator|.
name|setChildOperators
argument_list|(
name|children
argument_list|)
expr_stmt|;
for|for
control|(
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|child
range|:
name|children
control|)
block|{
name|child
operator|.
name|replaceParent
argument_list|(
name|oldReduceSideGBY
argument_list|,
name|reduceSideGBY
argument_list|)
expr_stmt|;
block|}
name|correlation
operator|.
name|getAllReduceSinkOperators
argument_list|()
operator|.
name|remove
argument_list|(
name|rsop
argument_list|)
expr_stmt|;
name|correlation
operator|.
name|getAllReduceSinkOperators
argument_list|()
operator|.
name|add
argument_list|(
name|newRsop
argument_list|)
expr_stmt|;
block|}
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|curr
decl_stmt|;
comment|// 1: Create table scan operator
name|LOG
operator|.
name|info
argument_list|(
literal|"apply correlation step 1: create table scan operator"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|TableScanOperator
argument_list|,
name|TableScanOperator
argument_list|>
name|oldTSOP2newTSOP
init|=
operator|new
name|HashMap
argument_list|<
name|TableScanOperator
argument_list|,
name|TableScanOperator
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
name|oldTopOps
init|=
name|pGraphContext
operator|.
name|getTopOps
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|,
name|String
argument_list|>
name|oldAliasIDtTopOps
init|=
name|getAliasIDtTopOps
argument_list|(
name|oldTopOps
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|TableScanOperator
argument_list|,
name|Table
argument_list|>
name|oldTopToTable
init|=
name|pGraphContext
operator|.
name|getTopToTable
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
name|addedTopOps
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|TableScanOperator
argument_list|,
name|Table
argument_list|>
name|addedTopToTable
init|=
operator|new
name|HashMap
argument_list|<
name|TableScanOperator
argument_list|,
name|Table
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|TableScanOperator
argument_list|>
argument_list|>
name|entry
range|:
name|correlation
operator|.
name|getTable2CorrelatedTSops
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|TableScanOperator
name|oldTSop
init|=
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|TableScanDesc
name|tsDesc
init|=
operator|new
name|TableScanDesc
argument_list|(
name|oldTSop
operator|.
name|getConf
argument_list|()
operator|.
name|getAlias
argument_list|()
argument_list|,
name|oldTSop
operator|.
name|getConf
argument_list|()
operator|.
name|getVirtualCols
argument_list|()
argument_list|)
decl_stmt|;
name|tsDesc
operator|.
name|setForwardRowNumber
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|OpParseContext
name|opParseCtx
init|=
name|pGraphContext
operator|.
name|getOpParseCtx
argument_list|()
operator|.
name|get
argument_list|(
name|oldTSop
argument_list|)
decl_stmt|;
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|top
init|=
name|putOpInsertMap
argument_list|(
name|OperatorFactory
operator|.
name|get
argument_list|(
name|tsDesc
argument_list|,
operator|new
name|RowSchema
argument_list|(
name|opParseCtx
operator|.
name|getRowResolver
argument_list|()
operator|.
name|getColumnInfos
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|opParseCtx
operator|.
name|getRowResolver
argument_list|()
argument_list|,
name|pGraphContext
operator|.
name|getOpParseCtx
argument_list|()
argument_list|)
decl_stmt|;
name|top
operator|.
name|setParentOperators
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|top
operator|.
name|setChildOperators
argument_list|(
name|Utilities
operator|.
name|makeList
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|TableScanOperator
name|tsop
range|:
name|entry
operator|.
name|getValue
argument_list|()
control|)
block|{
name|addedTopOps
operator|.
name|put
argument_list|(
name|oldAliasIDtTopOps
operator|.
name|get
argument_list|(
name|tsop
argument_list|)
argument_list|,
name|top
argument_list|)
expr_stmt|;
name|addedTopToTable
operator|.
name|put
argument_list|(
operator|(
name|TableScanOperator
operator|)
name|top
argument_list|,
name|oldTopToTable
operator|.
name|get
argument_list|(
name|tsop
argument_list|)
argument_list|)
expr_stmt|;
name|oldTSOP2newTSOP
operator|.
name|put
argument_list|(
name|tsop
argument_list|,
operator|(
name|TableScanOperator
operator|)
name|top
argument_list|)
expr_stmt|;
block|}
block|}
name|List
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
name|childrenOfDispatch
init|=
operator|new
name|ArrayList
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|ReduceSinkOperator
name|rsop
range|:
name|correlation
operator|.
name|getBottomReduceSinkOperators
argument_list|()
control|)
block|{
comment|// TODO: currently, correlation optimizer can not handle the case that
comment|// a table is directly connected to a post computation operator. e.g.
comment|//   Join
comment|//  /    \
comment|// GBY   T2
comment|// |
comment|// T1
if|if
condition|(
operator|!
name|correlation
operator|.
name|getBottomReduceSinkOperators
argument_list|()
operator|.
name|containsAll
argument_list|(
name|findPeerReduceSinkOperators
argument_list|(
name|rsop
argument_list|)
argument_list|)
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Can not handle the case that "
operator|+
literal|"a table is directly connected to a post computation operator. Use original plan"
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|op
init|=
name|rsop
operator|.
name|getChildOperators
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|childrenOfDispatch
operator|.
name|contains
argument_list|(
name|op
argument_list|)
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Add :"
operator|+
name|op
operator|.
name|getIdentifier
argument_list|()
operator|+
literal|" "
operator|+
name|op
operator|.
name|getName
argument_list|()
operator|+
literal|" to the children list of dispatch operator"
argument_list|)
expr_stmt|;
name|childrenOfDispatch
operator|.
name|add
argument_list|(
name|op
argument_list|)
expr_stmt|;
block|}
block|}
name|int
name|opTag
init|=
literal|0
decl_stmt|;
name|Map
argument_list|<
name|Integer
argument_list|,
name|ReduceSinkOperator
argument_list|>
name|operationPath2CorrelationReduceSinkOps
init|=
operator|new
name|HashMap
argument_list|<
name|Integer
argument_list|,
name|ReduceSinkOperator
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|ReduceSinkOperator
argument_list|>
argument_list|>
name|entry
range|:
name|correlation
operator|.
name|getTable2CorrelatedRSops
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
comment|// 2: Create select operator for shared operation paths
name|LOG
operator|.
name|info
argument_list|(
literal|"apply correlation step 2: create select operator for shared operation path for the table of "
operator|+
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|curr
operator|=
name|unionUsedColumnsAndMakeNewSelect
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|,
name|correlation
argument_list|,
name|originalOpColumnExprMap
argument_list|,
name|oldTSOP2newTSOP
operator|.
name|get
argument_list|(
name|correlation
operator|.
name|getBottom2TSops
argument_list|()
operator|.
name|get
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|,
name|pGraphContext
argument_list|,
name|originalOpParseCtx
argument_list|)
expr_stmt|;
comment|// 3: Create CorrelationCompositeOperator, CorrelationReduceSinkOperator
name|LOG
operator|.
name|info
argument_list|(
literal|"apply correlation step 3: create correlation composite Operator and correlation reduce sink operator for the table of "
operator|+
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|curr
operator|=
name|createCorrelationCompositeReducesinkOperaotr
argument_list|(
name|correlation
operator|.
name|getTable2CorrelatedTSops
argument_list|()
operator|.
name|get
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|,
name|correlation
argument_list|,
name|curr
argument_list|,
name|pGraphContext
argument_list|,
name|childrenOfDispatch
argument_list|,
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|originalOpColumnExprMap
argument_list|,
name|opTag
argument_list|,
name|originalOpRowResolver
argument_list|)
expr_stmt|;
name|operationPath2CorrelationReduceSinkOps
operator|.
name|put
argument_list|(
operator|new
name|Integer
argument_list|(
name|opTag
argument_list|)
argument_list|,
operator|(
name|ReduceSinkOperator
operator|)
name|curr
argument_list|)
expr_stmt|;
name|opTag
operator|++
expr_stmt|;
block|}
comment|// 4: Create correlation dispatch operator for operation paths
name|LOG
operator|.
name|info
argument_list|(
literal|"apply correlation step 4: create correlation dispatch operator for operation paths"
argument_list|)
expr_stmt|;
name|RowResolver
name|outputRS
init|=
operator|new
name|RowResolver
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
name|correlationReduceSinkOps
init|=
operator|new
name|ArrayList
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Entry
argument_list|<
name|Integer
argument_list|,
name|ReduceSinkOperator
argument_list|>
name|entry
range|:
name|operationPath2CorrelationReduceSinkOps
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|curr
operator|=
name|entry
operator|.
name|getValue
argument_list|()
expr_stmt|;
name|correlationReduceSinkOps
operator|.
name|add
argument_list|(
name|curr
argument_list|)
expr_stmt|;
name|RowResolver
name|inputRS
init|=
name|pGraphContext
operator|.
name|getOpParseCtx
argument_list|()
operator|.
name|get
argument_list|(
name|curr
argument_list|)
operator|.
name|getRowResolver
argument_list|()
decl_stmt|;
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ColumnInfo
argument_list|>
argument_list|>
name|e1
range|:
name|inputRS
operator|.
name|getRslvMap
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|ColumnInfo
argument_list|>
name|e2
range|:
name|e1
operator|.
name|getValue
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|outputRS
operator|.
name|put
argument_list|(
name|e1
operator|.
name|getKey
argument_list|()
argument_list|,
name|e2
operator|.
name|getKey
argument_list|()
argument_list|,
name|e2
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|dispatchOp
init|=
name|putOpInsertMap
argument_list|(
name|OperatorFactory
operator|.
name|get
argument_list|(
operator|new
name|CorrelationReducerDispatchDesc
argument_list|(
name|correlation
operator|.
name|getDispatchConf
argument_list|()
argument_list|,
name|correlation
operator|.
name|getDispatchKeySelectDescConf
argument_list|()
argument_list|,
name|correlation
operator|.
name|getDispatchValueSelectDescConf
argument_list|()
argument_list|)
argument_list|,
operator|new
name|RowSchema
argument_list|(
name|outputRS
operator|.
name|getColumnInfos
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|outputRS
argument_list|,
name|pGraphContext
operator|.
name|getOpParseCtx
argument_list|()
argument_list|)
decl_stmt|;
name|dispatchOp
operator|.
name|setParentOperators
argument_list|(
name|correlationReduceSinkOps
argument_list|)
expr_stmt|;
for|for
control|(
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|thisOp
range|:
name|correlationReduceSinkOps
control|)
block|{
name|thisOp
operator|.
name|setChildOperators
argument_list|(
name|Utilities
operator|.
name|makeList
argument_list|(
name|dispatchOp
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// 5: Replace the old plan in the original plan tree with new plan
name|LOG
operator|.
name|info
argument_list|(
literal|"apply correlation step 5: Replace the old plan in the original plan tree with the new plan"
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
name|processed
init|=
operator|new
name|HashSet
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|op
range|:
name|childrenOfDispatch
control|)
block|{
name|List
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
name|parents
init|=
operator|new
name|ArrayList
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|oldParent
range|:
name|op
operator|.
name|getParentOperators
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|correlation
operator|.
name|getBottomReduceSinkOperators
argument_list|()
operator|.
name|contains
argument_list|(
name|oldParent
argument_list|)
condition|)
block|{
name|parents
operator|.
name|add
argument_list|(
name|oldParent
argument_list|)
expr_stmt|;
block|}
block|}
name|parents
operator|.
name|add
argument_list|(
name|dispatchOp
argument_list|)
expr_stmt|;
name|op
operator|.
name|setParentOperators
argument_list|(
name|parents
argument_list|)
expr_stmt|;
block|}
name|dispatchOp
operator|.
name|setChildOperators
argument_list|(
name|childrenOfDispatch
argument_list|)
expr_stmt|;
name|HashMap
argument_list|<
name|String
argument_list|,
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
name|newTopOps
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
name|entry
range|:
name|oldTopOps
operator|.
name|entrySet
argument_list|()
control|)
block|{
if|if
condition|(
name|addedTopOps
operator|.
name|containsKey
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
condition|)
block|{
name|newTopOps
operator|.
name|put
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|addedTopOps
operator|.
name|get
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|newTopOps
operator|.
name|put
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|pGraphContext
operator|.
name|setTopOps
argument_list|(
name|newTopOps
argument_list|)
expr_stmt|;
name|HashMap
argument_list|<
name|TableScanOperator
argument_list|,
name|Table
argument_list|>
name|newTopToTable
init|=
operator|new
name|HashMap
argument_list|<
name|TableScanOperator
argument_list|,
name|Table
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Entry
argument_list|<
name|TableScanOperator
argument_list|,
name|Table
argument_list|>
name|entry
range|:
name|oldTopToTable
operator|.
name|entrySet
argument_list|()
control|)
block|{
if|if
condition|(
name|addedTopToTable
operator|.
name|containsKey
argument_list|(
name|oldTSOP2newTSOP
operator|.
name|get
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|)
condition|)
block|{
name|newTopToTable
operator|.
name|put
argument_list|(
name|oldTSOP2newTSOP
operator|.
name|get
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|,
name|addedTopToTable
operator|.
name|get
argument_list|(
name|oldTSOP2newTSOP
operator|.
name|get
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|newTopToTable
operator|.
name|put
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|pGraphContext
operator|.
name|setTopToTable
argument_list|(
name|newTopToTable
argument_list|)
expr_stmt|;
comment|// 6: Change every JFC related ReduceSinkOperator to a
comment|// CorrelationLocalSimulativeReduceSinkOperator
name|LOG
operator|.
name|info
argument_list|(
literal|"apply correlation step 6: Change every JFC related reduce sink operator to a "
operator|+
literal|"CorrelationLocalSimulativeReduceSinkOperator"
argument_list|)
expr_stmt|;
for|for
control|(
name|ReduceSinkOperator
name|rsop
range|:
name|correlation
operator|.
name|getAllReduceSinkOperators
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|correlation
operator|.
name|getBottomReduceSinkOperators
argument_list|()
operator|.
name|contains
argument_list|(
name|rsop
argument_list|)
condition|)
block|{
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|childOP
init|=
name|rsop
operator|.
name|getChildOperators
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|parentOP
init|=
name|rsop
operator|.
name|getParentOperators
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|correlationLocalSimulativeReduceSinkOperator
init|=
name|putOpInsertMap
argument_list|(
name|OperatorFactory
operator|.
name|get
argument_list|(
operator|new
name|CorrelationLocalSimulativeReduceSinkDesc
argument_list|(
name|rsop
operator|.
name|getConf
argument_list|()
argument_list|)
argument_list|,
operator|new
name|RowSchema
argument_list|(
name|pGraphContext
operator|.
name|getOpParseCtx
argument_list|()
operator|.
name|get
argument_list|(
name|rsop
argument_list|)
operator|.
name|getRowResolver
argument_list|()
operator|.
name|getColumnInfos
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|pGraphContext
operator|.
name|getOpParseCtx
argument_list|()
operator|.
name|get
argument_list|(
name|rsop
argument_list|)
operator|.
name|getRowResolver
argument_list|()
argument_list|,
name|pGraphContext
operator|.
name|getOpParseCtx
argument_list|()
argument_list|)
decl_stmt|;
name|correlationLocalSimulativeReduceSinkOperator
operator|.
name|setChildOperators
argument_list|(
name|Utilities
operator|.
name|makeList
argument_list|(
name|childOP
argument_list|)
argument_list|)
expr_stmt|;
name|correlationLocalSimulativeReduceSinkOperator
operator|.
name|setParentOperators
argument_list|(
name|Utilities
operator|.
name|makeList
argument_list|(
name|parentOP
argument_list|)
argument_list|)
expr_stmt|;
name|parentOP
operator|.
name|getChildOperators
argument_list|()
operator|.
name|set
argument_list|(
name|parentOP
operator|.
name|getChildOperators
argument_list|()
operator|.
name|indexOf
argument_list|(
name|rsop
argument_list|)
argument_list|,
name|correlationLocalSimulativeReduceSinkOperator
argument_list|)
expr_stmt|;
name|childOP
operator|.
name|getParentOperators
argument_list|()
operator|.
name|set
argument_list|(
name|childOP
operator|.
name|getParentOperators
argument_list|()
operator|.
name|indexOf
argument_list|(
name|rsop
argument_list|)
argument_list|,
name|correlationLocalSimulativeReduceSinkOperator
argument_list|)
expr_stmt|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
specifier|static
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|createCorrelationCompositeReducesinkOperaotr
parameter_list|(
name|List
argument_list|<
name|TableScanOperator
argument_list|>
name|tsops
parameter_list|,
name|List
argument_list|<
name|ReduceSinkOperator
argument_list|>
name|rsops
parameter_list|,
name|IntraQueryCorrelation
name|correlation
parameter_list|,
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|input
parameter_list|,
name|ParseContext
name|pGraphContext
parameter_list|,
name|List
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
name|childrenOfDispatch
parameter_list|,
name|String
name|tableName
parameter_list|,
name|Map
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|ExprNodeDesc
argument_list|>
argument_list|>
name|originalOpColumnExprMap
parameter_list|,
name|int
name|newTag
parameter_list|,
name|Map
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|,
name|RowResolver
argument_list|>
name|originalOpRowResolver
parameter_list|)
throws|throws
name|SemanticException
block|{
comment|// Create CorrelationCompositeOperator
name|RowResolver
name|inputRR
init|=
name|pGraphContext
operator|.
name|getOpParseCtx
argument_list|()
operator|.
name|get
argument_list|(
name|input
argument_list|)
operator|.
name|getRowResolver
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
name|tops
init|=
operator|new
name|ArrayList
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
name|bottoms
init|=
operator|new
name|ArrayList
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Integer
argument_list|>
name|opTags
init|=
operator|new
name|ArrayList
argument_list|<
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|ReduceSinkOperator
name|rsop
range|:
name|rsops
control|)
block|{
name|TableScanOperator
name|tsop
init|=
name|correlation
operator|.
name|getBottom2TSops
argument_list|()
operator|.
name|get
argument_list|(
name|rsop
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|curr
init|=
name|tsop
operator|.
name|getChildOperators
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
name|curr
operator|==
name|rsop
condition|)
block|{
comment|// no filter needed, just forward
name|ForwardDesc
name|forwardCtx
init|=
operator|new
name|ForwardDesc
argument_list|()
decl_stmt|;
name|Operator
argument_list|<
name|ForwardDesc
argument_list|>
name|forwardOp
init|=
name|OperatorFactory
operator|.
name|get
argument_list|(
name|ForwardDesc
operator|.
name|class
argument_list|)
decl_stmt|;
name|forwardOp
operator|.
name|setConf
argument_list|(
name|forwardCtx
argument_list|)
expr_stmt|;
name|tops
operator|.
name|add
argument_list|(
name|forwardOp
argument_list|)
expr_stmt|;
name|bottoms
operator|.
name|add
argument_list|(
name|forwardOp
argument_list|)
expr_stmt|;
name|opTags
operator|.
name|add
argument_list|(
name|correlation
operator|.
name|getBottomReduceSink2OperationPathMap
argument_list|()
operator|.
name|get
argument_list|(
name|rsop
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// Add filter operator
name|FilterOperator
name|currFilOp
init|=
literal|null
decl_stmt|;
while|while
condition|(
name|curr
operator|!=
name|rsop
condition|)
block|{
if|if
condition|(
name|curr
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"FIL"
argument_list|)
condition|)
block|{
name|FilterOperator
name|fil
init|=
operator|(
name|FilterOperator
operator|)
name|curr
decl_stmt|;
name|FilterDesc
name|filterCtx
init|=
operator|new
name|FilterDesc
argument_list|(
name|fil
operator|.
name|getConf
argument_list|()
operator|.
name|getPredicate
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|Operator
argument_list|<
name|FilterDesc
argument_list|>
name|nowFilOp
init|=
name|OperatorFactory
operator|.
name|get
argument_list|(
name|FilterDesc
operator|.
name|class
argument_list|)
decl_stmt|;
name|nowFilOp
operator|.
name|setConf
argument_list|(
name|filterCtx
argument_list|)
expr_stmt|;
if|if
condition|(
name|currFilOp
operator|==
literal|null
condition|)
block|{
name|currFilOp
operator|=
operator|(
name|FilterOperator
operator|)
name|nowFilOp
expr_stmt|;
name|tops
operator|.
name|add
argument_list|(
name|currFilOp
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|nowFilOp
operator|.
name|setParentOperators
argument_list|(
name|Utilities
operator|.
name|makeList
argument_list|(
name|currFilOp
argument_list|)
argument_list|)
expr_stmt|;
name|currFilOp
operator|.
name|setChildOperators
argument_list|(
name|Utilities
operator|.
name|makeList
argument_list|(
name|nowFilOp
argument_list|)
argument_list|)
expr_stmt|;
name|currFilOp
operator|=
operator|(
name|FilterOperator
operator|)
name|nowFilOp
expr_stmt|;
block|}
block|}
name|curr
operator|=
name|curr
operator|.
name|getChildOperators
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|currFilOp
operator|==
literal|null
condition|)
block|{
name|ForwardDesc
name|forwardCtx
init|=
operator|new
name|ForwardDesc
argument_list|()
decl_stmt|;
name|Operator
argument_list|<
name|ForwardDesc
argument_list|>
name|forwardOp
init|=
name|OperatorFactory
operator|.
name|get
argument_list|(
name|ForwardDesc
operator|.
name|class
argument_list|)
decl_stmt|;
name|forwardOp
operator|.
name|setConf
argument_list|(
name|forwardCtx
argument_list|)
expr_stmt|;
name|tops
operator|.
name|add
argument_list|(
name|forwardOp
argument_list|)
expr_stmt|;
name|bottoms
operator|.
name|add
argument_list|(
name|forwardOp
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bottoms
operator|.
name|add
argument_list|(
name|currFilOp
argument_list|)
expr_stmt|;
block|}
name|opTags
operator|.
name|add
argument_list|(
name|correlation
operator|.
name|getBottomReduceSink2OperationPathMap
argument_list|()
operator|.
name|get
argument_list|(
name|rsop
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|int
index|[]
name|opTagsArray
init|=
operator|new
name|int
index|[
name|opTags
operator|.
name|size
argument_list|()
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|opTags
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|opTagsArray
index|[
name|i
index|]
operator|=
name|opTags
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|intValue
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|op
range|:
name|bottoms
control|)
block|{
name|op
operator|.
name|setParentOperators
argument_list|(
name|Utilities
operator|.
name|makeList
argument_list|(
name|input
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|input
operator|.
name|setChildOperators
argument_list|(
name|bottoms
argument_list|)
expr_stmt|;
name|CorrelationCompositeDesc
name|ycoCtx
init|=
operator|new
name|CorrelationCompositeDesc
argument_list|()
decl_stmt|;
name|ycoCtx
operator|.
name|setAllOperationPathTags
argument_list|(
name|opTagsArray
argument_list|)
expr_stmt|;
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|ycop
init|=
name|putOpInsertMap
argument_list|(
name|OperatorFactory
operator|.
name|get
argument_list|(
name|ycoCtx
argument_list|,
operator|new
name|RowSchema
argument_list|(
name|inputRR
operator|.
name|getColumnInfos
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|inputRR
argument_list|,
name|pGraphContext
operator|.
name|getOpParseCtx
argument_list|()
argument_list|)
decl_stmt|;
name|ycop
operator|.
name|setParentOperators
argument_list|(
name|tops
argument_list|)
expr_stmt|;
for|for
control|(
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|op
range|:
name|tops
control|)
block|{
name|op
operator|.
name|setChildOperators
argument_list|(
name|Utilities
operator|.
name|makeList
argument_list|(
name|ycop
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Create CorrelationReduceSinkOperator
name|ArrayList
argument_list|<
name|ExprNodeDesc
argument_list|>
name|partitionCols
init|=
operator|new
name|ArrayList
argument_list|<
name|ExprNodeDesc
argument_list|>
argument_list|()
decl_stmt|;
name|ArrayList
argument_list|<
name|ExprNodeDesc
argument_list|>
name|keyCols
init|=
operator|new
name|ArrayList
argument_list|<
name|ExprNodeDesc
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|ExprNodeDesc
argument_list|>
name|colExprMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|ExprNodeDesc
argument_list|>
argument_list|()
decl_stmt|;
name|ArrayList
argument_list|<
name|String
argument_list|>
name|keyOutputColumnNames
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|ReduceSinkOperator
name|firstRsop
init|=
name|rsops
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|RowResolver
name|firstRsopRS
init|=
name|pGraphContext
operator|.
name|getOpParseCtx
argument_list|()
operator|.
name|get
argument_list|(
name|firstRsop
argument_list|)
operator|.
name|getRowResolver
argument_list|()
decl_stmt|;
name|RowResolver
name|orginalFirstRsopRS
init|=
name|originalOpRowResolver
operator|.
name|get
argument_list|(
name|firstRsop
argument_list|)
decl_stmt|;
name|RowResolver
name|outputRS
init|=
operator|new
name|RowResolver
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|ExprNodeColumnDesc
argument_list|>
name|keyCol2ExprForDispatch
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|ExprNodeColumnDesc
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|ExprNodeColumnDesc
argument_list|>
name|valueCol2ExprForDispatch
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|ExprNodeColumnDesc
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|ExprNodeDesc
name|expr
range|:
name|firstRsop
operator|.
name|getConf
argument_list|()
operator|.
name|getKeyCols
argument_list|()
control|)
block|{
assert|assert
name|expr
operator|instanceof
name|ExprNodeColumnDesc
assert|;
name|ExprNodeColumnDesc
name|encd
init|=
operator|(
name|ExprNodeColumnDesc
operator|)
name|expr
decl_stmt|;
name|String
name|ouputName
init|=
name|getColumnName
argument_list|(
name|originalOpColumnExprMap
operator|.
name|get
argument_list|(
name|firstRsop
argument_list|)
argument_list|,
name|expr
argument_list|)
decl_stmt|;
name|ColumnInfo
name|cinfo
init|=
name|orginalFirstRsopRS
operator|.
name|getColumnInfos
argument_list|()
operator|.
name|get
argument_list|(
name|orginalFirstRsopRS
operator|.
name|getPosition
argument_list|(
name|ouputName
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|col
init|=
name|SemanticAnalyzer
operator|.
name|getColumnInternalName
argument_list|(
name|keyCols
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|keyOutputColumnNames
operator|.
name|add
argument_list|(
name|col
argument_list|)
expr_stmt|;
name|ColumnInfo
name|newColInfo
init|=
operator|new
name|ColumnInfo
argument_list|(
name|col
argument_list|,
name|cinfo
operator|.
name|getType
argument_list|()
argument_list|,
name|tableName
argument_list|,
name|cinfo
operator|.
name|getIsVirtualCol
argument_list|()
argument_list|,
name|cinfo
operator|.
name|isHiddenVirtualCol
argument_list|()
argument_list|)
decl_stmt|;
name|colExprMap
operator|.
name|put
argument_list|(
name|newColInfo
operator|.
name|getInternalName
argument_list|()
argument_list|,
name|expr
argument_list|)
expr_stmt|;
name|outputRS
operator|.
name|put
argument_list|(
name|tableName
argument_list|,
name|newColInfo
operator|.
name|getInternalName
argument_list|()
argument_list|,
name|newColInfo
argument_list|)
expr_stmt|;
name|keyCols
operator|.
name|add
argument_list|(
name|expr
argument_list|)
expr_stmt|;
name|keyCol2ExprForDispatch
operator|.
name|put
argument_list|(
name|encd
operator|.
name|getColumn
argument_list|()
argument_list|,
operator|new
name|ExprNodeColumnDesc
argument_list|(
name|cinfo
operator|.
name|getType
argument_list|()
argument_list|,
name|col
argument_list|,
name|tableName
argument_list|,
name|encd
operator|.
name|getIsPartitionColOrVirtualCol
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|ArrayList
argument_list|<
name|ExprNodeDesc
argument_list|>
name|valueCols
init|=
operator|new
name|ArrayList
argument_list|<
name|ExprNodeDesc
argument_list|>
argument_list|()
decl_stmt|;
name|ArrayList
argument_list|<
name|String
argument_list|>
name|valueOutputColumnNames
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|correlation
operator|.
name|addOperationPathToDispatchConf
argument_list|(
name|newTag
argument_list|)
expr_stmt|;
name|correlation
operator|.
name|addOperationPathToDispatchKeySelectDescConf
argument_list|(
name|newTag
argument_list|)
expr_stmt|;
name|correlation
operator|.
name|addOperationPathToDispatchValueSelectDescConf
argument_list|(
name|newTag
argument_list|)
expr_stmt|;
for|for
control|(
name|ReduceSinkOperator
name|rsop
range|:
name|rsops
control|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Analyzing ReduceSinkOperator "
operator|+
name|rsop
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|RowResolver
name|rs
init|=
name|pGraphContext
operator|.
name|getOpParseCtx
argument_list|()
operator|.
name|get
argument_list|(
name|rsop
argument_list|)
operator|.
name|getRowResolver
argument_list|()
decl_stmt|;
name|RowResolver
name|orginalRS
init|=
name|originalOpRowResolver
operator|.
name|get
argument_list|(
name|rsop
argument_list|)
decl_stmt|;
name|Integer
name|childOpIndex
init|=
name|childrenOfDispatch
operator|.
name|indexOf
argument_list|(
name|rsop
operator|.
name|getChildOperators
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|outputTag
init|=
name|rsop
operator|.
name|getConf
argument_list|()
operator|.
name|getTag
argument_list|()
decl_stmt|;
if|if
condition|(
name|outputTag
operator|==
operator|-
literal|1
condition|)
block|{
name|outputTag
operator|=
literal|0
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|correlation
operator|.
name|getDispatchConfForOperationPath
argument_list|(
name|newTag
argument_list|)
operator|.
name|containsKey
argument_list|(
name|childOpIndex
argument_list|)
condition|)
block|{
name|correlation
operator|.
name|getDispatchConfForOperationPath
argument_list|(
name|newTag
argument_list|)
operator|.
name|put
argument_list|(
name|childOpIndex
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|Integer
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|correlation
operator|.
name|getDispatchConfForOperationPath
argument_list|(
name|newTag
argument_list|)
operator|.
name|get
argument_list|(
name|childOpIndex
argument_list|)
operator|.
name|add
argument_list|(
name|outputTag
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|ExprNodeDesc
argument_list|>
name|thisKeyColsInDispatch
init|=
operator|new
name|ArrayList
argument_list|<
name|ExprNodeDesc
argument_list|>
argument_list|()
decl_stmt|;
name|ArrayList
argument_list|<
name|String
argument_list|>
name|outputKeyNamesInDispatch
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|ExprNodeDesc
name|expr
range|:
name|rsop
operator|.
name|getConf
argument_list|()
operator|.
name|getKeyCols
argument_list|()
control|)
block|{
assert|assert
name|expr
operator|instanceof
name|ExprNodeColumnDesc
assert|;
name|ExprNodeColumnDesc
name|encd
init|=
operator|(
name|ExprNodeColumnDesc
operator|)
name|expr
decl_stmt|;
name|String
name|outputName
init|=
name|getColumnName
argument_list|(
name|originalOpColumnExprMap
operator|.
name|get
argument_list|(
name|rsop
argument_list|)
argument_list|,
name|expr
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"key column: "
operator|+
name|outputName
argument_list|)
expr_stmt|;
name|thisKeyColsInDispatch
operator|.
name|add
argument_list|(
name|keyCol2ExprForDispatch
operator|.
name|get
argument_list|(
name|encd
operator|.
name|getColumn
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|String
index|[]
name|names
init|=
name|outputName
operator|.
name|split
argument_list|(
literal|"\\."
argument_list|)
decl_stmt|;
name|String
name|outputKeyName
init|=
literal|""
decl_stmt|;
switch|switch
condition|(
name|names
operator|.
name|length
condition|)
block|{
case|case
literal|1
case|:
name|outputKeyName
operator|=
name|names
index|[
literal|0
index|]
expr_stmt|;
break|break;
case|case
literal|2
case|:
name|outputKeyName
operator|=
name|names
index|[
literal|1
index|]
expr_stmt|;
break|break;
default|default:
throw|throw
operator|(
operator|new
name|SemanticException
argument_list|(
literal|"found a un-sopported internal key name structure"
argument_list|)
operator|)
throw|;
block|}
name|outputKeyNamesInDispatch
operator|.
name|add
argument_list|(
name|outputKeyName
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|correlation
operator|.
name|getDispatchKeySelectDescConfForOperationPath
argument_list|(
name|newTag
argument_list|)
operator|.
name|containsKey
argument_list|(
name|childOpIndex
argument_list|)
condition|)
block|{
name|correlation
operator|.
name|getDispatchKeySelectDescConfForOperationPath
argument_list|(
name|newTag
argument_list|)
operator|.
name|put
argument_list|(
name|childOpIndex
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|SelectDesc
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|correlation
operator|.
name|getDispatchKeySelectDescConfForOperationPath
argument_list|(
name|newTag
argument_list|)
operator|.
name|get
argument_list|(
name|childOpIndex
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|SelectDesc
argument_list|(
name|thisKeyColsInDispatch
argument_list|,
name|outputKeyNamesInDispatch
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|ExprNodeDesc
argument_list|>
name|thisValueColsInDispatch
init|=
operator|new
name|ArrayList
argument_list|<
name|ExprNodeDesc
argument_list|>
argument_list|()
decl_stmt|;
name|ArrayList
argument_list|<
name|String
argument_list|>
name|outputValueNamesInDispatch
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|ExprNodeDesc
name|expr
range|:
name|rsop
operator|.
name|getConf
argument_list|()
operator|.
name|getValueCols
argument_list|()
control|)
block|{
name|String
name|outputName
init|=
name|getColumnName
argument_list|(
name|originalOpColumnExprMap
operator|.
name|get
argument_list|(
name|rsop
argument_list|)
argument_list|,
name|expr
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"value column: "
operator|+
name|outputName
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"originalOpColumnExprMap.get(rsop):"
operator|+
name|originalOpColumnExprMap
operator|.
name|get
argument_list|(
name|rsop
argument_list|)
operator|+
literal|" expr:"
operator|+
name|expr
operator|.
name|toString
argument_list|()
operator|+
literal|" orginalRS.getColumnInfos().toString:"
operator|+
name|orginalRS
operator|.
name|getColumnInfos
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
literal|" "
operator|+
name|outputName
argument_list|)
expr_stmt|;
name|ColumnInfo
name|cinfo
init|=
name|orginalRS
operator|.
name|getColumnInfos
argument_list|()
operator|.
name|get
argument_list|(
name|orginalRS
operator|.
name|getPosition
argument_list|(
name|outputName
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|valueCol2ExprForDispatch
operator|.
name|containsKey
argument_list|(
name|expr
operator|.
name|getExprString
argument_list|()
argument_list|)
condition|)
block|{
name|String
name|col
init|=
name|SemanticAnalyzer
operator|.
name|getColumnInternalName
argument_list|(
name|keyCols
operator|.
name|size
argument_list|()
operator|+
name|valueCols
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|valueOutputColumnNames
operator|.
name|add
argument_list|(
name|col
argument_list|)
expr_stmt|;
name|ColumnInfo
name|newColInfo
init|=
operator|new
name|ColumnInfo
argument_list|(
name|col
argument_list|,
name|cinfo
operator|.
name|getType
argument_list|()
argument_list|,
name|tableName
argument_list|,
name|cinfo
operator|.
name|getIsVirtualCol
argument_list|()
argument_list|,
name|cinfo
operator|.
name|isHiddenVirtualCol
argument_list|()
argument_list|)
decl_stmt|;
name|colExprMap
operator|.
name|put
argument_list|(
name|newColInfo
operator|.
name|getInternalName
argument_list|()
argument_list|,
name|expr
argument_list|)
expr_stmt|;
name|outputRS
operator|.
name|put
argument_list|(
name|tableName
argument_list|,
name|newColInfo
operator|.
name|getInternalName
argument_list|()
argument_list|,
name|newColInfo
argument_list|)
expr_stmt|;
name|valueCols
operator|.
name|add
argument_list|(
name|expr
argument_list|)
expr_stmt|;
name|valueCol2ExprForDispatch
operator|.
name|put
argument_list|(
name|expr
operator|.
name|getExprString
argument_list|()
argument_list|,
operator|new
name|ExprNodeColumnDesc
argument_list|(
name|cinfo
operator|.
name|getType
argument_list|()
argument_list|,
name|col
argument_list|,
name|tableName
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|thisValueColsInDispatch
operator|.
name|add
argument_list|(
name|valueCol2ExprForDispatch
operator|.
name|get
argument_list|(
name|expr
operator|.
name|getExprString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|String
index|[]
name|names
init|=
name|outputName
operator|.
name|split
argument_list|(
literal|"\\."
argument_list|)
decl_stmt|;
name|String
name|outputValueName
init|=
literal|""
decl_stmt|;
switch|switch
condition|(
name|names
operator|.
name|length
condition|)
block|{
case|case
literal|1
case|:
name|outputValueName
operator|=
name|names
index|[
literal|0
index|]
expr_stmt|;
break|break;
case|case
literal|2
case|:
name|outputValueName
operator|=
name|names
index|[
literal|1
index|]
expr_stmt|;
break|break;
default|default:
throw|throw
operator|(
operator|new
name|SemanticException
argument_list|(
literal|"found a un-sopported internal value name structure"
argument_list|)
operator|)
throw|;
block|}
name|outputValueNamesInDispatch
operator|.
name|add
argument_list|(
name|outputValueName
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|correlation
operator|.
name|getDispatchValueSelectDescConfForOperationPath
argument_list|(
name|newTag
argument_list|)
operator|.
name|containsKey
argument_list|(
name|childOpIndex
argument_list|)
condition|)
block|{
name|correlation
operator|.
name|getDispatchValueSelectDescConfForOperationPath
argument_list|(
name|newTag
argument_list|)
operator|.
name|put
argument_list|(
name|childOpIndex
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|SelectDesc
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|correlation
operator|.
name|getDispatchValueSelectDescConfForOperationPath
argument_list|(
name|newTag
argument_list|)
operator|.
name|get
argument_list|(
name|childOpIndex
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|SelectDesc
argument_list|(
name|thisValueColsInDispatch
argument_list|,
name|outputValueNamesInDispatch
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|ReduceSinkOperator
name|rsOp
init|=
literal|null
decl_stmt|;
name|rsOp
operator|=
operator|(
name|ReduceSinkOperator
operator|)
name|putOpInsertMap
argument_list|(
name|OperatorFactory
operator|.
name|getAndMakeChild
argument_list|(
name|getReduceSinkDesc
argument_list|(
name|keyCols
argument_list|,
name|keyCols
operator|.
name|size
argument_list|()
argument_list|,
name|valueCols
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|List
argument_list|<
name|Integer
argument_list|>
argument_list|>
argument_list|()
argument_list|,
name|keyOutputColumnNames
argument_list|,
name|valueOutputColumnNames
argument_list|,
literal|true
argument_list|,
name|newTag
argument_list|,
name|keyCols
operator|.
name|size
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
operator|new
name|RowSchema
argument_list|(
name|outputRS
operator|.
name|getColumnInfos
argument_list|()
argument_list|)
argument_list|,
name|ycop
argument_list|)
argument_list|,
name|outputRS
argument_list|,
name|pGraphContext
operator|.
name|getOpParseCtx
argument_list|()
argument_list|)
expr_stmt|;
name|rsOp
operator|.
name|setColumnExprMap
argument_list|(
name|colExprMap
argument_list|)
expr_stmt|;
operator|(
operator|(
name|CorrelationCompositeOperator
operator|)
name|ycop
operator|)
operator|.
name|getConf
argument_list|()
operator|.
name|setCorrespondingReduceSinkOperator
argument_list|(
name|rsOp
argument_list|)
expr_stmt|;
return|return
name|rsOp
return|;
block|}
comment|/**    * Generate reduce sink descriptor.    *    * @param keyCols    *          The columns to be stored in the key    * @param numKeys    *          number of distribution keys. Equals to group-by-key    *          numbers usually.    * @param valueCols    *          The columns to be stored in the value    * @param distinctColIndices    *          column indices for distinct aggregates    * @param outputKeyColumnNames    *          The output key columns names    * @param outputValueColumnNames    *          The output value columns names    * @param tag    *          The tag for this ReduceSinkOperator    * @param numPartitionFields    *          The first numPartitionFields of keyCols will be partition columns.    *          If numPartitionFields=-1, then partition randomly.    * @param numReducers    *          The number of reducers, set to -1 for automatic inference based on    *          input data size.    * @return ReduceSinkDesc.    */
specifier|public
specifier|static
name|ReduceSinkDesc
name|getReduceSinkDesc
parameter_list|(
name|ArrayList
argument_list|<
name|ExprNodeDesc
argument_list|>
name|keyCols
parameter_list|,
name|int
name|numKeys
parameter_list|,
name|ArrayList
argument_list|<
name|ExprNodeDesc
argument_list|>
name|valueCols
parameter_list|,
name|List
argument_list|<
name|List
argument_list|<
name|Integer
argument_list|>
argument_list|>
name|distinctColIndices
parameter_list|,
name|ArrayList
argument_list|<
name|String
argument_list|>
name|outputKeyColumnNames
parameter_list|,
name|ArrayList
argument_list|<
name|String
argument_list|>
name|outputValueColumnNames
parameter_list|,
name|boolean
name|includeKey
parameter_list|,
name|int
name|tag
parameter_list|,
name|int
name|numPartitionFields
parameter_list|,
name|int
name|numReducers
parameter_list|)
throws|throws
name|SemanticException
block|{
name|ArrayList
argument_list|<
name|ExprNodeDesc
argument_list|>
name|partitionCols
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|numPartitionFields
operator|>=
name|keyCols
operator|.
name|size
argument_list|()
condition|)
block|{
name|partitionCols
operator|=
name|keyCols
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|numPartitionFields
operator|>=
literal|0
condition|)
block|{
name|partitionCols
operator|=
operator|new
name|ArrayList
argument_list|<
name|ExprNodeDesc
argument_list|>
argument_list|(
name|numPartitionFields
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numPartitionFields
condition|;
name|i
operator|++
control|)
block|{
name|partitionCols
operator|.
name|add
argument_list|(
name|keyCols
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
comment|// numPartitionFields = -1 means random partitioning
name|partitionCols
operator|=
operator|new
name|ArrayList
argument_list|<
name|ExprNodeDesc
argument_list|>
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|partitionCols
operator|.
name|add
argument_list|(
name|TypeCheckProcFactory
operator|.
name|DefaultExprProcessor
operator|.
name|getFuncExprNodeDesc
argument_list|(
literal|"rand"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|StringBuilder
name|order
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|keyCols
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|order
operator|.
name|append
argument_list|(
literal|"+"
argument_list|)
expr_stmt|;
block|}
name|TableDesc
name|keyTable
init|=
literal|null
decl_stmt|;
name|TableDesc
name|valueTable
init|=
literal|null
decl_stmt|;
name|ArrayList
argument_list|<
name|String
argument_list|>
name|outputKeyCols
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|ArrayList
argument_list|<
name|String
argument_list|>
name|outputValCols
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|includeKey
condition|)
block|{
name|keyTable
operator|=
name|PlanUtils
operator|.
name|getReduceKeyTableDesc
argument_list|(
name|PlanUtils
operator|.
name|getFieldSchemasFromColumnListWithLength
argument_list|(
name|keyCols
argument_list|,
name|distinctColIndices
argument_list|,
name|outputKeyColumnNames
argument_list|,
name|numKeys
argument_list|,
literal|""
argument_list|)
argument_list|,
name|order
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|outputKeyCols
operator|.
name|addAll
argument_list|(
name|outputKeyColumnNames
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|keyTable
operator|=
name|PlanUtils
operator|.
name|getReduceKeyTableDesc
argument_list|(
name|PlanUtils
operator|.
name|getFieldSchemasFromColumnList
argument_list|(
name|keyCols
argument_list|,
literal|"reducesinkkey"
argument_list|)
argument_list|,
name|order
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|keyCols
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|outputKeyCols
operator|.
name|add
argument_list|(
literal|"reducesinkkey"
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
block|}
name|valueTable
operator|=
name|PlanUtils
operator|.
name|getReduceValueTableDesc
argument_list|(
name|PlanUtils
operator|.
name|getFieldSchemasFromColumnList
argument_list|(
name|valueCols
argument_list|,
name|outputValueColumnNames
argument_list|,
literal|0
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|outputValCols
operator|.
name|addAll
argument_list|(
name|outputValueColumnNames
argument_list|)
expr_stmt|;
return|return
operator|new
name|ReduceSinkDesc
argument_list|(
name|keyCols
argument_list|,
name|numKeys
argument_list|,
name|valueCols
argument_list|,
name|outputKeyCols
argument_list|,
name|distinctColIndices
argument_list|,
name|outputValCols
argument_list|,
name|tag
argument_list|,
name|partitionCols
argument_list|,
name|numReducers
argument_list|,
name|keyTable
argument_list|,
name|valueTable
argument_list|,
literal|true
argument_list|)
return|;
block|}
block|}
end_class

end_unit

