begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|AuthorizationException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|InvocationHandler
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|InvocationTargetException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Proxy
import|;
end_import

begin_class
specifier|public
class|class
name|AuthorizationFactory
block|{
specifier|public
specifier|static
name|HiveAuthorizationProvider
name|create
parameter_list|(
name|HiveAuthorizationProvider
name|delegated
parameter_list|)
block|{
return|return
name|create
argument_list|(
name|delegated
argument_list|,
operator|new
name|DefaultAuthorizationExceptionHandler
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|HiveAuthorizationProvider
name|create
parameter_list|(
specifier|final
name|HiveAuthorizationProvider
name|delegated
parameter_list|,
specifier|final
name|AuthorizationExceptionHandler
name|handler
parameter_list|)
block|{
name|InvocationHandler
name|invocation
init|=
operator|new
name|InvocationHandler
argument_list|()
block|{
specifier|public
name|Object
name|invoke
parameter_list|(
name|Object
name|proxy
parameter_list|,
name|Method
name|method
parameter_list|,
name|Object
index|[]
name|args
parameter_list|)
throws|throws
name|Throwable
block|{
name|invokeAuth
argument_list|(
name|method
argument_list|,
name|args
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
specifier|private
name|void
name|invokeAuth
parameter_list|(
name|Method
name|method
parameter_list|,
name|Object
index|[]
name|args
parameter_list|)
throws|throws
name|Throwable
block|{
try|try
block|{
name|method
operator|.
name|invoke
argument_list|(
name|delegated
argument_list|,
name|args
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InvocationTargetException
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getTargetException
argument_list|()
operator|instanceof
name|AuthorizationException
condition|)
block|{
name|handler
operator|.
name|exception
argument_list|(
operator|(
name|AuthorizationException
operator|)
name|e
operator|.
name|getTargetException
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
decl_stmt|;
return|return
operator|(
name|HiveAuthorizationProvider
operator|)
name|Proxy
operator|.
name|newProxyInstance
argument_list|(
name|AuthorizationFactory
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
argument_list|,
operator|new
name|Class
index|[]
block|{
name|HiveAuthorizationProvider
operator|.
name|class
block|}
argument_list|,
name|invocation
argument_list|)
return|;
block|}
specifier|public
specifier|static
interface|interface
name|AuthorizationExceptionHandler
block|{
name|void
name|exception
parameter_list|(
name|AuthorizationException
name|exception
parameter_list|)
throws|throws
name|AuthorizationException
function_decl|;
block|}
specifier|public
specifier|static
class|class
name|DefaultAuthorizationExceptionHandler
implements|implements
name|AuthorizationExceptionHandler
block|{
specifier|public
name|void
name|exception
parameter_list|(
name|AuthorizationException
name|exception
parameter_list|)
block|{
throw|throw
name|exception
throw|;
block|}
block|}
block|}
end_class

end_unit

