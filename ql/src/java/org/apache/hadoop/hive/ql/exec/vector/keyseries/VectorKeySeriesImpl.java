begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|vector
operator|.
name|keyseries
package|;
end_package

begin_comment
comment|/**  * A base implementation of VectorKeySeries.  *  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|VectorKeySeriesImpl
implements|implements
name|VectorKeySeries
block|{
specifier|protected
name|int
name|currentLogical
decl_stmt|;
specifier|protected
name|boolean
name|currentIsAllNull
decl_stmt|;
specifier|protected
name|boolean
name|currentHasAnyNulls
decl_stmt|;
specifier|protected
name|int
name|currentDuplicateCount
decl_stmt|;
specifier|protected
name|int
name|currentHashCode
decl_stmt|;
name|VectorKeySeriesImpl
parameter_list|()
block|{
name|currentLogical
operator|=
literal|0
expr_stmt|;
name|currentIsAllNull
operator|=
literal|false
expr_stmt|;
comment|// Set to true by default.  Only actively set in the multiple key case to support Outer Join.
name|currentHasAnyNulls
operator|=
literal|true
expr_stmt|;
name|currentDuplicateCount
operator|=
literal|0
expr_stmt|;
name|currentHashCode
operator|=
literal|0
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getCurrentLogical
parameter_list|()
block|{
return|return
name|currentLogical
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|getCurrentIsAllNull
parameter_list|()
block|{
return|return
name|currentIsAllNull
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|getCurrentHasAnyNulls
parameter_list|()
block|{
return|return
name|currentHasAnyNulls
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getCurrentDuplicateCount
parameter_list|()
block|{
return|return
name|currentDuplicateCount
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getCurrentHashCode
parameter_list|()
block|{
return|return
name|currentHashCode
return|;
block|}
block|}
end_class

end_unit

