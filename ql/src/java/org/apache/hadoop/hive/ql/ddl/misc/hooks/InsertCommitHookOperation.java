begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|ddl
operator|.
name|misc
operator|.
name|hooks
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|ddl
operator|.
name|DDLOperationContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|DefaultHiveMetaHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|HiveMetaHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|MetaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|ddl
operator|.
name|DDLOperation
import|;
end_import

begin_comment
comment|/**  * Operation process of inserting a commit hook.  */
end_comment

begin_class
specifier|public
class|class
name|InsertCommitHookOperation
extends|extends
name|DDLOperation
argument_list|<
name|InsertCommitHookDesc
argument_list|>
block|{
specifier|public
name|InsertCommitHookOperation
parameter_list|(
name|DDLOperationContext
name|context
parameter_list|,
name|InsertCommitHookDesc
name|desc
parameter_list|)
block|{
name|super
argument_list|(
name|context
argument_list|,
name|desc
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|execute
parameter_list|()
throws|throws
name|MetaException
block|{
name|HiveMetaHook
name|hook
init|=
name|desc
operator|.
name|getTable
argument_list|()
operator|.
name|getStorageHandler
argument_list|()
operator|.
name|getMetaHook
argument_list|()
decl_stmt|;
if|if
condition|(
name|hook
operator|==
literal|null
operator|||
operator|!
operator|(
name|hook
operator|instanceof
name|DefaultHiveMetaHook
operator|)
condition|)
block|{
return|return
literal|0
return|;
block|}
name|DefaultHiveMetaHook
name|hiveMetaHook
init|=
operator|(
name|DefaultHiveMetaHook
operator|)
name|hook
decl_stmt|;
try|try
block|{
name|hiveMetaHook
operator|.
name|commitInsertTable
argument_list|(
name|desc
operator|.
name|getTable
argument_list|()
operator|.
name|getTTable
argument_list|()
argument_list|,
name|desc
operator|.
name|isOverwrite
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
name|hiveMetaHook
operator|.
name|rollbackInsertTable
argument_list|(
name|desc
operator|.
name|getTable
argument_list|()
operator|.
name|getTTable
argument_list|()
argument_list|,
name|desc
operator|.
name|isOverwrite
argument_list|()
argument_list|)
expr_stmt|;
throw|throw
name|t
throw|;
block|}
return|return
literal|0
return|;
block|}
block|}
end_class

end_unit

