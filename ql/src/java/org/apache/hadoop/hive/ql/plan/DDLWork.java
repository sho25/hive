begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|hooks
operator|.
name|ReadEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|hooks
operator|.
name|WriteEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
operator|.
name|AlterTablePartMergeFilesDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|Explain
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_comment
comment|/**  * DDLWork.  *  */
end_comment

begin_class
specifier|public
class|class
name|DDLWork
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
comment|// TODO: this can probably be replaced with much less code via dynamic dispatch and/or templates.
specifier|private
name|InsertCommitHookDesc
name|insertCommitHookDesc
decl_stmt|;
specifier|private
name|DropPartitionDesc
name|dropPartitionDesc
decl_stmt|;
specifier|private
name|AlterTableDesc
name|alterTblDesc
decl_stmt|;
specifier|private
name|ShowColumnsDesc
name|showColumnsDesc
decl_stmt|;
specifier|private
name|ShowLocksDesc
name|showLocksDesc
decl_stmt|;
specifier|private
name|ShowCompactionsDesc
name|showCompactionsDesc
decl_stmt|;
specifier|private
name|ShowTxnsDesc
name|showTxnsDesc
decl_stmt|;
specifier|private
name|AbortTxnsDesc
name|abortTxnsDesc
decl_stmt|;
specifier|private
name|ShowPartitionsDesc
name|showPartsDesc
decl_stmt|;
specifier|private
name|AddPartitionDesc
name|addPartitionDesc
decl_stmt|;
specifier|private
name|RenamePartitionDesc
name|renamePartitionDesc
decl_stmt|;
specifier|private
name|AlterTableSimpleDesc
name|alterTblSimpleDesc
decl_stmt|;
specifier|private
name|MsckDesc
name|msckDesc
decl_stmt|;
specifier|private
name|AlterTableAlterPartDesc
name|alterTableAlterPartDesc
decl_stmt|;
specifier|private
name|AlterTableExchangePartition
name|alterTableExchangePartition
decl_stmt|;
specifier|private
name|KillQueryDesc
name|killQueryDesc
decl_stmt|;
specifier|private
name|ShowConfDesc
name|showConfDesc
decl_stmt|;
specifier|private
name|ReplRemoveFirstIncLoadPendFlagDesc
name|replSetFirstIncLoadFlagDesc
decl_stmt|;
name|boolean
name|needLock
init|=
literal|false
decl_stmt|;
comment|/**    * ReadEntitites that are passed to the hooks.    */
specifier|protected
name|HashSet
argument_list|<
name|ReadEntity
argument_list|>
name|inputs
decl_stmt|;
comment|/**    * List of WriteEntities that are passed to the hooks.    */
specifier|protected
name|HashSet
argument_list|<
name|WriteEntity
argument_list|>
name|outputs
decl_stmt|;
specifier|private
name|AlterTablePartMergeFilesDesc
name|mergeFilesDesc
decl_stmt|;
specifier|private
name|CacheMetadataDesc
name|cacheMetadataDesc
decl_stmt|;
specifier|public
name|DDLWork
parameter_list|()
block|{   }
specifier|public
name|DDLWork
parameter_list|(
name|HashSet
argument_list|<
name|ReadEntity
argument_list|>
name|inputs
parameter_list|,
name|HashSet
argument_list|<
name|WriteEntity
argument_list|>
name|outputs
parameter_list|)
block|{
name|this
operator|.
name|inputs
operator|=
name|inputs
expr_stmt|;
name|this
operator|.
name|outputs
operator|=
name|outputs
expr_stmt|;
block|}
specifier|public
name|DDLWork
parameter_list|(
name|HashSet
argument_list|<
name|ReadEntity
argument_list|>
name|inputs
parameter_list|,
name|HashSet
argument_list|<
name|WriteEntity
argument_list|>
name|outputs
parameter_list|,
name|ShowConfDesc
name|showConfDesc
parameter_list|)
block|{
name|this
argument_list|(
name|inputs
argument_list|,
name|outputs
argument_list|)
expr_stmt|;
name|this
operator|.
name|showConfDesc
operator|=
name|showConfDesc
expr_stmt|;
block|}
comment|/**    * @param alterTblDesc    *          alter table descriptor    */
specifier|public
name|DDLWork
parameter_list|(
name|HashSet
argument_list|<
name|ReadEntity
argument_list|>
name|inputs
parameter_list|,
name|HashSet
argument_list|<
name|WriteEntity
argument_list|>
name|outputs
parameter_list|,
name|AlterTableDesc
name|alterTblDesc
parameter_list|)
block|{
name|this
argument_list|(
name|inputs
argument_list|,
name|outputs
argument_list|)
expr_stmt|;
name|this
operator|.
name|alterTblDesc
operator|=
name|alterTblDesc
expr_stmt|;
block|}
specifier|public
name|DDLWork
parameter_list|(
name|HashSet
argument_list|<
name|ReadEntity
argument_list|>
name|inputs
parameter_list|,
name|HashSet
argument_list|<
name|WriteEntity
argument_list|>
name|outputs
parameter_list|,
name|DropPartitionDesc
name|dropPartitionDesc
parameter_list|)
block|{
name|this
argument_list|(
name|inputs
argument_list|,
name|outputs
argument_list|)
expr_stmt|;
name|this
operator|.
name|dropPartitionDesc
operator|=
name|dropPartitionDesc
expr_stmt|;
block|}
comment|/**    * @param showColumnsDesc    */
specifier|public
name|DDLWork
parameter_list|(
name|HashSet
argument_list|<
name|ReadEntity
argument_list|>
name|inputs
parameter_list|,
name|HashSet
argument_list|<
name|WriteEntity
argument_list|>
name|outputs
parameter_list|,
name|ShowColumnsDesc
name|showColumnsDesc
parameter_list|)
block|{
name|this
argument_list|(
name|inputs
argument_list|,
name|outputs
argument_list|)
expr_stmt|;
name|this
operator|.
name|showColumnsDesc
operator|=
name|showColumnsDesc
expr_stmt|;
block|}
comment|/**    * @param showLocksDesc    */
specifier|public
name|DDLWork
parameter_list|(
name|HashSet
argument_list|<
name|ReadEntity
argument_list|>
name|inputs
parameter_list|,
name|HashSet
argument_list|<
name|WriteEntity
argument_list|>
name|outputs
parameter_list|,
name|ShowLocksDesc
name|showLocksDesc
parameter_list|)
block|{
name|this
argument_list|(
name|inputs
argument_list|,
name|outputs
argument_list|)
expr_stmt|;
name|this
operator|.
name|showLocksDesc
operator|=
name|showLocksDesc
expr_stmt|;
block|}
specifier|public
name|DDLWork
parameter_list|(
name|HashSet
argument_list|<
name|ReadEntity
argument_list|>
name|inputs
parameter_list|,
name|HashSet
argument_list|<
name|WriteEntity
argument_list|>
name|outputs
parameter_list|,
name|ShowCompactionsDesc
name|showCompactionsDesc
parameter_list|)
block|{
name|this
argument_list|(
name|inputs
argument_list|,
name|outputs
argument_list|)
expr_stmt|;
name|this
operator|.
name|showCompactionsDesc
operator|=
name|showCompactionsDesc
expr_stmt|;
block|}
specifier|public
name|DDLWork
parameter_list|(
name|HashSet
argument_list|<
name|ReadEntity
argument_list|>
name|inputs
parameter_list|,
name|HashSet
argument_list|<
name|WriteEntity
argument_list|>
name|outputs
parameter_list|,
name|ShowTxnsDesc
name|showTxnsDesc
parameter_list|)
block|{
name|this
argument_list|(
name|inputs
argument_list|,
name|outputs
argument_list|)
expr_stmt|;
name|this
operator|.
name|showTxnsDesc
operator|=
name|showTxnsDesc
expr_stmt|;
block|}
specifier|public
name|DDLWork
parameter_list|(
name|HashSet
argument_list|<
name|ReadEntity
argument_list|>
name|inputs
parameter_list|,
name|HashSet
argument_list|<
name|WriteEntity
argument_list|>
name|outputs
parameter_list|,
name|AbortTxnsDesc
name|abortTxnsDesc
parameter_list|)
block|{
name|this
argument_list|(
name|inputs
argument_list|,
name|outputs
argument_list|)
expr_stmt|;
name|this
operator|.
name|abortTxnsDesc
operator|=
name|abortTxnsDesc
expr_stmt|;
block|}
comment|/**    * @param showPartsDesc    */
specifier|public
name|DDLWork
parameter_list|(
name|HashSet
argument_list|<
name|ReadEntity
argument_list|>
name|inputs
parameter_list|,
name|HashSet
argument_list|<
name|WriteEntity
argument_list|>
name|outputs
parameter_list|,
name|ShowPartitionsDesc
name|showPartsDesc
parameter_list|)
block|{
name|this
argument_list|(
name|inputs
argument_list|,
name|outputs
argument_list|)
expr_stmt|;
name|this
operator|.
name|showPartsDesc
operator|=
name|showPartsDesc
expr_stmt|;
block|}
comment|/**    * @param addPartitionDesc    *          information about the partitions we want to add.    */
specifier|public
name|DDLWork
parameter_list|(
name|HashSet
argument_list|<
name|ReadEntity
argument_list|>
name|inputs
parameter_list|,
name|HashSet
argument_list|<
name|WriteEntity
argument_list|>
name|outputs
parameter_list|,
name|AddPartitionDesc
name|addPartitionDesc
parameter_list|)
block|{
name|this
argument_list|(
name|inputs
argument_list|,
name|outputs
argument_list|)
expr_stmt|;
name|this
operator|.
name|addPartitionDesc
operator|=
name|addPartitionDesc
expr_stmt|;
block|}
comment|/**    * @param renamePartitionDesc    *          information about the partitions we want to add.    */
specifier|public
name|DDLWork
parameter_list|(
name|HashSet
argument_list|<
name|ReadEntity
argument_list|>
name|inputs
parameter_list|,
name|HashSet
argument_list|<
name|WriteEntity
argument_list|>
name|outputs
parameter_list|,
name|RenamePartitionDesc
name|renamePartitionDesc
parameter_list|)
block|{
name|this
argument_list|(
name|inputs
argument_list|,
name|outputs
argument_list|)
expr_stmt|;
name|this
operator|.
name|renamePartitionDesc
operator|=
name|renamePartitionDesc
expr_stmt|;
block|}
comment|/**    * @param inputs    * @param outputs    * @param simpleDesc    */
specifier|public
name|DDLWork
parameter_list|(
name|HashSet
argument_list|<
name|ReadEntity
argument_list|>
name|inputs
parameter_list|,
name|HashSet
argument_list|<
name|WriteEntity
argument_list|>
name|outputs
parameter_list|,
name|AlterTableSimpleDesc
name|simpleDesc
parameter_list|)
block|{
name|this
argument_list|(
name|inputs
argument_list|,
name|outputs
argument_list|)
expr_stmt|;
name|this
operator|.
name|alterTblSimpleDesc
operator|=
name|simpleDesc
expr_stmt|;
block|}
specifier|public
name|DDLWork
parameter_list|(
name|HashSet
argument_list|<
name|ReadEntity
argument_list|>
name|inputs
parameter_list|,
name|HashSet
argument_list|<
name|WriteEntity
argument_list|>
name|outputs
parameter_list|,
name|MsckDesc
name|checkDesc
parameter_list|)
block|{
name|this
argument_list|(
name|inputs
argument_list|,
name|outputs
argument_list|)
expr_stmt|;
name|msckDesc
operator|=
name|checkDesc
expr_stmt|;
block|}
specifier|public
name|DDLWork
parameter_list|(
name|HashSet
argument_list|<
name|ReadEntity
argument_list|>
name|inputs
parameter_list|,
name|HashSet
argument_list|<
name|WriteEntity
argument_list|>
name|outputs
parameter_list|,
name|AlterTablePartMergeFilesDesc
name|mergeDesc
parameter_list|)
block|{
name|this
argument_list|(
name|inputs
argument_list|,
name|outputs
argument_list|)
expr_stmt|;
name|this
operator|.
name|mergeFilesDesc
operator|=
name|mergeDesc
expr_stmt|;
block|}
specifier|public
name|DDLWork
parameter_list|(
name|HashSet
argument_list|<
name|ReadEntity
argument_list|>
name|inputs
parameter_list|,
name|HashSet
argument_list|<
name|WriteEntity
argument_list|>
name|outputs
parameter_list|,
name|AlterTableAlterPartDesc
name|alterPartDesc
parameter_list|)
block|{
name|this
argument_list|(
name|inputs
argument_list|,
name|outputs
argument_list|)
expr_stmt|;
name|this
operator|.
name|alterTableAlterPartDesc
operator|=
name|alterPartDesc
expr_stmt|;
block|}
specifier|public
name|DDLWork
parameter_list|(
name|HashSet
argument_list|<
name|ReadEntity
argument_list|>
name|inputs
parameter_list|,
name|HashSet
argument_list|<
name|WriteEntity
argument_list|>
name|outputs
parameter_list|,
name|AlterTableExchangePartition
name|alterTableExchangePartition
parameter_list|)
block|{
name|this
argument_list|(
name|inputs
argument_list|,
name|outputs
argument_list|)
expr_stmt|;
name|this
operator|.
name|alterTableExchangePartition
operator|=
name|alterTableExchangePartition
expr_stmt|;
block|}
specifier|public
name|DDLWork
parameter_list|(
name|HashSet
argument_list|<
name|ReadEntity
argument_list|>
name|inputs
parameter_list|,
name|HashSet
argument_list|<
name|WriteEntity
argument_list|>
name|outputs
parameter_list|,
name|CacheMetadataDesc
name|cacheMetadataDesc
parameter_list|)
block|{
name|this
argument_list|(
name|inputs
argument_list|,
name|outputs
argument_list|)
expr_stmt|;
name|this
operator|.
name|cacheMetadataDesc
operator|=
name|cacheMetadataDesc
expr_stmt|;
block|}
specifier|public
name|DDLWork
parameter_list|(
name|HashSet
argument_list|<
name|ReadEntity
argument_list|>
name|inputs
parameter_list|,
name|HashSet
argument_list|<
name|WriteEntity
argument_list|>
name|outputs
parameter_list|,
name|InsertCommitHookDesc
name|insertCommitHookDesc
parameter_list|)
block|{
name|this
argument_list|(
name|inputs
argument_list|,
name|outputs
argument_list|)
expr_stmt|;
name|this
operator|.
name|insertCommitHookDesc
operator|=
name|insertCommitHookDesc
expr_stmt|;
block|}
specifier|public
name|DDLWork
parameter_list|(
name|HashSet
argument_list|<
name|ReadEntity
argument_list|>
name|inputs
parameter_list|,
name|HashSet
argument_list|<
name|WriteEntity
argument_list|>
name|outputs
parameter_list|,
name|KillQueryDesc
name|killQueryDesc
parameter_list|)
block|{
name|this
argument_list|(
name|inputs
argument_list|,
name|outputs
argument_list|)
expr_stmt|;
name|this
operator|.
name|killQueryDesc
operator|=
name|killQueryDesc
expr_stmt|;
block|}
specifier|public
name|DDLWork
parameter_list|(
name|HashSet
argument_list|<
name|ReadEntity
argument_list|>
name|inputs
parameter_list|,
name|HashSet
argument_list|<
name|WriteEntity
argument_list|>
name|outputs
parameter_list|,
name|ReplRemoveFirstIncLoadPendFlagDesc
name|replSetFirstIncLoadFlagDesc
parameter_list|)
block|{
name|this
argument_list|(
name|inputs
argument_list|,
name|outputs
argument_list|)
expr_stmt|;
name|this
operator|.
name|replSetFirstIncLoadFlagDesc
operator|=
name|replSetFirstIncLoadFlagDesc
expr_stmt|;
block|}
comment|/**    * @return the dropTblDesc    */
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Drop Partition Operator"
argument_list|,
name|explainLevels
operator|=
block|{
name|Level
operator|.
name|USER
block|,
name|Level
operator|.
name|DEFAULT
block|,
name|Level
operator|.
name|EXTENDED
block|}
argument_list|)
specifier|public
name|DropPartitionDesc
name|getDropPartitionDesc
parameter_list|()
block|{
return|return
name|dropPartitionDesc
return|;
block|}
comment|/**    * @return the alterTblDesc    */
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Alter Table Operator"
argument_list|,
name|explainLevels
operator|=
block|{
name|Level
operator|.
name|USER
block|,
name|Level
operator|.
name|DEFAULT
block|,
name|Level
operator|.
name|EXTENDED
block|}
argument_list|)
specifier|public
name|AlterTableDesc
name|getAlterTblDesc
parameter_list|()
block|{
return|return
name|alterTblDesc
return|;
block|}
comment|/**    * @return the showColumnsDesc    */
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Show Columns Operator"
argument_list|,
name|explainLevels
operator|=
block|{
name|Level
operator|.
name|USER
block|,
name|Level
operator|.
name|DEFAULT
block|,
name|Level
operator|.
name|EXTENDED
block|}
argument_list|)
specifier|public
name|ShowColumnsDesc
name|getShowColumnsDesc
parameter_list|()
block|{
return|return
name|showColumnsDesc
return|;
block|}
comment|/**    * @return the showLocksDesc    */
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Show Lock Operator"
argument_list|,
name|explainLevels
operator|=
block|{
name|Level
operator|.
name|USER
block|,
name|Level
operator|.
name|DEFAULT
block|,
name|Level
operator|.
name|EXTENDED
block|}
argument_list|)
specifier|public
name|ShowLocksDesc
name|getShowLocksDesc
parameter_list|()
block|{
return|return
name|showLocksDesc
return|;
block|}
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Show Compactions Operator"
argument_list|,
name|explainLevels
operator|=
block|{
name|Level
operator|.
name|USER
block|,
name|Level
operator|.
name|DEFAULT
block|,
name|Level
operator|.
name|EXTENDED
block|}
argument_list|)
specifier|public
name|ShowCompactionsDesc
name|getShowCompactionsDesc
parameter_list|()
block|{
return|return
name|showCompactionsDesc
return|;
block|}
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Show Transactions Operator"
argument_list|,
name|explainLevels
operator|=
block|{
name|Level
operator|.
name|USER
block|,
name|Level
operator|.
name|DEFAULT
block|,
name|Level
operator|.
name|EXTENDED
block|}
argument_list|)
specifier|public
name|ShowTxnsDesc
name|getShowTxnsDesc
parameter_list|()
block|{
return|return
name|showTxnsDesc
return|;
block|}
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Abort Transactions Operator"
argument_list|,
name|explainLevels
operator|=
block|{
name|Level
operator|.
name|USER
block|,
name|Level
operator|.
name|DEFAULT
block|,
name|Level
operator|.
name|EXTENDED
block|}
argument_list|)
specifier|public
name|AbortTxnsDesc
name|getAbortTxnsDesc
parameter_list|()
block|{
return|return
name|abortTxnsDesc
return|;
block|}
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Kill Query Operator"
argument_list|,
name|explainLevels
operator|=
block|{
name|Level
operator|.
name|USER
block|,
name|Level
operator|.
name|DEFAULT
block|,
name|Level
operator|.
name|EXTENDED
block|}
argument_list|)
specifier|public
name|KillQueryDesc
name|getKillQueryDesc
parameter_list|()
block|{
return|return
name|killQueryDesc
return|;
block|}
comment|/**    * @return the showPartsDesc    */
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Show Partitions Operator"
argument_list|,
name|explainLevels
operator|=
block|{
name|Level
operator|.
name|USER
block|,
name|Level
operator|.
name|DEFAULT
block|,
name|Level
operator|.
name|EXTENDED
block|}
argument_list|)
specifier|public
name|ShowPartitionsDesc
name|getShowPartsDesc
parameter_list|()
block|{
return|return
name|showPartsDesc
return|;
block|}
comment|/**    * @return information about the partitions we want to add.    */
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Add Partition Operator"
argument_list|,
name|explainLevels
operator|=
block|{
name|Level
operator|.
name|USER
block|,
name|Level
operator|.
name|DEFAULT
block|,
name|Level
operator|.
name|EXTENDED
block|}
argument_list|)
specifier|public
name|AddPartitionDesc
name|getAddPartitionDesc
parameter_list|()
block|{
return|return
name|addPartitionDesc
return|;
block|}
comment|/**    * @return information about the partitions we want to rename.    */
specifier|public
name|RenamePartitionDesc
name|getRenamePartitionDesc
parameter_list|()
block|{
return|return
name|renamePartitionDesc
return|;
block|}
comment|/**    * @return information about the table/partitions we want to alter.    */
specifier|public
name|AlterTableSimpleDesc
name|getAlterTblSimpleDesc
parameter_list|()
block|{
return|return
name|alterTblSimpleDesc
return|;
block|}
comment|/**    * @return Metastore check description    */
specifier|public
name|MsckDesc
name|getMsckDesc
parameter_list|()
block|{
return|return
name|msckDesc
return|;
block|}
specifier|public
name|HashSet
argument_list|<
name|ReadEntity
argument_list|>
name|getInputs
parameter_list|()
block|{
return|return
name|inputs
return|;
block|}
specifier|public
name|HashSet
argument_list|<
name|WriteEntity
argument_list|>
name|getOutputs
parameter_list|()
block|{
return|return
name|outputs
return|;
block|}
comment|/**    * @return descriptor for merging files    */
specifier|public
name|AlterTablePartMergeFilesDesc
name|getMergeFilesDesc
parameter_list|()
block|{
return|return
name|mergeFilesDesc
return|;
block|}
specifier|public
name|boolean
name|getNeedLock
parameter_list|()
block|{
return|return
name|needLock
return|;
block|}
specifier|public
name|void
name|setNeedLock
parameter_list|(
name|boolean
name|needLock
parameter_list|)
block|{
name|this
operator|.
name|needLock
operator|=
name|needLock
expr_stmt|;
block|}
comment|/**    * @return information about the partitions we want to change.    */
specifier|public
name|AlterTableAlterPartDesc
name|getAlterTableAlterPartDesc
parameter_list|()
block|{
return|return
name|alterTableAlterPartDesc
return|;
block|}
comment|/**    * @return information about the table partition to be exchanged    */
specifier|public
name|AlterTableExchangePartition
name|getAlterTableExchangePartition
parameter_list|()
block|{
return|return
name|this
operator|.
name|alterTableExchangePartition
return|;
block|}
comment|/**    * @return information about the metadata to be cached    */
specifier|public
name|CacheMetadataDesc
name|getCacheMetadataDesc
parameter_list|()
block|{
return|return
name|this
operator|.
name|cacheMetadataDesc
return|;
block|}
specifier|public
name|ShowConfDesc
name|getShowConfDesc
parameter_list|()
block|{
return|return
name|showConfDesc
return|;
block|}
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Insert operator"
argument_list|,
name|explainLevels
operator|=
block|{
name|Level
operator|.
name|USER
block|,
name|Level
operator|.
name|DEFAULT
block|,
name|Level
operator|.
name|EXTENDED
block|}
argument_list|)
specifier|public
name|InsertCommitHookDesc
name|getInsertCommitHookDesc
parameter_list|()
block|{
return|return
name|insertCommitHookDesc
return|;
block|}
specifier|public
name|ReplRemoveFirstIncLoadPendFlagDesc
name|getReplSetFirstIncLoadFlagDesc
parameter_list|()
block|{
return|return
name|replSetFirstIncLoadFlagDesc
return|;
block|}
specifier|public
name|void
name|setReplSetFirstIncLoadFlagDesc
parameter_list|(
name|ReplRemoveFirstIncLoadPendFlagDesc
name|replSetFirstIncLoadFlagDesc
parameter_list|)
block|{
name|this
operator|.
name|replSetFirstIncLoadFlagDesc
operator|=
name|replSetFirstIncLoadFlagDesc
expr_stmt|;
block|}
block|}
end_class

end_unit

