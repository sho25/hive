begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|formatting
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * Helper class to build Maps consumed by the JSON formatter.  Only  * add non-null entries to the Map.  */
end_comment

begin_class
specifier|public
class|class
name|MapBuilder
block|{
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|MapBuilder
parameter_list|()
block|{}
specifier|public
specifier|static
name|MapBuilder
name|create
parameter_list|()
block|{
return|return
operator|new
name|MapBuilder
argument_list|()
return|;
block|}
specifier|public
name|MapBuilder
name|put
parameter_list|(
name|String
name|name
parameter_list|,
name|Object
name|val
parameter_list|)
block|{
if|if
condition|(
name|val
operator|!=
literal|null
condition|)
name|map
operator|.
name|put
argument_list|(
name|name
argument_list|,
name|val
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|MapBuilder
name|put
parameter_list|(
name|String
name|name
parameter_list|,
name|boolean
name|val
parameter_list|)
block|{
name|map
operator|.
name|put
argument_list|(
name|name
argument_list|,
name|Boolean
operator|.
name|valueOf
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|MapBuilder
name|put
parameter_list|(
name|String
name|name
parameter_list|,
name|int
name|val
parameter_list|)
block|{
name|map
operator|.
name|put
argument_list|(
name|name
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|MapBuilder
name|put
parameter_list|(
name|String
name|name
parameter_list|,
name|long
name|val
parameter_list|)
block|{
name|map
operator|.
name|put
argument_list|(
name|name
argument_list|,
name|Long
operator|.
name|valueOf
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
parameter_list|<
name|T
parameter_list|>
name|MapBuilder
name|put
parameter_list|(
name|String
name|name
parameter_list|,
name|T
name|val
parameter_list|,
name|boolean
name|use
parameter_list|)
block|{
if|if
condition|(
name|use
condition|)
name|put
argument_list|(
name|name
argument_list|,
name|val
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|build
parameter_list|()
block|{
return|return
name|map
return|;
block|}
block|}
end_class

end_unit

