begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|mapper
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
operator|.
name|signature
operator|.
name|OpTreeSignature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|stats
operator|.
name|OperatorStats
import|;
end_import

begin_class
specifier|public
class|class
name|EmptyStatsSource
implements|implements
name|StatsSource
block|{
specifier|public
specifier|static
name|StatsSource
name|INSTANCE
init|=
operator|new
name|EmptyStatsSource
argument_list|()
decl_stmt|;
specifier|private
name|EmptyStatsSource
parameter_list|()
block|{   }
annotation|@
name|Override
specifier|public
name|boolean
name|canProvideStatsFor
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|class1
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|Optional
argument_list|<
name|OperatorStats
argument_list|>
name|lookup
parameter_list|(
name|OpTreeSignature
name|treeSig
parameter_list|)
block|{
return|return
name|Optional
operator|.
name|empty
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|putAll
parameter_list|(
name|Map
argument_list|<
name|OpTreeSignature
argument_list|,
name|OperatorStats
argument_list|>
name|map
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"This is an empty source!"
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

