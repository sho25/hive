begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_class
annotation|@
name|explain
argument_list|(
name|displayName
operator|=
literal|"Reduce Output Operator"
argument_list|)
specifier|public
class|class
name|reduceSinkDesc
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
comment|// these are the expressions that go into the reduce key
specifier|private
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|exprNodeDesc
argument_list|>
name|keyCols
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|exprNodeDesc
argument_list|>
name|valueCols
decl_stmt|;
comment|// Describe how to serialize the key
specifier|private
name|tableDesc
name|keySerializeInfo
decl_stmt|;
comment|// Describe how to serialize the value
specifier|private
name|tableDesc
name|valueSerializeInfo
decl_stmt|;
specifier|private
name|int
name|tag
decl_stmt|;
comment|// The partition key will be the first #numPartitionFields of keyCols
comment|// If the value is 0, then all data will go to a single reducer
comment|// If the value is -1, then data will go to a random reducer
specifier|private
name|int
name|numPartitionFields
decl_stmt|;
specifier|private
name|boolean
name|inferNumReducers
decl_stmt|;
specifier|private
name|int
name|numReducers
decl_stmt|;
specifier|public
name|reduceSinkDesc
parameter_list|()
block|{ }
specifier|public
name|reduceSinkDesc
parameter_list|(
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|exprNodeDesc
argument_list|>
name|keyCols
parameter_list|,
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|exprNodeDesc
argument_list|>
name|valueCols
parameter_list|,
name|int
name|tag
parameter_list|,
name|int
name|numPartitionFields
parameter_list|,
name|int
name|numReducers
parameter_list|,
name|boolean
name|inferNumReducers
parameter_list|,
specifier|final
name|tableDesc
name|keySerializeInfo
parameter_list|,
specifier|final
name|tableDesc
name|valueSerializeInfo
parameter_list|)
block|{
name|this
operator|.
name|keyCols
operator|=
name|keyCols
expr_stmt|;
name|this
operator|.
name|valueCols
operator|=
name|valueCols
expr_stmt|;
name|this
operator|.
name|tag
operator|=
name|tag
expr_stmt|;
name|this
operator|.
name|numReducers
operator|=
name|numReducers
expr_stmt|;
name|this
operator|.
name|inferNumReducers
operator|=
name|inferNumReducers
expr_stmt|;
name|this
operator|.
name|numPartitionFields
operator|=
name|numPartitionFields
expr_stmt|;
name|this
operator|.
name|keySerializeInfo
operator|=
name|keySerializeInfo
expr_stmt|;
name|this
operator|.
name|valueSerializeInfo
operator|=
name|valueSerializeInfo
expr_stmt|;
block|}
annotation|@
name|explain
argument_list|(
name|displayName
operator|=
literal|"key expressions"
argument_list|)
specifier|public
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|exprNodeDesc
argument_list|>
name|getKeyCols
parameter_list|()
block|{
return|return
name|this
operator|.
name|keyCols
return|;
block|}
specifier|public
name|void
name|setKeyCols
parameter_list|(
specifier|final
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|exprNodeDesc
argument_list|>
name|keyCols
parameter_list|)
block|{
name|this
operator|.
name|keyCols
operator|=
name|keyCols
expr_stmt|;
block|}
annotation|@
name|explain
argument_list|(
name|displayName
operator|=
literal|"value expressions"
argument_list|)
specifier|public
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|exprNodeDesc
argument_list|>
name|getValueCols
parameter_list|()
block|{
return|return
name|this
operator|.
name|valueCols
return|;
block|}
specifier|public
name|void
name|setValueCols
parameter_list|(
specifier|final
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|exprNodeDesc
argument_list|>
name|valueCols
parameter_list|)
block|{
name|this
operator|.
name|valueCols
operator|=
name|valueCols
expr_stmt|;
block|}
annotation|@
name|explain
argument_list|(
name|displayName
operator|=
literal|"# partition fields"
argument_list|)
specifier|public
name|int
name|getNumPartitionFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|numPartitionFields
return|;
block|}
specifier|public
name|void
name|setNumPartitionFields
parameter_list|(
name|int
name|numPartitionFields
parameter_list|)
block|{
name|this
operator|.
name|numPartitionFields
operator|=
name|numPartitionFields
expr_stmt|;
block|}
annotation|@
name|explain
argument_list|(
name|displayName
operator|=
literal|"tag"
argument_list|)
specifier|public
name|int
name|getTag
parameter_list|()
block|{
return|return
name|this
operator|.
name|tag
return|;
block|}
specifier|public
name|void
name|setTag
parameter_list|(
name|int
name|tag
parameter_list|)
block|{
name|this
operator|.
name|tag
operator|=
name|tag
expr_stmt|;
block|}
specifier|public
name|boolean
name|getInferNumReducers
parameter_list|()
block|{
return|return
name|this
operator|.
name|inferNumReducers
return|;
block|}
specifier|public
name|void
name|setInferNumReducers
parameter_list|(
name|boolean
name|inferNumReducers
parameter_list|)
block|{
name|this
operator|.
name|inferNumReducers
operator|=
name|inferNumReducers
expr_stmt|;
block|}
specifier|public
name|int
name|getNumReducers
parameter_list|()
block|{
return|return
name|this
operator|.
name|numReducers
return|;
block|}
specifier|public
name|void
name|setNumReducers
parameter_list|(
name|int
name|numReducers
parameter_list|)
block|{
name|this
operator|.
name|numReducers
operator|=
name|numReducers
expr_stmt|;
block|}
specifier|public
name|tableDesc
name|getKeySerializeInfo
parameter_list|()
block|{
return|return
name|keySerializeInfo
return|;
block|}
specifier|public
name|void
name|setKeySerializeInfo
parameter_list|(
name|tableDesc
name|keySerializeInfo
parameter_list|)
block|{
name|this
operator|.
name|keySerializeInfo
operator|=
name|keySerializeInfo
expr_stmt|;
block|}
specifier|public
name|tableDesc
name|getValueSerializeInfo
parameter_list|()
block|{
return|return
name|valueSerializeInfo
return|;
block|}
specifier|public
name|void
name|setValueSerializeInfo
parameter_list|(
name|tableDesc
name|valueSerializeInfo
parameter_list|)
block|{
name|this
operator|.
name|valueSerializeInfo
operator|=
name|valueSerializeInfo
expr_stmt|;
block|}
block|}
end_class

end_unit

