begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|ptf
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|Explain
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Windowing table definition"
argument_list|)
specifier|public
class|class
name|WindowTableFunctionDef
extends|extends
name|PartitionedTableFunctionDef
block|{
name|List
argument_list|<
name|WindowFunctionDef
argument_list|>
name|windowFunctions
decl_stmt|;
name|int
name|rankLimit
init|=
operator|-
literal|1
decl_stmt|;
name|int
name|rankLimitFunction
decl_stmt|;
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"window functions"
argument_list|)
specifier|public
name|List
argument_list|<
name|WindowFunctionDef
argument_list|>
name|getWindowFunctions
parameter_list|()
block|{
return|return
name|windowFunctions
return|;
block|}
specifier|public
name|void
name|setWindowFunctions
parameter_list|(
name|List
argument_list|<
name|WindowFunctionDef
argument_list|>
name|windowFunctions
parameter_list|)
block|{
name|this
operator|.
name|windowFunctions
operator|=
name|windowFunctions
expr_stmt|;
block|}
specifier|public
name|int
name|getRankLimit
parameter_list|()
block|{
return|return
name|rankLimit
return|;
block|}
specifier|public
name|void
name|setRankLimit
parameter_list|(
name|int
name|rankLimit
parameter_list|)
block|{
name|this
operator|.
name|rankLimit
operator|=
name|rankLimit
expr_stmt|;
block|}
specifier|public
name|int
name|getRankLimitFunction
parameter_list|()
block|{
return|return
name|rankLimitFunction
return|;
block|}
specifier|public
name|void
name|setRankLimitFunction
parameter_list|(
name|int
name|rankLimitFunction
parameter_list|)
block|{
name|this
operator|.
name|rankLimitFunction
operator|=
name|rankLimitFunction
expr_stmt|;
block|}
block|}
end_class

end_unit

