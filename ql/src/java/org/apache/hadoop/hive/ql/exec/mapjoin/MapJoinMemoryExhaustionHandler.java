begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|mapjoin
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|management
operator|.
name|ManagementFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|management
operator|.
name|MemoryMXBean
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|NumberFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|Utilities
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|session
operator|.
name|SessionState
operator|.
name|LogHelper
import|;
end_import

begin_comment
comment|/**  * Handles the logic around deciding when to throw an MapJoinMemoryExhaustionException  * for HashTableSinkOperator.  */
end_comment

begin_class
specifier|public
class|class
name|MapJoinMemoryExhaustionHandler
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MapJoinMemoryExhaustionHandler
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|final
name|MemoryMXBean
name|memoryMXBean
decl_stmt|;
comment|/**    * The percentage of overall heap that the JVM is allowed    * to allocate before failing a MapJoin local task.    */
specifier|private
specifier|final
name|double
name|maxMemoryUsage
decl_stmt|;
comment|/**    * The max heap of the JVM in bytes.    */
specifier|private
specifier|final
name|long
name|maxHeapSize
decl_stmt|;
specifier|private
specifier|final
name|LogHelper
name|console
decl_stmt|;
specifier|private
specifier|final
name|NumberFormat
name|percentageNumberFormat
decl_stmt|;
comment|/**    * Constructor expects a LogHelper object in addition to the max percent    * of heap memory which can be consumed before a MapJoinMemoryExhaustionException    * is thrown.    */
specifier|public
name|MapJoinMemoryExhaustionHandler
parameter_list|(
name|LogHelper
name|console
parameter_list|,
name|double
name|maxMemoryUsage
parameter_list|)
block|{
name|this
operator|.
name|console
operator|=
name|console
expr_stmt|;
name|this
operator|.
name|maxMemoryUsage
operator|=
name|maxMemoryUsage
expr_stmt|;
name|this
operator|.
name|memoryMXBean
operator|=
name|ManagementFactory
operator|.
name|getMemoryMXBean
argument_list|()
expr_stmt|;
name|this
operator|.
name|maxHeapSize
operator|=
name|getMaxHeapSize
argument_list|(
name|memoryMXBean
argument_list|)
expr_stmt|;
name|percentageNumberFormat
operator|=
name|NumberFormat
operator|.
name|getInstance
argument_list|()
expr_stmt|;
name|percentageNumberFormat
operator|.
name|setMinimumFractionDigits
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"JVM Max Heap Size: "
operator|+
name|this
operator|.
name|maxHeapSize
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|long
name|getMaxHeapSize
parameter_list|()
block|{
return|return
name|getMaxHeapSize
argument_list|(
name|ManagementFactory
operator|.
name|getMemoryMXBean
argument_list|()
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|long
name|getMaxHeapSize
parameter_list|(
name|MemoryMXBean
name|bean
parameter_list|)
block|{
name|long
name|maxHeapSize
init|=
name|bean
operator|.
name|getHeapMemoryUsage
argument_list|()
operator|.
name|getMax
argument_list|()
decl_stmt|;
comment|/*      * According to the javadoc, getMax() can return -1. In this case      * default to 200MB. This will probably never actually happen.      */
if|if
condition|(
name|maxHeapSize
operator|==
operator|-
literal|1
condition|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"MemoryMXBean.getHeapMemoryUsage().getMax() returned -1, "
operator|+
literal|"defaulting maxHeapSize to 200MB"
argument_list|)
expr_stmt|;
return|return
literal|200L
operator|*
literal|1024L
operator|*
literal|1024L
return|;
block|}
return|return
name|maxHeapSize
return|;
block|}
comment|/**    * Throws MapJoinMemoryExhaustionException when the JVM has consumed the    * configured percentage of memory. The arguments are used simply for the error    * message.    *    * @param tableContainerSize currently table container size    * @param numRows number of rows processed    * @throws MapJoinMemoryExhaustionException    */
specifier|public
name|void
name|checkMemoryStatus
parameter_list|(
name|long
name|tableContainerSize
parameter_list|,
name|long
name|numRows
parameter_list|)
throws|throws
name|MapJoinMemoryExhaustionException
block|{
name|long
name|usedMemory
init|=
name|memoryMXBean
operator|.
name|getHeapMemoryUsage
argument_list|()
operator|.
name|getUsed
argument_list|()
decl_stmt|;
name|double
name|percentage
init|=
operator|(
name|double
operator|)
name|usedMemory
operator|/
operator|(
name|double
operator|)
name|maxHeapSize
decl_stmt|;
name|String
name|msg
init|=
name|Utilities
operator|.
name|now
argument_list|()
operator|+
literal|"\tProcessing rows:\t"
operator|+
name|numRows
operator|+
literal|"\tHashtable size:\t"
operator|+
name|tableContainerSize
operator|+
literal|"\tMemory usage:\t"
operator|+
name|usedMemory
operator|+
literal|"\tpercentage:\t"
operator|+
name|percentageNumberFormat
operator|.
name|format
argument_list|(
name|percentage
argument_list|)
decl_stmt|;
name|console
operator|.
name|printInfo
argument_list|(
name|msg
argument_list|)
expr_stmt|;
if|if
condition|(
name|percentage
operator|>
name|maxMemoryUsage
condition|)
block|{
throw|throw
operator|new
name|MapJoinMemoryExhaustionException
argument_list|(
name|msg
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

