begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Schema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|FetchTask
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|processors
operator|.
name|CommandProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|processors
operator|.
name|CommandProcessorResponse
import|;
end_import

begin_comment
comment|/**  * Hive query executer driver  */
end_comment

begin_interface
specifier|public
interface|interface
name|IDriver
extends|extends
name|CommandProcessor
block|{
name|int
name|compile
parameter_list|(
name|String
name|string
parameter_list|)
function_decl|;
name|CommandProcessorResponse
name|compileAndRespond
parameter_list|(
name|String
name|statement
parameter_list|)
function_decl|;
name|QueryPlan
name|getPlan
parameter_list|()
function_decl|;
name|QueryDisplay
name|getQueryDisplay
parameter_list|()
function_decl|;
name|void
name|setOperationId
parameter_list|(
name|String
name|guid64
parameter_list|)
function_decl|;
name|CommandProcessorResponse
name|run
parameter_list|()
function_decl|;
annotation|@
name|Override
name|CommandProcessorResponse
name|run
parameter_list|(
name|String
name|command
parameter_list|)
function_decl|;
comment|// create some "cover" to the result?
name|boolean
name|getResults
parameter_list|(
name|List
name|res
parameter_list|)
throws|throws
name|IOException
function_decl|;
name|void
name|setMaxRows
parameter_list|(
name|int
name|maxRows
parameter_list|)
function_decl|;
name|FetchTask
name|getFetchTask
parameter_list|()
function_decl|;
name|Schema
name|getSchema
parameter_list|()
function_decl|;
name|boolean
name|isFetchingTable
parameter_list|()
function_decl|;
name|void
name|resetFetch
parameter_list|()
throws|throws
name|IOException
function_decl|;
comment|// close&destroy is used in seq coupling most of the time - the difference is either not clear; or not relevant - remove?
name|int
name|close
parameter_list|()
function_decl|;
name|void
name|destroy
parameter_list|()
function_decl|;
name|void
name|resetQueryState
parameter_list|()
function_decl|;
block|}
end_interface

end_unit

