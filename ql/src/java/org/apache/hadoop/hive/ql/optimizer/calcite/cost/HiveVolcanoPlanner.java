begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
operator|.
name|calcite
operator|.
name|cost
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|plan
operator|.
name|ConventionTraitDef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|plan
operator|.
name|RelOptPlanner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|plan
operator|.
name|volcano
operator|.
name|VolcanoPlanner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|RelCollationTraitDef
import|;
end_import

begin_comment
comment|/**  * Refinement of {@link org.apache.calcite.plan.volcano.VolcanoPlanner} for Hive.  *   *<p>  * It uses {@link org.apache.hadoop.hive.ql.optimizer.calcite.cost.HiveCost} as  * its cost model.  */
end_comment

begin_class
specifier|public
class|class
name|HiveVolcanoPlanner
extends|extends
name|VolcanoPlanner
block|{
specifier|private
specifier|static
specifier|final
name|boolean
name|ENABLE_COLLATION_TRAIT
init|=
literal|true
decl_stmt|;
comment|/** Creates a HiveVolcanoPlanner. */
specifier|public
name|HiveVolcanoPlanner
parameter_list|()
block|{
name|super
argument_list|(
name|HiveCost
operator|.
name|FACTORY
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|RelOptPlanner
name|createPlanner
parameter_list|()
block|{
specifier|final
name|VolcanoPlanner
name|planner
init|=
operator|new
name|HiveVolcanoPlanner
argument_list|()
decl_stmt|;
name|planner
operator|.
name|addRelTraitDef
argument_list|(
name|ConventionTraitDef
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
if|if
condition|(
name|ENABLE_COLLATION_TRAIT
condition|)
block|{
name|planner
operator|.
name|addRelTraitDef
argument_list|(
name|RelCollationTraitDef
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
block|}
return|return
name|planner
return|;
block|}
block|}
end_class

end_unit

