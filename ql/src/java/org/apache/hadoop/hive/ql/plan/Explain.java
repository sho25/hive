begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Retention
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|RetentionPolicy
import|;
end_import

begin_comment
comment|/**  * Explain.  *  */
end_comment

begin_annotation_defn
annotation|@
name|Retention
argument_list|(
name|RetentionPolicy
operator|.
name|RUNTIME
argument_list|)
specifier|public
annotation_defn|@interface
name|Explain
block|{
specifier|public
enum|enum
name|Level
block|{
name|USER
block|,
name|DEFAULT
block|,
name|EXTENDED
block|;
specifier|public
name|boolean
name|in
parameter_list|(
name|Level
index|[]
name|levels
parameter_list|)
block|{
for|for
control|(
name|Level
name|level
range|:
name|levels
control|)
block|{
if|if
condition|(
name|level
operator|.
name|equals
argument_list|(
name|this
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
block|}
empty_stmt|;
name|String
name|displayName
parameter_list|()
default|default
literal|""
function_decl|;
name|Level
index|[]
name|explainLevels
argument_list|()
expr|default
block|{
name|Level
operator|.
name|DEFAULT
block|,
name|Level
operator|.
name|EXTENDED
block|}
expr_stmt|;
name|boolean
name|displayOnlyOnTrue
parameter_list|()
default|default
literal|false
function_decl|;
name|boolean
name|skipHeader
parameter_list|()
default|default
literal|false
function_decl|;
block|}
end_annotation_defn

end_unit

