begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|mapjoin
operator|.
name|MapJoinMemoryExhaustionHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|HashTableSinkDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|session
operator|.
name|SessionState
import|;
end_import

begin_comment
comment|/**  * A {@link MemoryExhaustionChecker} that uses a {@link MapJoinMemoryExhaustionHandler}  * to check memory overhead.  */
end_comment

begin_class
class|class
name|DefaultMemoryExhaustionChecker
implements|implements
name|MemoryExhaustionChecker
block|{
specifier|private
name|MapJoinMemoryExhaustionHandler
name|memoryExhaustionHandler
decl_stmt|;
name|DefaultMemoryExhaustionChecker
parameter_list|(
name|SessionState
operator|.
name|LogHelper
name|console
parameter_list|,
name|HashTableSinkDesc
name|hashTableSinkDesc
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|memoryExhaustionHandler
operator|=
operator|new
name|MapJoinMemoryExhaustionHandler
argument_list|(
name|console
argument_list|,
name|hashTableSinkDesc
operator|.
name|getHashtableMemoryUsage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|checkMemoryOverhead
parameter_list|(
name|long
name|rowNumber
parameter_list|,
name|long
name|hashTableScale
parameter_list|,
name|int
name|tableContainerSize
parameter_list|)
block|{
if|if
condition|(
name|rowNumber
operator|>
name|hashTableScale
operator|&&
name|rowNumber
operator|%
name|hashTableScale
operator|==
literal|0
condition|)
block|{
name|this
operator|.
name|memoryExhaustionHandler
operator|.
name|checkMemoryStatus
argument_list|(
name|tableContainerSize
argument_list|,
name|rowNumber
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

