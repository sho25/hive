begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
package|;
end_package

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Resolver for Numeric UDAFs like sum and avg. If the input argument is string or date,  * the resolver returns the evaluator whose iterate function operates on doubles.  */
end_comment

begin_class
specifier|public
class|class
name|NumericUDAFEvaluatorResolver
extends|extends
name|DefaultUDAFEvaluatorResolver
block|{
comment|/**    * Constructor.    */
specifier|public
name|NumericUDAFEvaluatorResolver
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|UDAF
argument_list|>
name|udafClass
parameter_list|)
block|{
name|super
argument_list|(
name|udafClass
argument_list|)
expr_stmt|;
block|}
comment|/* (non-Javadoc)    * @see org.apache.hadoop.hive.ql.exec.UDAFMethodResolver#getEvaluatorClass(java.util.List)    */
annotation|@
name|Override
specifier|public
name|Class
argument_list|<
name|?
extends|extends
name|UDAFEvaluator
argument_list|>
name|getEvaluatorClass
parameter_list|(
name|List
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|argClasses
parameter_list|)
throws|throws
name|AmbiguousMethodException
block|{
comment|// Go through the argClasses and for any string, void or date time, start looking for doubles
name|ArrayList
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Class
argument_list|<
name|?
argument_list|>
name|arg
range|:
name|argClasses
control|)
block|{
if|if
condition|(
name|arg
operator|==
name|Void
operator|.
name|class
operator|||
name|arg
operator|==
name|String
operator|.
name|class
operator|||
name|arg
operator|==
name|Date
operator|.
name|class
condition|)
block|{
name|args
operator|.
name|add
argument_list|(
name|Double
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|args
operator|.
name|add
argument_list|(
name|arg
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|super
operator|.
name|getEvaluatorClass
argument_list|(
name|args
argument_list|)
return|;
block|}
block|}
end_class

end_unit

