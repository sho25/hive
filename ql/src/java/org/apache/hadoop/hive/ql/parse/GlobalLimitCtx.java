begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|LimitDesc
import|;
end_import

begin_comment
comment|/**  * context for pruning inputs. populated by GlobalLimitOptimizer  */
end_comment

begin_class
specifier|public
class|class
name|GlobalLimitCtx
block|{
specifier|private
name|boolean
name|enable
decl_stmt|;
specifier|private
name|int
name|globalLimit
decl_stmt|;
specifier|private
name|boolean
name|hasTransformOrUDTF
decl_stmt|;
specifier|private
name|LimitDesc
name|lastReduceLimitDesc
decl_stmt|;
specifier|public
name|GlobalLimitCtx
parameter_list|()
block|{
name|reset
argument_list|()
expr_stmt|;
block|}
specifier|public
name|int
name|getGlobalLimit
parameter_list|()
block|{
return|return
name|globalLimit
return|;
block|}
specifier|public
name|boolean
name|ifHasTransformOrUDTF
parameter_list|()
block|{
return|return
name|hasTransformOrUDTF
return|;
block|}
specifier|public
name|void
name|setHasTransformOrUDTF
parameter_list|(
name|boolean
name|hasTransformOrUDTF
parameter_list|)
block|{
name|this
operator|.
name|hasTransformOrUDTF
operator|=
name|hasTransformOrUDTF
expr_stmt|;
block|}
specifier|public
name|LimitDesc
name|getLastReduceLimitDesc
parameter_list|()
block|{
return|return
name|lastReduceLimitDesc
return|;
block|}
specifier|public
name|void
name|setLastReduceLimitDesc
parameter_list|(
name|LimitDesc
name|lastReduceLimitDesc
parameter_list|)
block|{
name|this
operator|.
name|lastReduceLimitDesc
operator|=
name|lastReduceLimitDesc
expr_stmt|;
block|}
specifier|public
name|boolean
name|isEnable
parameter_list|()
block|{
return|return
name|enable
return|;
block|}
specifier|public
name|void
name|enableOpt
parameter_list|(
name|int
name|globalLimit
parameter_list|)
block|{
name|this
operator|.
name|enable
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|globalLimit
operator|=
name|globalLimit
expr_stmt|;
block|}
specifier|public
name|void
name|disableOpt
parameter_list|()
block|{
name|this
operator|.
name|enable
operator|=
literal|false
expr_stmt|;
name|this
operator|.
name|globalLimit
operator|=
operator|-
literal|1
expr_stmt|;
name|this
operator|.
name|lastReduceLimitDesc
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|void
name|reset
parameter_list|()
block|{
name|enable
operator|=
literal|false
expr_stmt|;
name|globalLimit
operator|=
operator|-
literal|1
expr_stmt|;
name|hasTransformOrUDTF
operator|=
literal|false
expr_stmt|;
name|lastReduceLimitDesc
operator|=
literal|null
expr_stmt|;
block|}
block|}
end_class

end_unit

