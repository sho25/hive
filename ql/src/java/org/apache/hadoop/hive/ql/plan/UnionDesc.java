begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|Explain
operator|.
name|Level
import|;
end_import

begin_comment
comment|/**  * unionDesc is a empty class currently. However, union has more than one input  * (as compared with forward), and therefore, we need a separate class.  **/
end_comment

begin_class
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Union"
argument_list|,
name|explainLevels
operator|=
block|{
name|Level
operator|.
name|USER
block|,
name|Level
operator|.
name|DEFAULT
block|,
name|Level
operator|.
name|EXTENDED
block|}
argument_list|)
specifier|public
class|class
name|UnionDesc
extends|extends
name|AbstractOperatorDesc
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
specifier|transient
name|int
name|numInputs
decl_stmt|;
comment|// If this UnionOperator is inside the reduce side of an MR job generated
comment|// by Correlation Optimizer, which means all inputs of this UnionOperator are
comment|// from DemuxOperator. If so, we should not touch this UnionOperator in genMapRedTasks.
specifier|private
specifier|transient
name|boolean
name|allInputsInSameReducer
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"nls"
argument_list|)
specifier|public
name|UnionDesc
parameter_list|()
block|{
name|numInputs
operator|=
literal|2
expr_stmt|;
name|allInputsInSameReducer
operator|=
literal|false
expr_stmt|;
block|}
comment|/**    * @return the numInputs    */
specifier|public
name|int
name|getNumInputs
parameter_list|()
block|{
return|return
name|numInputs
return|;
block|}
comment|/**    * @param numInputs    *          the numInputs to set    */
specifier|public
name|void
name|setNumInputs
parameter_list|(
name|int
name|numInputs
parameter_list|)
block|{
name|this
operator|.
name|numInputs
operator|=
name|numInputs
expr_stmt|;
block|}
specifier|public
name|boolean
name|isAllInputsInSameReducer
parameter_list|()
block|{
return|return
name|allInputsInSameReducer
return|;
block|}
specifier|public
name|void
name|setAllInputsInSameReducer
parameter_list|(
name|boolean
name|allInputsInSameReducer
parameter_list|)
block|{
name|this
operator|.
name|allInputsInSameReducer
operator|=
name|allInputsInSameReducer
expr_stmt|;
block|}
block|}
end_class

end_unit

