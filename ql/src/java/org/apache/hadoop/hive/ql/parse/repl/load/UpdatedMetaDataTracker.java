begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
operator|.
name|repl
operator|.
name|load
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Utility class to help track and return the metadata which are updated by repl load  */
end_comment

begin_class
specifier|public
class|class
name|UpdatedMetaDataTracker
block|{
specifier|private
name|String
name|replState
decl_stmt|;
specifier|private
name|String
name|dbName
decl_stmt|;
specifier|private
name|String
name|tableName
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|partitionsList
decl_stmt|;
specifier|public
name|UpdatedMetaDataTracker
parameter_list|()
block|{
name|this
operator|.
name|replState
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|dbName
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|tableName
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|partitionsList
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|copyUpdatedMetadata
parameter_list|(
name|UpdatedMetaDataTracker
name|other
parameter_list|)
block|{
name|this
operator|.
name|replState
operator|=
name|other
operator|.
name|replState
expr_stmt|;
name|this
operator|.
name|dbName
operator|=
name|other
operator|.
name|dbName
expr_stmt|;
name|this
operator|.
name|tableName
operator|=
name|other
operator|.
name|tableName
expr_stmt|;
name|this
operator|.
name|partitionsList
operator|=
name|other
operator|.
name|getPartitions
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|set
parameter_list|(
name|String
name|replState
parameter_list|,
name|String
name|dbName
parameter_list|,
name|String
name|tableName
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partSpec
parameter_list|)
block|{
name|this
operator|.
name|replState
operator|=
name|replState
expr_stmt|;
name|this
operator|.
name|dbName
operator|=
name|dbName
expr_stmt|;
name|this
operator|.
name|tableName
operator|=
name|tableName
expr_stmt|;
if|if
condition|(
name|partSpec
operator|!=
literal|null
condition|)
block|{
name|addPartition
argument_list|(
name|partSpec
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|addPartition
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partSpec
parameter_list|)
block|{
name|partitionsList
operator|.
name|add
argument_list|(
name|partSpec
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getReplicationState
parameter_list|()
block|{
return|return
name|replState
return|;
block|}
specifier|public
name|String
name|getDatabase
parameter_list|()
block|{
return|return
name|dbName
return|;
block|}
specifier|public
name|String
name|getTable
parameter_list|()
block|{
return|return
name|tableName
return|;
block|}
specifier|public
name|List
argument_list|<
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|getPartitions
parameter_list|()
block|{
return|return
name|partitionsList
return|;
block|}
block|}
end_class

end_unit

