begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
operator|.
name|optiq
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|BitSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|Statistics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eigenbase
operator|.
name|rel
operator|.
name|RelNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eigenbase
operator|.
name|rel
operator|.
name|TableAccessRel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eigenbase
operator|.
name|relopt
operator|.
name|RelOptAbstractTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eigenbase
operator|.
name|relopt
operator|.
name|RelOptSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eigenbase
operator|.
name|reltype
operator|.
name|RelDataType
import|;
end_import

begin_comment
comment|//Fix Me: use table meta data and stats util to get stats
end_comment

begin_class
specifier|public
class|class
name|RelOptHiveTable
extends|extends
name|RelOptAbstractTable
block|{
specifier|private
specifier|final
name|Table
name|m_hiveTblMetadata
decl_stmt|;
specifier|private
name|double
name|m_rowCount
init|=
operator|-
literal|1
decl_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Double
argument_list|>
name|m_columnIdxToSizeMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Double
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Integer
argument_list|>
name|m_bucketingColMap
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Integer
argument_list|>
name|m_bucketingSortColMap
decl_stmt|;
name|Statistics
name|m_hiveStats
decl_stmt|;
comment|// NOTE: name here is the table alias which may or may not be the real name in
comment|// metadata. Use
comment|// m_hiveTblMetadata.getTableName() for table name and
comment|// m_hiveTblMetadata.getDbName() for db name.
specifier|public
name|RelOptHiveTable
parameter_list|(
name|RelOptSchema
name|schema
parameter_list|,
name|String
name|name
parameter_list|,
name|RelDataType
name|rowType
parameter_list|,
name|Table
name|hiveTblMetadata
parameter_list|,
name|Statistics
name|stats
parameter_list|)
block|{
name|super
argument_list|(
name|schema
argument_list|,
name|name
argument_list|,
name|rowType
argument_list|)
expr_stmt|;
name|m_hiveTblMetadata
operator|=
name|hiveTblMetadata
expr_stmt|;
name|m_hiveStats
operator|=
name|stats
expr_stmt|;
name|m_rowCount
operator|=
name|stats
operator|.
name|getNumRows
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isKey
parameter_list|(
name|BitSet
name|arg0
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|RelNode
name|toRel
parameter_list|(
name|ToRelContext
name|context
parameter_list|)
block|{
return|return
operator|new
name|TableAccessRel
argument_list|(
name|context
operator|.
name|getCluster
argument_list|()
argument_list|,
name|this
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|unwrap
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|arg0
parameter_list|)
block|{
return|return
name|arg0
operator|.
name|isInstance
argument_list|(
name|this
argument_list|)
condition|?
name|arg0
operator|.
name|cast
argument_list|(
name|this
argument_list|)
else|:
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|double
name|getRowCount
parameter_list|()
block|{
return|return
name|m_rowCount
return|;
block|}
specifier|public
name|Table
name|getHiveTableMD
parameter_list|()
block|{
return|return
name|m_hiveTblMetadata
return|;
block|}
specifier|public
name|Statistics
name|getHiveStats
parameter_list|()
block|{
return|return
name|m_hiveStats
return|;
block|}
block|}
end_class

end_unit

