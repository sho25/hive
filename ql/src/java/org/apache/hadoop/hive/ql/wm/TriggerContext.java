begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  * http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|wm
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|QueryInfo
import|;
end_import

begin_comment
comment|/**  * Some context information that are required for rule evaluation.  */
end_comment

begin_class
specifier|public
class|class
name|TriggerContext
block|{
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|desiredCounters
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|currentCounters
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
name|String
name|queryId
decl_stmt|;
specifier|private
name|long
name|queryStartTime
decl_stmt|;
specifier|public
name|TriggerContext
parameter_list|(
specifier|final
name|long
name|queryStartTime
parameter_list|,
specifier|final
name|String
name|queryId
parameter_list|)
block|{
name|this
operator|.
name|queryStartTime
operator|=
name|queryStartTime
expr_stmt|;
name|this
operator|.
name|queryId
operator|=
name|queryId
expr_stmt|;
block|}
specifier|public
name|String
name|getQueryId
parameter_list|()
block|{
return|return
name|queryId
return|;
block|}
specifier|public
name|void
name|setQueryId
parameter_list|(
specifier|final
name|String
name|queryId
parameter_list|)
block|{
name|this
operator|.
name|queryId
operator|=
name|queryId
expr_stmt|;
block|}
specifier|public
name|long
name|getQueryStartTime
parameter_list|()
block|{
return|return
name|queryStartTime
return|;
block|}
specifier|public
name|void
name|setQueryStartTime
parameter_list|(
specifier|final
name|long
name|queryStartTime
parameter_list|)
block|{
name|this
operator|.
name|queryStartTime
operator|=
name|queryStartTime
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getDesiredCounters
parameter_list|()
block|{
return|return
name|desiredCounters
return|;
block|}
specifier|public
name|void
name|setDesiredCounters
parameter_list|(
specifier|final
name|Set
argument_list|<
name|String
argument_list|>
name|desiredCounters
parameter_list|)
block|{
name|this
operator|.
name|desiredCounters
operator|=
name|desiredCounters
expr_stmt|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|getCurrentCounters
parameter_list|()
block|{
return|return
name|currentCounters
return|;
block|}
specifier|public
name|void
name|setCurrentCounters
parameter_list|(
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|currentCounters
parameter_list|)
block|{
name|this
operator|.
name|currentCounters
operator|=
name|currentCounters
expr_stmt|;
block|}
specifier|public
name|long
name|getElapsedTime
parameter_list|()
block|{
return|return
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
name|queryStartTime
return|;
block|}
block|}
end_class

end_unit

