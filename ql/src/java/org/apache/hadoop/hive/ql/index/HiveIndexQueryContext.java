begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|index
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|Task
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|hooks
operator|.
name|ReadEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Partition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|ExprNodeDesc
import|;
end_import

begin_comment
comment|/**  * Used to pass information between the IndexProcessor and the plugin  * IndexHandler during query processing  *  */
end_comment

begin_class
specifier|public
class|class
name|HiveIndexQueryContext
block|{
specifier|private
name|Set
argument_list|<
name|ReadEntity
argument_list|>
name|additionalSemanticInputs
decl_stmt|;
comment|// additional inputs to add to the parse context when
comment|// merging the index query tasks
specifier|private
name|String
name|indexInputFormat
decl_stmt|;
comment|// input format to set on the TableScanOperator to activate indexing
specifier|private
name|String
name|indexIntermediateFile
decl_stmt|;
comment|// name of intermediate file written by the index query for the
comment|// TableScanOperator to use
specifier|private
name|List
argument_list|<
name|Task
argument_list|<
name|?
extends|extends
name|Serializable
argument_list|>
argument_list|>
name|queryTasks
decl_stmt|;
comment|// list of tasks that will execute the index query and write
comment|// results to a temporary file
specifier|private
name|ExprNodeDesc
name|residualPredicate
decl_stmt|;
comment|// predicate that could not be processed by an index handler
comment|// and should be used on the base table scan (see HIVE-2115)
specifier|private
name|Set
argument_list|<
name|Partition
argument_list|>
name|queryPartitions
decl_stmt|;
comment|// partitions accessed by the original query
specifier|public
name|HiveIndexQueryContext
parameter_list|()
block|{
name|this
operator|.
name|additionalSemanticInputs
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|indexInputFormat
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|indexIntermediateFile
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|queryTasks
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|ReadEntity
argument_list|>
name|getAdditionalSemanticInputs
parameter_list|()
block|{
return|return
name|additionalSemanticInputs
return|;
block|}
specifier|public
name|void
name|addAdditionalSemanticInputs
parameter_list|(
name|Set
argument_list|<
name|ReadEntity
argument_list|>
name|additionalParseInputs
parameter_list|)
block|{
if|if
condition|(
name|this
operator|.
name|additionalSemanticInputs
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|additionalSemanticInputs
operator|=
operator|new
name|LinkedHashSet
argument_list|<
name|ReadEntity
argument_list|>
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|additionalSemanticInputs
operator|.
name|addAll
argument_list|(
name|additionalParseInputs
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getIndexInputFormat
parameter_list|()
block|{
return|return
name|indexInputFormat
return|;
block|}
specifier|public
name|void
name|setIndexInputFormat
parameter_list|(
name|String
name|indexInputFormat
parameter_list|)
block|{
name|this
operator|.
name|indexInputFormat
operator|=
name|indexInputFormat
expr_stmt|;
block|}
specifier|public
name|String
name|getIndexIntermediateFile
parameter_list|()
block|{
return|return
name|indexIntermediateFile
return|;
block|}
specifier|public
name|void
name|setIndexIntermediateFile
parameter_list|(
name|String
name|indexIntermediateFile
parameter_list|)
block|{
name|this
operator|.
name|indexIntermediateFile
operator|=
name|indexIntermediateFile
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|Task
argument_list|<
name|?
extends|extends
name|Serializable
argument_list|>
argument_list|>
name|getQueryTasks
parameter_list|()
block|{
return|return
name|queryTasks
return|;
block|}
specifier|public
name|void
name|setQueryTasks
parameter_list|(
name|List
argument_list|<
name|Task
argument_list|<
name|?
extends|extends
name|Serializable
argument_list|>
argument_list|>
name|indexQueryTasks
parameter_list|)
block|{
name|this
operator|.
name|queryTasks
operator|=
name|indexQueryTasks
expr_stmt|;
block|}
specifier|public
name|void
name|setResidualPredicate
parameter_list|(
name|ExprNodeDesc
name|residualPredicate
parameter_list|)
block|{
name|this
operator|.
name|residualPredicate
operator|=
name|residualPredicate
expr_stmt|;
block|}
specifier|public
name|ExprNodeDesc
name|getResidualPredicate
parameter_list|()
block|{
return|return
name|residualPredicate
return|;
block|}
specifier|public
name|Set
argument_list|<
name|Partition
argument_list|>
name|getQueryPartitions
parameter_list|()
block|{
return|return
name|queryPartitions
return|;
block|}
specifier|public
name|void
name|setQueryPartitions
parameter_list|(
name|Set
argument_list|<
name|Partition
argument_list|>
name|queryPartitions
parameter_list|)
block|{
name|this
operator|.
name|queryPartitions
operator|=
name|queryPartitions
expr_stmt|;
block|}
block|}
end_class

end_unit

