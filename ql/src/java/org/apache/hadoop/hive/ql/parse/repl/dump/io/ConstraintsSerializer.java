begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
operator|.
name|repl
operator|.
name|dump
operator|.
name|io
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|SQLForeignKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|SQLNotNullConstraint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|SQLPrimaryKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|SQLUniqueConstraint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|messaging
operator|.
name|MessageFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
operator|.
name|ReplicationSpec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
operator|.
name|SemanticException
import|;
end_import

begin_class
specifier|public
class|class
name|ConstraintsSerializer
implements|implements
name|JsonWriter
operator|.
name|Serializer
block|{
specifier|private
name|HiveConf
name|hiveConf
decl_stmt|;
specifier|private
name|List
argument_list|<
name|SQLPrimaryKey
argument_list|>
name|pks
decl_stmt|;
specifier|private
name|List
argument_list|<
name|SQLForeignKey
argument_list|>
name|fks
decl_stmt|;
specifier|private
name|List
argument_list|<
name|SQLUniqueConstraint
argument_list|>
name|uks
decl_stmt|;
specifier|private
name|List
argument_list|<
name|SQLNotNullConstraint
argument_list|>
name|nns
decl_stmt|;
specifier|public
name|ConstraintsSerializer
parameter_list|(
name|List
argument_list|<
name|SQLPrimaryKey
argument_list|>
name|pks
parameter_list|,
name|List
argument_list|<
name|SQLForeignKey
argument_list|>
name|fks
parameter_list|,
name|List
argument_list|<
name|SQLUniqueConstraint
argument_list|>
name|uks
parameter_list|,
name|List
argument_list|<
name|SQLNotNullConstraint
argument_list|>
name|nns
parameter_list|,
name|HiveConf
name|hiveConf
parameter_list|)
block|{
name|this
operator|.
name|hiveConf
operator|=
name|hiveConf
expr_stmt|;
name|this
operator|.
name|pks
operator|=
name|pks
expr_stmt|;
name|this
operator|.
name|fks
operator|=
name|fks
expr_stmt|;
name|this
operator|.
name|uks
operator|=
name|uks
expr_stmt|;
name|this
operator|.
name|nns
operator|=
name|nns
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|writeTo
parameter_list|(
name|JsonWriter
name|writer
parameter_list|,
name|ReplicationSpec
name|additionalPropertiesProvider
parameter_list|)
throws|throws
name|SemanticException
throws|,
name|IOException
block|{
name|String
name|pksString
decl_stmt|,
name|fksString
decl_stmt|,
name|uksString
decl_stmt|,
name|nnsString
decl_stmt|;
name|pksString
operator|=
name|fksString
operator|=
name|uksString
operator|=
name|nnsString
operator|=
literal|""
expr_stmt|;
if|if
condition|(
name|pks
operator|!=
literal|null
condition|)
block|{
name|pksString
operator|=
name|MessageFactory
operator|.
name|getInstance
argument_list|()
operator|.
name|buildAddPrimaryKeyMessage
argument_list|(
name|pks
argument_list|)
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|fks
operator|!=
literal|null
condition|)
block|{
name|fksString
operator|=
name|MessageFactory
operator|.
name|getInstance
argument_list|()
operator|.
name|buildAddForeignKeyMessage
argument_list|(
name|fks
argument_list|)
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|uks
operator|!=
literal|null
condition|)
block|{
name|uksString
operator|=
name|MessageFactory
operator|.
name|getInstance
argument_list|()
operator|.
name|buildAddUniqueConstraintMessage
argument_list|(
name|uks
argument_list|)
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|nns
operator|!=
literal|null
condition|)
block|{
name|nnsString
operator|=
name|MessageFactory
operator|.
name|getInstance
argument_list|()
operator|.
name|buildAddNotNullConstraintMessage
argument_list|(
name|nns
argument_list|)
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
name|writer
operator|.
name|jsonGenerator
operator|.
name|writeStringField
argument_list|(
literal|"pks"
argument_list|,
name|pksString
argument_list|)
expr_stmt|;
name|writer
operator|.
name|jsonGenerator
operator|.
name|writeStringField
argument_list|(
literal|"fks"
argument_list|,
name|fksString
argument_list|)
expr_stmt|;
name|writer
operator|.
name|jsonGenerator
operator|.
name|writeStringField
argument_list|(
literal|"uks"
argument_list|,
name|uksString
argument_list|)
expr_stmt|;
name|writer
operator|.
name|jsonGenerator
operator|.
name|writeStringField
argument_list|(
literal|"nns"
argument_list|,
name|nnsString
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

