begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * PrivilegeRegistry is used to do privilege lookups. Given a privilege name, it  * will return the Privilege object.  */
end_comment

begin_class
specifier|public
class|class
name|PrivilegeRegistry
block|{
specifier|protected
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|Privilege
argument_list|>
name|Registry
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Privilege
argument_list|>
argument_list|()
decl_stmt|;
static|static
block|{
name|Registry
operator|.
name|put
argument_list|(
name|Privilege
operator|.
name|ALL
operator|.
name|getPriv
argument_list|()
operator|.
name|toLowerCase
argument_list|()
argument_list|,
name|Privilege
operator|.
name|ALL
argument_list|)
expr_stmt|;
name|Registry
operator|.
name|put
argument_list|(
name|Privilege
operator|.
name|ALTER_DATA
operator|.
name|getPriv
argument_list|()
operator|.
name|toLowerCase
argument_list|()
argument_list|,
name|Privilege
operator|.
name|ALTER_DATA
argument_list|)
expr_stmt|;
name|Registry
operator|.
name|put
argument_list|(
name|Privilege
operator|.
name|ALTER_METADATA
operator|.
name|getPriv
argument_list|()
operator|.
name|toLowerCase
argument_list|()
argument_list|,
name|Privilege
operator|.
name|ALTER_METADATA
argument_list|)
expr_stmt|;
name|Registry
operator|.
name|put
argument_list|(
name|Privilege
operator|.
name|CREATE
operator|.
name|getPriv
argument_list|()
operator|.
name|toLowerCase
argument_list|()
argument_list|,
name|Privilege
operator|.
name|CREATE
argument_list|)
expr_stmt|;
name|Registry
operator|.
name|put
argument_list|(
name|Privilege
operator|.
name|DROP
operator|.
name|getPriv
argument_list|()
operator|.
name|toLowerCase
argument_list|()
argument_list|,
name|Privilege
operator|.
name|DROP
argument_list|)
expr_stmt|;
name|Registry
operator|.
name|put
argument_list|(
name|Privilege
operator|.
name|INDEX
operator|.
name|getPriv
argument_list|()
operator|.
name|toLowerCase
argument_list|()
argument_list|,
name|Privilege
operator|.
name|INDEX
argument_list|)
expr_stmt|;
name|Registry
operator|.
name|put
argument_list|(
name|Privilege
operator|.
name|LOCK
operator|.
name|getPriv
argument_list|()
operator|.
name|toLowerCase
argument_list|()
argument_list|,
name|Privilege
operator|.
name|LOCK
argument_list|)
expr_stmt|;
name|Registry
operator|.
name|put
argument_list|(
name|Privilege
operator|.
name|SELECT
operator|.
name|getPriv
argument_list|()
operator|.
name|toLowerCase
argument_list|()
argument_list|,
name|Privilege
operator|.
name|SELECT
argument_list|)
expr_stmt|;
name|Registry
operator|.
name|put
argument_list|(
name|Privilege
operator|.
name|SHOW_DATABASE
operator|.
name|getPriv
argument_list|()
operator|.
name|toLowerCase
argument_list|()
argument_list|,
name|Privilege
operator|.
name|SHOW_DATABASE
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|Privilege
name|getPrivilege
parameter_list|(
name|String
name|privilegeName
parameter_list|)
block|{
return|return
name|Registry
operator|.
name|get
argument_list|(
name|privilegeName
operator|.
name|toLowerCase
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

