begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|ddl
operator|.
name|database
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|ddl
operator|.
name|DDLOperationContext
import|;
end_import

begin_comment
comment|/**  * Operation process of altering a database's properties.  */
end_comment

begin_class
specifier|public
class|class
name|AlterDatabaseSetPropertiesOperation
extends|extends
name|AbstractAlterDatabaseOperation
argument_list|<
name|AlterDatabaseSetPropertiesDesc
argument_list|>
block|{
specifier|public
name|AlterDatabaseSetPropertiesOperation
parameter_list|(
name|DDLOperationContext
name|context
parameter_list|,
name|AlterDatabaseSetPropertiesDesc
name|desc
parameter_list|)
block|{
name|super
argument_list|(
name|context
argument_list|,
name|desc
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|doAlteration
parameter_list|(
name|Database
name|database
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|newParams
init|=
name|desc
operator|.
name|getDatabaseProperties
argument_list|()
decl_stmt|;
comment|// if both old and new params are not null, merge them
if|if
condition|(
name|params
operator|!=
literal|null
operator|&&
name|newParams
operator|!=
literal|null
condition|)
block|{
name|params
operator|.
name|putAll
argument_list|(
name|newParams
argument_list|)
expr_stmt|;
name|database
operator|.
name|setParameters
argument_list|(
name|params
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// if one of them is null, replace the old params with the new one
name|database
operator|.
name|setParameters
argument_list|(
name|newParams
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

