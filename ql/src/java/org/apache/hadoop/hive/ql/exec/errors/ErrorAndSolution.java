begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|errors
package|;
end_package

begin_comment
comment|/**  * Immutable class for storing a possible error and a resolution suggestion.  */
end_comment

begin_class
specifier|public
class|class
name|ErrorAndSolution
block|{
specifier|private
name|String
name|error
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|solution
init|=
literal|null
decl_stmt|;
name|ErrorAndSolution
parameter_list|(
name|String
name|error
parameter_list|,
name|String
name|solution
parameter_list|)
block|{
name|this
operator|.
name|error
operator|=
name|error
expr_stmt|;
name|this
operator|.
name|solution
operator|=
name|solution
expr_stmt|;
block|}
specifier|public
name|String
name|getError
parameter_list|()
block|{
return|return
name|error
return|;
block|}
specifier|public
name|String
name|getSolution
parameter_list|()
block|{
return|return
name|solution
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|o
operator|instanceof
name|ErrorAndSolution
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|ErrorAndSolution
name|e
init|=
operator|(
name|ErrorAndSolution
operator|)
name|o
decl_stmt|;
return|return
name|e
operator|.
name|error
operator|==
name|this
operator|.
name|error
operator|&&
name|e
operator|.
name|solution
operator|==
name|this
operator|.
name|solution
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|error
operator|.
name|hashCode
argument_list|()
operator|*
literal|37
operator|+
name|solution
operator|.
name|hashCode
argument_list|()
return|;
block|}
block|}
end_class

end_unit

