begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|repl
operator|.
name|bootstrap
operator|.
name|load
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|Context
operator|.
name|EXT_PREFIX
import|;
end_import

begin_class
specifier|public
class|class
name|PathUtils
block|{
specifier|private
specifier|static
name|int
name|pathId
init|=
literal|10000
decl_stmt|;
specifier|private
specifier|static
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|PathUtils
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|synchronized
name|Path
name|getExternalTmpPath
parameter_list|(
name|Path
name|path
parameter_list|,
name|PathInfo
name|pathInfo
parameter_list|)
block|{
name|URI
name|extURI
init|=
name|path
operator|.
name|toUri
argument_list|()
decl_stmt|;
if|if
condition|(
name|extURI
operator|.
name|getScheme
argument_list|()
operator|.
name|equals
argument_list|(
literal|"viewfs"
argument_list|)
condition|)
block|{
comment|// if we are on viewfs we don't want to use /tmp as tmp dir since rename from /tmp/..
comment|// to final /user/hive/warehouse/ will fail later, so instead pick tmp dir
comment|// on same namespace as tbl dir.
return|return
operator|new
name|Path
argument_list|(
name|pathInfo
operator|.
name|computeStagingDir
argument_list|(
name|path
operator|.
name|getParent
argument_list|()
argument_list|)
argument_list|,
name|EXT_PREFIX
operator|+
name|Integer
operator|.
name|toString
argument_list|(
operator|++
name|pathId
argument_list|)
argument_list|)
return|;
block|}
name|Path
name|fullyQualifiedPath
init|=
operator|new
name|Path
argument_list|(
name|extURI
operator|.
name|getScheme
argument_list|()
argument_list|,
name|extURI
operator|.
name|getAuthority
argument_list|()
argument_list|,
name|extURI
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
return|return
operator|new
name|Path
argument_list|(
name|pathInfo
operator|.
name|computeStagingDir
argument_list|(
name|fullyQualifiedPath
argument_list|)
argument_list|,
name|EXT_PREFIX
operator|+
name|Integer
operator|.
name|toString
argument_list|(
operator|++
name|pathId
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

