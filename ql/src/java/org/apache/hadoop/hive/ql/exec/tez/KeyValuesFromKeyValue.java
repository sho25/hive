begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|tez
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|NoSuchElementException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tez
operator|.
name|runtime
operator|.
name|library
operator|.
name|api
operator|.
name|KeyValueReader
import|;
end_import

begin_comment
comment|/**  * Provides a key/values (note the plural values) interface out of a KeyValueReader,  * needed by ReduceRecordSource when reading input from a key/value source.  */
end_comment

begin_class
specifier|public
class|class
name|KeyValuesFromKeyValue
implements|implements
name|KeyValuesAdapter
block|{
specifier|protected
name|KeyValueReader
name|reader
decl_stmt|;
specifier|protected
name|ValueIterator
argument_list|<
name|Object
argument_list|>
name|valueIterator
init|=
operator|new
name|ValueIterator
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|static
class|class
name|ValueIterator
parameter_list|<
name|T
parameter_list|>
implements|implements
name|Iterator
argument_list|<
name|T
argument_list|>
implements|,
name|Iterable
argument_list|<
name|T
argument_list|>
block|{
specifier|protected
name|boolean
name|hasNextValue
init|=
literal|false
decl_stmt|;
specifier|protected
name|T
name|value
init|=
literal|null
decl_stmt|;
annotation|@
name|Override
specifier|public
name|boolean
name|hasNext
parameter_list|()
block|{
return|return
name|hasNextValue
return|;
block|}
annotation|@
name|Override
specifier|public
name|T
name|next
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasNextValue
condition|)
block|{
throw|throw
operator|new
name|NoSuchElementException
argument_list|()
throw|;
block|}
name|hasNextValue
operator|=
literal|false
expr_stmt|;
return|return
name|value
return|;
block|}
name|void
name|reset
parameter_list|(
name|T
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
name|hasNextValue
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|remove
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|T
argument_list|>
name|iterator
parameter_list|()
block|{
return|return
name|this
return|;
block|}
block|}
specifier|public
name|KeyValuesFromKeyValue
parameter_list|(
name|KeyValueReader
name|reader
parameter_list|)
block|{
name|this
operator|.
name|reader
operator|=
name|reader
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Object
name|getCurrentKey
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|reader
operator|.
name|getCurrentKey
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Iterable
argument_list|<
name|Object
argument_list|>
name|getCurrentValues
parameter_list|()
throws|throws
name|IOException
block|{
name|Object
name|obj
init|=
name|reader
operator|.
name|getCurrentValue
argument_list|()
decl_stmt|;
name|valueIterator
operator|.
name|reset
argument_list|(
name|obj
argument_list|)
expr_stmt|;
return|return
name|valueIterator
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|next
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|reader
operator|.
name|next
argument_list|()
return|;
block|}
block|}
end_class

end_unit

