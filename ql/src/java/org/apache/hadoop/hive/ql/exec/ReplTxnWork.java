begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|Explain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|Explain
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * ReplTxnTask.  * Used for replaying the transaction related events.  */
end_comment

begin_class
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Replication Transaction"
argument_list|,
name|explainLevels
operator|=
block|{
name|Level
operator|.
name|USER
block|,
name|Level
operator|.
name|DEFAULT
block|,
name|Level
operator|.
name|EXTENDED
block|}
argument_list|)
specifier|public
class|class
name|ReplTxnWork
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|String
name|dbName
decl_stmt|;
specifier|private
name|String
name|tableName
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Long
argument_list|>
name|txnIds
decl_stmt|;
comment|/**    * OperationType.    * Different kind of events supported for replaying.    */
specifier|public
enum|enum
name|OperationType
block|{
name|REPL_OPEN_TXN
block|,
name|REPL_ABORT_TXN
block|,
name|REPL_COMMIT_TXN
block|}
name|OperationType
name|operation
decl_stmt|;
specifier|public
name|ReplTxnWork
parameter_list|(
name|String
name|dbName
parameter_list|,
name|String
name|tableName
parameter_list|,
name|List
argument_list|<
name|Long
argument_list|>
name|txnIds
parameter_list|,
name|OperationType
name|type
parameter_list|)
block|{
name|this
operator|.
name|txnIds
operator|=
name|txnIds
expr_stmt|;
name|this
operator|.
name|dbName
operator|=
name|dbName
expr_stmt|;
name|this
operator|.
name|tableName
operator|=
name|tableName
expr_stmt|;
name|this
operator|.
name|operation
operator|=
name|type
expr_stmt|;
block|}
specifier|public
name|ReplTxnWork
parameter_list|(
name|String
name|dbName
parameter_list|,
name|String
name|tableName
parameter_list|,
name|Long
name|txnId
parameter_list|,
name|OperationType
name|type
parameter_list|)
block|{
name|this
operator|.
name|txnIds
operator|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|txnId
argument_list|)
expr_stmt|;
name|this
operator|.
name|dbName
operator|=
name|dbName
expr_stmt|;
name|this
operator|.
name|tableName
operator|=
name|tableName
expr_stmt|;
name|this
operator|.
name|operation
operator|=
name|type
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|Long
argument_list|>
name|getTxnIds
parameter_list|()
block|{
return|return
name|txnIds
return|;
block|}
specifier|public
name|Long
name|getTxnId
parameter_list|(
name|int
name|idx
parameter_list|)
block|{
return|return
name|txnIds
operator|.
name|get
argument_list|(
name|idx
argument_list|)
return|;
block|}
specifier|public
name|String
name|getDbName
parameter_list|()
block|{
return|return
name|dbName
return|;
block|}
specifier|public
name|String
name|getTableName
parameter_list|()
block|{
return|return
name|tableName
return|;
block|}
specifier|public
name|String
name|getReplPolicy
parameter_list|()
block|{
if|if
condition|(
operator|(
name|dbName
operator|==
literal|null
operator|)
operator|||
operator|(
name|dbName
operator|.
name|isEmpty
argument_list|()
operator|)
condition|)
block|{
return|return
literal|null
return|;
block|}
elseif|else
if|if
condition|(
operator|(
name|tableName
operator|==
literal|null
operator|)
operator|||
operator|(
name|tableName
operator|.
name|isEmpty
argument_list|()
operator|)
condition|)
block|{
return|return
name|dbName
operator|.
name|toLowerCase
argument_list|()
operator|+
literal|".*"
return|;
block|}
else|else
block|{
return|return
name|dbName
operator|.
name|toLowerCase
argument_list|()
operator|+
literal|"."
operator|+
name|tableName
operator|.
name|toLowerCase
argument_list|()
return|;
block|}
block|}
specifier|public
name|OperationType
name|getOperationType
parameter_list|()
block|{
return|return
name|operation
return|;
block|}
block|}
end_class

end_unit

