begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|Operator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|ReduceSinkOperator
import|;
end_import

begin_comment
comment|/**  * Mux operator descriptor implementation..  *  */
end_comment

begin_class
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Mux Operator"
argument_list|)
specifier|public
class|class
name|MuxDesc
extends|extends
name|AbstractOperatorDesc
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|List
argument_list|<
name|List
argument_list|<
name|ExprNodeDesc
argument_list|>
argument_list|>
name|parentToKeyCols
decl_stmt|;
specifier|private
name|List
argument_list|<
name|List
argument_list|<
name|ExprNodeDesc
argument_list|>
argument_list|>
name|parentToValueCols
decl_stmt|;
specifier|private
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|parentToOutputKeyColumnNames
decl_stmt|;
specifier|private
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|parentToOutputValueColumnNames
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Integer
argument_list|>
name|parentToTag
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Integer
argument_list|,
name|Integer
argument_list|>
name|newParentIndexToOldParentIndex
decl_stmt|;
specifier|public
name|MuxDesc
parameter_list|()
block|{   }
comment|// A MuxDesc is only generated from a corresponding ReduceSinkDesc.
specifier|public
name|MuxDesc
parameter_list|(
name|List
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
name|ops
parameter_list|)
block|{
name|int
name|numParents
init|=
name|ops
operator|.
name|size
argument_list|()
decl_stmt|;
name|parentToKeyCols
operator|=
operator|new
name|ArrayList
argument_list|<
name|List
argument_list|<
name|ExprNodeDesc
argument_list|>
argument_list|>
argument_list|(
name|numParents
argument_list|)
expr_stmt|;
name|parentToOutputKeyColumnNames
operator|=
operator|new
name|ArrayList
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|(
name|numParents
argument_list|)
expr_stmt|;
name|parentToValueCols
operator|=
operator|new
name|ArrayList
argument_list|<
name|List
argument_list|<
name|ExprNodeDesc
argument_list|>
argument_list|>
argument_list|(
name|numParents
argument_list|)
expr_stmt|;
name|parentToOutputValueColumnNames
operator|=
operator|new
name|ArrayList
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|(
name|numParents
argument_list|)
expr_stmt|;
name|parentToTag
operator|=
operator|new
name|ArrayList
argument_list|<
name|Integer
argument_list|>
argument_list|(
name|numParents
argument_list|)
expr_stmt|;
for|for
control|(
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
name|op
range|:
name|ops
control|)
block|{
if|if
condition|(
name|op
operator|!=
literal|null
operator|&&
name|op
operator|instanceof
name|ReduceSinkOperator
condition|)
block|{
name|ReduceSinkOperator
name|rsop
init|=
operator|(
name|ReduceSinkOperator
operator|)
name|op
decl_stmt|;
name|List
argument_list|<
name|ExprNodeDesc
argument_list|>
name|keyCols
init|=
name|rsop
operator|.
name|getConf
argument_list|()
operator|.
name|getKeyCols
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|ExprNodeDesc
argument_list|>
name|valueCols
init|=
name|rsop
operator|.
name|getConf
argument_list|()
operator|.
name|getValueCols
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|outputKeyColumnNames
init|=
name|rsop
operator|.
name|getConf
argument_list|()
operator|.
name|getOutputKeyColumnNames
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|outputValueColumnNames
init|=
name|rsop
operator|.
name|getConf
argument_list|()
operator|.
name|getOutputValueColumnNames
argument_list|()
decl_stmt|;
name|int
name|tag
init|=
name|rsop
operator|.
name|getConf
argument_list|()
operator|.
name|getTag
argument_list|()
decl_stmt|;
name|parentToKeyCols
operator|.
name|add
argument_list|(
name|keyCols
argument_list|)
expr_stmt|;
name|parentToValueCols
operator|.
name|add
argument_list|(
name|valueCols
argument_list|)
expr_stmt|;
name|parentToOutputKeyColumnNames
operator|.
name|add
argument_list|(
name|outputKeyColumnNames
argument_list|)
expr_stmt|;
name|parentToOutputValueColumnNames
operator|.
name|add
argument_list|(
name|outputValueColumnNames
argument_list|)
expr_stmt|;
name|parentToTag
operator|.
name|add
argument_list|(
name|tag
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|parentToKeyCols
operator|.
name|add
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|parentToValueCols
operator|.
name|add
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|parentToOutputKeyColumnNames
operator|.
name|add
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|parentToOutputValueColumnNames
operator|.
name|add
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|parentToTag
operator|.
name|add
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|List
argument_list|<
name|List
argument_list|<
name|ExprNodeDesc
argument_list|>
argument_list|>
name|getParentToKeyCols
parameter_list|()
block|{
return|return
name|parentToKeyCols
return|;
block|}
specifier|public
name|void
name|setParentToKeyCols
parameter_list|(
name|List
argument_list|<
name|List
argument_list|<
name|ExprNodeDesc
argument_list|>
argument_list|>
name|parentToKeyCols
parameter_list|)
block|{
name|this
operator|.
name|parentToKeyCols
operator|=
name|parentToKeyCols
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|List
argument_list|<
name|ExprNodeDesc
argument_list|>
argument_list|>
name|getParentToValueCols
parameter_list|()
block|{
return|return
name|parentToValueCols
return|;
block|}
specifier|public
name|void
name|setParentToValueCols
parameter_list|(
name|List
argument_list|<
name|List
argument_list|<
name|ExprNodeDesc
argument_list|>
argument_list|>
name|parentToValueCols
parameter_list|)
block|{
name|this
operator|.
name|parentToValueCols
operator|=
name|parentToValueCols
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|getParentToOutputKeyColumnNames
parameter_list|()
block|{
return|return
name|parentToOutputKeyColumnNames
return|;
block|}
specifier|public
name|void
name|setParentToOutputKeyColumnNames
parameter_list|(
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|parentToOutputKeyColumnNames
parameter_list|)
block|{
name|this
operator|.
name|parentToOutputKeyColumnNames
operator|=
name|parentToOutputKeyColumnNames
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|getParentToOutputValueColumnNames
parameter_list|()
block|{
return|return
name|parentToOutputValueColumnNames
return|;
block|}
specifier|public
name|void
name|setParentToOutputValueColumnNames
parameter_list|(
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|parentToOutputValueColumnNames
parameter_list|)
block|{
name|this
operator|.
name|parentToOutputValueColumnNames
operator|=
name|parentToOutputValueColumnNames
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|Integer
argument_list|>
name|getParentToTag
parameter_list|()
block|{
return|return
name|parentToTag
return|;
block|}
specifier|public
name|void
name|setParentToTag
parameter_list|(
name|List
argument_list|<
name|Integer
argument_list|>
name|parentToTag
parameter_list|)
block|{
name|this
operator|.
name|parentToTag
operator|=
name|parentToTag
expr_stmt|;
block|}
specifier|public
name|Map
argument_list|<
name|Integer
argument_list|,
name|Integer
argument_list|>
name|getNewParentIndexToOldParentIndex
parameter_list|()
block|{
return|return
name|newParentIndexToOldParentIndex
return|;
block|}
specifier|public
name|void
name|setNewParentIndexToOldParentIndex
parameter_list|(
name|Map
argument_list|<
name|Integer
argument_list|,
name|Integer
argument_list|>
name|newParentIndexToOldParentIndex
parameter_list|)
block|{
name|this
operator|.
name|newParentIndexToOldParentIndex
operator|=
name|newParentIndexToOldParentIndex
expr_stmt|;
block|}
block|}
end_class

end_unit

