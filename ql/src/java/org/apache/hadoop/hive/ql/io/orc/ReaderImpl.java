begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FSDataInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspector
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
specifier|final
class|class
name|ReaderImpl
implements|implements
name|Reader
block|{
specifier|private
specifier|static
specifier|final
name|int
name|DIRECTORY_SIZE_GUESS
init|=
literal|16
operator|*
literal|1024
decl_stmt|;
specifier|private
specifier|final
name|FileSystem
name|fileSystem
decl_stmt|;
specifier|private
specifier|final
name|Path
name|path
decl_stmt|;
specifier|private
specifier|final
name|CompressionKind
name|compressionKind
decl_stmt|;
specifier|private
specifier|final
name|CompressionCodec
name|codec
decl_stmt|;
specifier|private
specifier|final
name|int
name|bufferSize
decl_stmt|;
specifier|private
specifier|final
name|OrcProto
operator|.
name|Footer
name|footer
decl_stmt|;
specifier|private
specifier|final
name|ObjectInspector
name|inspector
decl_stmt|;
specifier|private
specifier|static
class|class
name|StripeInformationImpl
implements|implements
name|StripeInformation
block|{
specifier|private
specifier|final
name|OrcProto
operator|.
name|StripeInformation
name|stripe
decl_stmt|;
name|StripeInformationImpl
parameter_list|(
name|OrcProto
operator|.
name|StripeInformation
name|stripe
parameter_list|)
block|{
name|this
operator|.
name|stripe
operator|=
name|stripe
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getOffset
parameter_list|()
block|{
return|return
name|stripe
operator|.
name|getOffset
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getDataLength
parameter_list|()
block|{
return|return
name|stripe
operator|.
name|getDataLength
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getFooterLength
parameter_list|()
block|{
return|return
name|stripe
operator|.
name|getFooterLength
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getIndexLength
parameter_list|()
block|{
return|return
name|stripe
operator|.
name|getIndexLength
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getNumberOfRows
parameter_list|()
block|{
return|return
name|stripe
operator|.
name|getNumberOfRows
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"offset: "
operator|+
name|getOffset
argument_list|()
operator|+
literal|" data: "
operator|+
name|getDataLength
argument_list|()
operator|+
literal|" rows: "
operator|+
name|getNumberOfRows
argument_list|()
operator|+
literal|" tail: "
operator|+
name|getFooterLength
argument_list|()
operator|+
literal|" index: "
operator|+
name|getIndexLength
argument_list|()
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|long
name|getNumberOfRows
parameter_list|()
block|{
return|return
name|footer
operator|.
name|getNumberOfRows
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Iterable
argument_list|<
name|String
argument_list|>
name|getMetadataKeys
parameter_list|()
block|{
name|List
argument_list|<
name|String
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|OrcProto
operator|.
name|UserMetadataItem
name|item
range|:
name|footer
operator|.
name|getMetadataList
argument_list|()
control|)
block|{
name|result
operator|.
name|add
argument_list|(
name|item
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
annotation|@
name|Override
specifier|public
name|ByteBuffer
name|getMetadataValue
parameter_list|(
name|String
name|key
parameter_list|)
block|{
for|for
control|(
name|OrcProto
operator|.
name|UserMetadataItem
name|item
range|:
name|footer
operator|.
name|getMetadataList
argument_list|()
control|)
block|{
if|if
condition|(
name|item
operator|.
name|hasName
argument_list|()
operator|&&
name|item
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|key
argument_list|)
condition|)
block|{
return|return
name|item
operator|.
name|getValue
argument_list|()
operator|.
name|asReadOnlyByteBuffer
argument_list|()
return|;
block|}
block|}
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Can't find user metadata "
operator|+
name|key
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|CompressionKind
name|getCompression
parameter_list|()
block|{
return|return
name|compressionKind
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getCompressionSize
parameter_list|()
block|{
return|return
name|bufferSize
return|;
block|}
annotation|@
name|Override
specifier|public
name|Iterable
argument_list|<
name|StripeInformation
argument_list|>
name|getStripes
parameter_list|()
block|{
return|return
operator|new
name|Iterable
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|StripeInformation
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|StripeInformation
argument_list|>
name|iterator
parameter_list|()
block|{
return|return
operator|new
name|Iterator
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|StripeInformation
argument_list|>
argument_list|()
block|{
specifier|private
specifier|final
name|Iterator
argument_list|<
name|OrcProto
operator|.
name|StripeInformation
argument_list|>
name|inner
init|=
name|footer
operator|.
name|getStripesList
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|boolean
name|hasNext
parameter_list|()
block|{
return|return
name|inner
operator|.
name|hasNext
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|StripeInformation
name|next
parameter_list|()
block|{
return|return
operator|new
name|StripeInformationImpl
argument_list|(
name|inner
operator|.
name|next
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|remove
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"remove unsupported"
argument_list|)
throw|;
block|}
block|}
return|;
block|}
block|}
return|;
block|}
annotation|@
name|Override
specifier|public
name|ObjectInspector
name|getObjectInspector
parameter_list|()
block|{
return|return
name|inspector
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getContentLength
parameter_list|()
block|{
return|return
name|footer
operator|.
name|getContentLength
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|OrcProto
operator|.
name|Type
argument_list|>
name|getTypes
parameter_list|()
block|{
return|return
name|footer
operator|.
name|getTypesList
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getRowIndexStride
parameter_list|()
block|{
return|return
name|footer
operator|.
name|getRowIndexStride
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|ColumnStatistics
index|[]
name|getStatistics
parameter_list|()
block|{
name|ColumnStatistics
index|[]
name|result
init|=
operator|new
name|ColumnStatistics
index|[
name|footer
operator|.
name|getTypesCount
argument_list|()
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|result
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
name|result
index|[
name|i
index|]
operator|=
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|footer
operator|.
name|getStatistics
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
name|ReaderImpl
parameter_list|(
name|FileSystem
name|fs
parameter_list|,
name|Path
name|path
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|fileSystem
operator|=
name|fs
expr_stmt|;
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
name|FSDataInputStream
name|file
init|=
name|fs
operator|.
name|open
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|long
name|size
init|=
name|fs
operator|.
name|getFileStatus
argument_list|(
name|path
argument_list|)
operator|.
name|getLen
argument_list|()
decl_stmt|;
name|int
name|readSize
init|=
operator|(
name|int
operator|)
name|Math
operator|.
name|min
argument_list|(
name|size
argument_list|,
name|DIRECTORY_SIZE_GUESS
argument_list|)
decl_stmt|;
name|file
operator|.
name|seek
argument_list|(
name|size
operator|-
name|readSize
argument_list|)
expr_stmt|;
name|ByteBuffer
name|buffer
init|=
name|ByteBuffer
operator|.
name|allocate
argument_list|(
name|readSize
argument_list|)
decl_stmt|;
name|file
operator|.
name|readFully
argument_list|(
name|buffer
operator|.
name|array
argument_list|()
argument_list|,
name|buffer
operator|.
name|arrayOffset
argument_list|()
operator|+
name|buffer
operator|.
name|position
argument_list|()
argument_list|,
name|buffer
operator|.
name|remaining
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|psLen
init|=
name|buffer
operator|.
name|get
argument_list|(
name|readSize
operator|-
literal|1
argument_list|)
decl_stmt|;
name|int
name|psOffset
init|=
name|readSize
operator|-
literal|1
operator|-
name|psLen
decl_stmt|;
name|CodedInputStream
name|in
init|=
name|CodedInputStream
operator|.
name|newInstance
argument_list|(
name|buffer
operator|.
name|array
argument_list|()
argument_list|,
name|buffer
operator|.
name|arrayOffset
argument_list|()
operator|+
name|psOffset
argument_list|,
name|psLen
argument_list|)
decl_stmt|;
name|OrcProto
operator|.
name|PostScript
name|ps
init|=
name|OrcProto
operator|.
name|PostScript
operator|.
name|parseFrom
argument_list|(
name|in
argument_list|)
decl_stmt|;
name|int
name|footerSize
init|=
operator|(
name|int
operator|)
name|ps
operator|.
name|getFooterLength
argument_list|()
decl_stmt|;
name|bufferSize
operator|=
operator|(
name|int
operator|)
name|ps
operator|.
name|getCompressionBlockSize
argument_list|()
expr_stmt|;
switch|switch
condition|(
name|ps
operator|.
name|getCompression
argument_list|()
condition|)
block|{
case|case
name|NONE
case|:
name|compressionKind
operator|=
name|CompressionKind
operator|.
name|NONE
expr_stmt|;
break|break;
case|case
name|ZLIB
case|:
name|compressionKind
operator|=
name|CompressionKind
operator|.
name|ZLIB
expr_stmt|;
break|break;
case|case
name|SNAPPY
case|:
name|compressionKind
operator|=
name|CompressionKind
operator|.
name|SNAPPY
expr_stmt|;
break|break;
case|case
name|LZO
case|:
name|compressionKind
operator|=
name|CompressionKind
operator|.
name|LZO
expr_stmt|;
break|break;
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Unknown compression"
argument_list|)
throw|;
block|}
name|codec
operator|=
name|WriterImpl
operator|.
name|createCodec
argument_list|(
name|compressionKind
argument_list|)
expr_stmt|;
name|int
name|extra
init|=
name|Math
operator|.
name|max
argument_list|(
literal|0
argument_list|,
name|psLen
operator|+
literal|1
operator|+
name|footerSize
operator|-
name|readSize
argument_list|)
decl_stmt|;
if|if
condition|(
name|extra
operator|>
literal|0
condition|)
block|{
name|file
operator|.
name|seek
argument_list|(
name|size
operator|-
name|readSize
operator|-
name|extra
argument_list|)
expr_stmt|;
name|ByteBuffer
name|extraBuf
init|=
name|ByteBuffer
operator|.
name|allocate
argument_list|(
name|extra
operator|+
name|readSize
argument_list|)
decl_stmt|;
name|file
operator|.
name|readFully
argument_list|(
name|extraBuf
operator|.
name|array
argument_list|()
argument_list|,
name|extraBuf
operator|.
name|arrayOffset
argument_list|()
operator|+
name|extraBuf
operator|.
name|position
argument_list|()
argument_list|,
name|extra
argument_list|)
expr_stmt|;
name|extraBuf
operator|.
name|position
argument_list|(
name|extra
argument_list|)
expr_stmt|;
name|extraBuf
operator|.
name|put
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
name|buffer
operator|=
name|extraBuf
expr_stmt|;
name|buffer
operator|.
name|position
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|limit
argument_list|(
name|footerSize
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|buffer
operator|.
name|position
argument_list|(
name|psOffset
operator|-
name|footerSize
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|limit
argument_list|(
name|psOffset
argument_list|)
expr_stmt|;
block|}
name|InputStream
name|instream
init|=
name|InStream
operator|.
name|create
argument_list|(
literal|"footer"
argument_list|,
name|buffer
argument_list|,
name|codec
argument_list|,
name|bufferSize
argument_list|)
decl_stmt|;
name|footer
operator|=
name|OrcProto
operator|.
name|Footer
operator|.
name|parseFrom
argument_list|(
name|instream
argument_list|)
expr_stmt|;
name|inspector
operator|=
name|OrcStruct
operator|.
name|createObjectInspector
argument_list|(
literal|0
argument_list|,
name|footer
operator|.
name|getTypesList
argument_list|()
argument_list|)
expr_stmt|;
name|file
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|RecordReader
name|rows
parameter_list|(
name|boolean
index|[]
name|include
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|rows
argument_list|(
literal|0
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|,
name|include
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|RecordReader
name|rows
parameter_list|(
name|long
name|offset
parameter_list|,
name|long
name|length
parameter_list|,
name|boolean
index|[]
name|include
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|RecordReaderImpl
argument_list|(
name|this
operator|.
name|getStripes
argument_list|()
argument_list|,
name|fileSystem
argument_list|,
name|path
argument_list|,
name|offset
argument_list|,
name|length
argument_list|,
name|footer
operator|.
name|getTypesList
argument_list|()
argument_list|,
name|codec
argument_list|,
name|bufferSize
argument_list|,
name|include
argument_list|,
name|footer
operator|.
name|getRowIndexStride
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

