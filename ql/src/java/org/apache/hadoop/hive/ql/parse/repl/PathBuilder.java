begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
operator|.
name|repl
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|ErrorMsg
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
operator|.
name|SemanticException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_comment
comment|/**  * Path builder to stitch together paths with different components might be useful as utils across  * replication semantic analyzer atleast.  */
end_comment

begin_class
specifier|public
class|class
name|PathBuilder
block|{
specifier|private
name|ArrayList
argument_list|<
name|String
argument_list|>
name|descendants
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
name|String
name|basePath
decl_stmt|;
specifier|public
name|PathBuilder
parameter_list|(
name|String
name|basePath
parameter_list|)
block|{
name|this
operator|.
name|basePath
operator|=
name|basePath
expr_stmt|;
block|}
specifier|public
name|PathBuilder
name|addDescendant
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|descendants
operator|.
name|add
argument_list|(
name|path
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Path
name|build
parameter_list|()
block|{
name|Path
name|result
init|=
operator|new
name|Path
argument_list|(
name|this
operator|.
name|basePath
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|descendant
range|:
name|descendants
control|)
block|{
name|result
operator|=
operator|new
name|Path
argument_list|(
name|result
argument_list|,
name|descendant
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
specifier|public
specifier|static
name|Path
name|fullyQualifiedHDFSUri
parameter_list|(
name|Path
name|input
parameter_list|,
name|FileSystem
name|hdfsFileSystem
parameter_list|)
throws|throws
name|SemanticException
block|{
name|URI
name|uri
init|=
name|input
operator|.
name|toUri
argument_list|()
decl_stmt|;
name|String
name|scheme
init|=
name|hdfsFileSystem
operator|.
name|getScheme
argument_list|()
decl_stmt|;
name|String
name|authority
init|=
name|hdfsFileSystem
operator|.
name|getUri
argument_list|()
operator|.
name|getAuthority
argument_list|()
decl_stmt|;
name|String
name|path
init|=
name|uri
operator|.
name|getPath
argument_list|()
decl_stmt|;
try|try
block|{
return|return
operator|new
name|Path
argument_list|(
operator|new
name|URI
argument_list|(
name|scheme
argument_list|,
name|authority
argument_list|,
name|path
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SemanticException
argument_list|(
name|ErrorMsg
operator|.
name|INVALID_PATH
operator|.
name|getMsg
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

