begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|BucketMatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|Operator
import|;
end_import

begin_comment
comment|/**  * MapredLocalWork.  *  */
end_comment

begin_class
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Map Reduce Local Work"
argument_list|)
specifier|public
class|class
name|MapredLocalWork
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|Operator
argument_list|<
name|?
extends|extends
name|Serializable
argument_list|>
argument_list|>
name|aliasToWork
decl_stmt|;
specifier|private
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|FetchWork
argument_list|>
name|aliasToFetchWork
decl_stmt|;
specifier|private
name|boolean
name|inputFileChangeSensitive
decl_stmt|;
specifier|private
name|BucketMapJoinContext
name|bucketMapjoinContext
decl_stmt|;
specifier|private
name|String
name|tmpFileURI
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|Serializable
argument_list|>
argument_list|>
name|dummyParentOp
decl_stmt|;
specifier|public
name|MapredLocalWork
parameter_list|()
block|{    }
specifier|public
name|MapredLocalWork
parameter_list|(
specifier|final
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|Operator
argument_list|<
name|?
extends|extends
name|Serializable
argument_list|>
argument_list|>
name|aliasToWork
parameter_list|,
specifier|final
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|FetchWork
argument_list|>
name|aliasToFetchWork
parameter_list|)
block|{
name|this
operator|.
name|aliasToWork
operator|=
name|aliasToWork
expr_stmt|;
name|this
operator|.
name|aliasToFetchWork
operator|=
name|aliasToFetchWork
expr_stmt|;
block|}
specifier|public
name|MapredLocalWork
parameter_list|(
name|MapredLocalWork
name|clone
parameter_list|)
block|{
name|this
operator|.
name|tmpFileURI
operator|=
name|clone
operator|.
name|tmpFileURI
expr_stmt|;
name|this
operator|.
name|inputFileChangeSensitive
operator|=
name|clone
operator|.
name|inputFileChangeSensitive
expr_stmt|;
block|}
specifier|public
name|void
name|setDummyParentOp
parameter_list|(
name|List
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|Serializable
argument_list|>
argument_list|>
name|op
parameter_list|)
block|{
name|this
operator|.
name|dummyParentOp
operator|=
name|op
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|Operator
argument_list|<
name|?
extends|extends
name|Serializable
argument_list|>
argument_list|>
name|getDummyParentOp
parameter_list|()
block|{
return|return
name|this
operator|.
name|dummyParentOp
return|;
block|}
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Alias -> Map Local Operator Tree"
argument_list|)
specifier|public
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|Operator
argument_list|<
name|?
extends|extends
name|Serializable
argument_list|>
argument_list|>
name|getAliasToWork
parameter_list|()
block|{
return|return
name|aliasToWork
return|;
block|}
specifier|public
name|void
name|setAliasToWork
parameter_list|(
specifier|final
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|Operator
argument_list|<
name|?
extends|extends
name|Serializable
argument_list|>
argument_list|>
name|aliasToWork
parameter_list|)
block|{
name|this
operator|.
name|aliasToWork
operator|=
name|aliasToWork
expr_stmt|;
block|}
comment|/**    * @return the aliasToFetchWork    */
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Alias -> Map Local Tables"
argument_list|)
specifier|public
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|FetchWork
argument_list|>
name|getAliasToFetchWork
parameter_list|()
block|{
return|return
name|aliasToFetchWork
return|;
block|}
comment|/**    * @param aliasToFetchWork    *          the aliasToFetchWork to set    */
specifier|public
name|void
name|setAliasToFetchWork
parameter_list|(
specifier|final
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|FetchWork
argument_list|>
name|aliasToFetchWork
parameter_list|)
block|{
name|this
operator|.
name|aliasToFetchWork
operator|=
name|aliasToFetchWork
expr_stmt|;
block|}
specifier|public
name|boolean
name|getInputFileChangeSensitive
parameter_list|()
block|{
return|return
name|inputFileChangeSensitive
return|;
block|}
specifier|public
name|void
name|setInputFileChangeSensitive
parameter_list|(
name|boolean
name|inputFileChangeSensitive
parameter_list|)
block|{
name|this
operator|.
name|inputFileChangeSensitive
operator|=
name|inputFileChangeSensitive
expr_stmt|;
block|}
specifier|public
name|void
name|deriveExplainAttributes
parameter_list|()
block|{
if|if
condition|(
name|bucketMapjoinContext
operator|!=
literal|null
condition|)
block|{
name|bucketMapjoinContext
operator|.
name|deriveBucketMapJoinMapping
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|FetchWork
name|fetchWork
range|:
name|aliasToFetchWork
operator|.
name|values
argument_list|()
control|)
block|{
if|if
condition|(
name|fetchWork
operator|.
name|getTblDesc
argument_list|()
operator|==
literal|null
condition|)
block|{
continue|continue;
block|}
name|PlanUtils
operator|.
name|configureTableJobPropertiesForStorageHandler
argument_list|(
name|fetchWork
operator|.
name|getTblDesc
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Bucket Mapjoin Context"
argument_list|,
name|normalExplain
operator|=
literal|false
argument_list|)
specifier|public
name|BucketMapJoinContext
name|getBucketMapjoinContext
parameter_list|()
block|{
return|return
name|bucketMapjoinContext
return|;
block|}
specifier|public
name|void
name|setBucketMapjoinContext
parameter_list|(
name|BucketMapJoinContext
name|bucketMapjoinContext
parameter_list|)
block|{
name|this
operator|.
name|bucketMapjoinContext
operator|=
name|bucketMapjoinContext
expr_stmt|;
block|}
specifier|public
name|void
name|setTmpFileURI
parameter_list|(
name|String
name|tmpFileURI
parameter_list|)
block|{
name|this
operator|.
name|tmpFileURI
operator|=
name|tmpFileURI
expr_stmt|;
block|}
specifier|public
name|String
name|getTmpFileURI
parameter_list|()
block|{
return|return
name|tmpFileURI
return|;
block|}
specifier|public
specifier|static
class|class
name|BucketMapJoinContext
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
comment|// used for bucket map join
specifier|private
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|>
name|aliasBucketFileNameMapping
decl_stmt|;
specifier|private
name|String
name|mapJoinBigTableAlias
decl_stmt|;
specifier|private
name|Class
argument_list|<
name|?
extends|extends
name|BucketMatcher
argument_list|>
name|bucketMatcherClass
decl_stmt|;
specifier|private
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|>
name|aliasBucketBaseFileNameMapping
decl_stmt|;
specifier|private
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|Integer
argument_list|>
name|bucketFileNameMapping
decl_stmt|;
specifier|public
name|void
name|setMapJoinBigTableAlias
parameter_list|(
name|String
name|bigTableAlias
parameter_list|)
block|{
name|this
operator|.
name|mapJoinBigTableAlias
operator|=
name|bigTableAlias
expr_stmt|;
block|}
specifier|public
name|void
name|deriveBucketMapJoinMapping
parameter_list|()
block|{
if|if
condition|(
name|aliasBucketFileNameMapping
operator|!=
literal|null
condition|)
block|{
name|Iterator
argument_list|<
name|Entry
argument_list|<
name|String
argument_list|,
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|>
argument_list|>
name|iter
init|=
name|aliasBucketFileNameMapping
operator|.
name|entrySet
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|aliasBucketBaseFileNameMapping
operator|=
operator|new
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|>
argument_list|()
expr_stmt|;
while|while
condition|(
name|iter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Entry
argument_list|<
name|String
argument_list|,
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|>
name|old
init|=
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|>
name|newBucketBaseFileNameMapping
init|=
operator|new
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|Iterator
argument_list|<
name|Entry
argument_list|<
name|String
argument_list|,
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|>
name|oldAliasFileNameMappingIter
init|=
name|old
operator|.
name|getValue
argument_list|()
operator|.
name|entrySet
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|oldAliasFileNameMappingIter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
comment|//For a give table and its bucket full file path list, only keep the base file name (remove file path etc).
comment|//And put the new list into the new mapping.
name|Entry
argument_list|<
name|String
argument_list|,
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|>
name|oldTableBucketFileNames
init|=
name|oldAliasFileNameMappingIter
operator|.
name|next
argument_list|()
decl_stmt|;
name|ArrayList
argument_list|<
name|String
argument_list|>
name|oldTableBucketNames
init|=
name|oldTableBucketFileNames
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|ArrayList
argument_list|<
name|String
argument_list|>
name|newTableBucketFileBaseName
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|(
name|oldTableBucketNames
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
comment|//for each bucket file, only keep its base files and store into a new list.
if|if
condition|(
name|oldTableBucketNames
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|String
name|bucketFName
range|:
name|oldTableBucketNames
control|)
block|{
name|newTableBucketFileBaseName
operator|.
name|add
argument_list|(
name|getBaseFileName
argument_list|(
name|bucketFName
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|String
name|bigTblBucketFileName
init|=
name|getBaseFileName
argument_list|(
name|oldTableBucketFileNames
operator|.
name|getKey
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|newBucketBaseFileNameMapping
operator|.
name|containsKey
argument_list|(
name|bigTblBucketFileName
argument_list|)
condition|)
block|{
name|String
name|fullPath
init|=
name|oldTableBucketFileNames
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|String
name|dir
init|=
name|getBaseFileName
argument_list|(
name|fullPath
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|fullPath
operator|.
name|lastIndexOf
argument_list|(
name|bigTblBucketFileName
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|bigTblBucketFileName
operator|=
name|dir
operator|+
name|File
operator|.
name|separator
operator|+
name|bigTblBucketFileName
expr_stmt|;
block|}
comment|//put the new mapping
name|newBucketBaseFileNameMapping
operator|.
name|put
argument_list|(
name|bigTblBucketFileName
argument_list|,
name|newTableBucketFileBaseName
argument_list|)
expr_stmt|;
block|}
name|String
name|tableAlias
init|=
name|old
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|aliasBucketBaseFileNameMapping
operator|.
name|put
argument_list|(
name|tableAlias
argument_list|,
name|newBucketBaseFileNameMapping
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|String
name|getBaseFileName
parameter_list|(
name|String
name|path
parameter_list|)
block|{
try|try
block|{
return|return
operator|(
operator|(
operator|new
name|Path
argument_list|(
name|path
argument_list|)
operator|)
operator|.
name|getName
argument_list|()
operator|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// This could be due to either URI syntax error or File constructor
comment|// illegal arg; we don't really care which one it is.
return|return
name|path
return|;
block|}
block|}
specifier|public
name|String
name|getMapJoinBigTableAlias
parameter_list|()
block|{
return|return
name|mapJoinBigTableAlias
return|;
block|}
specifier|public
name|Class
argument_list|<
name|?
extends|extends
name|BucketMatcher
argument_list|>
name|getBucketMatcherClass
parameter_list|()
block|{
return|return
name|bucketMatcherClass
return|;
block|}
specifier|public
name|void
name|setBucketMatcherClass
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|BucketMatcher
argument_list|>
name|bucketMatcherClass
parameter_list|)
block|{
name|this
operator|.
name|bucketMatcherClass
operator|=
name|bucketMatcherClass
expr_stmt|;
block|}
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Alias Bucket File Name Mapping"
argument_list|,
name|normalExplain
operator|=
literal|false
argument_list|)
specifier|public
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|>
name|getAliasBucketFileNameMapping
parameter_list|()
block|{
return|return
name|aliasBucketFileNameMapping
return|;
block|}
specifier|public
name|void
name|setAliasBucketFileNameMapping
parameter_list|(
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|>
name|aliasBucketFileNameMapping
parameter_list|)
block|{
name|this
operator|.
name|aliasBucketFileNameMapping
operator|=
name|aliasBucketFileNameMapping
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
if|if
condition|(
name|aliasBucketFileNameMapping
operator|!=
literal|null
condition|)
block|{
return|return
literal|"Mapping:"
operator|+
name|aliasBucketFileNameMapping
operator|.
name|toString
argument_list|()
return|;
block|}
else|else
block|{
return|return
literal|""
return|;
block|}
block|}
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Alias Bucket Base File Name Mapping"
argument_list|,
name|normalExplain
operator|=
literal|false
argument_list|)
specifier|public
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|>
name|getAliasBucketBaseFileNameMapping
parameter_list|()
block|{
return|return
name|aliasBucketBaseFileNameMapping
return|;
block|}
specifier|public
name|void
name|setAliasBucketBaseFileNameMapping
parameter_list|(
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|>
name|aliasBucketBaseFileNameMapping
parameter_list|)
block|{
name|this
operator|.
name|aliasBucketBaseFileNameMapping
operator|=
name|aliasBucketBaseFileNameMapping
expr_stmt|;
block|}
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Alias Bucket Output File Name Mapping"
argument_list|,
name|normalExplain
operator|=
literal|false
argument_list|)
specifier|public
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|Integer
argument_list|>
name|getBucketFileNameMapping
parameter_list|()
block|{
return|return
name|bucketFileNameMapping
return|;
block|}
specifier|public
name|void
name|setBucketFileNameMapping
parameter_list|(
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|Integer
argument_list|>
name|bucketFileNameMapping
parameter_list|)
block|{
name|this
operator|.
name|bucketFileNameMapping
operator|=
name|bucketFileNameMapping
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

