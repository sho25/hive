begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|encoded
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|io
operator|.
name|encoded
operator|.
name|EncodedColumnBatch
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|io
operator|.
name|encoded
operator|.
name|EncodedColumnBatch
operator|.
name|ColumnStreamData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|CompressionCodec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|OrcProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|PositionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|SettableUncompressedStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|TreeReaderFactory
import|;
end_import

begin_class
specifier|public
class|class
name|EncodedTreeReaderFactory
extends|extends
name|TreeReaderFactory
block|{
comment|/**    * We choose to use a toy programming language, so we cannot use multiple inheritance.    * If we could, we could have this inherit TreeReader to contain the common impl, and then    * have e.g. SettableIntTreeReader inherit both Settable... and Int.. TreeReader-s.    * Instead, we have a settable interface that the caller will cast to and call setBuffers.    */
specifier|public
interface|interface
name|SettableTreeReader
block|{
name|void
name|setBuffers
parameter_list|(
name|ColumnStreamData
index|[]
name|streamBuffers
parameter_list|,
name|boolean
name|sameStripe
parameter_list|)
throws|throws
name|IOException
function_decl|;
block|}
specifier|protected
specifier|static
class|class
name|TimestampStreamReader
extends|extends
name|TimestampTreeReader
implements|implements
name|SettableTreeReader
block|{
specifier|private
name|boolean
name|isFileCompressed
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_presentStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_secondsStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_nanosStream
decl_stmt|;
specifier|private
name|TimestampStreamReader
parameter_list|(
name|int
name|columnId
parameter_list|,
name|SettableUncompressedStream
name|present
parameter_list|,
name|SettableUncompressedStream
name|data
parameter_list|,
name|SettableUncompressedStream
name|nanos
parameter_list|,
name|boolean
name|isFileCompressed
parameter_list|,
name|OrcProto
operator|.
name|ColumnEncoding
name|encoding
parameter_list|,
name|boolean
name|skipCorrupt
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|columnId
argument_list|,
name|present
argument_list|,
name|data
argument_list|,
name|nanos
argument_list|,
name|encoding
argument_list|,
name|skipCorrupt
argument_list|)
expr_stmt|;
name|this
operator|.
name|isFileCompressed
operator|=
name|isFileCompressed
expr_stmt|;
name|this
operator|.
name|_presentStream
operator|=
name|present
expr_stmt|;
name|this
operator|.
name|_secondsStream
operator|=
name|data
expr_stmt|;
name|this
operator|.
name|_nanosStream
operator|=
name|nanos
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|seek
parameter_list|(
name|PositionProvider
name|index
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|present
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|present
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
comment|// data stream could be empty stream or already reached end of stream before present stream.
comment|// This can happen if all values in stream are nulls or last row group values are all null.
if|if
condition|(
name|_secondsStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|data
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_nanosStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|nanos
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setBuffers
parameter_list|(
name|ColumnStreamData
index|[]
name|streamsData
parameter_list|,
name|boolean
name|sameStripe
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|_presentStream
operator|!=
literal|null
condition|)
block|{
name|_presentStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|PRESENT_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_secondsStream
operator|!=
literal|null
condition|)
block|{
name|_secondsStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|DATA_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_nanosStream
operator|!=
literal|null
condition|)
block|{
name|_nanosStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|SECONDARY_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|StreamReaderBuilder
block|{
specifier|private
name|Long
name|fileId
decl_stmt|;
specifier|private
name|int
name|columnIndex
decl_stmt|;
specifier|private
name|ColumnStreamData
name|presentStream
decl_stmt|;
specifier|private
name|ColumnStreamData
name|dataStream
decl_stmt|;
specifier|private
name|ColumnStreamData
name|nanosStream
decl_stmt|;
specifier|private
name|CompressionCodec
name|compressionCodec
decl_stmt|;
specifier|private
name|OrcProto
operator|.
name|ColumnEncoding
name|columnEncoding
decl_stmt|;
specifier|private
name|boolean
name|skipCorrupt
decl_stmt|;
specifier|public
name|StreamReaderBuilder
name|setFileId
parameter_list|(
name|Long
name|fileId
parameter_list|)
block|{
name|this
operator|.
name|fileId
operator|=
name|fileId
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnIndex
parameter_list|(
name|int
name|columnIndex
parameter_list|)
block|{
name|this
operator|.
name|columnIndex
operator|=
name|columnIndex
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setPresentStream
parameter_list|(
name|ColumnStreamData
name|presentStream
parameter_list|)
block|{
name|this
operator|.
name|presentStream
operator|=
name|presentStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setSecondsStream
parameter_list|(
name|ColumnStreamData
name|dataStream
parameter_list|)
block|{
name|this
operator|.
name|dataStream
operator|=
name|dataStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setNanosStream
parameter_list|(
name|ColumnStreamData
name|secondaryStream
parameter_list|)
block|{
name|this
operator|.
name|nanosStream
operator|=
name|secondaryStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setCompressionCodec
parameter_list|(
name|CompressionCodec
name|compressionCodec
parameter_list|)
block|{
name|this
operator|.
name|compressionCodec
operator|=
name|compressionCodec
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnEncoding
parameter_list|(
name|OrcProto
operator|.
name|ColumnEncoding
name|encoding
parameter_list|)
block|{
name|this
operator|.
name|columnEncoding
operator|=
name|encoding
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|skipCorrupt
parameter_list|(
name|boolean
name|skipCorrupt
parameter_list|)
block|{
name|this
operator|.
name|skipCorrupt
operator|=
name|skipCorrupt
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|TimestampStreamReader
name|build
parameter_list|()
throws|throws
name|IOException
block|{
name|SettableUncompressedStream
name|present
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|presentStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|data
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|dataStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|nanos
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|SECONDARY
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|nanosStream
argument_list|)
decl_stmt|;
name|boolean
name|isFileCompressed
init|=
name|compressionCodec
operator|!=
literal|null
decl_stmt|;
return|return
operator|new
name|TimestampStreamReader
argument_list|(
name|columnIndex
argument_list|,
name|present
argument_list|,
name|data
argument_list|,
name|nanos
argument_list|,
name|isFileCompressed
argument_list|,
name|columnEncoding
argument_list|,
name|skipCorrupt
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
name|StreamReaderBuilder
name|builder
parameter_list|()
block|{
return|return
operator|new
name|StreamReaderBuilder
argument_list|()
return|;
block|}
block|}
specifier|protected
specifier|static
class|class
name|StringStreamReader
extends|extends
name|StringTreeReader
implements|implements
name|SettableTreeReader
block|{
specifier|private
name|boolean
name|_isFileCompressed
decl_stmt|;
specifier|private
name|boolean
name|_isDictionaryEncoding
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_presentStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_dataStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_lengthStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_dictionaryStream
decl_stmt|;
specifier|private
name|StringStreamReader
parameter_list|(
name|int
name|columnId
parameter_list|,
name|SettableUncompressedStream
name|present
parameter_list|,
name|SettableUncompressedStream
name|data
parameter_list|,
name|SettableUncompressedStream
name|length
parameter_list|,
name|SettableUncompressedStream
name|dictionary
parameter_list|,
name|boolean
name|isFileCompressed
parameter_list|,
name|OrcProto
operator|.
name|ColumnEncoding
name|encoding
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|columnId
argument_list|,
name|present
argument_list|,
name|data
argument_list|,
name|length
argument_list|,
name|dictionary
argument_list|,
name|encoding
argument_list|)
expr_stmt|;
name|this
operator|.
name|_isDictionaryEncoding
operator|=
name|dictionary
operator|!=
literal|null
expr_stmt|;
name|this
operator|.
name|_isFileCompressed
operator|=
name|isFileCompressed
expr_stmt|;
name|this
operator|.
name|_presentStream
operator|=
name|present
expr_stmt|;
name|this
operator|.
name|_dataStream
operator|=
name|data
expr_stmt|;
name|this
operator|.
name|_lengthStream
operator|=
name|length
expr_stmt|;
name|this
operator|.
name|_dictionaryStream
operator|=
name|dictionary
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|seek
parameter_list|(
name|PositionProvider
name|index
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|present
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|reader
operator|.
name|getPresent
argument_list|()
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_isDictionaryEncoding
condition|)
block|{
comment|// DICTIONARY encoding
comment|// data stream could be empty stream or already reached end of stream before present stream.
comment|// This can happen if all values in stream are nulls or last row group values are all null.
if|if
condition|(
name|_dataStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
operator|(
operator|(
name|StringDictionaryTreeReader
operator|)
name|reader
operator|)
operator|.
name|getReader
argument_list|()
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
comment|// DIRECT encoding
comment|// data stream could be empty stream or already reached end of stream before present stream.
comment|// This can happen if all values in stream are nulls or last row group values are all null.
if|if
condition|(
name|_dataStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
operator|(
operator|(
name|StringDirectTreeReader
operator|)
name|reader
operator|)
operator|.
name|getStream
argument_list|()
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_lengthStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
operator|(
operator|(
name|StringDirectTreeReader
operator|)
name|reader
operator|)
operator|.
name|getLengths
argument_list|()
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setBuffers
parameter_list|(
name|ColumnStreamData
index|[]
name|streamsData
parameter_list|,
name|boolean
name|sameStripe
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|_presentStream
operator|!=
literal|null
condition|)
block|{
name|_presentStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|PRESENT_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_dataStream
operator|!=
literal|null
condition|)
block|{
name|_dataStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|DATA_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|_isDictionaryEncoding
condition|)
block|{
if|if
condition|(
name|_lengthStream
operator|!=
literal|null
condition|)
block|{
name|_lengthStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|LENGTH_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|// set these streams only if the stripe is different
if|if
condition|(
operator|!
name|sameStripe
operator|&&
name|_isDictionaryEncoding
condition|)
block|{
if|if
condition|(
name|_lengthStream
operator|!=
literal|null
condition|)
block|{
name|_lengthStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|LENGTH_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_dictionaryStream
operator|!=
literal|null
condition|)
block|{
name|_dictionaryStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|DICTIONARY_DATA_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
specifier|static
class|class
name|StreamReaderBuilder
block|{
specifier|private
name|Long
name|fileId
decl_stmt|;
specifier|private
name|int
name|columnIndex
decl_stmt|;
specifier|private
name|ColumnStreamData
name|presentStream
decl_stmt|;
specifier|private
name|ColumnStreamData
name|dataStream
decl_stmt|;
specifier|private
name|ColumnStreamData
name|dictionaryStream
decl_stmt|;
specifier|private
name|ColumnStreamData
name|lengthStream
decl_stmt|;
specifier|private
name|CompressionCodec
name|compressionCodec
decl_stmt|;
specifier|private
name|OrcProto
operator|.
name|ColumnEncoding
name|columnEncoding
decl_stmt|;
specifier|public
name|StreamReaderBuilder
name|setFileId
parameter_list|(
name|Long
name|fileId
parameter_list|)
block|{
name|this
operator|.
name|fileId
operator|=
name|fileId
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnIndex
parameter_list|(
name|int
name|columnIndex
parameter_list|)
block|{
name|this
operator|.
name|columnIndex
operator|=
name|columnIndex
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setPresentStream
parameter_list|(
name|ColumnStreamData
name|presentStream
parameter_list|)
block|{
name|this
operator|.
name|presentStream
operator|=
name|presentStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setDataStream
parameter_list|(
name|ColumnStreamData
name|dataStream
parameter_list|)
block|{
name|this
operator|.
name|dataStream
operator|=
name|dataStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setLengthStream
parameter_list|(
name|ColumnStreamData
name|lengthStream
parameter_list|)
block|{
name|this
operator|.
name|lengthStream
operator|=
name|lengthStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setDictionaryStream
parameter_list|(
name|ColumnStreamData
name|dictStream
parameter_list|)
block|{
name|this
operator|.
name|dictionaryStream
operator|=
name|dictStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setCompressionCodec
parameter_list|(
name|CompressionCodec
name|compressionCodec
parameter_list|)
block|{
name|this
operator|.
name|compressionCodec
operator|=
name|compressionCodec
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnEncoding
parameter_list|(
name|OrcProto
operator|.
name|ColumnEncoding
name|encoding
parameter_list|)
block|{
name|this
operator|.
name|columnEncoding
operator|=
name|encoding
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StringStreamReader
name|build
parameter_list|()
throws|throws
name|IOException
block|{
name|SettableUncompressedStream
name|present
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|presentStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|data
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|dataStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|length
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|LENGTH
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|lengthStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|dictionary
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DICTIONARY_DATA
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|dictionaryStream
argument_list|)
decl_stmt|;
name|boolean
name|isFileCompressed
init|=
name|compressionCodec
operator|!=
literal|null
decl_stmt|;
return|return
operator|new
name|StringStreamReader
argument_list|(
name|columnIndex
argument_list|,
name|present
argument_list|,
name|data
argument_list|,
name|length
argument_list|,
name|dictionary
argument_list|,
name|isFileCompressed
argument_list|,
name|columnEncoding
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
name|StreamReaderBuilder
name|builder
parameter_list|()
block|{
return|return
operator|new
name|StreamReaderBuilder
argument_list|()
return|;
block|}
block|}
specifier|protected
specifier|static
class|class
name|ShortStreamReader
extends|extends
name|ShortTreeReader
implements|implements
name|SettableTreeReader
block|{
specifier|private
name|boolean
name|isFileCompressed
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_presentStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_dataStream
decl_stmt|;
specifier|private
name|ShortStreamReader
parameter_list|(
name|int
name|columnId
parameter_list|,
name|SettableUncompressedStream
name|present
parameter_list|,
name|SettableUncompressedStream
name|data
parameter_list|,
name|boolean
name|isFileCompressed
parameter_list|,
name|OrcProto
operator|.
name|ColumnEncoding
name|encoding
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|columnId
argument_list|,
name|present
argument_list|,
name|data
argument_list|,
name|encoding
argument_list|)
expr_stmt|;
name|this
operator|.
name|isFileCompressed
operator|=
name|isFileCompressed
expr_stmt|;
name|this
operator|.
name|_presentStream
operator|=
name|present
expr_stmt|;
name|this
operator|.
name|_dataStream
operator|=
name|data
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|seek
parameter_list|(
name|PositionProvider
name|index
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|present
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|present
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
comment|// data stream could be empty stream or already reached end of stream before present stream.
comment|// This can happen if all values in stream are nulls or last row group values are all null.
if|if
condition|(
name|_dataStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|reader
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setBuffers
parameter_list|(
name|ColumnStreamData
index|[]
name|streamsData
parameter_list|,
name|boolean
name|sameStripe
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|_presentStream
operator|!=
literal|null
condition|)
block|{
name|_presentStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|PRESENT_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_dataStream
operator|!=
literal|null
condition|)
block|{
name|_dataStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|DATA_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|StreamReaderBuilder
block|{
specifier|private
name|Long
name|fileId
decl_stmt|;
specifier|private
name|int
name|columnIndex
decl_stmt|;
specifier|private
name|ColumnStreamData
name|presentStream
decl_stmt|;
specifier|private
name|ColumnStreamData
name|dataStream
decl_stmt|;
specifier|private
name|CompressionCodec
name|compressionCodec
decl_stmt|;
specifier|private
name|OrcProto
operator|.
name|ColumnEncoding
name|columnEncoding
decl_stmt|;
specifier|public
name|StreamReaderBuilder
name|setFileId
parameter_list|(
name|Long
name|fileId
parameter_list|)
block|{
name|this
operator|.
name|fileId
operator|=
name|fileId
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnIndex
parameter_list|(
name|int
name|columnIndex
parameter_list|)
block|{
name|this
operator|.
name|columnIndex
operator|=
name|columnIndex
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setPresentStream
parameter_list|(
name|ColumnStreamData
name|presentStream
parameter_list|)
block|{
name|this
operator|.
name|presentStream
operator|=
name|presentStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setDataStream
parameter_list|(
name|ColumnStreamData
name|dataStream
parameter_list|)
block|{
name|this
operator|.
name|dataStream
operator|=
name|dataStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setCompressionCodec
parameter_list|(
name|CompressionCodec
name|compressionCodec
parameter_list|)
block|{
name|this
operator|.
name|compressionCodec
operator|=
name|compressionCodec
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnEncoding
parameter_list|(
name|OrcProto
operator|.
name|ColumnEncoding
name|encoding
parameter_list|)
block|{
name|this
operator|.
name|columnEncoding
operator|=
name|encoding
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|ShortStreamReader
name|build
parameter_list|()
throws|throws
name|IOException
block|{
name|SettableUncompressedStream
name|present
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|presentStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|data
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|dataStream
argument_list|)
decl_stmt|;
name|boolean
name|isFileCompressed
init|=
name|compressionCodec
operator|!=
literal|null
decl_stmt|;
return|return
operator|new
name|ShortStreamReader
argument_list|(
name|columnIndex
argument_list|,
name|present
argument_list|,
name|data
argument_list|,
name|isFileCompressed
argument_list|,
name|columnEncoding
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
name|StreamReaderBuilder
name|builder
parameter_list|()
block|{
return|return
operator|new
name|StreamReaderBuilder
argument_list|()
return|;
block|}
block|}
specifier|protected
specifier|static
class|class
name|LongStreamReader
extends|extends
name|LongTreeReader
implements|implements
name|SettableTreeReader
block|{
specifier|private
name|boolean
name|_isFileCompressed
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_presentStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_dataStream
decl_stmt|;
specifier|private
name|LongStreamReader
parameter_list|(
name|int
name|columnId
parameter_list|,
name|SettableUncompressedStream
name|present
parameter_list|,
name|SettableUncompressedStream
name|data
parameter_list|,
name|boolean
name|isFileCompressed
parameter_list|,
name|OrcProto
operator|.
name|ColumnEncoding
name|encoding
parameter_list|,
name|boolean
name|skipCorrupt
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|columnId
argument_list|,
name|present
argument_list|,
name|data
argument_list|,
name|encoding
argument_list|,
name|skipCorrupt
argument_list|)
expr_stmt|;
name|this
operator|.
name|_isFileCompressed
operator|=
name|isFileCompressed
expr_stmt|;
name|this
operator|.
name|_presentStream
operator|=
name|present
expr_stmt|;
name|this
operator|.
name|_dataStream
operator|=
name|data
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|seek
parameter_list|(
name|PositionProvider
name|index
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|present
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|present
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
comment|// data stream could be empty stream or already reached end of stream before present stream.
comment|// This can happen if all values in stream are nulls or last row group values are all null.
if|if
condition|(
name|_dataStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|reader
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setBuffers
parameter_list|(
name|ColumnStreamData
index|[]
name|streamsData
parameter_list|,
name|boolean
name|sameStripe
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|_presentStream
operator|!=
literal|null
condition|)
block|{
name|_presentStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|PRESENT_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_dataStream
operator|!=
literal|null
condition|)
block|{
name|_dataStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|DATA_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|StreamReaderBuilder
block|{
specifier|private
name|Long
name|fileId
decl_stmt|;
specifier|private
name|int
name|columnIndex
decl_stmt|;
specifier|private
name|ColumnStreamData
name|presentStream
decl_stmt|;
specifier|private
name|ColumnStreamData
name|dataStream
decl_stmt|;
specifier|private
name|CompressionCodec
name|compressionCodec
decl_stmt|;
specifier|private
name|OrcProto
operator|.
name|ColumnEncoding
name|columnEncoding
decl_stmt|;
specifier|private
name|boolean
name|skipCorrupt
decl_stmt|;
specifier|public
name|StreamReaderBuilder
name|setFileId
parameter_list|(
name|Long
name|fileId
parameter_list|)
block|{
name|this
operator|.
name|fileId
operator|=
name|fileId
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnIndex
parameter_list|(
name|int
name|columnIndex
parameter_list|)
block|{
name|this
operator|.
name|columnIndex
operator|=
name|columnIndex
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setPresentStream
parameter_list|(
name|ColumnStreamData
name|presentStream
parameter_list|)
block|{
name|this
operator|.
name|presentStream
operator|=
name|presentStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setDataStream
parameter_list|(
name|ColumnStreamData
name|dataStream
parameter_list|)
block|{
name|this
operator|.
name|dataStream
operator|=
name|dataStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setCompressionCodec
parameter_list|(
name|CompressionCodec
name|compressionCodec
parameter_list|)
block|{
name|this
operator|.
name|compressionCodec
operator|=
name|compressionCodec
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnEncoding
parameter_list|(
name|OrcProto
operator|.
name|ColumnEncoding
name|encoding
parameter_list|)
block|{
name|this
operator|.
name|columnEncoding
operator|=
name|encoding
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|skipCorrupt
parameter_list|(
name|boolean
name|skipCorrupt
parameter_list|)
block|{
name|this
operator|.
name|skipCorrupt
operator|=
name|skipCorrupt
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|LongStreamReader
name|build
parameter_list|()
throws|throws
name|IOException
block|{
name|SettableUncompressedStream
name|present
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|presentStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|data
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|dataStream
argument_list|)
decl_stmt|;
name|boolean
name|isFileCompressed
init|=
name|compressionCodec
operator|!=
literal|null
decl_stmt|;
return|return
operator|new
name|LongStreamReader
argument_list|(
name|columnIndex
argument_list|,
name|present
argument_list|,
name|data
argument_list|,
name|isFileCompressed
argument_list|,
name|columnEncoding
argument_list|,
name|skipCorrupt
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
name|StreamReaderBuilder
name|builder
parameter_list|()
block|{
return|return
operator|new
name|StreamReaderBuilder
argument_list|()
return|;
block|}
block|}
specifier|protected
specifier|static
class|class
name|IntStreamReader
extends|extends
name|IntTreeReader
implements|implements
name|SettableTreeReader
block|{
specifier|private
name|boolean
name|_isFileCompressed
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_presentStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_dataStream
decl_stmt|;
specifier|private
name|IntStreamReader
parameter_list|(
name|int
name|columnId
parameter_list|,
name|SettableUncompressedStream
name|present
parameter_list|,
name|SettableUncompressedStream
name|data
parameter_list|,
name|boolean
name|isFileCompressed
parameter_list|,
name|OrcProto
operator|.
name|ColumnEncoding
name|encoding
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|columnId
argument_list|,
name|present
argument_list|,
name|data
argument_list|,
name|encoding
argument_list|)
expr_stmt|;
name|this
operator|.
name|_isFileCompressed
operator|=
name|isFileCompressed
expr_stmt|;
name|this
operator|.
name|_dataStream
operator|=
name|data
expr_stmt|;
name|this
operator|.
name|_presentStream
operator|=
name|present
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|seek
parameter_list|(
name|PositionProvider
name|index
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|present
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|present
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
comment|// data stream could be empty stream or already reached end of stream before present stream.
comment|// This can happen if all values in stream are nulls or last row group values are all null.
if|if
condition|(
name|_dataStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|reader
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setBuffers
parameter_list|(
name|ColumnStreamData
index|[]
name|streamsData
parameter_list|,
name|boolean
name|sameStripe
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|_presentStream
operator|!=
literal|null
condition|)
block|{
name|_presentStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|PRESENT_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_dataStream
operator|!=
literal|null
condition|)
block|{
name|_dataStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|DATA_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|StreamReaderBuilder
block|{
specifier|private
name|Long
name|fileId
decl_stmt|;
specifier|private
name|int
name|columnIndex
decl_stmt|;
specifier|private
name|ColumnStreamData
name|presentStream
decl_stmt|;
specifier|private
name|ColumnStreamData
name|dataStream
decl_stmt|;
specifier|private
name|CompressionCodec
name|compressionCodec
decl_stmt|;
specifier|private
name|OrcProto
operator|.
name|ColumnEncoding
name|columnEncoding
decl_stmt|;
specifier|public
name|StreamReaderBuilder
name|setFileId
parameter_list|(
name|Long
name|fileId
parameter_list|)
block|{
name|this
operator|.
name|fileId
operator|=
name|fileId
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnIndex
parameter_list|(
name|int
name|columnIndex
parameter_list|)
block|{
name|this
operator|.
name|columnIndex
operator|=
name|columnIndex
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setPresentStream
parameter_list|(
name|ColumnStreamData
name|presentStream
parameter_list|)
block|{
name|this
operator|.
name|presentStream
operator|=
name|presentStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setDataStream
parameter_list|(
name|ColumnStreamData
name|dataStream
parameter_list|)
block|{
name|this
operator|.
name|dataStream
operator|=
name|dataStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setCompressionCodec
parameter_list|(
name|CompressionCodec
name|compressionCodec
parameter_list|)
block|{
name|this
operator|.
name|compressionCodec
operator|=
name|compressionCodec
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnEncoding
parameter_list|(
name|OrcProto
operator|.
name|ColumnEncoding
name|encoding
parameter_list|)
block|{
name|this
operator|.
name|columnEncoding
operator|=
name|encoding
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|IntStreamReader
name|build
parameter_list|()
throws|throws
name|IOException
block|{
name|SettableUncompressedStream
name|present
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|presentStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|data
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|dataStream
argument_list|)
decl_stmt|;
name|boolean
name|isFileCompressed
init|=
name|compressionCodec
operator|!=
literal|null
decl_stmt|;
return|return
operator|new
name|IntStreamReader
argument_list|(
name|columnIndex
argument_list|,
name|present
argument_list|,
name|data
argument_list|,
name|isFileCompressed
argument_list|,
name|columnEncoding
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
name|StreamReaderBuilder
name|builder
parameter_list|()
block|{
return|return
operator|new
name|StreamReaderBuilder
argument_list|()
return|;
block|}
block|}
specifier|protected
specifier|static
class|class
name|FloatStreamReader
extends|extends
name|FloatTreeReader
implements|implements
name|SettableTreeReader
block|{
specifier|private
name|boolean
name|_isFileCompressed
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_presentStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_dataStream
decl_stmt|;
specifier|private
name|FloatStreamReader
parameter_list|(
name|int
name|columnId
parameter_list|,
name|SettableUncompressedStream
name|present
parameter_list|,
name|SettableUncompressedStream
name|data
parameter_list|,
name|boolean
name|isFileCompressed
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|columnId
argument_list|,
name|present
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|this
operator|.
name|_isFileCompressed
operator|=
name|isFileCompressed
expr_stmt|;
name|this
operator|.
name|_presentStream
operator|=
name|present
expr_stmt|;
name|this
operator|.
name|_dataStream
operator|=
name|data
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|seek
parameter_list|(
name|PositionProvider
name|index
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|present
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|present
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
comment|// data stream could be empty stream or already reached end of stream before present stream.
comment|// This can happen if all values in stream are nulls or last row group values are all null.
if|if
condition|(
name|_dataStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|stream
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setBuffers
parameter_list|(
name|ColumnStreamData
index|[]
name|streamsData
parameter_list|,
name|boolean
name|sameStripe
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|_presentStream
operator|!=
literal|null
condition|)
block|{
name|_presentStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|PRESENT_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_dataStream
operator|!=
literal|null
condition|)
block|{
name|_dataStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|DATA_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|StreamReaderBuilder
block|{
specifier|private
name|Long
name|fileId
decl_stmt|;
specifier|private
name|int
name|columnIndex
decl_stmt|;
specifier|private
name|ColumnStreamData
name|presentStream
decl_stmt|;
specifier|private
name|ColumnStreamData
name|dataStream
decl_stmt|;
specifier|private
name|CompressionCodec
name|compressionCodec
decl_stmt|;
specifier|public
name|StreamReaderBuilder
name|setFileId
parameter_list|(
name|Long
name|fileId
parameter_list|)
block|{
name|this
operator|.
name|fileId
operator|=
name|fileId
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnIndex
parameter_list|(
name|int
name|columnIndex
parameter_list|)
block|{
name|this
operator|.
name|columnIndex
operator|=
name|columnIndex
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setPresentStream
parameter_list|(
name|ColumnStreamData
name|presentStream
parameter_list|)
block|{
name|this
operator|.
name|presentStream
operator|=
name|presentStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setDataStream
parameter_list|(
name|ColumnStreamData
name|dataStream
parameter_list|)
block|{
name|this
operator|.
name|dataStream
operator|=
name|dataStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setCompressionCodec
parameter_list|(
name|CompressionCodec
name|compressionCodec
parameter_list|)
block|{
name|this
operator|.
name|compressionCodec
operator|=
name|compressionCodec
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|FloatStreamReader
name|build
parameter_list|()
throws|throws
name|IOException
block|{
name|SettableUncompressedStream
name|present
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|presentStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|data
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|dataStream
argument_list|)
decl_stmt|;
name|boolean
name|isFileCompressed
init|=
name|compressionCodec
operator|!=
literal|null
decl_stmt|;
return|return
operator|new
name|FloatStreamReader
argument_list|(
name|columnIndex
argument_list|,
name|present
argument_list|,
name|data
argument_list|,
name|isFileCompressed
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
name|StreamReaderBuilder
name|builder
parameter_list|()
block|{
return|return
operator|new
name|StreamReaderBuilder
argument_list|()
return|;
block|}
block|}
specifier|protected
specifier|static
class|class
name|DoubleStreamReader
extends|extends
name|DoubleTreeReader
implements|implements
name|SettableTreeReader
block|{
specifier|private
name|boolean
name|_isFileCompressed
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_presentStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_dataStream
decl_stmt|;
specifier|private
name|DoubleStreamReader
parameter_list|(
name|int
name|columnId
parameter_list|,
name|SettableUncompressedStream
name|present
parameter_list|,
name|SettableUncompressedStream
name|data
parameter_list|,
name|boolean
name|isFileCompressed
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|columnId
argument_list|,
name|present
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|this
operator|.
name|_isFileCompressed
operator|=
name|isFileCompressed
expr_stmt|;
name|this
operator|.
name|_presentStream
operator|=
name|present
expr_stmt|;
name|this
operator|.
name|_dataStream
operator|=
name|data
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|seek
parameter_list|(
name|PositionProvider
name|index
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|present
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|present
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
comment|// data stream could be empty stream or already reached end of stream before present stream.
comment|// This can happen if all values in stream are nulls or last row group values are all null.
if|if
condition|(
name|_dataStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|stream
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setBuffers
parameter_list|(
name|ColumnStreamData
index|[]
name|streamsData
parameter_list|,
name|boolean
name|sameStripe
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|_presentStream
operator|!=
literal|null
condition|)
block|{
name|_presentStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|PRESENT_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_dataStream
operator|!=
literal|null
condition|)
block|{
name|_dataStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|DATA_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|StreamReaderBuilder
block|{
specifier|private
name|Long
name|fileId
decl_stmt|;
specifier|private
name|int
name|columnIndex
decl_stmt|;
specifier|private
name|ColumnStreamData
name|presentStream
decl_stmt|;
specifier|private
name|ColumnStreamData
name|dataStream
decl_stmt|;
specifier|private
name|CompressionCodec
name|compressionCodec
decl_stmt|;
specifier|public
name|StreamReaderBuilder
name|setFileId
parameter_list|(
name|Long
name|fileId
parameter_list|)
block|{
name|this
operator|.
name|fileId
operator|=
name|fileId
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnIndex
parameter_list|(
name|int
name|columnIndex
parameter_list|)
block|{
name|this
operator|.
name|columnIndex
operator|=
name|columnIndex
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setPresentStream
parameter_list|(
name|ColumnStreamData
name|presentStream
parameter_list|)
block|{
name|this
operator|.
name|presentStream
operator|=
name|presentStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setDataStream
parameter_list|(
name|ColumnStreamData
name|dataStream
parameter_list|)
block|{
name|this
operator|.
name|dataStream
operator|=
name|dataStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setCompressionCodec
parameter_list|(
name|CompressionCodec
name|compressionCodec
parameter_list|)
block|{
name|this
operator|.
name|compressionCodec
operator|=
name|compressionCodec
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|DoubleStreamReader
name|build
parameter_list|()
throws|throws
name|IOException
block|{
name|SettableUncompressedStream
name|present
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|presentStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|data
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|dataStream
argument_list|)
decl_stmt|;
name|boolean
name|isFileCompressed
init|=
name|compressionCodec
operator|!=
literal|null
decl_stmt|;
return|return
operator|new
name|DoubleStreamReader
argument_list|(
name|columnIndex
argument_list|,
name|present
argument_list|,
name|data
argument_list|,
name|isFileCompressed
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
name|StreamReaderBuilder
name|builder
parameter_list|()
block|{
return|return
operator|new
name|StreamReaderBuilder
argument_list|()
return|;
block|}
block|}
specifier|protected
specifier|static
class|class
name|DecimalStreamReader
extends|extends
name|DecimalTreeReader
implements|implements
name|SettableTreeReader
block|{
specifier|private
name|boolean
name|_isFileCompressed
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_presentStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_valueStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_scaleStream
decl_stmt|;
specifier|private
name|DecimalStreamReader
parameter_list|(
name|int
name|columnId
parameter_list|,
name|int
name|precision
parameter_list|,
name|int
name|scale
parameter_list|,
name|SettableUncompressedStream
name|presentStream
parameter_list|,
name|SettableUncompressedStream
name|valueStream
parameter_list|,
name|SettableUncompressedStream
name|scaleStream
parameter_list|,
name|boolean
name|isFileCompressed
parameter_list|,
name|OrcProto
operator|.
name|ColumnEncoding
name|encoding
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|columnId
argument_list|,
name|precision
argument_list|,
name|scale
argument_list|,
name|presentStream
argument_list|,
name|valueStream
argument_list|,
name|scaleStream
argument_list|,
name|encoding
argument_list|)
expr_stmt|;
name|this
operator|.
name|_isFileCompressed
operator|=
name|isFileCompressed
expr_stmt|;
name|this
operator|.
name|_presentStream
operator|=
name|presentStream
expr_stmt|;
name|this
operator|.
name|_valueStream
operator|=
name|valueStream
expr_stmt|;
name|this
operator|.
name|_scaleStream
operator|=
name|scaleStream
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|seek
parameter_list|(
name|PositionProvider
name|index
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|present
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|present
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
comment|// data stream could be empty stream or already reached end of stream before present stream.
comment|// This can happen if all values in stream are nulls or last row group values are all null.
if|if
condition|(
name|_valueStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|valueStream
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_scaleStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|scaleReader
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setBuffers
parameter_list|(
name|ColumnStreamData
index|[]
name|streamsData
parameter_list|,
name|boolean
name|sameStripe
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|_presentStream
operator|!=
literal|null
condition|)
block|{
name|_presentStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|PRESENT_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_valueStream
operator|!=
literal|null
condition|)
block|{
name|_valueStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|DATA_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_scaleStream
operator|!=
literal|null
condition|)
block|{
name|_scaleStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|SECONDARY_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|StreamReaderBuilder
block|{
specifier|private
name|Long
name|fileId
decl_stmt|;
specifier|private
name|int
name|columnIndex
decl_stmt|;
specifier|private
name|ColumnStreamData
name|presentStream
decl_stmt|;
specifier|private
name|ColumnStreamData
name|valueStream
decl_stmt|;
specifier|private
name|ColumnStreamData
name|scaleStream
decl_stmt|;
specifier|private
name|int
name|scale
decl_stmt|;
specifier|private
name|int
name|precision
decl_stmt|;
specifier|private
name|CompressionCodec
name|compressionCodec
decl_stmt|;
specifier|private
name|OrcProto
operator|.
name|ColumnEncoding
name|columnEncoding
decl_stmt|;
specifier|public
name|StreamReaderBuilder
name|setFileId
parameter_list|(
name|Long
name|fileId
parameter_list|)
block|{
name|this
operator|.
name|fileId
operator|=
name|fileId
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnIndex
parameter_list|(
name|int
name|columnIndex
parameter_list|)
block|{
name|this
operator|.
name|columnIndex
operator|=
name|columnIndex
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setPrecision
parameter_list|(
name|int
name|precision
parameter_list|)
block|{
name|this
operator|.
name|precision
operator|=
name|precision
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setScale
parameter_list|(
name|int
name|scale
parameter_list|)
block|{
name|this
operator|.
name|scale
operator|=
name|scale
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setPresentStream
parameter_list|(
name|ColumnStreamData
name|presentStream
parameter_list|)
block|{
name|this
operator|.
name|presentStream
operator|=
name|presentStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setValueStream
parameter_list|(
name|ColumnStreamData
name|valueStream
parameter_list|)
block|{
name|this
operator|.
name|valueStream
operator|=
name|valueStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setScaleStream
parameter_list|(
name|ColumnStreamData
name|scaleStream
parameter_list|)
block|{
name|this
operator|.
name|scaleStream
operator|=
name|scaleStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setCompressionCodec
parameter_list|(
name|CompressionCodec
name|compressionCodec
parameter_list|)
block|{
name|this
operator|.
name|compressionCodec
operator|=
name|compressionCodec
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnEncoding
parameter_list|(
name|OrcProto
operator|.
name|ColumnEncoding
name|encoding
parameter_list|)
block|{
name|this
operator|.
name|columnEncoding
operator|=
name|encoding
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|DecimalStreamReader
name|build
parameter_list|()
throws|throws
name|IOException
block|{
name|SettableUncompressedStream
name|presentInStream
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|presentStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|valueInStream
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|valueStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|scaleInStream
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|SECONDARY
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|scaleStream
argument_list|)
decl_stmt|;
name|boolean
name|isFileCompressed
init|=
name|compressionCodec
operator|!=
literal|null
decl_stmt|;
return|return
operator|new
name|DecimalStreamReader
argument_list|(
name|columnIndex
argument_list|,
name|precision
argument_list|,
name|scale
argument_list|,
name|presentInStream
argument_list|,
name|valueInStream
argument_list|,
name|scaleInStream
argument_list|,
name|isFileCompressed
argument_list|,
name|columnEncoding
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
name|StreamReaderBuilder
name|builder
parameter_list|()
block|{
return|return
operator|new
name|StreamReaderBuilder
argument_list|()
return|;
block|}
block|}
specifier|protected
specifier|static
class|class
name|DateStreamReader
extends|extends
name|DateTreeReader
implements|implements
name|SettableTreeReader
block|{
specifier|private
name|boolean
name|isFileCompressed
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_presentStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_dataStream
decl_stmt|;
specifier|private
name|DateStreamReader
parameter_list|(
name|int
name|columnId
parameter_list|,
name|SettableUncompressedStream
name|present
parameter_list|,
name|SettableUncompressedStream
name|data
parameter_list|,
name|boolean
name|isFileCompressed
parameter_list|,
name|OrcProto
operator|.
name|ColumnEncoding
name|encoding
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|columnId
argument_list|,
name|present
argument_list|,
name|data
argument_list|,
name|encoding
argument_list|)
expr_stmt|;
name|this
operator|.
name|isFileCompressed
operator|=
name|isFileCompressed
expr_stmt|;
name|this
operator|.
name|_presentStream
operator|=
name|present
expr_stmt|;
name|this
operator|.
name|_dataStream
operator|=
name|data
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|seek
parameter_list|(
name|PositionProvider
name|index
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|present
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|present
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
comment|// data stream could be empty stream or already reached end of stream before present stream.
comment|// This can happen if all values in stream are nulls or last row group values are all null.
if|if
condition|(
name|_dataStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|reader
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setBuffers
parameter_list|(
name|ColumnStreamData
index|[]
name|streamsData
parameter_list|,
name|boolean
name|sameStripe
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|_presentStream
operator|!=
literal|null
condition|)
block|{
name|_presentStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|PRESENT_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_dataStream
operator|!=
literal|null
condition|)
block|{
name|_dataStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|DATA_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|StreamReaderBuilder
block|{
specifier|private
name|Long
name|fileId
decl_stmt|;
specifier|private
name|int
name|columnIndex
decl_stmt|;
specifier|private
name|ColumnStreamData
name|presentStream
decl_stmt|;
specifier|private
name|ColumnStreamData
name|dataStream
decl_stmt|;
specifier|private
name|CompressionCodec
name|compressionCodec
decl_stmt|;
specifier|private
name|OrcProto
operator|.
name|ColumnEncoding
name|columnEncoding
decl_stmt|;
specifier|public
name|StreamReaderBuilder
name|setFileId
parameter_list|(
name|Long
name|fileId
parameter_list|)
block|{
name|this
operator|.
name|fileId
operator|=
name|fileId
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnIndex
parameter_list|(
name|int
name|columnIndex
parameter_list|)
block|{
name|this
operator|.
name|columnIndex
operator|=
name|columnIndex
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setPresentStream
parameter_list|(
name|ColumnStreamData
name|presentStream
parameter_list|)
block|{
name|this
operator|.
name|presentStream
operator|=
name|presentStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setDataStream
parameter_list|(
name|ColumnStreamData
name|dataStream
parameter_list|)
block|{
name|this
operator|.
name|dataStream
operator|=
name|dataStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setCompressionCodec
parameter_list|(
name|CompressionCodec
name|compressionCodec
parameter_list|)
block|{
name|this
operator|.
name|compressionCodec
operator|=
name|compressionCodec
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnEncoding
parameter_list|(
name|OrcProto
operator|.
name|ColumnEncoding
name|encoding
parameter_list|)
block|{
name|this
operator|.
name|columnEncoding
operator|=
name|encoding
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|DateStreamReader
name|build
parameter_list|()
throws|throws
name|IOException
block|{
name|SettableUncompressedStream
name|present
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|presentStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|data
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|dataStream
argument_list|)
decl_stmt|;
name|boolean
name|isFileCompressed
init|=
name|compressionCodec
operator|!=
literal|null
decl_stmt|;
return|return
operator|new
name|DateStreamReader
argument_list|(
name|columnIndex
argument_list|,
name|present
argument_list|,
name|data
argument_list|,
name|isFileCompressed
argument_list|,
name|columnEncoding
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
name|StreamReaderBuilder
name|builder
parameter_list|()
block|{
return|return
operator|new
name|StreamReaderBuilder
argument_list|()
return|;
block|}
block|}
specifier|protected
specifier|static
class|class
name|CharStreamReader
extends|extends
name|CharTreeReader
implements|implements
name|SettableTreeReader
block|{
specifier|private
name|boolean
name|_isFileCompressed
decl_stmt|;
specifier|private
name|boolean
name|_isDictionaryEncoding
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_presentStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_dataStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_lengthStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_dictionaryStream
decl_stmt|;
specifier|private
name|CharStreamReader
parameter_list|(
name|int
name|columnId
parameter_list|,
name|int
name|maxLength
parameter_list|,
name|SettableUncompressedStream
name|present
parameter_list|,
name|SettableUncompressedStream
name|data
parameter_list|,
name|SettableUncompressedStream
name|length
parameter_list|,
name|SettableUncompressedStream
name|dictionary
parameter_list|,
name|boolean
name|isFileCompressed
parameter_list|,
name|OrcProto
operator|.
name|ColumnEncoding
name|encoding
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|columnId
argument_list|,
name|maxLength
argument_list|,
name|present
argument_list|,
name|data
argument_list|,
name|length
argument_list|,
name|dictionary
argument_list|,
name|encoding
argument_list|)
expr_stmt|;
name|this
operator|.
name|_isDictionaryEncoding
operator|=
name|dictionary
operator|!=
literal|null
expr_stmt|;
name|this
operator|.
name|_isFileCompressed
operator|=
name|isFileCompressed
expr_stmt|;
name|this
operator|.
name|_presentStream
operator|=
name|present
expr_stmt|;
name|this
operator|.
name|_dataStream
operator|=
name|data
expr_stmt|;
name|this
operator|.
name|_lengthStream
operator|=
name|length
expr_stmt|;
name|this
operator|.
name|_dictionaryStream
operator|=
name|dictionary
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|seek
parameter_list|(
name|PositionProvider
name|index
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|present
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|reader
operator|.
name|getPresent
argument_list|()
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_isDictionaryEncoding
condition|)
block|{
comment|// DICTIONARY encoding
comment|// data stream could be empty stream or already reached end of stream before present stream.
comment|// This can happen if all values in stream are nulls or last row group values are all null.
if|if
condition|(
name|_dataStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
operator|(
operator|(
name|StringDictionaryTreeReader
operator|)
name|reader
operator|)
operator|.
name|getReader
argument_list|()
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
comment|// DIRECT encoding
comment|// data stream could be empty stream or already reached end of stream before present stream.
comment|// This can happen if all values in stream are nulls or last row group values are all null.
if|if
condition|(
name|_dataStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
operator|(
operator|(
name|StringDirectTreeReader
operator|)
name|reader
operator|)
operator|.
name|getStream
argument_list|()
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_lengthStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
operator|(
operator|(
name|StringDirectTreeReader
operator|)
name|reader
operator|)
operator|.
name|getLengths
argument_list|()
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setBuffers
parameter_list|(
name|ColumnStreamData
index|[]
name|streamsData
parameter_list|,
name|boolean
name|sameStripe
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|_presentStream
operator|!=
literal|null
condition|)
block|{
name|_presentStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|PRESENT_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_dataStream
operator|!=
literal|null
condition|)
block|{
name|_dataStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|DATA_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|_isDictionaryEncoding
condition|)
block|{
if|if
condition|(
name|_lengthStream
operator|!=
literal|null
condition|)
block|{
name|_lengthStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|LENGTH_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|// set these streams only if the stripe is different
if|if
condition|(
operator|!
name|sameStripe
operator|&&
name|_isDictionaryEncoding
condition|)
block|{
if|if
condition|(
name|_lengthStream
operator|!=
literal|null
condition|)
block|{
name|_lengthStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|LENGTH_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_dictionaryStream
operator|!=
literal|null
condition|)
block|{
name|_dictionaryStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|DICTIONARY_DATA_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
specifier|static
class|class
name|StreamReaderBuilder
block|{
specifier|private
name|Long
name|fileId
decl_stmt|;
specifier|private
name|int
name|columnIndex
decl_stmt|;
specifier|private
name|int
name|maxLength
decl_stmt|;
specifier|private
name|ColumnStreamData
name|presentStream
decl_stmt|;
specifier|private
name|ColumnStreamData
name|dataStream
decl_stmt|;
specifier|private
name|ColumnStreamData
name|dictionaryStream
decl_stmt|;
specifier|private
name|ColumnStreamData
name|lengthStream
decl_stmt|;
specifier|private
name|CompressionCodec
name|compressionCodec
decl_stmt|;
specifier|private
name|OrcProto
operator|.
name|ColumnEncoding
name|columnEncoding
decl_stmt|;
specifier|public
name|StreamReaderBuilder
name|setFileId
parameter_list|(
name|Long
name|fileId
parameter_list|)
block|{
name|this
operator|.
name|fileId
operator|=
name|fileId
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnIndex
parameter_list|(
name|int
name|columnIndex
parameter_list|)
block|{
name|this
operator|.
name|columnIndex
operator|=
name|columnIndex
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setMaxLength
parameter_list|(
name|int
name|maxLength
parameter_list|)
block|{
name|this
operator|.
name|maxLength
operator|=
name|maxLength
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setPresentStream
parameter_list|(
name|ColumnStreamData
name|presentStream
parameter_list|)
block|{
name|this
operator|.
name|presentStream
operator|=
name|presentStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setDataStream
parameter_list|(
name|ColumnStreamData
name|dataStream
parameter_list|)
block|{
name|this
operator|.
name|dataStream
operator|=
name|dataStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setLengthStream
parameter_list|(
name|ColumnStreamData
name|lengthStream
parameter_list|)
block|{
name|this
operator|.
name|lengthStream
operator|=
name|lengthStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setDictionaryStream
parameter_list|(
name|ColumnStreamData
name|dictStream
parameter_list|)
block|{
name|this
operator|.
name|dictionaryStream
operator|=
name|dictStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setCompressionCodec
parameter_list|(
name|CompressionCodec
name|compressionCodec
parameter_list|)
block|{
name|this
operator|.
name|compressionCodec
operator|=
name|compressionCodec
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnEncoding
parameter_list|(
name|OrcProto
operator|.
name|ColumnEncoding
name|encoding
parameter_list|)
block|{
name|this
operator|.
name|columnEncoding
operator|=
name|encoding
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|CharStreamReader
name|build
parameter_list|()
throws|throws
name|IOException
block|{
name|SettableUncompressedStream
name|present
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|presentStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|data
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|dataStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|length
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|LENGTH
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|lengthStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|dictionary
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DICTIONARY_DATA
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|dictionaryStream
argument_list|)
decl_stmt|;
name|boolean
name|isFileCompressed
init|=
name|compressionCodec
operator|!=
literal|null
decl_stmt|;
return|return
operator|new
name|CharStreamReader
argument_list|(
name|columnIndex
argument_list|,
name|maxLength
argument_list|,
name|present
argument_list|,
name|data
argument_list|,
name|length
argument_list|,
name|dictionary
argument_list|,
name|isFileCompressed
argument_list|,
name|columnEncoding
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
name|StreamReaderBuilder
name|builder
parameter_list|()
block|{
return|return
operator|new
name|StreamReaderBuilder
argument_list|()
return|;
block|}
block|}
specifier|protected
specifier|static
class|class
name|VarcharStreamReader
extends|extends
name|VarcharTreeReader
implements|implements
name|SettableTreeReader
block|{
specifier|private
name|boolean
name|_isFileCompressed
decl_stmt|;
specifier|private
name|boolean
name|_isDictionaryEncoding
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_presentStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_dataStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_lengthStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_dictionaryStream
decl_stmt|;
specifier|private
name|VarcharStreamReader
parameter_list|(
name|int
name|columnId
parameter_list|,
name|int
name|maxLength
parameter_list|,
name|SettableUncompressedStream
name|present
parameter_list|,
name|SettableUncompressedStream
name|data
parameter_list|,
name|SettableUncompressedStream
name|length
parameter_list|,
name|SettableUncompressedStream
name|dictionary
parameter_list|,
name|boolean
name|isFileCompressed
parameter_list|,
name|OrcProto
operator|.
name|ColumnEncoding
name|encoding
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|columnId
argument_list|,
name|maxLength
argument_list|,
name|present
argument_list|,
name|data
argument_list|,
name|length
argument_list|,
name|dictionary
argument_list|,
name|encoding
argument_list|)
expr_stmt|;
name|this
operator|.
name|_isDictionaryEncoding
operator|=
name|dictionary
operator|!=
literal|null
expr_stmt|;
name|this
operator|.
name|_isFileCompressed
operator|=
name|isFileCompressed
expr_stmt|;
name|this
operator|.
name|_presentStream
operator|=
name|present
expr_stmt|;
name|this
operator|.
name|_dataStream
operator|=
name|data
expr_stmt|;
name|this
operator|.
name|_lengthStream
operator|=
name|length
expr_stmt|;
name|this
operator|.
name|_dictionaryStream
operator|=
name|dictionary
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|seek
parameter_list|(
name|PositionProvider
name|index
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|present
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|reader
operator|.
name|getPresent
argument_list|()
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_isDictionaryEncoding
condition|)
block|{
comment|// DICTIONARY encoding
comment|// data stream could be empty stream or already reached end of stream before present stream.
comment|// This can happen if all values in stream are nulls or last row group values are all null.
if|if
condition|(
name|_dataStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
operator|(
operator|(
name|StringDictionaryTreeReader
operator|)
name|reader
operator|)
operator|.
name|getReader
argument_list|()
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
comment|// DIRECT encoding
comment|// data stream could be empty stream or already reached end of stream before present stream.
comment|// This can happen if all values in stream are nulls or last row group values are all null.
if|if
condition|(
name|_dataStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
operator|(
operator|(
name|StringDirectTreeReader
operator|)
name|reader
operator|)
operator|.
name|getStream
argument_list|()
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_lengthStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
operator|(
operator|(
name|StringDirectTreeReader
operator|)
name|reader
operator|)
operator|.
name|getLengths
argument_list|()
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setBuffers
parameter_list|(
name|ColumnStreamData
index|[]
name|streamsData
parameter_list|,
name|boolean
name|sameStripe
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|_presentStream
operator|!=
literal|null
condition|)
block|{
name|_presentStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|PRESENT_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_dataStream
operator|!=
literal|null
condition|)
block|{
name|_dataStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|DATA_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|_isDictionaryEncoding
condition|)
block|{
if|if
condition|(
name|_lengthStream
operator|!=
literal|null
condition|)
block|{
name|_lengthStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|LENGTH_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|// set these streams only if the stripe is different
if|if
condition|(
operator|!
name|sameStripe
operator|&&
name|_isDictionaryEncoding
condition|)
block|{
if|if
condition|(
name|_lengthStream
operator|!=
literal|null
condition|)
block|{
name|_lengthStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|LENGTH_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_dictionaryStream
operator|!=
literal|null
condition|)
block|{
name|_dictionaryStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|DICTIONARY_DATA_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
specifier|static
class|class
name|StreamReaderBuilder
block|{
specifier|private
name|Long
name|fileId
decl_stmt|;
specifier|private
name|int
name|columnIndex
decl_stmt|;
specifier|private
name|int
name|maxLength
decl_stmt|;
specifier|private
name|ColumnStreamData
name|presentStream
decl_stmt|;
specifier|private
name|ColumnStreamData
name|dataStream
decl_stmt|;
specifier|private
name|ColumnStreamData
name|dictionaryStream
decl_stmt|;
specifier|private
name|ColumnStreamData
name|lengthStream
decl_stmt|;
specifier|private
name|CompressionCodec
name|compressionCodec
decl_stmt|;
specifier|private
name|OrcProto
operator|.
name|ColumnEncoding
name|columnEncoding
decl_stmt|;
specifier|public
name|StreamReaderBuilder
name|setFileId
parameter_list|(
name|Long
name|fileId
parameter_list|)
block|{
name|this
operator|.
name|fileId
operator|=
name|fileId
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnIndex
parameter_list|(
name|int
name|columnIndex
parameter_list|)
block|{
name|this
operator|.
name|columnIndex
operator|=
name|columnIndex
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setMaxLength
parameter_list|(
name|int
name|maxLength
parameter_list|)
block|{
name|this
operator|.
name|maxLength
operator|=
name|maxLength
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setPresentStream
parameter_list|(
name|ColumnStreamData
name|presentStream
parameter_list|)
block|{
name|this
operator|.
name|presentStream
operator|=
name|presentStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setDataStream
parameter_list|(
name|ColumnStreamData
name|dataStream
parameter_list|)
block|{
name|this
operator|.
name|dataStream
operator|=
name|dataStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setLengthStream
parameter_list|(
name|ColumnStreamData
name|lengthStream
parameter_list|)
block|{
name|this
operator|.
name|lengthStream
operator|=
name|lengthStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setDictionaryStream
parameter_list|(
name|ColumnStreamData
name|dictStream
parameter_list|)
block|{
name|this
operator|.
name|dictionaryStream
operator|=
name|dictStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setCompressionCodec
parameter_list|(
name|CompressionCodec
name|compressionCodec
parameter_list|)
block|{
name|this
operator|.
name|compressionCodec
operator|=
name|compressionCodec
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnEncoding
parameter_list|(
name|OrcProto
operator|.
name|ColumnEncoding
name|encoding
parameter_list|)
block|{
name|this
operator|.
name|columnEncoding
operator|=
name|encoding
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|VarcharStreamReader
name|build
parameter_list|()
throws|throws
name|IOException
block|{
name|SettableUncompressedStream
name|present
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|presentStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|data
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|dataStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|length
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|LENGTH
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|lengthStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|dictionary
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DICTIONARY_DATA
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|dictionaryStream
argument_list|)
decl_stmt|;
name|boolean
name|isFileCompressed
init|=
name|compressionCodec
operator|!=
literal|null
decl_stmt|;
return|return
operator|new
name|VarcharStreamReader
argument_list|(
name|columnIndex
argument_list|,
name|maxLength
argument_list|,
name|present
argument_list|,
name|data
argument_list|,
name|length
argument_list|,
name|dictionary
argument_list|,
name|isFileCompressed
argument_list|,
name|columnEncoding
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
name|StreamReaderBuilder
name|builder
parameter_list|()
block|{
return|return
operator|new
name|StreamReaderBuilder
argument_list|()
return|;
block|}
block|}
specifier|protected
specifier|static
class|class
name|ByteStreamReader
extends|extends
name|ByteTreeReader
implements|implements
name|SettableTreeReader
block|{
specifier|private
name|boolean
name|_isFileCompressed
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_presentStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_dataStream
decl_stmt|;
specifier|private
name|ByteStreamReader
parameter_list|(
name|int
name|columnId
parameter_list|,
name|SettableUncompressedStream
name|present
parameter_list|,
name|SettableUncompressedStream
name|data
parameter_list|,
name|boolean
name|isFileCompressed
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|columnId
argument_list|,
name|present
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|this
operator|.
name|_isFileCompressed
operator|=
name|isFileCompressed
expr_stmt|;
name|this
operator|.
name|_presentStream
operator|=
name|present
expr_stmt|;
name|this
operator|.
name|_dataStream
operator|=
name|data
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|seek
parameter_list|(
name|PositionProvider
name|index
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|present
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|present
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
comment|// data stream could be empty stream or already reached end of stream before present stream.
comment|// This can happen if all values in stream are nulls or last row group values are all null.
if|if
condition|(
name|_dataStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|reader
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setBuffers
parameter_list|(
name|ColumnStreamData
index|[]
name|streamsData
parameter_list|,
name|boolean
name|sameStripe
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|_presentStream
operator|!=
literal|null
condition|)
block|{
name|_presentStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|PRESENT_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_dataStream
operator|!=
literal|null
condition|)
block|{
name|_dataStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|DATA_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|StreamReaderBuilder
block|{
specifier|private
name|Long
name|fileId
decl_stmt|;
specifier|private
name|int
name|columnIndex
decl_stmt|;
specifier|private
name|ColumnStreamData
name|presentStream
decl_stmt|;
specifier|private
name|ColumnStreamData
name|dataStream
decl_stmt|;
specifier|private
name|CompressionCodec
name|compressionCodec
decl_stmt|;
specifier|public
name|StreamReaderBuilder
name|setFileId
parameter_list|(
name|Long
name|fileId
parameter_list|)
block|{
name|this
operator|.
name|fileId
operator|=
name|fileId
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnIndex
parameter_list|(
name|int
name|columnIndex
parameter_list|)
block|{
name|this
operator|.
name|columnIndex
operator|=
name|columnIndex
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setPresentStream
parameter_list|(
name|ColumnStreamData
name|presentStream
parameter_list|)
block|{
name|this
operator|.
name|presentStream
operator|=
name|presentStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setDataStream
parameter_list|(
name|ColumnStreamData
name|dataStream
parameter_list|)
block|{
name|this
operator|.
name|dataStream
operator|=
name|dataStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setCompressionCodec
parameter_list|(
name|CompressionCodec
name|compressionCodec
parameter_list|)
block|{
name|this
operator|.
name|compressionCodec
operator|=
name|compressionCodec
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|ByteStreamReader
name|build
parameter_list|()
throws|throws
name|IOException
block|{
name|SettableUncompressedStream
name|present
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|presentStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|data
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|dataStream
argument_list|)
decl_stmt|;
name|boolean
name|isFileCompressed
init|=
name|compressionCodec
operator|!=
literal|null
decl_stmt|;
return|return
operator|new
name|ByteStreamReader
argument_list|(
name|columnIndex
argument_list|,
name|present
argument_list|,
name|data
argument_list|,
name|isFileCompressed
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
name|StreamReaderBuilder
name|builder
parameter_list|()
block|{
return|return
operator|new
name|StreamReaderBuilder
argument_list|()
return|;
block|}
block|}
specifier|protected
specifier|static
class|class
name|BinaryStreamReader
extends|extends
name|BinaryTreeReader
implements|implements
name|SettableTreeReader
block|{
specifier|private
name|boolean
name|_isFileCompressed
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_presentStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_dataStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_lengthsStream
decl_stmt|;
specifier|private
name|BinaryStreamReader
parameter_list|(
name|int
name|columnId
parameter_list|,
name|SettableUncompressedStream
name|present
parameter_list|,
name|SettableUncompressedStream
name|data
parameter_list|,
name|SettableUncompressedStream
name|length
parameter_list|,
name|boolean
name|isFileCompressed
parameter_list|,
name|OrcProto
operator|.
name|ColumnEncoding
name|encoding
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|columnId
argument_list|,
name|present
argument_list|,
name|data
argument_list|,
name|length
argument_list|,
name|encoding
argument_list|)
expr_stmt|;
name|this
operator|.
name|_isFileCompressed
operator|=
name|isFileCompressed
expr_stmt|;
name|this
operator|.
name|_presentStream
operator|=
name|present
expr_stmt|;
name|this
operator|.
name|_dataStream
operator|=
name|data
expr_stmt|;
name|this
operator|.
name|_lengthsStream
operator|=
name|length
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|seek
parameter_list|(
name|PositionProvider
name|index
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|present
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|present
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
comment|// data stream could be empty stream or already reached end of stream before present stream.
comment|// This can happen if all values in stream are nulls or last row group values are all null.
if|if
condition|(
name|_dataStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|stream
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|lengths
operator|!=
literal|null
operator|&&
name|_lengthsStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|lengths
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setBuffers
parameter_list|(
name|ColumnStreamData
index|[]
name|streamsData
parameter_list|,
name|boolean
name|sameStripe
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|_presentStream
operator|!=
literal|null
condition|)
block|{
name|_presentStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|PRESENT_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_dataStream
operator|!=
literal|null
condition|)
block|{
name|_dataStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|DATA_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_lengthsStream
operator|!=
literal|null
condition|)
block|{
name|_lengthsStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|LENGTH_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|StreamReaderBuilder
block|{
specifier|private
name|Long
name|fileId
decl_stmt|;
specifier|private
name|int
name|columnIndex
decl_stmt|;
specifier|private
name|ColumnStreamData
name|presentStream
decl_stmt|;
specifier|private
name|ColumnStreamData
name|dataStream
decl_stmt|;
specifier|private
name|ColumnStreamData
name|lengthStream
decl_stmt|;
specifier|private
name|CompressionCodec
name|compressionCodec
decl_stmt|;
specifier|private
name|OrcProto
operator|.
name|ColumnEncoding
name|columnEncoding
decl_stmt|;
specifier|public
name|StreamReaderBuilder
name|setFileId
parameter_list|(
name|Long
name|fileId
parameter_list|)
block|{
name|this
operator|.
name|fileId
operator|=
name|fileId
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnIndex
parameter_list|(
name|int
name|columnIndex
parameter_list|)
block|{
name|this
operator|.
name|columnIndex
operator|=
name|columnIndex
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setPresentStream
parameter_list|(
name|ColumnStreamData
name|presentStream
parameter_list|)
block|{
name|this
operator|.
name|presentStream
operator|=
name|presentStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setDataStream
parameter_list|(
name|ColumnStreamData
name|dataStream
parameter_list|)
block|{
name|this
operator|.
name|dataStream
operator|=
name|dataStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setLengthStream
parameter_list|(
name|ColumnStreamData
name|secondaryStream
parameter_list|)
block|{
name|this
operator|.
name|lengthStream
operator|=
name|secondaryStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setCompressionCodec
parameter_list|(
name|CompressionCodec
name|compressionCodec
parameter_list|)
block|{
name|this
operator|.
name|compressionCodec
operator|=
name|compressionCodec
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnEncoding
parameter_list|(
name|OrcProto
operator|.
name|ColumnEncoding
name|encoding
parameter_list|)
block|{
name|this
operator|.
name|columnEncoding
operator|=
name|encoding
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|BinaryStreamReader
name|build
parameter_list|()
throws|throws
name|IOException
block|{
name|SettableUncompressedStream
name|present
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|presentStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|data
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|dataStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|length
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|LENGTH
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|lengthStream
argument_list|)
decl_stmt|;
name|boolean
name|isFileCompressed
init|=
name|compressionCodec
operator|!=
literal|null
decl_stmt|;
return|return
operator|new
name|BinaryStreamReader
argument_list|(
name|columnIndex
argument_list|,
name|present
argument_list|,
name|data
argument_list|,
name|length
argument_list|,
name|isFileCompressed
argument_list|,
name|columnEncoding
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
name|StreamReaderBuilder
name|builder
parameter_list|()
block|{
return|return
operator|new
name|StreamReaderBuilder
argument_list|()
return|;
block|}
block|}
specifier|protected
specifier|static
class|class
name|BooleanStreamReader
extends|extends
name|BooleanTreeReader
implements|implements
name|SettableTreeReader
block|{
specifier|private
name|boolean
name|_isFileCompressed
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_presentStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_dataStream
decl_stmt|;
specifier|private
name|BooleanStreamReader
parameter_list|(
name|int
name|columnId
parameter_list|,
name|SettableUncompressedStream
name|present
parameter_list|,
name|SettableUncompressedStream
name|data
parameter_list|,
name|boolean
name|isFileCompressed
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|columnId
argument_list|,
name|present
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|this
operator|.
name|_isFileCompressed
operator|=
name|isFileCompressed
expr_stmt|;
name|this
operator|.
name|_presentStream
operator|=
name|present
expr_stmt|;
name|this
operator|.
name|_dataStream
operator|=
name|data
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|seek
parameter_list|(
name|PositionProvider
name|index
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|present
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|present
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
comment|// data stream could be empty stream or already reached end of stream before present stream.
comment|// This can happen if all values in stream are nulls or last row group values are all null.
if|if
condition|(
name|_dataStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|reader
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setBuffers
parameter_list|(
name|ColumnStreamData
index|[]
name|streamsData
parameter_list|,
name|boolean
name|sameStripe
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|_presentStream
operator|!=
literal|null
condition|)
block|{
name|_presentStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|PRESENT_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_dataStream
operator|!=
literal|null
condition|)
block|{
name|_dataStream
operator|.
name|setBuffers
argument_list|(
name|StreamUtils
operator|.
name|createDiskRangeInfo
argument_list|(
name|streamsData
index|[
name|Kind
operator|.
name|DATA_VALUE
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|StreamReaderBuilder
block|{
specifier|private
name|Long
name|fileId
decl_stmt|;
specifier|private
name|int
name|columnIndex
decl_stmt|;
specifier|private
name|ColumnStreamData
name|presentStream
decl_stmt|;
specifier|private
name|ColumnStreamData
name|dataStream
decl_stmt|;
specifier|private
name|CompressionCodec
name|compressionCodec
decl_stmt|;
specifier|public
name|StreamReaderBuilder
name|setFileId
parameter_list|(
name|Long
name|fileId
parameter_list|)
block|{
name|this
operator|.
name|fileId
operator|=
name|fileId
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnIndex
parameter_list|(
name|int
name|columnIndex
parameter_list|)
block|{
name|this
operator|.
name|columnIndex
operator|=
name|columnIndex
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setPresentStream
parameter_list|(
name|ColumnStreamData
name|presentStream
parameter_list|)
block|{
name|this
operator|.
name|presentStream
operator|=
name|presentStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setDataStream
parameter_list|(
name|ColumnStreamData
name|dataStream
parameter_list|)
block|{
name|this
operator|.
name|dataStream
operator|=
name|dataStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setCompressionCodec
parameter_list|(
name|CompressionCodec
name|compressionCodec
parameter_list|)
block|{
name|this
operator|.
name|compressionCodec
operator|=
name|compressionCodec
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|BooleanStreamReader
name|build
parameter_list|()
throws|throws
name|IOException
block|{
name|SettableUncompressedStream
name|present
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|presentStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|data
init|=
name|StreamUtils
operator|.
name|createSettableUncompressedStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|dataStream
argument_list|)
decl_stmt|;
name|boolean
name|isFileCompressed
init|=
name|compressionCodec
operator|!=
literal|null
decl_stmt|;
return|return
operator|new
name|BooleanStreamReader
argument_list|(
name|columnIndex
argument_list|,
name|present
argument_list|,
name|data
argument_list|,
name|isFileCompressed
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
name|StreamReaderBuilder
name|builder
parameter_list|()
block|{
return|return
operator|new
name|StreamReaderBuilder
argument_list|()
return|;
block|}
block|}
specifier|public
specifier|static
name|TreeReader
index|[]
name|createEncodedTreeReader
parameter_list|(
name|int
name|numCols
parameter_list|,
name|List
argument_list|<
name|OrcProto
operator|.
name|Type
argument_list|>
name|types
parameter_list|,
name|List
argument_list|<
name|OrcProto
operator|.
name|ColumnEncoding
argument_list|>
name|encodings
parameter_list|,
name|EncodedColumnBatch
argument_list|<
name|OrcBatchKey
argument_list|>
name|batch
parameter_list|,
name|CompressionCodec
name|codec
parameter_list|,
name|boolean
name|skipCorrupt
parameter_list|)
throws|throws
name|IOException
block|{
name|long
name|file
init|=
name|batch
operator|.
name|getBatchKey
argument_list|()
operator|.
name|file
decl_stmt|;
name|TreeReader
index|[]
name|treeReaders
init|=
operator|new
name|TreeReader
index|[
name|numCols
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numCols
condition|;
name|i
operator|++
control|)
block|{
name|int
name|columnIndex
init|=
name|batch
operator|.
name|getColumnIxs
argument_list|()
index|[
name|i
index|]
decl_stmt|;
name|ColumnStreamData
index|[]
name|streamBuffers
init|=
name|batch
operator|.
name|getColumnData
argument_list|()
index|[
name|i
index|]
decl_stmt|;
name|OrcProto
operator|.
name|Type
name|columnType
init|=
name|types
operator|.
name|get
argument_list|(
name|columnIndex
argument_list|)
decl_stmt|;
comment|// EncodedColumnBatch is already decompressed, we don't really need to pass codec.
comment|// But we need to know if the original data is compressed or not. This is used to skip
comment|// positions in row index properly. If the file is originally compressed,
comment|// then 1st position (compressed offset) in row index should be skipped to get
comment|// uncompressed offset, else 1st position should not be skipped.
comment|// TODO: there should be a better way to do this, code just needs to be modified
name|OrcProto
operator|.
name|ColumnEncoding
name|columnEncoding
init|=
name|encodings
operator|.
name|get
argument_list|(
name|columnIndex
argument_list|)
decl_stmt|;
comment|// stream buffers are arranged in enum order of stream kind
name|ColumnStreamData
name|present
init|=
name|streamBuffers
index|[
name|Kind
operator|.
name|PRESENT_VALUE
index|]
decl_stmt|,
name|data
init|=
name|streamBuffers
index|[
name|Kind
operator|.
name|DATA_VALUE
index|]
decl_stmt|,
name|dictionary
init|=
name|streamBuffers
index|[
name|Kind
operator|.
name|DICTIONARY_DATA_VALUE
index|]
decl_stmt|,
name|lengths
init|=
name|streamBuffers
index|[
name|Kind
operator|.
name|LENGTH_VALUE
index|]
decl_stmt|,
name|secondary
init|=
name|streamBuffers
index|[
name|Kind
operator|.
name|SECONDARY_VALUE
index|]
decl_stmt|;
switch|switch
condition|(
name|columnType
operator|.
name|getKind
argument_list|()
condition|)
block|{
case|case
name|BINARY
case|:
name|treeReaders
index|[
name|i
index|]
operator|=
name|BinaryStreamReader
operator|.
name|builder
argument_list|()
operator|.
name|setFileId
argument_list|(
name|file
argument_list|)
operator|.
name|setColumnIndex
argument_list|(
name|columnIndex
argument_list|)
operator|.
name|setPresentStream
argument_list|(
name|present
argument_list|)
operator|.
name|setDataStream
argument_list|(
name|data
argument_list|)
operator|.
name|setLengthStream
argument_list|(
name|lengths
argument_list|)
operator|.
name|setCompressionCodec
argument_list|(
name|codec
argument_list|)
operator|.
name|setColumnEncoding
argument_list|(
name|columnEncoding
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
break|break;
case|case
name|BOOLEAN
case|:
name|treeReaders
index|[
name|i
index|]
operator|=
name|BooleanStreamReader
operator|.
name|builder
argument_list|()
operator|.
name|setFileId
argument_list|(
name|file
argument_list|)
operator|.
name|setColumnIndex
argument_list|(
name|columnIndex
argument_list|)
operator|.
name|setPresentStream
argument_list|(
name|present
argument_list|)
operator|.
name|setDataStream
argument_list|(
name|data
argument_list|)
operator|.
name|setCompressionCodec
argument_list|(
name|codec
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
break|break;
case|case
name|BYTE
case|:
name|treeReaders
index|[
name|i
index|]
operator|=
name|ByteStreamReader
operator|.
name|builder
argument_list|()
operator|.
name|setFileId
argument_list|(
name|file
argument_list|)
operator|.
name|setColumnIndex
argument_list|(
name|columnIndex
argument_list|)
operator|.
name|setPresentStream
argument_list|(
name|present
argument_list|)
operator|.
name|setDataStream
argument_list|(
name|data
argument_list|)
operator|.
name|setCompressionCodec
argument_list|(
name|codec
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
break|break;
case|case
name|SHORT
case|:
name|treeReaders
index|[
name|i
index|]
operator|=
name|ShortStreamReader
operator|.
name|builder
argument_list|()
operator|.
name|setFileId
argument_list|(
name|file
argument_list|)
operator|.
name|setColumnIndex
argument_list|(
name|columnIndex
argument_list|)
operator|.
name|setPresentStream
argument_list|(
name|present
argument_list|)
operator|.
name|setDataStream
argument_list|(
name|data
argument_list|)
operator|.
name|setCompressionCodec
argument_list|(
name|codec
argument_list|)
operator|.
name|setColumnEncoding
argument_list|(
name|columnEncoding
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
break|break;
case|case
name|INT
case|:
name|treeReaders
index|[
name|i
index|]
operator|=
name|IntStreamReader
operator|.
name|builder
argument_list|()
operator|.
name|setFileId
argument_list|(
name|file
argument_list|)
operator|.
name|setColumnIndex
argument_list|(
name|columnIndex
argument_list|)
operator|.
name|setPresentStream
argument_list|(
name|present
argument_list|)
operator|.
name|setDataStream
argument_list|(
name|data
argument_list|)
operator|.
name|setCompressionCodec
argument_list|(
name|codec
argument_list|)
operator|.
name|setColumnEncoding
argument_list|(
name|columnEncoding
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
break|break;
case|case
name|LONG
case|:
name|treeReaders
index|[
name|i
index|]
operator|=
name|LongStreamReader
operator|.
name|builder
argument_list|()
operator|.
name|setFileId
argument_list|(
name|file
argument_list|)
operator|.
name|setColumnIndex
argument_list|(
name|columnIndex
argument_list|)
operator|.
name|setPresentStream
argument_list|(
name|present
argument_list|)
operator|.
name|setDataStream
argument_list|(
name|data
argument_list|)
operator|.
name|setCompressionCodec
argument_list|(
name|codec
argument_list|)
operator|.
name|setColumnEncoding
argument_list|(
name|columnEncoding
argument_list|)
operator|.
name|skipCorrupt
argument_list|(
name|skipCorrupt
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
break|break;
case|case
name|FLOAT
case|:
name|treeReaders
index|[
name|i
index|]
operator|=
name|FloatStreamReader
operator|.
name|builder
argument_list|()
operator|.
name|setFileId
argument_list|(
name|file
argument_list|)
operator|.
name|setColumnIndex
argument_list|(
name|columnIndex
argument_list|)
operator|.
name|setPresentStream
argument_list|(
name|present
argument_list|)
operator|.
name|setDataStream
argument_list|(
name|data
argument_list|)
operator|.
name|setCompressionCodec
argument_list|(
name|codec
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
break|break;
case|case
name|DOUBLE
case|:
name|treeReaders
index|[
name|i
index|]
operator|=
name|DoubleStreamReader
operator|.
name|builder
argument_list|()
operator|.
name|setFileId
argument_list|(
name|file
argument_list|)
operator|.
name|setColumnIndex
argument_list|(
name|columnIndex
argument_list|)
operator|.
name|setPresentStream
argument_list|(
name|present
argument_list|)
operator|.
name|setDataStream
argument_list|(
name|data
argument_list|)
operator|.
name|setCompressionCodec
argument_list|(
name|codec
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
break|break;
case|case
name|CHAR
case|:
name|treeReaders
index|[
name|i
index|]
operator|=
name|CharStreamReader
operator|.
name|builder
argument_list|()
operator|.
name|setFileId
argument_list|(
name|file
argument_list|)
operator|.
name|setColumnIndex
argument_list|(
name|columnIndex
argument_list|)
operator|.
name|setMaxLength
argument_list|(
name|columnType
operator|.
name|getMaximumLength
argument_list|()
argument_list|)
operator|.
name|setPresentStream
argument_list|(
name|present
argument_list|)
operator|.
name|setDataStream
argument_list|(
name|data
argument_list|)
operator|.
name|setLengthStream
argument_list|(
name|lengths
argument_list|)
operator|.
name|setDictionaryStream
argument_list|(
name|dictionary
argument_list|)
operator|.
name|setCompressionCodec
argument_list|(
name|codec
argument_list|)
operator|.
name|setColumnEncoding
argument_list|(
name|columnEncoding
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
break|break;
case|case
name|VARCHAR
case|:
name|treeReaders
index|[
name|i
index|]
operator|=
name|VarcharStreamReader
operator|.
name|builder
argument_list|()
operator|.
name|setFileId
argument_list|(
name|file
argument_list|)
operator|.
name|setColumnIndex
argument_list|(
name|columnIndex
argument_list|)
operator|.
name|setMaxLength
argument_list|(
name|columnType
operator|.
name|getMaximumLength
argument_list|()
argument_list|)
operator|.
name|setPresentStream
argument_list|(
name|present
argument_list|)
operator|.
name|setDataStream
argument_list|(
name|data
argument_list|)
operator|.
name|setLengthStream
argument_list|(
name|lengths
argument_list|)
operator|.
name|setDictionaryStream
argument_list|(
name|dictionary
argument_list|)
operator|.
name|setCompressionCodec
argument_list|(
name|codec
argument_list|)
operator|.
name|setColumnEncoding
argument_list|(
name|columnEncoding
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
break|break;
case|case
name|STRING
case|:
name|treeReaders
index|[
name|i
index|]
operator|=
name|StringStreamReader
operator|.
name|builder
argument_list|()
operator|.
name|setFileId
argument_list|(
name|file
argument_list|)
operator|.
name|setColumnIndex
argument_list|(
name|columnIndex
argument_list|)
operator|.
name|setPresentStream
argument_list|(
name|present
argument_list|)
operator|.
name|setDataStream
argument_list|(
name|data
argument_list|)
operator|.
name|setLengthStream
argument_list|(
name|lengths
argument_list|)
operator|.
name|setDictionaryStream
argument_list|(
name|dictionary
argument_list|)
operator|.
name|setCompressionCodec
argument_list|(
name|codec
argument_list|)
operator|.
name|setColumnEncoding
argument_list|(
name|columnEncoding
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
break|break;
case|case
name|DECIMAL
case|:
name|treeReaders
index|[
name|i
index|]
operator|=
name|DecimalStreamReader
operator|.
name|builder
argument_list|()
operator|.
name|setFileId
argument_list|(
name|file
argument_list|)
operator|.
name|setColumnIndex
argument_list|(
name|columnIndex
argument_list|)
operator|.
name|setPrecision
argument_list|(
name|columnType
operator|.
name|getPrecision
argument_list|()
argument_list|)
operator|.
name|setScale
argument_list|(
name|columnType
operator|.
name|getScale
argument_list|()
argument_list|)
operator|.
name|setPresentStream
argument_list|(
name|present
argument_list|)
operator|.
name|setValueStream
argument_list|(
name|data
argument_list|)
operator|.
name|setScaleStream
argument_list|(
name|secondary
argument_list|)
operator|.
name|setCompressionCodec
argument_list|(
name|codec
argument_list|)
operator|.
name|setColumnEncoding
argument_list|(
name|columnEncoding
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
break|break;
case|case
name|TIMESTAMP
case|:
name|treeReaders
index|[
name|i
index|]
operator|=
name|TimestampStreamReader
operator|.
name|builder
argument_list|()
operator|.
name|setFileId
argument_list|(
name|file
argument_list|)
operator|.
name|setColumnIndex
argument_list|(
name|columnIndex
argument_list|)
operator|.
name|setPresentStream
argument_list|(
name|present
argument_list|)
operator|.
name|setSecondsStream
argument_list|(
name|data
argument_list|)
operator|.
name|setNanosStream
argument_list|(
name|secondary
argument_list|)
operator|.
name|setCompressionCodec
argument_list|(
name|codec
argument_list|)
operator|.
name|setColumnEncoding
argument_list|(
name|columnEncoding
argument_list|)
operator|.
name|skipCorrupt
argument_list|(
name|skipCorrupt
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
break|break;
case|case
name|DATE
case|:
name|treeReaders
index|[
name|i
index|]
operator|=
name|DateStreamReader
operator|.
name|builder
argument_list|()
operator|.
name|setFileId
argument_list|(
name|file
argument_list|)
operator|.
name|setColumnIndex
argument_list|(
name|columnIndex
argument_list|)
operator|.
name|setPresentStream
argument_list|(
name|present
argument_list|)
operator|.
name|setDataStream
argument_list|(
name|data
argument_list|)
operator|.
name|setCompressionCodec
argument_list|(
name|codec
argument_list|)
operator|.
name|setColumnEncoding
argument_list|(
name|columnEncoding
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
break|break;
default|default:
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Data type not supported yet! "
operator|+
name|columnType
argument_list|)
throw|;
block|}
block|}
return|return
name|treeReaders
return|;
block|}
block|}
end_class

end_unit

