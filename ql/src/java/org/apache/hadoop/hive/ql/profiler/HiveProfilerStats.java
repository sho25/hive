begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|profiler
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|OperatorHookContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|Utilities
import|;
end_import

begin_class
specifier|public
class|class
name|HiveProfilerStats
block|{
specifier|public
specifier|final
class|class
name|Columns
block|{
specifier|public
specifier|static
specifier|final
name|String
name|QUERY_ID
init|=
literal|"queryId"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPERATOR_NAME
init|=
literal|"operatorName"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPERATOR_ID
init|=
literal|"operatorId"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PARENT_OPERATOR_ID
init|=
literal|"parentOperatorId"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PARENT_OPERATOR_NAME
init|=
literal|"parentOperatorName"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|EXCL_TIME
init|=
literal|"exclTime"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|LEVEL_ANNO_NAME
init|=
literal|"levelAnnotatedName"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|INCL_TIME
init|=
literal|"inclTime"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CALL_COUNT
init|=
literal|"callCount"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|TASK_ID
init|=
literal|"taskId"
decl_stmt|;
block|}
specifier|public
specifier|static
specifier|final
name|String
index|[]
name|COLUMN_NAMES
init|=
operator|new
name|String
index|[]
block|{
name|Columns
operator|.
name|QUERY_ID
block|,
name|Columns
operator|.
name|TASK_ID
block|,
name|Columns
operator|.
name|OPERATOR_NAME
block|,
name|Columns
operator|.
name|OPERATOR_ID
block|,
name|Columns
operator|.
name|PARENT_OPERATOR_ID
block|,
name|Columns
operator|.
name|PARENT_OPERATOR_NAME
block|,
name|Columns
operator|.
name|LEVEL_ANNO_NAME
block|,
name|Columns
operator|.
name|INCL_TIME
block|,
name|Columns
operator|.
name|CALL_COUNT
block|}
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|stats
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|long
name|callCount
decl_stmt|;
name|long
name|inclTime
decl_stmt|;
name|String
name|taskId
decl_stmt|;
specifier|protected
name|HiveProfilerStats
parameter_list|(
name|OperatorHookContext
name|opHookContext
parameter_list|,
name|OperatorHookContext
name|parentOpHookContext
parameter_list|,
name|long
name|callCount
parameter_list|,
name|long
name|wallTime
parameter_list|,
name|Configuration
name|conf
parameter_list|)
block|{
name|this
operator|.
name|callCount
operator|=
name|callCount
expr_stmt|;
name|this
operator|.
name|inclTime
operator|=
name|wallTime
expr_stmt|;
name|this
operator|.
name|taskId
operator|=
name|Utilities
operator|.
name|getTaskId
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|populateStatsMap
argument_list|(
name|opHookContext
argument_list|,
name|parentOpHookContext
argument_list|,
name|conf
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|populateStatsMap
parameter_list|(
name|OperatorHookContext
name|opHookContext
parameter_list|,
name|OperatorHookContext
name|parentOpHookContext
parameter_list|,
name|Configuration
name|conf
parameter_list|)
block|{
name|String
name|queryId
init|=
name|conf
operator|==
literal|null
condition|?
literal|"no conf"
else|:
name|HiveConf
operator|.
name|getVar
argument_list|(
name|conf
argument_list|,
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVEQUERYID
argument_list|)
decl_stmt|;
name|stats
operator|.
name|put
argument_list|(
name|Columns
operator|.
name|QUERY_ID
argument_list|,
name|queryId
argument_list|)
expr_stmt|;
name|String
name|opName
init|=
name|opHookContext
operator|.
name|getOperatorName
argument_list|()
decl_stmt|;
name|stats
operator|.
name|put
argument_list|(
name|Columns
operator|.
name|OPERATOR_NAME
argument_list|,
name|opName
argument_list|)
expr_stmt|;
name|stats
operator|.
name|put
argument_list|(
name|Columns
operator|.
name|OPERATOR_ID
argument_list|,
name|opHookContext
operator|.
name|getOperatorId
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|parentOpName
init|=
name|parentOpHookContext
operator|==
literal|null
condition|?
literal|""
else|:
name|parentOpHookContext
operator|.
name|getOperatorName
argument_list|()
decl_stmt|;
name|stats
operator|.
name|put
argument_list|(
name|Columns
operator|.
name|PARENT_OPERATOR_NAME
argument_list|,
name|parentOpName
argument_list|)
expr_stmt|;
name|String
name|parentOpId
init|=
name|parentOpHookContext
operator|==
literal|null
condition|?
literal|"-1"
else|:
name|parentOpHookContext
operator|.
name|getOperatorId
argument_list|()
decl_stmt|;
name|stats
operator|.
name|put
argument_list|(
name|Columns
operator|.
name|PARENT_OPERATOR_ID
argument_list|,
name|parentOpId
argument_list|)
expr_stmt|;
name|String
name|levelAnnoOpName
init|=
name|opName
operator|+
literal|"_"
operator|+
name|opHookContext
operator|.
name|getOperatorId
argument_list|()
decl_stmt|;
name|String
name|levelAnnoName
init|=
name|parentOpHookContext
operator|==
literal|null
condition|?
literal|"main() ==> "
operator|+
name|levelAnnoOpName
else|:
name|parentOpName
operator|+
literal|"_"
operator|+
name|parentOpId
operator|+
literal|" ==> "
operator|+
name|levelAnnoOpName
decl_stmt|;
name|stats
operator|.
name|put
argument_list|(
name|Columns
operator|.
name|LEVEL_ANNO_NAME
argument_list|,
name|levelAnnoName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|updateStats
parameter_list|(
name|long
name|wallTime
parameter_list|,
name|long
name|count
parameter_list|)
block|{
name|this
operator|.
name|inclTime
operator|+=
name|wallTime
expr_stmt|;
name|this
operator|.
name|callCount
operator|+=
name|count
expr_stmt|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getStatsMap
parameter_list|()
block|{
name|stats
operator|.
name|put
argument_list|(
name|Columns
operator|.
name|TASK_ID
argument_list|,
name|taskId
argument_list|)
expr_stmt|;
name|stats
operator|.
name|put
argument_list|(
name|Columns
operator|.
name|INCL_TIME
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|inclTime
argument_list|)
argument_list|)
expr_stmt|;
name|stats
operator|.
name|put
argument_list|(
name|Columns
operator|.
name|CALL_COUNT
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|callCount
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|stats
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|stats
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

