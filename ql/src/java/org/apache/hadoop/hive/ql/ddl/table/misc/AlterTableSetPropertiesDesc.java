begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|ddl
operator|.
name|table
operator|.
name|misc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|EnvironmentContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|ddl
operator|.
name|table
operator|.
name|AbstractAlterTableDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|ddl
operator|.
name|table
operator|.
name|AlterTableType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|AcidUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
operator|.
name|ReplicationSpec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
operator|.
name|SemanticException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|Explain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|Explain
operator|.
name|Level
import|;
end_import

begin_comment
comment|/**  * DDL task description for ALTER TABLE ... SET TBLPROPERTIES ... commands.  */
end_comment

begin_class
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Set Properties"
argument_list|,
name|explainLevels
operator|=
block|{
name|Level
operator|.
name|USER
block|,
name|Level
operator|.
name|DEFAULT
block|,
name|Level
operator|.
name|EXTENDED
block|}
argument_list|)
specifier|public
class|class
name|AlterTableSetPropertiesDesc
extends|extends
name|AbstractAlterTableDesc
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|isExplicitStatsUpdate
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|isFullAcidConversion
decl_stmt|;
specifier|private
specifier|final
name|EnvironmentContext
name|environmentContext
decl_stmt|;
specifier|public
name|AlterTableSetPropertiesDesc
parameter_list|(
name|String
name|tableName
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpec
parameter_list|,
name|ReplicationSpec
name|replicationSpec
parameter_list|,
name|boolean
name|expectView
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|props
parameter_list|,
name|boolean
name|isExplicitStatsUpdate
parameter_list|,
name|boolean
name|isFullAcidConversion
parameter_list|,
name|EnvironmentContext
name|environmentContext
parameter_list|)
throws|throws
name|SemanticException
block|{
name|super
argument_list|(
name|AlterTableType
operator|.
name|ADDPROPS
argument_list|,
name|tableName
argument_list|,
name|partitionSpec
argument_list|,
name|replicationSpec
argument_list|,
literal|false
argument_list|,
name|expectView
argument_list|,
name|props
argument_list|)
expr_stmt|;
name|this
operator|.
name|isExplicitStatsUpdate
operator|=
name|isExplicitStatsUpdate
expr_stmt|;
name|this
operator|.
name|isFullAcidConversion
operator|=
name|isFullAcidConversion
expr_stmt|;
name|this
operator|.
name|environmentContext
operator|=
name|environmentContext
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|EnvironmentContext
name|getEnvironmentContext
parameter_list|()
block|{
return|return
name|environmentContext
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|mayNeedWriteId
parameter_list|()
block|{
return|return
name|isExplicitStatsUpdate
operator|||
name|AcidUtils
operator|.
name|isToInsertOnlyTable
argument_list|(
literal|null
argument_list|,
name|getProps
argument_list|()
argument_list|)
operator|||
operator|(
name|AcidUtils
operator|.
name|isTransactionalTable
argument_list|(
name|getProps
argument_list|()
argument_list|)
operator|&&
operator|!
name|isFullAcidConversion
operator|)
return|;
block|}
block|}
end_class

end_unit

