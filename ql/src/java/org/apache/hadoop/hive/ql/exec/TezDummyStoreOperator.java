begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|HiveException
import|;
end_import

begin_comment
comment|/**  * A dummy store operator same as the dummy store operator but for tez. This is required so that we  * don't check for tez everytime before forwarding a record. In tez records flow down from the dummy  * store operator in processOp phase unlike in map reduce.  *  */
end_comment

begin_class
specifier|public
class|class
name|TezDummyStoreOperator
extends|extends
name|DummyStoreOperator
block|{
specifier|private
name|boolean
name|fetchDone
init|=
literal|false
decl_stmt|;
comment|/**    * Unlike the MR counterpoint, on Tez we want processOp to forward    * the records.    */
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Object
name|row
parameter_list|,
name|int
name|tag
parameter_list|)
throws|throws
name|HiveException
block|{
name|super
operator|.
name|process
argument_list|(
name|row
argument_list|,
name|tag
argument_list|)
expr_stmt|;
name|forward
argument_list|(
name|result
operator|.
name|o
argument_list|,
name|outputObjInspector
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|getFetchDone
parameter_list|()
block|{
return|return
name|fetchDone
return|;
block|}
specifier|public
name|void
name|setFetchDone
parameter_list|(
name|boolean
name|fetchDone
parameter_list|)
block|{
name|this
operator|.
name|fetchDone
operator|=
name|fetchDone
expr_stmt|;
block|}
block|}
end_class

end_unit

