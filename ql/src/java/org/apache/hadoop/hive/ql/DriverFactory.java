begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|session
operator|.
name|SessionState
import|;
end_import

begin_comment
comment|/**  * Constructs a driver for ql clients  */
end_comment

begin_class
specifier|public
class|class
name|DriverFactory
block|{
specifier|public
specifier|static
name|IDriver
name|newDriver
parameter_list|(
name|HiveConf
name|conf
parameter_list|)
block|{
return|return
name|newDriver
argument_list|(
name|getNewQueryState
argument_list|(
name|conf
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
enum|enum
name|ExecutionStrategy
block|{
name|none
block|{
annotation|@
name|Override
name|IDriver
name|build
parameter_list|(
name|QueryState
name|queryState
parameter_list|,
name|String
name|userName
parameter_list|,
name|QueryInfo
name|queryInfo
parameter_list|)
block|{
return|return
operator|new
name|Driver
argument_list|(
name|queryState
argument_list|,
name|userName
argument_list|,
name|queryInfo
argument_list|)
return|;
block|}
block|}
block|;
specifier|abstract
name|IDriver
name|build
parameter_list|(
name|QueryState
name|queryState
parameter_list|,
name|String
name|userName
parameter_list|,
name|QueryInfo
name|queryInfo
parameter_list|)
function_decl|;
block|}
specifier|public
specifier|static
name|IDriver
name|newDriver
parameter_list|(
name|QueryState
name|queryState
parameter_list|,
name|String
name|userName
parameter_list|,
name|QueryInfo
name|queryInfo
parameter_list|)
block|{
name|ExecutionStrategy
name|strategy
init|=
name|ExecutionStrategy
operator|.
name|none
decl_stmt|;
return|return
name|strategy
operator|.
name|build
argument_list|(
name|queryState
argument_list|,
name|userName
argument_list|,
name|queryInfo
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|QueryState
name|getNewQueryState
parameter_list|(
name|HiveConf
name|conf
parameter_list|)
block|{
comment|// FIXME: isolate hiveConf used for a single query
return|return
operator|new
name|QueryState
operator|.
name|Builder
argument_list|()
operator|.
name|withGenerateNewQueryId
argument_list|(
literal|true
argument_list|)
operator|.
name|withHiveConf
argument_list|(
name|conf
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|// FIXME: remove this method ; and use the conf at the callsite...
annotation|@
name|Deprecated
specifier|public
specifier|static
name|IDriver
name|newDriver
parameter_list|()
block|{
comment|// only CLIDriver enter at this point
name|HiveConf
name|conf
init|=
operator|(
name|SessionState
operator|.
name|get
argument_list|()
operator|!=
literal|null
operator|)
condition|?
name|SessionState
operator|.
name|get
argument_list|()
operator|.
name|getConf
argument_list|()
else|:
operator|new
name|HiveConf
argument_list|()
decl_stmt|;
return|return
name|newDriver
argument_list|(
name|conf
argument_list|)
return|;
block|}
block|}
end_class

end_unit

