begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|persistence
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|HiveException
import|;
end_import

begin_interface
specifier|public
interface|interface
name|AbstractRowContainer
parameter_list|<
name|ROW
parameter_list|>
block|{
specifier|public
interface|interface
name|RowIterator
parameter_list|<
name|ROW
parameter_list|>
block|{
specifier|public
name|ROW
name|first
parameter_list|()
throws|throws
name|HiveException
function_decl|;
specifier|public
name|ROW
name|next
parameter_list|()
throws|throws
name|HiveException
function_decl|;
block|}
specifier|public
name|RowIterator
argument_list|<
name|ROW
argument_list|>
name|rowIter
parameter_list|()
throws|throws
name|HiveException
function_decl|;
comment|/**    * add a row into the RowContainer    *    * @param t row    */
specifier|public
name|void
name|addRow
parameter_list|(
name|ROW
name|t
parameter_list|)
throws|throws
name|HiveException
function_decl|;
comment|/**    * @return whether the row container has at least 1 row.    * NOTE: Originally we named this isEmpty, but that name conflicted with another interface.    */
specifier|public
name|boolean
name|hasRows
parameter_list|()
throws|throws
name|HiveException
function_decl|;
comment|/**    * @return whether the row container has 1 row.    */
specifier|public
name|boolean
name|isSingleRow
parameter_list|()
throws|throws
name|HiveException
function_decl|;
comment|/**    * @return number of elements in the RowContainer    */
specifier|public
name|int
name|rowCount
parameter_list|()
throws|throws
name|HiveException
function_decl|;
comment|/**    * Remove all elements in the RowContainer.    */
specifier|public
name|void
name|clearRows
parameter_list|()
throws|throws
name|HiveException
function_decl|;
block|}
end_interface

end_unit

