begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|index
operator|.
name|compact
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|TableType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|Warehouse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|DriverContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|Task
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|index
operator|.
name|HiveIndex
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Hive
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Partition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|api
operator|.
name|StageType
import|;
end_import

begin_class
specifier|public
class|class
name|IndexMetadataChangeTask
extends|extends
name|Task
argument_list|<
name|IndexMetadataChangeWork
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|int
name|execute
parameter_list|(
name|DriverContext
name|driverContext
parameter_list|)
block|{
try|try
block|{
name|Hive
name|db
init|=
name|Hive
operator|.
name|get
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|IndexMetadataChangeWork
name|work
init|=
name|this
operator|.
name|getWork
argument_list|()
decl_stmt|;
name|String
name|tblName
init|=
name|work
operator|.
name|getIndexTbl
argument_list|()
decl_stmt|;
name|Table
name|tbl
init|=
name|db
operator|.
name|getTable
argument_list|(
name|work
operator|.
name|getDbName
argument_list|()
argument_list|,
name|tblName
argument_list|)
decl_stmt|;
if|if
condition|(
name|tbl
operator|==
literal|null
condition|)
block|{
name|console
operator|.
name|printError
argument_list|(
literal|"Index table can not be null."
argument_list|)
expr_stmt|;
return|return
literal|1
return|;
block|}
if|if
condition|(
operator|!
name|tbl
operator|.
name|getTableType
argument_list|()
operator|.
name|equals
argument_list|(
name|TableType
operator|.
name|INDEX_TABLE
argument_list|)
condition|)
block|{
name|console
operator|.
name|printError
argument_list|(
literal|"Table "
operator|+
name|tbl
operator|.
name|getTableName
argument_list|()
operator|+
literal|" not specified."
argument_list|)
expr_stmt|;
return|return
literal|1
return|;
block|}
if|if
condition|(
name|tbl
operator|.
name|isPartitioned
argument_list|()
operator|&&
name|work
operator|.
name|getPartSpec
argument_list|()
operator|==
literal|null
condition|)
block|{
name|console
operator|.
name|printError
argument_list|(
literal|"Index table is partitioned, but no partition specified."
argument_list|)
expr_stmt|;
return|return
literal|1
return|;
block|}
if|if
condition|(
name|work
operator|.
name|getPartSpec
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|Partition
name|part
init|=
name|db
operator|.
name|getPartition
argument_list|(
name|tbl
argument_list|,
name|work
operator|.
name|getPartSpec
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
if|if
condition|(
name|part
operator|==
literal|null
condition|)
block|{
name|console
operator|.
name|printError
argument_list|(
literal|"Partition "
operator|+
name|Warehouse
operator|.
name|makePartName
argument_list|(
name|work
operator|.
name|getPartSpec
argument_list|()
argument_list|,
literal|false
argument_list|)
operator|.
name|toString
argument_list|()
operator|+
literal|" does not exist."
argument_list|)
expr_stmt|;
return|return
literal|1
return|;
block|}
name|Path
name|url
init|=
operator|new
name|Path
argument_list|(
name|part
operator|.
name|getDataLocation
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|FileSystem
name|fs
init|=
name|url
operator|.
name|getFileSystem
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|FileStatus
name|fstat
init|=
name|fs
operator|.
name|getFileStatus
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|part
operator|.
name|getParameters
argument_list|()
operator|.
name|put
argument_list|(
name|HiveIndex
operator|.
name|INDEX_TABLE_CREATETIME
argument_list|,
name|Long
operator|.
name|toString
argument_list|(
name|fstat
operator|.
name|getModificationTime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|db
operator|.
name|alterPartition
argument_list|(
name|tbl
operator|.
name|getTableName
argument_list|()
argument_list|,
name|part
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Path
name|url
init|=
operator|new
name|Path
argument_list|(
name|tbl
operator|.
name|getDataLocation
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|FileSystem
name|fs
init|=
name|url
operator|.
name|getFileSystem
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|FileStatus
name|fstat
init|=
name|fs
operator|.
name|getFileStatus
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|tbl
operator|.
name|getParameters
argument_list|()
operator|.
name|put
argument_list|(
name|HiveIndex
operator|.
name|INDEX_TABLE_CREATETIME
argument_list|,
name|Long
operator|.
name|toString
argument_list|(
name|fstat
operator|.
name|getModificationTime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|db
operator|.
name|alterTable
argument_list|(
name|tbl
operator|.
name|getTableName
argument_list|()
argument_list|,
name|tbl
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|console
operator|.
name|printError
argument_list|(
literal|"Error changing index table/partition metadata "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|1
return|;
block|}
return|return
literal|0
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
literal|"IndexMetadataChangeTask"
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getType
parameter_list|()
block|{
return|return
name|StageType
operator|.
name|DDL
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|localizeMRTmpFilesImpl
parameter_list|(
name|Context
name|ctx
parameter_list|)
block|{   }
block|}
end_class

end_unit

