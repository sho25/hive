begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_comment
comment|/**  * MsckDesc.  *  */
end_comment

begin_class
specifier|public
class|class
name|MsckDesc
extends|extends
name|DDLWork
implements|implements
name|Serializable
block|{
specifier|private
name|String
name|tableName
decl_stmt|;
specifier|private
name|ArrayList
argument_list|<
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|partSpecs
decl_stmt|;
specifier|private
name|String
name|resFile
decl_stmt|;
specifier|private
name|boolean
name|repairPartitions
decl_stmt|;
comment|/**    * For serialization use only.    */
specifier|public
name|MsckDesc
parameter_list|()
block|{   }
comment|/**    * Description of a msck command.    *     * @param tableName    *          Table to check, can be null.    * @param partSpecs    *          Partition specification, can be null.    * @param resFile    *          Where to save the output of the command    * @param repairPartitions    *          remove stale / add new partitions found during the check    */
specifier|public
name|MsckDesc
parameter_list|(
name|String
name|tableName
parameter_list|,
name|List
argument_list|<
name|?
extends|extends
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|partSpecs
parameter_list|,
name|Path
name|resFile
parameter_list|,
name|boolean
name|repairPartitions
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|tableName
operator|=
name|tableName
expr_stmt|;
name|this
operator|.
name|partSpecs
operator|=
operator|new
name|ArrayList
argument_list|<
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
argument_list|(
name|partSpecs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|partSpecs
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|this
operator|.
name|partSpecs
operator|.
name|add
argument_list|(
operator|new
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|(
name|partSpecs
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|resFile
operator|=
name|resFile
operator|.
name|toString
argument_list|()
expr_stmt|;
name|this
operator|.
name|repairPartitions
operator|=
name|repairPartitions
expr_stmt|;
block|}
comment|/**    * @return the table to check    */
specifier|public
name|String
name|getTableName
parameter_list|()
block|{
return|return
name|tableName
return|;
block|}
comment|/**    * @param tableName    *          the table to check    */
specifier|public
name|void
name|setTableName
parameter_list|(
name|String
name|tableName
parameter_list|)
block|{
name|this
operator|.
name|tableName
operator|=
name|tableName
expr_stmt|;
block|}
comment|/**    * @return partitions to check.    */
specifier|public
name|ArrayList
argument_list|<
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|getPartSpecs
parameter_list|()
block|{
return|return
name|partSpecs
return|;
block|}
comment|/**    * @param partitionSpec    *          partitions to check.    */
specifier|public
name|void
name|setPartSpecs
parameter_list|(
name|ArrayList
argument_list|<
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|partSpecs
parameter_list|)
block|{
name|this
operator|.
name|partSpecs
operator|=
name|partSpecs
expr_stmt|;
block|}
comment|/**    * @return file to save command output to    */
specifier|public
name|String
name|getResFile
parameter_list|()
block|{
return|return
name|resFile
return|;
block|}
comment|/**    * @param resFile    *          file to save command output to    */
specifier|public
name|void
name|setResFile
parameter_list|(
name|String
name|resFile
parameter_list|)
block|{
name|this
operator|.
name|resFile
operator|=
name|resFile
expr_stmt|;
block|}
comment|/**    * @return remove stale / add new partitions found during the check    */
specifier|public
name|boolean
name|isRepairPartitions
parameter_list|()
block|{
return|return
name|repairPartitions
return|;
block|}
comment|/**    * @param remove    *          stale / add new partitions found during the check    */
specifier|public
name|void
name|setRepairPartitions
parameter_list|(
name|boolean
name|repairPartitions
parameter_list|)
block|{
name|this
operator|.
name|repairPartitions
operator|=
name|repairPartitions
expr_stmt|;
block|}
block|}
end_class

end_unit

