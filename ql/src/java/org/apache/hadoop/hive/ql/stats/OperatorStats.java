begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|stats
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Objects
import|;
end_import

begin_comment
comment|/**  * Holds information an operator's statistics.  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|OperatorStats
block|{
specifier|private
name|String
name|operatorId
decl_stmt|;
specifier|private
name|long
name|outputRecords
decl_stmt|;
comment|// for jackson
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|private
name|OperatorStats
parameter_list|()
block|{   }
specifier|public
name|OperatorStats
parameter_list|(
specifier|final
name|String
name|opId
parameter_list|)
block|{
name|this
operator|.
name|operatorId
operator|=
name|opId
expr_stmt|;
name|this
operator|.
name|outputRecords
operator|=
operator|-
literal|1
expr_stmt|;
block|}
specifier|public
name|long
name|getOutputRecords
parameter_list|()
block|{
return|return
name|outputRecords
return|;
block|}
specifier|public
name|void
name|setOutputRecords
parameter_list|(
specifier|final
name|long
name|outputRecords
parameter_list|)
block|{
name|this
operator|.
name|outputRecords
operator|=
name|outputRecords
expr_stmt|;
block|}
specifier|public
name|String
name|getOperatorId
parameter_list|()
block|{
return|return
name|operatorId
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|String
operator|.
name|format
argument_list|(
literal|"OperatorStats %s records: %d"
argument_list|,
name|operatorId
argument_list|,
name|outputRecords
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|Objects
operator|.
name|hashCode
argument_list|(
name|operatorId
argument_list|,
name|outputRecords
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
literal|null
operator|||
name|obj
operator|.
name|getClass
argument_list|()
operator|!=
name|OperatorStats
operator|.
name|class
condition|)
block|{
return|return
literal|false
return|;
block|}
name|OperatorStats
name|o
init|=
operator|(
name|OperatorStats
operator|)
name|obj
decl_stmt|;
return|return
name|Objects
operator|.
name|equal
argument_list|(
name|operatorId
argument_list|,
name|o
operator|.
name|operatorId
argument_list|)
operator|&&
name|Objects
operator|.
name|equal
argument_list|(
name|outputRecords
argument_list|,
name|o
operator|.
name|outputRecords
argument_list|)
return|;
block|}
block|}
end_class

end_unit

