begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|hooks
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|ContentSummary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|QueryInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|QueryPlan
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|QueryState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|log
operator|.
name|PerfLogger
import|;
end_import

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Unstable
specifier|public
class|class
name|PrivateHookContext
extends|extends
name|HookContext
block|{
specifier|private
specifier|final
name|Context
name|ctx
decl_stmt|;
specifier|public
name|PrivateHookContext
parameter_list|(
name|QueryPlan
name|queryPlan
parameter_list|,
name|QueryState
name|queryState
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|ContentSummary
argument_list|>
name|inputPathToContentSummary
parameter_list|,
name|String
name|userName
parameter_list|,
name|String
name|ipAddress
parameter_list|,
name|String
name|hiveInstanceAddress
parameter_list|,
name|String
name|operationId
parameter_list|,
name|String
name|sessionId
parameter_list|,
name|String
name|threadId
parameter_list|,
name|boolean
name|isHiveServerQuery
parameter_list|,
name|PerfLogger
name|perfLogger
parameter_list|,
name|QueryInfo
name|queryInfo
parameter_list|,
name|Context
name|ctx
parameter_list|)
throws|throws
name|Exception
block|{
name|super
argument_list|(
name|queryPlan
argument_list|,
name|queryState
argument_list|,
name|inputPathToContentSummary
argument_list|,
name|userName
argument_list|,
name|ipAddress
argument_list|,
name|hiveInstanceAddress
argument_list|,
name|operationId
argument_list|,
name|sessionId
argument_list|,
name|threadId
argument_list|,
name|isHiveServerQuery
argument_list|,
name|perfLogger
argument_list|,
name|queryInfo
argument_list|)
expr_stmt|;
name|this
operator|.
name|ctx
operator|=
name|ctx
expr_stmt|;
block|}
specifier|public
name|Context
name|getContext
parameter_list|()
block|{
return|return
name|ctx
return|;
block|}
block|}
end_class

end_unit

