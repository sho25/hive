begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
operator|.
name|calcite
operator|.
name|stats
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|RelCollations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|metadata
operator|.
name|ReflectiveRelMetadataProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|metadata
operator|.
name|RelMdMemory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|metadata
operator|.
name|RelMetadataProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|metadata
operator|.
name|RelMetadataQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|util
operator|.
name|BuiltInMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
operator|.
name|calcite
operator|.
name|reloperators
operator|.
name|HiveAggregate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
operator|.
name|calcite
operator|.
name|reloperators
operator|.
name|HiveFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
operator|.
name|calcite
operator|.
name|reloperators
operator|.
name|HiveJoin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
operator|.
name|calcite
operator|.
name|reloperators
operator|.
name|HiveProject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
operator|.
name|calcite
operator|.
name|reloperators
operator|.
name|HiveSortLimit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
operator|.
name|calcite
operator|.
name|reloperators
operator|.
name|HiveTableScan
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
operator|.
name|calcite
operator|.
name|reloperators
operator|.
name|HiveUnion
import|;
end_import

begin_class
specifier|public
class|class
name|HiveRelMdMemory
extends|extends
name|RelMdMemory
block|{
specifier|private
specifier|static
specifier|final
name|HiveRelMdMemory
name|INSTANCE
init|=
operator|new
name|HiveRelMdMemory
argument_list|()
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|RelMetadataProvider
name|SOURCE
init|=
name|ReflectiveRelMetadataProvider
operator|.
name|reflectiveSource
argument_list|(
name|INSTANCE
argument_list|,
name|BuiltInMethod
operator|.
name|MEMORY
operator|.
name|method
argument_list|,
name|BuiltInMethod
operator|.
name|CUMULATIVE_MEMORY_WITHIN_PHASE
operator|.
name|method
argument_list|,
name|BuiltInMethod
operator|.
name|CUMULATIVE_MEMORY_WITHIN_PHASE_SPLIT
operator|.
name|method
argument_list|)
decl_stmt|;
comment|//~ Constructors -----------------------------------------------------------
specifier|private
name|HiveRelMdMemory
parameter_list|()
block|{}
comment|//~ Methods ----------------------------------------------------------------
specifier|public
name|Double
name|memory
parameter_list|(
name|HiveTableScan
name|tableScan
parameter_list|,
name|RelMetadataQuery
name|mq
parameter_list|)
block|{
return|return
literal|0.0d
return|;
block|}
specifier|public
name|Double
name|memory
parameter_list|(
name|HiveAggregate
name|aggregate
parameter_list|,
name|RelMetadataQuery
name|mq
parameter_list|)
block|{
specifier|final
name|Double
name|avgRowSize
init|=
name|mq
operator|.
name|getAverageRowSize
argument_list|(
name|aggregate
operator|.
name|getInput
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|Double
name|rowCount
init|=
name|mq
operator|.
name|getRowCount
argument_list|(
name|aggregate
operator|.
name|getInput
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|avgRowSize
operator|==
literal|null
operator|||
name|rowCount
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
return|return
name|avgRowSize
operator|*
name|rowCount
return|;
block|}
specifier|public
name|Double
name|memory
parameter_list|(
name|HiveFilter
name|filter
parameter_list|,
name|RelMetadataQuery
name|mq
parameter_list|)
block|{
return|return
literal|0.0
return|;
block|}
specifier|public
name|Double
name|memory
parameter_list|(
name|HiveJoin
name|join
parameter_list|,
name|RelMetadataQuery
name|mq
parameter_list|)
block|{
return|return
name|join
operator|.
name|getMemory
argument_list|()
return|;
block|}
specifier|public
name|Double
name|cumulativeMemoryWithinPhaseSplit
parameter_list|(
name|HiveJoin
name|join
parameter_list|)
block|{
return|return
name|join
operator|.
name|getCumulativeMemoryWithinPhaseSplit
argument_list|()
return|;
block|}
specifier|public
name|Double
name|memory
parameter_list|(
name|HiveProject
name|project
parameter_list|,
name|RelMetadataQuery
name|mq
parameter_list|)
block|{
return|return
literal|0.0
return|;
block|}
specifier|public
name|Double
name|memory
parameter_list|(
name|HiveSortLimit
name|sort
parameter_list|,
name|RelMetadataQuery
name|mq
parameter_list|)
block|{
if|if
condition|(
name|sort
operator|.
name|getCollation
argument_list|()
operator|!=
name|RelCollations
operator|.
name|EMPTY
condition|)
block|{
comment|// It sorts
specifier|final
name|Double
name|avgRowSize
init|=
name|mq
operator|.
name|getAverageRowSize
argument_list|(
name|sort
operator|.
name|getInput
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|Double
name|rowCount
init|=
name|mq
operator|.
name|getRowCount
argument_list|(
name|sort
operator|.
name|getInput
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|avgRowSize
operator|==
literal|null
operator|||
name|rowCount
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
return|return
name|avgRowSize
operator|*
name|rowCount
return|;
block|}
comment|// It does not sort, memory footprint is zero
return|return
literal|0.0
return|;
block|}
specifier|public
name|Double
name|memory
parameter_list|(
name|HiveUnion
name|union
parameter_list|,
name|RelMetadataQuery
name|mq
parameter_list|)
block|{
return|return
literal|0.0
return|;
block|}
block|}
end_class

end_unit

