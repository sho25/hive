begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
operator|.
name|signature
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|MapperFeature
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|SerializationFeature
import|;
end_import

begin_comment
comment|/**  * Enables to encode/decode runtime statistics values into textual form.  */
end_comment

begin_class
specifier|public
class|class
name|RuntimeStatsPersister
block|{
specifier|public
specifier|static
specifier|final
name|RuntimeStatsPersister
name|INSTANCE
init|=
operator|new
name|RuntimeStatsPersister
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|ObjectMapper
name|om
decl_stmt|;
name|RuntimeStatsPersister
parameter_list|()
block|{
name|om
operator|=
operator|new
name|ObjectMapper
argument_list|()
expr_stmt|;
name|om
operator|.
name|enableDefaultTyping
argument_list|(
name|ObjectMapper
operator|.
name|DefaultTyping
operator|.
name|NON_FINAL
argument_list|)
expr_stmt|;
name|om
operator|.
name|configure
argument_list|(
name|SerializationFeature
operator|.
name|INDENT_OUTPUT
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|om
operator|.
name|configure
argument_list|(
name|MapperFeature
operator|.
name|REQUIRE_SETTERS_FOR_GETTERS
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
parameter_list|<
name|T
parameter_list|>
name|String
name|encode
parameter_list|(
name|T
name|input
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|om
operator|.
name|writeValueAsString
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|decode
parameter_list|(
name|String
name|input
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|clazz
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|om
operator|.
name|readValue
argument_list|(
name|input
argument_list|,
name|clazz
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|decode
parameter_list|(
name|byte
index|[]
name|input
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|clazz
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|om
operator|.
name|readValue
argument_list|(
name|input
argument_list|,
name|clazz
argument_list|)
return|;
block|}
block|}
end_class

end_unit

