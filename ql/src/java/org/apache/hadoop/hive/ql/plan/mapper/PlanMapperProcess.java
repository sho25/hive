begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|mapper
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|Operator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
operator|.
name|signature
operator|.
name|OpTreeSignature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
operator|.
name|signature
operator|.
name|OpTreeSignatureFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|mapper
operator|.
name|PlanMapper
operator|.
name|LinkGroup
import|;
end_import

begin_class
specifier|public
class|class
name|PlanMapperProcess
block|{
specifier|private
specifier|static
class|class
name|OpTreeSignatureMapper
implements|implements
name|GroupTransformer
block|{
specifier|private
name|OpTreeSignatureFactory
name|cache
init|=
name|OpTreeSignatureFactory
operator|.
name|newCache
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|map
parameter_list|(
name|LinkGroup
name|group
parameter_list|)
block|{
name|List
argument_list|<
name|Operator
argument_list|>
name|operators
init|=
name|group
operator|.
name|getAll
argument_list|(
name|Operator
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
name|Operator
name|op
range|:
name|operators
control|)
block|{
name|group
operator|.
name|add
argument_list|(
name|OpTreeSignature
operator|.
name|of
argument_list|(
name|op
argument_list|,
name|cache
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
specifier|static
name|void
name|runPostProcess
parameter_list|(
name|PlanMapper
name|planMapper
parameter_list|)
block|{
name|planMapper
operator|.
name|runMapper
argument_list|(
operator|new
name|OpTreeSignatureMapper
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

