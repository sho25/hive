begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_comment
comment|/**  * ExplainConfiguration  */
end_comment

begin_class
specifier|public
class|class
name|ExplainConfiguration
block|{
specifier|public
enum|enum
name|VectorizationDetailLevel
block|{
name|SUMMARY
argument_list|(
literal|4
argument_list|)
block|,
name|OPERATOR
argument_list|(
literal|3
argument_list|)
block|,
name|EXPRESSION
argument_list|(
literal|2
argument_list|)
block|,
name|DETAIL
argument_list|(
literal|1
argument_list|)
block|;
specifier|public
specifier|final
name|int
name|rank
decl_stmt|;
name|VectorizationDetailLevel
parameter_list|(
name|int
name|rank
parameter_list|)
block|{
name|this
operator|.
name|rank
operator|=
name|rank
expr_stmt|;
block|}
block|}
empty_stmt|;
specifier|private
name|boolean
name|extended
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|formatted
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|dependency
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|logical
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|authorize
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|userLevelExplain
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|vectorization
init|=
literal|false
decl_stmt|;
specifier|private
name|boolean
name|vectorizationOnly
init|=
literal|false
decl_stmt|;
specifier|private
name|VectorizationDetailLevel
name|vectorizationDetailLevel
init|=
name|VectorizationDetailLevel
operator|.
name|SUMMARY
decl_stmt|;
specifier|private
name|Path
name|explainRootPath
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|opIdToRuntimeNumRows
decl_stmt|;
specifier|public
enum|enum
name|AnalyzeState
block|{
name|RUNNING
block|,
name|ANALYZING
block|}
empty_stmt|;
specifier|private
name|AnalyzeState
name|analyze
init|=
literal|null
decl_stmt|;
specifier|public
name|boolean
name|isExtended
parameter_list|()
block|{
return|return
name|extended
return|;
block|}
specifier|public
name|void
name|setExtended
parameter_list|(
name|boolean
name|extended
parameter_list|)
block|{
name|this
operator|.
name|extended
operator|=
name|extended
expr_stmt|;
block|}
specifier|public
name|boolean
name|isFormatted
parameter_list|()
block|{
return|return
name|formatted
return|;
block|}
specifier|public
name|void
name|setFormatted
parameter_list|(
name|boolean
name|formatted
parameter_list|)
block|{
name|this
operator|.
name|formatted
operator|=
name|formatted
expr_stmt|;
block|}
specifier|public
name|boolean
name|isDependency
parameter_list|()
block|{
return|return
name|dependency
return|;
block|}
specifier|public
name|void
name|setDependency
parameter_list|(
name|boolean
name|dependency
parameter_list|)
block|{
name|this
operator|.
name|dependency
operator|=
name|dependency
expr_stmt|;
block|}
specifier|public
name|boolean
name|isLogical
parameter_list|()
block|{
return|return
name|logical
return|;
block|}
specifier|public
name|void
name|setLogical
parameter_list|(
name|boolean
name|logical
parameter_list|)
block|{
name|this
operator|.
name|logical
operator|=
name|logical
expr_stmt|;
block|}
specifier|public
name|boolean
name|isAuthorize
parameter_list|()
block|{
return|return
name|authorize
return|;
block|}
specifier|public
name|void
name|setAuthorize
parameter_list|(
name|boolean
name|authorize
parameter_list|)
block|{
name|this
operator|.
name|authorize
operator|=
name|authorize
expr_stmt|;
block|}
specifier|public
name|AnalyzeState
name|getAnalyze
parameter_list|()
block|{
return|return
name|analyze
return|;
block|}
specifier|public
name|void
name|setAnalyze
parameter_list|(
name|AnalyzeState
name|analyze
parameter_list|)
block|{
name|this
operator|.
name|analyze
operator|=
name|analyze
expr_stmt|;
block|}
specifier|public
name|boolean
name|isUserLevelExplain
parameter_list|()
block|{
return|return
name|userLevelExplain
return|;
block|}
specifier|public
name|void
name|setUserLevelExplain
parameter_list|(
name|boolean
name|userLevelExplain
parameter_list|)
block|{
name|this
operator|.
name|userLevelExplain
operator|=
name|userLevelExplain
expr_stmt|;
block|}
specifier|public
name|boolean
name|isVectorization
parameter_list|()
block|{
return|return
name|vectorization
return|;
block|}
specifier|public
name|void
name|setVectorization
parameter_list|(
name|boolean
name|vectorization
parameter_list|)
block|{
name|this
operator|.
name|vectorization
operator|=
name|vectorization
expr_stmt|;
block|}
specifier|public
name|boolean
name|isVectorizationOnly
parameter_list|()
block|{
return|return
name|vectorizationOnly
return|;
block|}
specifier|public
name|void
name|setVectorizationOnly
parameter_list|(
name|boolean
name|vectorizationOnly
parameter_list|)
block|{
name|this
operator|.
name|vectorizationOnly
operator|=
name|vectorizationOnly
expr_stmt|;
block|}
specifier|public
name|VectorizationDetailLevel
name|getVectorizationDetailLevel
parameter_list|()
block|{
return|return
name|vectorizationDetailLevel
return|;
block|}
specifier|public
name|void
name|setVectorizationDetailLevel
parameter_list|(
name|VectorizationDetailLevel
name|vectorizationDetailLevel
parameter_list|)
block|{
name|this
operator|.
name|vectorizationDetailLevel
operator|=
name|vectorizationDetailLevel
expr_stmt|;
block|}
specifier|public
name|Path
name|getExplainRootPath
parameter_list|()
block|{
return|return
name|explainRootPath
return|;
block|}
specifier|public
name|void
name|setExplainRootPath
parameter_list|(
name|Path
name|explainRootPath
parameter_list|)
block|{
name|this
operator|.
name|explainRootPath
operator|=
name|explainRootPath
expr_stmt|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|getOpIdToRuntimeNumRows
parameter_list|()
block|{
return|return
name|opIdToRuntimeNumRows
return|;
block|}
specifier|public
name|void
name|setOpIdToRuntimeNumRows
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|opIdToRuntimeNumRows
parameter_list|)
block|{
name|this
operator|.
name|opIdToRuntimeNumRows
operator|=
name|opIdToRuntimeNumRows
expr_stmt|;
block|}
block|}
end_class

end_unit

