begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|mr
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|shims
operator|.
name|ShimLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|net
operator|.
name|NetUtils
import|;
end_import

begin_comment
comment|/**  * JobTrackerURLResolver.  *  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|JobTrackerURLResolver
block|{
specifier|public
specifier|static
name|String
name|getURL
parameter_list|(
name|JobConf
name|conf
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|infoAddr
init|=
name|ShimLoader
operator|.
name|getHadoopShims
argument_list|()
operator|.
name|getJobLauncherHttpAddress
argument_list|(
name|conf
argument_list|)
decl_stmt|;
if|if
condition|(
name|infoAddr
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Unable to find job tracker info port."
argument_list|)
throw|;
block|}
name|InetSocketAddress
name|infoSocAddr
init|=
name|NetUtils
operator|.
name|createSocketAddr
argument_list|(
name|infoAddr
argument_list|)
decl_stmt|;
name|int
name|infoPort
init|=
name|infoSocAddr
operator|.
name|getPort
argument_list|()
decl_stmt|;
name|String
name|jobTrackerStr
init|=
name|ShimLoader
operator|.
name|getHadoopShims
argument_list|()
operator|.
name|getJobLauncherRpcAddress
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|InetSocketAddress
name|jobTrackerSocAddr
init|=
name|NetUtils
operator|.
name|createSocketAddr
argument_list|(
name|jobTrackerStr
argument_list|)
decl_stmt|;
name|String
name|tracker
init|=
literal|"http://"
operator|+
name|jobTrackerSocAddr
operator|.
name|getHostName
argument_list|()
operator|+
literal|":"
operator|+
name|infoPort
decl_stmt|;
return|return
name|tracker
return|;
block|}
specifier|private
name|JobTrackerURLResolver
parameter_list|()
block|{
comment|// prevent instantiation
block|}
block|}
end_class

end_unit

