begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p/>  * http://www.apache.org/licenses/LICENSE-2.0  *<p/>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|log
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|core
operator|.
name|appender
operator|.
name|rolling
operator|.
name|DirectFileRolloverStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|core
operator|.
name|appender
operator|.
name|rolling
operator|.
name|RollingFileManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|core
operator|.
name|appender
operator|.
name|rolling
operator|.
name|RolloverDescription
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|core
operator|.
name|appender
operator|.
name|rolling
operator|.
name|RolloverDescriptionImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|core
operator|.
name|appender
operator|.
name|rolling
operator|.
name|RolloverStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|core
operator|.
name|appender
operator|.
name|rolling
operator|.
name|action
operator|.
name|AbstractAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|core
operator|.
name|appender
operator|.
name|rolling
operator|.
name|action
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|core
operator|.
name|config
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|core
operator|.
name|config
operator|.
name|plugins
operator|.
name|Plugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|core
operator|.
name|config
operator|.
name|plugins
operator|.
name|PluginConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|core
operator|.
name|config
operator|.
name|plugins
operator|.
name|PluginFactory
import|;
end_import

begin_comment
comment|/**  * A RolloverStrategy that does not rename files and  * uses file names that are based on a millisecond timestamp.  */
end_comment

begin_class
annotation|@
name|Plugin
argument_list|(
name|name
operator|=
literal|"SlidingFilenameRolloverStrategy"
argument_list|,
name|category
operator|=
literal|"Core"
argument_list|,
name|printObject
operator|=
literal|true
argument_list|)
specifier|public
class|class
name|SlidingFilenameRolloverStrategy
implements|implements
name|RolloverStrategy
implements|,
name|DirectFileRolloverStrategy
block|{
annotation|@
name|PluginFactory
specifier|public
specifier|static
name|SlidingFilenameRolloverStrategy
name|createStrategy
parameter_list|(
annotation|@
name|PluginConfiguration
name|Configuration
name|config
parameter_list|)
block|{
return|return
operator|new
name|SlidingFilenameRolloverStrategy
argument_list|()
return|;
block|}
comment|/**    * Do rollover with no renaming.    */
annotation|@
name|Override
specifier|public
name|RolloverDescription
name|rollover
parameter_list|(
name|RollingFileManager
name|manager
parameter_list|)
throws|throws
name|SecurityException
block|{
name|Action
name|shiftToNextActiveFile
init|=
operator|new
name|AbstractAction
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|execute
parameter_list|()
throws|throws
name|IOException
block|{
return|return
literal|true
return|;
block|}
block|}
decl_stmt|;
return|return
operator|new
name|RolloverDescriptionImpl
argument_list|(
literal|"ignored"
argument_list|,
literal|false
argument_list|,
name|shiftToNextActiveFile
argument_list|,
literal|null
argument_list|)
return|;
block|}
comment|/**    * Get the new log file name.    */
annotation|@
name|Override
specifier|public
name|String
name|getCurrentFileName
parameter_list|(
name|RollingFileManager
name|rollingFileManager
parameter_list|)
block|{
name|String
name|pattern
init|=
name|rollingFileManager
operator|.
name|getPatternProcessor
argument_list|()
operator|.
name|getPattern
argument_list|()
decl_stmt|;
return|return
name|getLogFileName
argument_list|(
name|pattern
argument_list|)
return|;
block|}
comment|/**    * @return Mangled file name formed by appending the current timestamp    */
specifier|private
specifier|static
name|String
name|getLogFileName
parameter_list|(
name|String
name|oldFileName
parameter_list|)
block|{
return|return
name|oldFileName
operator|+
literal|"."
operator|+
name|Long
operator|.
name|toString
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

