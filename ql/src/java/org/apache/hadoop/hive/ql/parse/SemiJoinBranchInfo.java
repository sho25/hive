begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|TableScanOperator
import|;
end_import

begin_class
specifier|public
class|class
name|SemiJoinBranchInfo
block|{
specifier|private
name|TableScanOperator
name|ts
decl_stmt|;
specifier|private
name|boolean
name|isHint
decl_stmt|;
comment|// Default value is true, however, if an optimization deems this edge
comment|// important, it should set this to false. This does not guarantee that
comment|// the edge will stay, however, it increases the chances.
specifier|private
name|boolean
name|shouldRemove
decl_stmt|;
specifier|public
name|SemiJoinBranchInfo
parameter_list|(
name|TableScanOperator
name|ts
parameter_list|)
block|{
name|this
operator|.
name|ts
operator|=
name|ts
expr_stmt|;
name|isHint
operator|=
literal|false
expr_stmt|;
name|shouldRemove
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|SemiJoinBranchInfo
parameter_list|(
name|TableScanOperator
name|ts
parameter_list|,
name|boolean
name|isHint
parameter_list|)
block|{
name|this
operator|.
name|ts
operator|=
name|ts
expr_stmt|;
name|this
operator|.
name|isHint
operator|=
name|isHint
expr_stmt|;
name|shouldRemove
operator|=
operator|!
name|isHint
expr_stmt|;
comment|// If hint is true, shouldRemove is redundant anyway
block|}
specifier|public
name|TableScanOperator
name|getTsOp
parameter_list|()
block|{
return|return
name|ts
return|;
block|}
specifier|public
name|boolean
name|getIsHint
parameter_list|()
block|{
return|return
name|isHint
return|;
block|}
specifier|public
name|boolean
name|getShouldRemove
parameter_list|()
block|{
return|return
name|shouldRemove
return|;
block|}
specifier|public
name|void
name|setShouldRemove
parameter_list|(
name|boolean
name|shouldRemove
parameter_list|)
block|{
comment|// The state only changes from true->false
comment|// Once set to false, it may not change back to true
if|if
condition|(
name|this
operator|.
name|shouldRemove
condition|)
block|{
name|this
operator|.
name|shouldRemove
operator|=
name|shouldRemove
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

