begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|metastore
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|HiveMetaStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|MetaStorePreEventListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|TableType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|InvalidOperationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|MetaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|NoSuchObjectException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|PreAlterTableEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|PreCreateTableEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|PreDropTableEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|PreEventContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|utils
operator|.
name|MetaStoreServerUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|HiveException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|HiveUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|HiveMetastoreAuthenticationProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|metastore
operator|.
name|events
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HiveAuthorizer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HiveAuthorizerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HiveAuthzContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HiveAuthzSessionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HiveMetastoreClientFactoryImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HiveOperationType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HivePrivilegeObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * HiveMetaStoreAuthorizer :  Do authorization checks on MetaStore Events in MetaStorePreEventListener  */
end_comment

begin_class
specifier|public
class|class
name|HiveMetaStoreAuthorizer
extends|extends
name|MetaStorePreEventListener
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|HiveMetaStoreAuthorizer
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|ThreadLocal
argument_list|<
name|Configuration
argument_list|>
name|tConfig
init|=
operator|new
name|ThreadLocal
argument_list|<
name|Configuration
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|Configuration
name|initialValue
parameter_list|()
block|{
return|return
operator|new
name|HiveConf
argument_list|(
name|HiveMetaStoreAuthorizer
operator|.
name|class
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|ThreadLocal
argument_list|<
name|HiveMetastoreAuthenticationProvider
argument_list|>
name|tAuthenticator
init|=
operator|new
name|ThreadLocal
argument_list|<
name|HiveMetastoreAuthenticationProvider
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|HiveMetastoreAuthenticationProvider
name|initialValue
parameter_list|()
block|{
try|try
block|{
return|return
operator|(
name|HiveMetastoreAuthenticationProvider
operator|)
name|HiveUtils
operator|.
name|getAuthenticator
argument_list|(
name|tConfig
operator|.
name|get
argument_list|()
argument_list|,
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_METASTORE_AUTHENTICATOR_MANAGER
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|HiveException
name|excp
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Authentication provider instantiation failure"
argument_list|,
name|excp
argument_list|)
throw|;
block|}
block|}
block|}
decl_stmt|;
specifier|public
name|HiveMetaStoreAuthorizer
parameter_list|(
name|Configuration
name|config
parameter_list|)
block|{
name|super
argument_list|(
name|config
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
specifier|final
name|void
name|onEvent
parameter_list|(
name|PreEventContext
name|preEventContext
parameter_list|)
throws|throws
name|MetaException
throws|,
name|NoSuchObjectException
throws|,
name|InvalidOperationException
block|{
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"==> HiveMetaStoreAuthorizer.onEvent(): EventType="
operator|+
name|preEventContext
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|HiveMetaStoreAuthzInfo
name|authzContext
init|=
name|buildAuthzContext
argument_list|(
name|preEventContext
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|skipAuthorization
argument_list|(
name|authzContext
argument_list|)
condition|)
block|{
try|try
block|{
name|HiveConf
name|hiveConf
init|=
operator|new
name|HiveConf
argument_list|(
name|super
operator|.
name|getConf
argument_list|()
argument_list|,
name|HiveConf
operator|.
name|class
argument_list|)
decl_stmt|;
name|HiveAuthorizerFactory
name|authorizerFactory
init|=
name|HiveUtils
operator|.
name|getAuthorizerFactory
argument_list|(
name|hiveConf
argument_list|,
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_AUTHORIZATION_MANAGER
argument_list|)
decl_stmt|;
if|if
condition|(
name|authorizerFactory
operator|!=
literal|null
condition|)
block|{
name|HiveMetastoreAuthenticationProvider
name|authenticator
init|=
name|tAuthenticator
operator|.
name|get
argument_list|()
decl_stmt|;
name|authenticator
operator|.
name|setConf
argument_list|(
name|hiveConf
argument_list|)
expr_stmt|;
name|HiveAuthzSessionContext
operator|.
name|Builder
name|authzContextBuilder
init|=
operator|new
name|HiveAuthzSessionContext
operator|.
name|Builder
argument_list|()
decl_stmt|;
name|authzContextBuilder
operator|.
name|setClientType
argument_list|(
name|HiveAuthzSessionContext
operator|.
name|CLIENT_TYPE
operator|.
name|HIVEMETASTORE
argument_list|)
expr_stmt|;
name|authzContextBuilder
operator|.
name|setSessionString
argument_list|(
literal|"HiveMetaStore"
argument_list|)
expr_stmt|;
name|HiveAuthzSessionContext
name|authzSessionContext
init|=
name|authzContextBuilder
operator|.
name|build
argument_list|()
decl_stmt|;
name|HiveAuthorizer
name|hiveAuthorizer
init|=
name|authorizerFactory
operator|.
name|createHiveAuthorizer
argument_list|(
operator|new
name|HiveMetastoreClientFactoryImpl
argument_list|()
argument_list|,
name|hiveConf
argument_list|,
name|authenticator
argument_list|,
name|authzSessionContext
argument_list|)
decl_stmt|;
name|checkPrivileges
argument_list|(
name|authzContext
argument_list|,
name|hiveAuthorizer
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"HiveMetaStoreAuthorizer.onEvent(): failed"
argument_list|,
name|e
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|MetaException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
throw|;
block|}
block|}
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"<== HiveMetaStoreAuthorizer.onEvent(): EventType="
operator|+
name|preEventContext
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|HiveMetaStoreAuthzInfo
name|buildAuthzContext
parameter_list|(
name|PreEventContext
name|preEventContext
parameter_list|)
throws|throws
name|MetaException
block|{
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"==> HiveMetaStoreAuthorizer.buildAuthzContext(): EventType="
operator|+
name|preEventContext
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|HiveMetaStoreAuthorizableEvent
name|authzEvent
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|preEventContext
operator|!=
literal|null
condition|)
block|{
switch|switch
condition|(
name|preEventContext
operator|.
name|getEventType
argument_list|()
condition|)
block|{
case|case
name|CREATE_DATABASE
case|:
name|authzEvent
operator|=
operator|new
name|CreateDatabaseEvent
argument_list|(
name|preEventContext
argument_list|)
expr_stmt|;
break|break;
case|case
name|ALTER_DATABASE
case|:
name|authzEvent
operator|=
operator|new
name|AlterDatabaseEvent
argument_list|(
name|preEventContext
argument_list|)
expr_stmt|;
break|break;
case|case
name|DROP_DATABASE
case|:
name|authzEvent
operator|=
operator|new
name|DropDatabaseEvent
argument_list|(
name|preEventContext
argument_list|)
expr_stmt|;
break|break;
case|case
name|CREATE_TABLE
case|:
name|authzEvent
operator|=
operator|new
name|CreateTableEvent
argument_list|(
name|preEventContext
argument_list|)
expr_stmt|;
if|if
condition|(
name|isViewOperation
argument_list|(
name|preEventContext
argument_list|)
operator|&&
operator|(
operator|!
name|isSuperUser
argument_list|(
name|getCurrentUser
argument_list|(
name|authzEvent
argument_list|)
argument_list|)
operator|)
condition|)
block|{
throw|throw
operator|new
name|MetaException
argument_list|(
name|getErrorMessage
argument_list|(
literal|"CREATE_VIEW"
argument_list|,
name|getCurrentUser
argument_list|(
name|authzEvent
argument_list|)
argument_list|)
argument_list|)
throw|;
block|}
break|break;
case|case
name|ALTER_TABLE
case|:
name|authzEvent
operator|=
operator|new
name|AlterTableEvent
argument_list|(
name|preEventContext
argument_list|)
expr_stmt|;
if|if
condition|(
name|isViewOperation
argument_list|(
name|preEventContext
argument_list|)
operator|&&
operator|(
operator|!
name|isSuperUser
argument_list|(
name|getCurrentUser
argument_list|(
name|authzEvent
argument_list|)
argument_list|)
operator|)
condition|)
block|{
throw|throw
operator|new
name|MetaException
argument_list|(
name|getErrorMessage
argument_list|(
literal|"ALTER_VIEW"
argument_list|,
name|getCurrentUser
argument_list|(
name|authzEvent
argument_list|)
argument_list|)
argument_list|)
throw|;
block|}
break|break;
case|case
name|DROP_TABLE
case|:
name|authzEvent
operator|=
operator|new
name|DropTableEvent
argument_list|(
name|preEventContext
argument_list|)
expr_stmt|;
if|if
condition|(
name|isViewOperation
argument_list|(
name|preEventContext
argument_list|)
operator|&&
operator|(
operator|!
name|isSuperUser
argument_list|(
name|getCurrentUser
argument_list|(
name|authzEvent
argument_list|)
argument_list|)
operator|)
condition|)
block|{
throw|throw
operator|new
name|MetaException
argument_list|(
name|getErrorMessage
argument_list|(
literal|"DROP_VIEW"
argument_list|,
name|getCurrentUser
argument_list|(
name|authzEvent
argument_list|)
argument_list|)
argument_list|)
throw|;
block|}
break|break;
case|case
name|ADD_PARTITION
case|:
name|authzEvent
operator|=
operator|new
name|AddPartitionEvent
argument_list|(
name|preEventContext
argument_list|)
expr_stmt|;
break|break;
case|case
name|ALTER_PARTITION
case|:
name|authzEvent
operator|=
operator|new
name|AlterPartitionEvent
argument_list|(
name|preEventContext
argument_list|)
expr_stmt|;
break|break;
case|case
name|LOAD_PARTITION_DONE
case|:
name|authzEvent
operator|=
operator|new
name|LoadPartitionDoneEvent
argument_list|(
name|preEventContext
argument_list|)
expr_stmt|;
break|break;
case|case
name|DROP_PARTITION
case|:
name|authzEvent
operator|=
operator|new
name|DropPartitionEvent
argument_list|(
name|preEventContext
argument_list|)
expr_stmt|;
break|break;
case|case
name|AUTHORIZATION_API_CALL
case|:
case|case
name|READ_ISCHEMA
case|:
case|case
name|CREATE_ISCHEMA
case|:
case|case
name|DROP_ISCHEMA
case|:
case|case
name|ALTER_ISCHEMA
case|:
case|case
name|ADD_SCHEMA_VERSION
case|:
case|case
name|ALTER_SCHEMA_VERSION
case|:
case|case
name|DROP_SCHEMA_VERSION
case|:
case|case
name|READ_SCHEMA_VERSION
case|:
case|case
name|CREATE_CATALOG
case|:
case|case
name|ALTER_CATALOG
case|:
case|case
name|DROP_CATALOG
case|:
if|if
condition|(
operator|!
name|isSuperUser
argument_list|(
name|getCurrentUser
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|MetaException
argument_list|(
name|getErrorMessage
argument_list|(
name|preEventContext
argument_list|,
name|getCurrentUser
argument_list|()
argument_list|)
argument_list|)
throw|;
block|}
break|break;
default|default:
break|break;
block|}
block|}
name|HiveMetaStoreAuthzInfo
name|ret
init|=
name|authzEvent
operator|!=
literal|null
condition|?
name|authzEvent
operator|.
name|getAuthzContext
argument_list|()
else|:
literal|null
decl_stmt|;
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"<== HiveMetaStoreAuthorizer.buildAuthzContext(): EventType="
operator|+
name|preEventContext
operator|.
name|getEventType
argument_list|()
operator|+
literal|"; ret="
operator|+
name|ret
argument_list|)
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
name|boolean
name|isSuperUser
parameter_list|(
name|String
name|userName
parameter_list|)
block|{
name|Configuration
name|conf
init|=
name|getConf
argument_list|()
decl_stmt|;
name|String
name|ipAddress
init|=
name|HiveMetaStore
operator|.
name|HMSHandler
operator|.
name|getIPAddress
argument_list|()
decl_stmt|;
return|return
operator|(
name|MetaStoreServerUtils
operator|.
name|checkUserHasHostProxyPrivileges
argument_list|(
name|userName
argument_list|,
name|conf
argument_list|,
name|ipAddress
argument_list|)
operator|)
return|;
block|}
name|boolean
name|isViewOperation
parameter_list|(
name|PreEventContext
name|preEventContext
parameter_list|)
block|{
name|boolean
name|ret
init|=
literal|false
decl_stmt|;
name|PreEventContext
operator|.
name|PreEventType
name|preEventType
init|=
name|preEventContext
operator|.
name|getEventType
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|preEventType
condition|)
block|{
case|case
name|CREATE_TABLE
case|:
name|PreCreateTableEvent
name|preCreateTableEvent
init|=
operator|(
name|PreCreateTableEvent
operator|)
name|preEventContext
decl_stmt|;
name|Table
name|table
init|=
name|preCreateTableEvent
operator|.
name|getTable
argument_list|()
decl_stmt|;
name|ret
operator|=
name|isViewType
argument_list|(
name|table
argument_list|)
expr_stmt|;
break|break;
case|case
name|ALTER_TABLE
case|:
name|PreAlterTableEvent
name|preAlterTableEvent
init|=
operator|(
name|PreAlterTableEvent
operator|)
name|preEventContext
decl_stmt|;
name|Table
name|inTable
init|=
name|preAlterTableEvent
operator|.
name|getOldTable
argument_list|()
decl_stmt|;
name|Table
name|outTable
init|=
name|preAlterTableEvent
operator|.
name|getNewTable
argument_list|()
decl_stmt|;
name|ret
operator|=
operator|(
name|isViewType
argument_list|(
name|inTable
argument_list|)
operator|||
name|isViewType
argument_list|(
name|outTable
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
name|DROP_TABLE
case|:
name|PreDropTableEvent
name|preDropTableEvent
init|=
operator|(
name|PreDropTableEvent
operator|)
name|preEventContext
decl_stmt|;
name|Table
name|droppedTable
init|=
name|preDropTableEvent
operator|.
name|getTable
argument_list|()
decl_stmt|;
name|ret
operator|=
name|isViewType
argument_list|(
name|droppedTable
argument_list|)
expr_stmt|;
break|break;
block|}
return|return
name|ret
return|;
block|}
specifier|private
name|void
name|checkPrivileges
parameter_list|(
specifier|final
name|HiveMetaStoreAuthzInfo
name|authzContext
parameter_list|,
name|HiveAuthorizer
name|authorizer
parameter_list|)
throws|throws
name|MetaException
block|{
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"==> HiveMetaStoreAuthorizer.checkPrivileges(): authzContext="
operator|+
name|authzContext
operator|+
literal|", authorizer="
operator|+
name|authorizer
argument_list|)
expr_stmt|;
block|}
name|HiveOperationType
name|hiveOpType
init|=
name|authzContext
operator|.
name|getOperationType
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|HivePrivilegeObject
argument_list|>
name|inputHObjs
init|=
name|authzContext
operator|.
name|getInputHObjs
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|HivePrivilegeObject
argument_list|>
name|outputHObjs
init|=
name|authzContext
operator|.
name|getOutputHObjs
argument_list|()
decl_stmt|;
name|HiveAuthzContext
name|hiveAuthzContext
init|=
name|authzContext
operator|.
name|getHiveAuthzContext
argument_list|()
decl_stmt|;
try|try
block|{
name|authorizer
operator|.
name|checkPrivileges
argument_list|(
name|hiveOpType
argument_list|,
name|inputHObjs
argument_list|,
name|outputHObjs
argument_list|,
name|hiveAuthzContext
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|MetaException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
throw|;
block|}
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"<== HiveMetaStoreAuthorizer.checkPrivileges(): authzContext="
operator|+
name|authzContext
operator|+
literal|", authorizer="
operator|+
name|authorizer
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|boolean
name|skipAuthorization
parameter_list|(
name|HiveMetaStoreAuthzInfo
name|authzContext
parameter_list|)
block|{
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"==> HiveMetaStoreAuthorizer.skipAuthorization(): authzContext="
operator|+
name|authzContext
argument_list|)
expr_stmt|;
block|}
name|boolean
name|ret
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|authzContext
operator|==
literal|null
condition|)
block|{
name|ret
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|UserGroupInformation
name|ugi
init|=
name|authzContext
operator|.
name|getUGI
argument_list|()
decl_stmt|;
if|if
condition|(
name|ugi
operator|==
literal|null
condition|)
block|{
name|ret
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|ret
operator|=
name|isSuperUser
argument_list|(
name|ugi
operator|.
name|getShortUserName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"<== HiveMetaStoreAuthorizer.skipAuthorization(): authzContext="
operator|+
name|authzContext
operator|+
literal|"; ret="
operator|+
name|ret
argument_list|)
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
specifier|private
name|boolean
name|isViewType
parameter_list|(
name|Table
name|table
parameter_list|)
block|{
name|boolean
name|ret
init|=
literal|false
decl_stmt|;
name|String
name|tableType
init|=
name|table
operator|.
name|getTableType
argument_list|()
decl_stmt|;
if|if
condition|(
name|TableType
operator|.
name|MATERIALIZED_VIEW
operator|.
name|name
argument_list|()
operator|.
name|equals
argument_list|(
name|tableType
argument_list|)
operator|||
name|TableType
operator|.
name|VIRTUAL_VIEW
operator|.
name|name
argument_list|()
operator|.
name|equals
argument_list|(
name|tableType
argument_list|)
condition|)
block|{
name|ret
operator|=
literal|true
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
specifier|private
name|String
name|getErrorMessage
parameter_list|(
name|PreEventContext
name|preEventContext
parameter_list|,
name|String
name|user
parameter_list|)
block|{
name|String
name|err
init|=
literal|"Operation type "
operator|+
name|preEventContext
operator|.
name|getEventType
argument_list|()
operator|.
name|name
argument_list|()
operator|+
literal|" not allowed for user:"
operator|+
name|user
decl_stmt|;
return|return
name|err
return|;
block|}
specifier|private
name|String
name|getErrorMessage
parameter_list|(
name|String
name|eventType
parameter_list|,
name|String
name|user
parameter_list|)
block|{
name|String
name|err
init|=
literal|"Operation type "
operator|+
name|eventType
operator|+
literal|" not allowed for user:"
operator|+
name|user
decl_stmt|;
return|return
name|err
return|;
block|}
specifier|private
name|String
name|getCurrentUser
parameter_list|()
block|{
try|try
block|{
return|return
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
operator|.
name|getShortUserName
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|excp
parameter_list|)
block|{     }
return|return
literal|null
return|;
block|}
specifier|private
name|String
name|getCurrentUser
parameter_list|(
name|HiveMetaStoreAuthorizableEvent
name|authorizableEvent
parameter_list|)
block|{
return|return
name|authorizableEvent
operator|.
name|getAuthzContext
argument_list|()
operator|.
name|getUGI
argument_list|()
operator|.
name|getShortUserName
argument_list|()
return|;
block|}
block|}
end_class

end_unit

