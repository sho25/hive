begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|stats
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|StorageDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|AcidUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|HiveException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Partition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|InputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|OutputFormat
import|;
end_import

begin_comment
comment|/**  * Cover class to make it easier to make modifications on partitions/tables  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|Partish
block|{
specifier|public
specifier|static
name|Partish
name|buildFor
parameter_list|(
name|Table
name|table
parameter_list|)
block|{
return|return
operator|new
name|PTable
argument_list|(
name|table
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Partish
name|buildFor
parameter_list|(
name|Partition
name|part
parameter_list|)
block|{
return|return
operator|new
name|PPart
argument_list|(
name|part
operator|.
name|getTable
argument_list|()
argument_list|,
name|part
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Partish
name|buildFor
parameter_list|(
name|Table
name|table
parameter_list|,
name|Partition
name|part
parameter_list|)
block|{
return|return
operator|new
name|PPart
argument_list|(
name|table
argument_list|,
name|part
argument_list|)
return|;
block|}
comment|// rename
annotation|@
name|Deprecated
specifier|public
specifier|final
name|boolean
name|isAcid
parameter_list|()
block|{
return|return
name|AcidUtils
operator|.
name|isFullAcidTable
argument_list|(
name|getTable
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|abstract
name|Table
name|getTable
parameter_list|()
function_decl|;
specifier|public
specifier|abstract
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getPartParameters
parameter_list|()
function_decl|;
specifier|public
specifier|abstract
name|StorageDescriptor
name|getPartSd
parameter_list|()
function_decl|;
specifier|public
specifier|abstract
name|Object
name|getOutput
parameter_list|()
throws|throws
name|HiveException
function_decl|;
specifier|public
specifier|abstract
name|Partition
name|getPartition
parameter_list|()
function_decl|;
specifier|public
specifier|abstract
name|Class
argument_list|<
name|?
extends|extends
name|InputFormat
argument_list|>
name|getInputFormatClass
parameter_list|()
throws|throws
name|HiveException
function_decl|;
specifier|public
specifier|abstract
name|Class
argument_list|<
name|?
extends|extends
name|OutputFormat
argument_list|>
name|getOutputFormatClass
parameter_list|()
throws|throws
name|HiveException
function_decl|;
specifier|public
specifier|abstract
name|String
name|getLocation
parameter_list|()
function_decl|;
specifier|public
specifier|abstract
name|String
name|getSimpleName
parameter_list|()
function_decl|;
specifier|public
specifier|final
name|String
name|getPartishType
parameter_list|()
block|{
return|return
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
return|;
block|}
specifier|static
class|class
name|PTable
extends|extends
name|Partish
block|{
specifier|private
name|Table
name|table
decl_stmt|;
specifier|public
name|PTable
parameter_list|(
name|Table
name|table
parameter_list|)
block|{
name|this
operator|.
name|table
operator|=
name|table
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Table
name|getTable
parameter_list|()
block|{
return|return
name|table
return|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getPartParameters
parameter_list|()
block|{
return|return
name|table
operator|.
name|getTTable
argument_list|()
operator|.
name|getParameters
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|StorageDescriptor
name|getPartSd
parameter_list|()
block|{
return|return
name|table
operator|.
name|getTTable
argument_list|()
operator|.
name|getSd
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Object
name|getOutput
parameter_list|()
throws|throws
name|HiveException
block|{
return|return
operator|new
name|Table
argument_list|(
name|getTable
argument_list|()
operator|.
name|getTTable
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Partition
name|getPartition
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|Class
argument_list|<
name|?
extends|extends
name|InputFormat
argument_list|>
name|getInputFormatClass
parameter_list|()
block|{
return|return
name|table
operator|.
name|getInputFormatClass
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Class
argument_list|<
name|?
extends|extends
name|OutputFormat
argument_list|>
name|getOutputFormatClass
parameter_list|()
block|{
return|return
name|table
operator|.
name|getOutputFormatClass
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getLocation
parameter_list|()
block|{
return|return
name|table
operator|.
name|getDataLocation
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getSimpleName
parameter_list|()
block|{
return|return
name|String
operator|.
name|format
argument_list|(
literal|"Table %s.%s"
argument_list|,
name|table
operator|.
name|getDbName
argument_list|()
argument_list|,
name|table
operator|.
name|getTableName
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|static
class|class
name|PPart
extends|extends
name|Partish
block|{
specifier|private
name|Table
name|table
decl_stmt|;
specifier|private
name|Partition
name|partition
decl_stmt|;
comment|// FIXME: possibly the distinction between table/partition is not need; however it was like this before....will change it later
specifier|public
name|PPart
parameter_list|(
name|Table
name|table
parameter_list|,
name|Partition
name|partiton
parameter_list|)
block|{
name|this
operator|.
name|table
operator|=
name|table
expr_stmt|;
name|partition
operator|=
name|partiton
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Table
name|getTable
parameter_list|()
block|{
return|return
name|table
return|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getPartParameters
parameter_list|()
block|{
return|return
name|partition
operator|.
name|getTPartition
argument_list|()
operator|.
name|getParameters
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|StorageDescriptor
name|getPartSd
parameter_list|()
block|{
return|return
name|partition
operator|.
name|getTPartition
argument_list|()
operator|.
name|getSd
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Object
name|getOutput
parameter_list|()
throws|throws
name|HiveException
block|{
return|return
operator|new
name|Partition
argument_list|(
name|table
argument_list|,
name|partition
operator|.
name|getTPartition
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Partition
name|getPartition
parameter_list|()
block|{
return|return
name|partition
return|;
block|}
annotation|@
name|Override
specifier|public
name|Class
argument_list|<
name|?
extends|extends
name|InputFormat
argument_list|>
name|getInputFormatClass
parameter_list|()
throws|throws
name|HiveException
block|{
return|return
name|partition
operator|.
name|getInputFormatClass
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Class
argument_list|<
name|?
extends|extends
name|OutputFormat
argument_list|>
name|getOutputFormatClass
parameter_list|()
throws|throws
name|HiveException
block|{
return|return
name|partition
operator|.
name|getOutputFormatClass
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getLocation
parameter_list|()
block|{
return|return
name|partition
operator|.
name|getLocation
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getSimpleName
parameter_list|()
block|{
return|return
name|String
operator|.
name|format
argument_list|(
literal|"Partition %s.%s %s"
argument_list|,
name|table
operator|.
name|getDbName
argument_list|()
argument_list|,
name|table
operator|.
name|getTableName
argument_list|()
argument_list|,
name|partition
operator|.
name|getSpec
argument_list|()
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

