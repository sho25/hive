begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|AuthorizationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|HiveException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Partition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Table
import|;
end_import

begin_comment
comment|/**  * Abstract class that allows authorization of operations on partition-sets.  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|HiveMultiPartitionAuthorizationProviderBase
extends|extends
name|HiveAuthorizationProviderBase
block|{
comment|/**    * Authorization method for partition sets.    * @param table The table in question    * @param partitions An Iterable representing the partition-set    * @param requiredReadPrivileges Read-privileges required    * @param requiredWritePrivileges Write-privileges required    * @throws HiveException    * @throws AuthorizationException    */
specifier|public
specifier|abstract
name|void
name|authorize
parameter_list|(
name|Table
name|table
parameter_list|,
name|Iterable
argument_list|<
name|Partition
argument_list|>
name|partitions
parameter_list|,
name|Privilege
index|[]
name|requiredReadPrivileges
parameter_list|,
name|Privilege
index|[]
name|requiredWritePrivileges
parameter_list|)
throws|throws
name|HiveException
throws|,
name|AuthorizationException
function_decl|;
block|}
end_class

end_unit

