begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|sqlstd
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HiveOperationType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HivePrivilegeObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HivePrivilegeObject
operator|.
name|HivePrivObjectActionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HivePrivilegeObject
operator|.
name|HivePrivilegeObjectType
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
import|;
end_import

begin_comment
comment|/**  * Mapping of operation to its required input and output privileges  */
end_comment

begin_class
specifier|public
class|class
name|Operation2Privilege
block|{
specifier|public
enum|enum
name|IOType
block|{
name|INPUT
block|,
name|OUTPUT
block|}
empty_stmt|;
specifier|private
specifier|static
class|class
name|PrivRequirement
block|{
specifier|private
specifier|final
name|SQLPrivTypeGrant
index|[]
name|reqPrivs
decl_stmt|;
comment|// The following fields specify the criteria on objects for this priv to be required
specifier|private
specifier|final
name|IOType
name|ioType
decl_stmt|;
specifier|private
specifier|final
name|HivePrivObjectActionType
name|actionType
decl_stmt|;
specifier|private
specifier|final
name|HivePrivilegeObjectType
name|objectType
decl_stmt|;
specifier|private
name|PrivRequirement
parameter_list|(
name|SQLPrivTypeGrant
index|[]
name|privs
parameter_list|,
name|IOType
name|ioType
parameter_list|)
block|{
name|this
argument_list|(
name|privs
argument_list|,
name|ioType
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|private
name|PrivRequirement
parameter_list|(
name|SQLPrivTypeGrant
index|[]
name|privs
parameter_list|,
name|IOType
name|ioType
parameter_list|,
name|HivePrivObjectActionType
name|actionType
parameter_list|)
block|{
name|this
argument_list|(
name|privs
argument_list|,
name|ioType
argument_list|,
name|actionType
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|private
name|PrivRequirement
parameter_list|(
name|SQLPrivTypeGrant
index|[]
name|privs
parameter_list|,
name|HivePrivilegeObjectType
name|objectType
parameter_list|)
block|{
name|this
argument_list|(
name|privs
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|objectType
argument_list|)
expr_stmt|;
block|}
specifier|private
name|PrivRequirement
parameter_list|(
name|SQLPrivTypeGrant
index|[]
name|privs
parameter_list|,
name|IOType
name|ioType
parameter_list|,
name|HivePrivObjectActionType
name|actionType
parameter_list|,
name|HivePrivilegeObjectType
name|objectType
parameter_list|)
block|{
name|this
operator|.
name|reqPrivs
operator|=
name|privs
expr_stmt|;
name|this
operator|.
name|ioType
operator|=
name|ioType
expr_stmt|;
name|this
operator|.
name|actionType
operator|=
name|actionType
expr_stmt|;
name|this
operator|.
name|objectType
operator|=
name|objectType
expr_stmt|;
block|}
comment|/**      * Utility function that takes a input and output privilege objects      * @param inGrant      * @param outGrant      * @return      */
specifier|static
name|List
argument_list|<
name|PrivRequirement
argument_list|>
name|newIOPrivRequirement
parameter_list|(
name|SQLPrivTypeGrant
index|[]
name|inGrants
parameter_list|,
name|SQLPrivTypeGrant
index|[]
name|outGrants
parameter_list|)
block|{
name|List
argument_list|<
name|PrivRequirement
argument_list|>
name|privReqs
init|=
operator|new
name|ArrayList
argument_list|<
name|PrivRequirement
argument_list|>
argument_list|()
decl_stmt|;
name|privReqs
operator|.
name|add
argument_list|(
operator|new
name|PrivRequirement
argument_list|(
name|inGrants
argument_list|,
name|IOType
operator|.
name|INPUT
argument_list|)
argument_list|)
expr_stmt|;
name|privReqs
operator|.
name|add
argument_list|(
operator|new
name|PrivRequirement
argument_list|(
name|outGrants
argument_list|,
name|IOType
operator|.
name|OUTPUT
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|privReqs
return|;
block|}
comment|/**      * Utility function that converts PrivRequirement array into list      * @param privs      * @return      */
specifier|static
name|List
argument_list|<
name|PrivRequirement
argument_list|>
name|newPrivRequirementList
parameter_list|(
name|PrivRequirement
modifier|...
name|privs
parameter_list|)
block|{
return|return
operator|new
name|ArrayList
argument_list|<
name|PrivRequirement
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|privs
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|SQLPrivTypeGrant
index|[]
name|getReqPrivs
parameter_list|()
block|{
return|return
name|reqPrivs
return|;
block|}
specifier|private
name|IOType
name|getIOType
parameter_list|()
block|{
return|return
name|ioType
return|;
block|}
specifier|private
name|HivePrivObjectActionType
name|getActionType
parameter_list|()
block|{
return|return
name|actionType
return|;
block|}
specifier|public
name|HivePrivilegeObjectType
name|getObjectType
parameter_list|()
block|{
return|return
name|objectType
return|;
block|}
block|}
specifier|private
specifier|static
name|Map
argument_list|<
name|HiveOperationType
argument_list|,
name|List
argument_list|<
name|PrivRequirement
argument_list|>
argument_list|>
name|op2Priv
decl_stmt|;
specifier|private
specifier|static
name|List
argument_list|<
name|HiveOperationType
argument_list|>
name|adminPrivOps
decl_stmt|;
specifier|private
specifier|static
name|SQLPrivTypeGrant
index|[]
name|OWNER_PRIV_AR
init|=
name|arr
argument_list|(
name|SQLPrivTypeGrant
operator|.
name|OWNER_PRIV
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|SQLPrivTypeGrant
index|[]
name|SEL_NOGRANT_AR
init|=
name|arr
argument_list|(
name|SQLPrivTypeGrant
operator|.
name|SELECT_NOGRANT
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|SQLPrivTypeGrant
index|[]
name|SEL_GRANT_AR
init|=
name|arr
argument_list|(
name|SQLPrivTypeGrant
operator|.
name|SELECT_WGRANT
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|SQLPrivTypeGrant
index|[]
name|ADMIN_PRIV_AR
init|=
name|arr
argument_list|(
name|SQLPrivTypeGrant
operator|.
name|ADMIN_PRIV
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|SQLPrivTypeGrant
index|[]
name|INS_NOGRANT_AR
init|=
name|arr
argument_list|(
name|SQLPrivTypeGrant
operator|.
name|INSERT_NOGRANT
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|SQLPrivTypeGrant
index|[]
name|DEL_NOGRANT_AR
init|=
name|arr
argument_list|(
name|SQLPrivTypeGrant
operator|.
name|DELETE_NOGRANT
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|SQLPrivTypeGrant
index|[]
name|UPD_NOGRANT_AR
init|=
name|arr
argument_list|(
name|SQLPrivTypeGrant
operator|.
name|UPDATE_NOGRANT
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|SQLPrivTypeGrant
index|[]
name|OWNER_INS_SEL_DEL_NOGRANT_AR
init|=
name|arr
argument_list|(
name|SQLPrivTypeGrant
operator|.
name|OWNER_PRIV
argument_list|,
name|SQLPrivTypeGrant
operator|.
name|INSERT_NOGRANT
argument_list|,
name|SQLPrivTypeGrant
operator|.
name|DELETE_NOGRANT
argument_list|,
name|SQLPrivTypeGrant
operator|.
name|SELECT_NOGRANT
argument_list|)
decl_stmt|;
static|static
block|{
name|adminPrivOps
operator|=
operator|new
name|ArrayList
argument_list|<
name|HiveOperationType
argument_list|>
argument_list|()
expr_stmt|;
name|op2Priv
operator|=
operator|new
name|HashMap
argument_list|<
name|HiveOperationType
argument_list|,
name|List
argument_list|<
name|PrivRequirement
argument_list|>
argument_list|>
argument_list|()
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|EXPLAIN
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|SEL_NOGRANT_AR
argument_list|,
name|SEL_NOGRANT_AR
argument_list|)
argument_list|)
expr_stmt|;
comment|//??
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|CREATEDATABASE
argument_list|,
name|PrivRequirement
operator|.
name|newPrivRequirementList
argument_list|(
operator|new
name|PrivRequirement
argument_list|(
name|OWNER_INS_SEL_DEL_NOGRANT_AR
argument_list|,
name|HivePrivilegeObjectType
operator|.
name|DFS_URI
argument_list|)
argument_list|,
operator|new
name|PrivRequirement
argument_list|(
name|OWNER_INS_SEL_DEL_NOGRANT_AR
argument_list|,
name|HivePrivilegeObjectType
operator|.
name|LOCAL_URI
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|DROPDATABASE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
comment|// this should be database usage privilege once it is supported
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|SWITCHDATABASE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// lock operations not controlled for now
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|LOCKDB
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|UNLOCKDB
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|DROPTABLE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|DESCTABLE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|SEL_NOGRANT_AR
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|SHOWPARTITIONS
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|SEL_NOGRANT_AR
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|DESCFUNCTION
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// meta store check command - equivalent to add partition command
comment|// no input objects are passed to it currently, but keeping admin priv
comment|// requirement on inputs just in case some input object like file
comment|// uri is added later
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|MSCK
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|ADMIN_PRIV_AR
argument_list|,
name|INS_NOGRANT_AR
argument_list|)
argument_list|)
expr_stmt|;
comment|//alter table commands require table ownership
comment|// There should not be output object, but just in case the table is incorrectly added
comment|// to output instead of input, adding owner requirement on output will catch that as well
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_ADDCOLS
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_REPLACECOLS
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_RENAMECOL
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_RENAMEPART
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_RENAME
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_UPDATETABLESTATS
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_UPDATEPARTSTATS
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_TOUCH
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_ARCHIVE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_UNARCHIVE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_PROPERTIES
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_SERIALIZER
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_PARTCOLTYPE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERPARTITION_SERIALIZER
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_SERDEPROPERTIES
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERPARTITION_SERDEPROPERTIES
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_CLUSTER_SORT
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_BUCKETNUM
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERPARTITION_BUCKETNUM
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_PROTECTMODE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERPARTITION_PROTECTMODE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_FILEFORMAT
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERPARTITION_FILEFORMAT
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_LOCATION
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_INS_SEL_DEL_NOGRANT_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERPARTITION_LOCATION
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_INS_SEL_DEL_NOGRANT_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_MERGEFILES
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERPARTITION_MERGEFILES
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_SKEWED
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTBLPART_SKEWED_LOCATION
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_INS_SEL_DEL_NOGRANT_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_COMPACT
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|TRUNCATETABLE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_DROPCONSTRAINT
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_ADDCONSTRAINT
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
comment|//table ownership for create/drop/alter index
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|CREATEINDEX
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_INS_SEL_DEL_NOGRANT_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|DROPINDEX
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERINDEX_REBUILD
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERINDEX_PROPS
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
comment|// require view ownership for alter/drop view
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERVIEW_PROPERTIES
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|DROPVIEW_PROPERTIES
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERVIEW_RENAME
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERVIEW_AS
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|DROPVIEW
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|DROP_MATERIALIZED_VIEW
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|OWNER_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ANALYZE_TABLE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|arr
argument_list|(
name|SQLPrivTypeGrant
operator|.
name|SELECT_NOGRANT
argument_list|,
name|SQLPrivTypeGrant
operator|.
name|INSERT_NOGRANT
argument_list|)
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|CACHE_METADATA
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|arr
argument_list|(
name|SQLPrivTypeGrant
operator|.
name|SELECT_NOGRANT
argument_list|,
name|SQLPrivTypeGrant
operator|.
name|INSERT_NOGRANT
argument_list|)
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|SHOWDATABASES
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|SHOWTABLES
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// operations that require insert/delete privileges
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_DROPPARTS
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|DEL_NOGRANT_AR
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// in alter-table-add-partition, the table is output, and location is input
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_ADDPARTS
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_INS_SEL_DEL_NOGRANT_AR
argument_list|,
name|INS_NOGRANT_AR
argument_list|)
argument_list|)
expr_stmt|;
comment|// select with grant for exporting contents
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|EXPORT
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|SEL_GRANT_AR
argument_list|,
name|OWNER_INS_SEL_DEL_NOGRANT_AR
argument_list|)
argument_list|)
expr_stmt|;
comment|// For import statement, require uri rwx+owner privileges on input uri, and
comment|// necessary privileges on the output table and database
comment|// NOTE : privileges are only checked if the object of that type is marked as part of ReadEntity or WriteEntity
comment|// So, if a table is present, Import will mark a table as a WriteEntity, and we'll authorize for that, and if not present,
comment|// Import will mark the parent db as a WriteEntity, thus ensuring that we check for table creation privileges.
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|IMPORT
argument_list|,
name|PrivRequirement
operator|.
name|newPrivRequirementList
argument_list|(
operator|new
name|PrivRequirement
argument_list|(
name|OWNER_INS_SEL_DEL_NOGRANT_AR
argument_list|,
name|IOType
operator|.
name|INPUT
argument_list|)
argument_list|,
operator|new
name|PrivRequirement
argument_list|(
name|arr
argument_list|(
name|SQLPrivTypeGrant
operator|.
name|INSERT_NOGRANT
argument_list|,
name|SQLPrivTypeGrant
operator|.
name|DELETE_NOGRANT
argument_list|)
argument_list|,
name|IOType
operator|.
name|OUTPUT
argument_list|,
literal|null
argument_list|,
name|HivePrivilegeObjectType
operator|.
name|TABLE_OR_VIEW
argument_list|)
argument_list|,
operator|new
name|PrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|IOType
operator|.
name|OUTPUT
argument_list|,
literal|null
argument_list|,
name|HivePrivilegeObjectType
operator|.
name|DATABASE
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Setting REPL DUMP and REPL LOAD as all requiring ADMIN privileges.
comment|// We might wind up loosening this in the future, but right now, we do not want
comment|// to do individual object based checks on every object possible, and thus, asking
comment|// for a broad privilege such as this is the best route forward. REPL STATUS
comment|// should use privileges similar to DESCRIBE DB/TABLE, and so, it asks for no
comment|// output privileges, and asks for select-no-grant on input.
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|REPLDUMP
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|ADMIN_PRIV_AR
argument_list|,
name|ADMIN_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|REPLLOAD
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|ADMIN_PRIV_AR
argument_list|,
name|ADMIN_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|REPLSTATUS
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|SEL_NOGRANT_AR
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|adminPrivOps
operator|.
name|add
argument_list|(
name|HiveOperationType
operator|.
name|REPLDUMP
argument_list|)
expr_stmt|;
name|adminPrivOps
operator|.
name|add
argument_list|(
name|HiveOperationType
operator|.
name|REPLLOAD
argument_list|)
expr_stmt|;
name|adminPrivOps
operator|.
name|add
argument_list|(
name|HiveOperationType
operator|.
name|KILL_QUERY
argument_list|)
expr_stmt|;
name|adminPrivOps
operator|.
name|add
argument_list|(
name|HiveOperationType
operator|.
name|CREATE_RESOURCEPLAN
argument_list|)
expr_stmt|;
name|adminPrivOps
operator|.
name|add
argument_list|(
name|HiveOperationType
operator|.
name|ALTER_RESOURCEPLAN
argument_list|)
expr_stmt|;
name|adminPrivOps
operator|.
name|add
argument_list|(
name|HiveOperationType
operator|.
name|DROP_RESOURCEPLAN
argument_list|)
expr_stmt|;
name|adminPrivOps
operator|.
name|add
argument_list|(
name|HiveOperationType
operator|.
name|SHOW_RESOURCEPLAN
argument_list|)
expr_stmt|;
comment|// operations require select priv
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|SHOWCOLUMNS
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|SEL_NOGRANT_AR
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|SHOW_TABLESTATUS
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|SEL_NOGRANT_AR
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|SHOW_TBLPROPERTIES
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|SEL_NOGRANT_AR
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|CREATETABLE_AS_SELECT
argument_list|,
name|PrivRequirement
operator|.
name|newPrivRequirementList
argument_list|(
operator|new
name|PrivRequirement
argument_list|(
name|SEL_NOGRANT_AR
argument_list|,
name|IOType
operator|.
name|INPUT
argument_list|)
argument_list|,
operator|new
name|PrivRequirement
argument_list|(
name|OWNER_INS_SEL_DEL_NOGRANT_AR
argument_list|,
name|HivePrivilegeObjectType
operator|.
name|DFS_URI
argument_list|)
argument_list|,
operator|new
name|PrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|HivePrivilegeObjectType
operator|.
name|DATABASE
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// QUERY,LOAD op can contain an insert& overwrite,
comment|// require delete privilege if this is an insert-overwrite
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|QUERY
argument_list|,
name|arr
argument_list|(
operator|new
name|PrivRequirement
argument_list|(
name|SEL_NOGRANT_AR
argument_list|,
name|IOType
operator|.
name|INPUT
argument_list|)
argument_list|,
operator|new
name|PrivRequirement
argument_list|(
name|INS_NOGRANT_AR
argument_list|,
name|IOType
operator|.
name|OUTPUT
argument_list|,
name|HivePrivObjectActionType
operator|.
name|INSERT
argument_list|)
argument_list|,
operator|new
name|PrivRequirement
argument_list|(
name|arr
argument_list|(
name|SQLPrivTypeGrant
operator|.
name|INSERT_NOGRANT
argument_list|,
name|SQLPrivTypeGrant
operator|.
name|DELETE_NOGRANT
argument_list|)
argument_list|,
name|IOType
operator|.
name|OUTPUT
argument_list|,
name|HivePrivObjectActionType
operator|.
name|INSERT_OVERWRITE
argument_list|)
argument_list|,
operator|new
name|PrivRequirement
argument_list|(
name|DEL_NOGRANT_AR
argument_list|,
name|IOType
operator|.
name|OUTPUT
argument_list|,
name|HivePrivObjectActionType
operator|.
name|DELETE
argument_list|)
argument_list|,
operator|new
name|PrivRequirement
argument_list|(
name|UPD_NOGRANT_AR
argument_list|,
name|IOType
operator|.
name|OUTPUT
argument_list|,
name|HivePrivObjectActionType
operator|.
name|UPDATE
argument_list|)
argument_list|,
operator|new
name|PrivRequirement
argument_list|(
name|INS_NOGRANT_AR
argument_list|,
name|IOType
operator|.
name|OUTPUT
argument_list|,
name|HivePrivObjectActionType
operator|.
name|OTHER
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|LOAD
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|OWNER_INS_SEL_DEL_NOGRANT_AR
argument_list|,
name|arr
argument_list|(
name|SQLPrivTypeGrant
operator|.
name|INSERT_NOGRANT
argument_list|,
name|SQLPrivTypeGrant
operator|.
name|DELETE_NOGRANT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// show create table is more sensitive information, includes table properties etc
comment|// for now require select WITH GRANT
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|SHOW_CREATETABLE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|SEL_GRANT_AR
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|SHOW_CREATEDATABASE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|SEL_GRANT_AR
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// for now allow only create-view with 'select with grant'
comment|// the owner will also have select with grant privileges on new view
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|CREATEVIEW
argument_list|,
name|PrivRequirement
operator|.
name|newPrivRequirementList
argument_list|(
operator|new
name|PrivRequirement
argument_list|(
name|SEL_GRANT_AR
argument_list|,
name|IOType
operator|.
name|INPUT
argument_list|)
argument_list|,
operator|new
name|PrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|HivePrivilegeObjectType
operator|.
name|DATABASE
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|CREATE_MATERIALIZED_VIEW
argument_list|,
name|PrivRequirement
operator|.
name|newPrivRequirementList
argument_list|(
operator|new
name|PrivRequirement
argument_list|(
name|SEL_GRANT_AR
argument_list|,
name|IOType
operator|.
name|INPUT
argument_list|)
argument_list|,
operator|new
name|PrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|HivePrivilegeObjectType
operator|.
name|DATABASE
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|SHOWFUNCTIONS
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|SHOWINDEXES
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|SHOWLOCKS
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|CREATEFUNCTION
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
name|ADMIN_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|DROPFUNCTION
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
name|ADMIN_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|RELOADFUNCTION
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|CREATEMACRO
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
name|ADMIN_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|DROPMACRO
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
name|ADMIN_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|SHOW_COMPACTIONS
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|SHOW_TRANSACTIONS
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|SHOWCONF
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|SHOWVIEWS
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|LOCKTABLE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|UNLOCKTABLE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// require db ownership, if there is a file require SELECT , INSERT, and DELETE
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|CREATETABLE
argument_list|,
name|PrivRequirement
operator|.
name|newPrivRequirementList
argument_list|(
operator|new
name|PrivRequirement
argument_list|(
name|OWNER_INS_SEL_DEL_NOGRANT_AR
argument_list|,
name|IOType
operator|.
name|INPUT
argument_list|)
argument_list|,
operator|new
name|PrivRequirement
argument_list|(
name|OWNER_PRIV_AR
argument_list|,
name|HivePrivilegeObjectType
operator|.
name|DATABASE
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERDATABASE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
name|ADMIN_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERDATABASE_OWNER
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
name|ADMIN_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERDATABASE_LOCATION
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
name|ADMIN_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|DESCDATABASE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|DFS
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|ADMIN_PRIV_AR
argument_list|,
name|ADMIN_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|RESET
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|COMPILE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|ADMIN_PRIV_AR
argument_list|,
name|ADMIN_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ADD
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|ADMIN_PRIV_AR
argument_list|,
name|ADMIN_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|DELETE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|ADMIN_PRIV_AR
argument_list|,
name|ADMIN_PRIV_AR
argument_list|)
argument_list|)
expr_stmt|;
comment|// set command is currently not authorized through the API
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|SET
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// The following actions are authorized through SQLStdHiveAccessController,
comment|// and it is not using this privilege mapping, but it might make sense to move it here
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|CREATEROLE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|DROPROLE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|GRANT_PRIVILEGE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|REVOKE_PRIVILEGE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|SHOW_GRANT
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|GRANT_ROLE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|REVOKE_ROLE
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|SHOW_ROLES
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|SHOW_ROLE_GRANT
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|SHOW_ROLE_PRINCIPALS
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|GET_CATALOGS
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|GET_SCHEMAS
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|GET_TABLES
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|GET_FUNCTIONS
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|GET_TABLETYPES
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|GET_TYPEINFO
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|GET_COLUMNS
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|SEL_NOGRANT_AR
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|START_TRANSACTION
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|COMMIT
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ROLLBACK
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|SET_AUTOCOMMIT
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// For alter table exchange partition, we need select& delete on input& insert on output
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTERTABLE_EXCHANGEPARTITION
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
name|arr
argument_list|(
name|SQLPrivTypeGrant
operator|.
name|SELECT_NOGRANT
argument_list|,
name|SQLPrivTypeGrant
operator|.
name|DELETE_NOGRANT
argument_list|)
argument_list|,
name|INS_NOGRANT_AR
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ABORT_TRANSACTIONS
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// Handled via adminPrivOps (see above).
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|KILL_QUERY
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|CREATE_RESOURCEPLAN
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|ALTER_RESOURCEPLAN
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|DROP_RESOURCEPLAN
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|op2Priv
operator|.
name|put
argument_list|(
name|HiveOperationType
operator|.
name|SHOW_RESOURCEPLAN
argument_list|,
name|PrivRequirement
operator|.
name|newIOPrivRequirement
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Convenience method so that creation of this array in PrivRequirement constructor    * is not too verbose    *    * @param grantList    * @return grantList    */
specifier|private
specifier|static
name|SQLPrivTypeGrant
index|[]
name|arr
parameter_list|(
name|SQLPrivTypeGrant
modifier|...
name|grantList
parameter_list|)
block|{
return|return
name|grantList
return|;
block|}
comment|/**    * Convenience method so that creation of list of PrivRequirement is not too verbose    * @param privReqList    * @return    */
specifier|private
specifier|static
name|List
argument_list|<
name|PrivRequirement
argument_list|>
name|arr
parameter_list|(
name|PrivRequirement
modifier|...
name|privReqList
parameter_list|)
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|privReqList
argument_list|)
return|;
block|}
comment|/**    * Get the privileges required for this operation (hiveOpType) on hive object (hObj) when its    * IOType is ioType. Looks at the action type in hObj to find privileges that are applicable    * to that action.    *    * @param hiveOpType    * @param hObj    * @param ioType    * @return    */
specifier|public
specifier|static
name|RequiredPrivileges
name|getRequiredPrivs
parameter_list|(
name|HiveOperationType
name|hiveOpType
parameter_list|,
name|HivePrivilegeObject
name|hObj
parameter_list|,
name|IOType
name|ioType
parameter_list|)
block|{
name|List
argument_list|<
name|PrivRequirement
argument_list|>
name|opPrivs
init|=
name|op2Priv
operator|.
name|get
argument_list|(
name|hiveOpType
argument_list|)
decl_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|opPrivs
argument_list|,
literal|"Privileges for "
operator|+
name|hiveOpType
operator|+
literal|" are null"
argument_list|)
expr_stmt|;
name|RequiredPrivileges
name|reqPrivs
init|=
operator|new
name|RequiredPrivileges
argument_list|()
decl_stmt|;
comment|// Find the PrivRequirements that match on IOType, ActionType, and HivePrivilegeObjectType add
comment|// the privilege required to reqPrivs
for|for
control|(
name|PrivRequirement
name|opPriv
range|:
name|opPrivs
control|)
block|{
if|if
condition|(
name|opPriv
operator|.
name|getIOType
argument_list|()
operator|!=
literal|null
operator|&&
name|opPriv
operator|.
name|getIOType
argument_list|()
operator|!=
name|ioType
condition|)
block|{
continue|continue;
block|}
if|if
condition|(
name|opPriv
operator|.
name|getActionType
argument_list|()
operator|!=
literal|null
operator|&&
name|opPriv
operator|.
name|getActionType
argument_list|()
operator|!=
name|hObj
operator|.
name|getActionType
argument_list|()
condition|)
block|{
continue|continue;
block|}
if|if
condition|(
name|opPriv
operator|.
name|getObjectType
argument_list|()
operator|!=
literal|null
operator|&&
name|opPriv
operator|.
name|getObjectType
argument_list|()
operator|!=
name|hObj
operator|.
name|getType
argument_list|()
condition|)
block|{
continue|continue;
block|}
name|reqPrivs
operator|.
name|addAll
argument_list|(
name|opPriv
operator|.
name|getReqPrivs
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|reqPrivs
return|;
block|}
comment|/**    * Some operations are tagged as requiring admin privileges, ignoring any object that    * might be checked on it. This check is run in those cases.    *    * @param hiveOpType    * @return    */
specifier|public
specifier|static
name|boolean
name|isAdminPrivOperation
parameter_list|(
name|HiveOperationType
name|hiveOpType
parameter_list|)
block|{
return|return
name|adminPrivOps
operator|.
name|contains
argument_list|(
name|hiveOpType
argument_list|)
return|;
block|}
comment|// for unit tests
specifier|public
specifier|static
name|Set
argument_list|<
name|HiveOperationType
argument_list|>
name|getOperationTypes
parameter_list|()
block|{
return|return
name|op2Priv
operator|.
name|keySet
argument_list|()
return|;
block|}
block|}
end_class

end_unit

