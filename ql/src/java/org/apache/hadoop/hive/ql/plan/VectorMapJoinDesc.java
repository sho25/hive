begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
package|;
end_package

begin_comment
comment|/**  * VectorGroupByDesc.  *  * Extra parameters beyond MapJoinDesc just for the vector map join operators.  *  * We don't extend MapJoinDesc because the base OperatorDesc doesn't support  * clone and adding it is a lot work for little gain.  */
end_comment

begin_class
specifier|public
class|class
name|VectorMapJoinDesc
extends|extends
name|AbstractVectorDesc
block|{
specifier|private
specifier|static
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|public
specifier|static
enum|enum
name|HashTableImplementationType
block|{
name|NONE
block|,
name|OPTIMIZED
block|,
name|FAST
block|}
specifier|public
specifier|static
enum|enum
name|HashTableKind
block|{
name|NONE
block|,
name|HASH_SET
block|,
name|HASH_MULTISET
block|,
name|HASH_MAP
block|}
specifier|public
specifier|static
enum|enum
name|HashTableKeyType
block|{
name|NONE
block|,
name|BOOLEAN
block|,
name|BYTE
block|,
name|SHORT
block|,
name|INT
block|,
name|LONG
block|,
name|STRING
block|,
name|MULTI_KEY
block|}
specifier|private
name|HashTableImplementationType
name|hashTableImplementationType
decl_stmt|;
specifier|private
name|HashTableKind
name|hashTableKind
decl_stmt|;
specifier|private
name|HashTableKeyType
name|hashTableKeyType
decl_stmt|;
specifier|private
name|boolean
name|minMaxEnabled
decl_stmt|;
specifier|public
name|VectorMapJoinDesc
parameter_list|()
block|{
name|hashTableImplementationType
operator|=
name|HashTableImplementationType
operator|.
name|NONE
expr_stmt|;
name|hashTableKind
operator|=
name|HashTableKind
operator|.
name|NONE
expr_stmt|;
name|hashTableKeyType
operator|=
name|HashTableKeyType
operator|.
name|NONE
expr_stmt|;
name|minMaxEnabled
operator|=
literal|false
expr_stmt|;
block|}
specifier|public
name|VectorMapJoinDesc
parameter_list|(
name|VectorMapJoinDesc
name|clone
parameter_list|)
block|{
name|this
operator|.
name|hashTableImplementationType
operator|=
name|clone
operator|.
name|hashTableImplementationType
expr_stmt|;
name|this
operator|.
name|hashTableKind
operator|=
name|clone
operator|.
name|hashTableKind
expr_stmt|;
name|this
operator|.
name|hashTableKeyType
operator|=
name|clone
operator|.
name|hashTableKeyType
expr_stmt|;
name|this
operator|.
name|minMaxEnabled
operator|=
name|clone
operator|.
name|minMaxEnabled
expr_stmt|;
block|}
specifier|public
name|HashTableImplementationType
name|hashTableImplementationType
parameter_list|()
block|{
return|return
name|hashTableImplementationType
return|;
block|}
specifier|public
name|void
name|setHashTableImplementationType
parameter_list|(
name|HashTableImplementationType
name|hashTableImplementationType
parameter_list|)
block|{
name|this
operator|.
name|hashTableImplementationType
operator|=
name|hashTableImplementationType
expr_stmt|;
block|}
specifier|public
name|HashTableKind
name|hashTableKind
parameter_list|()
block|{
return|return
name|hashTableKind
return|;
block|}
specifier|public
name|void
name|setHashTableKind
parameter_list|(
name|HashTableKind
name|hashTableKind
parameter_list|)
block|{
name|this
operator|.
name|hashTableKind
operator|=
name|hashTableKind
expr_stmt|;
block|}
specifier|public
name|HashTableKeyType
name|hashTableKeyType
parameter_list|()
block|{
return|return
name|hashTableKeyType
return|;
block|}
specifier|public
name|void
name|setHashTableKeyType
parameter_list|(
name|HashTableKeyType
name|hashTableKeyType
parameter_list|)
block|{
name|this
operator|.
name|hashTableKeyType
operator|=
name|hashTableKeyType
expr_stmt|;
block|}
specifier|public
name|boolean
name|minMaxEnabled
parameter_list|()
block|{
return|return
name|minMaxEnabled
return|;
block|}
specifier|public
name|void
name|setMinMaxEnabled
parameter_list|(
name|boolean
name|minMaxEnabled
parameter_list|)
block|{
name|this
operator|.
name|minMaxEnabled
operator|=
name|minMaxEnabled
expr_stmt|;
block|}
block|}
end_class

end_unit

