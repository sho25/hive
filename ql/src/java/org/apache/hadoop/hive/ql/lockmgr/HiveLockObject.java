begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|lockmgr
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Partition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Table
import|;
end_import

begin_class
specifier|public
class|class
name|HiveLockObject
block|{
comment|/**    * The table.    */
specifier|private
name|Table
name|t
decl_stmt|;
comment|/**    * The partition. This is null for a non partitioned table.    */
specifier|private
name|Partition
name|p
decl_stmt|;
comment|/* user supplied data for that object */
specifier|private
name|String
name|data
decl_stmt|;
specifier|public
name|HiveLockObject
parameter_list|()
block|{
name|this
operator|.
name|t
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|p
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|data
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|HiveLockObject
parameter_list|(
name|Table
name|t
parameter_list|,
name|String
name|data
parameter_list|)
block|{
name|this
operator|.
name|t
operator|=
name|t
expr_stmt|;
name|this
operator|.
name|p
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|data
operator|=
name|data
expr_stmt|;
block|}
specifier|public
name|HiveLockObject
parameter_list|(
name|Partition
name|p
parameter_list|,
name|String
name|data
parameter_list|)
block|{
name|this
operator|.
name|t
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|p
operator|=
name|p
expr_stmt|;
name|this
operator|.
name|data
operator|=
name|data
expr_stmt|;
block|}
specifier|public
name|Table
name|getTable
parameter_list|()
block|{
return|return
name|t
return|;
block|}
specifier|public
name|void
name|setTable
parameter_list|(
name|Table
name|t
parameter_list|)
block|{
name|this
operator|.
name|t
operator|=
name|t
expr_stmt|;
block|}
specifier|public
name|Partition
name|getPartition
parameter_list|()
block|{
return|return
name|p
return|;
block|}
specifier|public
name|void
name|setPartition
parameter_list|(
name|Partition
name|p
parameter_list|)
block|{
name|this
operator|.
name|p
operator|=
name|p
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
if|if
condition|(
name|t
operator|!=
literal|null
condition|)
block|{
return|return
name|t
operator|.
name|getCompleteName
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|p
operator|.
name|getCompleteName
argument_list|()
return|;
block|}
block|}
specifier|public
name|String
name|getData
parameter_list|()
block|{
return|return
name|data
return|;
block|}
specifier|public
name|void
name|setData
parameter_list|(
name|String
name|data
parameter_list|)
block|{
name|this
operator|.
name|data
operator|=
name|data
expr_stmt|;
block|}
block|}
end_class

end_unit

