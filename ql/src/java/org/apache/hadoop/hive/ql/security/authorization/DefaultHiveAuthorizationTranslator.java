begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|Utilities
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|HiveException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|PrincipalDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|PrivilegeDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|PrivilegeObjectDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HiveAuthorizationTranslator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HivePrincipal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HivePrivilege
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HivePrivilegeObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HivePrivilegeObject
operator|.
name|HivePrivilegeObjectType
import|;
end_import

begin_comment
comment|/**  * Default implementation of HiveAuthorizationTranslator  */
end_comment

begin_class
specifier|public
class|class
name|DefaultHiveAuthorizationTranslator
implements|implements
name|HiveAuthorizationTranslator
block|{
annotation|@
name|Override
specifier|public
name|HivePrincipal
name|getHivePrincipal
parameter_list|(
name|PrincipalDesc
name|principal
parameter_list|)
throws|throws
name|HiveException
block|{
if|if
condition|(
name|principal
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
return|return
name|AuthorizationUtils
operator|.
name|getHivePrincipal
argument_list|(
name|principal
operator|.
name|getName
argument_list|()
argument_list|,
name|principal
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HivePrivilege
name|getHivePrivilege
parameter_list|(
name|PrivilegeDesc
name|privilege
parameter_list|)
block|{
name|Privilege
name|priv
init|=
name|privilege
operator|.
name|getPrivilege
argument_list|()
decl_stmt|;
return|return
operator|new
name|HivePrivilege
argument_list|(
name|priv
operator|.
name|toString
argument_list|()
argument_list|,
name|privilege
operator|.
name|getColumns
argument_list|()
argument_list|,
name|priv
operator|.
name|getScopeList
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HivePrivilegeObject
name|getHivePrivilegeObject
parameter_list|(
name|PrivilegeObjectDesc
name|privSubjectDesc
parameter_list|)
throws|throws
name|HiveException
block|{
comment|// null means ALL for show grants, GLOBAL for grant/revoke
name|HivePrivilegeObjectType
name|objectType
init|=
literal|null
decl_stmt|;
name|String
index|[]
name|dbTable
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|partSpec
init|=
literal|null
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|columns
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|privSubjectDesc
operator|==
literal|null
condition|)
block|{
name|dbTable
operator|=
operator|new
name|String
index|[]
block|{
literal|null
block|,
literal|null
block|}
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|privSubjectDesc
operator|.
name|getTable
argument_list|()
condition|)
block|{
name|dbTable
operator|=
name|Utilities
operator|.
name|getDbTableName
argument_list|(
name|privSubjectDesc
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|dbTable
operator|=
operator|new
name|String
index|[]
block|{
name|privSubjectDesc
operator|.
name|getObject
argument_list|()
block|,
literal|null
block|}
expr_stmt|;
block|}
if|if
condition|(
name|privSubjectDesc
operator|.
name|getPartSpec
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|partSpec
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|(
name|privSubjectDesc
operator|.
name|getPartSpec
argument_list|()
operator|.
name|values
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|columns
operator|=
name|privSubjectDesc
operator|.
name|getColumns
argument_list|()
expr_stmt|;
name|objectType
operator|=
name|AuthorizationUtils
operator|.
name|getPrivObjectType
argument_list|(
name|privSubjectDesc
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|HivePrivilegeObject
argument_list|(
name|objectType
argument_list|,
name|dbTable
index|[
literal|0
index|]
argument_list|,
name|dbTable
index|[
literal|1
index|]
argument_list|,
name|partSpec
argument_list|,
name|columns
argument_list|,
literal|null
argument_list|)
return|;
block|}
block|}
end_class

end_unit

