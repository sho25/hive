begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|sqlstd
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|IMetaStoreClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HiveAccessControlException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HiveAuthzPluginException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HiveOperationType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HivePrincipal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HivePrincipal
operator|.
name|HivePrincipalType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HivePrivilege
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HivePrivilegeObject
import|;
end_import

begin_comment
comment|/**  * Utility class to authorize grant/revoke privileges  */
end_comment

begin_class
specifier|public
class|class
name|GrantPrivAuthUtils
block|{
specifier|static
name|void
name|authorize
parameter_list|(
name|List
argument_list|<
name|HivePrincipal
argument_list|>
name|hivePrincipals
parameter_list|,
name|List
argument_list|<
name|HivePrivilege
argument_list|>
name|hivePrivileges
parameter_list|,
name|HivePrivilegeObject
name|hivePrivObject
parameter_list|,
name|boolean
name|grantOption
parameter_list|,
name|IMetaStoreClient
name|metastoreClient
parameter_list|,
name|String
name|userName
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|curRoles
parameter_list|,
name|boolean
name|isAdmin
parameter_list|)
throws|throws
name|HiveAuthzPluginException
throws|,
name|HiveAccessControlException
block|{
comment|// check if this user has grant privileges for this privileges on this
comment|// object
comment|// map priv being granted to required privileges
name|RequiredPrivileges
name|reqPrivs
init|=
name|getGrantRequiredPrivileges
argument_list|(
name|hivePrivileges
argument_list|)
decl_stmt|;
comment|// check if this user has necessary privileges (reqPrivs) on this object
name|checkRequiredPrivileges
argument_list|(
name|reqPrivs
argument_list|,
name|hivePrivObject
argument_list|,
name|metastoreClient
argument_list|,
name|userName
argument_list|,
name|curRoles
argument_list|,
name|isAdmin
argument_list|,
name|HiveOperationType
operator|.
name|GRANT_PRIVILEGE
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|checkRequiredPrivileges
parameter_list|(
name|RequiredPrivileges
name|reqPrivileges
parameter_list|,
name|HivePrivilegeObject
name|hivePrivObject
parameter_list|,
name|IMetaStoreClient
name|metastoreClient
parameter_list|,
name|String
name|userName
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|curRoles
parameter_list|,
name|boolean
name|isAdmin
parameter_list|,
name|HiveOperationType
name|opType
parameter_list|)
throws|throws
name|HiveAuthzPluginException
throws|,
name|HiveAccessControlException
block|{
comment|// keep track of the principals on which privileges have been checked for
comment|// this object
comment|// get privileges for this user and its roles on this object
name|RequiredPrivileges
name|availPrivs
init|=
name|SQLAuthorizationUtils
operator|.
name|getPrivilegesFromMetaStore
argument_list|(
name|metastoreClient
argument_list|,
name|userName
argument_list|,
name|hivePrivObject
argument_list|,
name|curRoles
argument_list|,
name|isAdmin
argument_list|)
decl_stmt|;
comment|// check if required privileges is subset of available privileges
name|List
argument_list|<
name|String
argument_list|>
name|deniedMessages
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|Collection
argument_list|<
name|SQLPrivTypeGrant
argument_list|>
name|missingPrivs
init|=
name|reqPrivileges
operator|.
name|findMissingPrivs
argument_list|(
name|availPrivs
argument_list|)
decl_stmt|;
name|SQLAuthorizationUtils
operator|.
name|addMissingPrivMsg
argument_list|(
name|missingPrivs
argument_list|,
name|hivePrivObject
argument_list|,
name|deniedMessages
argument_list|)
expr_stmt|;
name|SQLAuthorizationUtils
operator|.
name|assertNoDeniedPermissions
argument_list|(
operator|new
name|HivePrincipal
argument_list|(
name|userName
argument_list|,
name|HivePrincipalType
operator|.
name|USER
argument_list|)
argument_list|,
name|opType
argument_list|,
name|deniedMessages
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|RequiredPrivileges
name|getGrantRequiredPrivileges
parameter_list|(
name|List
argument_list|<
name|HivePrivilege
argument_list|>
name|hivePrivileges
parameter_list|)
throws|throws
name|HiveAuthzPluginException
block|{
name|RequiredPrivileges
name|reqPrivs
init|=
operator|new
name|RequiredPrivileges
argument_list|()
decl_stmt|;
for|for
control|(
name|HivePrivilege
name|hivePriv
range|:
name|hivePrivileges
control|)
block|{
name|reqPrivs
operator|.
name|addPrivilege
argument_list|(
name|hivePriv
operator|.
name|getName
argument_list|()
argument_list|,
literal|true
comment|/* grant priv required */
argument_list|)
expr_stmt|;
block|}
return|return
name|reqPrivs
return|;
block|}
block|}
end_class

end_unit

