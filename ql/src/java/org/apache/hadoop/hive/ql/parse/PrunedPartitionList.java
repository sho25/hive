begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Partition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Table
import|;
end_import

begin_comment
comment|/**  * The list of pruned partitions.  */
end_comment

begin_class
specifier|public
class|class
name|PrunedPartitionList
block|{
comment|/** Key to identify this partition list. */
specifier|private
specifier|final
name|String
name|ppListKey
decl_stmt|;
comment|/** Source table. */
specifier|private
specifier|final
name|Table
name|source
decl_stmt|;
comment|/** Partitions that either satisfy the partition criteria, or may satisfy it. */
specifier|private
name|Set
argument_list|<
name|Partition
argument_list|>
name|partitions
decl_stmt|;
comment|/** partition columns referred by pruner expr */
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|referred
decl_stmt|;
comment|/** Whether there are partitions in the list that may or may not satisfy the criteria. */
specifier|private
name|boolean
name|hasUnknowns
decl_stmt|;
specifier|public
name|PrunedPartitionList
parameter_list|(
name|Table
name|source
parameter_list|,
name|Set
argument_list|<
name|Partition
argument_list|>
name|partitions
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|referred
parameter_list|,
name|boolean
name|hasUnknowns
parameter_list|)
block|{
name|this
operator|.
name|source
operator|=
name|source
expr_stmt|;
name|this
operator|.
name|ppListKey
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|referred
operator|=
name|referred
expr_stmt|;
name|this
operator|.
name|partitions
operator|=
name|partitions
expr_stmt|;
name|this
operator|.
name|hasUnknowns
operator|=
name|hasUnknowns
expr_stmt|;
block|}
specifier|public
name|PrunedPartitionList
parameter_list|(
name|Table
name|source
parameter_list|,
name|String
name|key
parameter_list|,
name|Set
argument_list|<
name|Partition
argument_list|>
name|partitions
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|referred
parameter_list|,
name|boolean
name|hasUnknowns
parameter_list|)
block|{
name|this
operator|.
name|source
operator|=
name|source
expr_stmt|;
name|this
operator|.
name|ppListKey
operator|=
name|key
expr_stmt|;
name|this
operator|.
name|referred
operator|=
name|referred
expr_stmt|;
name|this
operator|.
name|partitions
operator|=
name|partitions
expr_stmt|;
name|this
operator|.
name|hasUnknowns
operator|=
name|hasUnknowns
expr_stmt|;
block|}
specifier|public
name|Table
name|getSourceTable
parameter_list|()
block|{
return|return
name|source
return|;
block|}
specifier|public
name|String
name|getKey
parameter_list|()
block|{
return|return
name|ppListKey
return|;
block|}
comment|/**    * @return partitions    */
specifier|public
name|Set
argument_list|<
name|Partition
argument_list|>
name|getPartitions
parameter_list|()
block|{
return|return
name|partitions
return|;
block|}
comment|/**    * @return all partitions.    */
specifier|public
name|List
argument_list|<
name|Partition
argument_list|>
name|getNotDeniedPartns
parameter_list|()
block|{
return|return
operator|new
name|ArrayList
argument_list|<
name|Partition
argument_list|>
argument_list|(
name|partitions
argument_list|)
return|;
block|}
comment|/**    * @return Whether there are unknown partitions in {@link #getPartitions()} result.    */
specifier|public
name|boolean
name|hasUnknownPartitions
parameter_list|()
block|{
return|return
name|hasUnknowns
return|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getReferredPartCols
parameter_list|()
block|{
return|return
name|referred
return|;
block|}
block|}
end_class

end_unit

