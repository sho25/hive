begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Partition
import|;
end_import

begin_comment
comment|/**  * The list of pruned partitions.  */
end_comment

begin_class
specifier|public
class|class
name|PrunedPartitionList
block|{
comment|// confirmed partitions - satisfy the partition criteria
specifier|private
name|Set
argument_list|<
name|Partition
argument_list|>
name|confirmedPartns
decl_stmt|;
comment|// unknown partitions - may/may not satisfy the partition criteria
specifier|private
name|Set
argument_list|<
name|Partition
argument_list|>
name|unknownPartns
decl_stmt|;
comment|// denied partitions - do not satisfy the partition criteria
specifier|private
specifier|final
name|Set
argument_list|<
name|Partition
argument_list|>
name|deniedPartns
decl_stmt|;
comment|/**    * @param confirmedPartns    *          confirmed paritions    * @param unknownPartns    *          unknown partitions    */
specifier|public
name|PrunedPartitionList
parameter_list|(
name|Set
argument_list|<
name|Partition
argument_list|>
name|confirmedPartns
parameter_list|,
name|Set
argument_list|<
name|Partition
argument_list|>
name|unknownPartns
parameter_list|,
name|Set
argument_list|<
name|Partition
argument_list|>
name|deniedPartns
parameter_list|)
block|{
name|this
operator|.
name|confirmedPartns
operator|=
name|confirmedPartns
expr_stmt|;
name|this
operator|.
name|unknownPartns
operator|=
name|unknownPartns
expr_stmt|;
name|this
operator|.
name|deniedPartns
operator|=
name|deniedPartns
expr_stmt|;
block|}
comment|/**    * get confirmed partitions.    *     * @return confirmedPartns confirmed paritions    */
specifier|public
name|Set
argument_list|<
name|Partition
argument_list|>
name|getConfirmedPartns
parameter_list|()
block|{
return|return
name|confirmedPartns
return|;
block|}
comment|/**    * get unknown partitions.    *     * @return unknownPartns unknown paritions    */
specifier|public
name|Set
argument_list|<
name|Partition
argument_list|>
name|getUnknownPartns
parameter_list|()
block|{
return|return
name|unknownPartns
return|;
block|}
comment|/**    * get denied partitions.    *     * @return deniedPartns denied paritions    */
specifier|public
name|Set
argument_list|<
name|Partition
argument_list|>
name|getDeniedPartns
parameter_list|()
block|{
return|return
name|deniedPartns
return|;
block|}
comment|/**    * set confirmed partitions.    *     * @param confirmedPartns    *          confirmed paritions    */
specifier|public
name|void
name|setConfirmedPartns
parameter_list|(
name|Set
argument_list|<
name|Partition
argument_list|>
name|confirmedPartns
parameter_list|)
block|{
name|this
operator|.
name|confirmedPartns
operator|=
name|confirmedPartns
expr_stmt|;
block|}
comment|/**    * set unknown partitions.    *     * @param unknownPartns    *          unknown partitions    */
specifier|public
name|void
name|setUnknownPartns
parameter_list|(
name|Set
argument_list|<
name|Partition
argument_list|>
name|unknownPartns
parameter_list|)
block|{
name|this
operator|.
name|unknownPartns
operator|=
name|unknownPartns
expr_stmt|;
block|}
block|}
end_class

end_unit

