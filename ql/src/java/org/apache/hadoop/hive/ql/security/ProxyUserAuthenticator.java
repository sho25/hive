begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|shims
operator|.
name|ShimLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_comment
comment|/**  * ProxyUserAuthenticator extends HadoopDefaultAuthenticator  * but honours a proxy config setting proxy.user.name instead of the  * current user if set. This allows server processes like webhcat which  * proxy other users to easily specify an override if allowed.  */
end_comment

begin_class
specifier|public
class|class
name|ProxyUserAuthenticator
extends|extends
name|HadoopDefaultAuthenticator
block|{
specifier|private
specifier|static
specifier|final
name|String
name|PROXY_USER_NAME
init|=
literal|"proxy.user.name"
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|setConf
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|this
operator|.
name|conf
operator|=
name|conf
expr_stmt|;
name|UserGroupInformation
name|ugi
init|=
literal|null
decl_stmt|;
name|String
name|proxyUser
init|=
name|conf
operator|.
name|get
argument_list|(
name|PROXY_USER_NAME
argument_list|)
decl_stmt|;
if|if
condition|(
name|proxyUser
operator|==
literal|null
condition|)
block|{
name|super
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
return|return;
block|}
comment|// If we're here, proxy user is set.
try|try
block|{
name|ugi
operator|=
name|ShimLoader
operator|.
name|getHadoopShims
argument_list|()
operator|.
name|createRemoteUser
argument_list|(
name|proxyUser
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
if|if
condition|(
name|ugi
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Can not initialize ProxyUserAuthenticator for user ["
operator|+
name|proxyUser
operator|+
literal|"]"
argument_list|)
throw|;
block|}
name|this
operator|.
name|userName
operator|=
name|ShimLoader
operator|.
name|getHadoopShims
argument_list|()
operator|.
name|getShortUserName
argument_list|(
name|ugi
argument_list|)
expr_stmt|;
if|if
condition|(
name|ugi
operator|.
name|getGroupNames
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|groupNames
operator|=
name|Arrays
operator|.
name|asList
argument_list|(
name|ugi
operator|.
name|getGroupNames
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

