begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|udf
operator|.
name|generic
operator|.
name|GenericUDF
import|;
end_import

begin_class
specifier|public
class|class
name|FunctionInfo
block|{
specifier|private
name|String
name|displayName
decl_stmt|;
specifier|private
name|OperatorType
name|opType
decl_stmt|;
specifier|private
name|boolean
name|isOperator
decl_stmt|;
specifier|private
name|Class
argument_list|<
name|?
extends|extends
name|UDF
argument_list|>
name|udfClass
decl_stmt|;
specifier|private
name|Class
argument_list|<
name|?
extends|extends
name|UDAF
argument_list|>
name|udafClass
decl_stmt|;
specifier|private
name|Class
argument_list|<
name|?
extends|extends
name|GenericUDF
argument_list|>
name|genericUDFClass
decl_stmt|;
specifier|public
specifier|static
enum|enum
name|OperatorType
block|{
name|NO_OP
block|,
name|PREFIX
block|,
name|INFIX
block|,
name|POSTFIX
block|}
empty_stmt|;
specifier|public
name|FunctionInfo
parameter_list|(
name|String
name|displayName
parameter_list|,
name|Class
argument_list|<
name|?
extends|extends
name|UDF
argument_list|>
name|udfClass
parameter_list|,
name|Class
argument_list|<
name|?
extends|extends
name|UDAF
argument_list|>
name|udafClass
parameter_list|,
name|Class
argument_list|<
name|?
extends|extends
name|GenericUDF
argument_list|>
name|genericUdfClass
parameter_list|)
block|{
assert|assert
operator|(
name|udfClass
operator|==
literal|null
operator|||
name|udafClass
operator|==
literal|null
operator|)
assert|;
name|this
operator|.
name|displayName
operator|=
name|displayName
expr_stmt|;
name|opType
operator|=
name|OperatorType
operator|.
name|NO_OP
expr_stmt|;
name|isOperator
operator|=
literal|false
expr_stmt|;
name|this
operator|.
name|udfClass
operator|=
name|udfClass
expr_stmt|;
name|this
operator|.
name|udafClass
operator|=
name|udafClass
expr_stmt|;
name|this
operator|.
name|genericUDFClass
operator|=
name|genericUdfClass
expr_stmt|;
block|}
specifier|public
name|FunctionInfo
parameter_list|(
name|String
name|displayName
parameter_list|,
name|OperatorType
name|opType
parameter_list|,
name|Class
argument_list|<
name|?
extends|extends
name|UDF
argument_list|>
name|udfClass
parameter_list|)
block|{
name|this
operator|.
name|displayName
operator|=
name|displayName
expr_stmt|;
name|this
operator|.
name|opType
operator|=
name|opType
expr_stmt|;
name|this
operator|.
name|udfClass
operator|=
name|udfClass
expr_stmt|;
name|this
operator|.
name|udafClass
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|boolean
name|isAggFunction
parameter_list|()
block|{
return|return
operator|(
name|udafClass
operator|!=
literal|null
operator|&&
name|udfClass
operator|==
literal|null
operator|)
return|;
block|}
specifier|public
name|boolean
name|isOperator
parameter_list|()
block|{
return|return
name|isOperator
return|;
block|}
specifier|public
name|void
name|setIsOperator
parameter_list|(
name|boolean
name|val
parameter_list|)
block|{
name|isOperator
operator|=
name|val
expr_stmt|;
block|}
specifier|public
name|void
name|setOpType
parameter_list|(
name|OperatorType
name|opt
parameter_list|)
block|{
name|opType
operator|=
name|opt
expr_stmt|;
block|}
specifier|public
name|OperatorType
name|getOpType
parameter_list|()
block|{
return|return
name|opType
return|;
block|}
specifier|public
name|Class
argument_list|<
name|?
extends|extends
name|UDF
argument_list|>
name|getUDFClass
parameter_list|()
block|{
return|return
name|udfClass
return|;
block|}
specifier|public
name|Class
argument_list|<
name|?
extends|extends
name|UDAF
argument_list|>
name|getUDAFClass
parameter_list|()
block|{
return|return
name|udafClass
return|;
block|}
specifier|public
name|Class
argument_list|<
name|?
extends|extends
name|GenericUDF
argument_list|>
name|getGenericUDFClass
parameter_list|()
block|{
return|return
name|genericUDFClass
return|;
block|}
specifier|public
name|String
name|getDisplayName
parameter_list|()
block|{
return|return
name|displayName
return|;
block|}
block|}
end_class

end_unit

