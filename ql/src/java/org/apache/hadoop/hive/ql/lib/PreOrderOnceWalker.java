begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|lib
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
operator|.
name|SemanticException
import|;
end_import

begin_comment
comment|/**  * Graph walker this class takes list of starting nodes and walks them in pre-order.  * If a rule fires up against a given node, we do not try to apply the rule  * on its children.  */
end_comment

begin_class
specifier|public
class|class
name|PreOrderOnceWalker
extends|extends
name|PreOrderWalker
block|{
specifier|public
name|PreOrderOnceWalker
parameter_list|(
name|Dispatcher
name|disp
parameter_list|)
block|{
name|super
argument_list|(
name|disp
argument_list|)
expr_stmt|;
block|}
comment|/**    * Walk the current operator and its descendants.    *     * @param nd    *          current operator in the graph    * @throws SemanticException    */
annotation|@
name|Override
specifier|public
name|void
name|walk
parameter_list|(
name|Node
name|nd
parameter_list|)
throws|throws
name|SemanticException
block|{
name|opStack
operator|.
name|push
argument_list|(
name|nd
argument_list|)
expr_stmt|;
name|dispatch
argument_list|(
name|nd
argument_list|,
name|opStack
argument_list|)
expr_stmt|;
comment|// The rule has been applied, we bail out
if|if
condition|(
name|retMap
operator|.
name|get
argument_list|(
name|nd
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|opStack
operator|.
name|pop
argument_list|()
expr_stmt|;
return|return;
block|}
comment|// move all the children to the front of queue
if|if
condition|(
name|nd
operator|.
name|getChildren
argument_list|()
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Node
name|n
range|:
name|nd
operator|.
name|getChildren
argument_list|()
control|)
block|{
name|walk
argument_list|(
name|n
argument_list|)
expr_stmt|;
block|}
block|}
name|opStack
operator|.
name|pop
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

