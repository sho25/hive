begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|stats
operator|.
name|estimator
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|ColStatistics
import|;
end_import

begin_comment
comment|/**  * Combines {@link ColStatistics} objects to provide the most pessimistic estimate.  */
end_comment

begin_class
specifier|public
class|class
name|PessimisticStatCombiner
block|{
specifier|private
name|boolean
name|inited
decl_stmt|;
specifier|private
name|ColStatistics
name|result
decl_stmt|;
specifier|public
name|void
name|add
parameter_list|(
name|ColStatistics
name|stat
parameter_list|)
block|{
if|if
condition|(
operator|!
name|inited
condition|)
block|{
name|inited
operator|=
literal|true
expr_stmt|;
name|result
operator|=
name|stat
operator|.
name|clone
argument_list|()
expr_stmt|;
name|result
operator|.
name|setRange
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|result
operator|.
name|setIsEstimated
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return;
block|}
else|else
block|{
if|if
condition|(
name|stat
operator|.
name|getAvgColLen
argument_list|()
operator|>
name|result
operator|.
name|getAvgColLen
argument_list|()
condition|)
block|{
name|result
operator|.
name|setAvgColLen
argument_list|(
name|stat
operator|.
name|getAvgColLen
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|stat
operator|.
name|getCountDistint
argument_list|()
operator|>
name|result
operator|.
name|getCountDistint
argument_list|()
condition|)
block|{
name|result
operator|.
name|setCountDistint
argument_list|(
name|stat
operator|.
name|getCountDistint
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|stat
operator|.
name|getNumNulls
argument_list|()
operator|>
name|result
operator|.
name|getNumNulls
argument_list|()
condition|)
block|{
name|result
operator|.
name|setNumNulls
argument_list|(
name|stat
operator|.
name|getNumNulls
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|stat
operator|.
name|getNumTrues
argument_list|()
operator|>
name|result
operator|.
name|getNumTrues
argument_list|()
condition|)
block|{
name|result
operator|.
name|setNumTrues
argument_list|(
name|stat
operator|.
name|getNumTrues
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|stat
operator|.
name|getNumFalses
argument_list|()
operator|>
name|result
operator|.
name|getNumFalses
argument_list|()
condition|)
block|{
name|result
operator|.
name|setNumFalses
argument_list|(
name|stat
operator|.
name|getNumFalses
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|stat
operator|.
name|isFilteredColumn
argument_list|()
condition|)
block|{
name|result
operator|.
name|setFilterColumn
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|Optional
argument_list|<
name|ColStatistics
argument_list|>
name|getResult
parameter_list|()
block|{
return|return
name|Optional
operator|.
name|of
argument_list|(
name|result
argument_list|)
return|;
block|}
block|}
end_class

end_unit

