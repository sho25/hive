begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|arrow
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|arrow
operator|.
name|memory
operator|.
name|BufferAllocator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|arrow
operator|.
name|vector
operator|.
name|VectorSchemaRoot
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|WritableComparable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|arrow
operator|.
name|vector
operator|.
name|complex
operator|.
name|NonNullableStructVector
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
specifier|public
class|class
name|ArrowWrapperWritable
implements|implements
name|WritableComparable
block|{
specifier|private
name|VectorSchemaRoot
name|vectorSchemaRoot
decl_stmt|;
specifier|private
name|BufferAllocator
name|allocator
decl_stmt|;
specifier|private
name|NonNullableStructVector
name|rootVector
decl_stmt|;
specifier|public
name|ArrowWrapperWritable
parameter_list|(
name|VectorSchemaRoot
name|vectorSchemaRoot
parameter_list|)
block|{
name|this
operator|.
name|vectorSchemaRoot
operator|=
name|vectorSchemaRoot
expr_stmt|;
block|}
specifier|public
name|ArrowWrapperWritable
parameter_list|(
name|VectorSchemaRoot
name|vectorSchemaRoot
parameter_list|,
name|BufferAllocator
name|allocator
parameter_list|,
name|NonNullableStructVector
name|rootVector
parameter_list|)
block|{
name|this
operator|.
name|vectorSchemaRoot
operator|=
name|vectorSchemaRoot
expr_stmt|;
name|this
operator|.
name|allocator
operator|=
name|allocator
expr_stmt|;
name|this
operator|.
name|rootVector
operator|=
name|rootVector
expr_stmt|;
block|}
specifier|public
name|ArrowWrapperWritable
parameter_list|()
block|{}
specifier|public
name|VectorSchemaRoot
name|getVectorSchemaRoot
parameter_list|()
block|{
return|return
name|vectorSchemaRoot
return|;
block|}
specifier|public
name|void
name|setVectorSchemaRoot
parameter_list|(
name|VectorSchemaRoot
name|vectorSchemaRoot
parameter_list|)
block|{
name|this
operator|.
name|vectorSchemaRoot
operator|=
name|vectorSchemaRoot
expr_stmt|;
block|}
specifier|public
name|BufferAllocator
name|getAllocator
parameter_list|()
block|{
return|return
name|allocator
return|;
block|}
specifier|public
name|NonNullableStructVector
name|getRootVector
parameter_list|()
block|{
return|return
name|rootVector
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
name|DataOutput
name|dataOutput
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|readFields
parameter_list|(
name|DataInput
name|dataInput
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|compareTo
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
return|return
literal|0
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
block|}
end_class

end_unit

