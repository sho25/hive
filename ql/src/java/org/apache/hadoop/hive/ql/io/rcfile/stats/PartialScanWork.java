begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|rcfile
operator|.
name|stats
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVESTATSDBCLASS
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|StatsSetupConst
operator|.
name|StatDB
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|CombineHiveInputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|rcfile
operator|.
name|merge
operator|.
name|RCFileBlockMergeInputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|Explain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|MapWork
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|PartitionDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|Explain
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|TableDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|Mapper
import|;
end_import

begin_comment
comment|/**  * Partial Scan Work.  *  */
end_comment

begin_class
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Partial Scan Statistics"
argument_list|)
specifier|public
class|class
name|PartialScanWork
extends|extends
name|MapWork
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
specifier|transient
name|List
argument_list|<
name|Path
argument_list|>
name|inputPaths
decl_stmt|;
specifier|private
name|String
name|aggKey
decl_stmt|;
specifier|private
name|String
name|statsTmpDir
decl_stmt|;
specifier|private
name|TableDesc
name|tblDesc
decl_stmt|;
specifier|public
name|PartialScanWork
parameter_list|()
block|{   }
specifier|public
name|PartialScanWork
parameter_list|(
name|List
argument_list|<
name|Path
argument_list|>
name|inputPaths
parameter_list|,
name|TableDesc
name|tblDesc
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|inputPaths
operator|=
name|inputPaths
expr_stmt|;
name|this
operator|.
name|tblDesc
operator|=
name|tblDesc
expr_stmt|;
name|PartitionDesc
name|partDesc
init|=
operator|new
name|PartitionDesc
argument_list|()
decl_stmt|;
name|partDesc
operator|.
name|setInputFileFormatClass
argument_list|(
name|RCFileBlockMergeInputFormat
operator|.
name|class
argument_list|)
expr_stmt|;
name|partDesc
operator|.
name|setTableDesc
argument_list|(
name|tblDesc
argument_list|)
expr_stmt|;
for|for
control|(
name|Path
name|path
range|:
name|this
operator|.
name|inputPaths
control|)
block|{
name|this
operator|.
name|addPathToPartitionInfo
argument_list|(
name|path
argument_list|,
name|partDesc
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|List
argument_list|<
name|Path
argument_list|>
name|getInputPaths
parameter_list|()
block|{
return|return
name|inputPaths
return|;
block|}
specifier|public
name|void
name|setInputPaths
parameter_list|(
name|List
argument_list|<
name|Path
argument_list|>
name|inputPaths
parameter_list|)
block|{
name|this
operator|.
name|inputPaths
operator|=
name|inputPaths
expr_stmt|;
block|}
specifier|public
name|Class
argument_list|<
name|?
extends|extends
name|Mapper
argument_list|>
name|getMapperClass
parameter_list|()
block|{
return|return
name|PartialScanMapper
operator|.
name|class
return|;
block|}
annotation|@
name|Override
specifier|public
name|Long
name|getMinSplitSize
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getInputformat
parameter_list|()
block|{
return|return
name|CombineHiveInputFormat
operator|.
name|class
operator|.
name|getName
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isGatheringStats
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
comment|/**    * @return the aggKey    */
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"Stats Aggregation Key Prefix"
argument_list|,
name|explainLevels
operator|=
block|{
name|Level
operator|.
name|EXTENDED
block|}
argument_list|)
specifier|public
name|String
name|getAggKey
parameter_list|()
block|{
return|return
name|aggKey
return|;
block|}
comment|/**    * @param aggKey the aggKey to set    */
specifier|public
name|void
name|setAggKey
parameter_list|(
name|String
name|aggKey
parameter_list|)
block|{
name|this
operator|.
name|aggKey
operator|=
name|aggKey
expr_stmt|;
block|}
specifier|public
name|String
name|getStatsTmpDir
parameter_list|()
block|{
return|return
name|statsTmpDir
return|;
block|}
specifier|public
name|void
name|setStatsTmpDir
parameter_list|(
name|String
name|statsTmpDir
parameter_list|,
name|HiveConf
name|conf
parameter_list|)
block|{
name|this
operator|.
name|statsTmpDir
operator|=
name|HiveConf
operator|.
name|getVar
argument_list|(
name|conf
argument_list|,
name|HIVESTATSDBCLASS
argument_list|)
operator|.
name|equalsIgnoreCase
argument_list|(
name|StatDB
operator|.
name|fs
operator|.
name|name
argument_list|()
argument_list|)
condition|?
name|statsTmpDir
else|:
literal|""
expr_stmt|;
block|}
block|}
end_class

end_unit

