begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p/>  * http://www.apache.org/licenses/LICENSE-2.0  *<p/>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|spark
operator|.
name|status
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|spark
operator|.
name|status
operator|.
name|LocalSparkJobMonitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|spark
operator|.
name|status
operator|.
name|SparkJobRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|spark
operator|.
name|status
operator|.
name|SparkJobStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|spark
operator|.
name|api
operator|.
name|java
operator|.
name|JavaSparkContext
import|;
end_import

begin_class
specifier|public
class|class
name|LocalSparkJobRef
implements|implements
name|SparkJobRef
block|{
specifier|private
specifier|final
name|String
name|jobId
decl_stmt|;
specifier|private
specifier|final
name|HiveConf
name|hiveConf
decl_stmt|;
specifier|private
specifier|final
name|LocalSparkJobStatus
name|sparkJobStatus
decl_stmt|;
specifier|private
specifier|final
name|JavaSparkContext
name|javaSparkContext
decl_stmt|;
specifier|public
name|LocalSparkJobRef
parameter_list|(
name|String
name|jobId
parameter_list|,
name|HiveConf
name|hiveConf
parameter_list|,
name|LocalSparkJobStatus
name|sparkJobStatus
parameter_list|,
name|JavaSparkContext
name|javaSparkContext
parameter_list|)
block|{
name|this
operator|.
name|jobId
operator|=
name|jobId
expr_stmt|;
name|this
operator|.
name|hiveConf
operator|=
name|hiveConf
expr_stmt|;
name|this
operator|.
name|sparkJobStatus
operator|=
name|sparkJobStatus
expr_stmt|;
name|this
operator|.
name|javaSparkContext
operator|=
name|javaSparkContext
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getJobId
parameter_list|()
block|{
return|return
name|jobId
return|;
block|}
annotation|@
name|Override
specifier|public
name|SparkJobStatus
name|getSparkJobStatus
parameter_list|()
block|{
return|return
name|sparkJobStatus
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|cancelJob
parameter_list|()
block|{
name|int
name|id
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|jobId
argument_list|)
decl_stmt|;
name|javaSparkContext
operator|.
name|sc
argument_list|()
operator|.
name|cancelJob
argument_list|(
name|id
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|monitorJob
parameter_list|()
block|{
name|LocalSparkJobMonitor
name|localSparkJobMonitor
init|=
operator|new
name|LocalSparkJobMonitor
argument_list|(
name|hiveConf
argument_list|,
name|sparkJobStatus
argument_list|)
decl_stmt|;
return|return
name|localSparkJobMonitor
operator|.
name|startMonitor
argument_list|()
return|;
block|}
block|}
end_class

end_unit

