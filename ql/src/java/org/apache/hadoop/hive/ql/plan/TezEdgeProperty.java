begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_class
specifier|public
class|class
name|TezEdgeProperty
block|{
specifier|public
enum|enum
name|EdgeType
block|{
name|SIMPLE_EDGE
block|,
name|BROADCAST_EDGE
block|,
name|CONTAINS
block|,
name|CUSTOM_EDGE
block|,
name|CUSTOM_SIMPLE_EDGE
block|,   }
specifier|private
name|HiveConf
name|hiveConf
decl_stmt|;
specifier|private
name|EdgeType
name|edgeType
decl_stmt|;
specifier|private
name|int
name|numBuckets
decl_stmt|;
specifier|private
name|boolean
name|isAutoReduce
decl_stmt|;
specifier|private
name|int
name|minReducer
decl_stmt|;
specifier|private
name|int
name|maxReducer
decl_stmt|;
specifier|private
name|long
name|inputSizePerReducer
decl_stmt|;
specifier|public
name|TezEdgeProperty
parameter_list|(
name|HiveConf
name|hiveConf
parameter_list|,
name|EdgeType
name|edgeType
parameter_list|,
name|int
name|buckets
parameter_list|)
block|{
name|this
operator|.
name|hiveConf
operator|=
name|hiveConf
expr_stmt|;
name|this
operator|.
name|edgeType
operator|=
name|edgeType
expr_stmt|;
name|this
operator|.
name|numBuckets
operator|=
name|buckets
expr_stmt|;
block|}
specifier|public
name|TezEdgeProperty
parameter_list|(
name|HiveConf
name|hiveConf
parameter_list|,
name|EdgeType
name|edgeType
parameter_list|,
name|boolean
name|isAutoReduce
parameter_list|,
name|int
name|minReducer
parameter_list|,
name|int
name|maxReducer
parameter_list|,
name|long
name|bytesPerReducer
parameter_list|)
block|{
name|this
argument_list|(
name|hiveConf
argument_list|,
name|edgeType
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|this
operator|.
name|minReducer
operator|=
name|minReducer
expr_stmt|;
name|this
operator|.
name|maxReducer
operator|=
name|maxReducer
expr_stmt|;
name|this
operator|.
name|isAutoReduce
operator|=
name|isAutoReduce
expr_stmt|;
name|this
operator|.
name|inputSizePerReducer
operator|=
name|bytesPerReducer
expr_stmt|;
block|}
specifier|public
name|TezEdgeProperty
parameter_list|(
name|EdgeType
name|edgeType
parameter_list|)
block|{
name|this
argument_list|(
literal|null
argument_list|,
name|edgeType
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
specifier|public
name|EdgeType
name|getEdgeType
parameter_list|()
block|{
return|return
name|edgeType
return|;
block|}
specifier|public
name|HiveConf
name|getHiveConf
parameter_list|()
block|{
return|return
name|hiveConf
return|;
block|}
specifier|public
name|int
name|getNumBuckets
parameter_list|()
block|{
return|return
name|numBuckets
return|;
block|}
specifier|public
name|boolean
name|isAutoReduce
parameter_list|()
block|{
return|return
name|isAutoReduce
return|;
block|}
specifier|public
name|int
name|getMinReducer
parameter_list|()
block|{
return|return
name|minReducer
return|;
block|}
specifier|public
name|int
name|getMaxReducer
parameter_list|()
block|{
return|return
name|maxReducer
return|;
block|}
specifier|public
name|long
name|getInputSizePerReducer
parameter_list|()
block|{
return|return
name|inputSizePerReducer
return|;
block|}
block|}
end_class

end_unit

