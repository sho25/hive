begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  **/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|hooks
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_class
specifier|public
class|class
name|QueryLifeTimeHookContextImpl
implements|implements
name|QueryLifeTimeHookContext
block|{
specifier|private
name|HiveConf
name|conf
decl_stmt|;
specifier|private
name|String
name|command
decl_stmt|;
specifier|private
name|HookContext
name|hc
init|=
literal|null
decl_stmt|;
annotation|@
name|Override
specifier|public
name|HiveConf
name|getHiveConf
parameter_list|()
block|{
return|return
name|conf
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setHiveConf
parameter_list|(
name|HiveConf
name|conf
parameter_list|)
block|{
name|this
operator|.
name|conf
operator|=
name|conf
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getCommand
parameter_list|()
block|{
return|return
name|command
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setCommand
parameter_list|(
name|String
name|command
parameter_list|)
block|{
name|this
operator|.
name|command
operator|=
name|command
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|HookContext
name|getHookContext
parameter_list|()
block|{
return|return
name|hc
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setHookContext
parameter_list|(
name|HookContext
name|hc
parameter_list|)
block|{
name|this
operator|.
name|hc
operator|=
name|hc
expr_stmt|;
block|}
block|}
end_class

end_unit

