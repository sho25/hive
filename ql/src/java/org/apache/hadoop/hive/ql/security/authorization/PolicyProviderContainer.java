begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HiveAuthorizer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HiveAuthzPluginException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HivePolicyProvider
import|;
end_import

begin_comment
comment|/**  * Wrapper of policy provider no matter this is in authorizer v1 or v2  */
end_comment

begin_class
specifier|public
class|class
name|PolicyProviderContainer
implements|implements
name|Iterable
argument_list|<
name|HivePolicyProvider
argument_list|>
block|{
name|List
argument_list|<
name|HiveAuthorizer
argument_list|>
name|authorizers
init|=
operator|new
name|ArrayList
argument_list|<
name|HiveAuthorizer
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|HiveMetastoreAuthorizationProvider
argument_list|>
name|authorizationProviders
init|=
operator|new
name|ArrayList
argument_list|<
name|HiveMetastoreAuthorizationProvider
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|void
name|addAuthorizer
parameter_list|(
name|HiveAuthorizer
name|authorizer
parameter_list|)
block|{
name|authorizers
operator|.
name|add
argument_list|(
name|authorizer
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addAuthorizationProvider
parameter_list|(
name|HiveMetastoreAuthorizationProvider
name|authorizationProvider
parameter_list|)
block|{
name|authorizationProviders
operator|.
name|add
argument_list|(
name|authorizationProvider
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|size
parameter_list|()
block|{
return|return
name|authorizers
operator|.
name|size
argument_list|()
operator|+
name|authorizationProviders
operator|.
name|size
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|HivePolicyProvider
argument_list|>
name|iterator
parameter_list|()
block|{
return|return
operator|new
name|PolicyIterator
argument_list|()
return|;
block|}
class|class
name|PolicyIterator
implements|implements
name|Iterator
argument_list|<
name|HivePolicyProvider
argument_list|>
block|{
name|int
name|currentAuthorizerPosition
init|=
literal|0
decl_stmt|;
name|int
name|authorizationProviderPosition
init|=
literal|0
decl_stmt|;
annotation|@
name|Override
specifier|public
name|boolean
name|hasNext
parameter_list|()
block|{
if|if
condition|(
name|currentAuthorizerPosition
operator|<
name|authorizers
operator|.
name|size
argument_list|()
operator|||
name|authorizationProviderPosition
operator|<
name|authorizationProviders
operator|.
name|size
argument_list|()
condition|)
block|{
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|HivePolicyProvider
name|next
parameter_list|()
block|{
try|try
block|{
if|if
condition|(
name|currentAuthorizerPosition
operator|<
name|authorizers
operator|.
name|size
argument_list|()
condition|)
block|{
return|return
name|authorizers
operator|.
name|get
argument_list|(
name|currentAuthorizerPosition
operator|++
argument_list|)
operator|.
name|getHivePolicyProvider
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|authorizationProviders
operator|.
name|get
argument_list|(
name|authorizationProviderPosition
operator|++
argument_list|)
operator|.
name|getHivePolicyProvider
argument_list|()
return|;
block|}
block|}
catch|catch
parameter_list|(
name|HiveAuthzPluginException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
block|}
end_class

end_unit

