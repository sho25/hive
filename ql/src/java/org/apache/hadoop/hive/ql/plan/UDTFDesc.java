begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|udf
operator|.
name|generic
operator|.
name|GenericUDTF
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|Explain
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_comment
comment|/**  * All member variables should have a setters and getters of the form get<member  * name> and set<member name> or else they won't be recreated properly at run  * time.  *  */
end_comment

begin_class
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"UDTF Operator"
argument_list|,
name|explainLevels
operator|=
block|{
name|Level
operator|.
name|USER
block|,
name|Level
operator|.
name|DEFAULT
block|,
name|Level
operator|.
name|EXTENDED
block|}
argument_list|)
specifier|public
class|class
name|UDTFDesc
extends|extends
name|AbstractOperatorDesc
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|GenericUDTF
name|genericUDTF
decl_stmt|;
specifier|private
name|boolean
name|outerLV
decl_stmt|;
specifier|public
name|UDTFDesc
parameter_list|()
block|{   }
specifier|public
name|UDTFDesc
parameter_list|(
specifier|final
name|GenericUDTF
name|genericUDTF
parameter_list|,
name|boolean
name|outerLV
parameter_list|)
block|{
name|this
operator|.
name|genericUDTF
operator|=
name|genericUDTF
expr_stmt|;
name|this
operator|.
name|outerLV
operator|=
name|outerLV
expr_stmt|;
block|}
specifier|public
name|GenericUDTF
name|getGenericUDTF
parameter_list|()
block|{
return|return
name|genericUDTF
return|;
block|}
specifier|public
name|void
name|setGenericUDTF
parameter_list|(
specifier|final
name|GenericUDTF
name|genericUDTF
parameter_list|)
block|{
name|this
operator|.
name|genericUDTF
operator|=
name|genericUDTF
expr_stmt|;
block|}
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"function name"
argument_list|,
name|explainLevels
operator|=
block|{
name|Level
operator|.
name|USER
block|,
name|Level
operator|.
name|DEFAULT
block|,
name|Level
operator|.
name|EXTENDED
block|}
argument_list|)
specifier|public
name|String
name|getUDTFName
parameter_list|()
block|{
return|return
name|genericUDTF
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isOuterLV
parameter_list|()
block|{
return|return
name|outerLV
return|;
block|}
specifier|public
name|void
name|setOuterLV
parameter_list|(
name|boolean
name|outerLV
parameter_list|)
block|{
name|this
operator|.
name|outerLV
operator|=
name|outerLV
expr_stmt|;
block|}
annotation|@
name|Explain
argument_list|(
name|displayName
operator|=
literal|"outer lateral view"
argument_list|)
specifier|public
name|String
name|isOuterLateralView
parameter_list|()
block|{
return|return
name|outerLV
condition|?
literal|"true"
else|:
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isSame
parameter_list|(
name|OperatorDesc
name|other
parameter_list|)
block|{
if|if
condition|(
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|UDTFDesc
name|otherDesc
init|=
operator|(
name|UDTFDesc
operator|)
name|other
decl_stmt|;
return|return
name|Objects
operator|.
name|equals
argument_list|(
name|getUDTFName
argument_list|()
argument_list|,
name|otherDesc
operator|.
name|getUDTFName
argument_list|()
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|isOuterLateralView
argument_list|()
argument_list|,
name|otherDesc
operator|.
name|isOuterLateralView
argument_list|()
argument_list|)
return|;
block|}
return|return
literal|false
return|;
block|}
block|}
end_class

end_unit

