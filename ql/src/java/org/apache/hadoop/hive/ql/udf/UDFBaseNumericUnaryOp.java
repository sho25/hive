begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|udf
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|UDF
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|ByteWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|DoubleWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|ShortWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|FloatWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|IntWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|LongWritable
import|;
end_import

begin_comment
comment|/**  * Base class for numeric operators like +, -, / etc. All these operators share  * a common method resolver (NumericOpMethodResolver).  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|UDFBaseNumericUnaryOp
extends|extends
name|UDF
block|{
comment|/**    * Constructor.    */
specifier|public
name|UDFBaseNumericUnaryOp
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|ByteWritable
name|byteWritable
init|=
operator|new
name|ByteWritable
argument_list|()
decl_stmt|;
specifier|protected
name|ShortWritable
name|shortWritable
init|=
operator|new
name|ShortWritable
argument_list|()
decl_stmt|;
specifier|protected
name|IntWritable
name|intWritable
init|=
operator|new
name|IntWritable
argument_list|()
decl_stmt|;
specifier|protected
name|LongWritable
name|longWritable
init|=
operator|new
name|LongWritable
argument_list|()
decl_stmt|;
specifier|protected
name|FloatWritable
name|floatWritable
init|=
operator|new
name|FloatWritable
argument_list|()
decl_stmt|;
specifier|protected
name|DoubleWritable
name|doubleWritable
init|=
operator|new
name|DoubleWritable
argument_list|()
decl_stmt|;
specifier|public
specifier|abstract
name|ByteWritable
name|evaluate
parameter_list|(
name|ByteWritable
name|a
parameter_list|)
function_decl|;
specifier|public
specifier|abstract
name|ShortWritable
name|evaluate
parameter_list|(
name|ShortWritable
name|a
parameter_list|)
function_decl|;
specifier|public
specifier|abstract
name|IntWritable
name|evaluate
parameter_list|(
name|IntWritable
name|a
parameter_list|)
function_decl|;
specifier|public
specifier|abstract
name|LongWritable
name|evaluate
parameter_list|(
name|LongWritable
name|a
parameter_list|)
function_decl|;
specifier|public
specifier|abstract
name|FloatWritable
name|evaluate
parameter_list|(
name|FloatWritable
name|a
parameter_list|)
function_decl|;
specifier|public
specifier|abstract
name|DoubleWritable
name|evaluate
parameter_list|(
name|DoubleWritable
name|a
parameter_list|)
function_decl|;
block|}
end_class

end_unit

