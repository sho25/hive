begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|LockComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|LockType
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_comment
comment|/**  * ExplainLockDesc represents lock entity in query plan.  */
end_comment

begin_class
specifier|public
class|class
name|ExplainLockDesc
block|{
specifier|private
name|String
name|catalogName
decl_stmt|;
specifier|private
name|String
name|dbName
decl_stmt|;
specifier|private
name|String
name|tableName
decl_stmt|;
specifier|private
name|String
name|partitionName
decl_stmt|;
specifier|private
name|LockType
name|lockType
decl_stmt|;
specifier|public
name|ExplainLockDesc
parameter_list|()
block|{   }
specifier|public
name|ExplainLockDesc
parameter_list|(
name|LockComponent
name|component
parameter_list|)
block|{
name|this
operator|.
name|dbName
operator|=
name|component
operator|.
name|getDbname
argument_list|()
expr_stmt|;
if|if
condition|(
literal|null
operator|!=
name|component
operator|.
name|getTablename
argument_list|()
condition|)
block|{
name|this
operator|.
name|tableName
operator|=
name|component
operator|.
name|getTablename
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
literal|null
operator|!=
name|component
operator|.
name|getPartitionname
argument_list|()
condition|)
block|{
name|this
operator|.
name|partitionName
operator|=
name|component
operator|.
name|getPartitionname
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|lockType
operator|=
name|component
operator|.
name|getType
argument_list|()
expr_stmt|;
block|}
specifier|public
name|String
name|getCatalogName
parameter_list|()
block|{
return|return
name|catalogName
return|;
block|}
specifier|public
name|ExplainLockDesc
name|setCatalogName
parameter_list|(
name|String
name|catalogName
parameter_list|)
block|{
name|this
operator|.
name|catalogName
operator|=
name|catalogName
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|String
name|getDbName
parameter_list|()
block|{
return|return
name|dbName
return|;
block|}
specifier|public
name|ExplainLockDesc
name|setDbName
parameter_list|(
name|String
name|dbName
parameter_list|)
block|{
name|this
operator|.
name|dbName
operator|=
name|dbName
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|String
name|getTableName
parameter_list|()
block|{
return|return
name|tableName
return|;
block|}
specifier|public
name|ExplainLockDesc
name|setTableName
parameter_list|(
name|String
name|tableName
parameter_list|)
block|{
name|this
operator|.
name|tableName
operator|=
name|tableName
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|String
name|getPartitionName
parameter_list|()
block|{
return|return
name|partitionName
return|;
block|}
specifier|public
name|ExplainLockDesc
name|setPartitionName
parameter_list|(
name|String
name|partitionName
parameter_list|)
block|{
name|this
operator|.
name|partitionName
operator|=
name|partitionName
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|LockType
name|getLockType
parameter_list|()
block|{
return|return
name|lockType
return|;
block|}
specifier|public
name|ExplainLockDesc
name|setLockType
parameter_list|(
name|LockType
name|lockType
parameter_list|)
block|{
name|this
operator|.
name|lockType
operator|=
name|lockType
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|String
name|getFullName
parameter_list|()
block|{
name|ArrayList
argument_list|<
name|String
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
literal|null
operator|!=
name|catalogName
condition|)
block|{
name|list
operator|.
name|add
argument_list|(
name|catalogName
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
literal|null
operator|!=
name|dbName
condition|)
block|{
name|list
operator|.
name|add
argument_list|(
name|dbName
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
literal|null
operator|!=
name|tableName
condition|)
block|{
name|list
operator|.
name|add
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
literal|null
operator|!=
name|partitionName
condition|)
block|{
name|list
operator|.
name|add
argument_list|(
name|partitionName
argument_list|)
expr_stmt|;
block|}
return|return
name|StringUtils
operator|.
name|join
argument_list|(
name|list
argument_list|,
literal|'.'
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|getFullName
argument_list|()
operator|+
literal|" -> "
operator|+
name|this
operator|.
name|getLockType
argument_list|()
return|;
block|}
block|}
end_class

end_unit

