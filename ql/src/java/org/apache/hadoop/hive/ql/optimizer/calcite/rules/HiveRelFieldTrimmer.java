begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
operator|.
name|calcite
operator|.
name|rules
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|RelCollation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|RelFieldCollation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|RelNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|core
operator|.
name|RelFactories
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|metadata
operator|.
name|RelMetadataQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|type
operator|.
name|RelDataTypeField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql
operator|.
name|validate
operator|.
name|SqlValidator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql2rel
operator|.
name|RelFieldTrimmer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|util
operator|.
name|ImmutableBitSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|util
operator|.
name|Util
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_class
specifier|public
class|class
name|HiveRelFieldTrimmer
extends|extends
name|RelFieldTrimmer
block|{
specifier|public
name|HiveRelFieldTrimmer
parameter_list|(
name|SqlValidator
name|validator
parameter_list|)
block|{
name|super
argument_list|(
name|validator
argument_list|)
expr_stmt|;
block|}
specifier|public
name|HiveRelFieldTrimmer
parameter_list|(
name|SqlValidator
name|validator
parameter_list|,
name|RelFactories
operator|.
name|ProjectFactory
name|projectFactory
parameter_list|,
name|RelFactories
operator|.
name|FilterFactory
name|filterFactory
parameter_list|,
name|RelFactories
operator|.
name|JoinFactory
name|joinFactory
parameter_list|,
name|RelFactories
operator|.
name|SemiJoinFactory
name|semiJoinFactory
parameter_list|,
name|RelFactories
operator|.
name|SortFactory
name|sortFactory
parameter_list|,
name|RelFactories
operator|.
name|AggregateFactory
name|aggregateFactory
parameter_list|,
name|RelFactories
operator|.
name|SetOpFactory
name|setOpFactory
parameter_list|)
block|{
name|super
argument_list|(
name|validator
argument_list|,
name|projectFactory
argument_list|,
name|filterFactory
argument_list|,
name|joinFactory
argument_list|,
name|semiJoinFactory
argument_list|,
name|sortFactory
argument_list|,
name|aggregateFactory
argument_list|,
name|setOpFactory
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|TrimResult
name|trimChild
parameter_list|(
name|RelNode
name|rel
parameter_list|,
name|RelNode
name|input
parameter_list|,
name|ImmutableBitSet
name|fieldsUsed
parameter_list|,
name|Set
argument_list|<
name|RelDataTypeField
argument_list|>
name|extraFields
parameter_list|)
block|{
name|Util
operator|.
name|discard
argument_list|(
name|rel
argument_list|)
expr_stmt|;
if|if
condition|(
name|input
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|"MedMdrClassExtentRel"
argument_list|)
condition|)
block|{
comment|// MedMdrJoinRule cannot handle Join of Project of
comment|// MedMdrClassExtentRel, only naked MedMdrClassExtentRel.
comment|// So, disable trimming.
name|fieldsUsed
operator|=
name|ImmutableBitSet
operator|.
name|range
argument_list|(
name|input
operator|.
name|getRowType
argument_list|()
operator|.
name|getFieldCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|final
name|ImmutableList
argument_list|<
name|RelCollation
argument_list|>
name|collations
init|=
name|RelMetadataQuery
operator|.
name|collations
argument_list|(
name|input
argument_list|)
decl_stmt|;
for|for
control|(
name|RelCollation
name|collation
range|:
name|collations
control|)
block|{
for|for
control|(
name|RelFieldCollation
name|fieldCollation
range|:
name|collation
operator|.
name|getFieldCollations
argument_list|()
control|)
block|{
name|fieldsUsed
operator|=
name|fieldsUsed
operator|.
name|set
argument_list|(
name|fieldCollation
operator|.
name|getFieldIndex
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|dispatchTrimFields
argument_list|(
name|input
argument_list|,
name|fieldsUsed
argument_list|,
name|extraFields
argument_list|)
return|;
block|}
block|}
end_class

end_unit

