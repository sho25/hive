begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|avro
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|file
operator|.
name|DataFileWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|generic
operator|.
name|GenericRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|FSRecordWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|avro
operator|.
name|AvroGenericRecordWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Writable
import|;
end_import

begin_comment
comment|/**  * Write an Avro GenericRecord to an Avro data file.  */
end_comment

begin_class
specifier|public
class|class
name|AvroGenericRecordWriter
implements|implements
name|FSRecordWriter
block|{
specifier|final
specifier|private
name|DataFileWriter
argument_list|<
name|GenericRecord
argument_list|>
name|dfw
decl_stmt|;
specifier|public
name|AvroGenericRecordWriter
parameter_list|(
name|DataFileWriter
argument_list|<
name|GenericRecord
argument_list|>
name|dfw
parameter_list|)
block|{
name|this
operator|.
name|dfw
operator|=
name|dfw
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
name|Writable
name|writable
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|!
operator|(
name|writable
operator|instanceof
name|AvroGenericRecordWritable
operator|)
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Expecting instance of AvroGenericRecordWritable, "
operator|+
literal|"but received"
operator|+
name|writable
operator|.
name|getClass
argument_list|()
operator|.
name|getCanonicalName
argument_list|()
argument_list|)
throw|;
block|}
name|AvroGenericRecordWritable
name|r
init|=
operator|(
name|AvroGenericRecordWritable
operator|)
name|writable
decl_stmt|;
name|dfw
operator|.
name|append
argument_list|(
name|r
operator|.
name|getRecord
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|(
name|boolean
name|abort
parameter_list|)
throws|throws
name|IOException
block|{
name|dfw
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

