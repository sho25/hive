begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|WritableComparable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * Gives the Record identifer information for the current record.  */
end_comment

begin_class
specifier|public
class|class
name|RecordIdentifier
implements|implements
name|WritableComparable
argument_list|<
name|RecordIdentifier
argument_list|>
block|{
specifier|private
name|long
name|transactionId
decl_stmt|;
specifier|private
name|int
name|bucketId
decl_stmt|;
specifier|private
name|long
name|rowId
decl_stmt|;
specifier|public
name|RecordIdentifier
parameter_list|()
block|{   }
specifier|public
name|RecordIdentifier
parameter_list|(
name|long
name|transactionId
parameter_list|,
name|int
name|bucket
parameter_list|,
name|long
name|rowId
parameter_list|)
block|{
name|this
operator|.
name|transactionId
operator|=
name|transactionId
expr_stmt|;
name|this
operator|.
name|bucketId
operator|=
name|bucket
expr_stmt|;
name|this
operator|.
name|rowId
operator|=
name|rowId
expr_stmt|;
block|}
comment|/**    * Set the identifier.    * @param transactionId the transaction id    * @param bucketId the bucket id    * @param rowId the row id    */
specifier|public
name|void
name|setValues
parameter_list|(
name|long
name|transactionId
parameter_list|,
name|int
name|bucketId
parameter_list|,
name|long
name|rowId
parameter_list|)
block|{
name|this
operator|.
name|transactionId
operator|=
name|transactionId
expr_stmt|;
name|this
operator|.
name|bucketId
operator|=
name|bucketId
expr_stmt|;
name|this
operator|.
name|rowId
operator|=
name|rowId
expr_stmt|;
block|}
comment|/**    * Set this object to match the given object.    * @param other the object to copy from    */
specifier|public
name|void
name|set
parameter_list|(
name|RecordIdentifier
name|other
parameter_list|)
block|{
name|this
operator|.
name|transactionId
operator|=
name|other
operator|.
name|transactionId
expr_stmt|;
name|this
operator|.
name|bucketId
operator|=
name|other
operator|.
name|bucketId
expr_stmt|;
name|this
operator|.
name|rowId
operator|=
name|other
operator|.
name|rowId
expr_stmt|;
block|}
specifier|public
name|void
name|setRowId
parameter_list|(
name|long
name|rowId
parameter_list|)
block|{
name|this
operator|.
name|rowId
operator|=
name|rowId
expr_stmt|;
block|}
comment|/**    * What was the original transaction id for the last row?    * @return the transaction id    */
specifier|public
name|long
name|getTransactionId
parameter_list|()
block|{
return|return
name|transactionId
return|;
block|}
comment|/**    * What was the original bucket id for the last row?    * @return the bucket id    */
specifier|public
name|int
name|getBucketId
parameter_list|()
block|{
return|return
name|bucketId
return|;
block|}
comment|/**    * What was the original row id for the last row?    * @return the row id    */
specifier|public
name|long
name|getRowId
parameter_list|()
block|{
return|return
name|rowId
return|;
block|}
specifier|protected
name|int
name|compareToInternal
parameter_list|(
name|RecordIdentifier
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
literal|null
condition|)
block|{
return|return
operator|-
literal|1
return|;
block|}
if|if
condition|(
name|transactionId
operator|!=
name|other
operator|.
name|transactionId
condition|)
block|{
return|return
name|transactionId
operator|<
name|other
operator|.
name|transactionId
condition|?
operator|-
literal|1
else|:
literal|1
return|;
block|}
if|if
condition|(
name|bucketId
operator|!=
name|other
operator|.
name|bucketId
condition|)
block|{
return|return
name|bucketId
operator|<
name|other
operator|.
name|bucketId
condition|?
operator|-
literal|1
else|:
literal|1
return|;
block|}
if|if
condition|(
name|rowId
operator|!=
name|other
operator|.
name|rowId
condition|)
block|{
return|return
name|rowId
operator|<
name|other
operator|.
name|rowId
condition|?
operator|-
literal|1
else|:
literal|1
return|;
block|}
return|return
literal|0
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|compareTo
parameter_list|(
name|RecordIdentifier
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|.
name|getClass
argument_list|()
operator|!=
name|RecordIdentifier
operator|.
name|class
condition|)
block|{
return|return
operator|-
name|other
operator|.
name|compareTo
argument_list|(
name|this
argument_list|)
return|;
block|}
return|return
name|compareToInternal
argument_list|(
name|other
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
name|DataOutput
name|dataOutput
parameter_list|)
throws|throws
name|IOException
block|{
name|dataOutput
operator|.
name|writeLong
argument_list|(
name|transactionId
argument_list|)
expr_stmt|;
name|dataOutput
operator|.
name|writeInt
argument_list|(
name|bucketId
argument_list|)
expr_stmt|;
name|dataOutput
operator|.
name|writeLong
argument_list|(
name|rowId
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|readFields
parameter_list|(
name|DataInput
name|dataInput
parameter_list|)
throws|throws
name|IOException
block|{
name|transactionId
operator|=
name|dataInput
operator|.
name|readLong
argument_list|()
expr_stmt|;
name|bucketId
operator|=
name|dataInput
operator|.
name|readInt
argument_list|()
expr_stmt|;
name|rowId
operator|=
name|dataInput
operator|.
name|readLong
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
literal|null
operator|||
name|other
operator|.
name|getClass
argument_list|()
operator|!=
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
name|RecordIdentifier
name|oth
init|=
operator|(
name|RecordIdentifier
operator|)
name|other
decl_stmt|;
return|return
name|oth
operator|.
name|transactionId
operator|==
name|transactionId
operator|&&
name|oth
operator|.
name|bucketId
operator|==
name|bucketId
operator|&&
name|oth
operator|.
name|rowId
operator|==
name|rowId
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"{originalTxn: "
operator|+
name|transactionId
operator|+
literal|", bucket: "
operator|+
name|bucketId
operator|+
literal|", row: "
operator|+
name|getRowId
argument_list|()
operator|+
literal|"}"
return|;
block|}
block|}
end_class

end_unit

