begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
package|;
end_package

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Timestamp
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|type
operator|.
name|HiveDecimal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspectorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|StructField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|StructObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|BinaryObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|StringObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|BytesWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestName
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_class
specifier|public
class|class
name|TestOrcSerDeStats
block|{
specifier|public
specifier|static
class|class
name|ListStruct
block|{
name|List
argument_list|<
name|String
argument_list|>
name|list1
decl_stmt|;
specifier|public
name|ListStruct
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|l1
parameter_list|)
block|{
name|this
operator|.
name|list1
operator|=
name|l1
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|MapStruct
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Double
argument_list|>
name|map1
decl_stmt|;
specifier|public
name|MapStruct
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Double
argument_list|>
name|m1
parameter_list|)
block|{
name|this
operator|.
name|map1
operator|=
name|m1
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|SimpleStruct
block|{
name|BytesWritable
name|bytes1
decl_stmt|;
name|Text
name|string1
decl_stmt|;
name|SimpleStruct
parameter_list|(
name|BytesWritable
name|b1
parameter_list|,
name|String
name|s1
parameter_list|)
block|{
name|this
operator|.
name|bytes1
operator|=
name|b1
expr_stmt|;
if|if
condition|(
name|s1
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|string1
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|string1
operator|=
operator|new
name|Text
argument_list|(
name|s1
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
specifier|static
class|class
name|InnerStruct
block|{
name|int
name|int1
decl_stmt|;
name|Text
name|string1
init|=
operator|new
name|Text
argument_list|()
decl_stmt|;
name|InnerStruct
parameter_list|(
name|int
name|int1
parameter_list|,
name|String
name|string1
parameter_list|)
block|{
name|this
operator|.
name|int1
operator|=
name|int1
expr_stmt|;
name|this
operator|.
name|string1
operator|.
name|set
argument_list|(
name|string1
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|MiddleStruct
block|{
name|List
argument_list|<
name|InnerStruct
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|InnerStruct
argument_list|>
argument_list|()
decl_stmt|;
name|MiddleStruct
parameter_list|(
name|InnerStruct
modifier|...
name|items
parameter_list|)
block|{
name|list
operator|.
name|clear
argument_list|()
expr_stmt|;
for|for
control|(
name|InnerStruct
name|item
range|:
name|items
control|)
block|{
name|list
operator|.
name|add
argument_list|(
name|item
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
specifier|static
class|class
name|BigRow
block|{
name|Boolean
name|boolean1
decl_stmt|;
name|Byte
name|byte1
decl_stmt|;
name|Short
name|short1
decl_stmt|;
name|Integer
name|int1
decl_stmt|;
name|Long
name|long1
decl_stmt|;
name|Float
name|float1
decl_stmt|;
name|Double
name|double1
decl_stmt|;
name|BytesWritable
name|bytes1
decl_stmt|;
name|Text
name|string1
decl_stmt|;
name|List
argument_list|<
name|InnerStruct
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|InnerStruct
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|Text
argument_list|,
name|InnerStruct
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|Text
argument_list|,
name|InnerStruct
argument_list|>
argument_list|()
decl_stmt|;
name|Timestamp
name|ts
decl_stmt|;
name|HiveDecimal
name|decimal1
decl_stmt|;
name|MiddleStruct
name|middle
decl_stmt|;
name|BigRow
parameter_list|(
name|Boolean
name|b1
parameter_list|,
name|Byte
name|b2
parameter_list|,
name|Short
name|s1
parameter_list|,
name|Integer
name|i1
parameter_list|,
name|Long
name|l1
parameter_list|,
name|Float
name|f1
parameter_list|,
name|Double
name|d1
parameter_list|,
name|BytesWritable
name|b3
parameter_list|,
name|String
name|s2
parameter_list|,
name|MiddleStruct
name|m1
parameter_list|,
name|List
argument_list|<
name|InnerStruct
argument_list|>
name|l2
parameter_list|,
name|Map
argument_list|<
name|Text
argument_list|,
name|InnerStruct
argument_list|>
name|m2
parameter_list|,
name|Timestamp
name|ts1
parameter_list|,
name|HiveDecimal
name|dec1
parameter_list|)
block|{
name|this
operator|.
name|boolean1
operator|=
name|b1
expr_stmt|;
name|this
operator|.
name|byte1
operator|=
name|b2
expr_stmt|;
name|this
operator|.
name|short1
operator|=
name|s1
expr_stmt|;
name|this
operator|.
name|int1
operator|=
name|i1
expr_stmt|;
name|this
operator|.
name|long1
operator|=
name|l1
expr_stmt|;
name|this
operator|.
name|float1
operator|=
name|f1
expr_stmt|;
name|this
operator|.
name|double1
operator|=
name|d1
expr_stmt|;
name|this
operator|.
name|bytes1
operator|=
name|b3
expr_stmt|;
if|if
condition|(
name|s2
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|string1
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|string1
operator|=
operator|new
name|Text
argument_list|(
name|s2
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|middle
operator|=
name|m1
expr_stmt|;
name|this
operator|.
name|list
operator|=
name|l2
expr_stmt|;
name|this
operator|.
name|map
operator|=
name|m2
expr_stmt|;
name|this
operator|.
name|ts
operator|=
name|ts1
expr_stmt|;
name|this
operator|.
name|decimal1
operator|=
name|dec1
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|InnerStruct
name|inner
parameter_list|(
name|int
name|i
parameter_list|,
name|String
name|s
parameter_list|)
block|{
return|return
operator|new
name|InnerStruct
argument_list|(
name|i
argument_list|,
name|s
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|Map
argument_list|<
name|Text
argument_list|,
name|InnerStruct
argument_list|>
name|map
parameter_list|(
name|InnerStruct
modifier|...
name|items
parameter_list|)
block|{
name|Map
argument_list|<
name|Text
argument_list|,
name|InnerStruct
argument_list|>
name|result
init|=
operator|new
name|HashMap
argument_list|<
name|Text
argument_list|,
name|InnerStruct
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|InnerStruct
name|i
range|:
name|items
control|)
block|{
name|result
operator|.
name|put
argument_list|(
operator|new
name|Text
argument_list|(
name|i
operator|.
name|string1
argument_list|)
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
specifier|private
specifier|static
name|List
argument_list|<
name|InnerStruct
argument_list|>
name|list
parameter_list|(
name|InnerStruct
modifier|...
name|items
parameter_list|)
block|{
name|List
argument_list|<
name|InnerStruct
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<
name|InnerStruct
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|InnerStruct
name|s
range|:
name|items
control|)
block|{
name|result
operator|.
name|add
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
specifier|private
specifier|static
name|BytesWritable
name|bytes
parameter_list|(
name|int
modifier|...
name|items
parameter_list|)
block|{
name|BytesWritable
name|result
init|=
operator|new
name|BytesWritable
argument_list|()
decl_stmt|;
name|result
operator|.
name|setSize
argument_list|(
name|items
operator|.
name|length
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|items
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
name|result
operator|.
name|getBytes
argument_list|()
index|[
name|i
index|]
operator|=
operator|(
name|byte
operator|)
name|items
index|[
name|i
index|]
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
name|Path
name|workDir
init|=
operator|new
name|Path
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"test.tmp.dir"
argument_list|,
literal|"target"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"test"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"tmp"
argument_list|)
argument_list|)
decl_stmt|;
name|Configuration
name|conf
decl_stmt|;
name|FileSystem
name|fs
decl_stmt|;
name|Path
name|testFilePath
decl_stmt|;
annotation|@
name|Rule
specifier|public
name|TestName
name|testCaseName
init|=
operator|new
name|TestName
argument_list|()
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|openFileSystem
parameter_list|()
throws|throws
name|Exception
block|{
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|fs
operator|=
name|FileSystem
operator|.
name|getLocal
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|testFilePath
operator|=
operator|new
name|Path
argument_list|(
name|workDir
argument_list|,
literal|"TestOrcSerDeStats."
operator|+
name|testCaseName
operator|.
name|getMethodName
argument_list|()
operator|+
literal|".orc"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|delete
argument_list|(
name|testFilePath
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStringAndBinaryStatistics
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcSerDeStats
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|SimpleStruct
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
argument_list|)
decl_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|SimpleStruct
argument_list|(
name|bytes
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|,
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|SimpleStruct
argument_list|(
name|bytes
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|SimpleStruct
argument_list|(
name|bytes
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|)
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|SimpleStruct
argument_list|(
literal|null
argument_list|,
literal|"hi"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|writer
operator|.
name|getNumberOfRows
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|273
argument_list|,
name|writer
operator|.
name|getRawDataSize
argument_list|()
argument_list|)
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|fs
argument_list|,
name|testFilePath
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|reader
operator|.
name|getNumberOfRows
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|273
argument_list|,
name|reader
operator|.
name|getRawDataSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|15
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"bytes1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|258
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"string1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|273
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"bytes1"
argument_list|,
literal|"string1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// check the stats
name|ColumnStatistics
index|[]
name|stats
init|=
name|reader
operator|.
name|getStatistics
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|stats
index|[
literal|0
index|]
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 4"
argument_list|,
name|stats
index|[
literal|0
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|stats
index|[
literal|1
index|]
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|15
argument_list|,
operator|(
operator|(
name|BinaryColumnStatistics
operator|)
name|stats
index|[
literal|1
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 3 sum: 15"
argument_list|,
name|stats
index|[
literal|1
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|stats
index|[
literal|2
index|]
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bar"
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|stats
index|[
literal|2
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hi"
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|stats
index|[
literal|2
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|8
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|stats
index|[
literal|2
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 3 min: bar max: hi sum: 8"
argument_list|,
name|stats
index|[
literal|2
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|// check the inspectors
name|StructObjectInspector
name|readerInspector
init|=
operator|(
name|StructObjectInspector
operator|)
name|reader
operator|.
name|getObjectInspector
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|ObjectInspector
operator|.
name|Category
operator|.
name|STRUCT
argument_list|,
name|readerInspector
operator|.
name|getCategory
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"struct<bytes1:binary,string1:string>"
argument_list|,
name|readerInspector
operator|.
name|getTypeName
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|StructField
argument_list|>
name|fields
init|=
name|readerInspector
operator|.
name|getAllStructFieldRefs
argument_list|()
decl_stmt|;
name|BinaryObjectInspector
name|bi
init|=
operator|(
name|BinaryObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"bytes1"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|StringObjectInspector
name|st
init|=
operator|(
name|StringObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"string1"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|Object
name|row
init|=
name|rows
operator|.
name|next
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|row
argument_list|)
expr_stmt|;
comment|// check the contents of the first row
name|assertEquals
argument_list|(
name|bytes
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|,
name|bi
operator|.
name|getPrimitiveWritableObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"foo"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// check the contents of second row
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rows
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bytes
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|,
name|bi
operator|.
name|getPrimitiveWritableObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bar"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// check the contents of second row
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rows
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bytes
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|)
argument_list|,
name|bi
operator|.
name|getPrimitiveWritableObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// check the contents of second row
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rows
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|bi
operator|.
name|getPrimitiveWritableObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hi"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// handle the close up
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rows
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|rows
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOrcSerDeStatsList
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcSerDeStats
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|ListStruct
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|row
init|=
literal|0
init|;
name|row
operator|<
literal|5000
condition|;
name|row
operator|++
control|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|test
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
block|{
name|test
operator|.
name|add
argument_list|(
literal|"hi"
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|ListStruct
argument_list|(
name|test
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|5000
argument_list|,
name|writer
operator|.
name|getNumberOfRows
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|430000000
argument_list|,
name|writer
operator|.
name|getRawDataSize
argument_list|()
argument_list|)
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|fs
argument_list|,
name|testFilePath
argument_list|)
decl_stmt|;
comment|// stats from reader
name|assertEquals
argument_list|(
literal|5000
argument_list|,
name|reader
operator|.
name|getNumberOfRows
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|430000000
argument_list|,
name|reader
operator|.
name|getRawDataSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|430000000
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"list1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOrcSerDeStatsMap
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcSerDeStats
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|MapStruct
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|row
init|=
literal|0
init|;
name|row
operator|<
literal|1000
condition|;
name|row
operator|++
control|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Double
argument_list|>
name|test
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Double
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|test
operator|.
name|put
argument_list|(
literal|"hi"
operator|+
name|i
argument_list|,
literal|2.0
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|MapStruct
argument_list|(
name|test
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// stats from writer
name|assertEquals
argument_list|(
literal|1000
argument_list|,
name|writer
operator|.
name|getNumberOfRows
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|950000
argument_list|,
name|writer
operator|.
name|getRawDataSize
argument_list|()
argument_list|)
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|fs
argument_list|,
name|testFilePath
argument_list|)
decl_stmt|;
comment|// stats from reader
name|assertEquals
argument_list|(
literal|1000
argument_list|,
name|reader
operator|.
name|getNumberOfRows
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|950000
argument_list|,
name|reader
operator|.
name|getRawDataSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|950000
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"map1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOrcSerDeStatsSimpleWithNulls
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcSerDeStats
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|SimpleStruct
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|row
init|=
literal|0
init|;
name|row
operator|<
literal|1000
condition|;
name|row
operator|++
control|)
block|{
if|if
condition|(
name|row
operator|%
literal|2
operator|==
literal|0
condition|)
block|{
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|SimpleStruct
argument_list|(
operator|new
name|BytesWritable
argument_list|(
operator|new
name|byte
index|[]
block|{
literal|1
block|,
literal|2
block|,
literal|3
block|}
argument_list|)
argument_list|,
literal|"hi"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|writer
operator|.
name|addRow
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// stats from writer
name|assertEquals
argument_list|(
literal|1000
argument_list|,
name|writer
operator|.
name|getNumberOfRows
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|44500
argument_list|,
name|writer
operator|.
name|getRawDataSize
argument_list|()
argument_list|)
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|fs
argument_list|,
name|testFilePath
argument_list|)
decl_stmt|;
comment|// stats from reader
name|assertEquals
argument_list|(
literal|1000
argument_list|,
name|reader
operator|.
name|getNumberOfRows
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|44500
argument_list|,
name|reader
operator|.
name|getRawDataSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1500
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"bytes1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|43000
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"string1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|44500
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"bytes1"
argument_list|,
literal|"string1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOrcSerDeStatsComplex
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcSerDeStats
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|BigRow
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
argument_list|)
decl_stmt|;
comment|// 1 + 2 + 4 + 8 + 4 + 8 + 5 + 2 + 4 + 3 + 4 + 4 + 4 + 4 + 4 + 3 = 64
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|BigRow
argument_list|(
literal|false
argument_list|,
operator|(
name|byte
operator|)
literal|1
argument_list|,
operator|(
name|short
operator|)
literal|1024
argument_list|,
literal|65536
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|,
operator|(
name|float
operator|)
literal|1.0
argument_list|,
operator|-
literal|15.0
argument_list|,
name|bytes
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|,
literal|"hi"
argument_list|,
operator|new
name|MiddleStruct
argument_list|(
name|inner
argument_list|(
literal|1
argument_list|,
literal|"bye"
argument_list|)
argument_list|,
name|inner
argument_list|(
literal|2
argument_list|,
literal|"sigh"
argument_list|)
argument_list|)
argument_list|,
name|list
argument_list|(
name|inner
argument_list|(
literal|3
argument_list|,
literal|"good"
argument_list|)
argument_list|,
name|inner
argument_list|(
literal|4
argument_list|,
literal|"bad"
argument_list|)
argument_list|)
argument_list|,
name|map
argument_list|()
argument_list|,
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2000-03-12 15:00:00"
argument_list|)
argument_list|,
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"12345678.6547456"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// 1 + 2 + 4 + 8 + 4 + 8 + 3 + 4 + 3 + 4 + 4 + 4 + 3 + 4 + 2 + 4 + 3 + 5 + 4 + 5 + 7 + 4 + 7 =
comment|// 97
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|BigRow
argument_list|(
literal|true
argument_list|,
operator|(
name|byte
operator|)
literal|100
argument_list|,
operator|(
name|short
operator|)
literal|2048
argument_list|,
literal|65536
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|,
operator|(
name|float
operator|)
literal|2.0
argument_list|,
operator|-
literal|5.0
argument_list|,
name|bytes
argument_list|()
argument_list|,
literal|"bye"
argument_list|,
operator|new
name|MiddleStruct
argument_list|(
name|inner
argument_list|(
literal|1
argument_list|,
literal|"bye"
argument_list|)
argument_list|,
name|inner
argument_list|(
literal|2
argument_list|,
literal|"sigh"
argument_list|)
argument_list|)
argument_list|,
name|list
argument_list|(
name|inner
argument_list|(
literal|100000000
argument_list|,
literal|"cat"
argument_list|)
argument_list|,
name|inner
argument_list|(
operator|-
literal|100000
argument_list|,
literal|"in"
argument_list|)
argument_list|,
name|inner
argument_list|(
literal|1234
argument_list|,
literal|"hat"
argument_list|)
argument_list|)
argument_list|,
name|map
argument_list|(
name|inner
argument_list|(
literal|5
argument_list|,
literal|"chani"
argument_list|)
argument_list|,
name|inner
argument_list|(
literal|1
argument_list|,
literal|"mauddib"
argument_list|)
argument_list|)
argument_list|,
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2000-03-11 15:00:00"
argument_list|)
argument_list|,
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"12345678.6547452"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|long
name|rowCount
init|=
name|writer
operator|.
name|getNumberOfRows
argument_list|()
decl_stmt|;
name|long
name|rawDataSize
init|=
name|writer
operator|.
name|getRawDataSize
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1740
argument_list|,
name|rawDataSize
argument_list|)
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|fs
argument_list|,
name|testFilePath
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|reader
operator|.
name|getNumberOfRows
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1740
argument_list|,
name|reader
operator|.
name|getRawDataSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|8
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"boolean1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|8
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"byte1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|8
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"short1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|8
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"int1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|16
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"long1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|8
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"float1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|16
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"double1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"bytes1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|172
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"string1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|455
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"list"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|368
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"map"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|364
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"middle"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|80
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"ts"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|224
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"decimal1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|88
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"ts"
argument_list|,
literal|"int1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1195
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"middle"
argument_list|,
literal|"list"
argument_list|,
literal|"map"
argument_list|,
literal|"float1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|185
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"bytes1"
argument_list|,
literal|"byte1"
argument_list|,
literal|"string1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|rawDataSize
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"boolean1"
argument_list|,
literal|"byte1"
argument_list|,
literal|"short1"
argument_list|,
literal|"int1"
argument_list|,
literal|"long1"
argument_list|,
literal|"float1"
argument_list|,
literal|"double1"
argument_list|,
literal|"bytes1"
argument_list|,
literal|"string1"
argument_list|,
literal|"list"
argument_list|,
literal|"map"
argument_list|,
literal|"middle"
argument_list|,
literal|"ts"
argument_list|,
literal|"decimal1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// check the stats
name|ColumnStatistics
index|[]
name|stats
init|=
name|reader
operator|.
name|getStatistics
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|stats
index|[
literal|1
index|]
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
operator|(
operator|(
name|BooleanColumnStatistics
operator|)
name|stats
index|[
literal|1
index|]
operator|)
operator|.
name|getFalseCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
operator|(
operator|(
name|BooleanColumnStatistics
operator|)
name|stats
index|[
literal|1
index|]
operator|)
operator|.
name|getTrueCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 2 true: 1"
argument_list|,
name|stats
index|[
literal|1
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2048
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|3
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1024
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|3
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|3
index|]
operator|)
operator|.
name|isSumDefined
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3072
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|3
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 2 min: 1024 max: 2048 sum: 3072"
argument_list|,
name|stats
index|[
literal|3
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|5
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|5
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|5
index|]
operator|)
operator|.
name|isSumDefined
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 2 min: 9223372036854775807 max: 9223372036854775807"
argument_list|,
name|stats
index|[
literal|5
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|15.0
argument_list|,
operator|(
operator|(
name|DoubleColumnStatistics
operator|)
name|stats
index|[
literal|7
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|5.0
argument_list|,
operator|(
operator|(
name|DoubleColumnStatistics
operator|)
name|stats
index|[
literal|7
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|20.0
argument_list|,
operator|(
operator|(
name|DoubleColumnStatistics
operator|)
name|stats
index|[
literal|7
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|,
literal|0.00001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 2 min: -15.0 max: -5.0 sum: -20.0"
argument_list|,
name|stats
index|[
literal|7
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 2 min: bye max: hi sum: 5"
argument_list|,
name|stats
index|[
literal|9
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOrcSerDeStatsComplexOldFormat
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcSerDeStats
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|BigRow
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|version
argument_list|(
name|OrcFile
operator|.
name|Version
operator|.
name|V_0_11
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
argument_list|)
decl_stmt|;
comment|// 1 + 2 + 4 + 8 + 4 + 8 + 5 + 2 + 4 + 3 + 4 + 4 + 4 + 4 + 4 + 3 = 64
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|BigRow
argument_list|(
literal|false
argument_list|,
operator|(
name|byte
operator|)
literal|1
argument_list|,
operator|(
name|short
operator|)
literal|1024
argument_list|,
literal|65536
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|,
operator|(
name|float
operator|)
literal|1.0
argument_list|,
operator|-
literal|15.0
argument_list|,
name|bytes
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|,
literal|"hi"
argument_list|,
operator|new
name|MiddleStruct
argument_list|(
name|inner
argument_list|(
literal|1
argument_list|,
literal|"bye"
argument_list|)
argument_list|,
name|inner
argument_list|(
literal|2
argument_list|,
literal|"sigh"
argument_list|)
argument_list|)
argument_list|,
name|list
argument_list|(
name|inner
argument_list|(
literal|3
argument_list|,
literal|"good"
argument_list|)
argument_list|,
name|inner
argument_list|(
literal|4
argument_list|,
literal|"bad"
argument_list|)
argument_list|)
argument_list|,
name|map
argument_list|()
argument_list|,
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2000-03-12 15:00:00"
argument_list|)
argument_list|,
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"12345678.6547456"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// 1 + 2 + 4 + 8 + 4 + 8 + 3 + 4 + 3 + 4 + 4 + 4 + 3 + 4 + 2 + 4 + 3 + 5 + 4 + 5 + 7 + 4 + 7 =
comment|// 97
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|BigRow
argument_list|(
literal|true
argument_list|,
operator|(
name|byte
operator|)
literal|100
argument_list|,
operator|(
name|short
operator|)
literal|2048
argument_list|,
literal|65536
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|,
operator|(
name|float
operator|)
literal|2.0
argument_list|,
operator|-
literal|5.0
argument_list|,
name|bytes
argument_list|()
argument_list|,
literal|"bye"
argument_list|,
operator|new
name|MiddleStruct
argument_list|(
name|inner
argument_list|(
literal|1
argument_list|,
literal|"bye"
argument_list|)
argument_list|,
name|inner
argument_list|(
literal|2
argument_list|,
literal|"sigh"
argument_list|)
argument_list|)
argument_list|,
name|list
argument_list|(
name|inner
argument_list|(
literal|100000000
argument_list|,
literal|"cat"
argument_list|)
argument_list|,
name|inner
argument_list|(
operator|-
literal|100000
argument_list|,
literal|"in"
argument_list|)
argument_list|,
name|inner
argument_list|(
literal|1234
argument_list|,
literal|"hat"
argument_list|)
argument_list|)
argument_list|,
name|map
argument_list|(
name|inner
argument_list|(
literal|5
argument_list|,
literal|"chani"
argument_list|)
argument_list|,
name|inner
argument_list|(
literal|1
argument_list|,
literal|"mauddib"
argument_list|)
argument_list|)
argument_list|,
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2000-03-11 15:00:00"
argument_list|)
argument_list|,
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"12345678.6547452"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|long
name|rowCount
init|=
name|writer
operator|.
name|getNumberOfRows
argument_list|()
decl_stmt|;
name|long
name|rawDataSize
init|=
name|writer
operator|.
name|getRawDataSize
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1740
argument_list|,
name|rawDataSize
argument_list|)
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|fs
argument_list|,
name|testFilePath
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|reader
operator|.
name|getNumberOfRows
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1740
argument_list|,
name|reader
operator|.
name|getRawDataSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|8
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"boolean1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|8
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"byte1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|8
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"short1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|8
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"int1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|16
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"long1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|8
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"float1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|16
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"double1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"bytes1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|172
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"string1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|455
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"list"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|368
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"map"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|364
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"middle"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|80
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"ts"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|224
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"decimal1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|88
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"ts"
argument_list|,
literal|"int1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1195
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"middle"
argument_list|,
literal|"list"
argument_list|,
literal|"map"
argument_list|,
literal|"float1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|185
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"bytes1"
argument_list|,
literal|"byte1"
argument_list|,
literal|"string1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|rawDataSize
argument_list|,
name|reader
operator|.
name|getRawDataSizeOfColumns
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"boolean1"
argument_list|,
literal|"byte1"
argument_list|,
literal|"short1"
argument_list|,
literal|"int1"
argument_list|,
literal|"long1"
argument_list|,
literal|"float1"
argument_list|,
literal|"double1"
argument_list|,
literal|"bytes1"
argument_list|,
literal|"string1"
argument_list|,
literal|"list"
argument_list|,
literal|"map"
argument_list|,
literal|"middle"
argument_list|,
literal|"ts"
argument_list|,
literal|"decimal1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// check the stats
name|ColumnStatistics
index|[]
name|stats
init|=
name|reader
operator|.
name|getStatistics
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|stats
index|[
literal|1
index|]
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
operator|(
operator|(
name|BooleanColumnStatistics
operator|)
name|stats
index|[
literal|1
index|]
operator|)
operator|.
name|getFalseCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
operator|(
operator|(
name|BooleanColumnStatistics
operator|)
name|stats
index|[
literal|1
index|]
operator|)
operator|.
name|getTrueCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 2 true: 1"
argument_list|,
name|stats
index|[
literal|1
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2048
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|3
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1024
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|3
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|3
index|]
operator|)
operator|.
name|isSumDefined
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3072
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|3
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 2 min: 1024 max: 2048 sum: 3072"
argument_list|,
name|stats
index|[
literal|3
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|5
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|5
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|5
index|]
operator|)
operator|.
name|isSumDefined
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 2 min: 9223372036854775807 max: 9223372036854775807"
argument_list|,
name|stats
index|[
literal|5
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|15.0
argument_list|,
operator|(
operator|(
name|DoubleColumnStatistics
operator|)
name|stats
index|[
literal|7
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|5.0
argument_list|,
operator|(
operator|(
name|DoubleColumnStatistics
operator|)
name|stats
index|[
literal|7
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|20.0
argument_list|,
operator|(
operator|(
name|DoubleColumnStatistics
operator|)
name|stats
index|[
literal|7
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|,
literal|0.00001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 2 min: -15.0 max: -5.0 sum: -20.0"
argument_list|,
name|stats
index|[
literal|7
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
operator|(
operator|(
name|BinaryColumnStatistics
operator|)
name|stats
index|[
literal|8
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 2 sum: 5"
argument_list|,
name|stats
index|[
literal|8
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bye"
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|stats
index|[
literal|9
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hi"
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|stats
index|[
literal|9
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|stats
index|[
literal|9
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 2 min: bye max: hi sum: 5"
argument_list|,
name|stats
index|[
literal|9
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|ClassCastException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testSerdeStatsOldFormat
parameter_list|()
throws|throws
name|Exception
block|{
name|Path
name|resourceDir
init|=
operator|new
name|Path
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"test.build.resources"
argument_list|,
literal|"ql"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"src"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"test"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"resources"
argument_list|)
argument_list|)
decl_stmt|;
name|Path
name|oldFilePath
init|=
operator|new
name|Path
argument_list|(
name|resourceDir
argument_list|,
literal|"orc-file-11-format.orc"
argument_list|)
decl_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|fs
argument_list|,
name|oldFilePath
argument_list|)
decl_stmt|;
name|int
name|stripeCount
init|=
literal|0
decl_stmt|;
name|int
name|rowCount
init|=
literal|0
decl_stmt|;
name|long
name|currentOffset
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|StripeInformation
name|stripe
range|:
name|reader
operator|.
name|getStripes
argument_list|()
control|)
block|{
name|stripeCount
operator|+=
literal|1
expr_stmt|;
name|rowCount
operator|+=
name|stripe
operator|.
name|getNumberOfRows
argument_list|()
expr_stmt|;
if|if
condition|(
name|currentOffset
operator|<
literal|0
condition|)
block|{
name|currentOffset
operator|=
name|stripe
operator|.
name|getOffset
argument_list|()
operator|+
name|stripe
operator|.
name|getIndexLength
argument_list|()
operator|+
name|stripe
operator|.
name|getDataLength
argument_list|()
operator|+
name|stripe
operator|.
name|getFooterLength
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
name|currentOffset
argument_list|,
name|stripe
operator|.
name|getOffset
argument_list|()
argument_list|)
expr_stmt|;
name|currentOffset
operator|+=
name|stripe
operator|.
name|getIndexLength
argument_list|()
operator|+
name|stripe
operator|.
name|getDataLength
argument_list|()
operator|+
name|stripe
operator|.
name|getFooterLength
argument_list|()
expr_stmt|;
block|}
block|}
name|assertEquals
argument_list|(
name|reader
operator|.
name|getNumberOfRows
argument_list|()
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6300000
argument_list|,
name|reader
operator|.
name|getRawDataSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|stripeCount
argument_list|)
expr_stmt|;
comment|// check the stats
name|ColumnStatistics
index|[]
name|stats
init|=
name|reader
operator|.
name|getStatistics
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|7500
argument_list|,
name|stats
index|[
literal|1
index|]
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3750
argument_list|,
operator|(
operator|(
name|BooleanColumnStatistics
operator|)
name|stats
index|[
literal|1
index|]
operator|)
operator|.
name|getFalseCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3750
argument_list|,
operator|(
operator|(
name|BooleanColumnStatistics
operator|)
name|stats
index|[
literal|1
index|]
operator|)
operator|.
name|getTrueCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 7500 true: 3750"
argument_list|,
name|stats
index|[
literal|1
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2048
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|3
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1024
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|3
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|3
index|]
operator|)
operator|.
name|isSumDefined
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|11520000
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|3
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 7500 min: 1024 max: 2048 sum: 11520000"
argument_list|,
name|stats
index|[
literal|3
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|5
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|5
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|5
index|]
operator|)
operator|.
name|isSumDefined
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 7500 min: 9223372036854775807 max: 9223372036854775807"
argument_list|,
name|stats
index|[
literal|5
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|15.0
argument_list|,
operator|(
operator|(
name|DoubleColumnStatistics
operator|)
name|stats
index|[
literal|7
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|5.0
argument_list|,
operator|(
operator|(
name|DoubleColumnStatistics
operator|)
name|stats
index|[
literal|7
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|75000.0
argument_list|,
operator|(
operator|(
name|DoubleColumnStatistics
operator|)
name|stats
index|[
literal|7
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|,
literal|0.00001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 7500 min: -15.0 max: -5.0 sum: -75000.0"
argument_list|,
name|stats
index|[
literal|7
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bye"
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|stats
index|[
literal|9
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hi"
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|stats
index|[
literal|9
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|stats
index|[
literal|9
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 7500 min: bye max: hi sum: 0"
argument_list|,
name|stats
index|[
literal|9
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|// old orc format will not have binary statistics. toString() will show only
comment|// the general column statistics
name|assertEquals
argument_list|(
literal|"count: 7500"
argument_list|,
name|stats
index|[
literal|8
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|// since old orc format doesn't support binary statistics,
comment|// this should throw ClassCastException
name|assertEquals
argument_list|(
literal|5
argument_list|,
operator|(
operator|(
name|BinaryColumnStatistics
operator|)
name|stats
index|[
literal|8
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

