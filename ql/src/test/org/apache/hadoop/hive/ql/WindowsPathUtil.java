begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|Shell
import|;
end_import

begin_class
specifier|public
class|class
name|WindowsPathUtil
block|{
specifier|public
specifier|static
name|void
name|convertPathsFromWindowsToHdfs
parameter_list|(
name|HiveConf
name|conf
parameter_list|)
block|{
name|String
name|orgWarehouseDir
init|=
name|conf
operator|.
name|getVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTOREWAREHOUSE
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTOREWAREHOUSE
argument_list|,
name|getHdfsUriString
argument_list|(
name|orgWarehouseDir
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|orgTestTempDir
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"test.tmp.dir"
argument_list|)
decl_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"test.tmp.dir"
argument_list|,
name|getHdfsUriString
argument_list|(
name|orgTestTempDir
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|orgTestDataDir
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"test.src.data.dir"
argument_list|)
decl_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"test.src.data.dir"
argument_list|,
name|getHdfsUriString
argument_list|(
name|orgTestDataDir
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|orgScratchDir
init|=
name|conf
operator|.
name|getVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|SCRATCHDIR
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|SCRATCHDIR
argument_list|,
name|getHdfsUriString
argument_list|(
name|orgScratchDir
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|String
name|getHdfsUriString
parameter_list|(
name|String
name|uriStr
parameter_list|)
block|{
assert|assert
name|uriStr
operator|!=
literal|null
assert|;
if|if
condition|(
name|Shell
operator|.
name|WINDOWS
condition|)
block|{
comment|// If the URI conversion is from Windows to HDFS then replace the '\' with '/'
comment|// and remove the windows single drive letter& colon from absolute path.
return|return
name|uriStr
operator|.
name|replace
argument_list|(
literal|'\\'
argument_list|,
literal|'/'
argument_list|)
operator|.
name|replaceFirst
argument_list|(
literal|"/[c-zC-Z]:"
argument_list|,
literal|"/"
argument_list|)
operator|.
name|replaceFirst
argument_list|(
literal|"^[c-zC-Z]:"
argument_list|,
literal|""
argument_list|)
return|;
block|}
return|return
name|uriStr
return|;
block|}
block|}
end_class

end_unit

