begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|TestErrorMsg
block|{
annotation|@
name|Test
specifier|public
name|void
name|testUniqueErrorCode
parameter_list|()
block|{
name|Set
argument_list|<
name|Integer
argument_list|>
name|numbers
init|=
operator|new
name|HashSet
argument_list|<
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|ErrorMsg
name|err
range|:
name|ErrorMsg
operator|.
name|values
argument_list|()
control|)
block|{
name|int
name|code
init|=
name|err
operator|.
name|getErrorCode
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"duplicated error number "
operator|+
name|code
argument_list|,
name|numbers
operator|.
name|add
argument_list|(
name|code
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReverseMatch
parameter_list|()
block|{
name|testReverseMatch
argument_list|(
name|ErrorMsg
operator|.
name|OP_NOT_ALLOWED_IN_AUTOCOMMIT
argument_list|,
literal|"COMMIT"
argument_list|)
expr_stmt|;
name|testReverseMatch
argument_list|(
name|ErrorMsg
operator|.
name|OP_NOT_ALLOWED_IN_TXN
argument_list|,
literal|"ALTER TABLE"
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|testReverseMatch
argument_list|(
name|ErrorMsg
operator|.
name|OP_NOT_ALLOWED_WITHOUT_TXN
argument_list|,
literal|"ROLLBACK"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|testReverseMatch
parameter_list|(
name|ErrorMsg
name|errorMsg
parameter_list|,
name|String
modifier|...
name|args
parameter_list|)
block|{
name|String
name|parametrizedMsg
init|=
name|errorMsg
operator|.
name|format
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|ErrorMsg
name|canonicalMsg
init|=
name|ErrorMsg
operator|.
name|getErrorMsg
argument_list|(
name|parametrizedMsg
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Didn't find expected msg"
argument_list|,
name|errorMsg
operator|.
name|getErrorCode
argument_list|()
argument_list|,
name|canonicalMsg
operator|.
name|getErrorCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

