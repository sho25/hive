begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|formatting
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|WMFullResourcePlan
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|WMMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|WMPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|WMPoolTrigger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|WMResourcePlan
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|WMResourcePlanStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|WMTrigger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|JsonNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test class for json resource plan formatter.  */
end_comment

begin_class
specifier|public
class|class
name|TestJsonRPFormatter
block|{
specifier|private
specifier|final
name|JsonMetaDataFormatter
name|formatter
init|=
operator|new
name|JsonMetaDataFormatter
argument_list|()
decl_stmt|;
specifier|private
name|ByteArrayOutputStream
name|bos
decl_stmt|;
specifier|private
name|DataOutputStream
name|out
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|bos
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|DataOutputStream
argument_list|(
name|bos
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|teardown
parameter_list|()
throws|throws
name|Exception
block|{
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
name|bos
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|private
name|WMFullResourcePlan
name|createRP
parameter_list|(
name|String
name|name
parameter_list|,
name|Integer
name|parallelism
parameter_list|,
name|String
name|defaultPoolPath
parameter_list|)
block|{
name|WMResourcePlan
name|rp
init|=
operator|new
name|WMResourcePlan
argument_list|(
name|name
argument_list|)
decl_stmt|;
name|rp
operator|.
name|setStatus
argument_list|(
name|WMResourcePlanStatus
operator|.
name|ACTIVE
argument_list|)
expr_stmt|;
if|if
condition|(
name|parallelism
operator|!=
literal|null
condition|)
block|{
name|rp
operator|.
name|setQueryParallelism
argument_list|(
name|parallelism
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|defaultPoolPath
operator|!=
literal|null
condition|)
block|{
name|rp
operator|.
name|setDefaultPoolPath
argument_list|(
name|defaultPoolPath
argument_list|)
expr_stmt|;
block|}
name|WMFullResourcePlan
name|fullRp
init|=
operator|new
name|WMFullResourcePlan
argument_list|(
name|rp
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|fullRp
return|;
block|}
specifier|private
name|void
name|addPool
parameter_list|(
name|WMFullResourcePlan
name|fullRp
parameter_list|,
name|String
name|poolName
parameter_list|,
name|double
name|allocFraction
parameter_list|,
name|int
name|parallelism
parameter_list|,
name|String
name|policy
parameter_list|)
block|{
name|WMPool
name|pool
init|=
operator|new
name|WMPool
argument_list|(
name|fullRp
operator|.
name|getPlan
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|poolName
argument_list|)
decl_stmt|;
name|pool
operator|.
name|setAllocFraction
argument_list|(
name|allocFraction
argument_list|)
expr_stmt|;
name|pool
operator|.
name|setQueryParallelism
argument_list|(
name|parallelism
argument_list|)
expr_stmt|;
if|if
condition|(
name|policy
operator|!=
literal|null
condition|)
block|{
name|pool
operator|.
name|setSchedulingPolicy
argument_list|(
name|policy
argument_list|)
expr_stmt|;
block|}
name|fullRp
operator|.
name|addToPools
argument_list|(
name|pool
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|addTrigger
parameter_list|(
name|WMFullResourcePlan
name|fullRp
parameter_list|,
name|String
name|triggerName
parameter_list|,
name|String
name|action
parameter_list|,
name|String
name|expr
parameter_list|,
name|String
name|poolName
parameter_list|)
block|{
name|WMTrigger
name|trigger
init|=
operator|new
name|WMTrigger
argument_list|(
name|fullRp
operator|.
name|getPlan
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|triggerName
argument_list|)
decl_stmt|;
name|trigger
operator|.
name|setActionExpression
argument_list|(
name|action
argument_list|)
expr_stmt|;
name|trigger
operator|.
name|setTriggerExpression
argument_list|(
name|expr
argument_list|)
expr_stmt|;
name|fullRp
operator|.
name|addToTriggers
argument_list|(
name|trigger
argument_list|)
expr_stmt|;
name|WMPoolTrigger
name|pool2Trigger
init|=
operator|new
name|WMPoolTrigger
argument_list|(
name|poolName
argument_list|,
name|triggerName
argument_list|)
decl_stmt|;
name|fullRp
operator|.
name|addToPoolTriggers
argument_list|(
name|pool2Trigger
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|addMapping
parameter_list|(
name|WMFullResourcePlan
name|fullRp
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|poolName
parameter_list|)
block|{
name|WMMapping
name|mapping
init|=
operator|new
name|WMMapping
argument_list|(
name|fullRp
operator|.
name|getPlan
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|type
argument_list|,
name|name
argument_list|)
decl_stmt|;
name|mapping
operator|.
name|setPoolPath
argument_list|(
name|poolName
argument_list|)
expr_stmt|;
name|fullRp
operator|.
name|addToMappings
argument_list|(
name|mapping
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testJsonEmptyRPFormatter
parameter_list|()
throws|throws
name|Exception
block|{
name|WMFullResourcePlan
name|fullRp
init|=
name|createRP
argument_list|(
literal|"test_rp_1"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|formatter
operator|.
name|showFullResourcePlan
argument_list|(
name|out
argument_list|,
name|fullRp
argument_list|)
expr_stmt|;
name|out
operator|.
name|flush
argument_list|()
expr_stmt|;
name|ObjectMapper
name|objectMapper
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
name|JsonNode
name|jsonTree
init|=
name|objectMapper
operator|.
name|readTree
argument_list|(
name|bos
operator|.
name|toByteArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|jsonTree
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|jsonTree
operator|.
name|isObject
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test_rp_1"
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|jsonTree
operator|.
name|get
argument_list|(
literal|"parallelism"
argument_list|)
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|jsonTree
operator|.
name|get
argument_list|(
literal|"defaultPool"
argument_list|)
operator|.
name|isNull
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|jsonTree
operator|.
name|get
argument_list|(
literal|"pools"
argument_list|)
operator|.
name|isArray
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"pools"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testJsonRPFormatter
parameter_list|()
throws|throws
name|Exception
block|{
name|WMFullResourcePlan
name|fullRp
init|=
name|createRP
argument_list|(
literal|"test_rp_2"
argument_list|,
literal|10
argument_list|,
literal|"def"
argument_list|)
decl_stmt|;
name|addPool
argument_list|(
name|fullRp
argument_list|,
literal|"pool1"
argument_list|,
literal|0.3
argument_list|,
literal|3
argument_list|,
literal|"fair"
argument_list|)
expr_stmt|;
name|addTrigger
argument_list|(
name|fullRp
argument_list|,
literal|"trigger1"
argument_list|,
literal|"KILL"
argument_list|,
literal|"BYTES> 2"
argument_list|,
literal|"pool1"
argument_list|)
expr_stmt|;
name|addPool
argument_list|(
name|fullRp
argument_list|,
literal|"pool2"
argument_list|,
literal|0.7
argument_list|,
literal|7
argument_list|,
literal|"fcfs"
argument_list|)
expr_stmt|;
name|addMapping
argument_list|(
name|fullRp
argument_list|,
literal|"user"
argument_list|,
literal|"foo"
argument_list|,
literal|"pool2"
argument_list|)
expr_stmt|;
name|addMapping
argument_list|(
name|fullRp
argument_list|,
literal|"user"
argument_list|,
literal|"bar"
argument_list|,
literal|"pool2"
argument_list|)
expr_stmt|;
name|formatter
operator|.
name|showFullResourcePlan
argument_list|(
name|out
argument_list|,
name|fullRp
argument_list|)
expr_stmt|;
name|out
operator|.
name|flush
argument_list|()
expr_stmt|;
name|ObjectMapper
name|objectMapper
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
name|JsonNode
name|jsonTree
init|=
name|objectMapper
operator|.
name|readTree
argument_list|(
name|bos
operator|.
name|toByteArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|jsonTree
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|jsonTree
operator|.
name|isObject
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test_rp_2"
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"parallelism"
argument_list|)
operator|.
name|asInt
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"def"
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"defaultPool"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|jsonTree
operator|.
name|get
argument_list|(
literal|"pools"
argument_list|)
operator|.
name|isArray
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"pools"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|JsonNode
name|pool2
init|=
name|jsonTree
operator|.
name|get
argument_list|(
literal|"pools"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"pool2"
argument_list|,
name|pool2
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"fcfs"
argument_list|,
name|pool2
operator|.
name|get
argument_list|(
literal|"schedulingPolicy"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|pool2
operator|.
name|get
argument_list|(
literal|"parallelism"
argument_list|)
operator|.
name|asInt
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0.7
argument_list|,
name|pool2
operator|.
name|get
argument_list|(
literal|"allocFraction"
argument_list|)
operator|.
name|asDouble
argument_list|()
argument_list|,
literal|0.00001
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|pool2
operator|.
name|get
argument_list|(
literal|"triggers"
argument_list|)
operator|.
name|isArray
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|pool2
operator|.
name|get
argument_list|(
literal|"triggers"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|pool2
operator|.
name|get
argument_list|(
literal|"mappings"
argument_list|)
operator|.
name|isArray
argument_list|()
argument_list|)
expr_stmt|;
name|JsonNode
name|type0
init|=
name|pool2
operator|.
name|get
argument_list|(
literal|"mappings"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"user"
argument_list|,
name|type0
operator|.
name|get
argument_list|(
literal|"type"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|type0
operator|.
name|get
argument_list|(
literal|"values"
argument_list|)
operator|.
name|isArray
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|type0
operator|.
name|get
argument_list|(
literal|"values"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|HashSet
argument_list|<
name|String
argument_list|>
name|vals
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|type0
operator|.
name|get
argument_list|(
literal|"values"
argument_list|)
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|vals
operator|.
name|add
argument_list|(
name|type0
operator|.
name|get
argument_list|(
literal|"values"
argument_list|)
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|vals
operator|.
name|contains
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|vals
operator|.
name|contains
argument_list|(
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|JsonNode
name|pool1
init|=
name|jsonTree
operator|.
name|get
argument_list|(
literal|"pools"
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"pool1"
argument_list|,
name|pool1
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"fair"
argument_list|,
name|pool1
operator|.
name|get
argument_list|(
literal|"schedulingPolicy"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|pool1
operator|.
name|get
argument_list|(
literal|"parallelism"
argument_list|)
operator|.
name|asInt
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0.3
argument_list|,
name|pool1
operator|.
name|get
argument_list|(
literal|"allocFraction"
argument_list|)
operator|.
name|asDouble
argument_list|()
argument_list|,
literal|0.00001
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|pool1
operator|.
name|get
argument_list|(
literal|"triggers"
argument_list|)
operator|.
name|isArray
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|pool1
operator|.
name|get
argument_list|(
literal|"triggers"
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|JsonNode
name|trigger1
init|=
name|pool1
operator|.
name|get
argument_list|(
literal|"triggers"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"trigger1"
argument_list|,
name|trigger1
operator|.
name|get
argument_list|(
literal|"name"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"KILL"
argument_list|,
name|trigger1
operator|.
name|get
argument_list|(
literal|"action"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"BYTES> 2"
argument_list|,
name|trigger1
operator|.
name|get
argument_list|(
literal|"trigger"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

