begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_class
specifier|public
class|class
name|TestHiveInputOutputBuffer
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testReadAndWrite
parameter_list|()
throws|throws
name|IOException
block|{
name|String
name|testString
init|=
literal|"test_hive_input_output_number_0"
decl_stmt|;
name|byte
index|[]
name|string_bytes
init|=
name|testString
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|HiveDataInputBuffer
name|inBuffer
init|=
operator|new
name|HiveDataInputBuffer
argument_list|()
decl_stmt|;
name|HiveDataOutputBuffer
name|outBuffer
init|=
operator|new
name|HiveDataOutputBuffer
argument_list|()
decl_stmt|;
name|outBuffer
operator|.
name|write
argument_list|(
name|string_bytes
argument_list|)
expr_stmt|;
name|inBuffer
operator|.
name|reset
argument_list|(
name|outBuffer
operator|.
name|getData
argument_list|()
argument_list|,
literal|0
argument_list|,
name|outBuffer
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|byte
index|[]
name|readBytes
init|=
operator|new
name|byte
index|[
name|string_bytes
operator|.
name|length
index|]
decl_stmt|;
name|inBuffer
operator|.
name|read
argument_list|(
name|readBytes
argument_list|)
expr_stmt|;
name|String
name|readString
init|=
operator|new
name|String
argument_list|(
name|readBytes
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Field testReadAndWrite()"
argument_list|,
name|readString
argument_list|,
name|testString
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

