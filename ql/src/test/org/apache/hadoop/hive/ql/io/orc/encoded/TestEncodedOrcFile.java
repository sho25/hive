begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|encoded
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|OrcFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|common
operator|.
name|util
operator|.
name|MockFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|CompressionKind
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|FileMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|OrcProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|impl
operator|.
name|OrcTail
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_comment
comment|/**  * Test to verify lazy nature of EncodedOrcFile.  */
end_comment

begin_class
specifier|public
class|class
name|TestEncodedOrcFile
block|{
annotation|@
name|Test
specifier|public
name|void
name|testFileSystemIsNotInitializedWithKnownTail
parameter_list|()
throws|throws
name|IOException
block|{
name|JobConf
name|conf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
literal|"fmock:///testtable/bucket_0"
argument_list|)
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"hive.orc.splits.include.file.footer"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"fs.defaultFS"
argument_list|,
literal|"fmock:///"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"fs.mock.impl"
argument_list|,
name|FailingMockFileSystem
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|OrcProto
operator|.
name|Type
argument_list|>
name|types
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|BINARY
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|FileMetadata
name|dummyMetadata
init|=
name|mock
argument_list|(
name|FileMetadata
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|dummyMetadata
operator|.
name|getTypes
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|types
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|dummyMetadata
operator|.
name|getCompressionKind
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
expr_stmt|;
name|OrcFile
operator|.
name|ReaderOptions
name|readerOptions
init|=
name|EncodedOrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
parameter_list|()
lambda|->
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Filesystem should not have been initialized"
argument_list|)
throw|;
block|}
argument_list|)
operator|.
name|orcTail
argument_list|(
operator|new
name|OrcTail
argument_list|(
name|OrcProto
operator|.
name|FileTail
operator|.
name|getDefaultInstance
argument_list|()
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|fileMetadata
argument_list|(
name|dummyMetadata
argument_list|)
decl_stmt|;
comment|// an orc reader is created, this should not cause filesystem initialization
comment|// because orc tail is already provided and we are not making any real reads.
name|Reader
name|reader
init|=
name|EncodedOrcFile
operator|.
name|createReader
argument_list|(
name|path
argument_list|,
name|readerOptions
argument_list|)
decl_stmt|;
comment|// Following initiates the creation of data reader in ORC reader. This should
comment|// not cause file system initialization either as we are still not making any
comment|// real read.
name|reader
operator|.
name|rows
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
class|class
name|FailingMockFileSystem
extends|extends
name|MockFileSystem
block|{
annotation|@
name|Override
specifier|public
name|void
name|initialize
parameter_list|(
name|URI
name|uri
parameter_list|,
name|Configuration
name|conf
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Filesystem should not have been initialized"
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

