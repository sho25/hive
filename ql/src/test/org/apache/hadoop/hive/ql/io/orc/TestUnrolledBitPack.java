begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspectorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|LongWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
operator|.
name|Parameters
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|Longs
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|value
operator|=
name|Parameterized
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestUnrolledBitPack
block|{
specifier|private
name|long
name|val
decl_stmt|;
specifier|public
name|TestUnrolledBitPack
parameter_list|(
name|long
name|val
parameter_list|)
block|{
name|this
operator|.
name|val
operator|=
name|val
expr_stmt|;
block|}
annotation|@
name|Parameters
specifier|public
specifier|static
name|Collection
argument_list|<
name|Object
index|[]
argument_list|>
name|data
parameter_list|()
block|{
name|Object
index|[]
index|[]
name|data
init|=
operator|new
name|Object
index|[]
index|[]
block|{
block|{
operator|-
literal|1
block|}
block|,
block|{
literal|1
block|}
block|,
block|{
literal|7
block|}
block|,
block|{
operator|-
literal|128
block|}
block|,
block|{
literal|32000
block|}
block|,
block|{
literal|8300000
block|}
block|,
block|{
name|Integer
operator|.
name|MAX_VALUE
block|}
block|,
block|{
literal|540000000000L
block|}
block|,
block|{
literal|140000000000000L
block|}
block|,
block|{
literal|36000000000000000L
block|}
block|,
block|{
name|Long
operator|.
name|MAX_VALUE
block|}
block|}
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|data
argument_list|)
return|;
block|}
name|Path
name|workDir
init|=
operator|new
name|Path
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"test.tmp.dir"
argument_list|,
literal|"target"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"test"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"tmp"
argument_list|)
argument_list|)
decl_stmt|;
name|Configuration
name|conf
decl_stmt|;
name|FileSystem
name|fs
decl_stmt|;
name|Path
name|testFilePath
decl_stmt|;
annotation|@
name|Rule
specifier|public
name|TestName
name|testCaseName
init|=
operator|new
name|TestName
argument_list|()
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|openFileSystem
parameter_list|()
throws|throws
name|Exception
block|{
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|fs
operator|=
name|FileSystem
operator|.
name|getLocal
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|testFilePath
operator|=
operator|new
name|Path
argument_list|(
name|workDir
argument_list|,
literal|"TestOrcFile."
operator|+
name|testCaseName
operator|.
name|getMethodName
argument_list|()
operator|+
literal|".orc"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|delete
argument_list|(
name|testFilePath
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBitPacking
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcFile
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|Long
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|long
index|[]
name|inp
init|=
operator|new
name|long
index|[]
block|{
name|val
block|,
literal|0
block|,
name|val
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
name|val
block|,
literal|0
block|,
literal|0
block|,
name|val
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
name|val
block|,
literal|0
block|,
literal|0
block|,
name|val
block|,
name|val
block|}
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|Longs
operator|.
name|asList
argument_list|(
name|inp
argument_list|)
argument_list|)
decl_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|writer
operator|.
name|addRow
argument_list|(
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Object
name|row
init|=
name|rows
operator|.
name|next
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongWritable
operator|)
name|row
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

