begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|txn
operator|.
name|compactor
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|txn
operator|.
name|TxnHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|txn
operator|.
name|TxnDbUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_comment
comment|/**  * Tests for the compactor Initiator thread.  */
end_comment

begin_class
specifier|public
class|class
name|TestInitiator
extends|extends
name|CompactorTest
block|{
specifier|static
specifier|final
specifier|private
name|String
name|CLASS_NAME
init|=
name|TestInitiator
operator|.
name|class
operator|.
name|getName
argument_list|()
decl_stmt|;
specifier|static
specifier|final
specifier|private
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|CLASS_NAME
argument_list|)
decl_stmt|;
specifier|public
name|TestInitiator
parameter_list|()
throws|throws
name|Exception
block|{
name|super
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|nothing
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Test that the whole things works when there's nothing in the queue.  This is just a
comment|// survival test.
name|startInitiator
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|recoverFailedLocalWorkers
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"rflw1"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|CompactionRequest
name|rqst
init|=
operator|new
name|CompactionRequest
argument_list|(
literal|"default"
argument_list|,
literal|"rflw1"
argument_list|,
name|CompactionType
operator|.
name|MINOR
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|compact
argument_list|(
name|rqst
argument_list|)
expr_stmt|;
name|t
operator|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"rflw2"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|rqst
operator|=
operator|new
name|CompactionRequest
argument_list|(
literal|"default"
argument_list|,
literal|"rflw2"
argument_list|,
name|CompactionType
operator|.
name|MINOR
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|compact
argument_list|(
name|rqst
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|findNextToCompact
argument_list|(
name|Worker
operator|.
name|hostname
argument_list|()
operator|+
literal|"-193892"
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|findNextToCompact
argument_list|(
literal|"nosuchhost-193892"
argument_list|)
expr_stmt|;
name|startInitiator
argument_list|()
expr_stmt|;
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ShowCompactResponseElement
argument_list|>
name|compacts
init|=
name|rsp
operator|.
name|getCompacts
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|compacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|boolean
name|sawInitiated
init|=
literal|false
decl_stmt|;
for|for
control|(
name|ShowCompactResponseElement
name|c
range|:
name|compacts
control|)
block|{
if|if
condition|(
name|c
operator|.
name|getState
argument_list|()
operator|.
name|equals
argument_list|(
literal|"working"
argument_list|)
condition|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"nosuchhost-193892"
argument_list|,
name|c
operator|.
name|getWorkerid
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|c
operator|.
name|getState
argument_list|()
operator|.
name|equals
argument_list|(
literal|"initiated"
argument_list|)
condition|)
block|{
name|sawInitiated
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Unexpected state"
argument_list|)
expr_stmt|;
block|}
block|}
name|Assert
operator|.
name|assertTrue
argument_list|(
name|sawInitiated
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|recoverFailedRemoteWorkers
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"rfrw1"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|CompactionRequest
name|rqst
init|=
operator|new
name|CompactionRequest
argument_list|(
literal|"default"
argument_list|,
literal|"rfrw1"
argument_list|,
name|CompactionType
operator|.
name|MINOR
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|compact
argument_list|(
name|rqst
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|findNextToCompact
argument_list|(
literal|"nosuchhost-193892"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setTimeVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_COMPACTOR_WORKER_TIMEOUT
argument_list|,
literal|1L
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
name|startInitiator
argument_list|()
expr_stmt|;
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ShowCompactResponseElement
argument_list|>
name|compacts
init|=
name|rsp
operator|.
name|getCompacts
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|compacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"initiated"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getState
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|majorCompactOnTableTooManyAborts
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"mcottma"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|HiveConf
operator|.
name|setIntVar
argument_list|(
name|conf
argument_list|,
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_COMPACTOR_ABORTEDTXN_THRESHOLD
argument_list|,
literal|10
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|11
condition|;
name|i
operator|++
control|)
block|{
name|long
name|txnid
init|=
name|openTxn
argument_list|()
decl_stmt|;
name|LockComponent
name|comp
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_WRITE
argument_list|,
name|LockLevel
operator|.
name|TABLE
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp
operator|.
name|setTablename
argument_list|(
literal|"mcottma"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components
operator|.
name|add
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|LockRequest
name|req
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|req
operator|.
name|setTxnid
argument_list|(
name|txnid
argument_list|)
expr_stmt|;
name|LockResponse
name|res
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|abortTxn
argument_list|(
operator|new
name|AbortTxnRequest
argument_list|(
name|txnid
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|startInitiator
argument_list|()
expr_stmt|;
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ShowCompactResponseElement
argument_list|>
name|compacts
init|=
name|rsp
operator|.
name|getCompacts
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|compacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"initiated"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getState
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"mcottma"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTablename
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|CompactionType
operator|.
name|MAJOR
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|majorCompactOnPartitionTooManyAborts
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"mcoptma"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Partition
name|p
init|=
name|newPartition
argument_list|(
name|t
argument_list|,
literal|"today"
argument_list|)
decl_stmt|;
name|HiveConf
operator|.
name|setIntVar
argument_list|(
name|conf
argument_list|,
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_COMPACTOR_ABORTEDTXN_THRESHOLD
argument_list|,
literal|10
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|11
condition|;
name|i
operator|++
control|)
block|{
name|long
name|txnid
init|=
name|openTxn
argument_list|()
decl_stmt|;
name|LockComponent
name|comp
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_WRITE
argument_list|,
name|LockLevel
operator|.
name|TABLE
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp
operator|.
name|setTablename
argument_list|(
literal|"mcoptma"
argument_list|)
expr_stmt|;
name|comp
operator|.
name|setPartitionname
argument_list|(
literal|"ds=today"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components
operator|.
name|add
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|LockRequest
name|req
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|req
operator|.
name|setTxnid
argument_list|(
name|txnid
argument_list|)
expr_stmt|;
name|LockResponse
name|res
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|abortTxn
argument_list|(
operator|new
name|AbortTxnRequest
argument_list|(
name|txnid
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|startInitiator
argument_list|()
expr_stmt|;
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ShowCompactResponseElement
argument_list|>
name|compacts
init|=
name|rsp
operator|.
name|getCompacts
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|compacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"initiated"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getState
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"mcoptma"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTablename
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"ds=today"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPartitionname
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|CompactionType
operator|.
name|MAJOR
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|noCompactOnManyDifferentPartitionAborts
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"ncomdpa"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|11
condition|;
name|i
operator|++
control|)
block|{
name|Partition
name|p
init|=
name|newPartition
argument_list|(
name|t
argument_list|,
literal|"day-"
operator|+
name|i
argument_list|)
decl_stmt|;
block|}
name|HiveConf
operator|.
name|setIntVar
argument_list|(
name|conf
argument_list|,
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_COMPACTOR_ABORTEDTXN_THRESHOLD
argument_list|,
literal|10
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|11
condition|;
name|i
operator|++
control|)
block|{
name|long
name|txnid
init|=
name|openTxn
argument_list|()
decl_stmt|;
name|LockComponent
name|comp
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_WRITE
argument_list|,
name|LockLevel
operator|.
name|TABLE
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp
operator|.
name|setTablename
argument_list|(
literal|"ncomdpa"
argument_list|)
expr_stmt|;
name|comp
operator|.
name|setPartitionname
argument_list|(
literal|"ds=day-"
operator|+
name|i
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components
operator|.
name|add
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|LockRequest
name|req
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|req
operator|.
name|setTxnid
argument_list|(
name|txnid
argument_list|)
expr_stmt|;
name|LockResponse
name|res
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|abortTxn
argument_list|(
operator|new
name|AbortTxnRequest
argument_list|(
name|txnid
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|startInitiator
argument_list|()
expr_stmt|;
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rsp
operator|.
name|getCompactsSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|cleanEmptyAbortedTxns
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Test that we are cleaning aborted transactions with no components left in txn_components.
comment|// Put one aborted transaction with an entry in txn_components to make sure we don't
comment|// accidently clean it too.
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"ceat"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|long
name|txnid
init|=
name|openTxn
argument_list|()
decl_stmt|;
name|LockComponent
name|comp
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_WRITE
argument_list|,
name|LockLevel
operator|.
name|TABLE
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp
operator|.
name|setTablename
argument_list|(
literal|"ceat"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components
operator|.
name|add
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|LockRequest
name|req
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|req
operator|.
name|setTxnid
argument_list|(
name|txnid
argument_list|)
expr_stmt|;
name|LockResponse
name|res
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|abortTxn
argument_list|(
operator|new
name|AbortTxnRequest
argument_list|(
name|txnid
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|TxnHandler
operator|.
name|TIMED_OUT_TXN_ABORT_BATCH_SIZE
operator|+
literal|50
condition|;
name|i
operator|++
control|)
block|{
name|txnid
operator|=
name|openTxn
argument_list|()
expr_stmt|;
name|txnHandler
operator|.
name|abortTxn
argument_list|(
operator|new
name|AbortTxnRequest
argument_list|(
name|txnid
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|GetOpenTxnsResponse
name|openTxns
init|=
name|txnHandler
operator|.
name|getOpenTxns
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TxnHandler
operator|.
name|TIMED_OUT_TXN_ABORT_BATCH_SIZE
operator|+
literal|50
operator|+
literal|1
argument_list|,
name|openTxns
operator|.
name|getOpen_txnsSize
argument_list|()
argument_list|)
expr_stmt|;
name|startInitiator
argument_list|()
expr_stmt|;
name|openTxns
operator|=
name|txnHandler
operator|.
name|getOpenTxns
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|openTxns
operator|.
name|getOpen_txnsSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|noCompactWhenNoCompactSet
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|parameters
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|parameters
operator|.
name|put
argument_list|(
literal|"NO_AUTO_COMPACTION"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"ncwncs"
argument_list|,
literal|false
argument_list|,
name|parameters
argument_list|)
decl_stmt|;
name|HiveConf
operator|.
name|setIntVar
argument_list|(
name|conf
argument_list|,
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_COMPACTOR_ABORTEDTXN_THRESHOLD
argument_list|,
literal|10
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|11
condition|;
name|i
operator|++
control|)
block|{
name|long
name|txnid
init|=
name|openTxn
argument_list|()
decl_stmt|;
name|LockComponent
name|comp
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_WRITE
argument_list|,
name|LockLevel
operator|.
name|TABLE
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp
operator|.
name|setTablename
argument_list|(
literal|"ncwncs"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components
operator|.
name|add
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|LockRequest
name|req
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|req
operator|.
name|setTxnid
argument_list|(
name|txnid
argument_list|)
expr_stmt|;
name|LockResponse
name|res
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|abortTxn
argument_list|(
operator|new
name|AbortTxnRequest
argument_list|(
name|txnid
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|startInitiator
argument_list|()
expr_stmt|;
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rsp
operator|.
name|getCompactsSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|noCompactWhenNoCompactSetLowerCase
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|parameters
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|parameters
operator|.
name|put
argument_list|(
literal|"no_auto_compaction"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"ncwncs"
argument_list|,
literal|false
argument_list|,
name|parameters
argument_list|)
decl_stmt|;
name|HiveConf
operator|.
name|setIntVar
argument_list|(
name|conf
argument_list|,
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_COMPACTOR_ABORTEDTXN_THRESHOLD
argument_list|,
literal|10
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|11
condition|;
name|i
operator|++
control|)
block|{
name|long
name|txnid
init|=
name|openTxn
argument_list|()
decl_stmt|;
name|LockComponent
name|comp
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_WRITE
argument_list|,
name|LockLevel
operator|.
name|TABLE
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp
operator|.
name|setTablename
argument_list|(
literal|"ncwncs"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components
operator|.
name|add
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|LockRequest
name|req
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|req
operator|.
name|setTxnid
argument_list|(
name|txnid
argument_list|)
expr_stmt|;
name|LockResponse
name|res
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|abortTxn
argument_list|(
operator|new
name|AbortTxnRequest
argument_list|(
name|txnid
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|startInitiator
argument_list|()
expr_stmt|;
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rsp
operator|.
name|getCompactsSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|noCompactWhenCompactAlreadyScheduled
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"ncwcas"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|HiveConf
operator|.
name|setIntVar
argument_list|(
name|conf
argument_list|,
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_COMPACTOR_ABORTEDTXN_THRESHOLD
argument_list|,
literal|10
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|11
condition|;
name|i
operator|++
control|)
block|{
name|long
name|txnid
init|=
name|openTxn
argument_list|()
decl_stmt|;
name|LockComponent
name|comp
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_WRITE
argument_list|,
name|LockLevel
operator|.
name|TABLE
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp
operator|.
name|setTablename
argument_list|(
literal|"ncwcas"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components
operator|.
name|add
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|LockRequest
name|req
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|req
operator|.
name|setTxnid
argument_list|(
name|txnid
argument_list|)
expr_stmt|;
name|LockResponse
name|res
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|abortTxn
argument_list|(
operator|new
name|AbortTxnRequest
argument_list|(
name|txnid
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|CompactionRequest
name|rqst
init|=
operator|new
name|CompactionRequest
argument_list|(
literal|"default"
argument_list|,
literal|"ncwcas"
argument_list|,
name|CompactionType
operator|.
name|MAJOR
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|compact
argument_list|(
name|rqst
argument_list|)
expr_stmt|;
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ShowCompactResponseElement
argument_list|>
name|compacts
init|=
name|rsp
operator|.
name|getCompacts
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|compacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"initiated"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getState
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"ncwcas"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTablename
argument_list|()
argument_list|)
expr_stmt|;
name|startInitiator
argument_list|()
expr_stmt|;
name|rsp
operator|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
expr_stmt|;
name|compacts
operator|=
name|rsp
operator|.
name|getCompacts
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|compacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"initiated"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getState
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"ncwcas"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTablename
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|CompactionType
operator|.
name|MAJOR
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|compactTableHighDeltaPct
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"cthdp"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|20L
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|21L
argument_list|,
literal|22L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|23L
argument_list|,
literal|24L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
literal|23
argument_list|)
expr_stmt|;
name|long
name|txnid
init|=
name|openTxn
argument_list|()
decl_stmt|;
name|LockComponent
name|comp
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_WRITE
argument_list|,
name|LockLevel
operator|.
name|TABLE
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp
operator|.
name|setTablename
argument_list|(
literal|"cthdp"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components
operator|.
name|add
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|LockRequest
name|req
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|req
operator|.
name|setTxnid
argument_list|(
name|txnid
argument_list|)
expr_stmt|;
name|LockResponse
name|res
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|commitTxn
argument_list|(
operator|new
name|CommitTxnRequest
argument_list|(
name|txnid
argument_list|)
argument_list|)
expr_stmt|;
name|startInitiator
argument_list|()
expr_stmt|;
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ShowCompactResponseElement
argument_list|>
name|compacts
init|=
name|rsp
operator|.
name|getCompacts
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|compacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"initiated"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getState
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cthdp"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTablename
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|CompactionType
operator|.
name|MAJOR
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|compactPartitionHighDeltaPct
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"cphdp"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Partition
name|p
init|=
name|newPartition
argument_list|(
name|t
argument_list|,
literal|"today"
argument_list|)
decl_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|20L
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|21L
argument_list|,
literal|22L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|23L
argument_list|,
literal|24L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
literal|23
argument_list|)
expr_stmt|;
name|long
name|txnid
init|=
name|openTxn
argument_list|()
decl_stmt|;
name|LockComponent
name|comp
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_WRITE
argument_list|,
name|LockLevel
operator|.
name|PARTITION
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp
operator|.
name|setTablename
argument_list|(
literal|"cphdp"
argument_list|)
expr_stmt|;
name|comp
operator|.
name|setPartitionname
argument_list|(
literal|"ds=today"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components
operator|.
name|add
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|LockRequest
name|req
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|req
operator|.
name|setTxnid
argument_list|(
name|txnid
argument_list|)
expr_stmt|;
name|LockResponse
name|res
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|commitTxn
argument_list|(
operator|new
name|CommitTxnRequest
argument_list|(
name|txnid
argument_list|)
argument_list|)
expr_stmt|;
name|startInitiator
argument_list|()
expr_stmt|;
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ShowCompactResponseElement
argument_list|>
name|compacts
init|=
name|rsp
operator|.
name|getCompacts
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|compacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"initiated"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getState
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cphdp"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTablename
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"ds=today"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPartitionname
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|CompactionType
operator|.
name|MAJOR
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|noCompactTableDeltaPctNotHighEnough
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"nctdpnhe"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|50L
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|21L
argument_list|,
literal|22L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|23L
argument_list|,
literal|24L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
literal|53
argument_list|)
expr_stmt|;
name|long
name|txnid
init|=
name|openTxn
argument_list|()
decl_stmt|;
name|LockComponent
name|comp
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_WRITE
argument_list|,
name|LockLevel
operator|.
name|TABLE
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp
operator|.
name|setTablename
argument_list|(
literal|"nctdpnhe"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components
operator|.
name|add
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|LockRequest
name|req
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|req
operator|.
name|setTxnid
argument_list|(
name|txnid
argument_list|)
expr_stmt|;
name|LockResponse
name|res
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|commitTxn
argument_list|(
operator|new
name|CommitTxnRequest
argument_list|(
name|txnid
argument_list|)
argument_list|)
expr_stmt|;
name|startInitiator
argument_list|()
expr_stmt|;
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rsp
operator|.
name|getCompactsSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|compactTableTooManyDeltas
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"cttmd"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|200L
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|201L
argument_list|,
literal|201L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|202L
argument_list|,
literal|202L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|203L
argument_list|,
literal|203L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|204L
argument_list|,
literal|204L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|205L
argument_list|,
literal|205L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|206L
argument_list|,
literal|206L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|207L
argument_list|,
literal|207L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|208L
argument_list|,
literal|208L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|209L
argument_list|,
literal|209L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|210L
argument_list|,
literal|210L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|211L
argument_list|,
literal|211L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
literal|210
argument_list|)
expr_stmt|;
name|long
name|txnid
init|=
name|openTxn
argument_list|()
decl_stmt|;
name|LockComponent
name|comp
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_WRITE
argument_list|,
name|LockLevel
operator|.
name|TABLE
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp
operator|.
name|setTablename
argument_list|(
literal|"cttmd"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components
operator|.
name|add
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|LockRequest
name|req
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|req
operator|.
name|setTxnid
argument_list|(
name|txnid
argument_list|)
expr_stmt|;
name|LockResponse
name|res
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|commitTxn
argument_list|(
operator|new
name|CommitTxnRequest
argument_list|(
name|txnid
argument_list|)
argument_list|)
expr_stmt|;
name|startInitiator
argument_list|()
expr_stmt|;
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ShowCompactResponseElement
argument_list|>
name|compacts
init|=
name|rsp
operator|.
name|getCompacts
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|compacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"initiated"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getState
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cttmd"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTablename
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|CompactionType
operator|.
name|MINOR
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|compactPartitionTooManyDeltas
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"cptmd"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Partition
name|p
init|=
name|newPartition
argument_list|(
name|t
argument_list|,
literal|"today"
argument_list|)
decl_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|200L
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|201L
argument_list|,
literal|201L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|202L
argument_list|,
literal|202L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|203L
argument_list|,
literal|203L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|204L
argument_list|,
literal|204L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|205L
argument_list|,
literal|205L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|206L
argument_list|,
literal|206L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|207L
argument_list|,
literal|207L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|208L
argument_list|,
literal|208L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|209L
argument_list|,
literal|209L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|210L
argument_list|,
literal|210L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|211L
argument_list|,
literal|211L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
literal|210
argument_list|)
expr_stmt|;
name|long
name|txnid
init|=
name|openTxn
argument_list|()
decl_stmt|;
name|LockComponent
name|comp
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_WRITE
argument_list|,
name|LockLevel
operator|.
name|PARTITION
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp
operator|.
name|setTablename
argument_list|(
literal|"cptmd"
argument_list|)
expr_stmt|;
name|comp
operator|.
name|setPartitionname
argument_list|(
literal|"ds=today"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components
operator|.
name|add
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|LockRequest
name|req
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|req
operator|.
name|setTxnid
argument_list|(
name|txnid
argument_list|)
expr_stmt|;
name|LockResponse
name|res
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|commitTxn
argument_list|(
operator|new
name|CommitTxnRequest
argument_list|(
name|txnid
argument_list|)
argument_list|)
expr_stmt|;
name|startInitiator
argument_list|()
expr_stmt|;
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ShowCompactResponseElement
argument_list|>
name|compacts
init|=
name|rsp
operator|.
name|getCompacts
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|compacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"initiated"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getState
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cptmd"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTablename
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"ds=today"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPartitionname
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|CompactionType
operator|.
name|MINOR
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|noCompactTableNotEnoughDeltas
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"nctned"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|200L
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|201L
argument_list|,
literal|205L
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|206L
argument_list|,
literal|211L
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
literal|210
argument_list|)
expr_stmt|;
name|long
name|txnid
init|=
name|openTxn
argument_list|()
decl_stmt|;
name|LockComponent
name|comp
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_WRITE
argument_list|,
name|LockLevel
operator|.
name|TABLE
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp
operator|.
name|setTablename
argument_list|(
literal|"nctned"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components
operator|.
name|add
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|LockRequest
name|req
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|req
operator|.
name|setTxnid
argument_list|(
name|txnid
argument_list|)
expr_stmt|;
name|LockResponse
name|res
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|commitTxn
argument_list|(
operator|new
name|CommitTxnRequest
argument_list|(
name|txnid
argument_list|)
argument_list|)
expr_stmt|;
name|startInitiator
argument_list|()
expr_stmt|;
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rsp
operator|.
name|getCompactsSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|chooseMajorOverMinorWhenBothValid
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"cmomwbv"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|200L
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|201L
argument_list|,
literal|211L
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|212L
argument_list|,
literal|222L
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|223L
argument_list|,
literal|233L
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|234L
argument_list|,
literal|244L
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|245L
argument_list|,
literal|255L
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|256L
argument_list|,
literal|266L
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|267L
argument_list|,
literal|277L
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|278L
argument_list|,
literal|288L
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|289L
argument_list|,
literal|299L
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|300L
argument_list|,
literal|310L
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|311L
argument_list|,
literal|321L
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
literal|320
argument_list|)
expr_stmt|;
name|long
name|txnid
init|=
name|openTxn
argument_list|()
decl_stmt|;
name|LockComponent
name|comp
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_WRITE
argument_list|,
name|LockLevel
operator|.
name|TABLE
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp
operator|.
name|setTablename
argument_list|(
literal|"cmomwbv"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components
operator|.
name|add
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|LockRequest
name|req
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|req
operator|.
name|setTxnid
argument_list|(
name|txnid
argument_list|)
expr_stmt|;
name|LockResponse
name|res
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|commitTxn
argument_list|(
operator|new
name|CommitTxnRequest
argument_list|(
name|txnid
argument_list|)
argument_list|)
expr_stmt|;
name|startInitiator
argument_list|()
expr_stmt|;
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ShowCompactResponseElement
argument_list|>
name|compacts
init|=
name|rsp
operator|.
name|getCompacts
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|compacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"initiated"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getState
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cmomwbv"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTablename
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|CompactionType
operator|.
name|MAJOR
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|enoughDeltasNoBase
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"ednb"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Partition
name|p
init|=
name|newPartition
argument_list|(
name|t
argument_list|,
literal|"today"
argument_list|)
decl_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|1L
argument_list|,
literal|201L
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|202L
argument_list|,
literal|202L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|203L
argument_list|,
literal|203L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|204L
argument_list|,
literal|204L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|205L
argument_list|,
literal|205L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|206L
argument_list|,
literal|206L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|207L
argument_list|,
literal|207L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|208L
argument_list|,
literal|208L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|209L
argument_list|,
literal|209L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|210L
argument_list|,
literal|210L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|211L
argument_list|,
literal|211L
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
literal|210
argument_list|)
expr_stmt|;
name|long
name|txnid
init|=
name|openTxn
argument_list|()
decl_stmt|;
name|LockComponent
name|comp
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_WRITE
argument_list|,
name|LockLevel
operator|.
name|PARTITION
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp
operator|.
name|setTablename
argument_list|(
literal|"ednb"
argument_list|)
expr_stmt|;
name|comp
operator|.
name|setPartitionname
argument_list|(
literal|"ds=today"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components
operator|.
name|add
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|LockRequest
name|req
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|req
operator|.
name|setTxnid
argument_list|(
name|txnid
argument_list|)
expr_stmt|;
name|LockResponse
name|res
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|commitTxn
argument_list|(
operator|new
name|CommitTxnRequest
argument_list|(
name|txnid
argument_list|)
argument_list|)
expr_stmt|;
name|startInitiator
argument_list|()
expr_stmt|;
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ShowCompactResponseElement
argument_list|>
name|compacts
init|=
name|rsp
operator|.
name|getCompacts
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|compacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"initiated"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getState
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"ednb"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTablename
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"ds=today"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPartitionname
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|CompactionType
operator|.
name|MAJOR
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|twoTxnsOnSamePartitionGenerateOneCompactionRequest
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"ttospgocr"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Partition
name|p
init|=
name|newPartition
argument_list|(
name|t
argument_list|,
literal|"today"
argument_list|)
decl_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|20L
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|21L
argument_list|,
literal|22L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|23L
argument_list|,
literal|24L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
literal|23
argument_list|)
expr_stmt|;
name|long
name|txnid
init|=
name|openTxn
argument_list|()
decl_stmt|;
name|LockComponent
name|comp
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_WRITE
argument_list|,
name|LockLevel
operator|.
name|PARTITION
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp
operator|.
name|setTablename
argument_list|(
literal|"ttospgocr"
argument_list|)
expr_stmt|;
name|comp
operator|.
name|setPartitionname
argument_list|(
literal|"ds=today"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components
operator|.
name|add
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|LockRequest
name|req
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|req
operator|.
name|setTxnid
argument_list|(
name|txnid
argument_list|)
expr_stmt|;
name|LockResponse
name|res
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|commitTxn
argument_list|(
operator|new
name|CommitTxnRequest
argument_list|(
name|txnid
argument_list|)
argument_list|)
expr_stmt|;
name|txnid
operator|=
name|openTxn
argument_list|()
expr_stmt|;
name|comp
operator|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_WRITE
argument_list|,
name|LockLevel
operator|.
name|PARTITION
argument_list|,
literal|"default"
argument_list|)
expr_stmt|;
name|comp
operator|.
name|setTablename
argument_list|(
literal|"ttospgocr"
argument_list|)
expr_stmt|;
name|comp
operator|.
name|setPartitionname
argument_list|(
literal|"ds=today"
argument_list|)
expr_stmt|;
name|components
operator|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|components
operator|.
name|add
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|req
operator|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
expr_stmt|;
name|req
operator|.
name|setTxnid
argument_list|(
name|txnid
argument_list|)
expr_stmt|;
name|res
operator|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|commitTxn
argument_list|(
operator|new
name|CommitTxnRequest
argument_list|(
name|txnid
argument_list|)
argument_list|)
expr_stmt|;
name|startInitiator
argument_list|()
expr_stmt|;
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ShowCompactResponseElement
argument_list|>
name|compacts
init|=
name|rsp
operator|.
name|getCompacts
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|compacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"initiated"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getState
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"ttospgocr"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTablename
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"ds=today"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPartitionname
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|CompactionType
operator|.
name|MAJOR
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|noCompactTableDynamicPartitioning
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"nctdp"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Partition
name|p
init|=
name|newPartition
argument_list|(
name|t
argument_list|,
literal|"today"
argument_list|)
decl_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|20L
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|21L
argument_list|,
literal|22L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|23L
argument_list|,
literal|24L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
literal|23
argument_list|)
expr_stmt|;
name|long
name|txnid
init|=
name|openTxn
argument_list|()
decl_stmt|;
name|LockComponent
name|comp
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_WRITE
argument_list|,
name|LockLevel
operator|.
name|TABLE
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp
operator|.
name|setTablename
argument_list|(
literal|"nctdp"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components
operator|.
name|add
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|LockRequest
name|req
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|req
operator|.
name|setTxnid
argument_list|(
name|txnid
argument_list|)
expr_stmt|;
name|LockResponse
name|res
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|commitTxn
argument_list|(
operator|new
name|CommitTxnRequest
argument_list|(
name|txnid
argument_list|)
argument_list|)
expr_stmt|;
name|startInitiator
argument_list|()
expr_stmt|;
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ShowCompactResponseElement
argument_list|>
name|compacts
init|=
name|rsp
operator|.
name|getCompacts
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|compacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|dropTable
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"dt"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|20L
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|21L
argument_list|,
literal|22L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|23L
argument_list|,
literal|24L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
literal|23
argument_list|)
expr_stmt|;
name|long
name|txnid
init|=
name|openTxn
argument_list|()
decl_stmt|;
name|LockComponent
name|comp
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_WRITE
argument_list|,
name|LockLevel
operator|.
name|PARTITION
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp
operator|.
name|setTablename
argument_list|(
literal|"dt"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components
operator|.
name|add
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|LockRequest
name|req
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|req
operator|.
name|setTxnid
argument_list|(
name|txnid
argument_list|)
expr_stmt|;
name|LockResponse
name|res
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|commitTxn
argument_list|(
operator|new
name|CommitTxnRequest
argument_list|(
name|txnid
argument_list|)
argument_list|)
expr_stmt|;
name|ms
operator|.
name|dropTable
argument_list|(
literal|"default"
argument_list|,
literal|"dt"
argument_list|)
expr_stmt|;
name|startInitiator
argument_list|()
expr_stmt|;
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ShowCompactResponseElement
argument_list|>
name|compacts
init|=
name|rsp
operator|.
name|getCompacts
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|compacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|dropPartition
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"dp"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Partition
name|p
init|=
name|newPartition
argument_list|(
name|t
argument_list|,
literal|"today"
argument_list|)
decl_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|20L
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|21L
argument_list|,
literal|22L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|23L
argument_list|,
literal|24L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
literal|23
argument_list|)
expr_stmt|;
name|long
name|txnid
init|=
name|openTxn
argument_list|()
decl_stmt|;
name|LockComponent
name|comp
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_WRITE
argument_list|,
name|LockLevel
operator|.
name|PARTITION
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp
operator|.
name|setTablename
argument_list|(
literal|"dp"
argument_list|)
expr_stmt|;
name|comp
operator|.
name|setPartitionname
argument_list|(
literal|"ds=today"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components
operator|.
name|add
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|LockRequest
name|req
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|req
operator|.
name|setTxnid
argument_list|(
name|txnid
argument_list|)
expr_stmt|;
name|LockResponse
name|res
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|commitTxn
argument_list|(
operator|new
name|CommitTxnRequest
argument_list|(
name|txnid
argument_list|)
argument_list|)
expr_stmt|;
name|ms
operator|.
name|dropPartition
argument_list|(
literal|"default"
argument_list|,
literal|"dp"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"today"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|startInitiator
argument_list|()
expr_stmt|;
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ShowCompactResponseElement
argument_list|>
name|compacts
init|=
name|rsp
operator|.
name|getCompacts
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|compacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
name|boolean
name|useHive130DeltaDirName
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
block|}
end_class

end_unit

