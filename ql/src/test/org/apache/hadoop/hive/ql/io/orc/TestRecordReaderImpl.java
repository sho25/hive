begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
package|;
end_package

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|core
operator|.
name|Is
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Timestamp
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FSDataInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|PositionedReadable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Seekable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|io
operator|.
name|DiskRangeList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|type
operator|.
name|HiveDecimal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|filters
operator|.
name|BloomFilterIO
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|RecordReaderImpl
operator|.
name|Location
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|sarg
operator|.
name|PredicateLeaf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|sarg
operator|.
name|SearchArgument
operator|.
name|TruthValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|sarg
operator|.
name|TestSearchArgumentImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Hive
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|DateWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|HiveDecimalWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|DataOutputBuffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|MockSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_class
specifier|public
class|class
name|TestRecordReaderImpl
block|{
comment|// can add .verboseLogging() to cause Mockito to log invocations
specifier|private
specifier|final
name|MockSettings
name|settings
init|=
name|Mockito
operator|.
name|withSettings
argument_list|()
operator|.
name|verboseLogging
argument_list|()
decl_stmt|;
specifier|static
class|class
name|BufferInStream
extends|extends
name|InputStream
implements|implements
name|PositionedReadable
implements|,
name|Seekable
block|{
specifier|private
specifier|final
name|byte
index|[]
name|buffer
decl_stmt|;
specifier|private
specifier|final
name|int
name|length
decl_stmt|;
specifier|private
name|int
name|position
init|=
literal|0
decl_stmt|;
name|BufferInStream
parameter_list|(
name|byte
index|[]
name|bytes
parameter_list|,
name|int
name|length
parameter_list|)
block|{
name|this
operator|.
name|buffer
operator|=
name|bytes
expr_stmt|;
name|this
operator|.
name|length
operator|=
name|length
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|read
parameter_list|()
block|{
if|if
condition|(
name|position
operator|<
name|length
condition|)
block|{
return|return
name|buffer
index|[
name|position
operator|++
index|]
return|;
block|}
return|return
operator|-
literal|1
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|read
parameter_list|(
name|byte
index|[]
name|bytes
parameter_list|,
name|int
name|offset
parameter_list|,
name|int
name|length
parameter_list|)
block|{
name|int
name|lengthToRead
init|=
name|Math
operator|.
name|min
argument_list|(
name|length
argument_list|,
name|this
operator|.
name|length
operator|-
name|this
operator|.
name|position
argument_list|)
decl_stmt|;
if|if
condition|(
name|lengthToRead
operator|>=
literal|0
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|lengthToRead
condition|;
operator|++
name|i
control|)
block|{
name|bytes
index|[
name|offset
operator|+
name|i
index|]
operator|=
name|buffer
index|[
name|position
operator|++
index|]
expr_stmt|;
block|}
return|return
name|lengthToRead
return|;
block|}
else|else
block|{
return|return
operator|-
literal|1
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|int
name|read
parameter_list|(
name|long
name|position
parameter_list|,
name|byte
index|[]
name|bytes
parameter_list|,
name|int
name|offset
parameter_list|,
name|int
name|length
parameter_list|)
block|{
name|this
operator|.
name|position
operator|=
operator|(
name|int
operator|)
name|position
expr_stmt|;
return|return
name|read
argument_list|(
name|bytes
argument_list|,
name|offset
argument_list|,
name|length
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|readFully
parameter_list|(
name|long
name|position
parameter_list|,
name|byte
index|[]
name|bytes
parameter_list|,
name|int
name|offset
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|position
operator|=
operator|(
name|int
operator|)
name|position
expr_stmt|;
while|while
condition|(
name|length
operator|>
literal|0
condition|)
block|{
name|int
name|result
init|=
name|read
argument_list|(
name|bytes
argument_list|,
name|offset
argument_list|,
name|length
argument_list|)
decl_stmt|;
name|offset
operator|+=
name|result
expr_stmt|;
name|length
operator|-=
name|result
expr_stmt|;
if|if
condition|(
name|result
operator|<
literal|0
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Read past end of buffer at "
operator|+
name|offset
argument_list|)
throw|;
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|readFully
parameter_list|(
name|long
name|position
parameter_list|,
name|byte
index|[]
name|bytes
parameter_list|)
throws|throws
name|IOException
block|{
name|readFully
argument_list|(
name|position
argument_list|,
name|bytes
argument_list|,
literal|0
argument_list|,
name|bytes
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|seek
parameter_list|(
name|long
name|position
parameter_list|)
block|{
name|this
operator|.
name|position
operator|=
operator|(
name|int
operator|)
name|position
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getPos
parameter_list|()
block|{
return|return
name|position
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|seekToNewSource
parameter_list|(
name|long
name|position
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|position
operator|=
operator|(
name|int
operator|)
name|position
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMaxLengthToReader
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|OrcProto
operator|.
name|Type
name|rowType
init|=
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|STRUCT
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|OrcProto
operator|.
name|Footer
name|footer
init|=
name|OrcProto
operator|.
name|Footer
operator|.
name|newBuilder
argument_list|()
operator|.
name|setHeaderLength
argument_list|(
literal|0
argument_list|)
operator|.
name|setContentLength
argument_list|(
literal|0
argument_list|)
operator|.
name|setNumberOfRows
argument_list|(
literal|0
argument_list|)
operator|.
name|setRowIndexStride
argument_list|(
literal|0
argument_list|)
operator|.
name|addTypes
argument_list|(
name|rowType
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|OrcProto
operator|.
name|PostScript
name|ps
init|=
name|OrcProto
operator|.
name|PostScript
operator|.
name|newBuilder
argument_list|()
operator|.
name|setCompression
argument_list|(
name|OrcProto
operator|.
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|setFooterLength
argument_list|(
name|footer
operator|.
name|getSerializedSize
argument_list|()
argument_list|)
operator|.
name|setMagic
argument_list|(
literal|"ORC"
argument_list|)
operator|.
name|addVersion
argument_list|(
literal|0
argument_list|)
operator|.
name|addVersion
argument_list|(
literal|11
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|DataOutputBuffer
name|buffer
init|=
operator|new
name|DataOutputBuffer
argument_list|()
decl_stmt|;
name|footer
operator|.
name|writeTo
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
name|ps
operator|.
name|writeTo
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|write
argument_list|(
name|ps
operator|.
name|getSerializedSize
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
name|fs
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FileSystem
operator|.
name|class
argument_list|,
name|settings
argument_list|)
decl_stmt|;
name|FSDataInputStream
name|file
init|=
operator|new
name|FSDataInputStream
argument_list|(
operator|new
name|BufferInStream
argument_list|(
name|buffer
operator|.
name|getData
argument_list|()
argument_list|,
name|buffer
operator|.
name|getLength
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|Path
name|p
init|=
operator|new
name|Path
argument_list|(
literal|"/dir/file.orc"
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|fs
operator|.
name|open
argument_list|(
name|p
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|file
argument_list|)
expr_stmt|;
name|OrcFile
operator|.
name|ReaderOptions
name|options
init|=
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|options
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
expr_stmt|;
name|options
operator|.
name|maxLength
argument_list|(
name|buffer
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|fs
operator|.
name|getFileStatus
argument_list|(
name|p
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|FileStatus
argument_list|(
literal|10
argument_list|,
literal|false
argument_list|,
literal|3
argument_list|,
literal|3000
argument_list|,
literal|0
argument_list|,
name|p
argument_list|)
argument_list|)
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|p
argument_list|,
name|options
argument_list|)
decl_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCompareToRangeInt
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
name|Location
operator|.
name|BEFORE
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|19L
argument_list|,
literal|20L
argument_list|,
literal|40L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|AFTER
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|41L
argument_list|,
literal|20L
argument_list|,
literal|40L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|MIN
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|20L
argument_list|,
literal|20L
argument_list|,
literal|40L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|MIDDLE
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|21L
argument_list|,
literal|20L
argument_list|,
literal|40L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|MAX
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|40L
argument_list|,
literal|20L
argument_list|,
literal|40L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|BEFORE
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|0L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|MIN
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|AFTER
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|2L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCompareToRangeString
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
name|Location
operator|.
name|BEFORE
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|,
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|AFTER
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"d"
argument_list|,
literal|"b"
argument_list|,
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|MIN
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"b"
argument_list|,
literal|"b"
argument_list|,
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|MIDDLE
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"bb"
argument_list|,
literal|"b"
argument_list|,
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|MAX
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"c"
argument_list|,
literal|"b"
argument_list|,
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|BEFORE
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|,
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|MIN
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"b"
argument_list|,
literal|"b"
argument_list|,
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|AFTER
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"c"
argument_list|,
literal|"b"
argument_list|,
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCompareToCharNeedConvert
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
name|Location
operator|.
name|BEFORE
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"apple"
argument_list|,
literal|"hello"
argument_list|,
literal|"world"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|AFTER
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"zombie"
argument_list|,
literal|"hello"
argument_list|,
literal|"world"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|MIN
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"hello"
argument_list|,
literal|"hello"
argument_list|,
literal|"world"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|MIDDLE
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"pilot"
argument_list|,
literal|"hello"
argument_list|,
literal|"world"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|MAX
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"world"
argument_list|,
literal|"hello"
argument_list|,
literal|"world"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|BEFORE
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"apple"
argument_list|,
literal|"hello"
argument_list|,
literal|"hello"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|MIN
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"hello"
argument_list|,
literal|"hello"
argument_list|,
literal|"hello"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|AFTER
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"zombie"
argument_list|,
literal|"hello"
argument_list|,
literal|"hello"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetMin
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|10L
argument_list|,
name|RecordReaderImpl
operator|.
name|getMin
argument_list|(
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createIntStats
argument_list|(
literal|10L
argument_list|,
literal|100L
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10.0d
argument_list|,
name|RecordReaderImpl
operator|.
name|getMin
argument_list|(
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setDoubleStatistics
argument_list|(
name|OrcProto
operator|.
name|DoubleStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setMinimum
argument_list|(
literal|10.0d
argument_list|)
operator|.
name|setMaximum
argument_list|(
literal|100.0d
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|RecordReaderImpl
operator|.
name|getMin
argument_list|(
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setStringStatistics
argument_list|(
name|OrcProto
operator|.
name|StringStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|RecordReaderImpl
operator|.
name|getMin
argument_list|(
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setStringStatistics
argument_list|(
name|OrcProto
operator|.
name|StringStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setMinimum
argument_list|(
literal|"a"
argument_list|)
operator|.
name|setMaximum
argument_list|(
literal|"b"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello"
argument_list|,
name|RecordReaderImpl
operator|.
name|getMin
argument_list|(
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createStringStats
argument_list|(
literal|"hello"
argument_list|,
literal|"world"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"111.1"
argument_list|)
argument_list|,
name|RecordReaderImpl
operator|.
name|getMin
argument_list|(
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createDecimalStats
argument_list|(
literal|"111.1"
argument_list|,
literal|"112.1"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|OrcProto
operator|.
name|ColumnStatistics
name|createIntStats
parameter_list|(
name|Long
name|min
parameter_list|,
name|Long
name|max
parameter_list|)
block|{
name|OrcProto
operator|.
name|IntegerStatistics
operator|.
name|Builder
name|intStats
init|=
name|OrcProto
operator|.
name|IntegerStatistics
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
if|if
condition|(
name|min
operator|!=
literal|null
condition|)
block|{
name|intStats
operator|.
name|setMinimum
argument_list|(
name|min
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|max
operator|!=
literal|null
condition|)
block|{
name|intStats
operator|.
name|setMaximum
argument_list|(
name|max
argument_list|)
expr_stmt|;
block|}
return|return
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setIntStatistics
argument_list|(
name|intStats
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
specifier|private
specifier|static
name|OrcProto
operator|.
name|ColumnStatistics
name|createBooleanStats
parameter_list|(
name|int
name|n
parameter_list|,
name|int
name|trueCount
parameter_list|)
block|{
name|OrcProto
operator|.
name|BucketStatistics
operator|.
name|Builder
name|boolStats
init|=
name|OrcProto
operator|.
name|BucketStatistics
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|boolStats
operator|.
name|addCount
argument_list|(
name|trueCount
argument_list|)
expr_stmt|;
return|return
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setNumberOfValues
argument_list|(
name|n
argument_list|)
operator|.
name|setBucketStatistics
argument_list|(
name|boolStats
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
specifier|private
specifier|static
name|OrcProto
operator|.
name|ColumnStatistics
name|createIntStats
parameter_list|(
name|int
name|min
parameter_list|,
name|int
name|max
parameter_list|)
block|{
name|OrcProto
operator|.
name|IntegerStatistics
operator|.
name|Builder
name|intStats
init|=
name|OrcProto
operator|.
name|IntegerStatistics
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|intStats
operator|.
name|setMinimum
argument_list|(
name|min
argument_list|)
expr_stmt|;
name|intStats
operator|.
name|setMaximum
argument_list|(
name|max
argument_list|)
expr_stmt|;
return|return
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setIntStatistics
argument_list|(
name|intStats
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
specifier|private
specifier|static
name|OrcProto
operator|.
name|ColumnStatistics
name|createDoubleStats
parameter_list|(
name|double
name|min
parameter_list|,
name|double
name|max
parameter_list|)
block|{
name|OrcProto
operator|.
name|DoubleStatistics
operator|.
name|Builder
name|dblStats
init|=
name|OrcProto
operator|.
name|DoubleStatistics
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|dblStats
operator|.
name|setMinimum
argument_list|(
name|min
argument_list|)
expr_stmt|;
name|dblStats
operator|.
name|setMaximum
argument_list|(
name|max
argument_list|)
expr_stmt|;
return|return
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setDoubleStatistics
argument_list|(
name|dblStats
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
specifier|private
specifier|static
name|OrcProto
operator|.
name|ColumnStatistics
name|createStringStats
parameter_list|(
name|String
name|min
parameter_list|,
name|String
name|max
parameter_list|,
name|boolean
name|hasNull
parameter_list|)
block|{
name|OrcProto
operator|.
name|StringStatistics
operator|.
name|Builder
name|strStats
init|=
name|OrcProto
operator|.
name|StringStatistics
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|strStats
operator|.
name|setMinimum
argument_list|(
name|min
argument_list|)
expr_stmt|;
name|strStats
operator|.
name|setMaximum
argument_list|(
name|max
argument_list|)
expr_stmt|;
return|return
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setStringStatistics
argument_list|(
name|strStats
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|setHasNull
argument_list|(
name|hasNull
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
specifier|private
specifier|static
name|OrcProto
operator|.
name|ColumnStatistics
name|createStringStats
parameter_list|(
name|String
name|min
parameter_list|,
name|String
name|max
parameter_list|)
block|{
name|OrcProto
operator|.
name|StringStatistics
operator|.
name|Builder
name|strStats
init|=
name|OrcProto
operator|.
name|StringStatistics
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|strStats
operator|.
name|setMinimum
argument_list|(
name|min
argument_list|)
expr_stmt|;
name|strStats
operator|.
name|setMaximum
argument_list|(
name|max
argument_list|)
expr_stmt|;
return|return
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setStringStatistics
argument_list|(
name|strStats
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
specifier|private
specifier|static
name|OrcProto
operator|.
name|ColumnStatistics
name|createDateStats
parameter_list|(
name|int
name|min
parameter_list|,
name|int
name|max
parameter_list|)
block|{
name|OrcProto
operator|.
name|DateStatistics
operator|.
name|Builder
name|dateStats
init|=
name|OrcProto
operator|.
name|DateStatistics
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|dateStats
operator|.
name|setMinimum
argument_list|(
name|min
argument_list|)
expr_stmt|;
name|dateStats
operator|.
name|setMaximum
argument_list|(
name|max
argument_list|)
expr_stmt|;
return|return
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setDateStatistics
argument_list|(
name|dateStats
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
specifier|private
specifier|static
name|OrcProto
operator|.
name|ColumnStatistics
name|createTimestampStats
parameter_list|(
name|long
name|min
parameter_list|,
name|long
name|max
parameter_list|)
block|{
name|OrcProto
operator|.
name|TimestampStatistics
operator|.
name|Builder
name|tsStats
init|=
name|OrcProto
operator|.
name|TimestampStatistics
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|tsStats
operator|.
name|setMinimum
argument_list|(
name|min
argument_list|)
expr_stmt|;
name|tsStats
operator|.
name|setMaximum
argument_list|(
name|max
argument_list|)
expr_stmt|;
return|return
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setTimestampStatistics
argument_list|(
name|tsStats
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
specifier|private
specifier|static
name|OrcProto
operator|.
name|ColumnStatistics
name|createDecimalStats
parameter_list|(
name|String
name|min
parameter_list|,
name|String
name|max
parameter_list|)
block|{
name|OrcProto
operator|.
name|DecimalStatistics
operator|.
name|Builder
name|decStats
init|=
name|OrcProto
operator|.
name|DecimalStatistics
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|decStats
operator|.
name|setMinimum
argument_list|(
name|min
argument_list|)
expr_stmt|;
name|decStats
operator|.
name|setMaximum
argument_list|(
name|max
argument_list|)
expr_stmt|;
return|return
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setDecimalStatistics
argument_list|(
name|decStats
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
specifier|private
specifier|static
name|OrcProto
operator|.
name|ColumnStatistics
name|createDecimalStats
parameter_list|(
name|String
name|min
parameter_list|,
name|String
name|max
parameter_list|,
name|boolean
name|hasNull
parameter_list|)
block|{
name|OrcProto
operator|.
name|DecimalStatistics
operator|.
name|Builder
name|decStats
init|=
name|OrcProto
operator|.
name|DecimalStatistics
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|decStats
operator|.
name|setMinimum
argument_list|(
name|min
argument_list|)
expr_stmt|;
name|decStats
operator|.
name|setMaximum
argument_list|(
name|max
argument_list|)
expr_stmt|;
return|return
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setDecimalStatistics
argument_list|(
name|decStats
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|setHasNull
argument_list|(
name|hasNull
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetMax
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|100L
argument_list|,
name|RecordReaderImpl
operator|.
name|getMax
argument_list|(
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createIntStats
argument_list|(
literal|10L
argument_list|,
literal|100L
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|100.0d
argument_list|,
name|RecordReaderImpl
operator|.
name|getMax
argument_list|(
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setDoubleStatistics
argument_list|(
name|OrcProto
operator|.
name|DoubleStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setMinimum
argument_list|(
literal|10.0d
argument_list|)
operator|.
name|setMaximum
argument_list|(
literal|100.0d
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|RecordReaderImpl
operator|.
name|getMax
argument_list|(
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setStringStatistics
argument_list|(
name|OrcProto
operator|.
name|StringStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
name|RecordReaderImpl
operator|.
name|getMax
argument_list|(
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setStringStatistics
argument_list|(
name|OrcProto
operator|.
name|StringStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setMinimum
argument_list|(
literal|"a"
argument_list|)
operator|.
name|setMaximum
argument_list|(
literal|"b"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"world"
argument_list|,
name|RecordReaderImpl
operator|.
name|getMax
argument_list|(
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createStringStats
argument_list|(
literal|"hello"
argument_list|,
literal|"world"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"112.1"
argument_list|)
argument_list|,
name|RecordReaderImpl
operator|.
name|getMax
argument_list|(
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createDecimalStats
argument_list|(
literal|"111.1"
argument_list|,
literal|"112.1"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPredEvalWithBooleanStats
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|BOOLEAN
argument_list|,
literal|"x"
argument_list|,
literal|true
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createBooleanStats
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createBooleanStats
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|BOOLEAN
argument_list|,
literal|"x"
argument_list|,
literal|true
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createBooleanStats
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createBooleanStats
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|BOOLEAN
argument_list|,
literal|"x"
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createBooleanStats
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createBooleanStats
argument_list|(
literal|10
argument_list|,
literal|0
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPredEvalWithIntStats
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|LONG
argument_list|,
literal|"x"
argument_list|,
literal|15L
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|FLOAT
argument_list|,
literal|"x"
argument_list|,
literal|15.0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// Stats gets converted to column type. "15" is outside of "10" and "100"
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|STRING
argument_list|,
literal|"x"
argument_list|,
literal|"15"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// Integer stats will not be converted date because of days/seconds/millis ambiguity
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|DATE
argument_list|,
literal|"x"
argument_list|,
operator|new
name|DateWritable
argument_list|(
literal|15
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|DECIMAL
argument_list|,
literal|"x"
argument_list|,
operator|new
name|HiveDecimalWritable
argument_list|(
literal|"15"
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|TIMESTAMP
argument_list|,
literal|"x"
argument_list|,
operator|new
name|Timestamp
argument_list|(
literal|15
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPredEvalWithDoubleStats
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|LONG
argument_list|,
literal|"x"
argument_list|,
literal|15L
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDoubleStats
argument_list|(
literal|10.0
argument_list|,
literal|100.0
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|FLOAT
argument_list|,
literal|"x"
argument_list|,
literal|15.0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDoubleStats
argument_list|(
literal|10.0
argument_list|,
literal|100.0
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// Stats gets converted to column type. "15.0" is outside of "10.0" and "100.0"
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|STRING
argument_list|,
literal|"x"
argument_list|,
literal|"15"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDoubleStats
argument_list|(
literal|10.0
argument_list|,
literal|100.0
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// Double is not converted to date type because of days/seconds/millis ambiguity
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|DATE
argument_list|,
literal|"x"
argument_list|,
operator|new
name|DateWritable
argument_list|(
literal|15
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDoubleStats
argument_list|(
literal|10.0
argument_list|,
literal|100.0
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|DECIMAL
argument_list|,
literal|"x"
argument_list|,
operator|new
name|HiveDecimalWritable
argument_list|(
literal|"15"
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDoubleStats
argument_list|(
literal|10.0
argument_list|,
literal|100.0
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|TIMESTAMP
argument_list|,
literal|"x"
argument_list|,
operator|new
name|Timestamp
argument_list|(
literal|15
operator|*
literal|1000L
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDoubleStats
argument_list|(
literal|10.0
argument_list|,
literal|100.0
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|TIMESTAMP
argument_list|,
literal|"x"
argument_list|,
operator|new
name|Timestamp
argument_list|(
literal|150
operator|*
literal|1000L
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDoubleStats
argument_list|(
literal|10.0
argument_list|,
literal|100.0
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPredEvalWithStringStats
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|LONG
argument_list|,
literal|"x"
argument_list|,
literal|100L
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"10"
argument_list|,
literal|"1000"
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|FLOAT
argument_list|,
literal|"x"
argument_list|,
literal|100.0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"10"
argument_list|,
literal|"1000"
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|STRING
argument_list|,
literal|"x"
argument_list|,
literal|"100"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"10"
argument_list|,
literal|"1000"
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// IllegalArgumentException is thrown when converting String to Date, hence YES_NO
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|DATE
argument_list|,
literal|"x"
argument_list|,
operator|new
name|DateWritable
argument_list|(
literal|100
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDateStats
argument_list|(
literal|10
argument_list|,
literal|1000
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|DECIMAL
argument_list|,
literal|"x"
argument_list|,
operator|new
name|HiveDecimalWritable
argument_list|(
literal|"100"
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"10"
argument_list|,
literal|"1000"
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|TIMESTAMP
argument_list|,
literal|"x"
argument_list|,
operator|new
name|Timestamp
argument_list|(
literal|100
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"10"
argument_list|,
literal|"1000"
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPredEvalWithDateStats
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|LONG
argument_list|,
literal|"x"
argument_list|,
literal|15L
argument_list|,
literal|null
argument_list|)
decl_stmt|;
comment|// Date to Integer conversion is not possible.
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDateStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// Date to Float conversion is also not possible.
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|FLOAT
argument_list|,
literal|"x"
argument_list|,
literal|15.0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDateStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|STRING
argument_list|,
literal|"x"
argument_list|,
literal|"15"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDateStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|STRING
argument_list|,
literal|"x"
argument_list|,
literal|"1970-01-11"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDateStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|STRING
argument_list|,
literal|"x"
argument_list|,
literal|"15.1"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDateStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|STRING
argument_list|,
literal|"x"
argument_list|,
literal|"__a15__1"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDateStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|STRING
argument_list|,
literal|"x"
argument_list|,
literal|"2000-01-16"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDateStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|STRING
argument_list|,
literal|"x"
argument_list|,
literal|"1970-01-16"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDateStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|DATE
argument_list|,
literal|"x"
argument_list|,
operator|new
name|DateWritable
argument_list|(
literal|15
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDateStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|DATE
argument_list|,
literal|"x"
argument_list|,
operator|new
name|DateWritable
argument_list|(
literal|150
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDateStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// Date to Decimal conversion is also not possible.
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|DECIMAL
argument_list|,
literal|"x"
argument_list|,
operator|new
name|HiveDecimalWritable
argument_list|(
literal|"15"
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDateStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|TIMESTAMP
argument_list|,
literal|"x"
argument_list|,
operator|new
name|Timestamp
argument_list|(
literal|15
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDateStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|TIMESTAMP
argument_list|,
literal|"x"
argument_list|,
operator|new
name|Timestamp
argument_list|(
literal|15L
operator|*
literal|24L
operator|*
literal|60L
operator|*
literal|60L
operator|*
literal|1000L
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDateStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPredEvalWithDecimalStats
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|LONG
argument_list|,
literal|"x"
argument_list|,
literal|15L
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDecimalStats
argument_list|(
literal|"10.0"
argument_list|,
literal|"100.0"
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|FLOAT
argument_list|,
literal|"x"
argument_list|,
literal|15.0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDecimalStats
argument_list|(
literal|"10.0"
argument_list|,
literal|"100.0"
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// "15" out of range of "10.0" and "100.0"
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|STRING
argument_list|,
literal|"x"
argument_list|,
literal|"15"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDecimalStats
argument_list|(
literal|"10.0"
argument_list|,
literal|"100.0"
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// Decimal to Date not possible.
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|DATE
argument_list|,
literal|"x"
argument_list|,
operator|new
name|DateWritable
argument_list|(
literal|15
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDecimalStats
argument_list|(
literal|"10.0"
argument_list|,
literal|"100.0"
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|DECIMAL
argument_list|,
literal|"x"
argument_list|,
operator|new
name|HiveDecimalWritable
argument_list|(
literal|"15"
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDecimalStats
argument_list|(
literal|"10.0"
argument_list|,
literal|"100.0"
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|TIMESTAMP
argument_list|,
literal|"x"
argument_list|,
operator|new
name|Timestamp
argument_list|(
literal|15
operator|*
literal|1000L
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDecimalStats
argument_list|(
literal|"10.0"
argument_list|,
literal|"100.0"
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|TIMESTAMP
argument_list|,
literal|"x"
argument_list|,
operator|new
name|Timestamp
argument_list|(
literal|150
operator|*
literal|1000L
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createDecimalStats
argument_list|(
literal|"10.0"
argument_list|,
literal|"100.0"
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPredEvalWithTimestampStats
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|LONG
argument_list|,
literal|"x"
argument_list|,
literal|15L
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createTimestampStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|FLOAT
argument_list|,
literal|"x"
argument_list|,
literal|15.0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createTimestampStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createTimestampStats
argument_list|(
literal|10000
argument_list|,
literal|100000
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|STRING
argument_list|,
literal|"x"
argument_list|,
literal|"15"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createTimestampStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|STRING
argument_list|,
literal|"x"
argument_list|,
operator|new
name|Timestamp
argument_list|(
literal|15
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createTimestampStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|DATE
argument_list|,
literal|"x"
argument_list|,
operator|new
name|DateWritable
argument_list|(
literal|15
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createTimestampStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createTimestampStats
argument_list|(
literal|10
operator|*
literal|24L
operator|*
literal|60L
operator|*
literal|60L
operator|*
literal|1000L
argument_list|,
literal|100
operator|*
literal|24L
operator|*
literal|60L
operator|*
literal|60L
operator|*
literal|1000L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|DECIMAL
argument_list|,
literal|"x"
argument_list|,
operator|new
name|HiveDecimalWritable
argument_list|(
literal|"15"
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createTimestampStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createTimestampStats
argument_list|(
literal|10000
argument_list|,
literal|100000
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|TIMESTAMP
argument_list|,
literal|"x"
argument_list|,
operator|new
name|Timestamp
argument_list|(
literal|15
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createTimestampStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createTimestampStats
argument_list|(
literal|10000
argument_list|,
literal|100000
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEquals
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|LONG
argument_list|,
literal|"x"
argument_list|,
literal|15L
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|20L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|15L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|10L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|10L
argument_list|,
literal|15L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|0L
argument_list|,
literal|10L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|15L
argument_list|,
literal|15L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNullSafeEquals
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|LONG
argument_list|,
literal|"x"
argument_list|,
literal|15L
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|20L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|15L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|10L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|10L
argument_list|,
literal|15L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|0L
argument_list|,
literal|10L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|15L
argument_list|,
literal|15L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLessThan
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|lessThan
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|LESS_THAN
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|LONG
argument_list|,
literal|"x"
argument_list|,
literal|15L
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|20L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|lessThan
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|15L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|lessThan
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|10L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|lessThan
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|10L
argument_list|,
literal|15L
argument_list|)
argument_list|,
name|lessThan
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|0L
argument_list|,
literal|10L
argument_list|)
argument_list|,
name|lessThan
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLessThanEquals
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|LESS_THAN_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|LONG
argument_list|,
literal|"x"
argument_list|,
literal|15L
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|20L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|15L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|10L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|10L
argument_list|,
literal|15L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|0L
argument_list|,
literal|10L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIn
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|10L
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|20L
argument_list|)
expr_stmt|;
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|IN
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|LONG
argument_list|,
literal|"x"
argument_list|,
literal|null
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|20L
argument_list|,
literal|20L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|30L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|10L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|12L
argument_list|,
literal|18L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBetween
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|10L
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|20L
argument_list|)
expr_stmt|;
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|BETWEEN
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|LONG
argument_list|,
literal|"x"
argument_list|,
literal|null
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|0L
argument_list|,
literal|5L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|30L
argument_list|,
literal|40L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|5L
argument_list|,
literal|15L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|15L
argument_list|,
literal|25L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|5L
argument_list|,
literal|25L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|10L
argument_list|,
literal|20L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|12L
argument_list|,
literal|18L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsNull
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|IS_NULL
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|LONG
argument_list|,
literal|"x"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createIntStats
argument_list|(
literal|20L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEqualsWithNullInStats
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|STRING
argument_list|,
literal|"x"
argument_list|,
literal|"c"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"d"
argument_list|,
literal|"e"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// before
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// after
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"c"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// max
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"d"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// min
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"d"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// middle
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"c"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// same
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNullSafeEqualsWithNullInStats
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|STRING
argument_list|,
literal|"x"
argument_list|,
literal|"c"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"d"
argument_list|,
literal|"e"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// before
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// after
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"c"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// max
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"d"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// min
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"d"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// middle
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"c"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// same
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLessThanWithNullInStats
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|LESS_THAN
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|STRING
argument_list|,
literal|"x"
argument_list|,
literal|"c"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"d"
argument_list|,
literal|"e"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// before
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// after
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"c"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// max
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"d"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// min
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"d"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// middle
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
comment|// min, same stats
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"c"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLessThanEqualsWithNullInStats
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|LESS_THAN_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|STRING
argument_list|,
literal|"x"
argument_list|,
literal|"c"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"d"
argument_list|,
literal|"e"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// before
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// after
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"c"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// max
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"d"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// min
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"d"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// middle
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"c"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// same
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInWithNullInStats
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"c"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"f"
argument_list|)
expr_stmt|;
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|IN
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|STRING
argument_list|,
literal|"x"
argument_list|,
literal|null
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
comment|// before& after
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"d"
argument_list|,
literal|"e"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// after
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"e"
argument_list|,
literal|"f"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// max
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"d"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// min
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"d"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// middle
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"c"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// same
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBetweenWithNullInStats
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"c"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"f"
argument_list|)
expr_stmt|;
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|BETWEEN
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|STRING
argument_list|,
literal|"x"
argument_list|,
literal|null
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
comment|// before& after
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"d"
argument_list|,
literal|"e"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
comment|// before& max
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"e"
argument_list|,
literal|"f"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
comment|// before& before
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"h"
argument_list|,
literal|"g"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
comment|// before& min
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"f"
argument_list|,
literal|"g"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
comment|// before& middle
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"e"
argument_list|,
literal|"g"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
comment|// min& after
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"e"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
comment|// min& max
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"f"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
comment|// min& middle
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"g"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// after
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"c"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// max
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"d"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// middle
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
comment|// min& after, same stats
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"c"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsNullWithNullInStats
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|IS_NULL
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|STRING
argument_list|,
literal|"x"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"d"
argument_list|,
literal|true
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicateProto
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"d"
argument_list|,
literal|false
argument_list|)
argument_list|,
name|pred
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOverlap
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
operator|!
name|RecordReaderUtils
operator|.
name|overlap
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
operator|-
literal|10
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|RecordReaderUtils
operator|.
name|overlap
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|RecordReaderUtils
operator|.
name|overlap
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|RecordReaderUtils
operator|.
name|overlap
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
literal|2
argument_list|,
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|RecordReaderUtils
operator|.
name|overlap
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|RecordReaderUtils
operator|.
name|overlap
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|RecordReaderUtils
operator|.
name|overlap
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|RecordReaderUtils
operator|.
name|overlap
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
operator|-
literal|1
argument_list|,
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|!
name|RecordReaderUtils
operator|.
name|overlap
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|,
literal|12
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|DiskRangeList
name|diskRanges
parameter_list|(
name|Integer
modifier|...
name|points
parameter_list|)
block|{
name|DiskRangeList
name|head
init|=
literal|null
decl_stmt|,
name|tail
init|=
literal|null
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|points
operator|.
name|length
condition|;
name|i
operator|+=
literal|2
control|)
block|{
name|DiskRangeList
name|range
init|=
operator|new
name|DiskRangeList
argument_list|(
name|points
index|[
name|i
index|]
argument_list|,
name|points
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
decl_stmt|;
if|if
condition|(
name|tail
operator|==
literal|null
condition|)
block|{
name|head
operator|=
name|tail
operator|=
name|range
expr_stmt|;
block|}
else|else
block|{
name|tail
operator|=
name|tail
operator|.
name|insertAfter
argument_list|(
name|range
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|head
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetIndexPosition
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|RecordReaderUtils
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|INT
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|RecordReaderUtils
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|INT
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|RecordReaderUtils
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|INT
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|RecordReaderUtils
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|INT
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|RecordReaderUtils
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DICTIONARY
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|STRING
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|RecordReaderUtils
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|BINARY
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|RecordReaderUtils
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|BINARY
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|RecordReaderUtils
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|BINARY
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|LENGTH
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|RecordReaderUtils
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|BINARY
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|LENGTH
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|RecordReaderUtils
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|DECIMAL
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|RecordReaderUtils
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|DECIMAL
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|RecordReaderUtils
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|DECIMAL
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|SECONDARY
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|RecordReaderUtils
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|DECIMAL
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|SECONDARY
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|RecordReaderUtils
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|TIMESTAMP
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|RecordReaderUtils
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|TIMESTAMP
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|RecordReaderUtils
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|TIMESTAMP
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|SECONDARY
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|RecordReaderUtils
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|TIMESTAMP
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|SECONDARY
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPartialPlan
parameter_list|()
throws|throws
name|Exception
block|{
name|DiskRangeList
name|result
decl_stmt|;
comment|// set the streams
name|List
argument_list|<
name|OrcProto
operator|.
name|Stream
argument_list|>
name|streams
init|=
operator|new
name|ArrayList
argument_list|<
name|OrcProto
operator|.
name|Stream
argument_list|>
argument_list|()
decl_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|1
argument_list|)
operator|.
name|setLength
argument_list|(
literal|1000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|1
argument_list|)
operator|.
name|setLength
argument_list|(
literal|99000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|2
argument_list|)
operator|.
name|setLength
argument_list|(
literal|2000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|2
argument_list|)
operator|.
name|setLength
argument_list|(
literal|98000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|boolean
index|[]
name|columns
init|=
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|true
block|,
literal|false
block|}
decl_stmt|;
name|boolean
index|[]
name|rowGroups
init|=
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|true
block|,
literal|false
block|,
literal|false
block|,
literal|true
block|,
literal|false
block|}
decl_stmt|;
comment|// set the index
name|OrcProto
operator|.
name|RowIndex
index|[]
name|indexes
init|=
operator|new
name|OrcProto
operator|.
name|RowIndex
index|[
name|columns
operator|.
name|length
index|]
decl_stmt|;
name|indexes
index|[
literal|1
index|]
operator|=
name|OrcProto
operator|.
name|RowIndex
operator|.
name|newBuilder
argument_list|()
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|0
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|0
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|100
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|10000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|200
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|20000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|300
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|30000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|400
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|40000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|500
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|50000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
comment|// set encodings
name|List
argument_list|<
name|OrcProto
operator|.
name|ColumnEncoding
argument_list|>
name|encodings
init|=
operator|new
name|ArrayList
argument_list|<
name|OrcProto
operator|.
name|ColumnEncoding
argument_list|>
argument_list|()
decl_stmt|;
name|encodings
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|encodings
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|encodings
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// set types struct{x: int, y: int}
name|List
argument_list|<
name|OrcProto
operator|.
name|Type
argument_list|>
name|types
init|=
operator|new
name|ArrayList
argument_list|<
name|OrcProto
operator|.
name|Type
argument_list|>
argument_list|()
decl_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|STRUCT
argument_list|)
operator|.
name|addSubtypes
argument_list|(
literal|1
argument_list|)
operator|.
name|addSubtypes
argument_list|(
literal|2
argument_list|)
operator|.
name|addFieldNames
argument_list|(
literal|"x"
argument_list|)
operator|.
name|addFieldNames
argument_list|(
literal|"y"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|INT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|INT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// filter by rows and groups
name|result
operator|=
name|RecordReaderImpl
operator|.
name|planReadPartialDataStreams
argument_list|(
name|streams
argument_list|,
name|indexes
argument_list|,
name|columns
argument_list|,
name|rowGroups
argument_list|,
literal|false
argument_list|,
name|encodings
argument_list|,
name|types
argument_list|,
literal|32768
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|(
literal|0
argument_list|,
literal|1000
argument_list|,
literal|100
argument_list|,
literal|1000
argument_list|,
literal|400
argument_list|,
literal|1000
argument_list|,
literal|1000
argument_list|,
literal|11000
operator|+
name|RecordReaderUtils
operator|.
name|WORST_UNCOMPRESSED_SLOP
argument_list|,
literal|11000
argument_list|,
literal|21000
operator|+
name|RecordReaderUtils
operator|.
name|WORST_UNCOMPRESSED_SLOP
argument_list|,
literal|41000
argument_list|,
literal|51000
operator|+
name|RecordReaderUtils
operator|.
name|WORST_UNCOMPRESSED_SLOP
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|=
name|RecordReaderImpl
operator|.
name|planReadPartialDataStreams
argument_list|(
name|streams
argument_list|,
name|indexes
argument_list|,
name|columns
argument_list|,
name|rowGroups
argument_list|,
literal|false
argument_list|,
name|encodings
argument_list|,
name|types
argument_list|,
literal|32768
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|(
literal|0
argument_list|,
literal|21000
operator|+
name|RecordReaderUtils
operator|.
name|WORST_UNCOMPRESSED_SLOP
argument_list|,
literal|41000
argument_list|,
literal|51000
operator|+
name|RecordReaderUtils
operator|.
name|WORST_UNCOMPRESSED_SLOP
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// if we read no rows, don't read any bytes
name|rowGroups
operator|=
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|}
expr_stmt|;
name|result
operator|=
name|RecordReaderImpl
operator|.
name|planReadPartialDataStreams
argument_list|(
name|streams
argument_list|,
name|indexes
argument_list|,
name|columns
argument_list|,
name|rowGroups
argument_list|,
literal|false
argument_list|,
name|encodings
argument_list|,
name|types
argument_list|,
literal|32768
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
comment|// all rows, but only columns 0 and 2.
name|rowGroups
operator|=
literal|null
expr_stmt|;
name|columns
operator|=
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|false
block|,
literal|true
block|}
expr_stmt|;
name|result
operator|=
name|RecordReaderImpl
operator|.
name|planReadPartialDataStreams
argument_list|(
name|streams
argument_list|,
name|indexes
argument_list|,
name|columns
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
name|encodings
argument_list|,
name|types
argument_list|,
literal|32768
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|(
literal|100000
argument_list|,
literal|102000
argument_list|,
literal|102000
argument_list|,
literal|200000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|=
name|RecordReaderImpl
operator|.
name|planReadPartialDataStreams
argument_list|(
name|streams
argument_list|,
name|indexes
argument_list|,
name|columns
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
name|encodings
argument_list|,
name|types
argument_list|,
literal|32768
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|(
literal|100000
argument_list|,
literal|200000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|rowGroups
operator|=
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|true
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|}
expr_stmt|;
name|indexes
index|[
literal|2
index|]
operator|=
name|indexes
index|[
literal|1
index|]
expr_stmt|;
name|indexes
index|[
literal|1
index|]
operator|=
literal|null
expr_stmt|;
name|result
operator|=
name|RecordReaderImpl
operator|.
name|planReadPartialDataStreams
argument_list|(
name|streams
argument_list|,
name|indexes
argument_list|,
name|columns
argument_list|,
name|rowGroups
argument_list|,
literal|false
argument_list|,
name|encodings
argument_list|,
name|types
argument_list|,
literal|32768
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|(
literal|100100
argument_list|,
literal|102000
argument_list|,
literal|112000
argument_list|,
literal|122000
operator|+
name|RecordReaderUtils
operator|.
name|WORST_UNCOMPRESSED_SLOP
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|=
name|RecordReaderImpl
operator|.
name|planReadPartialDataStreams
argument_list|(
name|streams
argument_list|,
name|indexes
argument_list|,
name|columns
argument_list|,
name|rowGroups
argument_list|,
literal|false
argument_list|,
name|encodings
argument_list|,
name|types
argument_list|,
literal|32768
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|(
literal|100100
argument_list|,
literal|102000
argument_list|,
literal|112000
argument_list|,
literal|122000
operator|+
name|RecordReaderUtils
operator|.
name|WORST_UNCOMPRESSED_SLOP
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|rowGroups
operator|=
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|true
block|}
expr_stmt|;
name|indexes
index|[
literal|1
index|]
operator|=
name|indexes
index|[
literal|2
index|]
expr_stmt|;
name|columns
operator|=
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|true
block|,
literal|true
block|}
expr_stmt|;
name|result
operator|=
name|RecordReaderImpl
operator|.
name|planReadPartialDataStreams
argument_list|(
name|streams
argument_list|,
name|indexes
argument_list|,
name|columns
argument_list|,
name|rowGroups
argument_list|,
literal|false
argument_list|,
name|encodings
argument_list|,
name|types
argument_list|,
literal|32768
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|(
literal|500
argument_list|,
literal|1000
argument_list|,
literal|51000
argument_list|,
literal|100000
argument_list|,
literal|100500
argument_list|,
literal|102000
argument_list|,
literal|152000
argument_list|,
literal|200000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|=
name|RecordReaderImpl
operator|.
name|planReadPartialDataStreams
argument_list|(
name|streams
argument_list|,
name|indexes
argument_list|,
name|columns
argument_list|,
name|rowGroups
argument_list|,
literal|false
argument_list|,
name|encodings
argument_list|,
name|types
argument_list|,
literal|32768
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|(
literal|500
argument_list|,
literal|1000
argument_list|,
literal|51000
argument_list|,
literal|100000
argument_list|,
literal|100500
argument_list|,
literal|102000
argument_list|,
literal|152000
argument_list|,
literal|200000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPartialPlanCompressed
parameter_list|()
throws|throws
name|Exception
block|{
name|DiskRangeList
name|result
decl_stmt|;
comment|// set the streams
name|List
argument_list|<
name|OrcProto
operator|.
name|Stream
argument_list|>
name|streams
init|=
operator|new
name|ArrayList
argument_list|<
name|OrcProto
operator|.
name|Stream
argument_list|>
argument_list|()
decl_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|1
argument_list|)
operator|.
name|setLength
argument_list|(
literal|1000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|1
argument_list|)
operator|.
name|setLength
argument_list|(
literal|99000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|2
argument_list|)
operator|.
name|setLength
argument_list|(
literal|2000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|2
argument_list|)
operator|.
name|setLength
argument_list|(
literal|98000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|boolean
index|[]
name|columns
init|=
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|true
block|,
literal|false
block|}
decl_stmt|;
name|boolean
index|[]
name|rowGroups
init|=
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|true
block|,
literal|false
block|,
literal|false
block|,
literal|true
block|,
literal|false
block|}
decl_stmt|;
comment|// set the index
name|OrcProto
operator|.
name|RowIndex
index|[]
name|indexes
init|=
operator|new
name|OrcProto
operator|.
name|RowIndex
index|[
name|columns
operator|.
name|length
index|]
decl_stmt|;
name|indexes
index|[
literal|1
index|]
operator|=
name|OrcProto
operator|.
name|RowIndex
operator|.
name|newBuilder
argument_list|()
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|0
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|0
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|100
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|10000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|200
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|20000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|300
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|30000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|400
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|40000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|500
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|50000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
comment|// set encodings
name|List
argument_list|<
name|OrcProto
operator|.
name|ColumnEncoding
argument_list|>
name|encodings
init|=
operator|new
name|ArrayList
argument_list|<
name|OrcProto
operator|.
name|ColumnEncoding
argument_list|>
argument_list|()
decl_stmt|;
name|encodings
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|encodings
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|encodings
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// set types struct{x: int, y: int}
name|List
argument_list|<
name|OrcProto
operator|.
name|Type
argument_list|>
name|types
init|=
operator|new
name|ArrayList
argument_list|<
name|OrcProto
operator|.
name|Type
argument_list|>
argument_list|()
decl_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|STRUCT
argument_list|)
operator|.
name|addSubtypes
argument_list|(
literal|1
argument_list|)
operator|.
name|addSubtypes
argument_list|(
literal|2
argument_list|)
operator|.
name|addFieldNames
argument_list|(
literal|"x"
argument_list|)
operator|.
name|addFieldNames
argument_list|(
literal|"y"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|INT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|INT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// filter by rows and groups
name|result
operator|=
name|RecordReaderImpl
operator|.
name|planReadPartialDataStreams
argument_list|(
name|streams
argument_list|,
name|indexes
argument_list|,
name|columns
argument_list|,
name|rowGroups
argument_list|,
literal|true
argument_list|,
name|encodings
argument_list|,
name|types
argument_list|,
literal|32768
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|(
literal|0
argument_list|,
literal|1000
argument_list|,
literal|100
argument_list|,
literal|1000
argument_list|,
literal|400
argument_list|,
literal|1000
argument_list|,
literal|1000
argument_list|,
literal|11000
operator|+
operator|(
literal|2
operator|*
literal|32771
operator|)
argument_list|,
literal|11000
argument_list|,
literal|21000
operator|+
operator|(
literal|2
operator|*
literal|32771
operator|)
argument_list|,
literal|41000
argument_list|,
literal|100000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|rowGroups
operator|=
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|true
block|}
expr_stmt|;
name|result
operator|=
name|RecordReaderImpl
operator|.
name|planReadPartialDataStreams
argument_list|(
name|streams
argument_list|,
name|indexes
argument_list|,
name|columns
argument_list|,
name|rowGroups
argument_list|,
literal|true
argument_list|,
name|encodings
argument_list|,
name|types
argument_list|,
literal|32768
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|(
literal|500
argument_list|,
literal|1000
argument_list|,
literal|51000
argument_list|,
literal|100000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPartialPlanString
parameter_list|()
throws|throws
name|Exception
block|{
name|DiskRangeList
name|result
decl_stmt|;
comment|// set the streams
name|List
argument_list|<
name|OrcProto
operator|.
name|Stream
argument_list|>
name|streams
init|=
operator|new
name|ArrayList
argument_list|<
name|OrcProto
operator|.
name|Stream
argument_list|>
argument_list|()
decl_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|1
argument_list|)
operator|.
name|setLength
argument_list|(
literal|1000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|1
argument_list|)
operator|.
name|setLength
argument_list|(
literal|94000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|LENGTH
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|1
argument_list|)
operator|.
name|setLength
argument_list|(
literal|2000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DICTIONARY_DATA
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|1
argument_list|)
operator|.
name|setLength
argument_list|(
literal|3000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|2
argument_list|)
operator|.
name|setLength
argument_list|(
literal|2000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|2
argument_list|)
operator|.
name|setLength
argument_list|(
literal|98000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|boolean
index|[]
name|columns
init|=
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|true
block|,
literal|false
block|}
decl_stmt|;
name|boolean
index|[]
name|rowGroups
init|=
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|true
block|,
literal|false
block|,
literal|false
block|,
literal|true
block|,
literal|true
block|}
decl_stmt|;
comment|// set the index
name|OrcProto
operator|.
name|RowIndex
index|[]
name|indexes
init|=
operator|new
name|OrcProto
operator|.
name|RowIndex
index|[
name|columns
operator|.
name|length
index|]
decl_stmt|;
name|indexes
index|[
literal|1
index|]
operator|=
name|OrcProto
operator|.
name|RowIndex
operator|.
name|newBuilder
argument_list|()
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|0
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|0
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|100
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|10000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|200
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|20000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|300
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|30000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|400
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|40000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|500
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|50000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
comment|// set encodings
name|List
argument_list|<
name|OrcProto
operator|.
name|ColumnEncoding
argument_list|>
name|encodings
init|=
operator|new
name|ArrayList
argument_list|<
name|OrcProto
operator|.
name|ColumnEncoding
argument_list|>
argument_list|()
decl_stmt|;
name|encodings
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|encodings
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DICTIONARY
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|encodings
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// set types struct{x: string, y: int}
name|List
argument_list|<
name|OrcProto
operator|.
name|Type
argument_list|>
name|types
init|=
operator|new
name|ArrayList
argument_list|<
name|OrcProto
operator|.
name|Type
argument_list|>
argument_list|()
decl_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|STRUCT
argument_list|)
operator|.
name|addSubtypes
argument_list|(
literal|1
argument_list|)
operator|.
name|addSubtypes
argument_list|(
literal|2
argument_list|)
operator|.
name|addFieldNames
argument_list|(
literal|"x"
argument_list|)
operator|.
name|addFieldNames
argument_list|(
literal|"y"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|STRING
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|INT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// filter by rows and groups
name|result
operator|=
name|RecordReaderImpl
operator|.
name|planReadPartialDataStreams
argument_list|(
name|streams
argument_list|,
name|indexes
argument_list|,
name|columns
argument_list|,
name|rowGroups
argument_list|,
literal|false
argument_list|,
name|encodings
argument_list|,
name|types
argument_list|,
literal|32768
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|(
literal|100
argument_list|,
literal|1000
argument_list|,
literal|400
argument_list|,
literal|1000
argument_list|,
literal|500
argument_list|,
literal|1000
argument_list|,
literal|11000
argument_list|,
literal|21000
operator|+
name|RecordReaderUtils
operator|.
name|WORST_UNCOMPRESSED_SLOP
argument_list|,
literal|41000
argument_list|,
literal|51000
operator|+
name|RecordReaderUtils
operator|.
name|WORST_UNCOMPRESSED_SLOP
argument_list|,
literal|51000
argument_list|,
literal|95000
argument_list|,
literal|95000
argument_list|,
literal|97000
argument_list|,
literal|97000
argument_list|,
literal|100000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntNullSafeEqualsBloomFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|LONG
argument_list|,
literal|"x"
argument_list|,
literal|15L
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|BloomFilterIO
name|bf
init|=
operator|new
name|BloomFilterIO
argument_list|(
literal|10000
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|20
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
block|{
name|bf
operator|.
name|addLong
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
name|ColumnStatistics
name|cs
init|=
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createIntStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addLong
argument_list|(
literal|15
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntEqualsBloomFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|LONG
argument_list|,
literal|"x"
argument_list|,
literal|15L
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|BloomFilterIO
name|bf
init|=
operator|new
name|BloomFilterIO
argument_list|(
literal|10000
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|20
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
block|{
name|bf
operator|.
name|addLong
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
name|ColumnStatistics
name|cs
init|=
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createIntStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addLong
argument_list|(
literal|15
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntInBloomFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|15L
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|19L
argument_list|)
expr_stmt|;
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|IN
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|LONG
argument_list|,
literal|"x"
argument_list|,
literal|null
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|BloomFilterIO
name|bf
init|=
operator|new
name|BloomFilterIO
argument_list|(
literal|10000
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|20
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
block|{
name|bf
operator|.
name|addLong
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
name|ColumnStatistics
name|cs
init|=
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createIntStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addLong
argument_list|(
literal|19
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addLong
argument_list|(
literal|15
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDoubleNullSafeEqualsBloomFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|FLOAT
argument_list|,
literal|"x"
argument_list|,
literal|15.0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|BloomFilterIO
name|bf
init|=
operator|new
name|BloomFilterIO
argument_list|(
literal|10000
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|20
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
block|{
name|bf
operator|.
name|addDouble
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
name|ColumnStatistics
name|cs
init|=
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createDoubleStats
argument_list|(
literal|10.0
argument_list|,
literal|100.0
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addDouble
argument_list|(
literal|15.0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDoubleEqualsBloomFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|FLOAT
argument_list|,
literal|"x"
argument_list|,
literal|15.0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|BloomFilterIO
name|bf
init|=
operator|new
name|BloomFilterIO
argument_list|(
literal|10000
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|20
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
block|{
name|bf
operator|.
name|addDouble
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
name|ColumnStatistics
name|cs
init|=
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createDoubleStats
argument_list|(
literal|10.0
argument_list|,
literal|100.0
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addDouble
argument_list|(
literal|15.0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDoubleInBloomFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|15.0
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|19.0
argument_list|)
expr_stmt|;
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|IN
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|FLOAT
argument_list|,
literal|"x"
argument_list|,
literal|null
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|BloomFilterIO
name|bf
init|=
operator|new
name|BloomFilterIO
argument_list|(
literal|10000
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|20
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
block|{
name|bf
operator|.
name|addDouble
argument_list|(
name|i
argument_list|)
expr_stmt|;
block|}
name|ColumnStatistics
name|cs
init|=
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createDoubleStats
argument_list|(
literal|10.0
argument_list|,
literal|100.0
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addDouble
argument_list|(
literal|19.0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addDouble
argument_list|(
literal|15.0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStringNullSafeEqualsBloomFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|STRING
argument_list|,
literal|"x"
argument_list|,
literal|"str_15"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|BloomFilterIO
name|bf
init|=
operator|new
name|BloomFilterIO
argument_list|(
literal|10000
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|20
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
block|{
name|bf
operator|.
name|addString
argument_list|(
literal|"str_"
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
name|ColumnStatistics
name|cs
init|=
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createStringStats
argument_list|(
literal|"str_10"
argument_list|,
literal|"str_200"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addString
argument_list|(
literal|"str_15"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStringEqualsBloomFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|STRING
argument_list|,
literal|"x"
argument_list|,
literal|"str_15"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|BloomFilterIO
name|bf
init|=
operator|new
name|BloomFilterIO
argument_list|(
literal|10000
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|20
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
block|{
name|bf
operator|.
name|addString
argument_list|(
literal|"str_"
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
name|ColumnStatistics
name|cs
init|=
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createStringStats
argument_list|(
literal|"str_10"
argument_list|,
literal|"str_200"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addString
argument_list|(
literal|"str_15"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStringInBloomFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"str_15"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"str_19"
argument_list|)
expr_stmt|;
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|IN
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|STRING
argument_list|,
literal|"x"
argument_list|,
literal|null
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|BloomFilterIO
name|bf
init|=
operator|new
name|BloomFilterIO
argument_list|(
literal|10000
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|20
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
block|{
name|bf
operator|.
name|addString
argument_list|(
literal|"str_"
operator|+
name|i
argument_list|)
expr_stmt|;
block|}
name|ColumnStatistics
name|cs
init|=
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createStringStats
argument_list|(
literal|"str_10"
argument_list|,
literal|"str_200"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addString
argument_list|(
literal|"str_19"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addString
argument_list|(
literal|"str_15"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDateWritableNullSafeEqualsBloomFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|DATE
argument_list|,
literal|"x"
argument_list|,
operator|new
name|DateWritable
argument_list|(
literal|15
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|BloomFilterIO
name|bf
init|=
operator|new
name|BloomFilterIO
argument_list|(
literal|10000
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|20
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
block|{
name|bf
operator|.
name|addLong
argument_list|(
operator|(
operator|new
name|DateWritable
argument_list|(
name|i
argument_list|)
operator|)
operator|.
name|getDays
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ColumnStatistics
name|cs
init|=
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createDateStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addLong
argument_list|(
operator|(
operator|new
name|DateWritable
argument_list|(
literal|15
argument_list|)
operator|)
operator|.
name|getDays
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDateWritableEqualsBloomFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|DATE
argument_list|,
literal|"x"
argument_list|,
operator|new
name|DateWritable
argument_list|(
literal|15
argument_list|)
operator|.
name|get
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|BloomFilterIO
name|bf
init|=
operator|new
name|BloomFilterIO
argument_list|(
literal|10000
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|20
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
block|{
name|bf
operator|.
name|addLong
argument_list|(
operator|(
operator|new
name|DateWritable
argument_list|(
name|i
argument_list|)
operator|)
operator|.
name|getDays
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ColumnStatistics
name|cs
init|=
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createDateStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addLong
argument_list|(
operator|(
operator|new
name|DateWritable
argument_list|(
literal|15
argument_list|)
operator|)
operator|.
name|getDays
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDateWritableInBloomFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|args
operator|.
name|add
argument_list|(
operator|new
name|DateWritable
argument_list|(
literal|15
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
operator|new
name|DateWritable
argument_list|(
literal|19
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|IN
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|DATE
argument_list|,
literal|"x"
argument_list|,
literal|null
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|BloomFilterIO
name|bf
init|=
operator|new
name|BloomFilterIO
argument_list|(
literal|10000
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|20
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
block|{
name|bf
operator|.
name|addLong
argument_list|(
operator|(
operator|new
name|DateWritable
argument_list|(
name|i
argument_list|)
operator|)
operator|.
name|getDays
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ColumnStatistics
name|cs
init|=
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createDateStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addLong
argument_list|(
operator|(
operator|new
name|DateWritable
argument_list|(
literal|19
argument_list|)
operator|)
operator|.
name|getDays
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addLong
argument_list|(
operator|(
operator|new
name|DateWritable
argument_list|(
literal|15
argument_list|)
operator|)
operator|.
name|getDays
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTimestampNullSafeEqualsBloomFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|TIMESTAMP
argument_list|,
literal|"x"
argument_list|,
operator|new
name|Timestamp
argument_list|(
literal|15
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|BloomFilterIO
name|bf
init|=
operator|new
name|BloomFilterIO
argument_list|(
literal|10000
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|20
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
block|{
name|bf
operator|.
name|addLong
argument_list|(
operator|(
operator|new
name|Timestamp
argument_list|(
name|i
argument_list|)
operator|)
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ColumnStatistics
name|cs
init|=
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createTimestampStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addLong
argument_list|(
operator|(
operator|new
name|Timestamp
argument_list|(
literal|15
argument_list|)
operator|)
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTimestampEqualsBloomFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|TIMESTAMP
argument_list|,
literal|"x"
argument_list|,
operator|new
name|Timestamp
argument_list|(
literal|15
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|BloomFilterIO
name|bf
init|=
operator|new
name|BloomFilterIO
argument_list|(
literal|10000
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|20
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
block|{
name|bf
operator|.
name|addLong
argument_list|(
operator|(
operator|new
name|Timestamp
argument_list|(
name|i
argument_list|)
operator|)
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ColumnStatistics
name|cs
init|=
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createTimestampStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addLong
argument_list|(
operator|(
operator|new
name|Timestamp
argument_list|(
literal|15
argument_list|)
operator|)
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTimestampInBloomFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|args
operator|.
name|add
argument_list|(
operator|new
name|Timestamp
argument_list|(
literal|15
argument_list|)
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
operator|new
name|Timestamp
argument_list|(
literal|19
argument_list|)
argument_list|)
expr_stmt|;
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|IN
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|TIMESTAMP
argument_list|,
literal|"x"
argument_list|,
literal|null
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|BloomFilterIO
name|bf
init|=
operator|new
name|BloomFilterIO
argument_list|(
literal|10000
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|20
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
block|{
name|bf
operator|.
name|addLong
argument_list|(
operator|(
operator|new
name|Timestamp
argument_list|(
name|i
argument_list|)
operator|)
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ColumnStatistics
name|cs
init|=
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createTimestampStats
argument_list|(
literal|10
argument_list|,
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addLong
argument_list|(
operator|(
operator|new
name|Timestamp
argument_list|(
literal|19
argument_list|)
operator|)
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addLong
argument_list|(
operator|(
operator|new
name|Timestamp
argument_list|(
literal|15
argument_list|)
operator|)
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDecimalNullSafeEqualsBloomFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|DECIMAL
argument_list|,
literal|"x"
argument_list|,
operator|new
name|HiveDecimalWritable
argument_list|(
literal|"15"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|BloomFilterIO
name|bf
init|=
operator|new
name|BloomFilterIO
argument_list|(
literal|10000
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|20
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
block|{
name|bf
operator|.
name|addString
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
name|i
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ColumnStatistics
name|cs
init|=
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createDecimalStats
argument_list|(
literal|"10"
argument_list|,
literal|"200"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addString
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|15
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDecimalEqualsBloomFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|DECIMAL
argument_list|,
literal|"x"
argument_list|,
operator|new
name|HiveDecimalWritable
argument_list|(
literal|"15"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|BloomFilterIO
name|bf
init|=
operator|new
name|BloomFilterIO
argument_list|(
literal|10000
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|20
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
block|{
name|bf
operator|.
name|addString
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
name|i
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ColumnStatistics
name|cs
init|=
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createDecimalStats
argument_list|(
literal|"10"
argument_list|,
literal|"200"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addString
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|15
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDecimalInBloomFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|args
operator|.
name|add
argument_list|(
operator|new
name|HiveDecimalWritable
argument_list|(
literal|"15"
argument_list|)
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
operator|new
name|HiveDecimalWritable
argument_list|(
literal|"19"
argument_list|)
argument_list|)
expr_stmt|;
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|IN
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|DECIMAL
argument_list|,
literal|"x"
argument_list|,
literal|null
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|BloomFilterIO
name|bf
init|=
operator|new
name|BloomFilterIO
argument_list|(
literal|10000
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|20
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
block|{
name|bf
operator|.
name|addString
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
name|i
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ColumnStatistics
name|cs
init|=
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createDecimalStats
argument_list|(
literal|"10"
argument_list|,
literal|"200"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addString
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|19
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addString
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|15
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNullsInBloomFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|args
operator|.
name|add
argument_list|(
operator|new
name|HiveDecimalWritable
argument_list|(
literal|"15"
argument_list|)
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
operator|new
name|HiveDecimalWritable
argument_list|(
literal|"19"
argument_list|)
argument_list|)
expr_stmt|;
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|IN
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|DECIMAL
argument_list|,
literal|"x"
argument_list|,
literal|null
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|BloomFilterIO
name|bf
init|=
operator|new
name|BloomFilterIO
argument_list|(
literal|10000
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|20
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
block|{
name|bf
operator|.
name|addString
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
name|i
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ColumnStatistics
name|cs
init|=
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createDecimalStats
argument_list|(
literal|"10"
argument_list|,
literal|"200"
argument_list|,
literal|false
argument_list|)
argument_list|)
decl_stmt|;
comment|// hasNull is false, so bloom filter should return NO
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|cs
operator|=
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createDecimalStats
argument_list|(
literal|"10"
argument_list|,
literal|"200"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
comment|// hasNull is true, so bloom filter should return YES_NO_NULL
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addString
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|19
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
name|bf
operator|.
name|addString
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|15
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|cs
argument_list|,
name|pred
argument_list|,
name|bf
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

