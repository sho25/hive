begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
package|;
end_package

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|core
operator|.
name|Is
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|type
operator|.
name|HiveDecimal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|RecordReaderImpl
operator|.
name|Location
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|sarg
operator|.
name|PredicateLeaf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|sarg
operator|.
name|SearchArgument
operator|.
name|TruthValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|sarg
operator|.
name|TestSearchArgumentImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|TestRecordReaderImpl
block|{
annotation|@
name|Test
specifier|public
name|void
name|testCompareToRangeInt
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
name|Location
operator|.
name|BEFORE
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|19L
argument_list|,
literal|20L
argument_list|,
literal|40L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|AFTER
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|41L
argument_list|,
literal|20L
argument_list|,
literal|40L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|MIN
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|20L
argument_list|,
literal|20L
argument_list|,
literal|40L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|MIDDLE
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|21L
argument_list|,
literal|20L
argument_list|,
literal|40L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|MAX
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|40L
argument_list|,
literal|20L
argument_list|,
literal|40L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|BEFORE
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|0L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|MIN
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|1L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|AFTER
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|2L
argument_list|,
literal|1L
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCompareToRangeString
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
name|Location
operator|.
name|BEFORE
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|,
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|AFTER
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"d"
argument_list|,
literal|"b"
argument_list|,
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|MIN
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"b"
argument_list|,
literal|"b"
argument_list|,
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|MIDDLE
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"bb"
argument_list|,
literal|"b"
argument_list|,
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|MAX
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"c"
argument_list|,
literal|"b"
argument_list|,
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|BEFORE
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|,
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|MIN
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"b"
argument_list|,
literal|"b"
argument_list|,
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|AFTER
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"c"
argument_list|,
literal|"b"
argument_list|,
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCompareToCharNeedConvert
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
name|Location
operator|.
name|BEFORE
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"apple"
argument_list|,
literal|"hello"
argument_list|,
literal|"world"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|AFTER
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"zombie"
argument_list|,
literal|"hello"
argument_list|,
literal|"world"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|MIN
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"hello"
argument_list|,
literal|"hello"
argument_list|,
literal|"world"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|MIDDLE
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"pilot"
argument_list|,
literal|"hello"
argument_list|,
literal|"world"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|MAX
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"world"
argument_list|,
literal|"hello"
argument_list|,
literal|"world"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|BEFORE
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"apple"
argument_list|,
literal|"hello"
argument_list|,
literal|"hello"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|MIN
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"hello"
argument_list|,
literal|"hello"
argument_list|,
literal|"hello"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Location
operator|.
name|AFTER
argument_list|,
name|RecordReaderImpl
operator|.
name|compareToRange
argument_list|(
literal|"zombie"
argument_list|,
literal|"hello"
argument_list|,
literal|"hello"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetMin
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|10L
argument_list|,
name|RecordReaderImpl
operator|.
name|getMin
argument_list|(
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createIntStats
argument_list|(
literal|10L
argument_list|,
literal|100L
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10.0d
argument_list|,
name|RecordReaderImpl
operator|.
name|getMin
argument_list|(
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setDoubleStatistics
argument_list|(
name|OrcProto
operator|.
name|DoubleStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setMinimum
argument_list|(
literal|10.0d
argument_list|)
operator|.
name|setMaximum
argument_list|(
literal|100.0d
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|RecordReaderImpl
operator|.
name|getMin
argument_list|(
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setStringStatistics
argument_list|(
name|OrcProto
operator|.
name|StringStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|RecordReaderImpl
operator|.
name|getMin
argument_list|(
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setStringStatistics
argument_list|(
name|OrcProto
operator|.
name|StringStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setMinimum
argument_list|(
literal|"a"
argument_list|)
operator|.
name|setMaximum
argument_list|(
literal|"b"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hello"
argument_list|,
name|RecordReaderImpl
operator|.
name|getMin
argument_list|(
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createStringStats
argument_list|(
literal|"hello"
argument_list|,
literal|"world"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"111.1"
argument_list|)
argument_list|,
name|RecordReaderImpl
operator|.
name|getMin
argument_list|(
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createDecimalStats
argument_list|(
literal|"111.1"
argument_list|,
literal|"112.1"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|OrcProto
operator|.
name|ColumnStatistics
name|createIntStats
parameter_list|(
name|Long
name|min
parameter_list|,
name|Long
name|max
parameter_list|)
block|{
name|OrcProto
operator|.
name|IntegerStatistics
operator|.
name|Builder
name|intStats
init|=
name|OrcProto
operator|.
name|IntegerStatistics
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
if|if
condition|(
name|min
operator|!=
literal|null
condition|)
block|{
name|intStats
operator|.
name|setMinimum
argument_list|(
name|min
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|max
operator|!=
literal|null
condition|)
block|{
name|intStats
operator|.
name|setMaximum
argument_list|(
name|max
argument_list|)
expr_stmt|;
block|}
return|return
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setIntStatistics
argument_list|(
name|intStats
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
specifier|private
specifier|static
name|OrcProto
operator|.
name|ColumnStatistics
name|createStringStats
parameter_list|(
name|String
name|min
parameter_list|,
name|String
name|max
parameter_list|)
block|{
name|OrcProto
operator|.
name|StringStatistics
operator|.
name|Builder
name|strStats
init|=
name|OrcProto
operator|.
name|StringStatistics
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|strStats
operator|.
name|setMinimum
argument_list|(
name|min
argument_list|)
expr_stmt|;
name|strStats
operator|.
name|setMaximum
argument_list|(
name|max
argument_list|)
expr_stmt|;
return|return
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setStringStatistics
argument_list|(
name|strStats
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
specifier|private
specifier|static
name|OrcProto
operator|.
name|ColumnStatistics
name|createDecimalStats
parameter_list|(
name|String
name|min
parameter_list|,
name|String
name|max
parameter_list|)
block|{
name|OrcProto
operator|.
name|DecimalStatistics
operator|.
name|Builder
name|decStats
init|=
name|OrcProto
operator|.
name|DecimalStatistics
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|decStats
operator|.
name|setMinimum
argument_list|(
name|min
argument_list|)
expr_stmt|;
name|decStats
operator|.
name|setMaximum
argument_list|(
name|max
argument_list|)
expr_stmt|;
return|return
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setDecimalStatistics
argument_list|(
name|decStats
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetMax
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|100L
argument_list|,
name|RecordReaderImpl
operator|.
name|getMax
argument_list|(
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createIntStats
argument_list|(
literal|10L
argument_list|,
literal|100L
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|100.0d
argument_list|,
name|RecordReaderImpl
operator|.
name|getMax
argument_list|(
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setDoubleStatistics
argument_list|(
name|OrcProto
operator|.
name|DoubleStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setMinimum
argument_list|(
literal|10.0d
argument_list|)
operator|.
name|setMaximum
argument_list|(
literal|100.0d
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|RecordReaderImpl
operator|.
name|getMax
argument_list|(
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setStringStatistics
argument_list|(
name|OrcProto
operator|.
name|StringStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
name|RecordReaderImpl
operator|.
name|getMax
argument_list|(
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|OrcProto
operator|.
name|ColumnStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setStringStatistics
argument_list|(
name|OrcProto
operator|.
name|StringStatistics
operator|.
name|newBuilder
argument_list|()
operator|.
name|setMinimum
argument_list|(
literal|"a"
argument_list|)
operator|.
name|setMaximum
argument_list|(
literal|"b"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"world"
argument_list|,
name|RecordReaderImpl
operator|.
name|getMax
argument_list|(
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createStringStats
argument_list|(
literal|"hello"
argument_list|,
literal|"world"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"112.1"
argument_list|)
argument_list|,
name|RecordReaderImpl
operator|.
name|getMax
argument_list|(
name|ColumnStatisticsImpl
operator|.
name|deserialize
argument_list|(
name|createDecimalStats
argument_list|(
literal|"111.1"
argument_list|,
literal|"112.1"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEquals
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|INTEGER
argument_list|,
literal|"x"
argument_list|,
literal|15L
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|20L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|15L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|10L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|10L
argument_list|,
literal|15L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|0L
argument_list|,
literal|10L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|15L
argument_list|,
literal|15L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|CHAR
argument_list|,
literal|"x"
argument_list|,
literal|"b"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"a"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"b"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|VARCHAR
argument_list|,
literal|"x"
argument_list|,
literal|"b"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"a"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"b"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNullSafeEquals
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|INTEGER
argument_list|,
literal|"x"
argument_list|,
literal|15L
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|20L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|15L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|10L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|10L
argument_list|,
literal|15L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|0L
argument_list|,
literal|10L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|15L
argument_list|,
literal|15L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|CHAR
argument_list|,
literal|"x"
argument_list|,
literal|"hello"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"world"
argument_list|,
literal|"zombie"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"hello"
argument_list|,
literal|"zombie"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"apple"
argument_list|,
literal|"zombie"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"apple"
argument_list|,
literal|"hello"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"apple"
argument_list|,
literal|"banana"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"hello"
argument_list|,
literal|"hello"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|NULL_SAFE_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|VARCHAR
argument_list|,
literal|"x"
argument_list|,
literal|"hello"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"world"
argument_list|,
literal|"zombie"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"hello"
argument_list|,
literal|"zombie"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"apple"
argument_list|,
literal|"zombie"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"apple"
argument_list|,
literal|"hello"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"apple"
argument_list|,
literal|"banana"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"hello"
argument_list|,
literal|"hello"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLessThan
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|lessThan
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|LESS_THAN
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|INTEGER
argument_list|,
literal|"x"
argument_list|,
literal|15L
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|20L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|lessThan
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|15L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|lessThan
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|10L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|lessThan
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|10L
argument_list|,
literal|15L
argument_list|)
argument_list|,
name|lessThan
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|0L
argument_list|,
literal|10L
argument_list|)
argument_list|,
name|lessThan
argument_list|)
argument_list|)
expr_stmt|;
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|LESS_THAN
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|CHAR
argument_list|,
literal|"x"
argument_list|,
literal|"b"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"a"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"b"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|LESS_THAN
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|VARCHAR
argument_list|,
literal|"x"
argument_list|,
literal|"b"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"a"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"b"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLessThanEquals
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|LESS_THAN_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|INTEGER
argument_list|,
literal|"x"
argument_list|,
literal|15L
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|20L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|15L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|10L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|10L
argument_list|,
literal|15L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|0L
argument_list|,
literal|10L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|LESS_THAN_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|CHAR
argument_list|,
literal|"x"
argument_list|,
literal|"b"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"a"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"b"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|LESS_THAN_EQUALS
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|VARCHAR
argument_list|,
literal|"x"
argument_list|,
literal|"b"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"a"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"b"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIn
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|10L
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|20L
argument_list|)
expr_stmt|;
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|IN
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|INTEGER
argument_list|,
literal|"x"
argument_list|,
literal|null
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|20L
argument_list|,
literal|20L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|30L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|10L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|12L
argument_list|,
literal|18L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|args
operator|.
name|clear
argument_list|()
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"a"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"b"
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|IN
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|CHAR
argument_list|,
literal|"x"
argument_list|,
literal|null
argument_list|,
name|args
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"a"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"b"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|IN
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|VARCHAR
argument_list|,
literal|"x"
argument_list|,
literal|null
argument_list|,
name|args
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"a"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"b"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBetween
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|10L
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|20L
argument_list|)
expr_stmt|;
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|BETWEEN
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|INTEGER
argument_list|,
literal|"x"
argument_list|,
literal|null
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|0L
argument_list|,
literal|5L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|30L
argument_list|,
literal|40L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|5L
argument_list|,
literal|15L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|15L
argument_list|,
literal|25L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|5L
argument_list|,
literal|25L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|10L
argument_list|,
literal|20L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|12L
argument_list|,
literal|18L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|args
operator|.
name|clear
argument_list|()
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"a"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"b"
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|BETWEEN
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|CHAR
argument_list|,
literal|"x"
argument_list|,
literal|null
argument_list|,
name|args
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"a"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"b"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|pred
operator|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|BETWEEN
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|VARCHAR
argument_list|,
literal|"x"
argument_list|,
literal|null
argument_list|,
name|args
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"c"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"d"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"a"
argument_list|,
literal|"a"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO_NULL
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createStringStats
argument_list|(
literal|"b"
argument_list|,
literal|"b"
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIsNull
parameter_list|()
throws|throws
name|Exception
block|{
name|PredicateLeaf
name|pred
init|=
name|TestSearchArgumentImpl
operator|.
name|createPredicateLeaf
argument_list|(
name|PredicateLeaf
operator|.
name|Operator
operator|.
name|IS_NULL
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|INTEGER
argument_list|,
literal|"x"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TruthValue
operator|.
name|YES_NO
argument_list|,
name|RecordReaderImpl
operator|.
name|evaluatePredicate
argument_list|(
name|createIntStats
argument_list|(
literal|20L
argument_list|,
literal|30L
argument_list|)
argument_list|,
name|pred
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOverlap
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
operator|!
name|RecordReaderImpl
operator|.
name|overlap
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
operator|-
literal|10
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|RecordReaderImpl
operator|.
name|overlap
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
operator|-
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|RecordReaderImpl
operator|.
name|overlap
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
operator|-
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|RecordReaderImpl
operator|.
name|overlap
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
literal|2
argument_list|,
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|RecordReaderImpl
operator|.
name|overlap
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|RecordReaderImpl
operator|.
name|overlap
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|RecordReaderImpl
operator|.
name|overlap
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|RecordReaderImpl
operator|.
name|overlap
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
operator|-
literal|1
argument_list|,
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|!
name|RecordReaderImpl
operator|.
name|overlap
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
literal|11
argument_list|,
literal|12
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|List
argument_list|<
name|RecordReaderImpl
operator|.
name|DiskRange
argument_list|>
name|diskRanges
parameter_list|(
name|Integer
modifier|...
name|points
parameter_list|)
block|{
name|List
argument_list|<
name|RecordReaderImpl
operator|.
name|DiskRange
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<
name|RecordReaderImpl
operator|.
name|DiskRange
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|points
operator|.
name|length
condition|;
name|i
operator|+=
literal|2
control|)
block|{
name|result
operator|.
name|add
argument_list|(
operator|new
name|RecordReaderImpl
operator|.
name|DiskRange
argument_list|(
name|points
index|[
name|i
index|]
argument_list|,
name|points
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMergeDiskRanges
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|RecordReaderImpl
operator|.
name|DiskRange
argument_list|>
name|list
init|=
name|diskRanges
argument_list|()
decl_stmt|;
name|RecordReaderImpl
operator|.
name|mergeDiskRanges
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|list
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|list
operator|=
name|diskRanges
argument_list|(
literal|100
argument_list|,
literal|200
argument_list|,
literal|300
argument_list|,
literal|400
argument_list|,
literal|500
argument_list|,
literal|600
argument_list|)
expr_stmt|;
name|RecordReaderImpl
operator|.
name|mergeDiskRanges
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|list
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|(
literal|100
argument_list|,
literal|200
argument_list|,
literal|300
argument_list|,
literal|400
argument_list|,
literal|500
argument_list|,
literal|600
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|list
operator|=
name|diskRanges
argument_list|(
literal|100
argument_list|,
literal|200
argument_list|,
literal|150
argument_list|,
literal|300
argument_list|,
literal|400
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|RecordReaderImpl
operator|.
name|mergeDiskRanges
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|list
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|(
literal|100
argument_list|,
literal|300
argument_list|,
literal|400
argument_list|,
literal|500
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|list
operator|=
name|diskRanges
argument_list|(
literal|100
argument_list|,
literal|200
argument_list|,
literal|300
argument_list|,
literal|400
argument_list|,
literal|400
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|RecordReaderImpl
operator|.
name|mergeDiskRanges
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|list
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|(
literal|100
argument_list|,
literal|200
argument_list|,
literal|300
argument_list|,
literal|500
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|list
operator|=
name|diskRanges
argument_list|(
literal|100
argument_list|,
literal|200
argument_list|,
literal|0
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|RecordReaderImpl
operator|.
name|mergeDiskRanges
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|list
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|(
literal|0
argument_list|,
literal|300
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|list
operator|=
name|diskRanges
argument_list|(
literal|0
argument_list|,
literal|500
argument_list|,
literal|200
argument_list|,
literal|400
argument_list|)
expr_stmt|;
name|RecordReaderImpl
operator|.
name|mergeDiskRanges
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|list
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|(
literal|0
argument_list|,
literal|500
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|list
operator|=
name|diskRanges
argument_list|(
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|200
argument_list|,
literal|300
argument_list|,
literal|300
argument_list|,
literal|400
argument_list|)
expr_stmt|;
name|RecordReaderImpl
operator|.
name|mergeDiskRanges
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|list
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|(
literal|0
argument_list|,
literal|400
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetIndexPosition
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|RecordReaderImpl
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|INT
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|RecordReaderImpl
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|INT
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|RecordReaderImpl
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|INT
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|RecordReaderImpl
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|INT
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|RecordReaderImpl
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DICTIONARY
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|STRING
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|RecordReaderImpl
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|BINARY
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|RecordReaderImpl
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|BINARY
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|RecordReaderImpl
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|BINARY
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|LENGTH
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|RecordReaderImpl
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|BINARY
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|LENGTH
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|RecordReaderImpl
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|DECIMAL
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|RecordReaderImpl
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|DECIMAL
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|RecordReaderImpl
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|DECIMAL
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|SECONDARY
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|RecordReaderImpl
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|DECIMAL
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|SECONDARY
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|RecordReaderImpl
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|TIMESTAMP
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|RecordReaderImpl
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|TIMESTAMP
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|RecordReaderImpl
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|TIMESTAMP
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|SECONDARY
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|RecordReaderImpl
operator|.
name|getIndexPosition
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|,
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|TIMESTAMP
argument_list|,
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|SECONDARY
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPartialPlan
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|RecordReaderImpl
operator|.
name|DiskRange
argument_list|>
name|result
decl_stmt|;
comment|// set the streams
name|List
argument_list|<
name|OrcProto
operator|.
name|Stream
argument_list|>
name|streams
init|=
operator|new
name|ArrayList
argument_list|<
name|OrcProto
operator|.
name|Stream
argument_list|>
argument_list|()
decl_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|1
argument_list|)
operator|.
name|setLength
argument_list|(
literal|1000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|1
argument_list|)
operator|.
name|setLength
argument_list|(
literal|99000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|2
argument_list|)
operator|.
name|setLength
argument_list|(
literal|2000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|2
argument_list|)
operator|.
name|setLength
argument_list|(
literal|98000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|boolean
index|[]
name|columns
init|=
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|true
block|,
literal|false
block|}
decl_stmt|;
name|boolean
index|[]
name|rowGroups
init|=
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|true
block|,
literal|false
block|,
literal|false
block|,
literal|true
block|,
literal|false
block|}
decl_stmt|;
comment|// set the index
name|OrcProto
operator|.
name|RowIndex
index|[]
name|indexes
init|=
operator|new
name|OrcProto
operator|.
name|RowIndex
index|[
name|columns
operator|.
name|length
index|]
decl_stmt|;
name|indexes
index|[
literal|1
index|]
operator|=
name|OrcProto
operator|.
name|RowIndex
operator|.
name|newBuilder
argument_list|()
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|0
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|0
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|100
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|10000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|200
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|20000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|300
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|30000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|400
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|40000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|500
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|50000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
comment|// set encodings
name|List
argument_list|<
name|OrcProto
operator|.
name|ColumnEncoding
argument_list|>
name|encodings
init|=
operator|new
name|ArrayList
argument_list|<
name|OrcProto
operator|.
name|ColumnEncoding
argument_list|>
argument_list|()
decl_stmt|;
name|encodings
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|encodings
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|encodings
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// set types struct{x: int, y: int}
name|List
argument_list|<
name|OrcProto
operator|.
name|Type
argument_list|>
name|types
init|=
operator|new
name|ArrayList
argument_list|<
name|OrcProto
operator|.
name|Type
argument_list|>
argument_list|()
decl_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|STRUCT
argument_list|)
operator|.
name|addSubtypes
argument_list|(
literal|1
argument_list|)
operator|.
name|addSubtypes
argument_list|(
literal|2
argument_list|)
operator|.
name|addFieldNames
argument_list|(
literal|"x"
argument_list|)
operator|.
name|addFieldNames
argument_list|(
literal|"y"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|INT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|INT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// filter by rows and groups
name|result
operator|=
name|RecordReaderImpl
operator|.
name|planReadPartialDataStreams
argument_list|(
name|streams
argument_list|,
name|indexes
argument_list|,
name|columns
argument_list|,
name|rowGroups
argument_list|,
literal|false
argument_list|,
name|encodings
argument_list|,
name|types
argument_list|,
literal|32768
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|(
literal|0
argument_list|,
literal|1000
argument_list|,
literal|100
argument_list|,
literal|1000
argument_list|,
literal|400
argument_list|,
literal|1000
argument_list|,
literal|1000
argument_list|,
literal|11000
operator|+
name|RecordReaderImpl
operator|.
name|WORST_UNCOMPRESSED_SLOP
argument_list|,
literal|11000
argument_list|,
literal|21000
operator|+
name|RecordReaderImpl
operator|.
name|WORST_UNCOMPRESSED_SLOP
argument_list|,
literal|41000
argument_list|,
literal|51000
operator|+
name|RecordReaderImpl
operator|.
name|WORST_UNCOMPRESSED_SLOP
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// if we read no rows, don't read any bytes
name|rowGroups
operator|=
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|}
expr_stmt|;
name|result
operator|=
name|RecordReaderImpl
operator|.
name|planReadPartialDataStreams
argument_list|(
name|streams
argument_list|,
name|indexes
argument_list|,
name|columns
argument_list|,
name|rowGroups
argument_list|,
literal|false
argument_list|,
name|encodings
argument_list|,
name|types
argument_list|,
literal|32768
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// all rows, but only columns 0 and 2.
name|rowGroups
operator|=
literal|null
expr_stmt|;
name|columns
operator|=
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|false
block|,
literal|true
block|}
expr_stmt|;
name|result
operator|=
name|RecordReaderImpl
operator|.
name|planReadPartialDataStreams
argument_list|(
name|streams
argument_list|,
name|indexes
argument_list|,
name|columns
argument_list|,
name|rowGroups
argument_list|,
literal|false
argument_list|,
name|encodings
argument_list|,
name|types
argument_list|,
literal|32768
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|(
literal|100000
argument_list|,
literal|102000
argument_list|,
literal|102000
argument_list|,
literal|200000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|rowGroups
operator|=
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|true
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|}
expr_stmt|;
name|indexes
index|[
literal|2
index|]
operator|=
name|indexes
index|[
literal|1
index|]
expr_stmt|;
name|indexes
index|[
literal|1
index|]
operator|=
literal|null
expr_stmt|;
name|result
operator|=
name|RecordReaderImpl
operator|.
name|planReadPartialDataStreams
argument_list|(
name|streams
argument_list|,
name|indexes
argument_list|,
name|columns
argument_list|,
name|rowGroups
argument_list|,
literal|false
argument_list|,
name|encodings
argument_list|,
name|types
argument_list|,
literal|32768
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|(
literal|100100
argument_list|,
literal|102000
argument_list|,
literal|112000
argument_list|,
literal|122000
operator|+
name|RecordReaderImpl
operator|.
name|WORST_UNCOMPRESSED_SLOP
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|rowGroups
operator|=
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|true
block|}
expr_stmt|;
name|indexes
index|[
literal|1
index|]
operator|=
name|indexes
index|[
literal|2
index|]
expr_stmt|;
name|columns
operator|=
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|true
block|,
literal|true
block|}
expr_stmt|;
name|result
operator|=
name|RecordReaderImpl
operator|.
name|planReadPartialDataStreams
argument_list|(
name|streams
argument_list|,
name|indexes
argument_list|,
name|columns
argument_list|,
name|rowGroups
argument_list|,
literal|false
argument_list|,
name|encodings
argument_list|,
name|types
argument_list|,
literal|32768
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|(
literal|500
argument_list|,
literal|1000
argument_list|,
literal|51000
argument_list|,
literal|100000
argument_list|,
literal|100500
argument_list|,
literal|102000
argument_list|,
literal|152000
argument_list|,
literal|200000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPartialPlanCompressed
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|RecordReaderImpl
operator|.
name|DiskRange
argument_list|>
name|result
decl_stmt|;
comment|// set the streams
name|List
argument_list|<
name|OrcProto
operator|.
name|Stream
argument_list|>
name|streams
init|=
operator|new
name|ArrayList
argument_list|<
name|OrcProto
operator|.
name|Stream
argument_list|>
argument_list|()
decl_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|1
argument_list|)
operator|.
name|setLength
argument_list|(
literal|1000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|1
argument_list|)
operator|.
name|setLength
argument_list|(
literal|99000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|2
argument_list|)
operator|.
name|setLength
argument_list|(
literal|2000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|2
argument_list|)
operator|.
name|setLength
argument_list|(
literal|98000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|boolean
index|[]
name|columns
init|=
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|true
block|,
literal|false
block|}
decl_stmt|;
name|boolean
index|[]
name|rowGroups
init|=
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|true
block|,
literal|false
block|,
literal|false
block|,
literal|true
block|,
literal|false
block|}
decl_stmt|;
comment|// set the index
name|OrcProto
operator|.
name|RowIndex
index|[]
name|indexes
init|=
operator|new
name|OrcProto
operator|.
name|RowIndex
index|[
name|columns
operator|.
name|length
index|]
decl_stmt|;
name|indexes
index|[
literal|1
index|]
operator|=
name|OrcProto
operator|.
name|RowIndex
operator|.
name|newBuilder
argument_list|()
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|0
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|0
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|100
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|10000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|200
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|20000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|300
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|30000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|400
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|40000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|500
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|50000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
comment|// set encodings
name|List
argument_list|<
name|OrcProto
operator|.
name|ColumnEncoding
argument_list|>
name|encodings
init|=
operator|new
name|ArrayList
argument_list|<
name|OrcProto
operator|.
name|ColumnEncoding
argument_list|>
argument_list|()
decl_stmt|;
name|encodings
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|encodings
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|encodings
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// set types struct{x: int, y: int}
name|List
argument_list|<
name|OrcProto
operator|.
name|Type
argument_list|>
name|types
init|=
operator|new
name|ArrayList
argument_list|<
name|OrcProto
operator|.
name|Type
argument_list|>
argument_list|()
decl_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|STRUCT
argument_list|)
operator|.
name|addSubtypes
argument_list|(
literal|1
argument_list|)
operator|.
name|addSubtypes
argument_list|(
literal|2
argument_list|)
operator|.
name|addFieldNames
argument_list|(
literal|"x"
argument_list|)
operator|.
name|addFieldNames
argument_list|(
literal|"y"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|INT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|INT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// filter by rows and groups
name|result
operator|=
name|RecordReaderImpl
operator|.
name|planReadPartialDataStreams
argument_list|(
name|streams
argument_list|,
name|indexes
argument_list|,
name|columns
argument_list|,
name|rowGroups
argument_list|,
literal|true
argument_list|,
name|encodings
argument_list|,
name|types
argument_list|,
literal|32768
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|(
literal|0
argument_list|,
literal|1000
argument_list|,
literal|100
argument_list|,
literal|1000
argument_list|,
literal|400
argument_list|,
literal|1000
argument_list|,
literal|1000
argument_list|,
literal|11000
operator|+
operator|(
literal|2
operator|*
literal|32771
operator|)
argument_list|,
literal|11000
argument_list|,
literal|21000
operator|+
operator|(
literal|2
operator|*
literal|32771
operator|)
argument_list|,
literal|41000
argument_list|,
literal|100000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|rowGroups
operator|=
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|true
block|}
expr_stmt|;
name|result
operator|=
name|RecordReaderImpl
operator|.
name|planReadPartialDataStreams
argument_list|(
name|streams
argument_list|,
name|indexes
argument_list|,
name|columns
argument_list|,
name|rowGroups
argument_list|,
literal|true
argument_list|,
name|encodings
argument_list|,
name|types
argument_list|,
literal|32768
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|(
literal|500
argument_list|,
literal|1000
argument_list|,
literal|51000
argument_list|,
literal|100000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPartialPlanString
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|RecordReaderImpl
operator|.
name|DiskRange
argument_list|>
name|result
decl_stmt|;
comment|// set the streams
name|List
argument_list|<
name|OrcProto
operator|.
name|Stream
argument_list|>
name|streams
init|=
operator|new
name|ArrayList
argument_list|<
name|OrcProto
operator|.
name|Stream
argument_list|>
argument_list|()
decl_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|1
argument_list|)
operator|.
name|setLength
argument_list|(
literal|1000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|1
argument_list|)
operator|.
name|setLength
argument_list|(
literal|94000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|LENGTH
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|1
argument_list|)
operator|.
name|setLength
argument_list|(
literal|2000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DICTIONARY_DATA
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|1
argument_list|)
operator|.
name|setLength
argument_list|(
literal|3000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|2
argument_list|)
operator|.
name|setLength
argument_list|(
literal|2000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
argument_list|)
operator|.
name|setColumn
argument_list|(
literal|2
argument_list|)
operator|.
name|setLength
argument_list|(
literal|98000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|boolean
index|[]
name|columns
init|=
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|true
block|,
literal|false
block|}
decl_stmt|;
name|boolean
index|[]
name|rowGroups
init|=
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|true
block|,
literal|false
block|,
literal|false
block|,
literal|true
block|,
literal|true
block|}
decl_stmt|;
comment|// set the index
name|OrcProto
operator|.
name|RowIndex
index|[]
name|indexes
init|=
operator|new
name|OrcProto
operator|.
name|RowIndex
index|[
name|columns
operator|.
name|length
index|]
decl_stmt|;
name|indexes
index|[
literal|1
index|]
operator|=
name|OrcProto
operator|.
name|RowIndex
operator|.
name|newBuilder
argument_list|()
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|0
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|0
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|100
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|10000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|200
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|20000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|300
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|30000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|400
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|40000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addEntry
argument_list|(
name|OrcProto
operator|.
name|RowIndexEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|addPositions
argument_list|(
literal|500
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
operator|-
literal|1
argument_list|)
operator|.
name|addPositions
argument_list|(
literal|50000
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
comment|// set encodings
name|List
argument_list|<
name|OrcProto
operator|.
name|ColumnEncoding
argument_list|>
name|encodings
init|=
operator|new
name|ArrayList
argument_list|<
name|OrcProto
operator|.
name|ColumnEncoding
argument_list|>
argument_list|()
decl_stmt|;
name|encodings
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|encodings
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DICTIONARY
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|encodings
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|ColumnEncoding
operator|.
name|Kind
operator|.
name|DIRECT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// set types struct{x: string, y: int}
name|List
argument_list|<
name|OrcProto
operator|.
name|Type
argument_list|>
name|types
init|=
operator|new
name|ArrayList
argument_list|<
name|OrcProto
operator|.
name|Type
argument_list|>
argument_list|()
decl_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|STRUCT
argument_list|)
operator|.
name|addSubtypes
argument_list|(
literal|1
argument_list|)
operator|.
name|addSubtypes
argument_list|(
literal|2
argument_list|)
operator|.
name|addFieldNames
argument_list|(
literal|"x"
argument_list|)
operator|.
name|addFieldNames
argument_list|(
literal|"y"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|STRING
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|INT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
comment|// filter by rows and groups
name|result
operator|=
name|RecordReaderImpl
operator|.
name|planReadPartialDataStreams
argument_list|(
name|streams
argument_list|,
name|indexes
argument_list|,
name|columns
argument_list|,
name|rowGroups
argument_list|,
literal|false
argument_list|,
name|encodings
argument_list|,
name|types
argument_list|,
literal|32768
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|result
argument_list|,
name|is
argument_list|(
name|diskRanges
argument_list|(
literal|100
argument_list|,
literal|1000
argument_list|,
literal|400
argument_list|,
literal|1000
argument_list|,
literal|500
argument_list|,
literal|1000
argument_list|,
literal|11000
argument_list|,
literal|21000
operator|+
name|RecordReaderImpl
operator|.
name|WORST_UNCOMPRESSED_SLOP
argument_list|,
literal|41000
argument_list|,
literal|51000
operator|+
name|RecordReaderImpl
operator|.
name|WORST_UNCOMPRESSED_SLOP
argument_list|,
literal|51000
argument_list|,
literal|95000
argument_list|,
literal|95000
argument_list|,
literal|97000
argument_list|,
literal|97000
argument_list|,
literal|100000
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

