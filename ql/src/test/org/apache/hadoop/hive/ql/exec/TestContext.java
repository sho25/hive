begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|session
operator|.
name|SessionState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|TestContext
block|{
specifier|private
specifier|static
name|HiveConf
name|conf
init|=
operator|new
name|HiveConf
argument_list|()
decl_stmt|;
specifier|private
name|Context
name|context
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|IOException
block|{
comment|/* Only called to create session directories used by the Context class */
name|SessionState
operator|.
name|start
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|SessionState
operator|.
name|detachSession
argument_list|()
expr_stmt|;
name|context
operator|=
operator|new
name|Context
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetScratchDirectoriesForPaths
parameter_list|()
throws|throws
name|IOException
block|{
name|Context
name|spyContext
init|=
name|spy
argument_list|(
name|context
argument_list|)
decl_stmt|;
comment|// When Object store paths are used, then getMRTmpPatch() is called to get a temporary
comment|// directory on the default scratch diretory location (usually /temp)
name|Path
name|mrTmpPath
init|=
operator|new
name|Path
argument_list|(
literal|"hdfs://hostname/tmp/scratch"
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|mrTmpPath
argument_list|)
operator|.
name|when
argument_list|(
name|spyContext
argument_list|)
operator|.
name|getMRTmpPath
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|mrTmpPath
argument_list|,
name|spyContext
operator|.
name|getTempDirForPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/dir"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// When Non-Object store paths are used, then getExtTmpPathRelTo is called to get a temporary
comment|// directory on the same path passed as a parameter
name|Path
name|tmpPathRelTo
init|=
operator|new
name|Path
argument_list|(
literal|"hdfs://hostname/user"
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|tmpPathRelTo
argument_list|)
operator|.
name|when
argument_list|(
name|spyContext
argument_list|)
operator|.
name|getExtTmpPathRelTo
argument_list|(
name|any
argument_list|(
name|Path
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|tmpPathRelTo
argument_list|,
name|spyContext
operator|.
name|getTempDirForPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"/user"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

