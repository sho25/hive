begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|txn
operator|.
name|compactor
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|txn
operator|.
name|CompactionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicBoolean
import|;
end_import

begin_comment
comment|/**  * Tests for the compactor Cleaner thread  */
end_comment

begin_class
specifier|public
class|class
name|TestCleaner
extends|extends
name|CompactorTest
block|{
specifier|static
specifier|final
specifier|private
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|TestCleaner
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
specifier|public
name|TestCleaner
parameter_list|()
throws|throws
name|Exception
block|{
name|super
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|nothing
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Test that the whole things works when there's nothing in the queue.  This is just a
comment|// survival test.
name|startCleaner
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|cleanupAfterMajorTableCompaction
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"camtc"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|20L
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|21L
argument_list|,
literal|22L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|23L
argument_list|,
literal|24L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|25L
argument_list|,
literal|25
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
literal|25
argument_list|)
expr_stmt|;
name|CompactionRequest
name|rqst
init|=
operator|new
name|CompactionRequest
argument_list|(
literal|"default"
argument_list|,
literal|"camtc"
argument_list|,
name|CompactionType
operator|.
name|MAJOR
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|compact
argument_list|(
name|rqst
argument_list|)
expr_stmt|;
name|CompactionInfo
name|ci
init|=
name|txnHandler
operator|.
name|findNextToCompact
argument_list|(
literal|"fred"
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|markCompacted
argument_list|(
name|ci
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|setRunAs
argument_list|(
name|ci
operator|.
name|id
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.name"
argument_list|)
argument_list|)
expr_stmt|;
name|startCleaner
argument_list|()
expr_stmt|;
comment|// Check there are no compactions requests left.
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rsp
operator|.
name|getCompactsSize
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check that the files are removed
name|List
argument_list|<
name|Path
argument_list|>
name|paths
init|=
name|getDirectories
argument_list|(
name|conf
argument_list|,
name|t
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|paths
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"base_25"
argument_list|,
name|paths
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|cleanupAfterMajorPartitionCompaction
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"campc"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Partition
name|p
init|=
name|newPartition
argument_list|(
name|t
argument_list|,
literal|"today"
argument_list|)
decl_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|20L
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|21L
argument_list|,
literal|22L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|23L
argument_list|,
literal|24L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|25L
argument_list|,
literal|25
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
literal|25
argument_list|)
expr_stmt|;
name|CompactionRequest
name|rqst
init|=
operator|new
name|CompactionRequest
argument_list|(
literal|"default"
argument_list|,
literal|"campc"
argument_list|,
name|CompactionType
operator|.
name|MAJOR
argument_list|)
decl_stmt|;
name|rqst
operator|.
name|setPartitionname
argument_list|(
literal|"ds=today"
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|compact
argument_list|(
name|rqst
argument_list|)
expr_stmt|;
name|CompactionInfo
name|ci
init|=
name|txnHandler
operator|.
name|findNextToCompact
argument_list|(
literal|"fred"
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|markCompacted
argument_list|(
name|ci
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|setRunAs
argument_list|(
name|ci
operator|.
name|id
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.name"
argument_list|)
argument_list|)
expr_stmt|;
name|startCleaner
argument_list|()
expr_stmt|;
comment|// Check there are no compactions requests left.
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rsp
operator|.
name|getCompactsSize
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check that the files are removed
name|List
argument_list|<
name|Path
argument_list|>
name|paths
init|=
name|getDirectories
argument_list|(
name|conf
argument_list|,
name|t
argument_list|,
name|p
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|paths
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"base_25"
argument_list|,
name|paths
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|cleanupAfterMinorTableCompaction
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"camitc"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|20L
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|21L
argument_list|,
literal|22L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|23L
argument_list|,
literal|24L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|21L
argument_list|,
literal|24L
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
literal|25
argument_list|)
expr_stmt|;
name|CompactionRequest
name|rqst
init|=
operator|new
name|CompactionRequest
argument_list|(
literal|"default"
argument_list|,
literal|"camitc"
argument_list|,
name|CompactionType
operator|.
name|MINOR
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|compact
argument_list|(
name|rqst
argument_list|)
expr_stmt|;
name|CompactionInfo
name|ci
init|=
name|txnHandler
operator|.
name|findNextToCompact
argument_list|(
literal|"fred"
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|markCompacted
argument_list|(
name|ci
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|setRunAs
argument_list|(
name|ci
operator|.
name|id
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.name"
argument_list|)
argument_list|)
expr_stmt|;
name|startCleaner
argument_list|()
expr_stmt|;
comment|// Check there are no compactions requests left.
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rsp
operator|.
name|getCompactsSize
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check that the files are removed
name|List
argument_list|<
name|Path
argument_list|>
name|paths
init|=
name|getDirectories
argument_list|(
name|conf
argument_list|,
name|t
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|paths
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|boolean
name|sawBase
init|=
literal|false
decl_stmt|,
name|sawDelta
init|=
literal|false
decl_stmt|;
for|for
control|(
name|Path
name|p
range|:
name|paths
control|)
block|{
if|if
condition|(
name|p
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"base_20"
argument_list|)
condition|)
name|sawBase
operator|=
literal|true
expr_stmt|;
elseif|else
if|if
condition|(
name|p
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"delta_21_24"
argument_list|)
condition|)
name|sawDelta
operator|=
literal|true
expr_stmt|;
else|else
name|Assert
operator|.
name|fail
argument_list|(
literal|"Unexpected file "
operator|+
name|p
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Assert
operator|.
name|assertTrue
argument_list|(
name|sawBase
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|sawDelta
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|cleanupAfterMinorPartitionCompaction
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"camipc"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Partition
name|p
init|=
name|newPartition
argument_list|(
name|t
argument_list|,
literal|"today"
argument_list|)
decl_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|20L
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|21L
argument_list|,
literal|22L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|23L
argument_list|,
literal|24L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|21L
argument_list|,
literal|24L
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
literal|25
argument_list|)
expr_stmt|;
name|CompactionRequest
name|rqst
init|=
operator|new
name|CompactionRequest
argument_list|(
literal|"default"
argument_list|,
literal|"camipc"
argument_list|,
name|CompactionType
operator|.
name|MINOR
argument_list|)
decl_stmt|;
name|rqst
operator|.
name|setPartitionname
argument_list|(
literal|"ds=today"
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|compact
argument_list|(
name|rqst
argument_list|)
expr_stmt|;
name|CompactionInfo
name|ci
init|=
name|txnHandler
operator|.
name|findNextToCompact
argument_list|(
literal|"fred"
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|markCompacted
argument_list|(
name|ci
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|setRunAs
argument_list|(
name|ci
operator|.
name|id
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.name"
argument_list|)
argument_list|)
expr_stmt|;
name|startCleaner
argument_list|()
expr_stmt|;
comment|// Check there are no compactions requests left.
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rsp
operator|.
name|getCompactsSize
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check that the files are removed
name|List
argument_list|<
name|Path
argument_list|>
name|paths
init|=
name|getDirectories
argument_list|(
name|conf
argument_list|,
name|t
argument_list|,
name|p
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|paths
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|boolean
name|sawBase
init|=
literal|false
decl_stmt|,
name|sawDelta
init|=
literal|false
decl_stmt|;
for|for
control|(
name|Path
name|path
range|:
name|paths
control|)
block|{
if|if
condition|(
name|path
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"base_20"
argument_list|)
condition|)
name|sawBase
operator|=
literal|true
expr_stmt|;
elseif|else
if|if
condition|(
name|path
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"delta_21_24"
argument_list|)
condition|)
name|sawDelta
operator|=
literal|true
expr_stmt|;
else|else
name|Assert
operator|.
name|fail
argument_list|(
literal|"Unexpected file "
operator|+
name|path
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Assert
operator|.
name|assertTrue
argument_list|(
name|sawBase
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|sawDelta
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|blockedByLockTable
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"bblt"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|20L
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|21L
argument_list|,
literal|22L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|23L
argument_list|,
literal|24L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|21L
argument_list|,
literal|24L
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
literal|25
argument_list|)
expr_stmt|;
name|CompactionRequest
name|rqst
init|=
operator|new
name|CompactionRequest
argument_list|(
literal|"default"
argument_list|,
literal|"bblt"
argument_list|,
name|CompactionType
operator|.
name|MINOR
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|compact
argument_list|(
name|rqst
argument_list|)
expr_stmt|;
name|CompactionInfo
name|ci
init|=
name|txnHandler
operator|.
name|findNextToCompact
argument_list|(
literal|"fred"
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|markCompacted
argument_list|(
name|ci
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|setRunAs
argument_list|(
name|ci
operator|.
name|id
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.name"
argument_list|)
argument_list|)
expr_stmt|;
name|LockComponent
name|comp
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_READ
argument_list|,
name|LockLevel
operator|.
name|TABLE
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp
operator|.
name|setTablename
argument_list|(
literal|"bblt"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components
operator|.
name|add
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|LockRequest
name|req
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|LockResponse
name|res
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|startCleaner
argument_list|()
expr_stmt|;
comment|// Check there are no compactions requests left.
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ShowCompactResponseElement
argument_list|>
name|compacts
init|=
name|rsp
operator|.
name|getCompacts
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|compacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"ready for cleaning"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getState
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"bblt"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTablename
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|CompactionType
operator|.
name|MINOR
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|blockedByLockPartition
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"bblp"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Partition
name|p
init|=
name|newPartition
argument_list|(
name|t
argument_list|,
literal|"today"
argument_list|)
decl_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|20L
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|21L
argument_list|,
literal|22L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|23L
argument_list|,
literal|24L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|21L
argument_list|,
literal|24L
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
literal|25
argument_list|)
expr_stmt|;
name|CompactionRequest
name|rqst
init|=
operator|new
name|CompactionRequest
argument_list|(
literal|"default"
argument_list|,
literal|"bblp"
argument_list|,
name|CompactionType
operator|.
name|MINOR
argument_list|)
decl_stmt|;
name|rqst
operator|.
name|setPartitionname
argument_list|(
literal|"ds=today"
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|compact
argument_list|(
name|rqst
argument_list|)
expr_stmt|;
name|CompactionInfo
name|ci
init|=
name|txnHandler
operator|.
name|findNextToCompact
argument_list|(
literal|"fred"
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|markCompacted
argument_list|(
name|ci
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|setRunAs
argument_list|(
name|ci
operator|.
name|id
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.name"
argument_list|)
argument_list|)
expr_stmt|;
name|LockComponent
name|comp
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_WRITE
argument_list|,
name|LockLevel
operator|.
name|PARTITION
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp
operator|.
name|setTablename
argument_list|(
literal|"bblp"
argument_list|)
expr_stmt|;
name|comp
operator|.
name|setPartitionname
argument_list|(
literal|"ds=today"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components
operator|.
name|add
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|LockRequest
name|req
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|LockResponse
name|res
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|startCleaner
argument_list|()
expr_stmt|;
comment|// Check there are no compactions requests left.
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ShowCompactResponseElement
argument_list|>
name|compacts
init|=
name|rsp
operator|.
name|getCompacts
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|compacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"ready for cleaning"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getState
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"bblp"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTablename
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"ds=today"
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPartitionname
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|CompactionType
operator|.
name|MINOR
argument_list|,
name|compacts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|notBlockedBySubsequentLock
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"bblt"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
comment|// Set the run frequency low on this test so it doesn't take long
name|conf
operator|.
name|setTimeVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_COMPACTOR_CLEANER_RUN_INTERVAL
argument_list|,
literal|100
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|20L
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|21L
argument_list|,
literal|22L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|23L
argument_list|,
literal|24L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|21L
argument_list|,
literal|24L
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
literal|25
argument_list|)
expr_stmt|;
name|CompactionRequest
name|rqst
init|=
operator|new
name|CompactionRequest
argument_list|(
literal|"default"
argument_list|,
literal|"bblt"
argument_list|,
name|CompactionType
operator|.
name|MINOR
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|compact
argument_list|(
name|rqst
argument_list|)
expr_stmt|;
name|CompactionInfo
name|ci
init|=
name|txnHandler
operator|.
name|findNextToCompact
argument_list|(
literal|"fred"
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|markCompacted
argument_list|(
name|ci
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|setRunAs
argument_list|(
name|ci
operator|.
name|id
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.name"
argument_list|)
argument_list|)
expr_stmt|;
name|LockComponent
name|comp
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_READ
argument_list|,
name|LockLevel
operator|.
name|TABLE
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp
operator|.
name|setTablename
argument_list|(
literal|"bblt"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components
operator|.
name|add
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|LockRequest
name|req
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|LockResponse
name|res
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|AtomicBoolean
name|looped
init|=
operator|new
name|AtomicBoolean
argument_list|()
decl_stmt|;
name|looped
operator|.
name|set
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|startCleaner
argument_list|(
name|looped
argument_list|)
expr_stmt|;
comment|// Make sure the compactor has a chance to run once
while|while
condition|(
operator|!
name|looped
operator|.
name|get
argument_list|()
condition|)
block|{
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
block|}
comment|// There should still be one request, as the locks still held.
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ShowCompactResponseElement
argument_list|>
name|compacts
init|=
name|rsp
operator|.
name|getCompacts
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|compacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// obtain a second lock.  This shouldn't block cleaner as it was acquired after the initial
comment|// clean request
name|LockComponent
name|comp2
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_READ
argument_list|,
name|LockLevel
operator|.
name|TABLE
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp2
operator|.
name|setTablename
argument_list|(
literal|"bblt"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components2
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components2
operator|.
name|add
argument_list|(
name|comp2
argument_list|)
expr_stmt|;
name|LockRequest
name|req2
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|LockResponse
name|res2
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req2
argument_list|)
decl_stmt|;
comment|// Unlock the previous lock
name|txnHandler
operator|.
name|unlock
argument_list|(
operator|new
name|UnlockRequest
argument_list|(
name|res
operator|.
name|getLockid
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|looped
operator|.
name|set
argument_list|(
literal|false
argument_list|)
expr_stmt|;
while|while
condition|(
operator|!
name|looped
operator|.
name|get
argument_list|()
condition|)
block|{
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
block|}
name|stopThread
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|sleep
argument_list|(
literal|200
argument_list|)
expr_stmt|;
comment|// Check there are no compactions requests left.
name|rsp
operator|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
expr_stmt|;
name|compacts
operator|=
name|rsp
operator|.
name|getCompacts
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|compacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|partitionNotBlockedBySubsequentLock
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"bblt"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Partition
name|p
init|=
name|newPartition
argument_list|(
name|t
argument_list|,
literal|"today"
argument_list|)
decl_stmt|;
comment|// Set the run frequency low on this test so it doesn't take long
name|conf
operator|.
name|setTimeVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_COMPACTOR_CLEANER_RUN_INTERVAL
argument_list|,
literal|100
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|20L
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|21L
argument_list|,
literal|22L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|23L
argument_list|,
literal|24L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|21L
argument_list|,
literal|24L
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
literal|25
argument_list|)
expr_stmt|;
name|CompactionRequest
name|rqst
init|=
operator|new
name|CompactionRequest
argument_list|(
literal|"default"
argument_list|,
literal|"bblt"
argument_list|,
name|CompactionType
operator|.
name|MINOR
argument_list|)
decl_stmt|;
name|rqst
operator|.
name|setPartitionname
argument_list|(
literal|"ds=today"
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|compact
argument_list|(
name|rqst
argument_list|)
expr_stmt|;
name|CompactionInfo
name|ci
init|=
name|txnHandler
operator|.
name|findNextToCompact
argument_list|(
literal|"fred"
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|markCompacted
argument_list|(
name|ci
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|setRunAs
argument_list|(
name|ci
operator|.
name|id
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.name"
argument_list|)
argument_list|)
expr_stmt|;
name|LockComponent
name|comp
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_READ
argument_list|,
name|LockLevel
operator|.
name|PARTITION
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp
operator|.
name|setTablename
argument_list|(
literal|"bblt"
argument_list|)
expr_stmt|;
name|comp
operator|.
name|setPartitionname
argument_list|(
literal|"ds=today"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components
operator|.
name|add
argument_list|(
name|comp
argument_list|)
expr_stmt|;
name|LockRequest
name|req
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|LockResponse
name|res
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|AtomicBoolean
name|looped
init|=
operator|new
name|AtomicBoolean
argument_list|()
decl_stmt|;
name|looped
operator|.
name|set
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|startCleaner
argument_list|(
name|looped
argument_list|)
expr_stmt|;
comment|// Make sure the compactor has a chance to run once
while|while
condition|(
operator|!
name|looped
operator|.
name|get
argument_list|()
condition|)
block|{
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
block|}
comment|// There should still be one request, as the locks still held.
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ShowCompactResponseElement
argument_list|>
name|compacts
init|=
name|rsp
operator|.
name|getCompacts
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|compacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// obtain a second lock.  This shouldn't block cleaner as it was acquired after the initial
comment|// clean request
name|LockComponent
name|comp2
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_READ
argument_list|,
name|LockLevel
operator|.
name|PARTITION
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|comp2
operator|.
name|setTablename
argument_list|(
literal|"bblt"
argument_list|)
expr_stmt|;
name|comp2
operator|.
name|setPartitionname
argument_list|(
literal|"ds=today"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components2
init|=
operator|new
name|ArrayList
argument_list|<
name|LockComponent
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|components2
operator|.
name|add
argument_list|(
name|comp2
argument_list|)
expr_stmt|;
name|LockRequest
name|req2
init|=
operator|new
name|LockRequest
argument_list|(
name|components
argument_list|,
literal|"me"
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|LockResponse
name|res2
init|=
name|txnHandler
operator|.
name|lock
argument_list|(
name|req2
argument_list|)
decl_stmt|;
comment|// Unlock the previous lock
name|txnHandler
operator|.
name|unlock
argument_list|(
operator|new
name|UnlockRequest
argument_list|(
name|res
operator|.
name|getLockid
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|looped
operator|.
name|set
argument_list|(
literal|false
argument_list|)
expr_stmt|;
while|while
condition|(
operator|!
name|looped
operator|.
name|get
argument_list|()
condition|)
block|{
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
block|}
name|stopThread
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|sleep
argument_list|(
literal|200
argument_list|)
expr_stmt|;
comment|// Check there are no compactions requests left.
name|rsp
operator|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
expr_stmt|;
name|compacts
operator|=
name|rsp
operator|.
name|getCompacts
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|compacts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|cleanupAfterMajorPartitionCompactionNoBase
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"campcnb"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Partition
name|p
init|=
name|newPartition
argument_list|(
name|t
argument_list|,
literal|"today"
argument_list|)
decl_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|1L
argument_list|,
literal|22L
argument_list|,
literal|22
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|23L
argument_list|,
literal|24L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|25L
argument_list|,
literal|25
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
literal|25
argument_list|)
expr_stmt|;
name|CompactionRequest
name|rqst
init|=
operator|new
name|CompactionRequest
argument_list|(
literal|"default"
argument_list|,
literal|"campcnb"
argument_list|,
name|CompactionType
operator|.
name|MAJOR
argument_list|)
decl_stmt|;
name|rqst
operator|.
name|setPartitionname
argument_list|(
literal|"ds=today"
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|compact
argument_list|(
name|rqst
argument_list|)
expr_stmt|;
name|CompactionInfo
name|ci
init|=
name|txnHandler
operator|.
name|findNextToCompact
argument_list|(
literal|"fred"
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|markCompacted
argument_list|(
name|ci
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|setRunAs
argument_list|(
name|ci
operator|.
name|id
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.name"
argument_list|)
argument_list|)
expr_stmt|;
name|startCleaner
argument_list|()
expr_stmt|;
comment|// Check there are no compactions requests left.
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rsp
operator|.
name|getCompactsSize
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check that the files are removed
name|List
argument_list|<
name|Path
argument_list|>
name|paths
init|=
name|getDirectories
argument_list|(
name|conf
argument_list|,
name|t
argument_list|,
name|p
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|paths
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"base_25"
argument_list|,
name|paths
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|droppedTable
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"dt"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|1L
argument_list|,
literal|22L
argument_list|,
literal|22
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|23L
argument_list|,
literal|24L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|25L
argument_list|,
literal|25
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
literal|25
argument_list|)
expr_stmt|;
name|CompactionRequest
name|rqst
init|=
operator|new
name|CompactionRequest
argument_list|(
literal|"default"
argument_list|,
literal|"dt"
argument_list|,
name|CompactionType
operator|.
name|MINOR
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|compact
argument_list|(
name|rqst
argument_list|)
expr_stmt|;
name|CompactionInfo
name|ci
init|=
name|txnHandler
operator|.
name|findNextToCompact
argument_list|(
literal|"fred"
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|markCompacted
argument_list|(
name|ci
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|setRunAs
argument_list|(
name|ci
operator|.
name|id
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.name"
argument_list|)
argument_list|)
expr_stmt|;
name|ms
operator|.
name|dropTable
argument_list|(
literal|"default"
argument_list|,
literal|"dt"
argument_list|)
expr_stmt|;
name|startCleaner
argument_list|()
expr_stmt|;
comment|// Check there are no compactions requests left.
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rsp
operator|.
name|getCompactsSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|droppedPartition
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
literal|"default"
argument_list|,
literal|"dp"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Partition
name|p
init|=
name|newPartition
argument_list|(
name|t
argument_list|,
literal|"today"
argument_list|)
decl_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|1L
argument_list|,
literal|22L
argument_list|,
literal|22
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|23L
argument_list|,
literal|24L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|25L
argument_list|,
literal|25
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
literal|25
argument_list|)
expr_stmt|;
name|CompactionRequest
name|rqst
init|=
operator|new
name|CompactionRequest
argument_list|(
literal|"default"
argument_list|,
literal|"dp"
argument_list|,
name|CompactionType
operator|.
name|MAJOR
argument_list|)
decl_stmt|;
name|rqst
operator|.
name|setPartitionname
argument_list|(
literal|"ds=today"
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|compact
argument_list|(
name|rqst
argument_list|)
expr_stmt|;
name|CompactionInfo
name|ci
init|=
name|txnHandler
operator|.
name|findNextToCompact
argument_list|(
literal|"fred"
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|markCompacted
argument_list|(
name|ci
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|setRunAs
argument_list|(
name|ci
operator|.
name|id
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.name"
argument_list|)
argument_list|)
expr_stmt|;
name|ms
operator|.
name|dropPartition
argument_list|(
literal|"default"
argument_list|,
literal|"dp"
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"today"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|startCleaner
argument_list|()
expr_stmt|;
comment|// Check there are no compactions requests left.
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rsp
operator|.
name|getCompactsSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

