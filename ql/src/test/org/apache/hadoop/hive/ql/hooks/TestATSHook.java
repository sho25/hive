begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|hooks
package|;
end_package

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|JsonNode
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|timeline
operator|.
name|TimelineEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
specifier|public
class|class
name|TestATSHook
block|{
specifier|private
name|ObjectMapper
name|objectMapper
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
specifier|private
name|ATSHook
name|uut
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|uut
operator|=
operator|new
name|ATSHook
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreatePreHookEventJsonShhouldMatch
parameter_list|()
throws|throws
name|Exception
block|{
name|TimelineEntity
name|timelineEntity
init|=
name|uut
operator|.
name|createPreHookEvent
argument_list|(
literal|"test-query-id"
argument_list|,
literal|"test-query"
argument_list|,
operator|new
name|org
operator|.
name|json
operator|.
name|JSONObject
argument_list|()
argument_list|,
literal|0L
argument_list|,
literal|"test-user"
argument_list|,
literal|"test-request-user"
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|"test-opid"
argument_list|,
literal|"client-ip-address"
argument_list|,
literal|"hive-instance-address"
argument_list|,
literal|"hive-instance-type"
argument_list|,
literal|"session-id"
argument_list|,
literal|"log-id"
argument_list|,
literal|"thread-id"
argument_list|,
literal|"execution-mode"
argument_list|,
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
operator|new
name|HiveConf
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|"domain-id"
argument_list|)
decl_stmt|;
name|String
name|resultStr
init|=
operator|(
name|String
operator|)
name|timelineEntity
operator|.
name|getOtherInfo
argument_list|()
operator|.
name|get
argument_list|(
name|ATSHook
operator|.
name|OtherInfoTypes
operator|.
name|QUERY
operator|.
name|name
argument_list|()
argument_list|)
decl_stmt|;
name|JsonNode
name|result
init|=
name|objectMapper
operator|.
name|readTree
argument_list|(
name|resultStr
argument_list|)
decl_stmt|;
name|JsonNode
name|expected
init|=
name|objectMapper
operator|.
name|readTree
argument_list|(
literal|"{\"queryText\":\"test-query\","
operator|+
literal|"\"queryPlan\":{}}"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

