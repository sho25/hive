begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
package|;
end_package

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigInteger
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Timestamp
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|type
operator|.
name|HiveDecimal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|OrcFile
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|sarg
operator|.
name|SearchArgument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|sarg
operator|.
name|SearchArgumentFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|ByteWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|DoubleWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|HiveDecimalWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|ShortWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|TimestampWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ListObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|MapObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspectorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|StructField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|StructObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|BinaryObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|BooleanObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|ByteObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|DoubleObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|FloatObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|HiveDecimalObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|IntObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|LongObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|ShortObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|StringObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|TimestampObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|BooleanWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|BytesWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|FloatWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|IntWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|LongWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|common
operator|.
name|util
operator|.
name|HiveTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
operator|.
name|Parameters
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_comment
comment|/**  * Tests for the top level reader/streamFactory of ORC files.  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|value
operator|=
name|Parameterized
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestOrcFile
block|{
specifier|public
specifier|static
class|class
name|SimpleStruct
block|{
name|BytesWritable
name|bytes1
decl_stmt|;
name|Text
name|string1
decl_stmt|;
name|SimpleStruct
parameter_list|(
name|BytesWritable
name|b1
parameter_list|,
name|String
name|s1
parameter_list|)
block|{
name|this
operator|.
name|bytes1
operator|=
name|b1
expr_stmt|;
if|if
condition|(
name|s1
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|string1
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|string1
operator|=
operator|new
name|Text
argument_list|(
name|s1
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
specifier|static
class|class
name|InnerStruct
block|{
name|int
name|int1
decl_stmt|;
name|Text
name|string1
init|=
operator|new
name|Text
argument_list|()
decl_stmt|;
name|InnerStruct
parameter_list|(
name|int
name|int1
parameter_list|,
name|String
name|string1
parameter_list|)
block|{
name|this
operator|.
name|int1
operator|=
name|int1
expr_stmt|;
name|this
operator|.
name|string1
operator|.
name|set
argument_list|(
name|string1
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|MiddleStruct
block|{
name|List
argument_list|<
name|InnerStruct
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|InnerStruct
argument_list|>
argument_list|()
decl_stmt|;
name|MiddleStruct
parameter_list|(
name|InnerStruct
modifier|...
name|items
parameter_list|)
block|{
name|list
operator|.
name|clear
argument_list|()
expr_stmt|;
name|list
operator|.
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|items
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|BigRow
block|{
name|Boolean
name|boolean1
decl_stmt|;
name|Byte
name|byte1
decl_stmt|;
name|Short
name|short1
decl_stmt|;
name|Integer
name|int1
decl_stmt|;
name|Long
name|long1
decl_stmt|;
name|Float
name|float1
decl_stmt|;
name|Double
name|double1
decl_stmt|;
name|BytesWritable
name|bytes1
decl_stmt|;
name|Text
name|string1
decl_stmt|;
name|MiddleStruct
name|middle
decl_stmt|;
name|List
argument_list|<
name|InnerStruct
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|InnerStruct
argument_list|>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|Text
argument_list|,
name|InnerStruct
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|Text
argument_list|,
name|InnerStruct
argument_list|>
argument_list|()
decl_stmt|;
name|BigRow
parameter_list|(
name|Boolean
name|b1
parameter_list|,
name|Byte
name|b2
parameter_list|,
name|Short
name|s1
parameter_list|,
name|Integer
name|i1
parameter_list|,
name|Long
name|l1
parameter_list|,
name|Float
name|f1
parameter_list|,
name|Double
name|d1
parameter_list|,
name|BytesWritable
name|b3
parameter_list|,
name|String
name|s2
parameter_list|,
name|MiddleStruct
name|m1
parameter_list|,
name|List
argument_list|<
name|InnerStruct
argument_list|>
name|l2
parameter_list|,
name|Map
argument_list|<
name|Text
argument_list|,
name|InnerStruct
argument_list|>
name|m2
parameter_list|)
block|{
name|this
operator|.
name|boolean1
operator|=
name|b1
expr_stmt|;
name|this
operator|.
name|byte1
operator|=
name|b2
expr_stmt|;
name|this
operator|.
name|short1
operator|=
name|s1
expr_stmt|;
name|this
operator|.
name|int1
operator|=
name|i1
expr_stmt|;
name|this
operator|.
name|long1
operator|=
name|l1
expr_stmt|;
name|this
operator|.
name|float1
operator|=
name|f1
expr_stmt|;
name|this
operator|.
name|double1
operator|=
name|d1
expr_stmt|;
name|this
operator|.
name|bytes1
operator|=
name|b3
expr_stmt|;
if|if
condition|(
name|s2
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|string1
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|string1
operator|=
operator|new
name|Text
argument_list|(
name|s2
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|middle
operator|=
name|m1
expr_stmt|;
name|this
operator|.
name|list
operator|=
name|l2
expr_stmt|;
name|this
operator|.
name|map
operator|=
name|m2
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|InnerStruct
name|inner
parameter_list|(
name|int
name|i
parameter_list|,
name|String
name|s
parameter_list|)
block|{
return|return
operator|new
name|InnerStruct
argument_list|(
name|i
argument_list|,
name|s
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|Map
argument_list|<
name|Text
argument_list|,
name|InnerStruct
argument_list|>
name|map
parameter_list|(
name|InnerStruct
modifier|...
name|items
parameter_list|)
block|{
name|Map
argument_list|<
name|Text
argument_list|,
name|InnerStruct
argument_list|>
name|result
init|=
operator|new
name|HashMap
argument_list|<
name|Text
argument_list|,
name|InnerStruct
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|InnerStruct
name|i
range|:
name|items
control|)
block|{
name|result
operator|.
name|put
argument_list|(
operator|new
name|Text
argument_list|(
name|i
operator|.
name|string1
argument_list|)
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
specifier|private
specifier|static
name|List
argument_list|<
name|InnerStruct
argument_list|>
name|list
parameter_list|(
name|InnerStruct
modifier|...
name|items
parameter_list|)
block|{
name|List
argument_list|<
name|InnerStruct
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<
name|InnerStruct
argument_list|>
argument_list|()
decl_stmt|;
name|result
operator|.
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|items
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|private
specifier|static
name|BytesWritable
name|bytes
parameter_list|(
name|int
modifier|...
name|items
parameter_list|)
block|{
name|BytesWritable
name|result
init|=
operator|new
name|BytesWritable
argument_list|()
decl_stmt|;
name|result
operator|.
name|setSize
argument_list|(
name|items
operator|.
name|length
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|items
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
name|result
operator|.
name|getBytes
argument_list|()
index|[
name|i
index|]
operator|=
operator|(
name|byte
operator|)
name|items
index|[
name|i
index|]
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
specifier|private
specifier|static
name|ByteBuffer
name|byteBuf
parameter_list|(
name|int
modifier|...
name|items
parameter_list|)
block|{
name|ByteBuffer
name|result
init|=
name|ByteBuffer
operator|.
name|allocate
argument_list|(
name|items
operator|.
name|length
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|item
range|:
name|items
control|)
block|{
name|result
operator|.
name|put
argument_list|(
operator|(
name|byte
operator|)
name|item
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
name|Path
name|workDir
init|=
operator|new
name|Path
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"test.tmp.dir"
argument_list|,
literal|"target"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"test"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"tmp"
argument_list|)
argument_list|)
decl_stmt|;
name|Configuration
name|conf
decl_stmt|;
name|FileSystem
name|fs
decl_stmt|;
name|Path
name|testFilePath
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|zeroCopy
decl_stmt|;
annotation|@
name|Parameters
specifier|public
specifier|static
name|Collection
argument_list|<
name|Boolean
index|[]
argument_list|>
name|data
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|Boolean
index|[]
index|[]
block|{
block|{
literal|false
block|}
block|,
block|{
literal|true
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|TestOrcFile
parameter_list|(
name|Boolean
name|zcr
parameter_list|)
block|{
name|zeroCopy
operator|=
name|zcr
operator|.
name|booleanValue
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Rule
specifier|public
name|TestName
name|testCaseName
init|=
operator|new
name|TestName
argument_list|()
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|openFileSystem
parameter_list|()
throws|throws
name|Exception
block|{
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
if|if
condition|(
name|zeroCopy
condition|)
block|{
name|conf
operator|.
name|setBoolean
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_ORC_ZEROCOPY
operator|.
name|varname
argument_list|,
name|zeroCopy
argument_list|)
expr_stmt|;
block|}
name|fs
operator|=
name|FileSystem
operator|.
name|getLocal
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|testFilePath
operator|=
operator|new
name|Path
argument_list|(
name|workDir
argument_list|,
literal|"TestOrcFile."
operator|+
name|testCaseName
operator|.
name|getMethodName
argument_list|()
operator|+
literal|".orc"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|delete
argument_list|(
name|testFilePath
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadFormat_0_11
parameter_list|()
throws|throws
name|Exception
block|{
name|Path
name|oldFilePath
init|=
operator|new
name|Path
argument_list|(
name|HiveTestUtils
operator|.
name|getFileFromClasspath
argument_list|(
literal|"orc-file-11-format.orc"
argument_list|)
argument_list|)
decl_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|oldFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|stripeCount
init|=
literal|0
decl_stmt|;
name|int
name|rowCount
init|=
literal|0
decl_stmt|;
name|long
name|currentOffset
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|StripeInformation
name|stripe
range|:
name|reader
operator|.
name|getStripes
argument_list|()
control|)
block|{
name|stripeCount
operator|+=
literal|1
expr_stmt|;
name|rowCount
operator|+=
name|stripe
operator|.
name|getNumberOfRows
argument_list|()
expr_stmt|;
if|if
condition|(
name|currentOffset
operator|<
literal|0
condition|)
block|{
name|currentOffset
operator|=
name|stripe
operator|.
name|getOffset
argument_list|()
operator|+
name|stripe
operator|.
name|getIndexLength
argument_list|()
operator|+
name|stripe
operator|.
name|getDataLength
argument_list|()
operator|+
name|stripe
operator|.
name|getFooterLength
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
name|currentOffset
argument_list|,
name|stripe
operator|.
name|getOffset
argument_list|()
argument_list|)
expr_stmt|;
name|currentOffset
operator|+=
name|stripe
operator|.
name|getIndexLength
argument_list|()
operator|+
name|stripe
operator|.
name|getDataLength
argument_list|()
operator|+
name|stripe
operator|.
name|getFooterLength
argument_list|()
expr_stmt|;
block|}
block|}
name|assertEquals
argument_list|(
name|reader
operator|.
name|getNumberOfRows
argument_list|()
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|stripeCount
argument_list|)
expr_stmt|;
comment|// check the stats
name|ColumnStatistics
index|[]
name|stats
init|=
name|reader
operator|.
name|getStatistics
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|7500
argument_list|,
name|stats
index|[
literal|1
index|]
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3750
argument_list|,
operator|(
operator|(
name|BooleanColumnStatistics
operator|)
name|stats
index|[
literal|1
index|]
operator|)
operator|.
name|getFalseCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3750
argument_list|,
operator|(
operator|(
name|BooleanColumnStatistics
operator|)
name|stats
index|[
literal|1
index|]
operator|)
operator|.
name|getTrueCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 7500 hasNull: false true: 3750"
argument_list|,
name|stats
index|[
literal|1
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2048
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|3
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1024
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|3
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|3
index|]
operator|)
operator|.
name|isSumDefined
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|11520000
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|3
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 7500 hasNull: false min: 1024 max: 2048 sum: 11520000"
argument_list|,
name|stats
index|[
literal|3
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|5
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|5
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|5
index|]
operator|)
operator|.
name|isSumDefined
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 7500 hasNull: false min: 9223372036854775807 max: 9223372036854775807"
argument_list|,
name|stats
index|[
literal|5
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|15.0
argument_list|,
operator|(
operator|(
name|DoubleColumnStatistics
operator|)
name|stats
index|[
literal|7
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|5.0
argument_list|,
operator|(
operator|(
name|DoubleColumnStatistics
operator|)
name|stats
index|[
literal|7
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|75000.0
argument_list|,
operator|(
operator|(
name|DoubleColumnStatistics
operator|)
name|stats
index|[
literal|7
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|,
literal|0.00001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 7500 hasNull: false min: -15.0 max: -5.0 sum: -75000.0"
argument_list|,
name|stats
index|[
literal|7
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 7500 hasNull: false min: bye max: hi sum: 0"
argument_list|,
name|stats
index|[
literal|9
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|// check the inspectors
name|StructObjectInspector
name|readerInspector
init|=
operator|(
name|StructObjectInspector
operator|)
name|reader
operator|.
name|getObjectInspector
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|ObjectInspector
operator|.
name|Category
operator|.
name|STRUCT
argument_list|,
name|readerInspector
operator|.
name|getCategory
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"struct<boolean1:boolean,byte1:tinyint,short1:smallint,"
operator|+
literal|"int1:int,long1:bigint,float1:float,double1:double,bytes1:"
operator|+
literal|"binary,string1:string,middle:struct<list:array<struct<int1:int,"
operator|+
literal|"string1:string>>>,list:array<struct<int1:int,string1:string>>,"
operator|+
literal|"map:map<string,struct<int1:int,string1:string>>,ts:timestamp,"
operator|+
literal|"decimal1:decimal(38,18)>"
argument_list|,
name|readerInspector
operator|.
name|getTypeName
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|StructField
argument_list|>
name|fields
init|=
name|readerInspector
operator|.
name|getAllStructFieldRefs
argument_list|()
decl_stmt|;
name|BooleanObjectInspector
name|bo
init|=
operator|(
name|BooleanObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"boolean1"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|ByteObjectInspector
name|by
init|=
operator|(
name|ByteObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"byte1"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|ShortObjectInspector
name|sh
init|=
operator|(
name|ShortObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"short1"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|IntObjectInspector
name|in
init|=
operator|(
name|IntObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"int1"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|LongObjectInspector
name|lo
init|=
operator|(
name|LongObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"long1"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|FloatObjectInspector
name|fl
init|=
operator|(
name|FloatObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"float1"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|DoubleObjectInspector
name|dbl
init|=
operator|(
name|DoubleObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"double1"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|BinaryObjectInspector
name|bi
init|=
operator|(
name|BinaryObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"bytes1"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|StringObjectInspector
name|st
init|=
operator|(
name|StringObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"string1"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|StructObjectInspector
name|mid
init|=
operator|(
name|StructObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"middle"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|StructField
argument_list|>
name|midFields
init|=
name|mid
operator|.
name|getAllStructFieldRefs
argument_list|()
decl_stmt|;
name|ListObjectInspector
name|midli
init|=
operator|(
name|ListObjectInspector
operator|)
name|midFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|StructObjectInspector
name|inner
init|=
operator|(
name|StructObjectInspector
operator|)
name|midli
operator|.
name|getListElementObjectInspector
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|StructField
argument_list|>
name|inFields
init|=
name|inner
operator|.
name|getAllStructFieldRefs
argument_list|()
decl_stmt|;
name|ListObjectInspector
name|li
init|=
operator|(
name|ListObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"list"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|MapObjectInspector
name|ma
init|=
operator|(
name|MapObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"map"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|TimestampObjectInspector
name|tso
init|=
operator|(
name|TimestampObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"ts"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|HiveDecimalObjectInspector
name|dco
init|=
operator|(
name|HiveDecimalObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"decimal1"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|StringObjectInspector
name|mk
init|=
operator|(
name|StringObjectInspector
operator|)
name|ma
operator|.
name|getMapKeyObjectInspector
argument_list|()
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|Object
name|row
init|=
name|rows
operator|.
name|next
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|row
argument_list|)
expr_stmt|;
comment|// check the contents of the first row
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|bo
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|by
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1024
argument_list|,
name|sh
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|65536
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|,
name|lo
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|4
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1.0
argument_list|,
name|fl
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|)
argument_list|)
argument_list|,
literal|0.00001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|15.0
argument_list|,
name|dbl
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|6
argument_list|)
argument_list|)
argument_list|)
argument_list|,
literal|0.00001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bytes
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|,
name|bi
operator|.
name|getPrimitiveWritableObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|7
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hi"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|8
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|midRow
init|=
name|midli
operator|.
name|getList
argument_list|(
name|mid
operator|.
name|getStructFieldData
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|9
argument_list|)
argument_list|)
argument_list|,
name|midFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|midRow
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|midRow
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|midRow
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bye"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|midRow
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|midRow
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"sigh"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|midRow
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|list
init|=
name|li
operator|.
name|getList
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|10
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|list
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"good"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|list
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bad"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|list
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|map
init|=
name|ma
operator|.
name|getMap
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|11
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|map
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2000-03-12 15:00:00"
argument_list|)
argument_list|,
name|tso
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|12
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"12345678.6547456"
argument_list|)
argument_list|,
name|dco
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|13
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// check the contents of second row
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rows
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|rows
operator|.
name|seekToRow
argument_list|(
literal|7499
argument_list|)
expr_stmt|;
name|row
operator|=
name|rows
operator|.
name|next
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|bo
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|100
argument_list|,
name|by
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2048
argument_list|,
name|sh
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|65536
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|,
name|lo
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|4
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2.0
argument_list|,
name|fl
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|)
argument_list|)
argument_list|,
literal|0.00001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|5.0
argument_list|,
name|dbl
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|6
argument_list|)
argument_list|)
argument_list|)
argument_list|,
literal|0.00001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bytes
argument_list|()
argument_list|,
name|bi
operator|.
name|getPrimitiveWritableObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|7
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bye"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|8
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|midRow
operator|=
name|midli
operator|.
name|getList
argument_list|(
name|mid
operator|.
name|getStructFieldData
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|9
argument_list|)
argument_list|)
argument_list|,
name|midFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|midRow
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|midRow
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|midRow
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bye"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|midRow
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|midRow
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"sigh"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|midRow
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|list
operator|=
name|li
operator|.
name|getList
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|list
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|100000000
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"cat"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|100000
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|list
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"in"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|list
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1234
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|list
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hat"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|list
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|=
name|ma
operator|.
name|getMap
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|11
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|map
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|boolean
index|[]
name|found
init|=
operator|new
name|boolean
index|[
literal|2
index|]
decl_stmt|;
for|for
control|(
name|Object
name|key
range|:
name|map
operator|.
name|keySet
argument_list|()
control|)
block|{
name|String
name|str
init|=
name|mk
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|str
operator|.
name|equals
argument_list|(
literal|"chani"
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|found
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|map
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|str
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|map
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|found
index|[
literal|0
index|]
operator|=
literal|true
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|str
operator|.
name|equals
argument_list|(
literal|"mauddib"
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|found
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|map
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|str
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|map
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|found
index|[
literal|1
index|]
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Unknown key "
operator|+
name|str
argument_list|)
throw|;
block|}
block|}
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|found
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|found
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2000-03-12 15:00:01"
argument_list|)
argument_list|,
name|tso
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|12
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"12345678.6547457"
argument_list|)
argument_list|,
name|dco
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|13
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// handle the close up
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rows
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|rows
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTimestamp
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcFile
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|Timestamp
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|version
argument_list|(
name|OrcFile
operator|.
name|Version
operator|.
name|V_0_11
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Timestamp
argument_list|>
name|tslist
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"9999-01-01 00:00:00.000999"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2003-01-01 00:00:00.000000222"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"1999-01-01 00:00:00.999999999"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"1995-01-01 00:00:00.688888888"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2002-01-01 00:00:00.1"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2010-03-02 00:00:00.000009001"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2005-01-01 00:00:00.000002229"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2006-01-01 00:00:00.900203003"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2003-01-01 00:00:00.800000007"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"1996-08-02 00:00:00.723100809"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"1998-11-02 00:00:00.857340643"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2008-10-02 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Timestamp
name|ts
range|:
name|tslist
control|)
block|{
name|writer
operator|.
name|addRow
argument_list|(
name|ts
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Object
name|row
init|=
name|rows
operator|.
name|next
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|tslist
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|getNanos
argument_list|()
argument_list|,
operator|(
operator|(
name|TimestampWritable
operator|)
name|row
operator|)
operator|.
name|getNanos
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|OrcUtils
operator|.
name|getFlattenedColumnsCount
argument_list|(
name|inspector
argument_list|)
argument_list|)
expr_stmt|;
name|boolean
index|[]
name|expected
init|=
operator|new
name|boolean
index|[]
block|{
literal|false
block|}
decl_stmt|;
name|boolean
index|[]
name|included
init|=
name|OrcUtils
operator|.
name|includeColumns
argument_list|(
literal|""
argument_list|,
literal|"ts"
argument_list|,
name|inspector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|Arrays
operator|.
name|equals
argument_list|(
name|expected
argument_list|,
name|included
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStringAndBinaryStatistics
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcFile
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|SimpleStruct
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
argument_list|)
decl_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|SimpleStruct
argument_list|(
name|bytes
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|,
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|SimpleStruct
argument_list|(
name|bytes
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|"bar"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|SimpleStruct
argument_list|(
name|bytes
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|)
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|SimpleStruct
argument_list|(
literal|null
argument_list|,
literal|"hi"
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|OrcUtils
operator|.
name|getFlattenedColumnsCount
argument_list|(
name|inspector
argument_list|)
argument_list|)
expr_stmt|;
name|boolean
index|[]
name|expected
init|=
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|false
block|,
literal|true
block|}
decl_stmt|;
name|boolean
index|[]
name|included
init|=
name|OrcUtils
operator|.
name|includeColumns
argument_list|(
literal|"string1"
argument_list|,
literal|"bytes1,string1"
argument_list|,
name|inspector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|Arrays
operator|.
name|equals
argument_list|(
name|expected
argument_list|,
name|included
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|=
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|false
block|,
literal|false
block|}
expr_stmt|;
name|included
operator|=
name|OrcUtils
operator|.
name|includeColumns
argument_list|(
literal|""
argument_list|,
literal|"bytes1,string1"
argument_list|,
name|inspector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|Arrays
operator|.
name|equals
argument_list|(
name|expected
argument_list|,
name|included
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|=
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|false
block|,
literal|false
block|}
expr_stmt|;
name|included
operator|=
name|OrcUtils
operator|.
name|includeColumns
argument_list|(
literal|null
argument_list|,
literal|"bytes1,string1"
argument_list|,
name|inspector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|Arrays
operator|.
name|equals
argument_list|(
name|expected
argument_list|,
name|included
argument_list|)
argument_list|)
expr_stmt|;
comment|// check the stats
name|ColumnStatistics
index|[]
name|stats
init|=
name|reader
operator|.
name|getStatistics
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|stats
index|[
literal|0
index|]
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 4 hasNull: false"
argument_list|,
name|stats
index|[
literal|0
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|stats
index|[
literal|1
index|]
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|15
argument_list|,
operator|(
operator|(
name|BinaryColumnStatistics
operator|)
name|stats
index|[
literal|1
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 3 hasNull: true sum: 15"
argument_list|,
name|stats
index|[
literal|1
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|stats
index|[
literal|2
index|]
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bar"
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|stats
index|[
literal|2
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hi"
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|stats
index|[
literal|2
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|8
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|stats
index|[
literal|2
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 3 hasNull: true min: bar max: hi sum: 8"
argument_list|,
name|stats
index|[
literal|2
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|// check the inspectors
name|StructObjectInspector
name|readerInspector
init|=
operator|(
name|StructObjectInspector
operator|)
name|reader
operator|.
name|getObjectInspector
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|ObjectInspector
operator|.
name|Category
operator|.
name|STRUCT
argument_list|,
name|readerInspector
operator|.
name|getCategory
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"struct<bytes1:binary,string1:string>"
argument_list|,
name|readerInspector
operator|.
name|getTypeName
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|StructField
argument_list|>
name|fields
init|=
name|readerInspector
operator|.
name|getAllStructFieldRefs
argument_list|()
decl_stmt|;
name|BinaryObjectInspector
name|bi
init|=
operator|(
name|BinaryObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"bytes1"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|StringObjectInspector
name|st
init|=
operator|(
name|StringObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"string1"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|Object
name|row
init|=
name|rows
operator|.
name|next
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|row
argument_list|)
expr_stmt|;
comment|// check the contents of the first row
name|assertEquals
argument_list|(
name|bytes
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|,
name|bi
operator|.
name|getPrimitiveWritableObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"foo"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// check the contents of second row
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rows
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bytes
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|,
name|bi
operator|.
name|getPrimitiveWritableObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bar"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// check the contents of second row
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rows
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bytes
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|)
argument_list|,
name|bi
operator|.
name|getPrimitiveWritableObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// check the contents of second row
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rows
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|bi
operator|.
name|getPrimitiveWritableObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hi"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// handle the close up
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rows
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|rows
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStripeLevelStats
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcFile
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|InnerStruct
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|11000
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|i
operator|>=
literal|5000
condition|)
block|{
if|if
condition|(
name|i
operator|>=
literal|10000
condition|)
block|{
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|InnerStruct
argument_list|(
literal|3
argument_list|,
literal|"three"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|InnerStruct
argument_list|(
literal|2
argument_list|,
literal|"two"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|InnerStruct
argument_list|(
literal|1
argument_list|,
literal|"one"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|OrcUtils
operator|.
name|getFlattenedColumnsCount
argument_list|(
name|inspector
argument_list|)
argument_list|)
expr_stmt|;
name|boolean
index|[]
name|expected
init|=
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|true
block|,
literal|false
block|}
decl_stmt|;
name|boolean
index|[]
name|included
init|=
name|OrcUtils
operator|.
name|includeColumns
argument_list|(
literal|"int1"
argument_list|,
literal|"int1,string1"
argument_list|,
name|inspector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|Arrays
operator|.
name|equals
argument_list|(
name|expected
argument_list|,
name|included
argument_list|)
argument_list|)
expr_stmt|;
name|Metadata
name|metadata
init|=
name|reader
operator|.
name|getMetadata
argument_list|()
decl_stmt|;
name|int
name|numStripes
init|=
name|metadata
operator|.
name|getStripeStatistics
argument_list|()
operator|.
name|size
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|numStripes
argument_list|)
expr_stmt|;
name|StripeStatistics
name|ss1
init|=
name|metadata
operator|.
name|getStripeStatistics
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|StripeStatistics
name|ss2
init|=
name|metadata
operator|.
name|getStripeStatistics
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|StripeStatistics
name|ss3
init|=
name|metadata
operator|.
name|getStripeStatistics
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|5000
argument_list|,
name|ss1
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|0
index|]
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5000
argument_list|,
name|ss2
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|0
index|]
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1000
argument_list|,
name|ss3
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|0
index|]
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5000
argument_list|,
operator|(
name|ss1
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|1
index|]
operator|)
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5000
argument_list|,
operator|(
name|ss2
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|1
index|]
operator|)
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1000
argument_list|,
operator|(
name|ss3
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|1
index|]
operator|)
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|ss1
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|1
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|ss2
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|1
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|ss3
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|1
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|ss1
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|1
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|ss2
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|1
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|ss3
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|1
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5000
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|ss1
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|1
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10000
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|ss2
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|1
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3000
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|ss3
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|1
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5000
argument_list|,
operator|(
name|ss1
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|2
index|]
operator|)
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5000
argument_list|,
operator|(
name|ss2
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|2
index|]
operator|)
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1000
argument_list|,
operator|(
name|ss3
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|2
index|]
operator|)
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"one"
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|ss1
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|2
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"two"
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|ss2
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|2
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"three"
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|ss3
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|2
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"one"
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|ss1
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|2
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"two"
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|ss2
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|2
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"three"
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|ss3
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|2
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|15000
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|ss1
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|2
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|15000
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|ss2
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|2
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5000
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|ss3
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|2
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|)
expr_stmt|;
name|RecordReaderImpl
name|recordReader
init|=
operator|(
name|RecordReaderImpl
operator|)
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|OrcProto
operator|.
name|RowIndex
index|[]
name|index
init|=
name|recordReader
operator|.
name|readRowIndex
argument_list|(
literal|0
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
operator|.
name|getRowGroupIndex
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|index
operator|.
name|length
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|OrcProto
operator|.
name|RowIndexEntry
argument_list|>
name|items
init|=
name|index
index|[
literal|1
index|]
operator|.
name|getEntryList
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|items
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|items
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPositionsCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|items
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPositions
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|items
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPositions
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|items
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPositions
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|items
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getStatistics
argument_list|()
operator|.
name|getIntStatistics
argument_list|()
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|index
operator|=
name|recordReader
operator|.
name|readRowIndex
argument_list|(
literal|1
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
operator|.
name|getRowGroupIndex
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|index
operator|.
name|length
argument_list|)
expr_stmt|;
name|items
operator|=
name|index
index|[
literal|1
index|]
operator|.
name|getEntryList
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|items
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getStatistics
argument_list|()
operator|.
name|getIntStatistics
argument_list|()
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|test1
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcFile
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|BigRow
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
argument_list|)
decl_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|BigRow
argument_list|(
literal|false
argument_list|,
operator|(
name|byte
operator|)
literal|1
argument_list|,
operator|(
name|short
operator|)
literal|1024
argument_list|,
literal|65536
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|,
operator|(
name|float
operator|)
literal|1.0
argument_list|,
operator|-
literal|15.0
argument_list|,
name|bytes
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|,
literal|"hi"
argument_list|,
operator|new
name|MiddleStruct
argument_list|(
name|inner
argument_list|(
literal|1
argument_list|,
literal|"bye"
argument_list|)
argument_list|,
name|inner
argument_list|(
literal|2
argument_list|,
literal|"sigh"
argument_list|)
argument_list|)
argument_list|,
name|list
argument_list|(
name|inner
argument_list|(
literal|3
argument_list|,
literal|"good"
argument_list|)
argument_list|,
name|inner
argument_list|(
literal|4
argument_list|,
literal|"bad"
argument_list|)
argument_list|)
argument_list|,
name|map
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|BigRow
argument_list|(
literal|true
argument_list|,
operator|(
name|byte
operator|)
literal|100
argument_list|,
operator|(
name|short
operator|)
literal|2048
argument_list|,
literal|65536
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|,
operator|(
name|float
operator|)
literal|2.0
argument_list|,
operator|-
literal|5.0
argument_list|,
name|bytes
argument_list|()
argument_list|,
literal|"bye"
argument_list|,
operator|new
name|MiddleStruct
argument_list|(
name|inner
argument_list|(
literal|1
argument_list|,
literal|"bye"
argument_list|)
argument_list|,
name|inner
argument_list|(
literal|2
argument_list|,
literal|"sigh"
argument_list|)
argument_list|)
argument_list|,
name|list
argument_list|(
name|inner
argument_list|(
literal|100000000
argument_list|,
literal|"cat"
argument_list|)
argument_list|,
name|inner
argument_list|(
operator|-
literal|100000
argument_list|,
literal|"in"
argument_list|)
argument_list|,
name|inner
argument_list|(
literal|1234
argument_list|,
literal|"hat"
argument_list|)
argument_list|)
argument_list|,
name|map
argument_list|(
name|inner
argument_list|(
literal|5
argument_list|,
literal|"chani"
argument_list|)
argument_list|,
name|inner
argument_list|(
literal|1
argument_list|,
literal|"mauddib"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|24
argument_list|,
name|OrcUtils
operator|.
name|getFlattenedColumnsCount
argument_list|(
name|inspector
argument_list|)
argument_list|)
expr_stmt|;
name|boolean
index|[]
name|expected
init|=
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|}
decl_stmt|;
name|boolean
index|[]
name|included
init|=
name|OrcUtils
operator|.
name|includeColumns
argument_list|(
literal|""
argument_list|,
literal|"boolean1,byte1,short1,int1,long1,float1,double1,bytes1,string1,middle,list,map"
argument_list|,
name|inspector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|Arrays
operator|.
name|equals
argument_list|(
name|expected
argument_list|,
name|included
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|=
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|true
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|}
expr_stmt|;
name|included
operator|=
name|OrcUtils
operator|.
name|includeColumns
argument_list|(
literal|"boolean1,string1,middle,map"
argument_list|,
literal|"boolean1,byte1,short1,int1,long1,float1,double1,bytes1,string1,middle,list,map"
argument_list|,
name|inspector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|Arrays
operator|.
name|equals
argument_list|(
name|expected
argument_list|,
name|included
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|=
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|true
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|}
expr_stmt|;
name|included
operator|=
name|OrcUtils
operator|.
name|includeColumns
argument_list|(
literal|"boolean1,string1,middle,map"
argument_list|,
literal|"boolean1,byte1,short1,int1,long1,float1,double1,bytes1,string1,middle,list,map"
argument_list|,
name|inspector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|Arrays
operator|.
name|equals
argument_list|(
name|expected
argument_list|,
name|included
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|=
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|}
expr_stmt|;
name|included
operator|=
name|OrcUtils
operator|.
name|includeColumns
argument_list|(
literal|"boolean1,byte1,short1,int1,long1,float1,double1,bytes1,string1,middle,list,map"
argument_list|,
literal|"boolean1,byte1,short1,int1,long1,float1,double1,bytes1,string1,middle,list,map"
argument_list|,
name|inspector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|Arrays
operator|.
name|equals
argument_list|(
name|expected
argument_list|,
name|included
argument_list|)
argument_list|)
expr_stmt|;
name|Metadata
name|metadata
init|=
name|reader
operator|.
name|getMetadata
argument_list|()
decl_stmt|;
comment|// check the stats
name|ColumnStatistics
index|[]
name|stats
init|=
name|reader
operator|.
name|getStatistics
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|stats
index|[
literal|1
index|]
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
operator|(
operator|(
name|BooleanColumnStatistics
operator|)
name|stats
index|[
literal|1
index|]
operator|)
operator|.
name|getFalseCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
operator|(
operator|(
name|BooleanColumnStatistics
operator|)
name|stats
index|[
literal|1
index|]
operator|)
operator|.
name|getTrueCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 2 hasNull: false true: 1"
argument_list|,
name|stats
index|[
literal|1
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2048
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|3
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1024
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|3
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|3
index|]
operator|)
operator|.
name|isSumDefined
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3072
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|3
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 2 hasNull: false min: 1024 max: 2048 sum: 3072"
argument_list|,
name|stats
index|[
literal|3
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|StripeStatistics
name|ss
init|=
name|metadata
operator|.
name|getStripeStatistics
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|ss
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|0
index|]
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
operator|(
operator|(
name|BooleanColumnStatistics
operator|)
name|ss
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|1
index|]
operator|)
operator|.
name|getTrueCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1024
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|ss
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|3
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2048
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|ss
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|3
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3072
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|ss
operator|.
name|getColumnStatistics
argument_list|()
index|[
literal|3
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|15.0
argument_list|,
operator|(
operator|(
name|DoubleColumnStatistics
operator|)
name|stats
index|[
literal|7
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|5.0
argument_list|,
operator|(
operator|(
name|DoubleColumnStatistics
operator|)
name|stats
index|[
literal|7
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|20.0
argument_list|,
operator|(
operator|(
name|DoubleColumnStatistics
operator|)
name|stats
index|[
literal|7
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|,
literal|0.00001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 2 hasNull: false min: -15.0 max: -5.0 sum: -20.0"
argument_list|,
name|stats
index|[
literal|7
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 2 hasNull: false min: bye max: hi sum: 5"
argument_list|,
name|stats
index|[
literal|9
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|// check the inspectors
name|StructObjectInspector
name|readerInspector
init|=
operator|(
name|StructObjectInspector
operator|)
name|reader
operator|.
name|getObjectInspector
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|ObjectInspector
operator|.
name|Category
operator|.
name|STRUCT
argument_list|,
name|readerInspector
operator|.
name|getCategory
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"struct<boolean1:boolean,byte1:tinyint,short1:smallint,"
operator|+
literal|"int1:int,long1:bigint,float1:float,double1:double,bytes1:"
operator|+
literal|"binary,string1:string,middle:struct<list:array<struct<int1:int,"
operator|+
literal|"string1:string>>>,list:array<struct<int1:int,string1:string>>,"
operator|+
literal|"map:map<string,struct<int1:int,string1:string>>>"
argument_list|,
name|readerInspector
operator|.
name|getTypeName
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|StructField
argument_list|>
name|fields
init|=
name|readerInspector
operator|.
name|getAllStructFieldRefs
argument_list|()
decl_stmt|;
name|BooleanObjectInspector
name|bo
init|=
operator|(
name|BooleanObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"boolean1"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|ByteObjectInspector
name|by
init|=
operator|(
name|ByteObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"byte1"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|ShortObjectInspector
name|sh
init|=
operator|(
name|ShortObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"short1"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|IntObjectInspector
name|in
init|=
operator|(
name|IntObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"int1"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|LongObjectInspector
name|lo
init|=
operator|(
name|LongObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"long1"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|FloatObjectInspector
name|fl
init|=
operator|(
name|FloatObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"float1"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|DoubleObjectInspector
name|dbl
init|=
operator|(
name|DoubleObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"double1"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|BinaryObjectInspector
name|bi
init|=
operator|(
name|BinaryObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"bytes1"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|StringObjectInspector
name|st
init|=
operator|(
name|StringObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"string1"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|StructObjectInspector
name|mid
init|=
operator|(
name|StructObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"middle"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|StructField
argument_list|>
name|midFields
init|=
name|mid
operator|.
name|getAllStructFieldRefs
argument_list|()
decl_stmt|;
name|ListObjectInspector
name|midli
init|=
operator|(
name|ListObjectInspector
operator|)
name|midFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|StructObjectInspector
name|inner
init|=
operator|(
name|StructObjectInspector
operator|)
name|midli
operator|.
name|getListElementObjectInspector
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|StructField
argument_list|>
name|inFields
init|=
name|inner
operator|.
name|getAllStructFieldRefs
argument_list|()
decl_stmt|;
name|ListObjectInspector
name|li
init|=
operator|(
name|ListObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"list"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|MapObjectInspector
name|ma
init|=
operator|(
name|MapObjectInspector
operator|)
name|readerInspector
operator|.
name|getStructFieldRef
argument_list|(
literal|"map"
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|StringObjectInspector
name|mk
init|=
operator|(
name|StringObjectInspector
operator|)
name|ma
operator|.
name|getMapKeyObjectInspector
argument_list|()
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|Object
name|row
init|=
name|rows
operator|.
name|next
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|row
argument_list|)
expr_stmt|;
comment|// check the contents of the first row
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|bo
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|by
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1024
argument_list|,
name|sh
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|65536
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|,
name|lo
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|4
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1.0
argument_list|,
name|fl
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|)
argument_list|)
argument_list|,
literal|0.00001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|15.0
argument_list|,
name|dbl
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|6
argument_list|)
argument_list|)
argument_list|)
argument_list|,
literal|0.00001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bytes
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|,
name|bi
operator|.
name|getPrimitiveWritableObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|7
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hi"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|8
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|midRow
init|=
name|midli
operator|.
name|getList
argument_list|(
name|mid
operator|.
name|getStructFieldData
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|9
argument_list|)
argument_list|)
argument_list|,
name|midFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|midRow
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|midRow
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|midRow
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bye"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|midRow
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|midRow
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"sigh"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|midRow
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|list
init|=
name|li
operator|.
name|getList
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|10
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|list
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"good"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|list
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bad"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|list
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|map
init|=
name|ma
operator|.
name|getMap
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|11
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|map
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// check the contents of second row
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rows
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|bo
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|100
argument_list|,
name|by
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2048
argument_list|,
name|sh
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|65536
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|,
name|lo
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|4
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2.0
argument_list|,
name|fl
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|)
argument_list|)
argument_list|,
literal|0.00001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|5.0
argument_list|,
name|dbl
operator|.
name|get
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|6
argument_list|)
argument_list|)
argument_list|)
argument_list|,
literal|0.00001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bytes
argument_list|()
argument_list|,
name|bi
operator|.
name|getPrimitiveWritableObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|7
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bye"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|8
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|midRow
operator|=
name|midli
operator|.
name|getList
argument_list|(
name|mid
operator|.
name|getStructFieldData
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|9
argument_list|)
argument_list|)
argument_list|,
name|midFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|midRow
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|midRow
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|midRow
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bye"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|midRow
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|midRow
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"sigh"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|midRow
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|list
operator|=
name|li
operator|.
name|getList
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|list
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|100000000
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"cat"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|100000
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|list
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"in"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|list
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1234
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|list
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"hat"
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|list
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|=
name|ma
operator|.
name|getMap
argument_list|(
name|readerInspector
operator|.
name|getStructFieldData
argument_list|(
name|row
argument_list|,
name|fields
operator|.
name|get
argument_list|(
literal|11
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|map
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|boolean
index|[]
name|found
init|=
operator|new
name|boolean
index|[
literal|2
index|]
decl_stmt|;
for|for
control|(
name|Object
name|key
range|:
name|map
operator|.
name|keySet
argument_list|()
control|)
block|{
name|String
name|str
init|=
name|mk
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|str
operator|.
name|equals
argument_list|(
literal|"chani"
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|found
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|map
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|str
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|map
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|found
index|[
literal|0
index|]
operator|=
literal|true
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|str
operator|.
name|equals
argument_list|(
literal|"mauddib"
argument_list|)
condition|)
block|{
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|found
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|in
operator|.
name|get
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|map
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|str
argument_list|,
name|st
operator|.
name|getPrimitiveJavaObject
argument_list|(
name|inner
operator|.
name|getStructFieldData
argument_list|(
name|map
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|,
name|inFields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|found
index|[
literal|1
index|]
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Unknown key "
operator|+
name|str
argument_list|)
throw|;
block|}
block|}
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|found
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|found
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
comment|// handle the close up
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rows
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|rows
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|columnProjection
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcFile
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|InnerStruct
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|1000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|100
argument_list|)
operator|.
name|rowIndexStride
argument_list|(
literal|1000
argument_list|)
argument_list|)
decl_stmt|;
name|Random
name|r1
init|=
operator|new
name|Random
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|Random
name|r2
init|=
operator|new
name|Random
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|int
name|x
decl_stmt|;
name|int
name|minInt
init|=
literal|0
decl_stmt|,
name|maxInt
init|=
literal|0
decl_stmt|;
name|String
name|y
decl_stmt|;
name|String
name|minStr
init|=
literal|null
decl_stmt|,
name|maxStr
init|=
literal|null
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|21000
condition|;
operator|++
name|i
control|)
block|{
name|x
operator|=
name|r1
operator|.
name|nextInt
argument_list|()
expr_stmt|;
name|y
operator|=
name|Long
operator|.
name|toHexString
argument_list|(
name|r2
operator|.
name|nextLong
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|==
literal|0
operator|||
name|x
operator|<
name|minInt
condition|)
block|{
name|minInt
operator|=
name|x
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|==
literal|0
operator|||
name|x
operator|>
name|maxInt
condition|)
block|{
name|maxInt
operator|=
name|x
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|==
literal|0
operator|||
name|y
operator|.
name|compareTo
argument_list|(
name|minStr
argument_list|)
operator|<
literal|0
condition|)
block|{
name|minStr
operator|=
name|y
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|==
literal|0
operator|||
name|y
operator|.
name|compareTo
argument_list|(
name|maxStr
argument_list|)
operator|>
literal|0
condition|)
block|{
name|maxStr
operator|=
name|y
expr_stmt|;
block|}
name|writer
operator|.
name|addRow
argument_list|(
name|inner
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
comment|// check out the statistics
name|ColumnStatistics
index|[]
name|stats
init|=
name|reader
operator|.
name|getStatistics
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|stats
operator|.
name|length
argument_list|)
expr_stmt|;
for|for
control|(
name|ColumnStatistics
name|s
range|:
name|stats
control|)
block|{
name|assertEquals
argument_list|(
literal|21000
argument_list|,
name|s
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|s
operator|instanceof
name|IntegerColumnStatistics
condition|)
block|{
name|assertEquals
argument_list|(
name|minInt
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|s
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|maxInt
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|s
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|s
operator|instanceof
name|StringColumnStatistics
condition|)
block|{
name|assertEquals
argument_list|(
name|maxStr
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|s
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|minStr
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|s
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|// check out the types
name|List
argument_list|<
name|OrcProto
operator|.
name|Type
argument_list|>
name|types
init|=
name|reader
operator|.
name|getTypes
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|types
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|STRUCT
argument_list|,
name|types
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getKind
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|types
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getSubtypesCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|types
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getSubtypes
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|types
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getSubtypes
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|INT
argument_list|,
name|types
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getKind
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|types
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getSubtypesCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|STRING
argument_list|,
name|types
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getKind
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|types
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getSubtypesCount
argument_list|()
argument_list|)
expr_stmt|;
comment|// read the contents and make sure they match
name|RecordReader
name|rows1
init|=
name|reader
operator|.
name|rows
argument_list|(
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|true
block|,
literal|false
block|}
argument_list|)
decl_stmt|;
name|RecordReader
name|rows2
init|=
name|reader
operator|.
name|rows
argument_list|(
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|false
block|,
literal|true
block|}
argument_list|)
decl_stmt|;
name|r1
operator|=
operator|new
name|Random
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|r2
operator|=
operator|new
name|Random
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|OrcStruct
name|row1
init|=
literal|null
decl_stmt|;
name|OrcStruct
name|row2
init|=
literal|null
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|21000
condition|;
operator|++
name|i
control|)
block|{
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rows1
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rows2
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|row1
operator|=
operator|(
name|OrcStruct
operator|)
name|rows1
operator|.
name|next
argument_list|(
name|row1
argument_list|)
expr_stmt|;
name|row2
operator|=
operator|(
name|OrcStruct
operator|)
name|rows2
operator|.
name|next
argument_list|(
name|row2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
operator|.
name|nextInt
argument_list|()
argument_list|,
operator|(
operator|(
name|IntWritable
operator|)
name|row1
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|toHexString
argument_list|(
name|r2
operator|.
name|nextLong
argument_list|()
argument_list|)
argument_list|,
name|row2
operator|.
name|getFieldValue
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rows1
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rows2
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|rows1
operator|.
name|close
argument_list|()
expr_stmt|;
name|rows2
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|emptyFile
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcFile
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|BigRow
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|1000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|reader
operator|.
name|rows
argument_list|()
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|,
name|reader
operator|.
name|getCompression
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|reader
operator|.
name|getNumberOfRows
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|reader
operator|.
name|getCompressionSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|reader
operator|.
name|getMetadataKeys
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|reader
operator|.
name|getContentLength
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|reader
operator|.
name|getStripes
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|metaData
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcFile
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|BigRow
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|1000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|writer
operator|.
name|addUserMetadata
argument_list|(
literal|"my.meta"
argument_list|,
name|byteBuf
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|2
argument_list|,
literal|127
argument_list|,
operator|-
literal|128
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addUserMetadata
argument_list|(
literal|"clobber"
argument_list|,
name|byteBuf
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addUserMetadata
argument_list|(
literal|"clobber"
argument_list|,
name|byteBuf
argument_list|(
literal|4
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|ByteBuffer
name|bigBuf
init|=
name|ByteBuffer
operator|.
name|allocate
argument_list|(
literal|40000
argument_list|)
decl_stmt|;
name|Random
name|random
init|=
operator|new
name|Random
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|random
operator|.
name|nextBytes
argument_list|(
name|bigBuf
operator|.
name|array
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addUserMetadata
argument_list|(
literal|"big"
argument_list|,
name|bigBuf
argument_list|)
expr_stmt|;
name|bigBuf
operator|.
name|position
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|BigRow
argument_list|(
literal|true
argument_list|,
operator|(
name|byte
operator|)
literal|127
argument_list|,
operator|(
name|short
operator|)
literal|1024
argument_list|,
literal|42
argument_list|,
literal|42L
operator|*
literal|1024
operator|*
literal|1024
operator|*
literal|1024
argument_list|,
operator|(
name|float
operator|)
literal|3.1415
argument_list|,
operator|-
literal|2.713
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addUserMetadata
argument_list|(
literal|"clobber"
argument_list|,
name|byteBuf
argument_list|(
literal|5
argument_list|,
literal|7
argument_list|,
literal|11
argument_list|,
literal|13
argument_list|,
literal|17
argument_list|,
literal|19
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|byteBuf
argument_list|(
literal|5
argument_list|,
literal|7
argument_list|,
literal|11
argument_list|,
literal|13
argument_list|,
literal|17
argument_list|,
literal|19
argument_list|)
argument_list|,
name|reader
operator|.
name|getMetadataValue
argument_list|(
literal|"clobber"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|byteBuf
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|,
literal|7
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|2
argument_list|,
literal|127
argument_list|,
operator|-
literal|128
argument_list|)
argument_list|,
name|reader
operator|.
name|getMetadataValue
argument_list|(
literal|"my.meta"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bigBuf
argument_list|,
name|reader
operator|.
name|getMetadataValue
argument_list|(
literal|"big"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|reader
operator|.
name|getMetadataValue
argument_list|(
literal|"unknown"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|iae
parameter_list|)
block|{
comment|// PASS
block|}
name|int
name|i
init|=
literal|0
decl_stmt|;
for|for
control|(
name|String
name|key
range|:
name|reader
operator|.
name|getMetadataKeys
argument_list|()
control|)
block|{
if|if
condition|(
literal|"my.meta"
operator|.
name|equals
argument_list|(
name|key
argument_list|)
operator|||
literal|"clobber"
operator|.
name|equals
argument_list|(
name|key
argument_list|)
operator|||
literal|"big"
operator|.
name|equals
argument_list|(
name|key
argument_list|)
condition|)
block|{
name|i
operator|+=
literal|1
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"unknown key "
operator|+
name|key
argument_list|)
throw|;
block|}
block|}
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|i
argument_list|)
expr_stmt|;
name|Metadata
name|metadata
init|=
name|reader
operator|.
name|getMetadata
argument_list|()
decl_stmt|;
name|int
name|numStripes
init|=
name|metadata
operator|.
name|getStripeStatistics
argument_list|()
operator|.
name|size
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|numStripes
argument_list|)
expr_stmt|;
block|}
comment|/**    * We test union, timestamp, and decimal separately since we need to make the    * object inspector manually. (The Hive reflection-based doesn't handle    * them properly.)    */
annotation|@
name|Test
specifier|public
name|void
name|testUnionAndTimestamp
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|OrcProto
operator|.
name|Type
argument_list|>
name|types
init|=
operator|new
name|ArrayList
argument_list|<
name|OrcProto
operator|.
name|Type
argument_list|>
argument_list|()
decl_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|STRUCT
argument_list|)
operator|.
name|addFieldNames
argument_list|(
literal|"time"
argument_list|)
operator|.
name|addFieldNames
argument_list|(
literal|"union"
argument_list|)
operator|.
name|addFieldNames
argument_list|(
literal|"decimal"
argument_list|)
operator|.
name|addSubtypes
argument_list|(
literal|1
argument_list|)
operator|.
name|addSubtypes
argument_list|(
literal|2
argument_list|)
operator|.
name|addSubtypes
argument_list|(
literal|5
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|TIMESTAMP
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|UNION
argument_list|)
operator|.
name|addSubtypes
argument_list|(
literal|3
argument_list|)
operator|.
name|addSubtypes
argument_list|(
literal|4
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|INT
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|STRING
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|DECIMAL
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcFile
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|OrcStruct
operator|.
name|createObjectInspector
argument_list|(
literal|0
argument_list|,
name|types
argument_list|)
expr_stmt|;
block|}
name|HiveDecimal
name|maxValue
init|=
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"10000000000000000000"
argument_list|)
decl_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|1000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|100
argument_list|)
operator|.
name|blockPadding
argument_list|(
literal|false
argument_list|)
argument_list|)
decl_stmt|;
name|OrcStruct
name|row
init|=
operator|new
name|OrcStruct
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|OrcUnion
name|union
init|=
operator|new
name|OrcUnion
argument_list|()
decl_stmt|;
name|row
operator|.
name|setFieldValue
argument_list|(
literal|1
argument_list|,
name|union
argument_list|)
expr_stmt|;
name|row
operator|.
name|setFieldValue
argument_list|(
literal|0
argument_list|,
operator|new
name|TimestampWritable
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2000-03-12 15:00:00"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|HiveDecimal
name|value
init|=
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"12345678.6547456"
argument_list|)
decl_stmt|;
name|row
operator|.
name|setFieldValue
argument_list|(
literal|2
argument_list|,
operator|new
name|HiveDecimalWritable
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
name|union
operator|.
name|set
argument_list|(
operator|(
name|byte
operator|)
literal|0
argument_list|,
operator|new
name|IntWritable
argument_list|(
literal|42
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|row
operator|.
name|setFieldValue
argument_list|(
literal|0
argument_list|,
operator|new
name|TimestampWritable
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2000-03-20 12:00:00.123456789"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|union
operator|.
name|set
argument_list|(
operator|(
name|byte
operator|)
literal|1
argument_list|,
operator|new
name|Text
argument_list|(
literal|"hello"
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|=
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"-5643.234"
argument_list|)
expr_stmt|;
name|row
operator|.
name|setFieldValue
argument_list|(
literal|2
argument_list|,
operator|new
name|HiveDecimalWritable
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|row
operator|.
name|setFieldValue
argument_list|(
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|row
operator|.
name|setFieldValue
argument_list|(
literal|1
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|row
operator|.
name|setFieldValue
argument_list|(
literal|2
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|row
operator|.
name|setFieldValue
argument_list|(
literal|1
argument_list|,
name|union
argument_list|)
expr_stmt|;
name|union
operator|.
name|set
argument_list|(
operator|(
name|byte
operator|)
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|union
operator|.
name|set
argument_list|(
operator|(
name|byte
operator|)
literal|1
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|union
operator|.
name|set
argument_list|(
operator|(
name|byte
operator|)
literal|0
argument_list|,
operator|new
name|IntWritable
argument_list|(
literal|200000
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|setFieldValue
argument_list|(
literal|0
argument_list|,
operator|new
name|TimestampWritable
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"1900-01-01 00:00:00"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|value
operator|=
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"10000000000000000000"
argument_list|)
expr_stmt|;
name|row
operator|.
name|setFieldValue
argument_list|(
literal|2
argument_list|,
operator|new
name|HiveDecimalWritable
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|Random
name|rand
init|=
operator|new
name|Random
argument_list|(
literal|42
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1900
init|;
name|i
operator|<
literal|2200
condition|;
operator|++
name|i
control|)
block|{
name|row
operator|.
name|setFieldValue
argument_list|(
literal|0
argument_list|,
operator|new
name|TimestampWritable
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
name|i
operator|+
literal|"-05-05 12:34:56."
operator|+
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|i
operator|&
literal|1
operator|)
operator|==
literal|0
condition|)
block|{
name|union
operator|.
name|set
argument_list|(
operator|(
name|byte
operator|)
literal|0
argument_list|,
operator|new
name|IntWritable
argument_list|(
name|i
operator|*
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|union
operator|.
name|set
argument_list|(
operator|(
name|byte
operator|)
literal|1
argument_list|,
operator|new
name|Text
argument_list|(
name|Integer
operator|.
name|toString
argument_list|(
name|i
operator|*
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|value
operator|=
name|HiveDecimal
operator|.
name|create
argument_list|(
operator|new
name|BigInteger
argument_list|(
literal|64
argument_list|,
name|rand
argument_list|)
argument_list|,
name|rand
operator|.
name|nextInt
argument_list|(
literal|18
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|setFieldValue
argument_list|(
literal|2
argument_list|,
operator|new
name|HiveDecimalWritable
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|maxValue
operator|.
name|compareTo
argument_list|(
name|value
argument_list|)
operator|<
literal|0
condition|)
block|{
name|maxValue
operator|=
name|value
expr_stmt|;
block|}
name|writer
operator|.
name|addRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
comment|// let's add a lot of constant rows to test the rle
name|row
operator|.
name|setFieldValue
argument_list|(
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|union
operator|.
name|set
argument_list|(
operator|(
name|byte
operator|)
literal|0
argument_list|,
operator|new
name|IntWritable
argument_list|(
literal|1732050807
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|.
name|setFieldValue
argument_list|(
literal|2
argument_list|,
literal|null
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5000
condition|;
operator|++
name|i
control|)
block|{
name|writer
operator|.
name|addRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
name|union
operator|.
name|set
argument_list|(
operator|(
name|byte
operator|)
literal|0
argument_list|,
operator|new
name|IntWritable
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|union
operator|.
name|set
argument_list|(
operator|(
name|byte
operator|)
literal|0
argument_list|,
operator|new
name|IntWritable
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|union
operator|.
name|set
argument_list|(
operator|(
name|byte
operator|)
literal|0
argument_list|,
operator|new
name|IntWritable
argument_list|(
literal|138
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|OrcUtils
operator|.
name|getFlattenedColumnsCount
argument_list|(
name|inspector
argument_list|)
argument_list|)
expr_stmt|;
name|boolean
index|[]
name|expected
init|=
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|}
decl_stmt|;
name|boolean
index|[]
name|included
init|=
name|OrcUtils
operator|.
name|includeColumns
argument_list|(
literal|""
argument_list|,
literal|"time,union,decimal"
argument_list|,
name|inspector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|Arrays
operator|.
name|equals
argument_list|(
name|expected
argument_list|,
name|included
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|=
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|true
block|,
literal|false
block|,
literal|false
block|,
literal|false
block|,
literal|true
block|}
expr_stmt|;
name|included
operator|=
name|OrcUtils
operator|.
name|includeColumns
argument_list|(
literal|"time,decimal"
argument_list|,
literal|"time,union,decimal"
argument_list|,
name|inspector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|Arrays
operator|.
name|equals
argument_list|(
name|expected
argument_list|,
name|included
argument_list|)
argument_list|)
expr_stmt|;
name|expected
operator|=
operator|new
name|boolean
index|[]
block|{
literal|false
block|,
literal|false
block|,
literal|true
block|,
literal|true
block|,
literal|true
block|,
literal|false
block|}
expr_stmt|;
name|included
operator|=
name|OrcUtils
operator|.
name|includeColumns
argument_list|(
literal|"union"
argument_list|,
literal|"time,union,decimal"
argument_list|,
name|inspector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|Arrays
operator|.
name|equals
argument_list|(
name|expected
argument_list|,
name|included
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|reader
operator|.
name|getMetadataKeys
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5309
argument_list|,
name|reader
operator|.
name|getNumberOfRows
argument_list|()
argument_list|)
expr_stmt|;
name|DecimalColumnStatistics
name|stats
init|=
operator|(
name|DecimalColumnStatistics
operator|)
name|reader
operator|.
name|getStatistics
argument_list|()
index|[
literal|5
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|303
argument_list|,
name|stats
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"-5643.234"
argument_list|)
argument_list|,
name|stats
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|maxValue
argument_list|,
name|stats
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
comment|// TODO: fix this
comment|//    assertEquals(null,stats.getSum());
name|int
name|stripeCount
init|=
literal|0
decl_stmt|;
name|int
name|rowCount
init|=
literal|0
decl_stmt|;
name|long
name|currentOffset
init|=
operator|-
literal|1
decl_stmt|;
for|for
control|(
name|StripeInformation
name|stripe
range|:
name|reader
operator|.
name|getStripes
argument_list|()
control|)
block|{
name|stripeCount
operator|+=
literal|1
expr_stmt|;
name|rowCount
operator|+=
name|stripe
operator|.
name|getNumberOfRows
argument_list|()
expr_stmt|;
if|if
condition|(
name|currentOffset
operator|<
literal|0
condition|)
block|{
name|currentOffset
operator|=
name|stripe
operator|.
name|getOffset
argument_list|()
operator|+
name|stripe
operator|.
name|getLength
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
name|currentOffset
argument_list|,
name|stripe
operator|.
name|getOffset
argument_list|()
argument_list|)
expr_stmt|;
name|currentOffset
operator|+=
name|stripe
operator|.
name|getLength
argument_list|()
expr_stmt|;
block|}
block|}
name|assertEquals
argument_list|(
name|reader
operator|.
name|getNumberOfRows
argument_list|()
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|stripeCount
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|reader
operator|.
name|getContentLength
argument_list|()
argument_list|,
name|currentOffset
argument_list|)
expr_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rows
operator|.
name|getRowNumber
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0.0
argument_list|,
name|rows
operator|.
name|getProgress
argument_list|()
argument_list|,
literal|0.000001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rows
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|rows
operator|.
name|getRowNumber
argument_list|()
argument_list|)
expr_stmt|;
name|inspector
operator|=
name|reader
operator|.
name|getObjectInspector
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"struct<time:timestamp,union:uniontype<int,string>,decimal:decimal(38,18)>"
argument_list|,
name|inspector
operator|.
name|getTypeName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|TimestampWritable
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2000-03-12 15:00:00"
argument_list|)
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|union
operator|=
operator|(
name|OrcUnion
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|union
operator|.
name|getTag
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|IntWritable
argument_list|(
literal|42
argument_list|)
argument_list|,
name|union
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HiveDecimalWritable
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"12345678.6547456"
argument_list|)
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|rows
operator|.
name|getRowNumber
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|TimestampWritable
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2000-03-20 12:00:00.123456789"
argument_list|)
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|union
operator|.
name|getTag
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Text
argument_list|(
literal|"hello"
argument_list|)
argument_list|,
name|union
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HiveDecimalWritable
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"-5643.234"
argument_list|)
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|union
operator|=
operator|(
name|OrcUnion
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|union
operator|.
name|getTag
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|union
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|union
operator|.
name|getTag
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|union
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|TimestampWritable
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"1900-01-01 00:00:00"
argument_list|)
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|IntWritable
argument_list|(
literal|200000
argument_list|)
argument_list|,
name|union
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HiveDecimalWritable
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"10000000000000000000"
argument_list|)
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|rand
operator|=
operator|new
name|Random
argument_list|(
literal|42
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1900
init|;
name|i
operator|<
literal|2200
condition|;
operator|++
name|i
control|)
block|{
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|TimestampWritable
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
name|i
operator|+
literal|"-05-05 12:34:56."
operator|+
name|i
argument_list|)
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|i
operator|&
literal|1
operator|)
operator|==
literal|0
condition|)
block|{
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|union
operator|.
name|getTag
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|IntWritable
argument_list|(
name|i
operator|*
name|i
argument_list|)
argument_list|,
name|union
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|union
operator|.
name|getTag
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Text
argument_list|(
name|Integer
operator|.
name|toString
argument_list|(
name|i
operator|*
name|i
argument_list|)
argument_list|)
argument_list|,
name|union
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
operator|new
name|HiveDecimalWritable
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
operator|new
name|BigInteger
argument_list|(
literal|64
argument_list|,
name|rand
argument_list|)
argument_list|,
name|rand
operator|.
name|nextInt
argument_list|(
literal|18
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5000
condition|;
operator|++
name|i
control|)
block|{
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|IntWritable
argument_list|(
literal|1732050807
argument_list|)
argument_list|,
name|union
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|IntWritable
argument_list|(
literal|0
argument_list|)
argument_list|,
name|union
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|IntWritable
argument_list|(
literal|10
argument_list|)
argument_list|,
name|union
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|IntWritable
argument_list|(
literal|138
argument_list|)
argument_list|,
name|union
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rows
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1.0
argument_list|,
name|rows
operator|.
name|getProgress
argument_list|()
argument_list|,
literal|0.00001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|reader
operator|.
name|getNumberOfRows
argument_list|()
argument_list|,
name|rows
operator|.
name|getRowNumber
argument_list|()
argument_list|)
expr_stmt|;
name|rows
operator|.
name|seekToRow
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|TimestampWritable
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2000-03-20 12:00:00.123456789"
argument_list|)
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|union
operator|.
name|getTag
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Text
argument_list|(
literal|"hello"
argument_list|)
argument_list|,
name|union
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|HiveDecimalWritable
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"-5643.234"
argument_list|)
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|rows
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|/**    * Read and write a randomly generated snappy file.    * @throws Exception    */
annotation|@
name|Test
specifier|public
name|void
name|testSnappy
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcFile
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|InnerStruct
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|1000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|SNAPPY
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|Random
name|rand
init|=
operator|new
name|Random
argument_list|(
literal|12
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10000
condition|;
operator|++
name|i
control|)
block|{
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|InnerStruct
argument_list|(
name|rand
operator|.
name|nextInt
argument_list|()
argument_list|,
name|Integer
operator|.
name|toHexString
argument_list|(
name|rand
operator|.
name|nextInt
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|rand
operator|=
operator|new
name|Random
argument_list|(
literal|12
argument_list|)
expr_stmt|;
name|OrcStruct
name|row
init|=
literal|null
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10000
condition|;
operator|++
name|i
control|)
block|{
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rows
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|rand
operator|.
name|nextInt
argument_list|()
argument_list|,
operator|(
operator|(
name|IntWritable
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|toHexString
argument_list|(
name|rand
operator|.
name|nextInt
argument_list|()
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rows
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|rows
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|/**    * Read and write a randomly generated snappy file.    * @throws Exception    */
annotation|@
name|Test
specifier|public
name|void
name|testWithoutIndex
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcFile
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|InnerStruct
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|5000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|SNAPPY
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|1000
argument_list|)
operator|.
name|rowIndexStride
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|Random
name|rand
init|=
operator|new
name|Random
argument_list|(
literal|24
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10000
condition|;
operator|++
name|i
control|)
block|{
name|InnerStruct
name|row
init|=
operator|new
name|InnerStruct
argument_list|(
name|rand
operator|.
name|nextInt
argument_list|()
argument_list|,
name|Integer
operator|.
name|toBinaryString
argument_list|(
name|rand
operator|.
name|nextInt
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|5
condition|;
operator|++
name|j
control|)
block|{
name|writer
operator|.
name|addRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
block|}
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|50000
argument_list|,
name|reader
operator|.
name|getNumberOfRows
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|reader
operator|.
name|getRowIndexStride
argument_list|()
argument_list|)
expr_stmt|;
name|StripeInformation
name|stripe
init|=
name|reader
operator|.
name|getStripes
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|stripe
operator|.
name|getDataLength
argument_list|()
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|stripe
operator|.
name|getIndexLength
argument_list|()
argument_list|)
expr_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|rand
operator|=
operator|new
name|Random
argument_list|(
literal|24
argument_list|)
expr_stmt|;
name|OrcStruct
name|row
init|=
literal|null
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10000
condition|;
operator|++
name|i
control|)
block|{
name|int
name|intVal
init|=
name|rand
operator|.
name|nextInt
argument_list|()
decl_stmt|;
name|String
name|strVal
init|=
name|Integer
operator|.
name|toBinaryString
argument_list|(
name|rand
operator|.
name|nextInt
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|5
condition|;
operator|++
name|j
control|)
block|{
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rows
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|intVal
argument_list|,
operator|(
operator|(
name|IntWritable
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|strVal
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rows
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|rows
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSeek
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcFile
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|BigRow
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|200000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|65536
argument_list|)
operator|.
name|rowIndexStride
argument_list|(
literal|1000
argument_list|)
argument_list|)
decl_stmt|;
name|Random
name|rand
init|=
operator|new
name|Random
argument_list|(
literal|42
argument_list|)
decl_stmt|;
specifier|final
name|int
name|COUNT
init|=
literal|32768
decl_stmt|;
name|long
index|[]
name|intValues
init|=
operator|new
name|long
index|[
name|COUNT
index|]
decl_stmt|;
name|double
index|[]
name|doubleValues
init|=
operator|new
name|double
index|[
name|COUNT
index|]
decl_stmt|;
name|String
index|[]
name|stringValues
init|=
operator|new
name|String
index|[
name|COUNT
index|]
decl_stmt|;
name|BytesWritable
index|[]
name|byteValues
init|=
operator|new
name|BytesWritable
index|[
name|COUNT
index|]
decl_stmt|;
name|String
index|[]
name|words
init|=
operator|new
name|String
index|[
literal|128
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|words
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
name|words
index|[
name|i
index|]
operator|=
name|Integer
operator|.
name|toHexString
argument_list|(
name|rand
operator|.
name|nextInt
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|COUNT
operator|/
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|intValues
index|[
literal|2
operator|*
name|i
index|]
operator|=
name|rand
operator|.
name|nextLong
argument_list|()
expr_stmt|;
name|intValues
index|[
literal|2
operator|*
name|i
operator|+
literal|1
index|]
operator|=
name|intValues
index|[
literal|2
operator|*
name|i
index|]
expr_stmt|;
name|stringValues
index|[
literal|2
operator|*
name|i
index|]
operator|=
name|words
index|[
name|rand
operator|.
name|nextInt
argument_list|(
name|words
operator|.
name|length
argument_list|)
index|]
expr_stmt|;
name|stringValues
index|[
literal|2
operator|*
name|i
operator|+
literal|1
index|]
operator|=
name|stringValues
index|[
literal|2
operator|*
name|i
index|]
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|COUNT
condition|;
operator|++
name|i
control|)
block|{
name|doubleValues
index|[
name|i
index|]
operator|=
name|rand
operator|.
name|nextDouble
argument_list|()
expr_stmt|;
name|byte
index|[]
name|buf
init|=
operator|new
name|byte
index|[
literal|20
index|]
decl_stmt|;
name|rand
operator|.
name|nextBytes
argument_list|(
name|buf
argument_list|)
expr_stmt|;
name|byteValues
index|[
name|i
index|]
operator|=
operator|new
name|BytesWritable
argument_list|(
name|buf
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|COUNT
condition|;
operator|++
name|i
control|)
block|{
name|writer
operator|.
name|addRow
argument_list|(
name|createRandomRow
argument_list|(
name|intValues
argument_list|,
name|doubleValues
argument_list|,
name|stringValues
argument_list|,
name|byteValues
argument_list|,
name|words
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|COUNT
argument_list|,
name|reader
operator|.
name|getNumberOfRows
argument_list|()
argument_list|)
expr_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|OrcStruct
name|row
init|=
literal|null
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
name|COUNT
operator|-
literal|1
init|;
name|i
operator|>=
literal|0
condition|;
operator|--
name|i
control|)
block|{
name|rows
operator|.
name|seekToRow
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|BigRow
name|expected
init|=
name|createRandomRow
argument_list|(
name|intValues
argument_list|,
name|doubleValues
argument_list|,
name|stringValues
argument_list|,
name|byteValues
argument_list|,
name|words
argument_list|,
name|i
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|boolean1
operator|.
name|booleanValue
argument_list|()
argument_list|,
operator|(
operator|(
name|BooleanWritable
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|byte1
operator|.
name|byteValue
argument_list|()
argument_list|,
operator|(
operator|(
name|ByteWritable
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|short1
operator|.
name|shortValue
argument_list|()
argument_list|,
operator|(
operator|(
name|ShortWritable
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|2
argument_list|)
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|int1
operator|.
name|intValue
argument_list|()
argument_list|,
operator|(
operator|(
name|IntWritable
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|3
argument_list|)
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|long1
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongWritable
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|4
argument_list|)
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|float1
argument_list|,
operator|(
operator|(
name|FloatWritable
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|5
argument_list|)
operator|)
operator|.
name|get
argument_list|()
argument_list|,
literal|0.0001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|double1
argument_list|,
operator|(
operator|(
name|DoubleWritable
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|6
argument_list|)
operator|)
operator|.
name|get
argument_list|()
argument_list|,
literal|0.0001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|bytes1
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|string1
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|InnerStruct
argument_list|>
name|expectedList
init|=
name|expected
operator|.
name|middle
operator|.
name|list
decl_stmt|;
name|List
argument_list|<
name|OrcStruct
argument_list|>
name|actualList
init|=
call|(
name|List
argument_list|<
name|OrcStruct
argument_list|>
call|)
argument_list|(
operator|(
name|OrcStruct
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|9
argument_list|)
argument_list|)
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|compareList
argument_list|(
name|expectedList
argument_list|,
name|actualList
argument_list|)
expr_stmt|;
name|compareList
argument_list|(
name|expected
operator|.
name|list
argument_list|,
operator|(
name|List
argument_list|<
name|OrcStruct
argument_list|>
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|rows
operator|.
name|close
argument_list|()
expr_stmt|;
name|Iterator
argument_list|<
name|StripeInformation
argument_list|>
name|stripeIterator
init|=
name|reader
operator|.
name|getStripes
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|long
name|offsetOfStripe2
init|=
literal|0
decl_stmt|;
name|long
name|offsetOfStripe4
init|=
literal|0
decl_stmt|;
name|long
name|lastRowOfStripe2
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
operator|++
name|i
control|)
block|{
name|StripeInformation
name|stripe
init|=
name|stripeIterator
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|i
operator|<
literal|2
condition|)
block|{
name|lastRowOfStripe2
operator|+=
name|stripe
operator|.
name|getNumberOfRows
argument_list|()
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|i
operator|==
literal|2
condition|)
block|{
name|offsetOfStripe2
operator|=
name|stripe
operator|.
name|getOffset
argument_list|()
expr_stmt|;
name|lastRowOfStripe2
operator|+=
name|stripe
operator|.
name|getNumberOfRows
argument_list|()
operator|-
literal|1
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|i
operator|==
literal|4
condition|)
block|{
name|offsetOfStripe4
operator|=
name|stripe
operator|.
name|getOffset
argument_list|()
expr_stmt|;
block|}
block|}
name|boolean
index|[]
name|columns
init|=
operator|new
name|boolean
index|[
name|reader
operator|.
name|getStatistics
argument_list|()
operator|.
name|length
index|]
decl_stmt|;
name|columns
index|[
literal|5
index|]
operator|=
literal|true
expr_stmt|;
comment|// long colulmn
name|columns
index|[
literal|9
index|]
operator|=
literal|true
expr_stmt|;
comment|// text column
name|rows
operator|=
name|reader
operator|.
name|rowsOptions
argument_list|(
operator|new
name|Reader
operator|.
name|Options
argument_list|()
operator|.
name|range
argument_list|(
name|offsetOfStripe2
argument_list|,
name|offsetOfStripe4
operator|-
name|offsetOfStripe2
argument_list|)
operator|.
name|include
argument_list|(
name|columns
argument_list|)
argument_list|)
expr_stmt|;
name|rows
operator|.
name|seekToRow
argument_list|(
name|lastRowOfStripe2
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|BigRow
name|expected
init|=
name|createRandomRow
argument_list|(
name|intValues
argument_list|,
name|doubleValues
argument_list|,
name|stringValues
argument_list|,
name|byteValues
argument_list|,
name|words
argument_list|,
call|(
name|int
call|)
argument_list|(
name|lastRowOfStripe2
operator|+
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|long1
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongWritable
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|4
argument_list|)
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|string1
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|8
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|rows
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testZeroCopySeek
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcFile
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|BigRow
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|200000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|65536
argument_list|)
operator|.
name|rowIndexStride
argument_list|(
literal|1000
argument_list|)
argument_list|)
decl_stmt|;
name|Random
name|rand
init|=
operator|new
name|Random
argument_list|(
literal|42
argument_list|)
decl_stmt|;
specifier|final
name|int
name|COUNT
init|=
literal|32768
decl_stmt|;
name|long
index|[]
name|intValues
init|=
operator|new
name|long
index|[
name|COUNT
index|]
decl_stmt|;
name|double
index|[]
name|doubleValues
init|=
operator|new
name|double
index|[
name|COUNT
index|]
decl_stmt|;
name|String
index|[]
name|stringValues
init|=
operator|new
name|String
index|[
name|COUNT
index|]
decl_stmt|;
name|BytesWritable
index|[]
name|byteValues
init|=
operator|new
name|BytesWritable
index|[
name|COUNT
index|]
decl_stmt|;
name|String
index|[]
name|words
init|=
operator|new
name|String
index|[
literal|128
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|words
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
name|words
index|[
name|i
index|]
operator|=
name|Integer
operator|.
name|toHexString
argument_list|(
name|rand
operator|.
name|nextInt
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|COUNT
operator|/
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|intValues
index|[
literal|2
operator|*
name|i
index|]
operator|=
name|rand
operator|.
name|nextLong
argument_list|()
expr_stmt|;
name|intValues
index|[
literal|2
operator|*
name|i
operator|+
literal|1
index|]
operator|=
name|intValues
index|[
literal|2
operator|*
name|i
index|]
expr_stmt|;
name|stringValues
index|[
literal|2
operator|*
name|i
index|]
operator|=
name|words
index|[
name|rand
operator|.
name|nextInt
argument_list|(
name|words
operator|.
name|length
argument_list|)
index|]
expr_stmt|;
name|stringValues
index|[
literal|2
operator|*
name|i
operator|+
literal|1
index|]
operator|=
name|stringValues
index|[
literal|2
operator|*
name|i
index|]
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|COUNT
condition|;
operator|++
name|i
control|)
block|{
name|doubleValues
index|[
name|i
index|]
operator|=
name|rand
operator|.
name|nextDouble
argument_list|()
expr_stmt|;
name|byte
index|[]
name|buf
init|=
operator|new
name|byte
index|[
literal|20
index|]
decl_stmt|;
name|rand
operator|.
name|nextBytes
argument_list|(
name|buf
argument_list|)
expr_stmt|;
name|byteValues
index|[
name|i
index|]
operator|=
operator|new
name|BytesWritable
argument_list|(
name|buf
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|COUNT
condition|;
operator|++
name|i
control|)
block|{
name|writer
operator|.
name|addRow
argument_list|(
name|createRandomRow
argument_list|(
name|intValues
argument_list|,
name|doubleValues
argument_list|,
name|stringValues
argument_list|,
name|byteValues
argument_list|,
name|words
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|writer
operator|=
literal|null
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|COUNT
argument_list|,
name|reader
operator|.
name|getNumberOfRows
argument_list|()
argument_list|)
expr_stmt|;
comment|/* enable zero copy record reader */
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|HiveConf
operator|.
name|setBoolVar
argument_list|(
name|conf
argument_list|,
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_ORC_ZEROCOPY
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
comment|/* all tests are identical to the other seek() tests */
name|OrcStruct
name|row
init|=
literal|null
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
name|COUNT
operator|-
literal|1
init|;
name|i
operator|>=
literal|0
condition|;
operator|--
name|i
control|)
block|{
name|rows
operator|.
name|seekToRow
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|BigRow
name|expected
init|=
name|createRandomRow
argument_list|(
name|intValues
argument_list|,
name|doubleValues
argument_list|,
name|stringValues
argument_list|,
name|byteValues
argument_list|,
name|words
argument_list|,
name|i
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|boolean1
operator|.
name|booleanValue
argument_list|()
argument_list|,
operator|(
operator|(
name|BooleanWritable
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|byte1
operator|.
name|byteValue
argument_list|()
argument_list|,
operator|(
operator|(
name|ByteWritable
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|short1
operator|.
name|shortValue
argument_list|()
argument_list|,
operator|(
operator|(
name|ShortWritable
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|2
argument_list|)
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|int1
operator|.
name|intValue
argument_list|()
argument_list|,
operator|(
operator|(
name|IntWritable
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|3
argument_list|)
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|long1
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongWritable
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|4
argument_list|)
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|float1
operator|.
name|floatValue
argument_list|()
argument_list|,
operator|(
operator|(
name|FloatWritable
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|5
argument_list|)
operator|)
operator|.
name|get
argument_list|()
argument_list|,
literal|0.0001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|double1
operator|.
name|doubleValue
argument_list|()
argument_list|,
operator|(
operator|(
name|DoubleWritable
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|6
argument_list|)
operator|)
operator|.
name|get
argument_list|()
argument_list|,
literal|0.0001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|bytes1
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|string1
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|InnerStruct
argument_list|>
name|expectedList
init|=
name|expected
operator|.
name|middle
operator|.
name|list
decl_stmt|;
name|List
argument_list|<
name|OrcStruct
argument_list|>
name|actualList
init|=
call|(
name|List
call|)
argument_list|(
operator|(
name|OrcStruct
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|9
argument_list|)
argument_list|)
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|compareList
argument_list|(
name|expectedList
argument_list|,
name|actualList
argument_list|)
expr_stmt|;
name|compareList
argument_list|(
name|expected
operator|.
name|list
argument_list|,
operator|(
name|List
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|rows
operator|.
name|close
argument_list|()
expr_stmt|;
name|Iterator
argument_list|<
name|StripeInformation
argument_list|>
name|stripeIterator
init|=
name|reader
operator|.
name|getStripes
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|long
name|offsetOfStripe2
init|=
literal|0
decl_stmt|;
name|long
name|offsetOfStripe4
init|=
literal|0
decl_stmt|;
name|long
name|lastRowOfStripe2
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
operator|++
name|i
control|)
block|{
name|StripeInformation
name|stripe
init|=
name|stripeIterator
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|i
operator|<
literal|2
condition|)
block|{
name|lastRowOfStripe2
operator|+=
name|stripe
operator|.
name|getNumberOfRows
argument_list|()
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|i
operator|==
literal|2
condition|)
block|{
name|offsetOfStripe2
operator|=
name|stripe
operator|.
name|getOffset
argument_list|()
expr_stmt|;
name|lastRowOfStripe2
operator|+=
name|stripe
operator|.
name|getNumberOfRows
argument_list|()
operator|-
literal|1
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|i
operator|==
literal|4
condition|)
block|{
name|offsetOfStripe4
operator|=
name|stripe
operator|.
name|getOffset
argument_list|()
expr_stmt|;
block|}
block|}
name|boolean
index|[]
name|columns
init|=
operator|new
name|boolean
index|[
name|reader
operator|.
name|getStatistics
argument_list|()
operator|.
name|length
index|]
decl_stmt|;
name|columns
index|[
literal|5
index|]
operator|=
literal|true
expr_stmt|;
comment|// long colulmn
name|columns
index|[
literal|9
index|]
operator|=
literal|true
expr_stmt|;
comment|// text column
comment|/* use zero copy record reader */
name|rows
operator|=
name|reader
operator|.
name|rowsOptions
argument_list|(
operator|new
name|Reader
operator|.
name|Options
argument_list|()
operator|.
name|range
argument_list|(
name|offsetOfStripe2
argument_list|,
name|offsetOfStripe4
operator|-
name|offsetOfStripe2
argument_list|)
operator|.
name|include
argument_list|(
name|columns
argument_list|)
argument_list|)
expr_stmt|;
name|rows
operator|.
name|seekToRow
argument_list|(
name|lastRowOfStripe2
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2
condition|;
operator|++
name|i
control|)
block|{
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|BigRow
name|expected
init|=
name|createRandomRow
argument_list|(
name|intValues
argument_list|,
name|doubleValues
argument_list|,
name|stringValues
argument_list|,
name|byteValues
argument_list|,
name|words
argument_list|,
call|(
name|int
call|)
argument_list|(
name|lastRowOfStripe2
operator|+
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|long1
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongWritable
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|4
argument_list|)
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
operator|.
name|string1
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|8
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|rows
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|compareInner
parameter_list|(
name|InnerStruct
name|expect
parameter_list|,
name|OrcStruct
name|actual
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|expect
operator|==
literal|null
operator|||
name|actual
operator|==
literal|null
condition|)
block|{
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|expect
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertEquals
argument_list|(
name|expect
operator|.
name|int1
argument_list|,
operator|(
operator|(
name|IntWritable
operator|)
name|actual
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expect
operator|.
name|string1
argument_list|,
name|actual
operator|.
name|getFieldValue
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|compareList
parameter_list|(
name|List
argument_list|<
name|InnerStruct
argument_list|>
name|expect
parameter_list|,
name|List
argument_list|<
name|OrcStruct
argument_list|>
name|actual
parameter_list|)
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
name|expect
operator|.
name|size
argument_list|()
argument_list|,
name|actual
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|expect
operator|.
name|size
argument_list|()
condition|;
operator|++
name|j
control|)
block|{
name|compareInner
argument_list|(
name|expect
operator|.
name|get
argument_list|(
name|j
argument_list|)
argument_list|,
name|actual
operator|.
name|get
argument_list|(
name|j
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|BigRow
name|createRandomRow
parameter_list|(
name|long
index|[]
name|intValues
parameter_list|,
name|double
index|[]
name|doubleValues
parameter_list|,
name|String
index|[]
name|stringValues
parameter_list|,
name|BytesWritable
index|[]
name|byteValues
parameter_list|,
name|String
index|[]
name|words
parameter_list|,
name|int
name|i
parameter_list|)
block|{
name|InnerStruct
name|inner
init|=
operator|new
name|InnerStruct
argument_list|(
operator|(
name|int
operator|)
name|intValues
index|[
name|i
index|]
argument_list|,
name|stringValues
index|[
name|i
index|]
argument_list|)
decl_stmt|;
name|InnerStruct
name|inner2
init|=
operator|new
name|InnerStruct
argument_list|(
call|(
name|int
call|)
argument_list|(
name|intValues
index|[
name|i
index|]
operator|>>
literal|32
argument_list|)
argument_list|,
name|words
index|[
name|i
operator|%
name|words
operator|.
name|length
index|]
operator|+
literal|"-x"
argument_list|)
decl_stmt|;
return|return
operator|new
name|BigRow
argument_list|(
operator|(
name|intValues
index|[
name|i
index|]
operator|&
literal|1
operator|)
operator|==
literal|0
argument_list|,
operator|(
name|byte
operator|)
name|intValues
index|[
name|i
index|]
argument_list|,
operator|(
name|short
operator|)
name|intValues
index|[
name|i
index|]
argument_list|,
operator|(
name|int
operator|)
name|intValues
index|[
name|i
index|]
argument_list|,
name|intValues
index|[
name|i
index|]
argument_list|,
operator|(
name|float
operator|)
name|doubleValues
index|[
name|i
index|]
argument_list|,
name|doubleValues
index|[
name|i
index|]
argument_list|,
name|byteValues
index|[
name|i
index|]
argument_list|,
name|stringValues
index|[
name|i
index|]
argument_list|,
operator|new
name|MiddleStruct
argument_list|(
name|inner
argument_list|,
name|inner2
argument_list|)
argument_list|,
name|list
argument_list|()
argument_list|,
name|map
argument_list|(
name|inner
argument_list|,
name|inner2
argument_list|)
argument_list|)
return|;
block|}
specifier|private
specifier|static
class|class
name|MyMemoryManager
extends|extends
name|MemoryManager
block|{
specifier|final
name|long
name|totalSpace
decl_stmt|;
name|double
name|rate
decl_stmt|;
name|Path
name|path
init|=
literal|null
decl_stmt|;
name|long
name|lastAllocation
init|=
literal|0
decl_stmt|;
name|int
name|rows
init|=
literal|0
decl_stmt|;
name|MemoryManager
operator|.
name|Callback
name|callback
decl_stmt|;
name|MyMemoryManager
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|long
name|totalSpace
parameter_list|,
name|double
name|rate
parameter_list|)
block|{
name|super
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|this
operator|.
name|totalSpace
operator|=
name|totalSpace
expr_stmt|;
name|this
operator|.
name|rate
operator|=
name|rate
expr_stmt|;
block|}
annotation|@
name|Override
name|void
name|addWriter
parameter_list|(
name|Path
name|path
parameter_list|,
name|long
name|requestedAllocation
parameter_list|,
name|MemoryManager
operator|.
name|Callback
name|callback
parameter_list|)
block|{
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
name|this
operator|.
name|lastAllocation
operator|=
name|requestedAllocation
expr_stmt|;
name|this
operator|.
name|callback
operator|=
name|callback
expr_stmt|;
block|}
annotation|@
name|Override
specifier|synchronized
name|void
name|removeWriter
parameter_list|(
name|Path
name|path
parameter_list|)
block|{
name|this
operator|.
name|path
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|lastAllocation
operator|=
literal|0
expr_stmt|;
block|}
annotation|@
name|Override
name|long
name|getTotalMemoryPool
parameter_list|()
block|{
return|return
name|totalSpace
return|;
block|}
annotation|@
name|Override
name|double
name|getAllocationScale
parameter_list|()
block|{
return|return
name|rate
return|;
block|}
annotation|@
name|Override
name|void
name|addedRow
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
operator|++
name|rows
operator|%
literal|100
operator|==
literal|0
condition|)
block|{
name|callback
operator|.
name|checkMemory
argument_list|(
name|rate
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMemoryManagementV11
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcFile
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|InnerStruct
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|MyMemoryManager
name|memory
init|=
operator|new
name|MyMemoryManager
argument_list|(
name|conf
argument_list|,
literal|10000
argument_list|,
literal|0.1
argument_list|)
decl_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|50000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|100
argument_list|)
operator|.
name|rowIndexStride
argument_list|(
literal|0
argument_list|)
operator|.
name|memory
argument_list|(
name|memory
argument_list|)
operator|.
name|version
argument_list|(
name|Version
operator|.
name|V_0_11
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|testFilePath
argument_list|,
name|memory
operator|.
name|path
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2500
condition|;
operator|++
name|i
control|)
block|{
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|InnerStruct
argument_list|(
name|i
operator|*
literal|300
argument_list|,
name|Integer
operator|.
name|toHexString
argument_list|(
literal|10
operator|*
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|memory
operator|.
name|path
argument_list|)
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
for|for
control|(
name|StripeInformation
name|stripe
range|:
name|reader
operator|.
name|getStripes
argument_list|()
control|)
block|{
name|i
operator|+=
literal|1
expr_stmt|;
name|assertTrue
argument_list|(
literal|"stripe "
operator|+
name|i
operator|+
literal|" is too long at "
operator|+
name|stripe
operator|.
name|getDataLength
argument_list|()
argument_list|,
name|stripe
operator|.
name|getDataLength
argument_list|()
operator|<
literal|5000
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|25
argument_list|,
name|i
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2500
argument_list|,
name|reader
operator|.
name|getNumberOfRows
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMemoryManagementV12
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcFile
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|InnerStruct
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|MyMemoryManager
name|memory
init|=
operator|new
name|MyMemoryManager
argument_list|(
name|conf
argument_list|,
literal|10000
argument_list|,
literal|0.1
argument_list|)
decl_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|50000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|100
argument_list|)
operator|.
name|rowIndexStride
argument_list|(
literal|0
argument_list|)
operator|.
name|memory
argument_list|(
name|memory
argument_list|)
operator|.
name|version
argument_list|(
name|Version
operator|.
name|V_0_12
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|testFilePath
argument_list|,
name|memory
operator|.
name|path
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|2500
condition|;
operator|++
name|i
control|)
block|{
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|InnerStruct
argument_list|(
name|i
operator|*
literal|300
argument_list|,
name|Integer
operator|.
name|toHexString
argument_list|(
literal|10
operator|*
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|memory
operator|.
name|path
argument_list|)
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
for|for
control|(
name|StripeInformation
name|stripe
range|:
name|reader
operator|.
name|getStripes
argument_list|()
control|)
block|{
name|i
operator|+=
literal|1
expr_stmt|;
name|assertTrue
argument_list|(
literal|"stripe "
operator|+
name|i
operator|+
literal|" is too long at "
operator|+
name|stripe
operator|.
name|getDataLength
argument_list|()
argument_list|,
name|stripe
operator|.
name|getDataLength
argument_list|()
operator|<
literal|5000
argument_list|)
expr_stmt|;
block|}
comment|// with HIVE-7832, the dictionaries will be disabled after writing the first
comment|// stripe as there are too many distinct values. Hence only 4 stripes as
comment|// compared to 25 stripes in version 0.11 (above test case)
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|i
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2500
argument_list|,
name|reader
operator|.
name|getNumberOfRows
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPredicatePushdown
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcFile
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|InnerStruct
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|fs
argument_list|,
name|testFilePath
argument_list|,
name|conf
argument_list|,
name|inspector
argument_list|,
literal|400000L
argument_list|,
name|CompressionKind
operator|.
name|NONE
argument_list|,
literal|500
argument_list|,
literal|1000
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3500
condition|;
operator|++
name|i
control|)
block|{
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|InnerStruct
argument_list|(
name|i
operator|*
literal|300
argument_list|,
name|Integer
operator|.
name|toHexString
argument_list|(
literal|10
operator|*
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3500
argument_list|,
name|reader
operator|.
name|getNumberOfRows
argument_list|()
argument_list|)
expr_stmt|;
name|SearchArgument
name|sarg
init|=
name|SearchArgumentFactory
operator|.
name|newBuilder
argument_list|()
operator|.
name|startAnd
argument_list|()
operator|.
name|startNot
argument_list|()
operator|.
name|lessThan
argument_list|(
literal|"int1"
argument_list|,
literal|300000
argument_list|)
operator|.
name|end
argument_list|()
operator|.
name|lessThan
argument_list|(
literal|"int1"
argument_list|,
literal|600000
argument_list|)
operator|.
name|end
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rowsOptions
argument_list|(
operator|new
name|Reader
operator|.
name|Options
argument_list|()
operator|.
name|range
argument_list|(
literal|0L
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|)
operator|.
name|include
argument_list|(
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|true
block|,
literal|true
block|}
argument_list|)
operator|.
name|searchArgument
argument_list|(
name|sarg
argument_list|,
operator|new
name|String
index|[]
block|{
literal|null
block|,
literal|"int1"
block|,
literal|"string1"
block|}
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1000L
argument_list|,
name|rows
operator|.
name|getRowNumber
argument_list|()
argument_list|)
expr_stmt|;
name|OrcStruct
name|row
init|=
literal|null
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1000
init|;
name|i
operator|<
literal|2000
condition|;
operator|++
name|i
control|)
block|{
name|assertTrue
argument_list|(
name|rows
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|300
operator|*
name|i
argument_list|,
operator|(
operator|(
name|IntWritable
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|toHexString
argument_list|(
literal|10
operator|*
name|i
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
operator|!
name|rows
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3500
argument_list|,
name|rows
operator|.
name|getRowNumber
argument_list|()
argument_list|)
expr_stmt|;
comment|// look through the file with no rows selected
name|sarg
operator|=
name|SearchArgumentFactory
operator|.
name|newBuilder
argument_list|()
operator|.
name|startAnd
argument_list|()
operator|.
name|lessThan
argument_list|(
literal|"int1"
argument_list|,
literal|0
argument_list|)
operator|.
name|end
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
name|rows
operator|=
name|reader
operator|.
name|rowsOptions
argument_list|(
operator|new
name|Reader
operator|.
name|Options
argument_list|()
operator|.
name|range
argument_list|(
literal|0L
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|)
operator|.
name|include
argument_list|(
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|true
block|,
literal|true
block|}
argument_list|)
operator|.
name|searchArgument
argument_list|(
name|sarg
argument_list|,
operator|new
name|String
index|[]
block|{
literal|null
block|,
literal|"int1"
block|,
literal|"string1"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3500L
argument_list|,
name|rows
operator|.
name|getRowNumber
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|!
name|rows
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
comment|// select first 100 and last 100 rows
name|sarg
operator|=
name|SearchArgumentFactory
operator|.
name|newBuilder
argument_list|()
operator|.
name|startOr
argument_list|()
operator|.
name|lessThan
argument_list|(
literal|"int1"
argument_list|,
literal|300
operator|*
literal|100
argument_list|)
operator|.
name|startNot
argument_list|()
operator|.
name|lessThan
argument_list|(
literal|"int1"
argument_list|,
literal|300
operator|*
literal|3400
argument_list|)
operator|.
name|end
argument_list|()
operator|.
name|end
argument_list|()
operator|.
name|build
argument_list|()
expr_stmt|;
name|rows
operator|=
name|reader
operator|.
name|rowsOptions
argument_list|(
operator|new
name|Reader
operator|.
name|Options
argument_list|()
operator|.
name|range
argument_list|(
literal|0L
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|)
operator|.
name|include
argument_list|(
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|true
block|,
literal|true
block|}
argument_list|)
operator|.
name|searchArgument
argument_list|(
name|sarg
argument_list|,
operator|new
name|String
index|[]
block|{
literal|null
block|,
literal|"int1"
block|,
literal|"string1"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|row
operator|=
literal|null
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|1000
condition|;
operator|++
name|i
control|)
block|{
name|assertTrue
argument_list|(
name|rows
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|i
argument_list|,
name|rows
operator|.
name|getRowNumber
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|300
operator|*
name|i
argument_list|,
operator|(
operator|(
name|IntWritable
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|toHexString
argument_list|(
literal|10
operator|*
name|i
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|3000
init|;
name|i
operator|<
literal|3500
condition|;
operator|++
name|i
control|)
block|{
name|assertTrue
argument_list|(
name|rows
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|i
argument_list|,
name|rows
operator|.
name|getRowNumber
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|300
operator|*
name|i
argument_list|,
operator|(
operator|(
name|IntWritable
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|toHexString
argument_list|(
literal|10
operator|*
name|i
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
operator|!
name|rows
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3500
argument_list|,
name|rows
operator|.
name|getRowNumber
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

