begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
package|;
end_package

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspectorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|StructObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|BooleanWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|IntWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestName
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_class
specifier|public
class|class
name|TestOrcNullOptimization
block|{
specifier|public
specifier|static
class|class
name|MyStruct
block|{
name|Integer
name|a
decl_stmt|;
name|String
name|b
decl_stmt|;
name|Boolean
name|c
decl_stmt|;
name|List
argument_list|<
name|InnerStruct
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<
name|InnerStruct
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|MyStruct
parameter_list|(
name|Integer
name|a
parameter_list|,
name|String
name|b
parameter_list|,
name|Boolean
name|c
parameter_list|,
name|List
argument_list|<
name|InnerStruct
argument_list|>
name|l
parameter_list|)
block|{
name|this
operator|.
name|a
operator|=
name|a
expr_stmt|;
name|this
operator|.
name|b
operator|=
name|b
expr_stmt|;
name|this
operator|.
name|c
operator|=
name|c
expr_stmt|;
name|this
operator|.
name|list
operator|=
name|l
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|InnerStruct
block|{
name|Integer
name|z
decl_stmt|;
specifier|public
name|InnerStruct
parameter_list|(
name|int
name|z
parameter_list|)
block|{
name|this
operator|.
name|z
operator|=
name|z
expr_stmt|;
block|}
block|}
name|Path
name|workDir
init|=
operator|new
name|Path
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"test.tmp.dir"
argument_list|,
literal|"target"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"test"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"tmp"
argument_list|)
argument_list|)
decl_stmt|;
name|Configuration
name|conf
decl_stmt|;
name|FileSystem
name|fs
decl_stmt|;
name|Path
name|testFilePath
decl_stmt|;
annotation|@
name|Rule
specifier|public
name|TestName
name|testCaseName
init|=
operator|new
name|TestName
argument_list|()
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|openFileSystem
parameter_list|()
throws|throws
name|Exception
block|{
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|fs
operator|=
name|FileSystem
operator|.
name|getLocal
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|testFilePath
operator|=
operator|new
name|Path
argument_list|(
name|workDir
argument_list|,
literal|"TestOrcNullOptimization."
operator|+
name|testCaseName
operator|.
name|getMethodName
argument_list|()
operator|+
literal|".orc"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|delete
argument_list|(
name|testFilePath
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMultiStripeWithNull
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcNullOptimization
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|MyStruct
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|fs
argument_list|,
name|testFilePath
argument_list|,
name|conf
argument_list|,
name|inspector
argument_list|,
literal|100000
argument_list|,
name|CompressionKind
operator|.
name|NONE
argument_list|,
literal|10000
argument_list|,
literal|10000
argument_list|)
decl_stmt|;
name|Random
name|rand
init|=
operator|new
name|Random
argument_list|(
literal|100
argument_list|)
decl_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|MyStruct
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
operator|new
name|InnerStruct
argument_list|(
literal|100
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|2
init|;
name|i
operator|<
literal|20000
condition|;
name|i
operator|++
control|)
block|{
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|MyStruct
argument_list|(
name|rand
operator|.
name|nextInt
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"a"
argument_list|,
literal|true
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
operator|new
name|InnerStruct
argument_list|(
literal|100
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|MyStruct
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
operator|new
name|InnerStruct
argument_list|(
literal|100
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|fs
argument_list|,
name|testFilePath
argument_list|)
decl_stmt|;
comment|// check the stats
name|ColumnStatistics
index|[]
name|stats
init|=
name|reader
operator|.
name|getStatistics
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|20000
argument_list|,
name|reader
operator|.
name|getNumberOfRows
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|20000
argument_list|,
name|stats
index|[
literal|0
index|]
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|1
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|1
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|1
index|]
operator|)
operator|.
name|isSumDefined
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|1
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 19998 min: 0 max: 0 sum: 0"
argument_list|,
name|stats
index|[
literal|1
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|stats
index|[
literal|2
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|stats
index|[
literal|2
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|19998
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|stats
index|[
literal|2
index|]
operator|)
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 19998 min: a max: a"
argument_list|,
name|stats
index|[
literal|2
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|// check the inspectors
name|StructObjectInspector
name|readerInspector
init|=
operator|(
name|StructObjectInspector
operator|)
name|reader
operator|.
name|getObjectInspector
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|ObjectInspector
operator|.
name|Category
operator|.
name|STRUCT
argument_list|,
name|readerInspector
operator|.
name|getCategory
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"struct<a:int,b:string,c:boolean,list:array<struct<z:int>>>"
argument_list|,
name|readerInspector
operator|.
name|getTypeName
argument_list|()
argument_list|)
expr_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Boolean
argument_list|>
name|expected
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|StripeInformation
name|sinfo
range|:
name|reader
operator|.
name|getStripes
argument_list|()
control|)
block|{
name|expected
operator|.
name|add
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
comment|// only the first and last stripe will have PRESENT stream
name|expected
operator|.
name|set
argument_list|(
literal|0
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|expected
operator|.
name|set
argument_list|(
name|expected
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Boolean
argument_list|>
name|got
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
comment|// check if the strip footer contains PRESENT stream
for|for
control|(
name|StripeInformation
name|sinfo
range|:
name|reader
operator|.
name|getStripes
argument_list|()
control|)
block|{
name|OrcProto
operator|.
name|StripeFooter
name|sf
init|=
operator|(
operator|(
name|RecordReaderImpl
operator|)
name|rows
operator|)
operator|.
name|readStripeFooter
argument_list|(
name|sinfo
argument_list|)
decl_stmt|;
name|got
operator|.
name|add
argument_list|(
name|sf
operator|.
name|toString
argument_list|()
operator|.
name|indexOf
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
operator|.
name|toString
argument_list|()
argument_list|)
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|got
argument_list|)
expr_stmt|;
comment|// row 1
name|OrcStruct
name|row
init|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|row
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|row
operator|.
name|getFieldValue
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BooleanWritable
argument_list|(
literal|true
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|IntWritable
argument_list|(
literal|100
argument_list|)
argument_list|,
operator|(
call|(
name|OrcStruct
call|)
argument_list|(
operator|(
name|ArrayList
argument_list|<
name|?
argument_list|>
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|3
argument_list|)
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|rows
operator|.
name|seekToRow
argument_list|(
literal|19998
argument_list|)
expr_stmt|;
comment|// last-1 row
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|row
operator|.
name|getFieldValue
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|IntWritable
argument_list|(
literal|0
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BooleanWritable
argument_list|(
literal|true
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|IntWritable
argument_list|(
literal|100
argument_list|)
argument_list|,
operator|(
call|(
name|OrcStruct
call|)
argument_list|(
operator|(
name|ArrayList
argument_list|<
name|?
argument_list|>
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|3
argument_list|)
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// last row
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|row
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|row
operator|.
name|getFieldValue
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BooleanWritable
argument_list|(
literal|true
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|IntWritable
argument_list|(
literal|100
argument_list|)
argument_list|,
operator|(
call|(
name|OrcStruct
call|)
argument_list|(
operator|(
name|ArrayList
argument_list|<
name|?
argument_list|>
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|3
argument_list|)
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|rows
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMultiStripeWithoutNull
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcNullOptimization
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|MyStruct
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|fs
argument_list|,
name|testFilePath
argument_list|,
name|conf
argument_list|,
name|inspector
argument_list|,
literal|100000
argument_list|,
name|CompressionKind
operator|.
name|NONE
argument_list|,
literal|10000
argument_list|,
literal|10000
argument_list|)
decl_stmt|;
name|Random
name|rand
init|=
operator|new
name|Random
argument_list|(
literal|100
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
literal|20000
condition|;
name|i
operator|++
control|)
block|{
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|MyStruct
argument_list|(
name|rand
operator|.
name|nextInt
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|"a"
argument_list|,
literal|true
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
operator|new
name|InnerStruct
argument_list|(
literal|100
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|MyStruct
argument_list|(
literal|0
argument_list|,
literal|"b"
argument_list|,
literal|true
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
operator|new
name|InnerStruct
argument_list|(
literal|100
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|fs
argument_list|,
name|testFilePath
argument_list|)
decl_stmt|;
comment|// check the stats
name|ColumnStatistics
index|[]
name|stats
init|=
name|reader
operator|.
name|getStatistics
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|20000
argument_list|,
name|reader
operator|.
name|getNumberOfRows
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|20000
argument_list|,
name|stats
index|[
literal|0
index|]
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|1
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|1
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|1
index|]
operator|)
operator|.
name|isSumDefined
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|1
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 20000 min: 0 max: 0 sum: 0"
argument_list|,
name|stats
index|[
literal|1
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|stats
index|[
literal|2
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|stats
index|[
literal|2
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|20000
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|stats
index|[
literal|2
index|]
operator|)
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 20000 min: a max: b"
argument_list|,
name|stats
index|[
literal|2
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|// check the inspectors
name|StructObjectInspector
name|readerInspector
init|=
operator|(
name|StructObjectInspector
operator|)
name|reader
operator|.
name|getObjectInspector
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|ObjectInspector
operator|.
name|Category
operator|.
name|STRUCT
argument_list|,
name|readerInspector
operator|.
name|getCategory
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"struct<a:int,b:string,c:boolean,list:array<struct<z:int>>>"
argument_list|,
name|readerInspector
operator|.
name|getTypeName
argument_list|()
argument_list|)
expr_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|(
literal|null
argument_list|)
decl_stmt|;
comment|// none of the stripes will have PRESENT stream
name|List
argument_list|<
name|Boolean
argument_list|>
name|expected
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|StripeInformation
name|sinfo
range|:
name|reader
operator|.
name|getStripes
argument_list|()
control|)
block|{
name|expected
operator|.
name|add
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|Boolean
argument_list|>
name|got
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
comment|// check if the strip footer contains PRESENT stream
for|for
control|(
name|StripeInformation
name|sinfo
range|:
name|reader
operator|.
name|getStripes
argument_list|()
control|)
block|{
name|OrcProto
operator|.
name|StripeFooter
name|sf
init|=
operator|(
operator|(
name|RecordReaderImpl
operator|)
name|rows
operator|)
operator|.
name|readStripeFooter
argument_list|(
name|sinfo
argument_list|)
decl_stmt|;
name|got
operator|.
name|add
argument_list|(
name|sf
operator|.
name|toString
argument_list|()
operator|.
name|indexOf
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
operator|.
name|toString
argument_list|()
argument_list|)
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|got
argument_list|)
expr_stmt|;
name|rows
operator|.
name|seekToRow
argument_list|(
literal|19998
argument_list|)
expr_stmt|;
comment|// last-1 row
name|OrcStruct
name|row
init|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|row
operator|.
name|getFieldValue
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|IntWritable
argument_list|(
literal|0
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BooleanWritable
argument_list|(
literal|true
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|IntWritable
argument_list|(
literal|100
argument_list|)
argument_list|,
operator|(
call|(
name|OrcStruct
call|)
argument_list|(
operator|(
name|ArrayList
argument_list|<
name|?
argument_list|>
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|3
argument_list|)
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// last row
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|row
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|row
operator|.
name|getFieldValue
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BooleanWritable
argument_list|(
literal|true
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|IntWritable
argument_list|(
literal|100
argument_list|)
argument_list|,
operator|(
call|(
name|OrcStruct
call|)
argument_list|(
operator|(
name|ArrayList
argument_list|<
name|?
argument_list|>
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|3
argument_list|)
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|rows
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testColumnsWithNullAndCompression
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcNullOptimization
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|MyStruct
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|fs
argument_list|,
name|testFilePath
argument_list|,
name|conf
argument_list|,
name|inspector
argument_list|,
literal|100000
argument_list|,
name|CompressionKind
operator|.
name|ZLIB
argument_list|,
literal|10000
argument_list|,
literal|10000
argument_list|)
decl_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|MyStruct
argument_list|(
literal|3
argument_list|,
literal|"a"
argument_list|,
literal|true
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
operator|new
name|InnerStruct
argument_list|(
literal|100
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|MyStruct
argument_list|(
literal|null
argument_list|,
literal|"b"
argument_list|,
literal|true
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
operator|new
name|InnerStruct
argument_list|(
literal|100
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|MyStruct
argument_list|(
literal|3
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
operator|new
name|InnerStruct
argument_list|(
literal|100
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|MyStruct
argument_list|(
literal|3
argument_list|,
literal|"d"
argument_list|,
literal|true
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
operator|new
name|InnerStruct
argument_list|(
literal|100
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|MyStruct
argument_list|(
literal|2
argument_list|,
literal|"e"
argument_list|,
literal|true
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
operator|new
name|InnerStruct
argument_list|(
literal|100
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|MyStruct
argument_list|(
literal|2
argument_list|,
literal|"f"
argument_list|,
literal|true
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
operator|new
name|InnerStruct
argument_list|(
literal|100
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|MyStruct
argument_list|(
literal|2
argument_list|,
literal|"g"
argument_list|,
literal|true
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
operator|new
name|InnerStruct
argument_list|(
literal|100
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|MyStruct
argument_list|(
literal|2
argument_list|,
literal|"h"
argument_list|,
literal|true
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
operator|new
name|InnerStruct
argument_list|(
literal|100
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|fs
argument_list|,
name|testFilePath
argument_list|)
decl_stmt|;
comment|// check the stats
name|ColumnStatistics
index|[]
name|stats
init|=
name|reader
operator|.
name|getStatistics
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|8
argument_list|,
name|reader
operator|.
name|getNumberOfRows
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|8
argument_list|,
name|stats
index|[
literal|0
index|]
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|1
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|1
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|1
index|]
operator|)
operator|.
name|isSumDefined
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|17
argument_list|,
operator|(
operator|(
name|IntegerColumnStatistics
operator|)
name|stats
index|[
literal|1
index|]
operator|)
operator|.
name|getSum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 7 min: 2 max: 3 sum: 17"
argument_list|,
name|stats
index|[
literal|1
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"h"
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|stats
index|[
literal|2
index|]
operator|)
operator|.
name|getMaximum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|stats
index|[
literal|2
index|]
operator|)
operator|.
name|getMinimum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
operator|(
operator|(
name|StringColumnStatistics
operator|)
name|stats
index|[
literal|2
index|]
operator|)
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count: 7 min: a max: h"
argument_list|,
name|stats
index|[
literal|2
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|// check the inspectors
name|StructObjectInspector
name|readerInspector
init|=
operator|(
name|StructObjectInspector
operator|)
name|reader
operator|.
name|getObjectInspector
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|ObjectInspector
operator|.
name|Category
operator|.
name|STRUCT
argument_list|,
name|readerInspector
operator|.
name|getCategory
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"struct<a:int,b:string,c:boolean,list:array<struct<z:int>>>"
argument_list|,
name|readerInspector
operator|.
name|getTypeName
argument_list|()
argument_list|)
expr_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|(
literal|null
argument_list|)
decl_stmt|;
comment|// only the last strip will have PRESENT stream
name|List
argument_list|<
name|Boolean
argument_list|>
name|expected
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|StripeInformation
name|sinfo
range|:
name|reader
operator|.
name|getStripes
argument_list|()
control|)
block|{
name|expected
operator|.
name|add
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
name|expected
operator|.
name|set
argument_list|(
name|expected
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Boolean
argument_list|>
name|got
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
comment|// check if the strip footer contains PRESENT stream
for|for
control|(
name|StripeInformation
name|sinfo
range|:
name|reader
operator|.
name|getStripes
argument_list|()
control|)
block|{
name|OrcProto
operator|.
name|StripeFooter
name|sf
init|=
operator|(
operator|(
name|RecordReaderImpl
operator|)
name|rows
operator|)
operator|.
name|readStripeFooter
argument_list|(
name|sinfo
argument_list|)
decl_stmt|;
name|got
operator|.
name|add
argument_list|(
name|sf
operator|.
name|toString
argument_list|()
operator|.
name|indexOf
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
operator|.
name|toString
argument_list|()
argument_list|)
operator|!=
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|got
argument_list|)
expr_stmt|;
comment|// row 1
name|OrcStruct
name|row
init|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|IntWritable
argument_list|(
literal|3
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BooleanWritable
argument_list|(
literal|true
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|IntWritable
argument_list|(
literal|100
argument_list|)
argument_list|,
operator|(
call|(
name|OrcStruct
call|)
argument_list|(
operator|(
name|ArrayList
argument_list|<
name|?
argument_list|>
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|3
argument_list|)
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// row 2
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|row
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|1
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BooleanWritable
argument_list|(
literal|true
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|IntWritable
argument_list|(
literal|100
argument_list|)
argument_list|,
operator|(
call|(
name|OrcStruct
call|)
argument_list|(
operator|(
name|ArrayList
argument_list|<
name|?
argument_list|>
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|3
argument_list|)
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// row 3
name|row
operator|=
operator|(
name|OrcStruct
operator|)
name|rows
operator|.
name|next
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|row
operator|.
name|getFieldValue
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|IntWritable
argument_list|(
literal|3
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|BooleanWritable
argument_list|(
literal|false
argument_list|)
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|IntWritable
argument_list|(
literal|100
argument_list|)
argument_list|,
operator|(
call|(
name|OrcStruct
call|)
argument_list|(
operator|(
name|ArrayList
argument_list|<
name|?
argument_list|>
operator|)
name|row
operator|.
name|getFieldValue
argument_list|(
literal|3
argument_list|)
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|rows
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

