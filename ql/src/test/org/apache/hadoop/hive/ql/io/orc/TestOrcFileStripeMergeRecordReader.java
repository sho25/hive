begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2015 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspectorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|FileSplit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestName
import|;
end_import

begin_class
specifier|public
class|class
name|TestOrcFileStripeMergeRecordReader
block|{
specifier|private
specifier|final
name|int
name|DEFAULT_STRIPE_SIZE
init|=
literal|5000
decl_stmt|;
specifier|private
name|OrcFileKeyWrapper
name|key
decl_stmt|;
specifier|private
name|OrcFileValueWrapper
name|value
decl_stmt|;
specifier|private
name|Path
name|tmpPath
decl_stmt|;
specifier|private
name|Configuration
name|conf
decl_stmt|;
specifier|private
name|FileSystem
name|fs
decl_stmt|;
annotation|@
name|Rule
specifier|public
name|TestName
name|testCaseName
init|=
operator|new
name|TestName
argument_list|()
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|IOException
block|{
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|fs
operator|=
name|FileSystem
operator|.
name|getLocal
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|key
operator|=
operator|new
name|OrcFileKeyWrapper
argument_list|()
expr_stmt|;
name|value
operator|=
operator|new
name|OrcFileValueWrapper
argument_list|()
expr_stmt|;
name|tmpPath
operator|=
name|prepareTmpPath
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSplitStartsWithOffset
parameter_list|()
throws|throws
name|IOException
block|{
name|createOrcFile
argument_list|(
name|DEFAULT_STRIPE_SIZE
argument_list|,
name|DEFAULT_STRIPE_SIZE
operator|+
literal|1
argument_list|)
expr_stmt|;
name|FileStatus
name|fileStatus
init|=
name|fs
operator|.
name|getFileStatus
argument_list|(
name|tmpPath
argument_list|)
decl_stmt|;
name|long
name|length
init|=
name|fileStatus
operator|.
name|getLen
argument_list|()
decl_stmt|;
name|long
name|offset
init|=
name|length
operator|/
literal|2
decl_stmt|;
name|FileSplit
name|split
init|=
operator|new
name|FileSplit
argument_list|(
name|tmpPath
argument_list|,
name|offset
argument_list|,
name|length
argument_list|,
operator|(
name|String
index|[]
operator|)
literal|null
argument_list|)
decl_stmt|;
name|OrcFileStripeMergeRecordReader
name|reader
init|=
operator|new
name|OrcFileStripeMergeRecordReader
argument_list|(
name|conf
argument_list|,
name|split
argument_list|)
decl_stmt|;
name|reader
operator|.
name|next
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"InputPath"
argument_list|,
name|tmpPath
argument_list|,
name|key
operator|.
name|getInputPath
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"NumberOfValues"
argument_list|,
literal|1L
argument_list|,
name|value
operator|.
name|getStripeStatistics
argument_list|()
operator|.
name|getColStats
argument_list|(
literal|0
argument_list|)
operator|.
name|getNumberOfValues
argument_list|()
argument_list|)
expr_stmt|;
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|createOrcFile
parameter_list|(
name|int
name|stripSize
parameter_list|,
name|int
name|numberOfRows
parameter_list|)
throws|throws
name|IOException
block|{
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcFileStripeMergeRecordReader
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|StringIntIntIntRow
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|tmpPath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|stripeSize
argument_list|(
name|stripSize
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|ZLIB
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|5000
argument_list|)
operator|.
name|rowIndexStride
argument_list|(
literal|1000
argument_list|)
argument_list|)
decl_stmt|;
name|Random
name|rand
init|=
operator|new
name|Random
argument_list|(
literal|157
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numberOfRows
condition|;
name|i
operator|++
control|)
block|{
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|StringIntIntIntRow
argument_list|(
name|Integer
operator|.
name|toBinaryString
argument_list|(
name|i
argument_list|)
argument_list|,
name|rand
operator|.
name|nextInt
argument_list|()
argument_list|,
name|rand
operator|.
name|nextInt
argument_list|()
argument_list|,
name|rand
operator|.
name|nextInt
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Path
name|prepareTmpPath
parameter_list|()
throws|throws
name|IOException
block|{
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"test.tmp.dir"
argument_list|,
literal|"target"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"test"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"tmp"
argument_list|)
operator|+
name|File
operator|.
name|separator
operator|+
literal|"TestOrcFile."
operator|+
name|testCaseName
operator|.
name|getMethodName
argument_list|()
operator|+
literal|".orc"
argument_list|)
decl_stmt|;
name|fs
operator|.
name|delete
argument_list|(
name|path
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return
name|path
return|;
block|}
specifier|public
specifier|static
class|class
name|StringIntIntIntRow
block|{
name|Text
name|string1
init|=
operator|new
name|Text
argument_list|()
decl_stmt|;
name|int
name|int1
decl_stmt|;
name|int
name|int2
decl_stmt|;
name|int
name|int3
decl_stmt|;
name|StringIntIntIntRow
parameter_list|(
name|String
name|string1
parameter_list|,
name|int
name|int1
parameter_list|,
name|int
name|int2
parameter_list|,
name|int
name|int3
parameter_list|)
block|{
name|this
operator|.
name|string1
operator|.
name|set
argument_list|(
name|string1
argument_list|)
expr_stmt|;
name|this
operator|.
name|int1
operator|=
name|int1
expr_stmt|;
name|this
operator|.
name|int2
operator|=
name|int2
expr_stmt|;
name|this
operator|.
name|int3
operator|=
name|int3
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

