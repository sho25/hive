begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|stats
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doReturn
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|StatsSetupConst
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
operator|.
name|ConfVars
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Partition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|Statistics
operator|.
name|State
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|stats
operator|.
name|BasicStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_class
specifier|public
class|class
name|TestBasicStats
block|{
specifier|public
specifier|static
class|class
name|LocalPartishBuilder
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
specifier|public
name|LocalPartishBuilder
name|numRows
parameter_list|(
name|int
name|i
parameter_list|)
block|{
name|params
operator|.
name|put
argument_list|(
name|StatsSetupConst
operator|.
name|ROW_COUNT
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|LocalPartishBuilder
name|rawDataSize
parameter_list|(
name|int
name|i
parameter_list|)
block|{
name|params
operator|.
name|put
argument_list|(
name|StatsSetupConst
operator|.
name|RAW_DATA_SIZE
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|LocalPartishBuilder
name|totalSize
parameter_list|(
name|int
name|i
parameter_list|)
block|{
name|params
operator|.
name|put
argument_list|(
name|StatsSetupConst
operator|.
name|TOTAL_SIZE
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Partish
name|buildPartition
parameter_list|()
block|{
name|Partition
name|partition
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Partition
operator|.
name|class
argument_list|)
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Partition
name|tpartition
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Partition
operator|.
name|class
argument_list|)
decl_stmt|;
name|doReturn
argument_list|(
name|tpartition
argument_list|)
operator|.
name|when
argument_list|(
name|partition
argument_list|)
operator|.
name|getTPartition
argument_list|()
expr_stmt|;
name|doReturn
argument_list|(
name|params
argument_list|)
operator|.
name|when
argument_list|(
name|tpartition
argument_list|)
operator|.
name|getParameters
argument_list|()
expr_stmt|;
return|return
name|Partish
operator|.
name|buildFor
argument_list|(
literal|null
argument_list|,
name|partition
argument_list|)
return|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDataSizeEstimator
parameter_list|()
block|{
name|Partish
name|p1
init|=
operator|new
name|LocalPartishBuilder
argument_list|()
operator|.
name|totalSize
argument_list|(
literal|10
argument_list|)
operator|.
name|buildPartition
argument_list|()
decl_stmt|;
name|HiveConf
name|conf
init|=
operator|new
name|HiveConf
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setFloatVar
argument_list|(
name|ConfVars
operator|.
name|HIVE_STATS_DESERIALIZATION_FACTOR
argument_list|,
literal|13.0f
argument_list|)
expr_stmt|;
name|BasicStats
operator|.
name|Factory
name|factory
init|=
operator|new
name|BasicStats
operator|.
name|Factory
argument_list|(
operator|new
name|BasicStats
operator|.
name|DataSizeEstimator
argument_list|(
name|conf
argument_list|)
argument_list|)
decl_stmt|;
name|BasicStats
name|res
init|=
name|factory
operator|.
name|build
argument_list|(
name|p1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|130
argument_list|,
name|res
operator|.
name|getDataSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|mergeWithEmpty
parameter_list|()
block|{
name|HiveConf
name|conf
init|=
operator|new
name|HiveConf
argument_list|()
decl_stmt|;
name|int
name|avgRowSize
init|=
literal|100
decl_stmt|;
name|int
name|r0
init|=
literal|13
decl_stmt|;
name|int
name|r1
init|=
literal|15
decl_stmt|;
name|int
name|deserFactor
init|=
operator|(
name|int
operator|)
name|conf
operator|.
name|getFloatVar
argument_list|(
name|ConfVars
operator|.
name|HIVE_STATS_DESERIALIZATION_FACTOR
argument_list|)
decl_stmt|;
name|Partish
name|p0
init|=
operator|new
name|LocalPartishBuilder
argument_list|()
operator|.
name|numRows
argument_list|(
name|r0
argument_list|)
operator|.
name|rawDataSize
argument_list|(
name|avgRowSize
operator|*
name|r0
argument_list|)
operator|.
name|buildPartition
argument_list|()
decl_stmt|;
name|Partish
name|p1
init|=
operator|new
name|LocalPartishBuilder
argument_list|()
operator|.
name|totalSize
argument_list|(
name|r1
operator|*
name|avgRowSize
operator|/
name|deserFactor
argument_list|)
operator|.
name|buildPartition
argument_list|()
decl_stmt|;
name|BasicStats
operator|.
name|Factory
name|factory
init|=
operator|new
name|BasicStats
operator|.
name|Factory
argument_list|(
operator|new
name|BasicStats
operator|.
name|DataSizeEstimator
argument_list|(
name|conf
argument_list|)
argument_list|,
operator|new
name|BasicStats
operator|.
name|RowNumEstimator
argument_list|(
name|avgRowSize
argument_list|)
argument_list|)
decl_stmt|;
name|BasicStats
name|bs0
init|=
name|factory
operator|.
name|build
argument_list|(
name|p0
argument_list|)
decl_stmt|;
name|BasicStats
name|bs1
init|=
name|factory
operator|.
name|build
argument_list|(
name|p1
argument_list|)
decl_stmt|;
name|BasicStats
name|res
init|=
name|BasicStats
operator|.
name|buildFrom
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
name|bs0
argument_list|,
name|bs1
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|r0
operator|+
name|r1
argument_list|,
name|res
operator|.
name|getNumRows
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|avgRowSize
operator|*
operator|(
name|r0
operator|+
name|r1
operator|)
argument_list|,
name|res
operator|.
name|getDataSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|Ignore
argument_list|(
literal|"HIVE-18062 will fix this"
argument_list|)
specifier|public
name|void
name|mergedKeepsPartialStateEvenIfValuesAreSuccessfullyEstimated
parameter_list|()
block|{
name|Partish
name|p0
init|=
operator|new
name|LocalPartishBuilder
argument_list|()
operator|.
name|numRows
argument_list|(
literal|10
argument_list|)
operator|.
name|rawDataSize
argument_list|(
literal|100
argument_list|)
operator|.
name|buildPartition
argument_list|()
decl_stmt|;
name|Partish
name|p1
init|=
operator|new
name|LocalPartishBuilder
argument_list|()
operator|.
name|totalSize
argument_list|(
literal|10
argument_list|)
operator|.
name|buildPartition
argument_list|()
decl_stmt|;
name|HiveConf
name|conf
init|=
operator|new
name|HiveConf
argument_list|()
decl_stmt|;
name|BasicStats
operator|.
name|Factory
name|factory
init|=
operator|new
name|BasicStats
operator|.
name|Factory
argument_list|(
operator|new
name|BasicStats
operator|.
name|DataSizeEstimator
argument_list|(
name|conf
argument_list|)
argument_list|,
operator|new
name|BasicStats
operator|.
name|RowNumEstimator
argument_list|(
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|BasicStats
name|bs0
init|=
name|factory
operator|.
name|build
argument_list|(
name|p0
argument_list|)
decl_stmt|;
name|BasicStats
name|bs1
init|=
name|factory
operator|.
name|build
argument_list|(
name|p1
argument_list|)
decl_stmt|;
name|BasicStats
name|res
init|=
name|BasicStats
operator|.
name|buildFrom
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
name|bs0
argument_list|,
name|bs1
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|State
operator|.
name|PARTIAL
argument_list|,
name|res
operator|.
name|getState
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

