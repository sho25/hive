begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|filter
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_comment
comment|/**  * Test creation and manipulation of MutableFilterContext and FilterContext.  */
end_comment

begin_class
specifier|public
class|class
name|TestFilterContext
block|{
specifier|private
name|int
index|[]
name|makeValidSelected
parameter_list|()
block|{
name|int
index|[]
name|selected
init|=
operator|new
name|int
index|[
literal|512
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|selected
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|selected
index|[
name|i
index|]
operator|=
name|i
operator|*
literal|2
expr_stmt|;
block|}
return|return
name|selected
return|;
block|}
specifier|private
name|int
index|[]
name|makeInvalidSelected
parameter_list|()
block|{
name|int
index|[]
name|selected
init|=
operator|new
name|int
index|[
literal|512
index|]
decl_stmt|;
name|Arrays
operator|.
name|fill
argument_list|(
name|selected
argument_list|,
literal|1
argument_list|)
expr_stmt|;
return|return
name|selected
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInitFilterContext
parameter_list|()
block|{
name|MutableFilterContext
name|mutableFilterContext
init|=
operator|new
name|MutableFilterContext
argument_list|()
decl_stmt|;
name|int
index|[]
name|selected
init|=
name|makeValidSelected
argument_list|()
decl_stmt|;
name|mutableFilterContext
operator|.
name|setFilterContext
argument_list|(
literal|true
argument_list|,
name|selected
argument_list|,
name|selected
operator|.
name|length
argument_list|)
expr_stmt|;
name|FilterContext
name|filterContext
init|=
name|mutableFilterContext
operator|.
name|immutable
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|filterContext
operator|.
name|isSelectedInUse
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|512
argument_list|,
name|filterContext
operator|.
name|getSelectedSize
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|512
argument_list|,
name|filterContext
operator|.
name|getSelected
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testResetFilterContext
parameter_list|()
block|{
name|MutableFilterContext
name|mutableFilterContext
init|=
operator|new
name|MutableFilterContext
argument_list|()
decl_stmt|;
name|int
index|[]
name|selected
init|=
name|makeValidSelected
argument_list|()
decl_stmt|;
name|mutableFilterContext
operator|.
name|setFilterContext
argument_list|(
literal|true
argument_list|,
name|selected
argument_list|,
name|selected
operator|.
name|length
argument_list|)
expr_stmt|;
name|FilterContext
name|filterContext
init|=
name|mutableFilterContext
operator|.
name|immutable
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|filterContext
operator|.
name|isSelectedInUse
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|512
argument_list|,
name|filterContext
operator|.
name|getSelectedSize
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|512
argument_list|,
name|filterContext
operator|.
name|getSelected
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|filterContext
operator|.
name|resetFilterContext
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|filterContext
operator|.
name|isSelectedInUse
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|filterContext
operator|.
name|getSelectedSize
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|filterContext
operator|.
name|getSelected
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AssertionError
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testInitInvalidFilterContext
parameter_list|()
block|{
name|MutableFilterContext
name|mutableFilterContext
init|=
operator|new
name|MutableFilterContext
argument_list|()
decl_stmt|;
name|int
index|[]
name|selected
init|=
name|makeInvalidSelected
argument_list|()
decl_stmt|;
name|mutableFilterContext
operator|.
name|setFilterContext
argument_list|(
literal|true
argument_list|,
name|selected
argument_list|,
name|selected
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCopyFilterContext
parameter_list|()
block|{
name|MutableFilterContext
name|mutableFilterContext
init|=
operator|new
name|MutableFilterContext
argument_list|()
decl_stmt|;
name|int
index|[]
name|selected
init|=
name|makeValidSelected
argument_list|()
decl_stmt|;
name|mutableFilterContext
operator|.
name|setFilterContext
argument_list|(
literal|true
argument_list|,
name|selected
argument_list|,
name|selected
operator|.
name|length
argument_list|)
expr_stmt|;
name|MutableFilterContext
name|mutableFilterContextToCopy
init|=
operator|new
name|MutableFilterContext
argument_list|()
decl_stmt|;
name|mutableFilterContextToCopy
operator|.
name|setFilterContext
argument_list|(
literal|true
argument_list|,
operator|new
name|int
index|[]
block|{
literal|100
block|}
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|mutableFilterContext
operator|.
name|copyFilterContextFrom
argument_list|(
name|mutableFilterContextToCopy
argument_list|)
expr_stmt|;
name|FilterContext
name|filterContext
init|=
name|mutableFilterContext
operator|.
name|immutable
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|filterContext
operator|.
name|isSelectedInUse
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|filterContext
operator|.
name|getSelectedSize
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|100
argument_list|,
name|filterContext
operator|.
name|getSelected
argument_list|()
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
comment|// make sure we kept the remaining array space
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|512
argument_list|,
name|filterContext
operator|.
name|getSelected
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBorrowSelected
parameter_list|()
block|{
name|MutableFilterContext
name|mutableFilterContext
init|=
operator|new
name|MutableFilterContext
argument_list|()
decl_stmt|;
name|mutableFilterContext
operator|.
name|setFilterContext
argument_list|(
literal|true
argument_list|,
operator|new
name|int
index|[]
block|{
literal|100
block|,
literal|200
block|}
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|int
index|[]
name|borrowedSelected
init|=
name|mutableFilterContext
operator|.
name|borrowSelected
argument_list|(
literal|1
argument_list|)
decl_stmt|;
comment|// make sure we borrowed the existing array
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|borrowedSelected
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|100
argument_list|,
name|borrowedSelected
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|200
argument_list|,
name|borrowedSelected
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|borrowedSelected
operator|=
name|mutableFilterContext
operator|.
name|borrowSelected
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|borrowedSelected
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|borrowedSelected
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|borrowedSelected
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|borrowedSelected
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

