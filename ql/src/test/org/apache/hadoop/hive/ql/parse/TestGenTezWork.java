begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertSame
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|CompilationOpContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|FileSinkOperator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|Operator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|ReduceSinkOperator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|TableScanOperator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|Task
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|BaseWork
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|FileSinkDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|MapWork
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|OperatorDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|ReduceSinkDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|ReduceWork
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|TableDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|TableScanDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|TezWork
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|session
operator|.
name|SessionState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Tests for GenTezWork.  *  */
end_comment

begin_class
specifier|public
class|class
name|TestGenTezWork
block|{
name|GenTezProcContext
name|ctx
decl_stmt|;
name|GenTezWork
name|proc
decl_stmt|;
name|ReduceSinkOperator
name|rs
decl_stmt|;
name|FileSinkOperator
name|fs
decl_stmt|;
name|TableScanOperator
name|ts
decl_stmt|;
comment|/**    * @throws java.lang.Exception    */
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Init conf
specifier|final
name|HiveConf
name|conf
init|=
operator|new
name|HiveConf
argument_list|(
name|SemanticAnalyzer
operator|.
name|class
argument_list|)
decl_stmt|;
name|SessionState
operator|.
name|start
argument_list|(
name|conf
argument_list|)
expr_stmt|;
comment|// Init parse context
specifier|final
name|ParseContext
name|pctx
init|=
operator|new
name|ParseContext
argument_list|()
decl_stmt|;
name|pctx
operator|.
name|setContext
argument_list|(
operator|new
name|Context
argument_list|(
name|conf
argument_list|)
argument_list|)
expr_stmt|;
name|ctx
operator|=
operator|new
name|GenTezProcContext
argument_list|(
name|conf
argument_list|,
name|pctx
argument_list|,
name|Collections
operator|.
name|EMPTY_LIST
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|Task
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|()
operator|,
name|Collections
operator|.
name|EMPTY_SET
operator|,
name|Collections
operator|.
name|EMPTY_SET
argument_list|)
expr_stmt|;
name|proc
operator|=
operator|new
name|GenTezWork
argument_list|(
operator|new
name|GenTezUtils
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|void
name|setupMapWork
parameter_list|(
name|MapWork
name|mapWork
parameter_list|,
name|GenTezProcContext
name|context
parameter_list|,
name|PrunedPartitionList
name|partitions
parameter_list|,
name|TableScanOperator
name|root
parameter_list|,
name|String
name|alias
parameter_list|)
throws|throws
name|SemanticException
block|{
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
name|map
init|=
operator|new
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|Operator
argument_list|<
name|?
extends|extends
name|OperatorDesc
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
literal|"foo"
argument_list|,
name|root
argument_list|)
expr_stmt|;
name|mapWork
operator|.
name|setAliasToWork
argument_list|(
name|map
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
argument_list|)
expr_stmt|;
name|CompilationOpContext
name|cCtx
init|=
operator|new
name|CompilationOpContext
argument_list|()
decl_stmt|;
name|fs
operator|=
operator|new
name|FileSinkOperator
argument_list|(
name|cCtx
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setConf
argument_list|(
operator|new
name|FileSinkDesc
argument_list|()
argument_list|)
expr_stmt|;
name|rs
operator|=
operator|new
name|ReduceSinkOperator
argument_list|(
name|cCtx
argument_list|)
expr_stmt|;
name|rs
operator|.
name|setConf
argument_list|(
operator|new
name|ReduceSinkDesc
argument_list|()
argument_list|)
expr_stmt|;
name|TableDesc
name|tableDesc
init|=
operator|new
name|TableDesc
argument_list|()
decl_stmt|;
name|tableDesc
operator|.
name|setProperties
argument_list|(
operator|new
name|Properties
argument_list|()
argument_list|)
expr_stmt|;
name|rs
operator|.
name|getConf
argument_list|()
operator|.
name|setKeySerializeInfo
argument_list|(
name|tableDesc
argument_list|)
expr_stmt|;
name|ts
operator|=
operator|new
name|TableScanOperator
argument_list|(
name|cCtx
argument_list|)
expr_stmt|;
name|ts
operator|.
name|setConf
argument_list|(
operator|new
name|TableScanDesc
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|ts
operator|.
name|getChildOperators
argument_list|()
operator|.
name|add
argument_list|(
name|rs
argument_list|)
expr_stmt|;
name|rs
operator|.
name|getParentOperators
argument_list|()
operator|.
name|add
argument_list|(
name|ts
argument_list|)
expr_stmt|;
name|rs
operator|.
name|getChildOperators
argument_list|()
operator|.
name|add
argument_list|(
name|fs
argument_list|)
expr_stmt|;
name|fs
operator|.
name|getParentOperators
argument_list|()
operator|.
name|add
argument_list|(
name|rs
argument_list|)
expr_stmt|;
name|ctx
operator|.
name|preceedingWork
operator|=
literal|null
expr_stmt|;
name|ctx
operator|.
name|currentRootOperator
operator|=
name|ts
expr_stmt|;
block|}
comment|/**    * @throws java.lang.Exception    */
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|ctx
operator|=
literal|null
expr_stmt|;
name|proc
operator|=
literal|null
expr_stmt|;
name|ts
operator|=
literal|null
expr_stmt|;
name|rs
operator|=
literal|null
expr_stmt|;
name|fs
operator|=
literal|null
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateMap
parameter_list|()
throws|throws
name|SemanticException
block|{
name|proc
operator|.
name|process
argument_list|(
name|rs
argument_list|,
literal|null
argument_list|,
name|ctx
argument_list|,
operator|(
name|Object
index|[]
operator|)
literal|null
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ctx
operator|.
name|currentTask
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ctx
operator|.
name|rootTasks
operator|.
name|contains
argument_list|(
name|ctx
operator|.
name|currentTask
argument_list|)
argument_list|)
expr_stmt|;
name|TezWork
name|work
init|=
name|ctx
operator|.
name|currentTask
operator|.
name|getWork
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|work
operator|.
name|getAllWork
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|BaseWork
name|w
init|=
name|work
operator|.
name|getAllWork
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|w
operator|instanceof
name|MapWork
argument_list|)
expr_stmt|;
name|MapWork
name|mw
init|=
operator|(
name|MapWork
operator|)
name|w
decl_stmt|;
comment|// need to make sure names are set for tez to connect things right
name|assertNotNull
argument_list|(
name|w
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|// map work should start with our ts op
name|assertSame
argument_list|(
name|mw
operator|.
name|getAliasToWork
argument_list|()
operator|.
name|entrySet
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|,
name|ts
argument_list|)
expr_stmt|;
comment|// preceeding work must be set to the newly generated map
name|assertSame
argument_list|(
name|ctx
operator|.
name|preceedingWork
argument_list|,
name|mw
argument_list|)
expr_stmt|;
comment|// should have a new root now
name|assertSame
argument_list|(
name|ctx
operator|.
name|currentRootOperator
argument_list|,
name|fs
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateReduce
parameter_list|()
throws|throws
name|SemanticException
block|{
comment|// create map
name|proc
operator|.
name|process
argument_list|(
name|rs
argument_list|,
literal|null
argument_list|,
name|ctx
argument_list|,
operator|(
name|Object
index|[]
operator|)
literal|null
argument_list|)
expr_stmt|;
comment|// create reduce
name|proc
operator|.
name|process
argument_list|(
name|fs
argument_list|,
literal|null
argument_list|,
name|ctx
argument_list|,
operator|(
name|Object
index|[]
operator|)
literal|null
argument_list|)
expr_stmt|;
name|TezWork
name|work
init|=
name|ctx
operator|.
name|currentTask
operator|.
name|getWork
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|work
operator|.
name|getAllWork
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|BaseWork
name|w
init|=
name|work
operator|.
name|getAllWork
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|w
operator|instanceof
name|ReduceWork
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|work
operator|.
name|getParents
argument_list|(
name|w
argument_list|)
operator|.
name|contains
argument_list|(
name|work
operator|.
name|getAllWork
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|ReduceWork
name|rw
init|=
operator|(
name|ReduceWork
operator|)
name|w
decl_stmt|;
comment|// need to make sure names are set for tez to connect things right
name|assertNotNull
argument_list|(
name|w
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|// map work should start with our ts op
name|assertSame
argument_list|(
name|rw
operator|.
name|getReducer
argument_list|()
argument_list|,
name|fs
argument_list|)
expr_stmt|;
comment|// should have severed the ties
name|assertEquals
argument_list|(
name|fs
operator|.
name|getParentOperators
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

