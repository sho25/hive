begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|util
operator|.
name|collectoroperator
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|util
operator|.
name|rowobjects
operator|.
name|RowTestObjects
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|HiveException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|PrimitiveObjectInspector
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|RowCollectorTestOperator
extends|extends
name|RowCollectorTestOperatorBase
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
specifier|final
name|ObjectInspector
index|[]
name|outputObjectInspectors
decl_stmt|;
specifier|public
name|RowCollectorTestOperator
parameter_list|(
name|ObjectInspector
index|[]
name|outputObjectInspectors
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|outputObjectInspectors
operator|=
name|outputObjectInspectors
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|Object
name|row
parameter_list|,
name|int
name|tag
parameter_list|)
throws|throws
name|HiveException
block|{
name|rowCount
operator|++
expr_stmt|;
name|Object
index|[]
name|rowObjectArray
init|=
operator|(
name|Object
index|[]
operator|)
name|row
decl_stmt|;
name|Object
index|[]
name|resultObjectArray
init|=
operator|new
name|Object
index|[
name|rowObjectArray
operator|.
name|length
index|]
decl_stmt|;
for|for
control|(
name|int
name|c
init|=
literal|0
init|;
name|c
operator|<
name|rowObjectArray
operator|.
name|length
condition|;
name|c
operator|++
control|)
block|{
name|resultObjectArray
index|[
name|c
index|]
operator|=
operator|(
operator|(
name|PrimitiveObjectInspector
operator|)
name|outputObjectInspectors
index|[
name|c
index|]
operator|)
operator|.
name|copyObject
argument_list|(
name|rowObjectArray
index|[
name|c
index|]
argument_list|)
expr_stmt|;
block|}
name|nextTestRow
argument_list|(
operator|new
name|RowTestObjects
argument_list|(
name|resultObjectArray
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|RowCollectorTestOperator
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
return|;
block|}
block|}
end_class

end_unit

