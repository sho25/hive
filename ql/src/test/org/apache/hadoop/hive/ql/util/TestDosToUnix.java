begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_class
specifier|public
class|class
name|TestDosToUnix
extends|extends
name|TestCase
block|{
specifier|private
specifier|static
specifier|final
name|String
name|dataFile
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"test.tmp.dir"
argument_list|,
literal|"."
argument_list|)
operator|+
literal|"data_TestDosToUnix"
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|Writer
name|output
init|=
literal|null
decl_stmt|;
name|String
name|text
init|=
literal|"#!/usr/bin/env ruby \r\n Test date \r\n More test data.\r\n"
decl_stmt|;
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|dataFile
argument_list|)
decl_stmt|;
name|output
operator|=
operator|new
name|BufferedWriter
argument_list|(
operator|new
name|FileWriter
argument_list|(
name|file
argument_list|)
argument_list|)
expr_stmt|;
name|output
operator|.
name|write
argument_list|(
name|text
argument_list|)
expr_stmt|;
name|output
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
name|File
name|f
init|=
operator|new
name|File
argument_list|(
name|dataFile
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|f
operator|.
name|delete
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Could not delete the data file"
argument_list|)
throw|;
block|}
block|}
specifier|public
name|void
name|testIsWindowsScript
parameter_list|()
block|{
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|dataFile
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|DosToUnix
operator|.
name|isWindowsScript
argument_list|(
name|file
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetUnixScriptNameFor
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"test_unix"
argument_list|,
name|DosToUnix
operator|.
name|getUnixScriptNameFor
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test_unix.rb"
argument_list|,
name|DosToUnix
operator|.
name|getUnixScriptNameFor
argument_list|(
literal|"test.rb"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testConvertWindowsScriptToUnix
parameter_list|()
block|{
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|dataFile
argument_list|)
decl_stmt|;
try|try
block|{
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|DosToUnix
operator|.
name|isWindowsScript
argument_list|(
name|file
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|convertedFile
init|=
name|DosToUnix
operator|.
name|convertWindowsScriptToUnix
argument_list|(
name|file
argument_list|)
decl_stmt|;
name|File
name|cFile
init|=
operator|new
name|File
argument_list|(
name|convertedFile
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|DosToUnix
operator|.
name|isWindowsScript
argument_list|(
name|cFile
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|cFile
operator|.
name|delete
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Could not delete the converted data file"
argument_list|)
throw|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

