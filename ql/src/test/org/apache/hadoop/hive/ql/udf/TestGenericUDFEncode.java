begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|udf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|UnsupportedEncodingException
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|HiveException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|udf
operator|.
name|generic
operator|.
name|GenericUDF
operator|.
name|DeferredJavaObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|udf
operator|.
name|generic
operator|.
name|GenericUDF
operator|.
name|DeferredObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|PrimitiveObjectInspectorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|BytesWritable
import|;
end_import

begin_class
specifier|public
class|class
name|TestGenericUDFEncode
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testEncode
parameter_list|()
throws|throws
name|UnsupportedEncodingException
throws|,
name|HiveException
block|{
name|String
index|[]
name|charsetNames
init|=
block|{
literal|"US-ASCII"
block|,
literal|"ISO-8859-1"
block|,
literal|"UTF-8"
block|,
literal|"UTF-16BE"
block|,
literal|"UTF-16LE"
block|,
literal|"UTF-16"
block|}
decl_stmt|;
for|for
control|(
name|String
name|charsetName
range|:
name|charsetNames
control|)
block|{
name|verifyEncode
argument_list|(
literal|"A sample string"
argument_list|,
name|charsetName
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|verifyEncode
parameter_list|(
name|String
name|string
parameter_list|,
name|String
name|charsetName
parameter_list|)
throws|throws
name|UnsupportedEncodingException
throws|,
name|HiveException
block|{
name|GenericUDFEncode
name|udf
init|=
operator|new
name|GenericUDFEncode
argument_list|()
decl_stmt|;
name|byte
index|[]
name|expected
init|=
name|string
operator|.
name|getBytes
argument_list|(
name|charsetName
argument_list|)
decl_stmt|;
name|ObjectInspector
name|valueOI
init|=
name|PrimitiveObjectInspectorFactory
operator|.
name|javaStringObjectInspector
decl_stmt|;
name|ObjectInspector
name|charsetOI
init|=
name|PrimitiveObjectInspectorFactory
operator|.
name|javaStringObjectInspector
decl_stmt|;
name|ObjectInspector
index|[]
name|initArguments
init|=
block|{
name|valueOI
block|,
name|charsetOI
block|}
decl_stmt|;
name|udf
operator|.
name|initialize
argument_list|(
name|initArguments
argument_list|)
expr_stmt|;
name|DeferredObject
name|valueObj
init|=
operator|new
name|DeferredJavaObject
argument_list|(
name|string
argument_list|)
decl_stmt|;
name|DeferredObject
name|charsetObj
init|=
operator|new
name|DeferredJavaObject
argument_list|(
name|charsetName
argument_list|)
decl_stmt|;
name|DeferredObject
index|[]
name|arguments
init|=
block|{
name|valueObj
block|,
name|charsetObj
block|}
decl_stmt|;
name|BytesWritable
name|outputWritable
init|=
operator|(
name|BytesWritable
operator|)
name|udf
operator|.
name|evaluate
argument_list|(
name|arguments
argument_list|)
decl_stmt|;
name|byte
index|[]
name|output
init|=
name|outputWritable
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Encoding failed for CharSet: "
operator|+
name|charsetName
argument_list|,
name|expected
operator|.
name|length
operator|==
name|outputWritable
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|expected
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|assertEquals
argument_list|(
literal|"Encoding failed for CharSet: "
operator|+
name|charsetName
argument_list|,
name|expected
index|[
name|i
index|]
argument_list|,
name|output
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

