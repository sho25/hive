begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|vector
operator|.
name|mapjoin
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Unit test for the vectorized conversion to and from row object[].  */
end_comment

begin_class
specifier|public
class|class
name|TestDebugDisplay
block|{
annotation|@
name|Test
specifier|public
name|void
name|testDebugDisplay
parameter_list|()
throws|throws
name|Throwable
block|{
try|try
block|{
name|String
name|result
decl_stmt|;
name|int
index|[]
name|test0
init|=
block|{}
decl_stmt|;
name|result
operator|=
name|VectorMapJoinGenerateResultOperator
operator|.
name|intArrayToRangesString
argument_list|(
name|test0
argument_list|,
name|test0
operator|.
name|length
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|int
index|[]
name|test1
init|=
block|{
literal|0
block|,
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|4
block|,
literal|5
block|,
literal|6
block|,
literal|7
block|,
literal|8
block|,
literal|9
block|,
literal|10
block|,
literal|11
block|,
literal|12
block|,
literal|13
block|,
literal|14
block|,
literal|15
block|,
literal|16
block|,
literal|17
block|,
literal|18
block|,
literal|19
block|,
literal|20
block|,
literal|21
block|,
literal|22
block|,
literal|23
block|,
literal|24
block|,
literal|25
block|,
literal|26
block|,
literal|27
block|,
literal|28
block|,
literal|29
block|,
literal|30
block|,
literal|31
block|}
decl_stmt|;
name|result
operator|=
name|VectorMapJoinGenerateResultOperator
operator|.
name|intArrayToRangesString
argument_list|(
name|test1
argument_list|,
name|test1
operator|.
name|length
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|int
index|[]
name|test2
init|=
block|{
literal|5
block|}
decl_stmt|;
name|result
operator|=
name|VectorMapJoinGenerateResultOperator
operator|.
name|intArrayToRangesString
argument_list|(
name|test2
argument_list|,
name|test2
operator|.
name|length
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|int
index|[]
name|test3
init|=
block|{
literal|4
block|,
literal|4
block|}
decl_stmt|;
name|result
operator|=
name|VectorMapJoinGenerateResultOperator
operator|.
name|intArrayToRangesString
argument_list|(
name|test3
argument_list|,
name|test3
operator|.
name|length
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|int
index|[]
name|test4
init|=
block|{
literal|0
block|,
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|4
block|,
literal|5
block|,
literal|6
block|,
literal|6
block|,
literal|7
block|,
literal|7
block|,
literal|8
block|}
decl_stmt|;
name|result
operator|=
name|VectorMapJoinGenerateResultOperator
operator|.
name|intArrayToRangesString
argument_list|(
name|test4
argument_list|,
name|test4
operator|.
name|length
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|int
index|[]
name|test5
init|=
block|{
literal|0
block|,
literal|0
block|,
literal|1
block|}
decl_stmt|;
name|result
operator|=
name|VectorMapJoinGenerateResultOperator
operator|.
name|intArrayToRangesString
argument_list|(
name|test5
argument_list|,
name|test5
operator|.
name|length
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|int
index|[]
name|test6
init|=
block|{
literal|0
block|,
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|4
block|,
literal|5
block|,
literal|6
block|,
literal|7
block|,
literal|8
block|,
literal|9
block|,
literal|10
block|,
literal|11
block|,
literal|12
block|,
literal|13
block|,
literal|14
block|,
literal|15
block|,
literal|16
block|,
literal|18
block|,
literal|19
block|,
literal|20
block|,
literal|21
block|,
literal|22
block|,
literal|23
block|,
literal|24
block|,
literal|25
block|,
literal|26
block|,
literal|27
block|,
literal|28
block|,
literal|29
block|,
literal|30
block|,
literal|31
block|}
decl_stmt|;
name|result
operator|=
name|VectorMapJoinGenerateResultOperator
operator|.
name|intArrayToRangesString
argument_list|(
name|test6
argument_list|,
name|test6
operator|.
name|length
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|int
index|[]
name|test7
init|=
block|{
literal|4
block|,
literal|2
block|}
decl_stmt|;
name|result
operator|=
name|VectorMapJoinGenerateResultOperator
operator|.
name|intArrayToRangesString
argument_list|(
name|test7
argument_list|,
name|test7
operator|.
name|length
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
block|}
end_class

end_unit

