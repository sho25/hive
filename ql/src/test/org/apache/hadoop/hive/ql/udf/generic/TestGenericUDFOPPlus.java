begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|udf
operator|.
name|generic
package|;
end_package

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Timestamp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|type
operator|.
name|HiveDecimal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|type
operator|.
name|HiveIntervalDayTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|type
operator|.
name|HiveIntervalYearMonth
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|HiveException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|session
operator|.
name|SessionState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|udf
operator|.
name|generic
operator|.
name|GenericUDF
operator|.
name|DeferredJavaObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|udf
operator|.
name|generic
operator|.
name|GenericUDF
operator|.
name|DeferredObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|ByteWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|DateWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|DoubleWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|HiveDecimalWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|HiveIntervalDayTimeWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|HiveIntervalYearMonthWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|HiveVarcharWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|ShortWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|TimestampWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|PrimitiveObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|PrimitiveObjectInspectorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|typeinfo
operator|.
name|TypeInfoFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|FloatWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|IntWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|LongWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|TestGenericUDFOPPlus
extends|extends
name|AbstractTestGenericUDFOPNumeric
block|{
annotation|@
name|Test
specifier|public
name|void
name|testBytePlusShort
parameter_list|()
throws|throws
name|HiveException
block|{
name|GenericUDFOPPlus
name|udf
init|=
operator|new
name|GenericUDFOPPlus
argument_list|()
decl_stmt|;
comment|// Byte
name|ByteWritable
name|left
init|=
operator|new
name|ByteWritable
argument_list|(
operator|(
name|byte
operator|)
literal|4
argument_list|)
decl_stmt|;
name|ShortWritable
name|right
init|=
operator|new
name|ShortWritable
argument_list|(
operator|(
name|short
operator|)
literal|6
argument_list|)
decl_stmt|;
name|ObjectInspector
index|[]
name|inputOIs
init|=
block|{
name|PrimitiveObjectInspectorFactory
operator|.
name|writableByteObjectInspector
block|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableShortObjectInspector
block|}
decl_stmt|;
name|DeferredObject
index|[]
name|args
init|=
block|{
operator|new
name|DeferredJavaObject
argument_list|(
name|left
argument_list|)
block|,
operator|new
name|DeferredJavaObject
argument_list|(
name|right
argument_list|)
block|,     }
decl_stmt|;
name|PrimitiveObjectInspector
name|oi
init|=
operator|(
name|PrimitiveObjectInspector
operator|)
name|udf
operator|.
name|initialize
argument_list|(
name|inputOIs
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|oi
operator|.
name|getTypeInfo
argument_list|()
argument_list|,
name|TypeInfoFactory
operator|.
name|shortTypeInfo
argument_list|)
expr_stmt|;
name|ShortWritable
name|res
init|=
operator|(
name|ShortWritable
operator|)
name|udf
operator|.
name|evaluate
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|res
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testVarcharPlusInt
parameter_list|()
throws|throws
name|HiveException
block|{
name|GenericUDFOPPlus
name|udf
init|=
operator|new
name|GenericUDFOPPlus
argument_list|()
decl_stmt|;
comment|// Short
name|HiveVarcharWritable
name|left
init|=
operator|new
name|HiveVarcharWritable
argument_list|()
decl_stmt|;
name|left
operator|.
name|set
argument_list|(
literal|"123"
argument_list|)
expr_stmt|;
name|IntWritable
name|right
init|=
operator|new
name|IntWritable
argument_list|(
literal|456
argument_list|)
decl_stmt|;
name|ObjectInspector
index|[]
name|inputOIs
init|=
block|{
name|PrimitiveObjectInspectorFactory
operator|.
name|writableHiveVarcharObjectInspector
block|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableIntObjectInspector
block|}
decl_stmt|;
name|DeferredObject
index|[]
name|args
init|=
block|{
operator|new
name|DeferredJavaObject
argument_list|(
name|left
argument_list|)
block|,
operator|new
name|DeferredJavaObject
argument_list|(
name|right
argument_list|)
block|,     }
decl_stmt|;
name|PrimitiveObjectInspector
name|oi
init|=
operator|(
name|PrimitiveObjectInspector
operator|)
name|udf
operator|.
name|initialize
argument_list|(
name|inputOIs
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|oi
operator|.
name|getTypeInfo
argument_list|()
argument_list|,
name|TypeInfoFactory
operator|.
name|doubleTypeInfo
argument_list|)
expr_stmt|;
name|DoubleWritable
name|res
init|=
operator|(
name|DoubleWritable
operator|)
name|udf
operator|.
name|evaluate
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|Double
argument_list|(
literal|579.0
argument_list|)
argument_list|,
operator|new
name|Double
argument_list|(
name|res
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDoublePlusLong
parameter_list|()
throws|throws
name|HiveException
block|{
name|GenericUDFOPPlus
name|udf
init|=
operator|new
name|GenericUDFOPPlus
argument_list|()
decl_stmt|;
comment|// Int
name|DoubleWritable
name|left
init|=
operator|new
name|DoubleWritable
argument_list|(
literal|4.5
argument_list|)
decl_stmt|;
name|LongWritable
name|right
init|=
operator|new
name|LongWritable
argument_list|(
literal|10
argument_list|)
decl_stmt|;
name|ObjectInspector
index|[]
name|inputOIs
init|=
block|{
name|PrimitiveObjectInspectorFactory
operator|.
name|writableDoubleObjectInspector
block|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableLongObjectInspector
block|}
decl_stmt|;
name|DeferredObject
index|[]
name|args
init|=
block|{
operator|new
name|DeferredJavaObject
argument_list|(
name|left
argument_list|)
block|,
operator|new
name|DeferredJavaObject
argument_list|(
name|right
argument_list|)
block|,     }
decl_stmt|;
name|PrimitiveObjectInspector
name|oi
init|=
operator|(
name|PrimitiveObjectInspector
operator|)
name|udf
operator|.
name|initialize
argument_list|(
name|inputOIs
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TypeInfoFactory
operator|.
name|doubleTypeInfo
argument_list|,
name|oi
operator|.
name|getTypeInfo
argument_list|()
argument_list|)
expr_stmt|;
name|DoubleWritable
name|res
init|=
operator|(
name|DoubleWritable
operator|)
name|udf
operator|.
name|evaluate
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|Double
argument_list|(
literal|14.5
argument_list|)
argument_list|,
operator|new
name|Double
argument_list|(
name|res
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLongPlusDecimal
parameter_list|()
throws|throws
name|HiveException
block|{
name|GenericUDFOPPlus
name|udf
init|=
operator|new
name|GenericUDFOPPlus
argument_list|()
decl_stmt|;
comment|// Long
name|LongWritable
name|left
init|=
operator|new
name|LongWritable
argument_list|(
literal|104
argument_list|)
decl_stmt|;
name|HiveDecimalWritable
name|right
init|=
operator|new
name|HiveDecimalWritable
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"234.97"
argument_list|)
argument_list|)
decl_stmt|;
name|ObjectInspector
index|[]
name|inputOIs
init|=
block|{
name|PrimitiveObjectInspectorFactory
operator|.
name|writableLongObjectInspector
block|,
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveWritableObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getDecimalTypeInfo
argument_list|(
literal|9
argument_list|,
literal|4
argument_list|)
argument_list|)
block|}
decl_stmt|;
name|DeferredObject
index|[]
name|args
init|=
block|{
operator|new
name|DeferredJavaObject
argument_list|(
name|left
argument_list|)
block|,
operator|new
name|DeferredJavaObject
argument_list|(
name|right
argument_list|)
block|,     }
decl_stmt|;
name|PrimitiveObjectInspector
name|oi
init|=
operator|(
name|PrimitiveObjectInspector
operator|)
name|udf
operator|.
name|initialize
argument_list|(
name|inputOIs
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TypeInfoFactory
operator|.
name|getDecimalTypeInfo
argument_list|(
literal|24
argument_list|,
literal|4
argument_list|)
argument_list|,
name|oi
operator|.
name|getTypeInfo
argument_list|()
argument_list|)
expr_stmt|;
name|HiveDecimalWritable
name|res
init|=
operator|(
name|HiveDecimalWritable
operator|)
name|udf
operator|.
name|evaluate
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"338.97"
argument_list|)
argument_list|,
name|res
operator|.
name|getHiveDecimal
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFloatPlusFloat
parameter_list|()
throws|throws
name|HiveException
block|{
name|GenericUDFOPPlus
name|udf
init|=
operator|new
name|GenericUDFOPPlus
argument_list|()
decl_stmt|;
comment|// Float
name|FloatWritable
name|f1
init|=
operator|new
name|FloatWritable
argument_list|(
literal|4.5f
argument_list|)
decl_stmt|;
name|FloatWritable
name|f2
init|=
operator|new
name|FloatWritable
argument_list|(
literal|0.0f
argument_list|)
decl_stmt|;
name|ObjectInspector
index|[]
name|inputOIs
init|=
block|{
name|PrimitiveObjectInspectorFactory
operator|.
name|writableFloatObjectInspector
block|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableFloatObjectInspector
block|}
decl_stmt|;
name|DeferredObject
index|[]
name|args
init|=
block|{
operator|new
name|DeferredJavaObject
argument_list|(
name|f1
argument_list|)
block|,
operator|new
name|DeferredJavaObject
argument_list|(
name|f2
argument_list|)
block|,     }
decl_stmt|;
name|PrimitiveObjectInspector
name|oi
init|=
operator|(
name|PrimitiveObjectInspector
operator|)
name|udf
operator|.
name|initialize
argument_list|(
name|inputOIs
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|oi
operator|.
name|getTypeInfo
argument_list|()
argument_list|,
name|TypeInfoFactory
operator|.
name|floatTypeInfo
argument_list|)
expr_stmt|;
name|FloatWritable
name|res
init|=
operator|(
name|FloatWritable
operator|)
name|udf
operator|.
name|evaluate
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|Float
argument_list|(
literal|4.5
argument_list|)
argument_list|,
operator|new
name|Float
argument_list|(
name|res
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDoulePlusDecimal
parameter_list|()
throws|throws
name|HiveException
block|{
name|GenericUDFOPPlus
name|udf
init|=
operator|new
name|GenericUDFOPPlus
argument_list|()
decl_stmt|;
comment|// Double
name|DoubleWritable
name|left
init|=
operator|new
name|DoubleWritable
argument_list|(
literal|74.52
argument_list|)
decl_stmt|;
name|HiveDecimalWritable
name|right
init|=
operator|new
name|HiveDecimalWritable
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"234.97"
argument_list|)
argument_list|)
decl_stmt|;
name|ObjectInspector
index|[]
name|inputOIs
init|=
block|{
name|PrimitiveObjectInspectorFactory
operator|.
name|writableDoubleObjectInspector
block|,
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveWritableObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getDecimalTypeInfo
argument_list|(
literal|5
argument_list|,
literal|2
argument_list|)
argument_list|)
block|}
decl_stmt|;
name|DeferredObject
index|[]
name|args
init|=
block|{
operator|new
name|DeferredJavaObject
argument_list|(
name|left
argument_list|)
block|,
operator|new
name|DeferredJavaObject
argument_list|(
name|right
argument_list|)
block|,     }
decl_stmt|;
name|PrimitiveObjectInspector
name|oi
init|=
operator|(
name|PrimitiveObjectInspector
operator|)
name|udf
operator|.
name|initialize
argument_list|(
name|inputOIs
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TypeInfoFactory
operator|.
name|doubleTypeInfo
argument_list|,
name|oi
operator|.
name|getTypeInfo
argument_list|()
argument_list|)
expr_stmt|;
name|DoubleWritable
name|res
init|=
operator|(
name|DoubleWritable
operator|)
name|udf
operator|.
name|evaluate
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|Double
argument_list|(
literal|309.49
argument_list|)
argument_list|,
operator|new
name|Double
argument_list|(
name|res
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDecimalPlusDecimal
parameter_list|()
throws|throws
name|HiveException
block|{
name|GenericUDFOPPlus
name|udf
init|=
operator|new
name|GenericUDFOPPlus
argument_list|()
decl_stmt|;
comment|// Decimal
name|HiveDecimalWritable
name|left
init|=
operator|new
name|HiveDecimalWritable
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"14.5"
argument_list|)
argument_list|)
decl_stmt|;
name|HiveDecimalWritable
name|right
init|=
operator|new
name|HiveDecimalWritable
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"234.97"
argument_list|)
argument_list|)
decl_stmt|;
name|ObjectInspector
index|[]
name|inputOIs
init|=
block|{
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveWritableObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getDecimalTypeInfo
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
argument_list|)
block|,
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveWritableObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getDecimalTypeInfo
argument_list|(
literal|5
argument_list|,
literal|2
argument_list|)
argument_list|)
block|}
decl_stmt|;
name|DeferredObject
index|[]
name|args
init|=
block|{
operator|new
name|DeferredJavaObject
argument_list|(
name|left
argument_list|)
block|,
operator|new
name|DeferredJavaObject
argument_list|(
name|right
argument_list|)
block|,     }
decl_stmt|;
name|PrimitiveObjectInspector
name|oi
init|=
operator|(
name|PrimitiveObjectInspector
operator|)
name|udf
operator|.
name|initialize
argument_list|(
name|inputOIs
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TypeInfoFactory
operator|.
name|getDecimalTypeInfo
argument_list|(
literal|6
argument_list|,
literal|2
argument_list|)
argument_list|,
name|oi
operator|.
name|getTypeInfo
argument_list|()
argument_list|)
expr_stmt|;
name|HiveDecimalWritable
name|res
init|=
operator|(
name|HiveDecimalWritable
operator|)
name|udf
operator|.
name|evaluate
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"249.47"
argument_list|)
argument_list|,
name|res
operator|.
name|getHiveDecimal
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDecimalPlusDecimalSameParams
parameter_list|()
throws|throws
name|HiveException
block|{
name|GenericUDFOPPlus
name|udf
init|=
operator|new
name|GenericUDFOPPlus
argument_list|()
decl_stmt|;
name|ObjectInspector
index|[]
name|inputOIs
init|=
block|{
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveWritableObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getDecimalTypeInfo
argument_list|(
literal|5
argument_list|,
literal|2
argument_list|)
argument_list|)
block|,
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveWritableObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getDecimalTypeInfo
argument_list|(
literal|5
argument_list|,
literal|2
argument_list|)
argument_list|)
block|}
decl_stmt|;
name|PrimitiveObjectInspector
name|oi
init|=
operator|(
name|PrimitiveObjectInspector
operator|)
name|udf
operator|.
name|initialize
argument_list|(
name|inputOIs
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TypeInfoFactory
operator|.
name|getDecimalTypeInfo
argument_list|(
literal|6
argument_list|,
literal|2
argument_list|)
argument_list|,
name|oi
operator|.
name|getTypeInfo
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReturnTypeBackwardCompat
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Disable ansi sql arithmetic changes
name|SessionState
operator|.
name|get
argument_list|()
operator|.
name|getConf
argument_list|()
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_COMPAT
argument_list|,
literal|"0.12"
argument_list|)
expr_stmt|;
name|verifyReturnType
argument_list|(
operator|new
name|GenericUDFOPPlus
argument_list|()
argument_list|,
literal|"int"
argument_list|,
literal|"int"
argument_list|,
literal|"int"
argument_list|)
expr_stmt|;
name|verifyReturnType
argument_list|(
operator|new
name|GenericUDFOPPlus
argument_list|()
argument_list|,
literal|"int"
argument_list|,
literal|"float"
argument_list|,
literal|"float"
argument_list|)
expr_stmt|;
name|verifyReturnType
argument_list|(
operator|new
name|GenericUDFOPPlus
argument_list|()
argument_list|,
literal|"int"
argument_list|,
literal|"double"
argument_list|,
literal|"double"
argument_list|)
expr_stmt|;
name|verifyReturnType
argument_list|(
operator|new
name|GenericUDFOPPlus
argument_list|()
argument_list|,
literal|"int"
argument_list|,
literal|"decimal(10,2)"
argument_list|,
literal|"decimal(13,2)"
argument_list|)
expr_stmt|;
name|verifyReturnType
argument_list|(
operator|new
name|GenericUDFOPPlus
argument_list|()
argument_list|,
literal|"float"
argument_list|,
literal|"float"
argument_list|,
literal|"float"
argument_list|)
expr_stmt|;
name|verifyReturnType
argument_list|(
operator|new
name|GenericUDFOPPlus
argument_list|()
argument_list|,
literal|"float"
argument_list|,
literal|"double"
argument_list|,
literal|"double"
argument_list|)
expr_stmt|;
name|verifyReturnType
argument_list|(
operator|new
name|GenericUDFOPPlus
argument_list|()
argument_list|,
literal|"float"
argument_list|,
literal|"decimal(10,2)"
argument_list|,
literal|"double"
argument_list|)
expr_stmt|;
name|verifyReturnType
argument_list|(
operator|new
name|GenericUDFOPPlus
argument_list|()
argument_list|,
literal|"double"
argument_list|,
literal|"double"
argument_list|,
literal|"double"
argument_list|)
expr_stmt|;
name|verifyReturnType
argument_list|(
operator|new
name|GenericUDFOPPlus
argument_list|()
argument_list|,
literal|"double"
argument_list|,
literal|"decimal(10,2)"
argument_list|,
literal|"double"
argument_list|)
expr_stmt|;
name|verifyReturnType
argument_list|(
operator|new
name|GenericUDFOPPlus
argument_list|()
argument_list|,
literal|"decimal(10,2)"
argument_list|,
literal|"decimal(10,2)"
argument_list|,
literal|"decimal(11,2)"
argument_list|)
expr_stmt|;
comment|// Most tests are done with ANSI SQL mode enabled, set it back to true
name|SessionState
operator|.
name|get
argument_list|()
operator|.
name|getConf
argument_list|()
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_COMPAT
argument_list|,
literal|"latest"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReturnTypeAnsiSql
parameter_list|()
throws|throws
name|Exception
block|{
name|SessionState
operator|.
name|get
argument_list|()
operator|.
name|getConf
argument_list|()
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_COMPAT
argument_list|,
literal|"latest"
argument_list|)
expr_stmt|;
name|verifyReturnType
argument_list|(
operator|new
name|GenericUDFOPPlus
argument_list|()
argument_list|,
literal|"int"
argument_list|,
literal|"int"
argument_list|,
literal|"int"
argument_list|)
expr_stmt|;
name|verifyReturnType
argument_list|(
operator|new
name|GenericUDFOPPlus
argument_list|()
argument_list|,
literal|"int"
argument_list|,
literal|"float"
argument_list|,
literal|"float"
argument_list|)
expr_stmt|;
name|verifyReturnType
argument_list|(
operator|new
name|GenericUDFOPPlus
argument_list|()
argument_list|,
literal|"int"
argument_list|,
literal|"double"
argument_list|,
literal|"double"
argument_list|)
expr_stmt|;
name|verifyReturnType
argument_list|(
operator|new
name|GenericUDFOPPlus
argument_list|()
argument_list|,
literal|"int"
argument_list|,
literal|"decimal(10,2)"
argument_list|,
literal|"decimal(13,2)"
argument_list|)
expr_stmt|;
name|verifyReturnType
argument_list|(
operator|new
name|GenericUDFOPPlus
argument_list|()
argument_list|,
literal|"float"
argument_list|,
literal|"float"
argument_list|,
literal|"float"
argument_list|)
expr_stmt|;
name|verifyReturnType
argument_list|(
operator|new
name|GenericUDFOPPlus
argument_list|()
argument_list|,
literal|"float"
argument_list|,
literal|"double"
argument_list|,
literal|"double"
argument_list|)
expr_stmt|;
name|verifyReturnType
argument_list|(
operator|new
name|GenericUDFOPPlus
argument_list|()
argument_list|,
literal|"float"
argument_list|,
literal|"decimal(10,2)"
argument_list|,
literal|"double"
argument_list|)
expr_stmt|;
name|verifyReturnType
argument_list|(
operator|new
name|GenericUDFOPPlus
argument_list|()
argument_list|,
literal|"double"
argument_list|,
literal|"double"
argument_list|,
literal|"double"
argument_list|)
expr_stmt|;
name|verifyReturnType
argument_list|(
operator|new
name|GenericUDFOPPlus
argument_list|()
argument_list|,
literal|"double"
argument_list|,
literal|"decimal(10,2)"
argument_list|,
literal|"double"
argument_list|)
expr_stmt|;
name|verifyReturnType
argument_list|(
operator|new
name|GenericUDFOPPlus
argument_list|()
argument_list|,
literal|"decimal(10,2)"
argument_list|,
literal|"decimal(10,2)"
argument_list|,
literal|"decimal(11,2)"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntervalYearMonthPlusIntervalYearMonth
parameter_list|()
throws|throws
name|Exception
block|{
name|GenericUDFOPPlus
name|udf
init|=
operator|new
name|GenericUDFOPPlus
argument_list|()
decl_stmt|;
name|HiveIntervalYearMonthWritable
name|left
init|=
operator|new
name|HiveIntervalYearMonthWritable
argument_list|(
name|HiveIntervalYearMonth
operator|.
name|valueOf
argument_list|(
literal|"1-2"
argument_list|)
argument_list|)
decl_stmt|;
name|HiveIntervalYearMonthWritable
name|right
init|=
operator|new
name|HiveIntervalYearMonthWritable
argument_list|(
name|HiveIntervalYearMonth
operator|.
name|valueOf
argument_list|(
literal|"1-11"
argument_list|)
argument_list|)
decl_stmt|;
name|ObjectInspector
index|[]
name|inputOIs
init|=
block|{
name|PrimitiveObjectInspectorFactory
operator|.
name|writableHiveIntervalYearMonthObjectInspector
block|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableHiveIntervalYearMonthObjectInspector
block|}
decl_stmt|;
name|DeferredObject
index|[]
name|args
init|=
block|{
operator|new
name|DeferredJavaObject
argument_list|(
name|left
argument_list|)
block|,
operator|new
name|DeferredJavaObject
argument_list|(
name|right
argument_list|)
block|,     }
decl_stmt|;
name|PrimitiveObjectInspector
name|oi
init|=
operator|(
name|PrimitiveObjectInspector
operator|)
name|udf
operator|.
name|initialize
argument_list|(
name|inputOIs
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TypeInfoFactory
operator|.
name|intervalYearMonthTypeInfo
argument_list|,
name|oi
operator|.
name|getTypeInfo
argument_list|()
argument_list|)
expr_stmt|;
name|HiveIntervalYearMonthWritable
name|res
init|=
operator|(
name|HiveIntervalYearMonthWritable
operator|)
name|udf
operator|.
name|evaluate
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|HiveIntervalYearMonth
operator|.
name|valueOf
argument_list|(
literal|"3-1"
argument_list|)
argument_list|,
name|res
operator|.
name|getHiveIntervalYearMonth
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntervalYearMonthPlusDate
parameter_list|()
throws|throws
name|Exception
block|{
name|GenericUDFOPPlus
name|udf
init|=
operator|new
name|GenericUDFOPPlus
argument_list|()
decl_stmt|;
name|HiveIntervalYearMonthWritable
name|left
init|=
operator|new
name|HiveIntervalYearMonthWritable
argument_list|(
name|HiveIntervalYearMonth
operator|.
name|valueOf
argument_list|(
literal|"2-8"
argument_list|)
argument_list|)
decl_stmt|;
name|DateWritable
name|right
init|=
operator|new
name|DateWritable
argument_list|(
name|Date
operator|.
name|valueOf
argument_list|(
literal|"2001-06-15"
argument_list|)
argument_list|)
decl_stmt|;
name|ObjectInspector
index|[]
name|inputOIs
init|=
block|{
name|PrimitiveObjectInspectorFactory
operator|.
name|writableHiveIntervalYearMonthObjectInspector
block|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableDateObjectInspector
block|}
decl_stmt|;
name|DeferredObject
index|[]
name|args
init|=
block|{
operator|new
name|DeferredJavaObject
argument_list|(
name|left
argument_list|)
block|,
operator|new
name|DeferredJavaObject
argument_list|(
name|right
argument_list|)
block|,     }
decl_stmt|;
name|PrimitiveObjectInspector
name|oi
init|=
operator|(
name|PrimitiveObjectInspector
operator|)
name|udf
operator|.
name|initialize
argument_list|(
name|inputOIs
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TypeInfoFactory
operator|.
name|dateTypeInfo
argument_list|,
name|oi
operator|.
name|getTypeInfo
argument_list|()
argument_list|)
expr_stmt|;
name|DateWritable
name|res
init|=
operator|(
name|DateWritable
operator|)
name|udf
operator|.
name|evaluate
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Date
operator|.
name|valueOf
argument_list|(
literal|"2004-02-15"
argument_list|)
argument_list|,
name|res
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDatePlusIntervalYearMonth
parameter_list|()
throws|throws
name|Exception
block|{
name|GenericUDFOPPlus
name|udf
init|=
operator|new
name|GenericUDFOPPlus
argument_list|()
decl_stmt|;
name|DateWritable
name|left
init|=
operator|new
name|DateWritable
argument_list|(
name|Date
operator|.
name|valueOf
argument_list|(
literal|"2001-06-15"
argument_list|)
argument_list|)
decl_stmt|;
name|HiveIntervalYearMonthWritable
name|right
init|=
operator|new
name|HiveIntervalYearMonthWritable
argument_list|(
name|HiveIntervalYearMonth
operator|.
name|valueOf
argument_list|(
literal|"2-8"
argument_list|)
argument_list|)
decl_stmt|;
name|ObjectInspector
index|[]
name|inputOIs
init|=
block|{
name|PrimitiveObjectInspectorFactory
operator|.
name|writableDateObjectInspector
block|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableHiveIntervalYearMonthObjectInspector
block|}
decl_stmt|;
name|DeferredObject
index|[]
name|args
init|=
block|{
operator|new
name|DeferredJavaObject
argument_list|(
name|left
argument_list|)
block|,
operator|new
name|DeferredJavaObject
argument_list|(
name|right
argument_list|)
block|,     }
decl_stmt|;
name|PrimitiveObjectInspector
name|oi
init|=
operator|(
name|PrimitiveObjectInspector
operator|)
name|udf
operator|.
name|initialize
argument_list|(
name|inputOIs
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TypeInfoFactory
operator|.
name|dateTypeInfo
argument_list|,
name|oi
operator|.
name|getTypeInfo
argument_list|()
argument_list|)
expr_stmt|;
name|DateWritable
name|res
init|=
operator|(
name|DateWritable
operator|)
name|udf
operator|.
name|evaluate
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Date
operator|.
name|valueOf
argument_list|(
literal|"2004-02-15"
argument_list|)
argument_list|,
name|res
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntervalYearMonthPlusTimestamp
parameter_list|()
throws|throws
name|Exception
block|{
name|GenericUDFOPPlus
name|udf
init|=
operator|new
name|GenericUDFOPPlus
argument_list|()
decl_stmt|;
name|HiveIntervalYearMonthWritable
name|left
init|=
operator|new
name|HiveIntervalYearMonthWritable
argument_list|(
name|HiveIntervalYearMonth
operator|.
name|valueOf
argument_list|(
literal|"2-2"
argument_list|)
argument_list|)
decl_stmt|;
name|TimestampWritable
name|right
init|=
operator|new
name|TimestampWritable
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2001-11-15 01:02:03.123456789"
argument_list|)
argument_list|)
decl_stmt|;
name|ObjectInspector
index|[]
name|inputOIs
init|=
block|{
name|PrimitiveObjectInspectorFactory
operator|.
name|writableHiveIntervalYearMonthObjectInspector
block|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableTimestampObjectInspector
block|}
decl_stmt|;
name|DeferredObject
index|[]
name|args
init|=
block|{
operator|new
name|DeferredJavaObject
argument_list|(
name|left
argument_list|)
block|,
operator|new
name|DeferredJavaObject
argument_list|(
name|right
argument_list|)
block|,     }
decl_stmt|;
name|PrimitiveObjectInspector
name|oi
init|=
operator|(
name|PrimitiveObjectInspector
operator|)
name|udf
operator|.
name|initialize
argument_list|(
name|inputOIs
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TypeInfoFactory
operator|.
name|timestampTypeInfo
argument_list|,
name|oi
operator|.
name|getTypeInfo
argument_list|()
argument_list|)
expr_stmt|;
name|TimestampWritable
name|res
init|=
operator|(
name|TimestampWritable
operator|)
name|udf
operator|.
name|evaluate
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2004-01-15 01:02:03.123456789"
argument_list|)
argument_list|,
name|res
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTimestampPlusIntervalYearMonth
parameter_list|()
throws|throws
name|Exception
block|{
name|GenericUDFOPPlus
name|udf
init|=
operator|new
name|GenericUDFOPPlus
argument_list|()
decl_stmt|;
name|TimestampWritable
name|left
init|=
operator|new
name|TimestampWritable
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2001-11-15 01:02:03.123456789"
argument_list|)
argument_list|)
decl_stmt|;
name|HiveIntervalYearMonthWritable
name|right
init|=
operator|new
name|HiveIntervalYearMonthWritable
argument_list|(
name|HiveIntervalYearMonth
operator|.
name|valueOf
argument_list|(
literal|"2-2"
argument_list|)
argument_list|)
decl_stmt|;
name|ObjectInspector
index|[]
name|inputOIs
init|=
block|{
name|PrimitiveObjectInspectorFactory
operator|.
name|writableTimestampObjectInspector
block|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableHiveIntervalYearMonthObjectInspector
block|}
decl_stmt|;
name|DeferredObject
index|[]
name|args
init|=
block|{
operator|new
name|DeferredJavaObject
argument_list|(
name|left
argument_list|)
block|,
operator|new
name|DeferredJavaObject
argument_list|(
name|right
argument_list|)
block|,     }
decl_stmt|;
name|PrimitiveObjectInspector
name|oi
init|=
operator|(
name|PrimitiveObjectInspector
operator|)
name|udf
operator|.
name|initialize
argument_list|(
name|inputOIs
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TypeInfoFactory
operator|.
name|timestampTypeInfo
argument_list|,
name|oi
operator|.
name|getTypeInfo
argument_list|()
argument_list|)
expr_stmt|;
name|TimestampWritable
name|res
init|=
operator|(
name|TimestampWritable
operator|)
name|udf
operator|.
name|evaluate
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2004-01-15 01:02:03.123456789"
argument_list|)
argument_list|,
name|res
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntervalDayTimePlusIntervalDayTime
parameter_list|()
throws|throws
name|Exception
block|{
name|GenericUDFOPPlus
name|udf
init|=
operator|new
name|GenericUDFOPPlus
argument_list|()
decl_stmt|;
name|HiveIntervalDayTimeWritable
name|left
init|=
operator|new
name|HiveIntervalDayTimeWritable
argument_list|(
name|HiveIntervalDayTime
operator|.
name|valueOf
argument_list|(
literal|"1 0:0:0.567"
argument_list|)
argument_list|)
decl_stmt|;
name|HiveIntervalDayTimeWritable
name|right
init|=
operator|new
name|HiveIntervalDayTimeWritable
argument_list|(
name|HiveIntervalDayTime
operator|.
name|valueOf
argument_list|(
literal|"1 2:3:4"
argument_list|)
argument_list|)
decl_stmt|;
name|ObjectInspector
index|[]
name|inputOIs
init|=
block|{
name|PrimitiveObjectInspectorFactory
operator|.
name|writableHiveIntervalDayTimeObjectInspector
block|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableHiveIntervalDayTimeObjectInspector
block|}
decl_stmt|;
name|DeferredObject
index|[]
name|args
init|=
block|{
operator|new
name|DeferredJavaObject
argument_list|(
name|left
argument_list|)
block|,
operator|new
name|DeferredJavaObject
argument_list|(
name|right
argument_list|)
block|,     }
decl_stmt|;
name|PrimitiveObjectInspector
name|oi
init|=
operator|(
name|PrimitiveObjectInspector
operator|)
name|udf
operator|.
name|initialize
argument_list|(
name|inputOIs
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TypeInfoFactory
operator|.
name|intervalDayTimeTypeInfo
argument_list|,
name|oi
operator|.
name|getTypeInfo
argument_list|()
argument_list|)
expr_stmt|;
name|HiveIntervalDayTimeWritable
name|res
init|=
operator|(
name|HiveIntervalDayTimeWritable
operator|)
name|udf
operator|.
name|evaluate
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|HiveIntervalDayTime
operator|.
name|valueOf
argument_list|(
literal|"2 2:3:4.567"
argument_list|)
argument_list|,
name|res
operator|.
name|getHiveIntervalDayTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntervalDayTimePlusTimestamp
parameter_list|()
throws|throws
name|Exception
block|{
name|GenericUDFOPPlus
name|udf
init|=
operator|new
name|GenericUDFOPPlus
argument_list|()
decl_stmt|;
name|HiveIntervalDayTimeWritable
name|left
init|=
operator|new
name|HiveIntervalDayTimeWritable
argument_list|(
name|HiveIntervalDayTime
operator|.
name|valueOf
argument_list|(
literal|"1 2:3:4.567"
argument_list|)
argument_list|)
decl_stmt|;
name|TimestampWritable
name|right
init|=
operator|new
name|TimestampWritable
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2001-01-01 00:00:00"
argument_list|)
argument_list|)
decl_stmt|;
name|ObjectInspector
index|[]
name|inputOIs
init|=
block|{
name|PrimitiveObjectInspectorFactory
operator|.
name|writableHiveIntervalDayTimeObjectInspector
block|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableTimestampObjectInspector
block|}
decl_stmt|;
name|DeferredObject
index|[]
name|args
init|=
block|{
operator|new
name|DeferredJavaObject
argument_list|(
name|left
argument_list|)
block|,
operator|new
name|DeferredJavaObject
argument_list|(
name|right
argument_list|)
block|,     }
decl_stmt|;
name|PrimitiveObjectInspector
name|oi
init|=
operator|(
name|PrimitiveObjectInspector
operator|)
name|udf
operator|.
name|initialize
argument_list|(
name|inputOIs
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TypeInfoFactory
operator|.
name|timestampTypeInfo
argument_list|,
name|oi
operator|.
name|getTypeInfo
argument_list|()
argument_list|)
expr_stmt|;
name|TimestampWritable
name|res
init|=
operator|(
name|TimestampWritable
operator|)
name|udf
operator|.
name|evaluate
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2001-01-02 2:3:4.567"
argument_list|)
argument_list|,
name|res
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTimestampPlusIntervalDayTime
parameter_list|()
throws|throws
name|Exception
block|{
name|GenericUDFOPPlus
name|udf
init|=
operator|new
name|GenericUDFOPPlus
argument_list|()
decl_stmt|;
name|TimestampWritable
name|left
init|=
operator|new
name|TimestampWritable
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2001-01-01 00:00:00"
argument_list|)
argument_list|)
decl_stmt|;
name|HiveIntervalDayTimeWritable
name|right
init|=
operator|new
name|HiveIntervalDayTimeWritable
argument_list|(
name|HiveIntervalDayTime
operator|.
name|valueOf
argument_list|(
literal|"1 2:3:4.567"
argument_list|)
argument_list|)
decl_stmt|;
name|ObjectInspector
index|[]
name|inputOIs
init|=
block|{
name|PrimitiveObjectInspectorFactory
operator|.
name|writableTimestampObjectInspector
block|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableHiveIntervalDayTimeObjectInspector
block|}
decl_stmt|;
name|DeferredObject
index|[]
name|args
init|=
block|{
operator|new
name|DeferredJavaObject
argument_list|(
name|left
argument_list|)
block|,
operator|new
name|DeferredJavaObject
argument_list|(
name|right
argument_list|)
block|,     }
decl_stmt|;
name|PrimitiveObjectInspector
name|oi
init|=
operator|(
name|PrimitiveObjectInspector
operator|)
name|udf
operator|.
name|initialize
argument_list|(
name|inputOIs
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TypeInfoFactory
operator|.
name|timestampTypeInfo
argument_list|,
name|oi
operator|.
name|getTypeInfo
argument_list|()
argument_list|)
expr_stmt|;
name|TimestampWritable
name|res
init|=
operator|(
name|TimestampWritable
operator|)
name|udf
operator|.
name|evaluate
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2001-01-02 2:3:4.567"
argument_list|)
argument_list|,
name|res
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntervalDayTimePlusDate
parameter_list|()
throws|throws
name|Exception
block|{
name|GenericUDFOPPlus
name|udf
init|=
operator|new
name|GenericUDFOPPlus
argument_list|()
decl_stmt|;
name|HiveIntervalDayTimeWritable
name|left
init|=
operator|new
name|HiveIntervalDayTimeWritable
argument_list|(
name|HiveIntervalDayTime
operator|.
name|valueOf
argument_list|(
literal|"1 2:3:4.567"
argument_list|)
argument_list|)
decl_stmt|;
name|DateWritable
name|right
init|=
operator|new
name|DateWritable
argument_list|(
name|Date
operator|.
name|valueOf
argument_list|(
literal|"2001-01-01"
argument_list|)
argument_list|)
decl_stmt|;
name|ObjectInspector
index|[]
name|inputOIs
init|=
block|{
name|PrimitiveObjectInspectorFactory
operator|.
name|writableHiveIntervalDayTimeObjectInspector
block|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableDateObjectInspector
block|}
decl_stmt|;
name|DeferredObject
index|[]
name|args
init|=
block|{
operator|new
name|DeferredJavaObject
argument_list|(
name|left
argument_list|)
block|,
operator|new
name|DeferredJavaObject
argument_list|(
name|right
argument_list|)
block|,     }
decl_stmt|;
comment|// Date + day-time interval = timestamp
name|PrimitiveObjectInspector
name|oi
init|=
operator|(
name|PrimitiveObjectInspector
operator|)
name|udf
operator|.
name|initialize
argument_list|(
name|inputOIs
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TypeInfoFactory
operator|.
name|timestampTypeInfo
argument_list|,
name|oi
operator|.
name|getTypeInfo
argument_list|()
argument_list|)
expr_stmt|;
name|TimestampWritable
name|res
init|=
operator|(
name|TimestampWritable
operator|)
name|udf
operator|.
name|evaluate
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2001-01-02 2:3:4.567"
argument_list|)
argument_list|,
name|res
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDatePlusIntervalDayTime
parameter_list|()
throws|throws
name|Exception
block|{
name|GenericUDFOPPlus
name|udf
init|=
operator|new
name|GenericUDFOPPlus
argument_list|()
decl_stmt|;
name|DateWritable
name|left
init|=
operator|new
name|DateWritable
argument_list|(
name|Date
operator|.
name|valueOf
argument_list|(
literal|"2001-01-01"
argument_list|)
argument_list|)
decl_stmt|;
name|HiveIntervalDayTimeWritable
name|right
init|=
operator|new
name|HiveIntervalDayTimeWritable
argument_list|(
name|HiveIntervalDayTime
operator|.
name|valueOf
argument_list|(
literal|"1 2:3:4.567"
argument_list|)
argument_list|)
decl_stmt|;
name|ObjectInspector
index|[]
name|inputOIs
init|=
block|{
name|PrimitiveObjectInspectorFactory
operator|.
name|writableDateObjectInspector
block|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableHiveIntervalDayTimeObjectInspector
block|}
decl_stmt|;
name|DeferredObject
index|[]
name|args
init|=
block|{
operator|new
name|DeferredJavaObject
argument_list|(
name|left
argument_list|)
block|,
operator|new
name|DeferredJavaObject
argument_list|(
name|right
argument_list|)
block|,     }
decl_stmt|;
comment|// Date + day-time interval = timestamp
name|PrimitiveObjectInspector
name|oi
init|=
operator|(
name|PrimitiveObjectInspector
operator|)
name|udf
operator|.
name|initialize
argument_list|(
name|inputOIs
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TypeInfoFactory
operator|.
name|timestampTypeInfo
argument_list|,
name|oi
operator|.
name|getTypeInfo
argument_list|()
argument_list|)
expr_stmt|;
name|TimestampWritable
name|res
init|=
operator|(
name|TimestampWritable
operator|)
name|udf
operator|.
name|evaluate
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2001-01-02 2:3:4.567"
argument_list|)
argument_list|,
name|res
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

