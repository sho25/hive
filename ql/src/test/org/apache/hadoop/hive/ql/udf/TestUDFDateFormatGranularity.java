begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|udf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Timestamp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|TimestampWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_class
specifier|public
class|class
name|TestUDFDateFormatGranularity
extends|extends
name|TestCase
block|{
annotation|@
name|Test
specifier|public
name|void
name|testTimestampToTimestampWithGranularity
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Running example
comment|// Friday 30th August 1985 02:47:02 AM
specifier|final
name|TimestampWritable
name|t
init|=
operator|new
name|TimestampWritable
argument_list|(
operator|new
name|Timestamp
argument_list|(
literal|494218022082L
argument_list|)
argument_list|)
decl_stmt|;
name|UDFDateFloor
name|g
decl_stmt|;
comment|// Year granularity
comment|// Tuesday 1st January 1985 12:00:00 AM
name|g
operator|=
operator|new
name|UDFDateFloorYear
argument_list|()
expr_stmt|;
name|TimestampWritable
name|i1
init|=
name|g
operator|.
name|evaluate
argument_list|(
name|t
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|473385600000L
argument_list|,
name|i1
operator|.
name|getTimestamp
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
comment|// Quarter granularity
comment|// Monday 1st July 1985 12:00:00 AM
name|g
operator|=
operator|new
name|UDFDateFloorQuarter
argument_list|()
expr_stmt|;
name|TimestampWritable
name|i2
init|=
name|g
operator|.
name|evaluate
argument_list|(
name|t
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|489024000000L
argument_list|,
name|i2
operator|.
name|getTimestamp
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
comment|// Month granularity
comment|// Thursday 1st August 1985 12:00:00 AM
name|g
operator|=
operator|new
name|UDFDateFloorMonth
argument_list|()
expr_stmt|;
name|TimestampWritable
name|i3
init|=
name|g
operator|.
name|evaluate
argument_list|(
name|t
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|491702400000L
argument_list|,
name|i3
operator|.
name|getTimestamp
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
comment|// Week granularity
comment|// Monday 26th August 1985 12:00:00 AM
name|g
operator|=
operator|new
name|UDFDateFloorWeek
argument_list|()
expr_stmt|;
name|TimestampWritable
name|i4
init|=
name|g
operator|.
name|evaluate
argument_list|(
name|t
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|493862400000L
argument_list|,
name|i4
operator|.
name|getTimestamp
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
comment|// Day granularity
comment|// Friday 30th August 1985 12:00:00 AM
name|g
operator|=
operator|new
name|UDFDateFloorDay
argument_list|()
expr_stmt|;
name|TimestampWritable
name|i5
init|=
name|g
operator|.
name|evaluate
argument_list|(
name|t
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|494208000000L
argument_list|,
name|i5
operator|.
name|getTimestamp
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
comment|// Hour granularity
comment|// Friday 30th August 1985 02:00:00 AM
name|g
operator|=
operator|new
name|UDFDateFloorHour
argument_list|()
expr_stmt|;
name|TimestampWritable
name|i6
init|=
name|g
operator|.
name|evaluate
argument_list|(
name|t
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|494215200000L
argument_list|,
name|i6
operator|.
name|getTimestamp
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
comment|// Minute granularity
comment|// Friday 30th August 1985 02:47:00 AM
name|g
operator|=
operator|new
name|UDFDateFloorMinute
argument_list|()
expr_stmt|;
name|TimestampWritable
name|i7
init|=
name|g
operator|.
name|evaluate
argument_list|(
name|t
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|494218020000L
argument_list|,
name|i7
operator|.
name|getTimestamp
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
comment|// Second granularity
comment|// Friday 30th August 1985 02:47:02 AM
name|g
operator|=
operator|new
name|UDFDateFloorSecond
argument_list|()
expr_stmt|;
name|TimestampWritable
name|i8
init|=
name|g
operator|.
name|evaluate
argument_list|(
name|t
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|494218022000L
argument_list|,
name|i8
operator|.
name|getTimestamp
argument_list|()
operator|.
name|getTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

