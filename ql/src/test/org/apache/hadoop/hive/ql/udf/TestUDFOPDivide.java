begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|udf
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|type
operator|.
name|HiveDecimal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|DoubleWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|HiveDecimalWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|TestUDFOPDivide
block|{
name|UDFOPDivide
name|udf
init|=
operator|new
name|UDFOPDivide
argument_list|()
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testDivideByZero
parameter_list|()
block|{
comment|// Double
name|DoubleWritable
name|left
init|=
operator|new
name|DoubleWritable
argument_list|(
literal|4.5
argument_list|)
decl_stmt|;
name|DoubleWritable
name|right
init|=
operator|new
name|DoubleWritable
argument_list|(
literal|0.0
argument_list|)
decl_stmt|;
name|DoubleWritable
name|result
init|=
name|udf
operator|.
name|evaluate
argument_list|(
name|left
argument_list|,
name|right
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
comment|// Decimal
name|HiveDecimalWritable
name|dec1
init|=
operator|new
name|HiveDecimalWritable
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"4.5"
argument_list|)
argument_list|)
decl_stmt|;
name|HiveDecimalWritable
name|dec2
init|=
operator|new
name|HiveDecimalWritable
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"0"
argument_list|)
argument_list|)
decl_stmt|;
name|HiveDecimalWritable
name|dec3
init|=
name|udf
operator|.
name|evaluate
argument_list|(
name|dec1
argument_list|,
name|dec2
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|dec3
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

