begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_comment
comment|/**  * Suite for testing running of queries in multi-threaded mode.  */
end_comment

begin_class
specifier|public
class|class
name|TestMTQueries
extends|extends
name|TestCase
block|{
specifier|private
specifier|final
name|String
name|inpDir
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"ql.test.query.clientpositive.dir"
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|String
name|resDir
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"ql.test.results.clientpositive.dir"
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|String
name|logDir
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"test.log.dir"
argument_list|)
operator|+
literal|"/clientpositive"
decl_stmt|;
specifier|public
name|void
name|testMTQueries1
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|testNames
init|=
operator|new
name|String
index|[]
block|{
literal|"join1.q"
block|,
literal|"join2.q"
block|,
literal|"groupby1.q"
block|,
literal|"groupby2.q"
block|,
literal|"join3.q"
block|,
literal|"input1.q"
block|,
literal|"input19.q"
block|}
decl_stmt|;
name|String
index|[]
name|logDirs
init|=
operator|new
name|String
index|[
name|testNames
operator|.
name|length
index|]
decl_stmt|;
name|String
index|[]
name|resDirs
init|=
operator|new
name|String
index|[
name|testNames
operator|.
name|length
index|]
decl_stmt|;
name|File
index|[]
name|qfiles
init|=
operator|new
name|File
index|[
name|testNames
operator|.
name|length
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|resDirs
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|logDirs
index|[
name|i
index|]
operator|=
name|logDir
expr_stmt|;
name|resDirs
index|[
name|i
index|]
operator|=
name|resDir
expr_stmt|;
name|qfiles
index|[
name|i
index|]
operator|=
operator|new
name|File
argument_list|(
name|inpDir
argument_list|,
name|testNames
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
name|boolean
name|success
init|=
name|QTestUtil
operator|.
name|queryListRunner
argument_list|(
name|qfiles
argument_list|,
name|resDirs
argument_list|,
name|logDirs
argument_list|,
literal|true
argument_list|,
name|this
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|success
condition|)
block|{
name|fail
argument_list|(
literal|"One or more queries failed"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

