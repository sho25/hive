begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|vector
operator|.
name|util
operator|.
name|batchgen
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|vector
operator|.
name|VectorBatchDebug
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|vector
operator|.
name|VectorizedRowBatch
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|vector
operator|.
name|util
operator|.
name|batchgen
operator|.
name|VectorBatchGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|vector
operator|.
name|util
operator|.
name|batchgen
operator|.
name|VectorBatchGenerator
operator|.
name|GenerateType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|vector
operator|.
name|util
operator|.
name|batchgen
operator|.
name|VectorBatchGenerator
operator|.
name|GenerateType
operator|.
name|GenerateCategory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_class
specifier|public
class|class
name|TestVectorBatchGenerate
block|{
annotation|@
name|Test
specifier|public
name|void
name|testTryIt
parameter_list|()
throws|throws
name|Exception
block|{
name|GenerateType
index|[]
name|generateTypes
init|=
operator|new
name|GenerateType
index|[]
block|{
operator|new
name|GenerateType
argument_list|(
name|GenerateCategory
operator|.
name|INT
argument_list|)
block|,
operator|new
name|GenerateType
argument_list|(
name|GenerateCategory
operator|.
name|BYTE
argument_list|)
block|}
decl_stmt|;
name|VectorBatchGenerator
name|generator
init|=
operator|new
name|VectorBatchGenerator
argument_list|(
name|generateTypes
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|generator
operator|.
name|createBatch
argument_list|()
decl_stmt|;
name|Random
name|random
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
name|generator
operator|.
name|generateBatch
argument_list|(
name|batch
argument_list|,
name|random
argument_list|,
name|VectorizedRowBatch
operator|.
name|DEFAULT_SIZE
argument_list|)
expr_stmt|;
name|VectorBatchDebug
operator|.
name|debugDisplayBatch
argument_list|(
name|batch
argument_list|,
literal|"testTryIt"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTryIt2
parameter_list|()
throws|throws
name|Exception
block|{
name|GenerateType
index|[]
name|generateTypes
init|=
operator|new
name|GenerateType
index|[]
block|{
operator|new
name|GenerateType
argument_list|(
name|GenerateCategory
operator|.
name|BOOLEAN
argument_list|)
block|,
operator|new
name|GenerateType
argument_list|(
name|GenerateCategory
operator|.
name|LONG
argument_list|)
block|,
operator|new
name|GenerateType
argument_list|(
name|GenerateCategory
operator|.
name|DOUBLE
argument_list|)
block|}
decl_stmt|;
name|VectorBatchGenerator
name|generator
init|=
operator|new
name|VectorBatchGenerator
argument_list|(
name|generateTypes
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|generator
operator|.
name|createBatch
argument_list|()
decl_stmt|;
name|Random
name|random
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
name|generator
operator|.
name|generateBatch
argument_list|(
name|batch
argument_list|,
name|random
argument_list|,
name|VectorizedRowBatch
operator|.
name|DEFAULT_SIZE
argument_list|)
expr_stmt|;
name|VectorBatchDebug
operator|.
name|debugDisplayBatch
argument_list|(
name|batch
argument_list|,
literal|"testTryIt2"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

