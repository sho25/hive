begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|lockmgr
operator|.
name|zookeeper
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|metrics
operator|.
name|MetricsTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|metrics
operator|.
name|common
operator|.
name|MetricsConstant
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|metrics
operator|.
name|common
operator|.
name|MetricsFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|metrics
operator|.
name|metrics2
operator|.
name|CodahaleMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|metrics
operator|.
name|metrics2
operator|.
name|MetricsReporting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|lockmgr
operator|.
name|HiveLockManagerCtx
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|lockmgr
operator|.
name|HiveLockMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|lockmgr
operator|.
name|HiveLockObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|lockmgr
operator|.
name|HiveLockObject
operator|.
name|HiveLockObjectData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|util
operator|.
name|ZooKeeperHiveHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|zookeeper
operator|.
name|KeeperException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|curator
operator|.
name|framework
operator|.
name|CuratorFramework
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|curator
operator|.
name|framework
operator|.
name|CuratorFrameworkFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|curator
operator|.
name|retry
operator|.
name|RetryOneTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|curator
operator|.
name|test
operator|.
name|TestingServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|JsonNode
import|;
end_import

begin_import
import|import
name|com
operator|.
name|fasterxml
operator|.
name|jackson
operator|.
name|databind
operator|.
name|ObjectMapper
import|;
end_import

begin_class
specifier|public
class|class
name|TestZookeeperLockManager
block|{
specifier|private
name|HiveConf
name|conf
decl_stmt|;
specifier|private
name|TestingServer
name|server
decl_stmt|;
specifier|private
name|CuratorFramework
name|client
decl_stmt|;
specifier|private
name|HiveLockObject
name|hiveLock
decl_stmt|;
specifier|private
name|ZooKeeperHiveLock
name|zLock
decl_stmt|;
specifier|private
name|HiveLockObjectData
name|lockObjData
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PARENT
init|=
literal|"hive"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TABLE
init|=
literal|"t1"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PARENT_LOCK_PATH
init|=
literal|"/hive/t1"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TABLE_LOCK_PATH
init|=
literal|"/hive/t1/00001"
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|conf
operator|=
operator|new
name|HiveConf
argument_list|()
expr_stmt|;
name|lockObjData
operator|=
operator|new
name|HiveLockObjectData
argument_list|(
literal|"1"
argument_list|,
literal|"10"
argument_list|,
literal|"SHARED"
argument_list|,
literal|"show tables"
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|hiveLock
operator|=
operator|new
name|HiveLockObject
argument_list|(
name|TABLE
argument_list|,
name|lockObjData
argument_list|)
expr_stmt|;
name|zLock
operator|=
operator|new
name|ZooKeeperHiveLock
argument_list|(
name|TABLE_LOCK_PATH
argument_list|,
name|hiveLock
argument_list|,
name|HiveLockMode
operator|.
name|SHARED
argument_list|)
expr_stmt|;
while|while
condition|(
name|server
operator|==
literal|null
condition|)
block|{
try|try
block|{
name|server
operator|=
operator|new
name|TestingServer
argument_list|()
expr_stmt|;
name|CuratorFrameworkFactory
operator|.
name|Builder
name|builder
init|=
name|CuratorFrameworkFactory
operator|.
name|builder
argument_list|()
decl_stmt|;
name|client
operator|=
name|builder
operator|.
name|connectString
argument_list|(
name|server
operator|.
name|getConnectString
argument_list|()
argument_list|)
operator|.
name|retryPolicy
argument_list|(
operator|new
name|RetryOneTime
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|client
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Getting bind exception - retrying to allocate server"
argument_list|)
expr_stmt|;
name|server
operator|=
literal|null
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|After
specifier|public
name|void
name|teardown
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
name|server
operator|.
name|close
argument_list|()
expr_stmt|;
name|server
operator|=
literal|null
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeleteNoChildren
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|create
argument_list|()
operator|.
name|creatingParentsIfNeeded
argument_list|()
operator|.
name|forPath
argument_list|(
name|TABLE_LOCK_PATH
argument_list|,
name|lockObjData
operator|.
name|toString
argument_list|()
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|byte
index|[]
name|data
init|=
name|client
operator|.
name|getData
argument_list|()
operator|.
name|forPath
argument_list|(
name|TABLE_LOCK_PATH
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
name|lockObjData
operator|.
name|toString
argument_list|()
operator|.
name|getBytes
argument_list|()
argument_list|,
name|data
argument_list|)
expr_stmt|;
name|ZooKeeperHiveLockManager
operator|.
name|unlockPrimitive
argument_list|(
name|zLock
argument_list|,
name|PARENT
argument_list|,
name|client
argument_list|)
expr_stmt|;
try|try
block|{
name|data
operator|=
name|client
operator|.
name|getData
argument_list|()
operator|.
name|forPath
argument_list|(
name|TABLE_LOCK_PATH
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|e
operator|instanceof
name|KeeperException
operator|.
name|NoNodeException
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|data
operator|=
name|client
operator|.
name|getData
argument_list|()
operator|.
name|forPath
argument_list|(
name|PARENT_LOCK_PATH
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|e
operator|instanceof
name|KeeperException
operator|.
name|NoNodeException
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetQuorumServers
parameter_list|()
block|{
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_ZOOKEEPER_QUORUM
argument_list|,
literal|"node1"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_ZOOKEEPER_CLIENT_PORT
argument_list|,
literal|"9999"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"node1:9999"
argument_list|,
name|ZooKeeperHiveHelper
operator|.
name|getQuorumServers
argument_list|(
name|conf
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_ZOOKEEPER_QUORUM
argument_list|,
literal|"node1,node2,node3"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_ZOOKEEPER_CLIENT_PORT
argument_list|,
literal|"9999"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"node1:9999,node2:9999,node3:9999"
argument_list|,
name|ZooKeeperHiveHelper
operator|.
name|getQuorumServers
argument_list|(
name|conf
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_ZOOKEEPER_QUORUM
argument_list|,
literal|"node1:5666,node2,node3"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_ZOOKEEPER_CLIENT_PORT
argument_list|,
literal|"9999"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"node1:5666,node2:9999,node3:9999"
argument_list|,
name|ZooKeeperHiveHelper
operator|.
name|getQuorumServers
argument_list|(
name|conf
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMetrics
parameter_list|()
throws|throws
name|Exception
block|{
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_ZOOKEEPER_QUORUM
argument_list|,
literal|"localhost"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_ZOOKEEPER_CLIENT_PORT
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|server
operator|.
name|getPort
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_METRICS_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SUPPORT_CONCURRENCY
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_METRICS_REPORTER
argument_list|,
name|MetricsReporting
operator|.
name|JSON_FILE
operator|.
name|name
argument_list|()
operator|+
literal|","
operator|+
name|MetricsReporting
operator|.
name|JMX
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|MetricsFactory
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|CodahaleMetrics
name|metrics
init|=
operator|(
name|CodahaleMetrics
operator|)
name|MetricsFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|HiveLockManagerCtx
name|ctx
init|=
operator|new
name|HiveLockManagerCtx
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|ZooKeeperHiveLockManager
name|zMgr
init|=
operator|new
name|ZooKeeperHiveLockManager
argument_list|()
decl_stmt|;
name|zMgr
operator|.
name|setContext
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
name|ZooKeeperHiveLock
name|curLock
init|=
name|zMgr
operator|.
name|lock
argument_list|(
name|hiveLock
argument_list|,
name|HiveLockMode
operator|.
name|SHARED
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|String
name|json
init|=
name|metrics
operator|.
name|dumpJson
argument_list|()
decl_stmt|;
name|MetricsTestUtils
operator|.
name|verifyMetricsJson
argument_list|(
name|json
argument_list|,
name|MetricsTestUtils
operator|.
name|COUNTER
argument_list|,
name|MetricsConstant
operator|.
name|ZOOKEEPER_HIVE_SHAREDLOCKS
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|zMgr
operator|.
name|unlock
argument_list|(
name|curLock
argument_list|)
expr_stmt|;
name|json
operator|=
name|metrics
operator|.
name|dumpJson
argument_list|()
expr_stmt|;
name|MetricsTestUtils
operator|.
name|verifyMetricsJson
argument_list|(
name|json
argument_list|,
name|MetricsTestUtils
operator|.
name|COUNTER
argument_list|,
name|MetricsConstant
operator|.
name|ZOOKEEPER_HIVE_SHAREDLOCKS
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|zMgr
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

