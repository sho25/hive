begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|lockmgr
operator|.
name|zookeeper
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|lockmgr
operator|.
name|HiveLockMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|lockmgr
operator|.
name|HiveLockObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|util
operator|.
name|ZooKeeperHiveHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|zookeeper
operator|.
name|KeeperException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|zookeeper
operator|.
name|ZooKeeper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Joiner
import|;
end_import

begin_class
specifier|public
class|class
name|TestZookeeperLockManager
block|{
specifier|private
specifier|static
specifier|final
name|Joiner
name|SLASH
init|=
name|Joiner
operator|.
name|on
argument_list|(
literal|"/"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PARENT
init|=
literal|"hive"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TABLE
init|=
literal|"t1"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PARENT_LOCK_PATH
init|=
name|SLASH
operator|.
name|join
argument_list|(
literal|""
argument_list|,
name|PARENT
argument_list|,
name|TABLE
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TABLE_LOCK_PATH
init|=
name|SLASH
operator|.
name|join
argument_list|(
literal|""
argument_list|,
name|PARENT
argument_list|,
name|TABLE
argument_list|,
literal|"00001"
argument_list|)
decl_stmt|;
specifier|private
name|HiveConf
name|conf
decl_stmt|;
specifier|private
name|ZooKeeper
name|zooKeeper
decl_stmt|;
specifier|private
name|HiveLockObject
name|hiveLock
decl_stmt|;
specifier|private
name|ZooKeeperHiveLock
name|zLock
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|conf
operator|=
operator|new
name|HiveConf
argument_list|()
expr_stmt|;
name|zooKeeper
operator|=
name|mock
argument_list|(
name|ZooKeeper
operator|.
name|class
argument_list|)
expr_stmt|;
name|hiveLock
operator|=
name|mock
argument_list|(
name|HiveLockObject
operator|.
name|class
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|hiveLock
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|TABLE
argument_list|)
expr_stmt|;
name|zLock
operator|=
operator|new
name|ZooKeeperHiveLock
argument_list|(
name|TABLE_LOCK_PATH
argument_list|,
name|hiveLock
argument_list|,
name|HiveLockMode
operator|.
name|SHARED
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeleteNoChildren
parameter_list|()
throws|throws
name|Exception
block|{
name|ZooKeeperHiveLockManager
operator|.
name|unlockPrimitive
argument_list|(
name|conf
argument_list|,
name|zooKeeper
argument_list|,
name|zLock
argument_list|,
name|PARENT
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|zooKeeper
argument_list|)
operator|.
name|delete
argument_list|(
name|TABLE_LOCK_PATH
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|zooKeeper
argument_list|)
operator|.
name|getChildren
argument_list|(
name|PARENT_LOCK_PATH
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|zooKeeper
argument_list|)
operator|.
name|delete
argument_list|(
name|PARENT_LOCK_PATH
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|zooKeeper
argument_list|)
expr_stmt|;
block|}
comment|/**    * Tests two threads racing to delete PARENT_LOCK_PATH    */
annotation|@
name|Test
specifier|public
name|void
name|testDeleteNoChildrenNodeDoesNotExist
parameter_list|()
throws|throws
name|Exception
block|{
name|doThrow
argument_list|(
operator|new
name|KeeperException
operator|.
name|NoNodeException
argument_list|()
argument_list|)
operator|.
name|when
argument_list|(
name|zooKeeper
argument_list|)
operator|.
name|delete
argument_list|(
name|PARENT_LOCK_PATH
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|ZooKeeperHiveLockManager
operator|.
name|unlockPrimitive
argument_list|(
name|conf
argument_list|,
name|zooKeeper
argument_list|,
name|zLock
argument_list|,
name|PARENT
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|zooKeeper
argument_list|)
operator|.
name|delete
argument_list|(
name|TABLE_LOCK_PATH
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|zooKeeper
argument_list|)
operator|.
name|getChildren
argument_list|(
name|PARENT_LOCK_PATH
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|zooKeeper
argument_list|)
operator|.
name|delete
argument_list|(
name|PARENT_LOCK_PATH
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|zooKeeper
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeleteWithChildren
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|zooKeeper
operator|.
name|getChildren
argument_list|(
name|PARENT_LOCK_PATH
argument_list|,
literal|false
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"somechild"
argument_list|)
argument_list|)
expr_stmt|;
name|ZooKeeperHiveLockManager
operator|.
name|unlockPrimitive
argument_list|(
name|conf
argument_list|,
name|zooKeeper
argument_list|,
name|zLock
argument_list|,
name|PARENT
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|zooKeeper
argument_list|)
operator|.
name|delete
argument_list|(
name|TABLE_LOCK_PATH
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|zooKeeper
argument_list|)
operator|.
name|getChildren
argument_list|(
name|PARENT_LOCK_PATH
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|zooKeeper
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetQuorumServers
parameter_list|()
block|{
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_ZOOKEEPER_QUORUM
argument_list|,
literal|"node1"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_ZOOKEEPER_CLIENT_PORT
argument_list|,
literal|"9999"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"node1:9999"
argument_list|,
name|ZooKeeperHiveHelper
operator|.
name|getQuorumServers
argument_list|(
name|conf
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_ZOOKEEPER_QUORUM
argument_list|,
literal|"node1,node2,node3"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_ZOOKEEPER_CLIENT_PORT
argument_list|,
literal|"9999"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"node1:9999,node2:9999,node3:9999"
argument_list|,
name|ZooKeeperHiveHelper
operator|.
name|getQuorumServers
argument_list|(
name|conf
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_ZOOKEEPER_QUORUM
argument_list|,
literal|"node1:5666,node2,node3"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_ZOOKEEPER_CLIENT_PORT
argument_list|,
literal|"9999"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"node1:5666,node2:9999,node3:9999"
argument_list|,
name|ZooKeeperHiveHelper
operator|.
name|getQuorumServers
argument_list|(
name|conf
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

