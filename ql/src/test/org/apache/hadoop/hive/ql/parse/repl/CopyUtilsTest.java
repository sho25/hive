begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
operator|.
name|repl
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_class
specifier|public
class|class
name|CopyUtilsTest
block|{
comment|/*   Distcp currently does not copy a single file in a distributed manner hence we dont care about   the size of file, if there is only file, we dont want to launch distcp.    */
annotation|@
name|Test
specifier|public
name|void
name|distcpShouldNotBeCalledOnlyForOneFile
parameter_list|()
block|{
name|HiveConf
name|conf
init|=
operator|new
name|HiveConf
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setLongVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_EXEC_COPYFILE_MAXSIZE
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|CopyUtils
name|copyUtils
init|=
operator|new
name|CopyUtils
argument_list|(
literal|""
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|long
name|MB_128
init|=
literal|128
operator|*
literal|1024
operator|*
literal|1024
decl_stmt|;
name|assertFalse
argument_list|(
name|copyUtils
operator|.
name|limitReachedForLocalCopy
argument_list|(
name|MB_128
argument_list|,
literal|1L
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|distcpShouldNotBeCalledForSmallerFileSize
parameter_list|()
block|{
name|HiveConf
name|conf
init|=
operator|new
name|HiveConf
argument_list|()
decl_stmt|;
name|CopyUtils
name|copyUtils
init|=
operator|new
name|CopyUtils
argument_list|(
literal|""
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|long
name|MB_16
init|=
literal|16
operator|*
literal|1024
operator|*
literal|1024
decl_stmt|;
name|assertFalse
argument_list|(
name|copyUtils
operator|.
name|limitReachedForLocalCopy
argument_list|(
name|MB_16
argument_list|,
literal|100L
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

