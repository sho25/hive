begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|CompressionKind
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|impl
operator|.
name|MemoryManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|StripeInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|ValidTxnList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|ValidReadTxnList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|AcidOutputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|AcidUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|IOConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|RecordIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|RecordUpdater
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|OrcRawRecordMerger
operator|.
name|OriginalReaderPair
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|OrcRawRecordMerger
operator|.
name|ReaderKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|OrcRawRecordMerger
operator|.
name|ReaderPair
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde
operator|.
name|serdeConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspectorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspectorUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|StructField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|StructObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|IntWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|LongWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|NullWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|InputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|InputSplit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|Reporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|OrcProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|MockSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_class
specifier|public
class|class
name|TestOrcRawRecordMerger
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TestOrcRawRecordMerger
operator|.
name|class
argument_list|)
decl_stmt|;
comment|//todo: why is statementId -1?
annotation|@
name|Test
specifier|public
name|void
name|testOrdering
parameter_list|()
throws|throws
name|Exception
block|{
name|ReaderKey
name|left
init|=
operator|new
name|ReaderKey
argument_list|(
literal|100
argument_list|,
literal|200
argument_list|,
literal|1200
argument_list|,
literal|300
argument_list|)
decl_stmt|;
name|ReaderKey
name|right
init|=
operator|new
name|ReaderKey
argument_list|()
decl_stmt|;
name|right
operator|.
name|setValues
argument_list|(
literal|100
argument_list|,
literal|200
argument_list|,
literal|1000
argument_list|,
literal|200
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|right
operator|.
name|compareTo
argument_list|(
name|left
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|left
operator|.
name|compareTo
argument_list|(
name|right
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|left
operator|.
name|equals
argument_list|(
name|right
argument_list|)
argument_list|)
expr_stmt|;
name|left
operator|.
name|set
argument_list|(
name|right
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|right
operator|.
name|compareTo
argument_list|(
name|left
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|right
operator|.
name|equals
argument_list|(
name|left
argument_list|)
argument_list|)
expr_stmt|;
name|right
operator|.
name|setRowId
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|right
operator|.
name|compareTo
argument_list|(
name|left
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
name|left
operator|.
name|setValues
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|right
operator|.
name|setValues
argument_list|(
literal|100
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|left
operator|.
name|compareTo
argument_list|(
name|right
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|right
operator|.
name|compareTo
argument_list|(
name|left
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
name|left
operator|.
name|setValues
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|right
operator|.
name|setValues
argument_list|(
literal|1
argument_list|,
literal|100
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|left
operator|.
name|compareTo
argument_list|(
name|right
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|right
operator|.
name|compareTo
argument_list|(
name|left
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
name|left
operator|.
name|setValues
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|100
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|right
operator|.
name|setValues
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|left
operator|.
name|compareTo
argument_list|(
name|right
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|right
operator|.
name|compareTo
argument_list|(
name|left
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
comment|// ensure that we are consistent when comparing to the base class
name|RecordIdentifier
name|ri
init|=
operator|new
name|RecordIdentifier
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ri
operator|.
name|compareTo
argument_list|(
name|left
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|left
operator|.
name|compareTo
argument_list|(
name|ri
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|ri
operator|.
name|equals
argument_list|(
name|left
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|left
operator|.
name|equals
argument_list|(
name|ri
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|setRow
parameter_list|(
name|OrcStruct
name|event
parameter_list|,
name|int
name|operation
parameter_list|,
name|long
name|originalTransaction
parameter_list|,
name|int
name|bucket
parameter_list|,
name|long
name|rowId
parameter_list|,
name|long
name|currentTransaction
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|event
operator|.
name|setFieldValue
argument_list|(
name|OrcRecordUpdater
operator|.
name|OPERATION
argument_list|,
operator|new
name|IntWritable
argument_list|(
name|operation
argument_list|)
argument_list|)
expr_stmt|;
name|event
operator|.
name|setFieldValue
argument_list|(
name|OrcRecordUpdater
operator|.
name|ORIGINAL_TRANSACTION
argument_list|,
operator|new
name|LongWritable
argument_list|(
name|originalTransaction
argument_list|)
argument_list|)
expr_stmt|;
name|event
operator|.
name|setFieldValue
argument_list|(
name|OrcRecordUpdater
operator|.
name|BUCKET
argument_list|,
operator|new
name|IntWritable
argument_list|(
name|bucket
argument_list|)
argument_list|)
expr_stmt|;
name|event
operator|.
name|setFieldValue
argument_list|(
name|OrcRecordUpdater
operator|.
name|ROW_ID
argument_list|,
operator|new
name|LongWritable
argument_list|(
name|rowId
argument_list|)
argument_list|)
expr_stmt|;
name|event
operator|.
name|setFieldValue
argument_list|(
name|OrcRecordUpdater
operator|.
name|CURRENT_TRANSACTION
argument_list|,
operator|new
name|LongWritable
argument_list|(
name|currentTransaction
argument_list|)
argument_list|)
expr_stmt|;
name|OrcStruct
name|row
init|=
operator|new
name|OrcStruct
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|row
operator|.
name|setFieldValue
argument_list|(
literal|0
argument_list|,
operator|new
name|Text
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
name|event
operator|.
name|setFieldValue
argument_list|(
name|OrcRecordUpdater
operator|.
name|ROW
argument_list|,
name|row
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|String
name|value
parameter_list|(
name|OrcStruct
name|event
parameter_list|)
block|{
return|return
name|OrcRecordUpdater
operator|.
name|getRow
argument_list|(
name|event
argument_list|)
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|private
name|List
argument_list|<
name|StripeInformation
argument_list|>
name|createStripes
parameter_list|(
name|long
modifier|...
name|rowCounts
parameter_list|)
block|{
name|long
name|offset
init|=
literal|0
decl_stmt|;
name|List
argument_list|<
name|StripeInformation
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<
name|StripeInformation
argument_list|>
argument_list|(
name|rowCounts
operator|.
name|length
argument_list|)
decl_stmt|;
for|for
control|(
name|long
name|count
range|:
name|rowCounts
control|)
block|{
name|OrcProto
operator|.
name|StripeInformation
operator|.
name|Builder
name|stripe
init|=
name|OrcProto
operator|.
name|StripeInformation
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|stripe
operator|.
name|setDataLength
argument_list|(
literal|800
argument_list|)
operator|.
name|setIndexLength
argument_list|(
literal|100
argument_list|)
operator|.
name|setFooterLength
argument_list|(
literal|100
argument_list|)
operator|.
name|setNumberOfRows
argument_list|(
name|count
argument_list|)
operator|.
name|setOffset
argument_list|(
name|offset
argument_list|)
expr_stmt|;
name|offset
operator|+=
literal|1000
expr_stmt|;
name|result
operator|.
name|add
argument_list|(
operator|new
name|ReaderImpl
operator|.
name|StripeInformationImpl
argument_list|(
name|stripe
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
comment|// can add .verboseLogging() to cause Mockito to log invocations
specifier|private
specifier|final
name|MockSettings
name|settings
init|=
name|Mockito
operator|.
name|withSettings
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|Path
name|tmpDir
init|=
operator|new
name|Path
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"test.tmp.dir"
argument_list|,
literal|"target"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"test"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"tmp"
argument_list|)
argument_list|)
decl_stmt|;
specifier|private
name|Reader
name|createMockReader
parameter_list|()
throws|throws
name|IOException
block|{
name|Reader
name|reader
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Reader
operator|.
name|class
argument_list|,
name|settings
argument_list|)
decl_stmt|;
name|RecordReader
name|recordReader
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|RecordReader
operator|.
name|class
argument_list|,
name|settings
argument_list|)
decl_stmt|;
name|OrcStruct
name|row1
init|=
operator|new
name|OrcStruct
argument_list|(
name|OrcRecordUpdater
operator|.
name|FIELDS
argument_list|)
decl_stmt|;
name|setRow
argument_list|(
name|row1
argument_list|,
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
literal|10
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|,
literal|100
argument_list|,
literal|"first"
argument_list|)
expr_stmt|;
name|OrcStruct
name|row2
init|=
operator|new
name|OrcStruct
argument_list|(
name|OrcRecordUpdater
operator|.
name|FIELDS
argument_list|)
decl_stmt|;
name|setRow
argument_list|(
name|row2
argument_list|,
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|110
argument_list|,
literal|"second"
argument_list|)
expr_stmt|;
name|OrcStruct
name|row3
init|=
operator|new
name|OrcStruct
argument_list|(
name|OrcRecordUpdater
operator|.
name|FIELDS
argument_list|)
decl_stmt|;
name|setRow
argument_list|(
name|row3
argument_list|,
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
literal|10
argument_list|,
literal|20
argument_list|,
literal|40
argument_list|,
literal|120
argument_list|,
literal|"third"
argument_list|)
expr_stmt|;
name|OrcStruct
name|row4
init|=
operator|new
name|OrcStruct
argument_list|(
name|OrcRecordUpdater
operator|.
name|FIELDS
argument_list|)
decl_stmt|;
name|setRow
argument_list|(
name|row4
argument_list|,
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
literal|40
argument_list|,
literal|50
argument_list|,
literal|60
argument_list|,
literal|130
argument_list|,
literal|"fourth"
argument_list|)
expr_stmt|;
name|OrcStruct
name|row5
init|=
operator|new
name|OrcStruct
argument_list|(
name|OrcRecordUpdater
operator|.
name|FIELDS
argument_list|)
decl_stmt|;
name|setRow
argument_list|(
name|row5
argument_list|,
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
literal|40
argument_list|,
literal|50
argument_list|,
literal|61
argument_list|,
literal|140
argument_list|,
literal|"fifth"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|reader
operator|.
name|rowsOptions
argument_list|(
name|Mockito
operator|.
name|any
argument_list|(
name|Reader
operator|.
name|Options
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|recordReader
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|recordReader
operator|.
name|hasNext
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|recordReader
operator|.
name|getProgress
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|1.0f
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|recordReader
operator|.
name|next
argument_list|(
literal|null
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|row1
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|recordReader
operator|.
name|next
argument_list|(
name|row1
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|row2
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|recordReader
operator|.
name|next
argument_list|(
name|row2
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|row3
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|recordReader
operator|.
name|next
argument_list|(
name|row3
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|row4
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|recordReader
operator|.
name|next
argument_list|(
name|row4
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|row5
argument_list|)
expr_stmt|;
return|return
name|reader
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReaderPair
parameter_list|()
throws|throws
name|Exception
block|{
name|ReaderKey
name|key
init|=
operator|new
name|ReaderKey
argument_list|()
decl_stmt|;
name|Reader
name|reader
init|=
name|createMockReader
argument_list|()
decl_stmt|;
name|RecordIdentifier
name|minKey
init|=
operator|new
name|RecordIdentifier
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|)
decl_stmt|;
name|RecordIdentifier
name|maxKey
init|=
operator|new
name|RecordIdentifier
argument_list|(
literal|40
argument_list|,
literal|50
argument_list|,
literal|60
argument_list|)
decl_stmt|;
name|ReaderPair
name|pair
init|=
operator|new
name|ReaderPair
argument_list|(
name|key
argument_list|,
name|reader
argument_list|,
literal|20
argument_list|,
name|minKey
argument_list|,
name|maxKey
argument_list|,
operator|new
name|Reader
operator|.
name|Options
argument_list|()
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|RecordReader
name|recordReader
init|=
name|pair
operator|.
name|recordReader
decl_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|key
operator|.
name|getTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|20
argument_list|,
name|key
operator|.
name|getBucketId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|40
argument_list|,
name|key
operator|.
name|getRowId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|120
argument_list|,
name|key
operator|.
name|getCurrentTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"third"
argument_list|,
name|value
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
argument_list|)
expr_stmt|;
name|pair
operator|.
name|next
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|40
argument_list|,
name|key
operator|.
name|getTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|50
argument_list|,
name|key
operator|.
name|getBucketId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|60
argument_list|,
name|key
operator|.
name|getRowId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|130
argument_list|,
name|key
operator|.
name|getCurrentTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"fourth"
argument_list|,
name|value
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
argument_list|)
expr_stmt|;
name|pair
operator|.
name|next
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|pair
operator|.
name|nextRecord
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|recordReader
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReaderPairNoMin
parameter_list|()
throws|throws
name|Exception
block|{
name|ReaderKey
name|key
init|=
operator|new
name|ReaderKey
argument_list|()
decl_stmt|;
name|Reader
name|reader
init|=
name|createMockReader
argument_list|()
decl_stmt|;
name|ReaderPair
name|pair
init|=
operator|new
name|ReaderPair
argument_list|(
name|key
argument_list|,
name|reader
argument_list|,
literal|20
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|Reader
operator|.
name|Options
argument_list|()
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|RecordReader
name|recordReader
init|=
name|pair
operator|.
name|recordReader
decl_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|key
operator|.
name|getTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|20
argument_list|,
name|key
operator|.
name|getBucketId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|20
argument_list|,
name|key
operator|.
name|getRowId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|100
argument_list|,
name|key
operator|.
name|getCurrentTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"first"
argument_list|,
name|value
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
argument_list|)
expr_stmt|;
name|pair
operator|.
name|next
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|key
operator|.
name|getTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|20
argument_list|,
name|key
operator|.
name|getBucketId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|30
argument_list|,
name|key
operator|.
name|getRowId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|110
argument_list|,
name|key
operator|.
name|getCurrentTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"second"
argument_list|,
name|value
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
argument_list|)
expr_stmt|;
name|pair
operator|.
name|next
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|key
operator|.
name|getTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|20
argument_list|,
name|key
operator|.
name|getBucketId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|40
argument_list|,
name|key
operator|.
name|getRowId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|120
argument_list|,
name|key
operator|.
name|getCurrentTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"third"
argument_list|,
name|value
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
argument_list|)
expr_stmt|;
name|pair
operator|.
name|next
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|40
argument_list|,
name|key
operator|.
name|getTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|50
argument_list|,
name|key
operator|.
name|getBucketId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|60
argument_list|,
name|key
operator|.
name|getRowId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|130
argument_list|,
name|key
operator|.
name|getCurrentTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"fourth"
argument_list|,
name|value
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
argument_list|)
expr_stmt|;
name|pair
operator|.
name|next
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|40
argument_list|,
name|key
operator|.
name|getTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|50
argument_list|,
name|key
operator|.
name|getBucketId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|61
argument_list|,
name|key
operator|.
name|getRowId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|140
argument_list|,
name|key
operator|.
name|getCurrentTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"fifth"
argument_list|,
name|value
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
argument_list|)
expr_stmt|;
name|pair
operator|.
name|next
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|pair
operator|.
name|nextRecord
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|recordReader
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
name|OrcStruct
name|createOriginalRow
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|OrcStruct
name|result
init|=
operator|new
name|OrcStruct
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|result
operator|.
name|setFieldValue
argument_list|(
literal|0
argument_list|,
operator|new
name|Text
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|private
name|Reader
name|createMockOriginalReader
parameter_list|()
throws|throws
name|IOException
block|{
name|Reader
name|reader
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Reader
operator|.
name|class
argument_list|,
name|settings
argument_list|)
decl_stmt|;
name|RecordReader
name|recordReader
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|RecordReader
operator|.
name|class
argument_list|,
name|settings
argument_list|)
decl_stmt|;
name|OrcStruct
name|row1
init|=
name|createOriginalRow
argument_list|(
literal|"first"
argument_list|)
decl_stmt|;
name|OrcStruct
name|row2
init|=
name|createOriginalRow
argument_list|(
literal|"second"
argument_list|)
decl_stmt|;
name|OrcStruct
name|row3
init|=
name|createOriginalRow
argument_list|(
literal|"third"
argument_list|)
decl_stmt|;
name|OrcStruct
name|row4
init|=
name|createOriginalRow
argument_list|(
literal|"fourth"
argument_list|)
decl_stmt|;
name|OrcStruct
name|row5
init|=
name|createOriginalRow
argument_list|(
literal|"fifth"
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|reader
operator|.
name|rowsOptions
argument_list|(
name|Mockito
operator|.
name|any
argument_list|(
name|Reader
operator|.
name|Options
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|recordReader
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|recordReader
operator|.
name|hasNext
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|recordReader
operator|.
name|getRowNumber
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|0L
argument_list|,
literal|1L
argument_list|,
literal|2L
argument_list|,
literal|3L
argument_list|,
literal|4L
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|recordReader
operator|.
name|next
argument_list|(
literal|null
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|row1
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|recordReader
operator|.
name|next
argument_list|(
name|row1
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|row2
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|recordReader
operator|.
name|next
argument_list|(
name|row2
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|row3
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|recordReader
operator|.
name|next
argument_list|(
name|row3
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|row4
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|recordReader
operator|.
name|next
argument_list|(
name|row4
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|row5
argument_list|)
expr_stmt|;
return|return
name|reader
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOriginalReaderPair
parameter_list|()
throws|throws
name|Exception
block|{
name|ReaderKey
name|key
init|=
operator|new
name|ReaderKey
argument_list|()
decl_stmt|;
name|Reader
name|reader
init|=
name|createMockOriginalReader
argument_list|()
decl_stmt|;
name|RecordIdentifier
name|minKey
init|=
operator|new
name|RecordIdentifier
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|RecordIdentifier
name|maxKey
init|=
operator|new
name|RecordIdentifier
argument_list|(
literal|0
argument_list|,
literal|10
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|boolean
index|[]
name|includes
init|=
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|true
block|}
decl_stmt|;
name|ReaderPair
name|pair
init|=
operator|new
name|OriginalReaderPair
argument_list|(
name|key
argument_list|,
name|reader
argument_list|,
literal|10
argument_list|,
name|minKey
argument_list|,
name|maxKey
argument_list|,
operator|new
name|Reader
operator|.
name|Options
argument_list|()
operator|.
name|include
argument_list|(
name|includes
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|recordReader
init|=
name|pair
operator|.
name|recordReader
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|key
operator|.
name|getTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|key
operator|.
name|getBucketId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|key
operator|.
name|getRowId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|key
operator|.
name|getCurrentTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"third"
argument_list|,
name|value
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
argument_list|)
expr_stmt|;
name|pair
operator|.
name|next
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|key
operator|.
name|getTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|key
operator|.
name|getBucketId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|key
operator|.
name|getRowId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|key
operator|.
name|getCurrentTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"fourth"
argument_list|,
name|value
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
argument_list|)
expr_stmt|;
name|pair
operator|.
name|next
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|pair
operator|.
name|nextRecord
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|recordReader
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
name|ValidTxnList
name|createMaximalTxnList
parameter_list|()
block|{
return|return
operator|new
name|ValidReadTxnList
argument_list|()
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOriginalReaderPairNoMin
parameter_list|()
throws|throws
name|Exception
block|{
name|ReaderKey
name|key
init|=
operator|new
name|ReaderKey
argument_list|()
decl_stmt|;
name|Reader
name|reader
init|=
name|createMockOriginalReader
argument_list|()
decl_stmt|;
name|ReaderPair
name|pair
init|=
operator|new
name|OriginalReaderPair
argument_list|(
name|key
argument_list|,
name|reader
argument_list|,
literal|10
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|Reader
operator|.
name|Options
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"first"
argument_list|,
name|value
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|key
operator|.
name|getTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|key
operator|.
name|getBucketId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|key
operator|.
name|getRowId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|key
operator|.
name|getCurrentTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|pair
operator|.
name|next
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"second"
argument_list|,
name|value
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|key
operator|.
name|getTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|key
operator|.
name|getBucketId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|key
operator|.
name|getRowId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|key
operator|.
name|getCurrentTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|pair
operator|.
name|next
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"third"
argument_list|,
name|value
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|key
operator|.
name|getTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|key
operator|.
name|getBucketId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|key
operator|.
name|getRowId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|key
operator|.
name|getCurrentTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|pair
operator|.
name|next
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"fourth"
argument_list|,
name|value
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|key
operator|.
name|getTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|key
operator|.
name|getBucketId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|key
operator|.
name|getRowId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|key
operator|.
name|getCurrentTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|pair
operator|.
name|next
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"fifth"
argument_list|,
name|value
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|key
operator|.
name|getTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|key
operator|.
name|getBucketId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|key
operator|.
name|getRowId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|key
operator|.
name|getCurrentTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|pair
operator|.
name|next
argument_list|(
name|pair
operator|.
name|nextRecord
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|pair
operator|.
name|nextRecord
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|pair
operator|.
name|recordReader
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNewBase
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|IOConstants
operator|.
name|SCHEMA_EVOLUTION_COLUMNS
argument_list|,
literal|"col1"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|IOConstants
operator|.
name|SCHEMA_EVOLUTION_COLUMNS_TYPES
argument_list|,
literal|"string"
argument_list|)
expr_stmt|;
name|HiveConf
operator|.
name|setBoolVar
argument_list|(
name|conf
argument_list|,
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_TRANSACTIONAL_TABLE_SCAN
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Reader
name|reader
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Reader
operator|.
name|class
argument_list|,
name|settings
argument_list|)
decl_stmt|;
name|RecordReader
name|recordReader
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|RecordReader
operator|.
name|class
argument_list|,
name|settings
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|OrcProto
operator|.
name|Type
argument_list|>
name|types
init|=
operator|new
name|ArrayList
argument_list|<
name|OrcProto
operator|.
name|Type
argument_list|>
argument_list|()
decl_stmt|;
name|OrcProto
operator|.
name|Type
operator|.
name|Builder
name|typeBuilder
init|=
name|OrcProto
operator|.
name|Type
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|typeBuilder
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|STRUCT
argument_list|)
operator|.
name|addSubtypes
argument_list|(
literal|1
argument_list|)
operator|.
name|addSubtypes
argument_list|(
literal|2
argument_list|)
operator|.
name|addSubtypes
argument_list|(
literal|3
argument_list|)
operator|.
name|addSubtypes
argument_list|(
literal|4
argument_list|)
operator|.
name|addSubtypes
argument_list|(
literal|5
argument_list|)
operator|.
name|addSubtypes
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|typeBuilder
operator|.
name|addAllFieldNames
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"operation"
argument_list|,
literal|"originalTransaction"
argument_list|,
literal|"bucket"
argument_list|,
literal|"rowId"
argument_list|,
literal|"currentTransaction"
argument_list|,
literal|"row"
argument_list|)
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|typeBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|typeBuilder
operator|.
name|clearSubtypes
argument_list|()
expr_stmt|;
name|typeBuilder
operator|.
name|addSubtypes
argument_list|(
literal|7
argument_list|)
expr_stmt|;
name|typeBuilder
operator|.
name|addAllFieldNames
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"col1"
argument_list|)
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|typeBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|typeBuilder
operator|.
name|clear
argument_list|()
expr_stmt|;
name|typeBuilder
operator|.
name|setKind
argument_list|(
name|OrcProto
operator|.
name|Type
operator|.
name|Kind
operator|.
name|STRING
argument_list|)
expr_stmt|;
name|types
operator|.
name|add
argument_list|(
name|typeBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|reader
operator|.
name|getTypes
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|types
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|reader
operator|.
name|rowsOptions
argument_list|(
name|Mockito
operator|.
name|any
argument_list|(
name|Reader
operator|.
name|Options
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|recordReader
argument_list|)
expr_stmt|;
name|OrcStruct
name|row1
init|=
operator|new
name|OrcStruct
argument_list|(
name|OrcRecordUpdater
operator|.
name|FIELDS
argument_list|)
decl_stmt|;
name|setRow
argument_list|(
name|row1
argument_list|,
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
literal|10
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|,
literal|100
argument_list|,
literal|"first"
argument_list|)
expr_stmt|;
name|OrcStruct
name|row2
init|=
operator|new
name|OrcStruct
argument_list|(
name|OrcRecordUpdater
operator|.
name|FIELDS
argument_list|)
decl_stmt|;
name|setRow
argument_list|(
name|row2
argument_list|,
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|110
argument_list|,
literal|"second"
argument_list|)
expr_stmt|;
name|OrcStruct
name|row3
init|=
operator|new
name|OrcStruct
argument_list|(
name|OrcRecordUpdater
operator|.
name|FIELDS
argument_list|)
decl_stmt|;
name|setRow
argument_list|(
name|row3
argument_list|,
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
literal|10
argument_list|,
literal|20
argument_list|,
literal|40
argument_list|,
literal|120
argument_list|,
literal|"third"
argument_list|)
expr_stmt|;
name|OrcStruct
name|row4
init|=
operator|new
name|OrcStruct
argument_list|(
name|OrcRecordUpdater
operator|.
name|FIELDS
argument_list|)
decl_stmt|;
name|setRow
argument_list|(
name|row4
argument_list|,
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
literal|40
argument_list|,
literal|50
argument_list|,
literal|60
argument_list|,
literal|130
argument_list|,
literal|"fourth"
argument_list|)
expr_stmt|;
name|OrcStruct
name|row5
init|=
operator|new
name|OrcStruct
argument_list|(
name|OrcRecordUpdater
operator|.
name|FIELDS
argument_list|)
decl_stmt|;
name|setRow
argument_list|(
name|row5
argument_list|,
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
literal|40
argument_list|,
literal|50
argument_list|,
literal|61
argument_list|,
literal|140
argument_list|,
literal|"fifth"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|recordReader
operator|.
name|hasNext
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|recordReader
operator|.
name|getProgress
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|1.0f
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|recordReader
operator|.
name|next
argument_list|(
literal|null
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|row1
argument_list|,
name|row4
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|recordReader
operator|.
name|next
argument_list|(
name|row1
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|row2
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|recordReader
operator|.
name|next
argument_list|(
name|row2
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|row3
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|recordReader
operator|.
name|next
argument_list|(
name|row3
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|row5
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|reader
operator|.
name|getMetadataValue
argument_list|(
name|OrcRecordUpdater
operator|.
name|ACID_KEY_INDEX_NAME
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ByteBuffer
operator|.
name|wrap
argument_list|(
literal|"10,20,30;40,50,60;40,50,61"
operator|.
name|getBytes
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|reader
operator|.
name|getStripes
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|createStripes
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|OrcRawRecordMerger
name|merger
init|=
operator|new
name|OrcRawRecordMerger
argument_list|(
name|conf
argument_list|,
literal|false
argument_list|,
name|reader
argument_list|,
literal|false
argument_list|,
literal|10
argument_list|,
name|createMaximalTxnList
argument_list|()
argument_list|,
operator|new
name|Reader
operator|.
name|Options
argument_list|()
operator|.
name|range
argument_list|(
literal|1000
argument_list|,
literal|1000
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|RecordReader
name|rr
init|=
name|merger
operator|.
name|getCurrentReader
argument_list|()
operator|.
name|recordReader
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|merger
operator|.
name|getOtherReaders
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|RecordIdentifier
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|)
argument_list|,
name|merger
operator|.
name|getMinKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|RecordIdentifier
argument_list|(
literal|40
argument_list|,
literal|50
argument_list|,
literal|60
argument_list|)
argument_list|,
name|merger
operator|.
name|getMaxKey
argument_list|()
argument_list|)
expr_stmt|;
name|RecordIdentifier
name|id
init|=
name|merger
operator|.
name|createKey
argument_list|()
decl_stmt|;
name|OrcStruct
name|event
init|=
name|merger
operator|.
name|createValue
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|id
operator|.
name|getTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|20
argument_list|,
name|id
operator|.
name|getBucketId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|40
argument_list|,
name|id
operator|.
name|getRowId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"third"
argument_list|,
name|getValue
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|40
argument_list|,
name|id
operator|.
name|getTransactionId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|50
argument_list|,
name|id
operator|.
name|getBucketId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|60
argument_list|,
name|id
operator|.
name|getRowId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"fourth"
argument_list|,
name|getValue
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1.0
argument_list|,
name|merger
operator|.
name|getProgress
argument_list|()
argument_list|,
literal|0.01
argument_list|)
expr_stmt|;
name|merger
operator|.
name|close
argument_list|()
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|rr
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|rr
argument_list|)
operator|.
name|getProgress
argument_list|()
expr_stmt|;
name|StructObjectInspector
name|eventObjectInspector
init|=
operator|(
name|StructObjectInspector
operator|)
name|merger
operator|.
name|getObjectInspector
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|StructField
argument_list|>
name|fields
init|=
name|eventObjectInspector
operator|.
name|getAllStructFieldRefs
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|FIELDS
argument_list|,
name|fields
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"operation"
argument_list|,
name|fields
operator|.
name|get
argument_list|(
name|OrcRecordUpdater
operator|.
name|OPERATION
argument_list|)
operator|.
name|getFieldName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"currentTransaction"
argument_list|,
name|fields
operator|.
name|get
argument_list|(
name|OrcRecordUpdater
operator|.
name|CURRENT_TRANSACTION
argument_list|)
operator|.
name|getFieldName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"originalTransaction"
argument_list|,
name|fields
operator|.
name|get
argument_list|(
name|OrcRecordUpdater
operator|.
name|ORIGINAL_TRANSACTION
argument_list|)
operator|.
name|getFieldName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bucket"
argument_list|,
name|fields
operator|.
name|get
argument_list|(
name|OrcRecordUpdater
operator|.
name|BUCKET
argument_list|)
operator|.
name|getFieldName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"rowId"
argument_list|,
name|fields
operator|.
name|get
argument_list|(
name|OrcRecordUpdater
operator|.
name|ROW_ID
argument_list|)
operator|.
name|getFieldName
argument_list|()
argument_list|)
expr_stmt|;
name|StructObjectInspector
name|rowObjectInspector
init|=
operator|(
name|StructObjectInspector
operator|)
name|fields
operator|.
name|get
argument_list|(
name|OrcRecordUpdater
operator|.
name|ROW
argument_list|)
operator|.
name|getFieldObjectInspector
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"col1"
argument_list|,
name|rowObjectInspector
operator|.
name|getAllStructFieldRefs
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getFieldName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|static
class|class
name|MyRow
block|{
name|Text
name|col1
decl_stmt|;
name|RecordIdentifier
name|ROW__ID
decl_stmt|;
name|MyRow
parameter_list|(
name|String
name|val
parameter_list|)
block|{
name|col1
operator|=
operator|new
name|Text
argument_list|(
name|val
argument_list|)
expr_stmt|;
block|}
name|MyRow
parameter_list|(
name|String
name|val
parameter_list|,
name|long
name|rowId
parameter_list|,
name|long
name|origTxn
parameter_list|,
name|int
name|bucket
parameter_list|)
block|{
name|col1
operator|=
operator|new
name|Text
argument_list|(
name|val
argument_list|)
expr_stmt|;
name|ROW__ID
operator|=
operator|new
name|RecordIdentifier
argument_list|(
name|origTxn
argument_list|,
name|bucket
argument_list|,
name|rowId
argument_list|)
expr_stmt|;
block|}
specifier|static
name|String
name|getColumnNamesProperty
parameter_list|()
block|{
return|return
literal|"col1,ROW__ID"
return|;
block|}
specifier|static
name|String
name|getColumnTypesProperty
parameter_list|()
block|{
return|return
literal|"string:struct<transactionId:bigint,bucketId:int,rowId:bigint>"
return|;
block|}
block|}
specifier|static
name|String
name|getValue
parameter_list|(
name|OrcStruct
name|event
parameter_list|)
block|{
return|return
name|OrcRecordUpdater
operator|.
name|getRow
argument_list|(
name|event
argument_list|)
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEmpty
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|int
name|BUCKET
init|=
literal|0
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|OrcOutputFormat
name|of
init|=
operator|new
name|OrcOutputFormat
argument_list|()
decl_stmt|;
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|getLocal
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|Path
name|root
init|=
operator|new
name|Path
argument_list|(
name|tmpDir
argument_list|,
literal|"testEmpty"
argument_list|)
operator|.
name|makeQualified
argument_list|(
name|fs
argument_list|)
decl_stmt|;
name|fs
operator|.
name|delete
argument_list|(
name|root
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcFile
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|MyRow
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
comment|// write the empty base
name|AcidOutputFormat
operator|.
name|Options
name|options
init|=
operator|new
name|AcidOutputFormat
operator|.
name|Options
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|bucket
argument_list|(
name|BUCKET
argument_list|)
operator|.
name|writingBase
argument_list|(
literal|true
argument_list|)
operator|.
name|maximumTransactionId
argument_list|(
literal|100
argument_list|)
operator|.
name|finalDestination
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|of
operator|.
name|getRecordUpdater
argument_list|(
name|root
argument_list|,
name|options
argument_list|)
operator|.
name|close
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|ValidTxnList
name|txnList
init|=
operator|new
name|ValidReadTxnList
argument_list|(
literal|"200:"
operator|+
name|Long
operator|.
name|MAX_VALUE
argument_list|)
decl_stmt|;
name|AcidUtils
operator|.
name|Directory
name|directory
init|=
name|AcidUtils
operator|.
name|getAcidState
argument_list|(
name|root
argument_list|,
name|conf
argument_list|,
name|txnList
argument_list|)
decl_stmt|;
name|Path
name|basePath
init|=
name|AcidUtils
operator|.
name|createBucketFile
argument_list|(
name|directory
operator|.
name|getBaseDirectory
argument_list|()
argument_list|,
name|BUCKET
argument_list|)
decl_stmt|;
name|Reader
name|baseReader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|basePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
argument_list|)
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|IOConstants
operator|.
name|SCHEMA_EVOLUTION_COLUMNS
argument_list|,
name|MyRow
operator|.
name|getColumnNamesProperty
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|IOConstants
operator|.
name|SCHEMA_EVOLUTION_COLUMNS_TYPES
argument_list|,
name|MyRow
operator|.
name|getColumnTypesProperty
argument_list|()
argument_list|)
expr_stmt|;
name|HiveConf
operator|.
name|setBoolVar
argument_list|(
name|conf
argument_list|,
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_TRANSACTIONAL_TABLE_SCAN
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|OrcRawRecordMerger
name|merger
init|=
operator|new
name|OrcRawRecordMerger
argument_list|(
name|conf
argument_list|,
literal|true
argument_list|,
name|baseReader
argument_list|,
literal|false
argument_list|,
name|BUCKET
argument_list|,
name|createMaximalTxnList
argument_list|()
argument_list|,
operator|new
name|Reader
operator|.
name|Options
argument_list|()
argument_list|,
name|AcidUtils
operator|.
name|getPaths
argument_list|(
name|directory
operator|.
name|getCurrentDirectories
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|RecordIdentifier
name|key
init|=
name|merger
operator|.
name|createKey
argument_list|()
decl_stmt|;
name|OrcStruct
name|value
init|=
name|merger
operator|.
name|createValue
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test the OrcRecordUpdater with the OrcRawRecordMerger when there is    * a base and a delta.    * @throws Exception    */
annotation|@
name|Test
specifier|public
name|void
name|testNewBaseAndDelta
parameter_list|()
throws|throws
name|Exception
block|{
name|testNewBaseAndDelta
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|testNewBaseAndDelta
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|testNewBaseAndDelta
parameter_list|(
name|boolean
name|use130Format
parameter_list|)
throws|throws
name|Exception
block|{
specifier|final
name|int
name|BUCKET
init|=
literal|10
decl_stmt|;
name|String
index|[]
name|values
init|=
operator|new
name|String
index|[]
block|{
literal|"first"
block|,
literal|"second"
block|,
literal|"third"
block|,
literal|"fourth"
block|,
literal|"fifth"
block|,
literal|"sixth"
block|,
literal|"seventh"
block|,
literal|"eighth"
block|,
literal|"ninth"
block|,
literal|"tenth"
block|}
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|OrcOutputFormat
name|of
init|=
operator|new
name|OrcOutputFormat
argument_list|()
decl_stmt|;
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|getLocal
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|Path
name|root
init|=
operator|new
name|Path
argument_list|(
name|tmpDir
argument_list|,
literal|"testNewBaseAndDelta"
argument_list|)
operator|.
name|makeQualified
argument_list|(
name|fs
argument_list|)
decl_stmt|;
name|fs
operator|.
name|delete
argument_list|(
name|root
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcFile
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|MyRow
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
comment|// write the base
name|AcidOutputFormat
operator|.
name|Options
name|options
init|=
operator|new
name|AcidOutputFormat
operator|.
name|Options
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|bucket
argument_list|(
name|BUCKET
argument_list|)
operator|.
name|finalDestination
argument_list|(
name|root
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|use130Format
condition|)
block|{
name|options
operator|.
name|statementId
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|RecordUpdater
name|ru
init|=
name|of
operator|.
name|getRecordUpdater
argument_list|(
name|root
argument_list|,
name|options
operator|.
name|writingBase
argument_list|(
literal|true
argument_list|)
operator|.
name|maximumTransactionId
argument_list|(
literal|100
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|v
range|:
name|values
control|)
block|{
name|ru
operator|.
name|insert
argument_list|(
literal|0
argument_list|,
operator|new
name|MyRow
argument_list|(
name|v
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|ru
operator|.
name|close
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// write a delta
name|ru
operator|=
name|of
operator|.
name|getRecordUpdater
argument_list|(
name|root
argument_list|,
name|options
operator|.
name|writingBase
argument_list|(
literal|false
argument_list|)
operator|.
name|minimumTransactionId
argument_list|(
literal|200
argument_list|)
operator|.
name|maximumTransactionId
argument_list|(
literal|200
argument_list|)
operator|.
name|recordIdColumn
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|ru
operator|.
name|update
argument_list|(
literal|200
argument_list|,
operator|new
name|MyRow
argument_list|(
literal|"update 1"
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|BUCKET
argument_list|)
argument_list|)
expr_stmt|;
name|ru
operator|.
name|update
argument_list|(
literal|200
argument_list|,
operator|new
name|MyRow
argument_list|(
literal|"update 2"
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|,
name|BUCKET
argument_list|)
argument_list|)
expr_stmt|;
name|ru
operator|.
name|update
argument_list|(
literal|200
argument_list|,
operator|new
name|MyRow
argument_list|(
literal|"update 3"
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|,
name|BUCKET
argument_list|)
argument_list|)
expr_stmt|;
name|ru
operator|.
name|delete
argument_list|(
literal|200
argument_list|,
operator|new
name|MyRow
argument_list|(
literal|""
argument_list|,
literal|7
argument_list|,
literal|0
argument_list|,
name|BUCKET
argument_list|)
argument_list|)
expr_stmt|;
name|ru
operator|.
name|delete
argument_list|(
literal|200
argument_list|,
operator|new
name|MyRow
argument_list|(
literal|""
argument_list|,
literal|8
argument_list|,
literal|0
argument_list|,
name|BUCKET
argument_list|)
argument_list|)
expr_stmt|;
name|ru
operator|.
name|close
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|ValidTxnList
name|txnList
init|=
operator|new
name|ValidReadTxnList
argument_list|(
literal|"200:"
operator|+
name|Long
operator|.
name|MAX_VALUE
argument_list|)
decl_stmt|;
name|AcidUtils
operator|.
name|Directory
name|directory
init|=
name|AcidUtils
operator|.
name|getAcidState
argument_list|(
name|root
argument_list|,
name|conf
argument_list|,
name|txnList
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Path
argument_list|(
name|root
argument_list|,
literal|"base_0000100"
argument_list|)
argument_list|,
name|directory
operator|.
name|getBaseDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Path
argument_list|(
name|root
argument_list|,
name|use130Format
condition|?
name|AcidUtils
operator|.
name|deltaSubdir
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|,
literal|0
argument_list|)
else|:
name|AcidUtils
operator|.
name|deltaSubdir
argument_list|(
literal|200
argument_list|,
literal|200
argument_list|)
argument_list|)
argument_list|,
name|directory
operator|.
name|getCurrentDirectories
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|Path
name|basePath
init|=
name|AcidUtils
operator|.
name|createBucketFile
argument_list|(
name|directory
operator|.
name|getBaseDirectory
argument_list|()
argument_list|,
name|BUCKET
argument_list|)
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|IOConstants
operator|.
name|SCHEMA_EVOLUTION_COLUMNS
argument_list|,
name|MyRow
operator|.
name|getColumnNamesProperty
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|IOConstants
operator|.
name|SCHEMA_EVOLUTION_COLUMNS_TYPES
argument_list|,
name|MyRow
operator|.
name|getColumnTypesProperty
argument_list|()
argument_list|)
expr_stmt|;
name|HiveConf
operator|.
name|setBoolVar
argument_list|(
name|conf
argument_list|,
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_TRANSACTIONAL_TABLE_SCAN
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Reader
name|baseReader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|basePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
argument_list|)
decl_stmt|;
name|OrcRawRecordMerger
name|merger
init|=
operator|new
name|OrcRawRecordMerger
argument_list|(
name|conf
argument_list|,
literal|true
argument_list|,
name|baseReader
argument_list|,
literal|false
argument_list|,
name|BUCKET
argument_list|,
name|createMaximalTxnList
argument_list|()
argument_list|,
operator|new
name|Reader
operator|.
name|Options
argument_list|()
argument_list|,
name|AcidUtils
operator|.
name|getPaths
argument_list|(
name|directory
operator|.
name|getCurrentDirectories
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|merger
operator|.
name|getMinKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|merger
operator|.
name|getMaxKey
argument_list|()
argument_list|)
expr_stmt|;
name|RecordIdentifier
name|id
init|=
name|merger
operator|.
name|createKey
argument_list|()
decl_stmt|;
name|OrcStruct
name|event
init|=
name|merger
operator|.
name|createValue
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|UPDATE_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|0
argument_list|,
literal|200
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"update 1"
argument_list|,
name|getValue
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|merger
operator|.
name|isDelete
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"second"
argument_list|,
name|getValue
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|merger
operator|.
name|isDelete
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|UPDATE_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|2
argument_list|,
literal|200
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"update 2"
argument_list|,
name|getValue
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|UPDATE_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|3
argument_list|,
literal|200
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"update 3"
argument_list|,
name|getValue
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"fifth"
argument_list|,
name|getValue
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|5
argument_list|,
literal|0
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"sixth"
argument_list|,
name|getValue
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|6
argument_list|,
literal|0
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"seventh"
argument_list|,
name|getValue
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|DELETE_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|7
argument_list|,
literal|200
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|OrcRecordUpdater
operator|.
name|getRow
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|merger
operator|.
name|isDelete
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|DELETE_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|8
argument_list|,
literal|200
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|OrcRecordUpdater
operator|.
name|getRow
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|9
argument_list|,
literal|0
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"tenth"
argument_list|,
name|getValue
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|merger
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// make a merger that doesn't collapse events
name|merger
operator|=
operator|new
name|OrcRawRecordMerger
argument_list|(
name|conf
argument_list|,
literal|false
argument_list|,
name|baseReader
argument_list|,
literal|false
argument_list|,
name|BUCKET
argument_list|,
name|createMaximalTxnList
argument_list|()
argument_list|,
operator|new
name|Reader
operator|.
name|Options
argument_list|()
argument_list|,
name|AcidUtils
operator|.
name|getPaths
argument_list|(
name|directory
operator|.
name|getCurrentDirectories
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|UPDATE_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|0
argument_list|,
literal|200
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"update 1"
argument_list|,
name|getValue
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"first"
argument_list|,
name|getValue
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"second"
argument_list|,
name|getValue
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|UPDATE_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|2
argument_list|,
literal|200
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"update 2"
argument_list|,
name|getValue
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|2
argument_list|,
literal|0
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"third"
argument_list|,
name|getValue
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|UPDATE_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|3
argument_list|,
literal|200
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"update 3"
argument_list|,
name|getValue
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"fourth"
argument_list|,
name|getValue
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|4
argument_list|,
literal|0
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"fifth"
argument_list|,
name|getValue
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|5
argument_list|,
literal|0
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"sixth"
argument_list|,
name|getValue
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|6
argument_list|,
literal|0
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"seventh"
argument_list|,
name|getValue
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|DELETE_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|7
argument_list|,
literal|200
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|OrcRecordUpdater
operator|.
name|getRow
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|7
argument_list|,
literal|0
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"eighth"
argument_list|,
name|getValue
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|DELETE_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|8
argument_list|,
literal|200
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|OrcRecordUpdater
operator|.
name|getRow
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|8
argument_list|,
literal|0
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ninth"
argument_list|,
name|getValue
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
literal|9
argument_list|,
literal|0
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"tenth"
argument_list|,
name|getValue
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|merger
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// try ignoring the 200 transaction and make sure it works still
name|ValidTxnList
name|txns
init|=
operator|new
name|ValidReadTxnList
argument_list|(
literal|"2000:200:200"
argument_list|)
decl_stmt|;
name|merger
operator|=
operator|new
name|OrcRawRecordMerger
argument_list|(
name|conf
argument_list|,
literal|true
argument_list|,
name|baseReader
argument_list|,
literal|false
argument_list|,
name|BUCKET
argument_list|,
name|txns
argument_list|,
operator|new
name|Reader
operator|.
name|Options
argument_list|()
argument_list|,
name|AcidUtils
operator|.
name|getPaths
argument_list|(
name|directory
operator|.
name|getCurrentDirectories
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|values
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"id = "
operator|+
name|id
operator|+
literal|"event = "
operator|+
name|event
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|OrcRecordUpdater
operator|.
name|INSERT_OPERATION
argument_list|,
name|OrcRecordUpdater
operator|.
name|getOperation
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|ReaderKey
argument_list|(
literal|0
argument_list|,
name|BUCKET
argument_list|,
name|i
argument_list|,
literal|0
argument_list|)
argument_list|,
name|id
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|values
index|[
name|i
index|]
argument_list|,
name|getValue
argument_list|(
name|event
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|merger
operator|.
name|next
argument_list|(
name|id
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
name|merger
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|static
class|class
name|BigRow
block|{
name|int
name|myint
decl_stmt|;
name|long
name|mylong
decl_stmt|;
name|Text
name|mytext
decl_stmt|;
name|float
name|myfloat
decl_stmt|;
name|double
name|mydouble
decl_stmt|;
name|RecordIdentifier
name|ROW__ID
decl_stmt|;
name|BigRow
parameter_list|(
name|int
name|myint
parameter_list|,
name|long
name|mylong
parameter_list|,
name|String
name|mytext
parameter_list|,
name|float
name|myfloat
parameter_list|,
name|double
name|mydouble
parameter_list|)
block|{
name|this
operator|.
name|myint
operator|=
name|myint
expr_stmt|;
name|this
operator|.
name|mylong
operator|=
name|mylong
expr_stmt|;
name|this
operator|.
name|mytext
operator|=
operator|new
name|Text
argument_list|(
name|mytext
argument_list|)
expr_stmt|;
name|this
operator|.
name|myfloat
operator|=
name|myfloat
expr_stmt|;
name|this
operator|.
name|mydouble
operator|=
name|mydouble
expr_stmt|;
name|ROW__ID
operator|=
literal|null
expr_stmt|;
block|}
name|BigRow
parameter_list|(
name|int
name|myint
parameter_list|,
name|long
name|mylong
parameter_list|,
name|String
name|mytext
parameter_list|,
name|float
name|myfloat
parameter_list|,
name|double
name|mydouble
parameter_list|,
name|long
name|rowId
parameter_list|,
name|long
name|origTxn
parameter_list|,
name|int
name|bucket
parameter_list|)
block|{
name|this
operator|.
name|myint
operator|=
name|myint
expr_stmt|;
name|this
operator|.
name|mylong
operator|=
name|mylong
expr_stmt|;
name|this
operator|.
name|mytext
operator|=
operator|new
name|Text
argument_list|(
name|mytext
argument_list|)
expr_stmt|;
name|this
operator|.
name|myfloat
operator|=
name|myfloat
expr_stmt|;
name|this
operator|.
name|mydouble
operator|=
name|mydouble
expr_stmt|;
name|ROW__ID
operator|=
operator|new
name|RecordIdentifier
argument_list|(
name|origTxn
argument_list|,
name|bucket
argument_list|,
name|rowId
argument_list|)
expr_stmt|;
block|}
name|BigRow
parameter_list|(
name|long
name|rowId
parameter_list|,
name|long
name|origTxn
parameter_list|,
name|int
name|bucket
parameter_list|)
block|{
name|ROW__ID
operator|=
operator|new
name|RecordIdentifier
argument_list|(
name|origTxn
argument_list|,
name|bucket
argument_list|,
name|rowId
argument_list|)
expr_stmt|;
block|}
specifier|static
name|String
name|getColumnNamesProperty
parameter_list|()
block|{
return|return
literal|"myint,mylong,mytext,myfloat,mydouble,ROW__ID"
return|;
block|}
specifier|static
name|String
name|getColumnTypesProperty
parameter_list|()
block|{
return|return
literal|"int:bigint:string:float:double:struct<transactionId:bigint,bucketId:int,rowId:bigint>"
return|;
block|}
block|}
comment|/**    * Test the OrcRecordUpdater with the OrcRawRecordMerger when there is    * a base and a delta.    * @throws Exception    */
annotation|@
name|Test
specifier|public
name|void
name|testRecordReaderOldBaseAndDelta
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|int
name|BUCKET
init|=
literal|10
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|OrcOutputFormat
name|of
init|=
operator|new
name|OrcOutputFormat
argument_list|()
decl_stmt|;
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|getLocal
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|Path
name|root
init|=
operator|new
name|Path
argument_list|(
name|tmpDir
argument_list|,
literal|"testOldBaseAndDelta"
argument_list|)
operator|.
name|makeQualified
argument_list|(
name|fs
argument_list|)
decl_stmt|;
name|fs
operator|.
name|delete
argument_list|(
name|root
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcFile
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|BigRow
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
comment|// write the base
name|MemoryManager
name|mgr
init|=
operator|new
name|MemoryManager
argument_list|(
name|conf
argument_list|)
block|{
name|int
name|rowsAddedSinceCheck
init|=
literal|0
decl_stmt|;
annotation|@
name|Override
specifier|public
specifier|synchronized
name|void
name|addedRow
parameter_list|(
name|int
name|rows
parameter_list|)
throws|throws
name|IOException
block|{
name|rowsAddedSinceCheck
operator|+=
name|rows
expr_stmt|;
if|if
condition|(
name|rowsAddedSinceCheck
operator|>=
literal|2
condition|)
block|{
name|notifyWriters
argument_list|()
expr_stmt|;
name|rowsAddedSinceCheck
operator|=
literal|0
expr_stmt|;
block|}
block|}
block|}
decl_stmt|;
comment|// make 5 stripes with 2 rows each
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
operator|new
name|Path
argument_list|(
name|root
argument_list|,
literal|"0000010_0"
argument_list|)
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|fileSystem
argument_list|(
name|fs
argument_list|)
operator|.
name|blockPadding
argument_list|(
literal|false
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|1
argument_list|)
operator|.
name|memory
argument_list|(
name|mgr
argument_list|)
operator|.
name|batchSize
argument_list|(
literal|2
argument_list|)
operator|.
name|version
argument_list|(
name|OrcFile
operator|.
name|Version
operator|.
name|V_0_11
argument_list|)
argument_list|)
decl_stmt|;
name|String
index|[]
name|values
init|=
operator|new
name|String
index|[]
block|{
literal|"ignore.1"
block|,
literal|"0.1"
block|,
literal|"ignore.2"
block|,
literal|"ignore.3"
block|,
literal|"2.0"
block|,
literal|"2.1"
block|,
literal|"3.0"
block|,
literal|"ignore.4"
block|,
literal|"ignore.5"
block|,
literal|"ignore.6"
block|}
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|values
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
name|writer
operator|.
name|addRow
argument_list|(
operator|new
name|BigRow
argument_list|(
name|i
argument_list|,
name|i
argument_list|,
name|values
index|[
name|i
index|]
argument_list|,
name|i
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// write a delta
name|AcidOutputFormat
operator|.
name|Options
name|options
init|=
operator|new
name|AcidOutputFormat
operator|.
name|Options
argument_list|(
name|conf
argument_list|)
operator|.
name|writingBase
argument_list|(
literal|false
argument_list|)
operator|.
name|minimumTransactionId
argument_list|(
literal|1
argument_list|)
operator|.
name|maximumTransactionId
argument_list|(
literal|1
argument_list|)
operator|.
name|bucket
argument_list|(
name|BUCKET
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
operator|.
name|recordIdColumn
argument_list|(
literal|5
argument_list|)
operator|.
name|finalDestination
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|RecordUpdater
name|ru
init|=
name|of
operator|.
name|getRecordUpdater
argument_list|(
name|root
argument_list|,
name|options
argument_list|)
decl_stmt|;
name|values
operator|=
operator|new
name|String
index|[]
block|{
literal|"0.0"
block|,
literal|null
block|,
literal|null
block|,
literal|"1.1"
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|"ignore.7"
block|}
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|values
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|values
index|[
name|i
index|]
operator|!=
literal|null
condition|)
block|{
name|ru
operator|.
name|update
argument_list|(
literal|1
argument_list|,
operator|new
name|BigRow
argument_list|(
name|i
argument_list|,
name|i
argument_list|,
name|values
index|[
name|i
index|]
argument_list|,
name|i
argument_list|,
name|i
argument_list|,
name|i
argument_list|,
literal|0
argument_list|,
name|BUCKET
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|ru
operator|.
name|delete
argument_list|(
literal|100
argument_list|,
operator|new
name|BigRow
argument_list|(
literal|9
argument_list|,
literal|0
argument_list|,
name|BUCKET
argument_list|)
argument_list|)
expr_stmt|;
name|ru
operator|.
name|close
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// write a delta
name|options
operator|=
name|options
operator|.
name|minimumTransactionId
argument_list|(
literal|2
argument_list|)
operator|.
name|maximumTransactionId
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|ru
operator|=
name|of
operator|.
name|getRecordUpdater
argument_list|(
name|root
argument_list|,
name|options
argument_list|)
expr_stmt|;
name|values
operator|=
operator|new
name|String
index|[]
block|{
literal|null
block|,
literal|null
block|,
literal|"1.0"
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|"3.1"
block|}
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|values
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|values
index|[
name|i
index|]
operator|!=
literal|null
condition|)
block|{
name|ru
operator|.
name|update
argument_list|(
literal|2
argument_list|,
operator|new
name|BigRow
argument_list|(
name|i
argument_list|,
name|i
argument_list|,
name|values
index|[
name|i
index|]
argument_list|,
name|i
argument_list|,
name|i
argument_list|,
name|i
argument_list|,
literal|0
argument_list|,
name|BUCKET
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|ru
operator|.
name|delete
argument_list|(
literal|100
argument_list|,
operator|new
name|BigRow
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
name|BUCKET
argument_list|)
argument_list|)
expr_stmt|;
name|ru
operator|.
name|close
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|InputFormat
name|inf
init|=
operator|new
name|OrcInputFormat
argument_list|()
decl_stmt|;
name|JobConf
name|job
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|job
operator|.
name|set
argument_list|(
name|IOConstants
operator|.
name|SCHEMA_EVOLUTION_COLUMNS
argument_list|,
name|BigRow
operator|.
name|getColumnNamesProperty
argument_list|()
argument_list|)
expr_stmt|;
name|job
operator|.
name|set
argument_list|(
name|IOConstants
operator|.
name|SCHEMA_EVOLUTION_COLUMNS_TYPES
argument_list|,
name|BigRow
operator|.
name|getColumnTypesProperty
argument_list|()
argument_list|)
expr_stmt|;
name|HiveConf
operator|.
name|setBoolVar
argument_list|(
name|job
argument_list|,
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_TRANSACTIONAL_TABLE_SCAN
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|job
operator|.
name|set
argument_list|(
literal|"mapred.min.split.size"
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|job
operator|.
name|set
argument_list|(
literal|"mapred.max.split.size"
argument_list|,
literal|"2"
argument_list|)
expr_stmt|;
name|job
operator|.
name|set
argument_list|(
literal|"mapred.input.dir"
argument_list|,
name|root
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|InputSplit
index|[]
name|splits
init|=
name|inf
operator|.
name|getSplits
argument_list|(
name|job
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|splits
operator|.
name|length
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|RecordReader
argument_list|<
name|NullWritable
argument_list|,
name|OrcStruct
argument_list|>
name|rr
decl_stmt|;
comment|// loop through the 5 splits and read each
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
operator|++
name|i
control|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"starting split "
operator|+
name|i
argument_list|)
expr_stmt|;
name|rr
operator|=
name|inf
operator|.
name|getRecordReader
argument_list|(
name|splits
index|[
name|i
index|]
argument_list|,
name|job
argument_list|,
name|Reporter
operator|.
name|NULL
argument_list|)
expr_stmt|;
name|NullWritable
name|key
init|=
name|rr
operator|.
name|createKey
argument_list|()
decl_stmt|;
name|OrcStruct
name|value
init|=
name|rr
operator|.
name|createValue
argument_list|()
decl_stmt|;
comment|// there should be exactly two rows per a split
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|2
condition|;
operator|++
name|j
control|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"i = "
operator|+
name|i
operator|+
literal|", j = "
operator|+
name|j
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rr
operator|.
name|next
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"record = "
operator|+
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|i
operator|+
literal|"."
operator|+
name|j
argument_list|,
name|value
operator|.
name|getFieldValue
argument_list|(
literal|2
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rr
operator|.
name|next
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|rr
operator|=
name|inf
operator|.
name|getRecordReader
argument_list|(
name|splits
index|[
literal|4
index|]
argument_list|,
name|job
argument_list|,
name|Reporter
operator|.
name|NULL
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rr
operator|.
name|next
argument_list|(
name|rr
operator|.
name|createKey
argument_list|()
argument_list|,
name|rr
operator|.
name|createValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test the RecordReader when there is a new base and a delta.    * @throws Exception    */
annotation|@
name|Test
specifier|public
name|void
name|testRecordReaderNewBaseAndDelta
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|int
name|BUCKET
init|=
literal|11
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|OrcOutputFormat
name|of
init|=
operator|new
name|OrcOutputFormat
argument_list|()
decl_stmt|;
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|getLocal
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|Path
name|root
init|=
operator|new
name|Path
argument_list|(
name|tmpDir
argument_list|,
literal|"testRecordReaderNewBaseAndDelta"
argument_list|)
operator|.
name|makeQualified
argument_list|(
name|fs
argument_list|)
decl_stmt|;
name|fs
operator|.
name|delete
argument_list|(
name|root
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcFile
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|BigRow
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
comment|// write the base
name|MemoryManager
name|mgr
init|=
operator|new
name|MemoryManager
argument_list|(
name|conf
argument_list|)
block|{
name|int
name|rowsAddedSinceCheck
init|=
literal|0
decl_stmt|;
annotation|@
name|Override
specifier|public
specifier|synchronized
name|void
name|addedRow
parameter_list|(
name|int
name|rows
parameter_list|)
throws|throws
name|IOException
block|{
name|rowsAddedSinceCheck
operator|+=
name|rows
expr_stmt|;
if|if
condition|(
name|rowsAddedSinceCheck
operator|>=
literal|2
condition|)
block|{
name|notifyWriters
argument_list|()
expr_stmt|;
name|rowsAddedSinceCheck
operator|=
literal|0
expr_stmt|;
block|}
block|}
block|}
decl_stmt|;
comment|// make 5 stripes with 2 rows each
name|OrcRecordUpdater
operator|.
name|OrcOptions
name|options
init|=
operator|(
name|OrcRecordUpdater
operator|.
name|OrcOptions
operator|)
operator|new
name|OrcRecordUpdater
operator|.
name|OrcOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|writingBase
argument_list|(
literal|true
argument_list|)
operator|.
name|minimumTransactionId
argument_list|(
literal|0
argument_list|)
operator|.
name|maximumTransactionId
argument_list|(
literal|0
argument_list|)
operator|.
name|bucket
argument_list|(
name|BUCKET
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
decl_stmt|;
name|options
operator|.
name|orcOptions
argument_list|(
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|1
argument_list|)
operator|.
name|blockPadding
argument_list|(
literal|false
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|memory
argument_list|(
name|mgr
argument_list|)
operator|.
name|batchSize
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|options
operator|.
name|finalDestination
argument_list|(
name|root
argument_list|)
expr_stmt|;
name|RecordUpdater
name|ru
init|=
name|of
operator|.
name|getRecordUpdater
argument_list|(
name|root
argument_list|,
name|options
argument_list|)
decl_stmt|;
name|String
index|[]
name|values
init|=
operator|new
name|String
index|[]
block|{
literal|"ignore.1"
block|,
literal|"0.1"
block|,
literal|"ignore.2"
block|,
literal|"ignore.3"
block|,
literal|"2.0"
block|,
literal|"2.1"
block|,
literal|"3.0"
block|,
literal|"ignore.4"
block|,
literal|"ignore.5"
block|,
literal|"ignore.6"
block|}
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|values
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
name|ru
operator|.
name|insert
argument_list|(
literal|0
argument_list|,
operator|new
name|BigRow
argument_list|(
name|i
argument_list|,
name|i
argument_list|,
name|values
index|[
name|i
index|]
argument_list|,
name|i
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|ru
operator|.
name|close
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// write a delta
name|options
operator|.
name|writingBase
argument_list|(
literal|false
argument_list|)
operator|.
name|minimumTransactionId
argument_list|(
literal|1
argument_list|)
operator|.
name|maximumTransactionId
argument_list|(
literal|1
argument_list|)
operator|.
name|recordIdColumn
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|ru
operator|=
name|of
operator|.
name|getRecordUpdater
argument_list|(
name|root
argument_list|,
name|options
argument_list|)
expr_stmt|;
name|values
operator|=
operator|new
name|String
index|[]
block|{
literal|"0.0"
block|,
literal|null
block|,
literal|null
block|,
literal|"1.1"
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|"ignore.7"
block|}
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|values
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|values
index|[
name|i
index|]
operator|!=
literal|null
condition|)
block|{
name|ru
operator|.
name|update
argument_list|(
literal|1
argument_list|,
operator|new
name|BigRow
argument_list|(
name|i
argument_list|,
name|i
argument_list|,
name|values
index|[
name|i
index|]
argument_list|,
name|i
argument_list|,
name|i
argument_list|,
name|i
argument_list|,
literal|0
argument_list|,
name|BUCKET
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|ru
operator|.
name|delete
argument_list|(
literal|100
argument_list|,
operator|new
name|BigRow
argument_list|(
literal|9
argument_list|,
literal|0
argument_list|,
name|BUCKET
argument_list|)
argument_list|)
expr_stmt|;
name|ru
operator|.
name|close
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// write a delta
name|options
operator|.
name|minimumTransactionId
argument_list|(
literal|2
argument_list|)
operator|.
name|maximumTransactionId
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|ru
operator|=
name|of
operator|.
name|getRecordUpdater
argument_list|(
name|root
argument_list|,
name|options
argument_list|)
expr_stmt|;
name|values
operator|=
operator|new
name|String
index|[]
block|{
literal|null
block|,
literal|null
block|,
literal|"1.0"
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|"3.1"
block|}
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|values
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
if|if
condition|(
name|values
index|[
name|i
index|]
operator|!=
literal|null
condition|)
block|{
name|ru
operator|.
name|update
argument_list|(
literal|2
argument_list|,
operator|new
name|BigRow
argument_list|(
name|i
argument_list|,
name|i
argument_list|,
name|values
index|[
name|i
index|]
argument_list|,
name|i
argument_list|,
name|i
argument_list|,
name|i
argument_list|,
literal|0
argument_list|,
name|BUCKET
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|ru
operator|.
name|delete
argument_list|(
literal|100
argument_list|,
operator|new
name|BigRow
argument_list|(
literal|8
argument_list|,
literal|0
argument_list|,
name|BUCKET
argument_list|)
argument_list|)
expr_stmt|;
name|ru
operator|.
name|close
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|InputFormat
name|inf
init|=
operator|new
name|OrcInputFormat
argument_list|()
decl_stmt|;
name|JobConf
name|job
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|job
operator|.
name|set
argument_list|(
literal|"mapred.min.split.size"
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|job
operator|.
name|set
argument_list|(
literal|"mapred.max.split.size"
argument_list|,
literal|"2"
argument_list|)
expr_stmt|;
name|job
operator|.
name|set
argument_list|(
literal|"mapred.input.dir"
argument_list|,
name|root
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|job
operator|.
name|set
argument_list|(
name|IOConstants
operator|.
name|SCHEMA_EVOLUTION_COLUMNS
argument_list|,
name|BigRow
operator|.
name|getColumnNamesProperty
argument_list|()
argument_list|)
expr_stmt|;
name|job
operator|.
name|set
argument_list|(
name|IOConstants
operator|.
name|SCHEMA_EVOLUTION_COLUMNS_TYPES
argument_list|,
name|BigRow
operator|.
name|getColumnTypesProperty
argument_list|()
argument_list|)
expr_stmt|;
name|HiveConf
operator|.
name|setBoolVar
argument_list|(
name|job
argument_list|,
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_TRANSACTIONAL_TABLE_SCAN
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|InputSplit
index|[]
name|splits
init|=
name|inf
operator|.
name|getSplits
argument_list|(
name|job
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|splits
operator|.
name|length
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|RecordReader
argument_list|<
name|NullWritable
argument_list|,
name|OrcStruct
argument_list|>
name|rr
decl_stmt|;
comment|// loop through the 5 splits and read each
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
operator|++
name|i
control|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"starting split "
operator|+
name|i
operator|+
literal|" = "
operator|+
name|splits
index|[
name|i
index|]
argument_list|)
expr_stmt|;
name|rr
operator|=
name|inf
operator|.
name|getRecordReader
argument_list|(
name|splits
index|[
name|i
index|]
argument_list|,
name|job
argument_list|,
name|Reporter
operator|.
name|NULL
argument_list|)
expr_stmt|;
name|NullWritable
name|key
init|=
name|rr
operator|.
name|createKey
argument_list|()
decl_stmt|;
name|OrcStruct
name|value
init|=
name|rr
operator|.
name|createValue
argument_list|()
decl_stmt|;
comment|// there should be exactly two rows per a split
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|2
condition|;
operator|++
name|j
control|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"i = "
operator|+
name|i
operator|+
literal|", j = "
operator|+
name|j
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rr
operator|.
name|next
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"record = "
operator|+
name|value
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|i
operator|+
literal|"."
operator|+
name|j
argument_list|,
name|value
operator|.
name|getFieldValue
argument_list|(
literal|2
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rr
operator|.
name|next
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|rr
operator|=
name|inf
operator|.
name|getRecordReader
argument_list|(
name|splits
index|[
literal|4
index|]
argument_list|,
name|job
argument_list|,
name|Reporter
operator|.
name|NULL
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rr
operator|.
name|next
argument_list|(
name|rr
operator|.
name|createKey
argument_list|()
argument_list|,
name|rr
operator|.
name|createValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test the RecordReader when there is a new base and a delta.    * @throws Exception    */
annotation|@
name|Test
specifier|public
name|void
name|testRecordReaderDelta
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|int
name|BUCKET
init|=
literal|0
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|OrcOutputFormat
name|of
init|=
operator|new
name|OrcOutputFormat
argument_list|()
decl_stmt|;
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|getLocal
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|Path
name|root
init|=
operator|new
name|Path
argument_list|(
name|tmpDir
argument_list|,
literal|"testRecordReaderDelta"
argument_list|)
operator|.
name|makeQualified
argument_list|(
name|fs
argument_list|)
decl_stmt|;
name|fs
operator|.
name|delete
argument_list|(
name|root
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcFile
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|MyRow
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
comment|// write a delta
name|AcidOutputFormat
operator|.
name|Options
name|options
init|=
operator|new
name|AcidOutputFormat
operator|.
name|Options
argument_list|(
name|conf
argument_list|)
operator|.
name|bucket
argument_list|(
name|BUCKET
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
operator|.
name|writingBase
argument_list|(
literal|false
argument_list|)
operator|.
name|minimumTransactionId
argument_list|(
literal|1
argument_list|)
operator|.
name|maximumTransactionId
argument_list|(
literal|1
argument_list|)
operator|.
name|finalDestination
argument_list|(
name|root
argument_list|)
decl_stmt|;
name|RecordUpdater
name|ru
init|=
name|of
operator|.
name|getRecordUpdater
argument_list|(
name|root
argument_list|,
name|options
argument_list|)
decl_stmt|;
name|String
index|[]
name|values
init|=
operator|new
name|String
index|[]
block|{
literal|"a"
block|,
literal|"b"
block|,
literal|"c"
block|,
literal|"d"
block|,
literal|"e"
block|}
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|values
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
name|ru
operator|.
name|insert
argument_list|(
literal|1
argument_list|,
operator|new
name|MyRow
argument_list|(
name|values
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|ru
operator|.
name|close
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// write a delta
name|options
operator|.
name|minimumTransactionId
argument_list|(
literal|2
argument_list|)
operator|.
name|maximumTransactionId
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|ru
operator|=
name|of
operator|.
name|getRecordUpdater
argument_list|(
name|root
argument_list|,
name|options
argument_list|)
expr_stmt|;
name|values
operator|=
operator|new
name|String
index|[]
block|{
literal|"f"
block|,
literal|"g"
block|,
literal|"h"
block|,
literal|"i"
block|,
literal|"j"
block|}
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|values
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
name|ru
operator|.
name|insert
argument_list|(
literal|2
argument_list|,
operator|new
name|MyRow
argument_list|(
name|values
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|ru
operator|.
name|close
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|InputFormat
name|inf
init|=
operator|new
name|OrcInputFormat
argument_list|()
decl_stmt|;
name|JobConf
name|job
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|job
operator|.
name|set
argument_list|(
literal|"mapred.min.split.size"
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|job
operator|.
name|set
argument_list|(
literal|"mapred.max.split.size"
argument_list|,
literal|"2"
argument_list|)
expr_stmt|;
name|job
operator|.
name|set
argument_list|(
literal|"mapred.input.dir"
argument_list|,
name|root
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|job
operator|.
name|set
argument_list|(
literal|"bucket_count"
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|job
operator|.
name|set
argument_list|(
name|IOConstants
operator|.
name|SCHEMA_EVOLUTION_COLUMNS
argument_list|,
name|MyRow
operator|.
name|getColumnNamesProperty
argument_list|()
argument_list|)
expr_stmt|;
name|job
operator|.
name|set
argument_list|(
name|IOConstants
operator|.
name|SCHEMA_EVOLUTION_COLUMNS_TYPES
argument_list|,
name|MyRow
operator|.
name|getColumnTypesProperty
argument_list|()
argument_list|)
expr_stmt|;
name|HiveConf
operator|.
name|setBoolVar
argument_list|(
name|job
argument_list|,
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_TRANSACTIONAL_TABLE_SCAN
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|InputSplit
index|[]
name|splits
init|=
name|inf
operator|.
name|getSplits
argument_list|(
name|job
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|splits
operator|.
name|length
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|RecordReader
argument_list|<
name|NullWritable
argument_list|,
name|OrcStruct
argument_list|>
name|rr
decl_stmt|;
name|rr
operator|=
name|inf
operator|.
name|getRecordReader
argument_list|(
name|splits
index|[
literal|0
index|]
argument_list|,
name|job
argument_list|,
name|Reporter
operator|.
name|NULL
argument_list|)
expr_stmt|;
name|values
operator|=
operator|new
name|String
index|[]
block|{
literal|"a"
block|,
literal|"b"
block|,
literal|"c"
block|,
literal|"d"
block|,
literal|"e"
block|,
literal|"f"
block|,
literal|"g"
block|,
literal|"h"
block|,
literal|"i"
block|,
literal|"j"
block|}
expr_stmt|;
name|OrcStruct
name|row
init|=
name|rr
operator|.
name|createValue
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|values
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Checking "
operator|+
name|i
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rr
operator|.
name|next
argument_list|(
name|NullWritable
operator|.
name|get
argument_list|()
argument_list|,
name|row
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|values
index|[
name|i
index|]
argument_list|,
name|row
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rr
operator|.
name|next
argument_list|(
name|NullWritable
operator|.
name|get
argument_list|()
argument_list|,
name|row
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test the RecordReader when the delta has been flushed, but not closed.    * @throws Exception    */
annotation|@
name|Test
specifier|public
name|void
name|testRecordReaderIncompleteDelta
parameter_list|()
throws|throws
name|Exception
block|{
name|testRecordReaderIncompleteDelta
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|testRecordReaderIncompleteDelta
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
comment|/**    *     * @param use130Format true means use delta_0001_0001_0000 format, else delta_0001_00001    */
specifier|private
name|void
name|testRecordReaderIncompleteDelta
parameter_list|(
name|boolean
name|use130Format
parameter_list|)
throws|throws
name|Exception
block|{
specifier|final
name|int
name|BUCKET
init|=
literal|1
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|OrcOutputFormat
name|of
init|=
operator|new
name|OrcOutputFormat
argument_list|()
decl_stmt|;
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|getLocal
argument_list|(
name|conf
argument_list|)
operator|.
name|getRaw
argument_list|()
decl_stmt|;
name|Path
name|root
init|=
operator|new
name|Path
argument_list|(
name|tmpDir
argument_list|,
literal|"testRecordReaderIncompleteDelta"
argument_list|)
operator|.
name|makeQualified
argument_list|(
name|fs
argument_list|)
decl_stmt|;
name|fs
operator|.
name|delete
argument_list|(
name|root
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|ObjectInspector
name|inspector
decl_stmt|;
synchronized|synchronized
init|(
name|TestOrcFile
operator|.
name|class
init|)
block|{
name|inspector
operator|=
name|ObjectInspectorFactory
operator|.
name|getReflectionObjectInspector
argument_list|(
name|MyRow
operator|.
name|class
argument_list|,
name|ObjectInspectorFactory
operator|.
name|ObjectInspectorOptions
operator|.
name|JAVA
argument_list|)
expr_stmt|;
block|}
comment|// write a base
name|AcidOutputFormat
operator|.
name|Options
name|options
init|=
operator|new
name|AcidOutputFormat
operator|.
name|Options
argument_list|(
name|conf
argument_list|)
operator|.
name|writingBase
argument_list|(
literal|true
argument_list|)
operator|.
name|minimumTransactionId
argument_list|(
literal|0
argument_list|)
operator|.
name|maximumTransactionId
argument_list|(
literal|0
argument_list|)
operator|.
name|bucket
argument_list|(
name|BUCKET
argument_list|)
operator|.
name|inspector
argument_list|(
name|inspector
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
operator|.
name|finalDestination
argument_list|(
name|root
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|use130Format
condition|)
block|{
name|options
operator|.
name|statementId
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
name|RecordUpdater
name|ru
init|=
name|of
operator|.
name|getRecordUpdater
argument_list|(
name|root
argument_list|,
name|options
argument_list|)
decl_stmt|;
name|String
index|[]
name|values
init|=
operator|new
name|String
index|[]
block|{
literal|"1"
block|,
literal|"2"
block|,
literal|"3"
block|,
literal|"4"
block|,
literal|"5"
block|}
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|values
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
name|ru
operator|.
name|insert
argument_list|(
literal|0
argument_list|,
operator|new
name|MyRow
argument_list|(
name|values
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|ru
operator|.
name|close
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// write a delta
name|options
operator|.
name|writingBase
argument_list|(
literal|false
argument_list|)
operator|.
name|minimumTransactionId
argument_list|(
literal|10
argument_list|)
operator|.
name|maximumTransactionId
argument_list|(
literal|19
argument_list|)
expr_stmt|;
name|ru
operator|=
name|of
operator|.
name|getRecordUpdater
argument_list|(
name|root
argument_list|,
name|options
argument_list|)
expr_stmt|;
name|values
operator|=
operator|new
name|String
index|[]
block|{
literal|"6"
block|,
literal|"7"
block|,
literal|"8"
block|}
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|values
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
name|ru
operator|.
name|insert
argument_list|(
literal|1
argument_list|,
operator|new
name|MyRow
argument_list|(
name|values
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|InputFormat
name|inf
init|=
operator|new
name|OrcInputFormat
argument_list|()
decl_stmt|;
name|JobConf
name|job
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|job
operator|.
name|set
argument_list|(
literal|"mapred.input.dir"
argument_list|,
name|root
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|job
operator|.
name|set
argument_list|(
literal|"bucket_count"
argument_list|,
literal|"2"
argument_list|)
expr_stmt|;
name|job
operator|.
name|set
argument_list|(
name|IOConstants
operator|.
name|SCHEMA_EVOLUTION_COLUMNS
argument_list|,
name|MyRow
operator|.
name|getColumnNamesProperty
argument_list|()
argument_list|)
expr_stmt|;
name|job
operator|.
name|set
argument_list|(
name|IOConstants
operator|.
name|SCHEMA_EVOLUTION_COLUMNS_TYPES
argument_list|,
name|MyRow
operator|.
name|getColumnTypesProperty
argument_list|()
argument_list|)
expr_stmt|;
name|HiveConf
operator|.
name|setBoolVar
argument_list|(
name|job
argument_list|,
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_TRANSACTIONAL_TABLE_SCAN
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// read the keys before the delta is flushed
name|InputSplit
index|[]
name|splits
init|=
name|inf
operator|.
name|getSplits
argument_list|(
name|job
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|splits
operator|.
name|length
argument_list|)
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|RecordReader
argument_list|<
name|NullWritable
argument_list|,
name|OrcStruct
argument_list|>
name|rr
init|=
name|inf
operator|.
name|getRecordReader
argument_list|(
name|splits
index|[
literal|0
index|]
argument_list|,
name|job
argument_list|,
name|Reporter
operator|.
name|NULL
argument_list|)
decl_stmt|;
name|NullWritable
name|key
init|=
name|rr
operator|.
name|createKey
argument_list|()
decl_stmt|;
name|OrcStruct
name|value
init|=
name|rr
operator|.
name|createValue
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Looking at split "
operator|+
name|splits
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
literal|6
condition|;
operator|++
name|i
control|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Checking row "
operator|+
name|i
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rr
operator|.
name|next
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|,
name|value
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rr
operator|.
name|next
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
argument_list|)
expr_stmt|;
name|ru
operator|.
name|flush
argument_list|()
expr_stmt|;
name|ru
operator|.
name|flush
argument_list|()
expr_stmt|;
name|values
operator|=
operator|new
name|String
index|[]
block|{
literal|"9"
block|,
literal|"10"
block|}
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|values
operator|.
name|length
condition|;
operator|++
name|i
control|)
block|{
name|ru
operator|.
name|insert
argument_list|(
literal|3
argument_list|,
operator|new
name|MyRow
argument_list|(
name|values
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|ru
operator|.
name|flush
argument_list|()
expr_stmt|;
name|splits
operator|=
name|inf
operator|.
name|getSplits
argument_list|(
name|job
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|splits
operator|.
name|length
argument_list|)
expr_stmt|;
name|rr
operator|=
name|inf
operator|.
name|getRecordReader
argument_list|(
name|splits
index|[
literal|0
index|]
argument_list|,
name|job
argument_list|,
name|Reporter
operator|.
name|NULL
argument_list|)
expr_stmt|;
name|Path
name|sideFile
init|=
operator|new
name|Path
argument_list|(
name|root
operator|+
literal|"/"
operator|+
operator|(
name|use130Format
condition|?
name|AcidUtils
operator|.
name|deltaSubdir
argument_list|(
literal|10
argument_list|,
literal|19
argument_list|,
literal|0
argument_list|)
else|:
name|AcidUtils
operator|.
name|deltaSubdir
argument_list|(
literal|10
argument_list|,
literal|19
argument_list|)
operator|)
operator|+
literal|"/bucket_00001_flush_length"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|fs
operator|.
name|exists
argument_list|(
name|sideFile
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|24
argument_list|,
name|fs
operator|.
name|getFileStatus
argument_list|(
name|sideFile
argument_list|)
operator|.
name|getLen
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
literal|11
condition|;
operator|++
name|i
control|)
block|{
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rr
operator|.
name|next
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|toString
argument_list|(
name|i
argument_list|)
argument_list|,
name|value
operator|.
name|getFieldValue
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rr
operator|.
name|next
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

