begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2015 The Apache Software Foundation.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|TestSplitSample
block|{
specifier|private
specifier|static
specifier|final
name|int
name|SEED_NUM
init|=
literal|123
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|double
name|PERCENT
init|=
literal|2.0
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|long
name|TOTAL_LENGTH
init|=
literal|1000L
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|int
name|ROW_COUNT
init|=
literal|5
decl_stmt|;
specifier|private
name|SplitSample
name|splitSample
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testGetTargetSizeTotalLength
parameter_list|()
block|{
name|splitSample
operator|=
operator|new
name|SplitSample
argument_list|(
name|TOTAL_LENGTH
argument_list|,
name|SEED_NUM
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TOTAL_LENGTH
argument_list|,
name|splitSample
operator|.
name|getTargetSize
argument_list|(
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TOTAL_LENGTH
argument_list|,
name|splitSample
operator|.
name|getTargetSize
argument_list|(
literal|100
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetTargetSizePercent
parameter_list|()
block|{
name|splitSample
operator|=
operator|new
name|SplitSample
argument_list|(
name|PERCENT
argument_list|,
name|SEED_NUM
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|20
argument_list|,
name|splitSample
operator|.
name|getTargetSize
argument_list|(
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEstimateSourceSizeTotalLength
parameter_list|()
block|{
name|splitSample
operator|=
operator|new
name|SplitSample
argument_list|(
name|TOTAL_LENGTH
argument_list|,
name|SEED_NUM
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|splitSample
operator|.
name|estimateSourceSize
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEstimateSourceSizeRowCount
parameter_list|()
block|{
name|splitSample
operator|=
operator|new
name|SplitSample
argument_list|(
name|ROW_COUNT
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|123
argument_list|,
name|splitSample
operator|.
name|estimateSourceSize
argument_list|(
literal|123
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEstimateSourceSizePercent
parameter_list|()
block|{
name|splitSample
operator|=
operator|new
name|SplitSample
argument_list|(
name|PERCENT
argument_list|,
name|SEED_NUM
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|500
argument_list|,
name|splitSample
operator|.
name|estimateSourceSize
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

