begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p/>  * http://www.apache.org/licenses/LICENSE-2.0  *<p/>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|log
package|;
end_package

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Timestamp
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TimeZone
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|sarg
operator|.
name|PredicateLeaf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|sarg
operator|.
name|SearchArgument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|sarg
operator|.
name|SearchArgumentFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|log
operator|.
name|syslog
operator|.
name|SyslogInputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_class
specifier|public
class|class
name|TestSyslogInputFormat
block|{
annotation|@
name|Test
specifier|public
name|void
name|testTimestampFilePruningAllBefore
parameter_list|()
block|{
name|TimeZone
name|defaultTZ
init|=
name|TimeZone
operator|.
name|getDefault
argument_list|()
decl_stmt|;
try|try
block|{
name|TimeZone
operator|.
name|setDefault
argument_list|(
name|TimeZone
operator|.
name|getTimeZone
argument_list|(
literal|"UTC"
argument_list|)
argument_list|)
expr_stmt|;
name|SearchArgument
name|sarg
init|=
name|SearchArgumentFactory
operator|.
name|newBuilder
argument_list|()
operator|.
name|between
argument_list|(
literal|"ts"
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|TIMESTAMP
argument_list|,
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2018-01-03 10:00:00.000"
argument_list|)
argument_list|,
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2019-01-03 10:00:00.000"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|SyslogInputFormat
name|syslogInputFormat
init|=
operator|new
name|SyslogInputFormat
argument_list|()
decl_stmt|;
name|FileStatus
name|fs1
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs1
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-10_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs2
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs2
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-15_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs3
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs3
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-15_1.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs4
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs4
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-35_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs5
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs5
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-11-15_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs6
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs6
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-11-35_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FileStatus
argument_list|>
name|inputFiles
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|fs1
argument_list|,
name|fs2
argument_list|,
name|fs3
argument_list|,
name|fs4
argument_list|,
name|fs5
argument_list|,
name|fs6
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|expectedFiles
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|FileStatus
argument_list|>
name|selectedFiles
init|=
name|syslogInputFormat
operator|.
name|pruneFiles
argument_list|(
name|sarg
argument_list|,
literal|300
argument_list|,
name|inputFiles
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|gotFiles
init|=
name|selectedFiles
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|f
lambda|->
name|f
operator|.
name|getPath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedFiles
argument_list|,
name|gotFiles
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|TimeZone
operator|.
name|setDefault
argument_list|(
name|defaultTZ
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTimestampFilePruningAllAfter
parameter_list|()
block|{
name|TimeZone
name|defaultTZ
init|=
name|TimeZone
operator|.
name|getDefault
argument_list|()
decl_stmt|;
try|try
block|{
name|TimeZone
operator|.
name|setDefault
argument_list|(
name|TimeZone
operator|.
name|getTimeZone
argument_list|(
literal|"UTC"
argument_list|)
argument_list|)
expr_stmt|;
name|SearchArgument
name|sarg
init|=
name|SearchArgumentFactory
operator|.
name|newBuilder
argument_list|()
operator|.
name|between
argument_list|(
literal|"ts"
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|TIMESTAMP
argument_list|,
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2020-01-03 10:00:00.000"
argument_list|)
argument_list|,
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2020-01-03 10:00:00.000"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|SyslogInputFormat
name|syslogInputFormat
init|=
operator|new
name|SyslogInputFormat
argument_list|()
decl_stmt|;
name|FileStatus
name|fs1
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs1
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-10_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs2
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs2
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-15_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs3
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs3
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-15_1.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs4
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs4
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-35_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs5
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs5
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-11-15_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs6
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs6
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-11-35_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FileStatus
argument_list|>
name|inputFiles
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|fs1
argument_list|,
name|fs2
argument_list|,
name|fs3
argument_list|,
name|fs4
argument_list|,
name|fs5
argument_list|,
name|fs6
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|expectedFiles
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|FileStatus
argument_list|>
name|selectedFiles
init|=
name|syslogInputFormat
operator|.
name|pruneFiles
argument_list|(
name|sarg
argument_list|,
literal|300
argument_list|,
name|inputFiles
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|gotFiles
init|=
name|selectedFiles
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|f
lambda|->
name|f
operator|.
name|getPath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedFiles
argument_list|,
name|gotFiles
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|TimeZone
operator|.
name|setDefault
argument_list|(
name|defaultTZ
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTimestampFilePruningSimple
parameter_list|()
block|{
name|TimeZone
name|defaultTZ
init|=
name|TimeZone
operator|.
name|getDefault
argument_list|()
decl_stmt|;
try|try
block|{
name|TimeZone
operator|.
name|setDefault
argument_list|(
name|TimeZone
operator|.
name|getTimeZone
argument_list|(
literal|"UTC"
argument_list|)
argument_list|)
expr_stmt|;
name|SearchArgument
name|sarg
init|=
name|SearchArgumentFactory
operator|.
name|newBuilder
argument_list|()
operator|.
name|between
argument_list|(
literal|"ts"
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|TIMESTAMP
argument_list|,
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2019-01-03 10:15:00.000"
argument_list|)
argument_list|,
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2019-01-03 11:15:00.000"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|SyslogInputFormat
name|syslogInputFormat
init|=
operator|new
name|SyslogInputFormat
argument_list|()
decl_stmt|;
name|FileStatus
name|fs1
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs1
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-00_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs2
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs2
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-15_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs3
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs3
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-15_1.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs4
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs4
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-35_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs5
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs5
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-11-15_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs6
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs6
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-11-35_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FileStatus
argument_list|>
name|inputFiles
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|fs1
argument_list|,
name|fs2
argument_list|,
name|fs3
argument_list|,
name|fs4
argument_list|,
name|fs5
argument_list|,
name|fs6
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|expectedFiles
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|fs2
argument_list|,
name|fs3
argument_list|,
name|fs4
argument_list|,
name|fs5
argument_list|)
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|f
lambda|->
name|f
operator|.
name|getPath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FileStatus
argument_list|>
name|selectedFiles
init|=
name|syslogInputFormat
operator|.
name|pruneFiles
argument_list|(
name|sarg
argument_list|,
literal|300
argument_list|,
name|inputFiles
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|gotFiles
init|=
name|selectedFiles
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|f
lambda|->
name|f
operator|.
name|getPath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedFiles
argument_list|,
name|gotFiles
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|TimeZone
operator|.
name|setDefault
argument_list|(
name|defaultTZ
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTimestampFilePruningTimeSlice
parameter_list|()
block|{
name|TimeZone
name|defaultTZ
init|=
name|TimeZone
operator|.
name|getDefault
argument_list|()
decl_stmt|;
try|try
block|{
name|TimeZone
operator|.
name|setDefault
argument_list|(
name|TimeZone
operator|.
name|getTimeZone
argument_list|(
literal|"UTC"
argument_list|)
argument_list|)
expr_stmt|;
name|SearchArgument
name|sarg
init|=
name|SearchArgumentFactory
operator|.
name|newBuilder
argument_list|()
operator|.
name|between
argument_list|(
literal|"ts"
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|TIMESTAMP
argument_list|,
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2019-01-03 10:16:00.000"
argument_list|)
argument_list|,
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2019-01-03 11:16:00.000"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|SyslogInputFormat
name|syslogInputFormat
init|=
operator|new
name|SyslogInputFormat
argument_list|()
decl_stmt|;
name|FileStatus
name|fs1
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs1
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-10_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs2
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs2
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-15_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs3
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs3
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-15_1.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs4
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs4
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-35_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs5
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs5
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-11-15_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs6
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs6
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-11-35_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FileStatus
argument_list|>
name|inputFiles
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|fs1
argument_list|,
name|fs2
argument_list|,
name|fs3
argument_list|,
name|fs4
argument_list|,
name|fs5
argument_list|,
name|fs6
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|expectedFiles
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|fs2
argument_list|,
name|fs3
argument_list|,
name|fs4
argument_list|,
name|fs5
argument_list|)
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|f
lambda|->
name|f
operator|.
name|getPath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FileStatus
argument_list|>
name|selectedFiles
init|=
name|syslogInputFormat
operator|.
name|pruneFiles
argument_list|(
name|sarg
argument_list|,
literal|300
argument_list|,
name|inputFiles
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|gotFiles
init|=
name|selectedFiles
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|f
lambda|->
name|f
operator|.
name|getPath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedFiles
argument_list|,
name|gotFiles
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|TimeZone
operator|.
name|setDefault
argument_list|(
name|defaultTZ
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTimestampFilePruningPredicateWithSeconds
parameter_list|()
block|{
name|TimeZone
name|defaultTZ
init|=
name|TimeZone
operator|.
name|getDefault
argument_list|()
decl_stmt|;
try|try
block|{
name|TimeZone
operator|.
name|setDefault
argument_list|(
name|TimeZone
operator|.
name|getTimeZone
argument_list|(
literal|"UTC"
argument_list|)
argument_list|)
expr_stmt|;
name|SearchArgument
name|sarg
init|=
name|SearchArgumentFactory
operator|.
name|newBuilder
argument_list|()
operator|.
name|between
argument_list|(
literal|"ts"
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|TIMESTAMP
argument_list|,
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2019-01-03 10:15:03.600"
argument_list|)
argument_list|,
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2019-01-03 11:15:04.320"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|SyslogInputFormat
name|syslogInputFormat
init|=
operator|new
name|SyslogInputFormat
argument_list|()
decl_stmt|;
name|FileStatus
name|fs1
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs1
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-00_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs2
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs2
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-15_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs3
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs3
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-15_1.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs4
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs4
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-35_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs5
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs5
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-11-15_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs6
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs6
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-11-35_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FileStatus
argument_list|>
name|inputFiles
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|fs1
argument_list|,
name|fs2
argument_list|,
name|fs3
argument_list|,
name|fs4
argument_list|,
name|fs5
argument_list|,
name|fs6
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|expectedFiles
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|fs2
argument_list|,
name|fs3
argument_list|,
name|fs4
argument_list|,
name|fs5
argument_list|)
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|f
lambda|->
name|f
operator|.
name|getPath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FileStatus
argument_list|>
name|selectedFiles
init|=
name|syslogInputFormat
operator|.
name|pruneFiles
argument_list|(
name|sarg
argument_list|,
literal|300
argument_list|,
name|inputFiles
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|gotFiles
init|=
name|selectedFiles
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|f
lambda|->
name|f
operator|.
name|getPath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedFiles
argument_list|,
name|gotFiles
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|TimeZone
operator|.
name|setDefault
argument_list|(
name|defaultTZ
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTimestampFilePruningPredicateWithSecondsFlipRange
parameter_list|()
block|{
name|TimeZone
name|defaultTZ
init|=
name|TimeZone
operator|.
name|getDefault
argument_list|()
decl_stmt|;
try|try
block|{
name|TimeZone
operator|.
name|setDefault
argument_list|(
name|TimeZone
operator|.
name|getTimeZone
argument_list|(
literal|"UTC"
argument_list|)
argument_list|)
expr_stmt|;
name|SearchArgument
name|sarg
init|=
name|SearchArgumentFactory
operator|.
name|newBuilder
argument_list|()
operator|.
name|between
argument_list|(
literal|"ts"
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|TIMESTAMP
argument_list|,
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2019-01-03 11:15:04.320"
argument_list|)
argument_list|,
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2019-01-03 10:15:03.600"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|SyslogInputFormat
name|syslogInputFormat
init|=
operator|new
name|SyslogInputFormat
argument_list|()
decl_stmt|;
name|FileStatus
name|fs1
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs1
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-00_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs2
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs2
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-15_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs3
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs3
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-15_1.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs4
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs4
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-35_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs5
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs5
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-11-15_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs6
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs6
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-11-35_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FileStatus
argument_list|>
name|inputFiles
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|fs1
argument_list|,
name|fs2
argument_list|,
name|fs3
argument_list|,
name|fs4
argument_list|,
name|fs5
argument_list|,
name|fs6
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|expectedFiles
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|FileStatus
argument_list|>
name|selectedFiles
init|=
name|syslogInputFormat
operator|.
name|pruneFiles
argument_list|(
name|sarg
argument_list|,
literal|300
argument_list|,
name|inputFiles
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|gotFiles
init|=
name|selectedFiles
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|f
lambda|->
name|f
operator|.
name|getPath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedFiles
argument_list|,
name|gotFiles
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|TimeZone
operator|.
name|setDefault
argument_list|(
name|defaultTZ
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTimestampNoFilePruningUnsupportedColumnName
parameter_list|()
block|{
name|TimeZone
name|defaultTZ
init|=
name|TimeZone
operator|.
name|getDefault
argument_list|()
decl_stmt|;
try|try
block|{
name|TimeZone
operator|.
name|setDefault
argument_list|(
name|TimeZone
operator|.
name|getTimeZone
argument_list|(
literal|"UTC"
argument_list|)
argument_list|)
expr_stmt|;
name|SearchArgument
name|sarg
init|=
name|SearchArgumentFactory
operator|.
name|newBuilder
argument_list|()
operator|.
name|between
argument_list|(
literal|"ts1"
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|TIMESTAMP
argument_list|,
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2019-01-03 11:15:04.320"
argument_list|)
argument_list|,
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2019-01-03 10:15:03.600"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|SyslogInputFormat
name|syslogInputFormat
init|=
operator|new
name|SyslogInputFormat
argument_list|()
decl_stmt|;
name|FileStatus
name|fs1
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs1
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-10_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs2
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs2
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-15_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs3
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs3
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-15_1.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs4
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs4
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-35_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs5
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs5
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-11-15_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs6
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs6
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-11-35_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FileStatus
argument_list|>
name|inputFiles
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|fs1
argument_list|,
name|fs2
argument_list|,
name|fs3
argument_list|,
name|fs4
argument_list|,
name|fs5
argument_list|,
name|fs6
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|expectedFiles
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|fs1
argument_list|,
name|fs2
argument_list|,
name|fs3
argument_list|,
name|fs4
argument_list|,
name|fs5
argument_list|,
name|fs6
argument_list|)
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|f
lambda|->
name|f
operator|.
name|getPath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FileStatus
argument_list|>
name|selectedFiles
init|=
name|syslogInputFormat
operator|.
name|pruneFiles
argument_list|(
name|sarg
argument_list|,
literal|300
argument_list|,
name|inputFiles
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|gotFiles
init|=
name|selectedFiles
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|f
lambda|->
name|f
operator|.
name|getPath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedFiles
argument_list|,
name|gotFiles
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|TimeZone
operator|.
name|setDefault
argument_list|(
name|defaultTZ
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTimestampNoFilePruningUnsupportedExpression
parameter_list|()
block|{
name|TimeZone
name|defaultTZ
init|=
name|TimeZone
operator|.
name|getDefault
argument_list|()
decl_stmt|;
try|try
block|{
name|TimeZone
operator|.
name|setDefault
argument_list|(
name|TimeZone
operator|.
name|getTimeZone
argument_list|(
literal|"UTC"
argument_list|)
argument_list|)
expr_stmt|;
name|SearchArgument
name|sarg
init|=
name|SearchArgumentFactory
operator|.
name|newBuilder
argument_list|()
operator|.
name|equals
argument_list|(
literal|"ts"
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|TIMESTAMP
argument_list|,
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2019-01-03 11:15:04.320"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|SyslogInputFormat
name|syslogInputFormat
init|=
operator|new
name|SyslogInputFormat
argument_list|()
decl_stmt|;
name|FileStatus
name|fs1
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs1
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-10_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs2
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs2
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-15_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs3
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs3
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-15_1.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs4
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs4
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-35_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs5
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs5
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-11-15_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs6
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs6
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-11-35_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FileStatus
argument_list|>
name|inputFiles
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|fs1
argument_list|,
name|fs2
argument_list|,
name|fs3
argument_list|,
name|fs4
argument_list|,
name|fs5
argument_list|,
name|fs6
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|expectedFiles
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|fs1
argument_list|,
name|fs2
argument_list|,
name|fs3
argument_list|,
name|fs4
argument_list|,
name|fs5
argument_list|,
name|fs6
argument_list|)
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|f
lambda|->
name|f
operator|.
name|getPath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FileStatus
argument_list|>
name|selectedFiles
init|=
name|syslogInputFormat
operator|.
name|pruneFiles
argument_list|(
name|sarg
argument_list|,
literal|300
argument_list|,
name|inputFiles
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|gotFiles
init|=
name|selectedFiles
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|f
lambda|->
name|f
operator|.
name|getPath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedFiles
argument_list|,
name|gotFiles
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|TimeZone
operator|.
name|setDefault
argument_list|(
name|defaultTZ
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTimestampNoFilePruningUnsupportedMultiExpression
parameter_list|()
block|{
name|TimeZone
name|defaultTZ
init|=
name|TimeZone
operator|.
name|getDefault
argument_list|()
decl_stmt|;
try|try
block|{
name|TimeZone
operator|.
name|setDefault
argument_list|(
name|TimeZone
operator|.
name|getTimeZone
argument_list|(
literal|"UTC"
argument_list|)
argument_list|)
expr_stmt|;
name|SearchArgument
name|sarg
init|=
name|SearchArgumentFactory
operator|.
name|newBuilder
argument_list|()
operator|.
name|startOr
argument_list|()
operator|.
name|equals
argument_list|(
literal|"ts"
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|TIMESTAMP
argument_list|,
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2019-01-03 11:15:04.320"
argument_list|)
argument_list|)
operator|.
name|equals
argument_list|(
literal|"ts"
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|TIMESTAMP
argument_list|,
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2020-01-03 11:15:04.320"
argument_list|)
argument_list|)
operator|.
name|end
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
name|SyslogInputFormat
name|syslogInputFormat
init|=
operator|new
name|SyslogInputFormat
argument_list|()
decl_stmt|;
name|FileStatus
name|fs1
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs1
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-10_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs2
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs2
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-15_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs3
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs3
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-15_1.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs4
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs4
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-35_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs5
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs5
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-11-15_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs6
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs6
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-11-35_0.log.gz"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FileStatus
argument_list|>
name|inputFiles
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|fs1
argument_list|,
name|fs2
argument_list|,
name|fs3
argument_list|,
name|fs4
argument_list|,
name|fs5
argument_list|,
name|fs6
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|expectedFiles
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|fs1
argument_list|,
name|fs2
argument_list|,
name|fs3
argument_list|,
name|fs4
argument_list|,
name|fs5
argument_list|,
name|fs6
argument_list|)
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|f
lambda|->
name|f
operator|.
name|getPath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FileStatus
argument_list|>
name|selectedFiles
init|=
name|syslogInputFormat
operator|.
name|pruneFiles
argument_list|(
name|sarg
argument_list|,
literal|300
argument_list|,
name|inputFiles
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|gotFiles
init|=
name|selectedFiles
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|f
lambda|->
name|f
operator|.
name|getPath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedFiles
argument_list|,
name|gotFiles
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|TimeZone
operator|.
name|setDefault
argument_list|(
name|defaultTZ
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTimestampNoFilePruningUnsupportedFilename
parameter_list|()
block|{
name|TimeZone
name|defaultTZ
init|=
name|TimeZone
operator|.
name|getDefault
argument_list|()
decl_stmt|;
try|try
block|{
name|TimeZone
operator|.
name|setDefault
argument_list|(
name|TimeZone
operator|.
name|getTimeZone
argument_list|(
literal|"UTC"
argument_list|)
argument_list|)
expr_stmt|;
name|SearchArgument
name|sarg
init|=
name|SearchArgumentFactory
operator|.
name|newBuilder
argument_list|()
operator|.
name|between
argument_list|(
literal|"ts"
argument_list|,
name|PredicateLeaf
operator|.
name|Type
operator|.
name|TIMESTAMP
argument_list|,
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2019-01-03 10:15:03.600"
argument_list|)
argument_list|,
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2019-01-03 11:15:04.320"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|SyslogInputFormat
name|syslogInputFormat
init|=
operator|new
name|SyslogInputFormat
argument_list|()
decl_stmt|;
name|FileStatus
name|fs1
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs1
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-10"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs2
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs2
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-15"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs3
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs3
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-15"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs4
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs4
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-10-35"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs5
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs5
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-11-15"
argument_list|)
argument_list|)
expr_stmt|;
name|FileStatus
name|fs6
init|=
operator|new
name|FileStatus
argument_list|()
decl_stmt|;
name|fs6
operator|.
name|setPath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"s3a://bucket/logs/dt=2019-01-01/ns=foo/app=hs2/2019-01-03-11-35"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FileStatus
argument_list|>
name|inputFiles
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|fs1
argument_list|,
name|fs2
argument_list|,
name|fs3
argument_list|,
name|fs4
argument_list|,
name|fs5
argument_list|,
name|fs6
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|expectedFiles
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|fs1
argument_list|,
name|fs2
argument_list|,
name|fs3
argument_list|,
name|fs4
argument_list|,
name|fs5
argument_list|,
name|fs6
argument_list|)
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|f
lambda|->
name|f
operator|.
name|getPath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FileStatus
argument_list|>
name|selectedFiles
init|=
name|syslogInputFormat
operator|.
name|pruneFiles
argument_list|(
name|sarg
argument_list|,
literal|300
argument_list|,
name|inputFiles
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|gotFiles
init|=
name|selectedFiles
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|f
lambda|->
name|f
operator|.
name|getPath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedFiles
argument_list|,
name|gotFiles
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|TimeZone
operator|.
name|setDefault
argument_list|(
name|defaultTZ
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

