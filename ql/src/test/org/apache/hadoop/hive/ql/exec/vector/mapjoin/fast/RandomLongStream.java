begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|vector
operator|.
name|mapjoin
operator|.
name|fast
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_class
specifier|public
class|class
name|RandomLongStream
block|{
specifier|private
name|Random
name|random
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Long
argument_list|>
name|longs
decl_stmt|;
specifier|public
name|RandomLongStream
parameter_list|(
name|Random
name|random
parameter_list|)
block|{
name|this
operator|.
name|random
operator|=
name|random
expr_stmt|;
name|longs
operator|=
operator|new
name|ArrayList
argument_list|<
name|Long
argument_list|>
argument_list|()
expr_stmt|;
block|}
specifier|public
name|long
name|next
parameter_list|()
block|{
name|long
name|longValue
init|=
name|random
operator|.
name|nextLong
argument_list|()
decl_stmt|;
name|longs
operator|.
name|add
argument_list|(
name|longValue
argument_list|)
expr_stmt|;
return|return
name|longValue
return|;
block|}
specifier|public
name|int
name|size
parameter_list|()
block|{
return|return
name|longs
operator|.
name|size
argument_list|()
return|;
block|}
specifier|public
name|long
name|get
parameter_list|(
name|int
name|i
parameter_list|)
block|{
return|return
name|longs
operator|.
name|get
argument_list|(
name|i
argument_list|)
return|;
block|}
block|}
end_class

end_unit

