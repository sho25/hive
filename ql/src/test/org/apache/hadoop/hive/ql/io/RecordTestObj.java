begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// File generated by hadoop record compiler. Do not edit.
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
package|;
end_package

begin_class
specifier|public
class|class
name|RecordTestObj
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|Record
block|{
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|meta
operator|.
name|RecordTypeInfo
name|_rio_recTypeInfo
decl_stmt|;
specifier|private
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|meta
operator|.
name|RecordTypeInfo
name|_rio_rtiFilter
decl_stmt|;
specifier|private
specifier|static
name|int
index|[]
name|_rio_rtiFilterFields
decl_stmt|;
static|static
block|{
name|_rio_recTypeInfo
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|meta
operator|.
name|RecordTypeInfo
argument_list|(
literal|"RecordTestObj"
argument_list|)
expr_stmt|;
name|_rio_recTypeInfo
operator|.
name|addField
argument_list|(
literal|"s"
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|meta
operator|.
name|TypeID
operator|.
name|StringTypeID
argument_list|)
expr_stmt|;
name|_rio_recTypeInfo
operator|.
name|addField
argument_list|(
literal|"num"
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|meta
operator|.
name|TypeID
operator|.
name|LongTypeID
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
name|s
decl_stmt|;
specifier|private
name|long
name|num
decl_stmt|;
specifier|public
name|RecordTestObj
parameter_list|()
block|{   }
specifier|public
name|RecordTestObj
parameter_list|(
specifier|final
name|String
name|s
parameter_list|,
specifier|final
name|long
name|num
parameter_list|)
block|{
name|this
operator|.
name|s
operator|=
name|s
expr_stmt|;
name|this
operator|.
name|num
operator|=
name|num
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|meta
operator|.
name|RecordTypeInfo
name|getTypeInfo
parameter_list|()
block|{
return|return
name|_rio_recTypeInfo
return|;
block|}
specifier|public
specifier|static
name|void
name|setTypeFilter
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|meta
operator|.
name|RecordTypeInfo
name|rti
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|rti
condition|)
block|{
return|return;
block|}
name|_rio_rtiFilter
operator|=
name|rti
expr_stmt|;
name|_rio_rtiFilterFields
operator|=
literal|null
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|setupRtiFields
parameter_list|()
block|{
if|if
condition|(
literal|null
operator|==
name|_rio_rtiFilter
condition|)
block|{
return|return;
block|}
comment|// we may already have done this
if|if
condition|(
literal|null
operator|!=
name|_rio_rtiFilterFields
condition|)
block|{
return|return;
block|}
name|int
name|_rio_i
decl_stmt|,
name|_rio_j
decl_stmt|;
name|_rio_rtiFilterFields
operator|=
operator|new
name|int
index|[
name|_rio_rtiFilter
operator|.
name|getFieldTypeInfos
argument_list|()
operator|.
name|size
argument_list|()
index|]
expr_stmt|;
for|for
control|(
name|_rio_i
operator|=
literal|0
init|;
name|_rio_i
operator|<
name|_rio_rtiFilterFields
operator|.
name|length
condition|;
name|_rio_i
operator|++
control|)
block|{
name|_rio_rtiFilterFields
index|[
name|_rio_i
index|]
operator|=
literal|0
expr_stmt|;
block|}
name|java
operator|.
name|util
operator|.
name|Iterator
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|meta
operator|.
name|FieldTypeInfo
argument_list|>
name|_rio_itFilter
init|=
name|_rio_rtiFilter
operator|.
name|getFieldTypeInfos
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|_rio_i
operator|=
literal|0
expr_stmt|;
while|while
condition|(
name|_rio_itFilter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|meta
operator|.
name|FieldTypeInfo
name|_rio_tInfoFilter
init|=
name|_rio_itFilter
operator|.
name|next
argument_list|()
decl_stmt|;
name|java
operator|.
name|util
operator|.
name|Iterator
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|meta
operator|.
name|FieldTypeInfo
argument_list|>
name|_rio_it
init|=
name|_rio_recTypeInfo
operator|.
name|getFieldTypeInfos
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|_rio_j
operator|=
literal|1
expr_stmt|;
while|while
condition|(
name|_rio_it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|meta
operator|.
name|FieldTypeInfo
name|_rio_tInfo
init|=
name|_rio_it
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|_rio_tInfo
operator|.
name|equals
argument_list|(
name|_rio_tInfoFilter
argument_list|)
condition|)
block|{
name|_rio_rtiFilterFields
index|[
name|_rio_i
index|]
operator|=
name|_rio_j
expr_stmt|;
break|break;
block|}
name|_rio_j
operator|++
expr_stmt|;
block|}
name|_rio_i
operator|++
expr_stmt|;
block|}
block|}
specifier|public
name|String
name|getS
parameter_list|()
block|{
return|return
name|s
return|;
block|}
specifier|public
name|void
name|setS
parameter_list|(
specifier|final
name|String
name|s
parameter_list|)
block|{
name|this
operator|.
name|s
operator|=
name|s
expr_stmt|;
block|}
specifier|public
name|long
name|getNum
parameter_list|()
block|{
return|return
name|num
return|;
block|}
specifier|public
name|void
name|setNum
parameter_list|(
specifier|final
name|long
name|num
parameter_list|)
block|{
name|this
operator|.
name|num
operator|=
name|num
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|serialize
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|RecordOutput
name|_rio_a
parameter_list|,
specifier|final
name|String
name|_rio_tag
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|_rio_a
operator|.
name|startRecord
argument_list|(
name|this
argument_list|,
name|_rio_tag
argument_list|)
expr_stmt|;
name|_rio_a
operator|.
name|writeString
argument_list|(
name|s
argument_list|,
literal|"s"
argument_list|)
expr_stmt|;
name|_rio_a
operator|.
name|writeLong
argument_list|(
name|num
argument_list|,
literal|"num"
argument_list|)
expr_stmt|;
name|_rio_a
operator|.
name|endRecord
argument_list|(
name|this
argument_list|,
name|_rio_tag
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|deserializeWithoutFilter
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|RecordInput
name|_rio_a
parameter_list|,
specifier|final
name|String
name|_rio_tag
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|_rio_a
operator|.
name|startRecord
argument_list|(
name|_rio_tag
argument_list|)
expr_stmt|;
name|s
operator|=
name|_rio_a
operator|.
name|readString
argument_list|(
literal|"s"
argument_list|)
expr_stmt|;
name|num
operator|=
name|_rio_a
operator|.
name|readLong
argument_list|(
literal|"num"
argument_list|)
expr_stmt|;
name|_rio_a
operator|.
name|endRecord
argument_list|(
name|_rio_tag
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|deserialize
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|RecordInput
name|_rio_a
parameter_list|,
specifier|final
name|String
name|_rio_tag
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
literal|null
operator|==
name|_rio_rtiFilter
condition|)
block|{
name|deserializeWithoutFilter
argument_list|(
name|_rio_a
argument_list|,
name|_rio_tag
argument_list|)
expr_stmt|;
return|return;
block|}
comment|// if we're here, we need to read based on version info
name|_rio_a
operator|.
name|startRecord
argument_list|(
name|_rio_tag
argument_list|)
expr_stmt|;
name|setupRtiFields
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|_rio_i
init|=
literal|0
init|;
name|_rio_i
operator|<
name|_rio_rtiFilter
operator|.
name|getFieldTypeInfos
argument_list|()
operator|.
name|size
argument_list|()
condition|;
name|_rio_i
operator|++
control|)
block|{
if|if
condition|(
literal|1
operator|==
name|_rio_rtiFilterFields
index|[
name|_rio_i
index|]
condition|)
block|{
name|s
operator|=
name|_rio_a
operator|.
name|readString
argument_list|(
literal|"s"
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|2
operator|==
name|_rio_rtiFilterFields
index|[
name|_rio_i
index|]
condition|)
block|{
name|num
operator|=
name|_rio_a
operator|.
name|readLong
argument_list|(
literal|"num"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|meta
operator|.
name|FieldTypeInfo
argument_list|>
name|typeInfos
init|=
call|(
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|meta
operator|.
name|FieldTypeInfo
argument_list|>
call|)
argument_list|(
name|_rio_rtiFilter
operator|.
name|getFieldTypeInfos
argument_list|()
argument_list|)
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|meta
operator|.
name|Utils
operator|.
name|skip
argument_list|(
name|_rio_a
argument_list|,
name|typeInfos
operator|.
name|get
argument_list|(
name|_rio_i
argument_list|)
operator|.
name|getFieldID
argument_list|()
argument_list|,
name|typeInfos
operator|.
name|get
argument_list|(
name|_rio_i
argument_list|)
operator|.
name|getTypeID
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|_rio_a
operator|.
name|endRecord
argument_list|(
name|_rio_tag
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|compareTo
parameter_list|(
specifier|final
name|Object
name|_rio_peer_
parameter_list|)
throws|throws
name|ClassCastException
block|{
if|if
condition|(
operator|!
operator|(
name|_rio_peer_
operator|instanceof
name|RecordTestObj
operator|)
condition|)
block|{
throw|throw
operator|new
name|ClassCastException
argument_list|(
literal|"Comparing different types of records."
argument_list|)
throw|;
block|}
name|RecordTestObj
name|_rio_peer
init|=
operator|(
name|RecordTestObj
operator|)
name|_rio_peer_
decl_stmt|;
name|int
name|_rio_ret
init|=
literal|0
decl_stmt|;
name|_rio_ret
operator|=
name|s
operator|.
name|compareTo
argument_list|(
name|_rio_peer
operator|.
name|s
argument_list|)
expr_stmt|;
if|if
condition|(
name|_rio_ret
operator|!=
literal|0
condition|)
block|{
return|return
name|_rio_ret
return|;
block|}
name|_rio_ret
operator|=
operator|(
name|num
operator|==
name|_rio_peer
operator|.
name|num
operator|)
condition|?
literal|0
else|:
operator|(
operator|(
name|num
operator|<
name|_rio_peer
operator|.
name|num
operator|)
condition|?
operator|-
literal|1
else|:
literal|1
operator|)
expr_stmt|;
if|if
condition|(
name|_rio_ret
operator|!=
literal|0
condition|)
block|{
return|return
name|_rio_ret
return|;
block|}
return|return
name|_rio_ret
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|Object
name|_rio_peer_
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|_rio_peer_
operator|instanceof
name|RecordTestObj
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|_rio_peer_
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
name|RecordTestObj
name|_rio_peer
init|=
operator|(
name|RecordTestObj
operator|)
name|_rio_peer_
decl_stmt|;
name|boolean
name|_rio_ret
init|=
literal|false
decl_stmt|;
name|_rio_ret
operator|=
name|s
operator|.
name|equals
argument_list|(
name|_rio_peer
operator|.
name|s
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|_rio_ret
condition|)
block|{
return|return
name|_rio_ret
return|;
block|}
name|_rio_ret
operator|=
operator|(
name|num
operator|==
name|_rio_peer
operator|.
name|num
operator|)
expr_stmt|;
if|if
condition|(
operator|!
name|_rio_ret
condition|)
block|{
return|return
name|_rio_ret
return|;
block|}
return|return
name|_rio_ret
return|;
block|}
annotation|@
name|Override
specifier|public
name|Object
name|clone
parameter_list|()
throws|throws
name|CloneNotSupportedException
block|{
name|RecordTestObj
name|_rio_other
init|=
operator|new
name|RecordTestObj
argument_list|()
decl_stmt|;
name|_rio_other
operator|.
name|s
operator|=
name|s
expr_stmt|;
name|_rio_other
operator|.
name|num
operator|=
name|num
expr_stmt|;
return|return
name|_rio_other
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
name|int
name|_rio_result
init|=
literal|17
decl_stmt|;
name|int
name|_rio_ret
decl_stmt|;
name|_rio_ret
operator|=
name|s
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|_rio_result
operator|=
literal|37
operator|*
name|_rio_result
operator|+
name|_rio_ret
expr_stmt|;
name|_rio_ret
operator|=
call|(
name|int
call|)
argument_list|(
name|num
operator|^
operator|(
name|num
operator|>>>
literal|32
operator|)
argument_list|)
expr_stmt|;
name|_rio_result
operator|=
literal|37
operator|*
name|_rio_result
operator|+
name|_rio_ret
expr_stmt|;
return|return
name|_rio_result
return|;
block|}
specifier|public
specifier|static
name|String
name|signature
parameter_list|()
block|{
return|return
literal|"LRecordTestObj(sl)"
return|;
block|}
specifier|public
specifier|static
class|class
name|Comparator
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|RecordComparator
block|{
specifier|public
name|Comparator
parameter_list|()
block|{
name|super
argument_list|(
name|RecordTestObj
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
specifier|static
specifier|public
name|int
name|slurpRaw
parameter_list|(
name|byte
index|[]
name|b
parameter_list|,
name|int
name|s
parameter_list|,
name|int
name|l
parameter_list|)
block|{
try|try
block|{
name|int
name|os
init|=
name|s
decl_stmt|;
block|{
name|int
name|i
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|Utils
operator|.
name|readVInt
argument_list|(
name|b
argument_list|,
name|s
argument_list|)
decl_stmt|;
name|int
name|z
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|Utils
operator|.
name|getVIntSize
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|s
operator|+=
operator|(
name|z
operator|+
name|i
operator|)
expr_stmt|;
name|l
operator|-=
operator|(
name|z
operator|+
name|i
operator|)
expr_stmt|;
block|}
block|{
name|long
name|i
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|Utils
operator|.
name|readVLong
argument_list|(
name|b
argument_list|,
name|s
argument_list|)
decl_stmt|;
name|int
name|z
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|Utils
operator|.
name|getVIntSize
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|s
operator|+=
name|z
expr_stmt|;
name|l
operator|-=
name|z
expr_stmt|;
block|}
return|return
operator|(
name|os
operator|-
name|s
operator|)
return|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|static
specifier|public
name|int
name|compareRaw
parameter_list|(
name|byte
index|[]
name|b1
parameter_list|,
name|int
name|s1
parameter_list|,
name|int
name|l1
parameter_list|,
name|byte
index|[]
name|b2
parameter_list|,
name|int
name|s2
parameter_list|,
name|int
name|l2
parameter_list|)
block|{
try|try
block|{
name|int
name|os1
init|=
name|s1
decl_stmt|;
block|{
name|int
name|i1
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|Utils
operator|.
name|readVInt
argument_list|(
name|b1
argument_list|,
name|s1
argument_list|)
decl_stmt|;
name|int
name|i2
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|Utils
operator|.
name|readVInt
argument_list|(
name|b2
argument_list|,
name|s2
argument_list|)
decl_stmt|;
name|int
name|z1
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|Utils
operator|.
name|getVIntSize
argument_list|(
name|i1
argument_list|)
decl_stmt|;
name|int
name|z2
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|Utils
operator|.
name|getVIntSize
argument_list|(
name|i2
argument_list|)
decl_stmt|;
name|s1
operator|+=
name|z1
expr_stmt|;
name|s2
operator|+=
name|z2
expr_stmt|;
name|l1
operator|-=
name|z1
expr_stmt|;
name|l2
operator|-=
name|z2
expr_stmt|;
name|int
name|r1
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|Utils
operator|.
name|compareBytes
argument_list|(
name|b1
argument_list|,
name|s1
argument_list|,
name|i1
argument_list|,
name|b2
argument_list|,
name|s2
argument_list|,
name|i2
argument_list|)
decl_stmt|;
if|if
condition|(
name|r1
operator|!=
literal|0
condition|)
block|{
return|return
operator|(
name|r1
operator|<
literal|0
operator|)
condition|?
operator|-
literal|1
else|:
literal|0
return|;
block|}
name|s1
operator|+=
name|i1
expr_stmt|;
name|s2
operator|+=
name|i2
expr_stmt|;
name|l1
operator|-=
name|i1
expr_stmt|;
name|l1
operator|-=
name|i2
expr_stmt|;
block|}
block|{
name|long
name|i1
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|Utils
operator|.
name|readVLong
argument_list|(
name|b1
argument_list|,
name|s1
argument_list|)
decl_stmt|;
name|long
name|i2
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|Utils
operator|.
name|readVLong
argument_list|(
name|b2
argument_list|,
name|s2
argument_list|)
decl_stmt|;
if|if
condition|(
name|i1
operator|!=
name|i2
condition|)
block|{
return|return
operator|(
operator|(
name|i1
operator|-
name|i2
operator|)
operator|<
literal|0
operator|)
condition|?
operator|-
literal|1
else|:
literal|0
return|;
block|}
name|int
name|z1
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|Utils
operator|.
name|getVIntSize
argument_list|(
name|i1
argument_list|)
decl_stmt|;
name|int
name|z2
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|Utils
operator|.
name|getVIntSize
argument_list|(
name|i2
argument_list|)
decl_stmt|;
name|s1
operator|+=
name|z1
expr_stmt|;
name|s2
operator|+=
name|z2
expr_stmt|;
name|l1
operator|-=
name|z1
expr_stmt|;
name|l2
operator|-=
name|z2
expr_stmt|;
block|}
return|return
operator|(
name|os1
operator|-
name|s1
operator|)
return|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|int
name|compare
parameter_list|(
name|byte
index|[]
name|b1
parameter_list|,
name|int
name|s1
parameter_list|,
name|int
name|l1
parameter_list|,
name|byte
index|[]
name|b2
parameter_list|,
name|int
name|s2
parameter_list|,
name|int
name|l2
parameter_list|)
block|{
name|int
name|ret
init|=
name|compareRaw
argument_list|(
name|b1
argument_list|,
name|s1
argument_list|,
name|l1
argument_list|,
name|b2
argument_list|,
name|s2
argument_list|,
name|l2
argument_list|)
decl_stmt|;
return|return
operator|(
name|ret
operator|==
operator|-
literal|1
operator|)
condition|?
operator|-
literal|1
else|:
operator|(
operator|(
name|ret
operator|==
literal|0
operator|)
condition|?
literal|1
else|:
literal|0
operator|)
return|;
block|}
block|}
static|static
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|record
operator|.
name|RecordComparator
operator|.
name|define
argument_list|(
name|RecordTestObj
operator|.
name|class
argument_list|,
operator|new
name|Comparator
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

