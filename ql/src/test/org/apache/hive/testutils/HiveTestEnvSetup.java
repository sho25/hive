begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|testutils
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
operator|.
name|ConfVars
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|IDriver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|lockmgr
operator|.
name|zookeeper
operator|.
name|CuratorFrameworkSingleton
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|lockmgr
operator|.
name|zookeeper
operator|.
name|ZooKeeperHiveLockManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|shims
operator|.
name|HadoopShims
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|shims
operator|.
name|HadoopShims
operator|.
name|MiniMrShim
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|shims
operator|.
name|ShimLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|zookeeper
operator|.
name|WatchedEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|zookeeper
operator|.
name|Watcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|zookeeper
operator|.
name|ZooKeeper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|ExternalResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TemporaryFolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestRule
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Sets
import|;
end_import

begin_comment
comment|/**  * Helps in setting up environments to run high level hive tests  *  * For a sample testcase see {@link TestHiveTestEnvSetup}!   * Because setting up such a complex environment is a bit more sophisticated than it should;  * this class introduces some helper concepts beyond what juni4 has  *  *<ul>  *<li>parts are decomposed into smaller {@link IHiveTestRule}  *<li>{@link HiveTestEnvContext} is visible to every methodcall</li>  *<li>invocation order of before calls are "forward"  *<li>invocation order of before calls are "backward"  *</ul>  *  *  * Later this should be migrated to junit5...when it will be possible; see HIVE-18495  */
end_comment

begin_class
specifier|public
class|class
name|HiveTestEnvSetup
extends|extends
name|ExternalResource
block|{
specifier|private
specifier|static
specifier|final
name|String
name|TEST_DATA_DIR
init|=
operator|new
name|File
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.io.tmpdir"
argument_list|)
operator|+
name|File
operator|.
name|separator
operator|+
name|HiveTestEnvSetup
operator|.
name|class
operator|.
name|getCanonicalName
argument_list|()
operator|+
literal|"-"
operator|+
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
operator|.
name|getPath
argument_list|()
operator|.
name|replaceAll
argument_list|(
literal|"\\\\"
argument_list|,
literal|"/"
argument_list|)
decl_stmt|;
specifier|static
interface|interface
name|IHiveTestRule
block|{
specifier|default
name|void
name|beforeClass
parameter_list|(
name|HiveTestEnvContext
name|ctx
parameter_list|)
throws|throws
name|Exception
block|{     }
specifier|default
name|void
name|afterClass
parameter_list|(
name|HiveTestEnvContext
name|ctx
parameter_list|)
throws|throws
name|Exception
block|{     }
specifier|default
name|void
name|beforeMethod
parameter_list|(
name|HiveTestEnvContext
name|ctx
parameter_list|)
throws|throws
name|Exception
block|{     }
specifier|default
name|void
name|afterMethod
parameter_list|(
name|HiveTestEnvContext
name|ctx
parameter_list|)
throws|throws
name|Exception
block|{     }
block|}
specifier|public
specifier|static
class|class
name|HiveTestEnvContext
block|{
specifier|public
name|File
name|tmpFolder
decl_stmt|;
specifier|public
name|HiveConf
name|hiveConf
decl_stmt|;
block|}
specifier|static
class|class
name|TmpDirSetup
implements|implements
name|IHiveTestRule
block|{
specifier|public
name|TemporaryFolder
name|tmpFolderRule
init|=
operator|new
name|TemporaryFolder
argument_list|(
operator|new
name|File
argument_list|(
name|HIVE_ROOT
operator|+
literal|"/target/tmp"
argument_list|)
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|beforeClass
parameter_list|(
name|HiveTestEnvContext
name|ctx
parameter_list|)
throws|throws
name|Exception
block|{
name|tmpFolderRule
operator|.
name|create
argument_list|()
expr_stmt|;
name|ctx
operator|.
name|tmpFolder
operator|=
name|tmpFolderRule
operator|.
name|getRoot
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterClass
parameter_list|(
name|HiveTestEnvContext
name|ctx
parameter_list|)
block|{
name|tmpFolderRule
operator|.
name|delete
argument_list|()
expr_stmt|;
name|ctx
operator|.
name|tmpFolder
operator|=
literal|null
expr_stmt|;
block|}
block|}
specifier|static
class|class
name|SetTestEnvs
implements|implements
name|IHiveTestRule
block|{
annotation|@
name|Override
specifier|public
name|void
name|beforeClass
parameter_list|(
name|HiveTestEnvContext
name|ctx
parameter_list|)
throws|throws
name|Exception
block|{
name|File
name|tmpFolder
init|=
name|ctx
operator|.
name|tmpFolder
decl_stmt|;
name|String
name|tmpFolderPath
init|=
name|tmpFolder
operator|.
name|getAbsolutePath
argument_list|()
decl_stmt|;
comment|// these are mostly copied from the root pom.xml
name|System
operator|.
name|setProperty
argument_list|(
literal|"build.test.dir"
argument_list|,
name|tmpFolderPath
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"derby.stream.error.file"
argument_list|,
name|tmpFolderPath
operator|+
literal|"/derby.log"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"hadoop.bin.path"
argument_list|,
name|HIVE_ROOT
operator|+
literal|"/testutils/hadoop"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"hadoop.log.dir"
argument_list|,
name|tmpFolderPath
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"mapred.job.tracker"
argument_list|,
literal|"local"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"log4j.configurationFile"
argument_list|,
literal|"file://"
operator|+
name|tmpFolderPath
operator|+
literal|"/conf/hive-log4j2.properties"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"log4j.debug"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"java.io.tmpdir"
argument_list|,
name|tmpFolderPath
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"test.build.data"
argument_list|,
name|tmpFolderPath
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"test.data.files"
argument_list|,
name|DATA_DIR
operator|+
literal|"/files"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"test.data.dir"
argument_list|,
name|DATA_DIR
operator|+
literal|"/files"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"test.tmp.dir"
argument_list|,
name|tmpFolderPath
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"test.tmp.dir.uri"
argument_list|,
literal|"file://"
operator|+
name|tmpFolderPath
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"test.dfs.mkdir"
argument_list|,
literal|"-mkdir -p"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"test.warehouse.dir"
argument_list|,
name|tmpFolderPath
operator|+
literal|"/warehouse"
argument_list|)
expr_stmt|;
comment|// this is changed to be *under* tmp dir
name|System
operator|.
name|setProperty
argument_list|(
literal|"java.net.preferIPv4Stack"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
comment|// not sure if this will have any effect..
name|System
operator|.
name|setProperty
argument_list|(
literal|"test.src.tables"
argument_list|,
literal|"src"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"hive.jar.directory"
argument_list|,
name|tmpFolderPath
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
class|class
name|SetupHiveConf
implements|implements
name|IHiveTestRule
block|{
specifier|private
name|HiveConf
name|savedConf
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|beforeClass
parameter_list|(
name|HiveTestEnvContext
name|ctx
parameter_list|)
throws|throws
name|Exception
block|{
name|File
name|confFolder
init|=
operator|new
name|File
argument_list|(
name|ctx
operator|.
name|tmpFolder
argument_list|,
literal|"conf"
argument_list|)
decl_stmt|;
name|FileUtils
operator|.
name|copyDirectory
argument_list|(
operator|new
name|File
argument_list|(
name|DATA_DIR
operator|+
literal|"/conf/"
argument_list|)
argument_list|,
name|confFolder
argument_list|)
expr_stmt|;
name|FileUtils
operator|.
name|copyDirectory
argument_list|(
operator|new
name|File
argument_list|(
name|DATA_DIR
operator|+
literal|"/conf/tez"
argument_list|)
argument_list|,
name|confFolder
argument_list|)
expr_stmt|;
name|HiveConf
operator|.
name|setHiveSiteLocation
argument_list|(
operator|new
name|File
argument_list|(
name|confFolder
argument_list|,
literal|"hive-site.xml"
argument_list|)
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|)
expr_stmt|;
name|HiveConf
operator|.
name|setHivemetastoreSiteUrl
argument_list|(
operator|new
name|File
argument_list|(
name|confFolder
argument_list|,
literal|"hivemetastore-site.xml"
argument_list|)
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|)
expr_stmt|;
comment|// FIXME: hiveServer2SiteUrl is not settable?
name|ctx
operator|.
name|hiveConf
operator|=
operator|new
name|HiveConf
argument_list|(
name|IDriver
operator|.
name|class
argument_list|)
expr_stmt|;
name|ctx
operator|.
name|hiveConf
operator|.
name|setBoolVar
argument_list|(
name|ConfVars
operator|.
name|HIVE_IN_TEST_IDE
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|beforeMethod
parameter_list|(
name|HiveTestEnvContext
name|ctx
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|savedConf
operator|==
literal|null
condition|)
block|{
name|savedConf
operator|=
operator|new
name|HiveConf
argument_list|(
name|ctx
operator|.
name|hiveConf
argument_list|)
expr_stmt|;
block|}
comment|// service a fresh conf for every testMethod
name|ctx
operator|.
name|hiveConf
operator|=
operator|new
name|HiveConf
argument_list|(
name|savedConf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterMethod
parameter_list|(
name|HiveTestEnvContext
name|ctx
parameter_list|)
throws|throws
name|Exception
block|{
comment|// create a fresh hiveconf; afterclass methods may get into trouble without this
name|ctx
operator|.
name|hiveConf
operator|=
operator|new
name|HiveConf
argument_list|(
name|savedConf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterClass
parameter_list|(
name|HiveTestEnvContext
name|ctx
parameter_list|)
throws|throws
name|Exception
block|{
name|savedConf
operator|=
literal|null
expr_stmt|;
name|ctx
operator|.
name|hiveConf
operator|=
literal|null
expr_stmt|;
block|}
block|}
specifier|static
class|class
name|SetupZookeeper
implements|implements
name|IHiveTestRule
block|{
specifier|private
name|ZooKeeper
name|zooKeeper
decl_stmt|;
specifier|private
name|MiniZooKeeperCluster
name|zooKeeperCluster
decl_stmt|;
specifier|private
name|int
name|zkPort
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|beforeClass
parameter_list|(
name|HiveTestEnvContext
name|ctx
parameter_list|)
throws|throws
name|Exception
block|{
name|File
name|tmpDir
init|=
operator|new
name|File
argument_list|(
name|ctx
operator|.
name|tmpFolder
argument_list|,
literal|"zookeeper"
argument_list|)
decl_stmt|;
name|zooKeeperCluster
operator|=
operator|new
name|MiniZooKeeperCluster
argument_list|()
expr_stmt|;
name|zkPort
operator|=
name|zooKeeperCluster
operator|.
name|startup
argument_list|(
name|tmpDir
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|beforeMethod
parameter_list|(
name|HiveTestEnvContext
name|ctx
parameter_list|)
throws|throws
name|Exception
block|{
name|int
name|sessionTimeout
init|=
operator|(
name|int
operator|)
name|ctx
operator|.
name|hiveConf
operator|.
name|getTimeVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_ZOOKEEPER_SESSION_TIMEOUT
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
decl_stmt|;
name|zooKeeper
operator|=
operator|new
name|ZooKeeper
argument_list|(
literal|"localhost:"
operator|+
name|zkPort
argument_list|,
name|sessionTimeout
argument_list|,
operator|new
name|Watcher
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|process
parameter_list|(
name|WatchedEvent
name|arg0
parameter_list|)
block|{         }
block|}
argument_list|)
expr_stmt|;
name|String
name|zkServer
init|=
literal|"localhost"
decl_stmt|;
name|ctx
operator|.
name|hiveConf
operator|.
name|set
argument_list|(
literal|"hive.zookeeper.quorum"
argument_list|,
name|zkServer
argument_list|)
expr_stmt|;
name|ctx
operator|.
name|hiveConf
operator|.
name|set
argument_list|(
literal|"hive.zookeeper.client.port"
argument_list|,
literal|""
operator|+
name|zkPort
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterMethod
parameter_list|(
name|HiveTestEnvContext
name|ctx
parameter_list|)
throws|throws
name|Exception
block|{
name|zooKeeper
operator|.
name|close
argument_list|()
expr_stmt|;
name|ZooKeeperHiveLockManager
operator|.
name|releaseAllLocks
argument_list|(
name|ctx
operator|.
name|hiveConf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterClass
parameter_list|(
name|HiveTestEnvContext
name|ctx
parameter_list|)
throws|throws
name|Exception
block|{
name|CuratorFrameworkSingleton
operator|.
name|closeAndReleaseInstance
argument_list|()
expr_stmt|;
if|if
condition|(
name|zooKeeperCluster
operator|!=
literal|null
condition|)
block|{
name|zooKeeperCluster
operator|.
name|shutdown
argument_list|()
expr_stmt|;
name|zooKeeperCluster
operator|=
literal|null
expr_stmt|;
block|}
block|}
block|}
specifier|static
class|class
name|SetupTez
implements|implements
name|IHiveTestRule
block|{
specifier|private
name|MiniMrShim
name|mr1
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|beforeClass
parameter_list|(
name|HiveTestEnvContext
name|ctx
parameter_list|)
throws|throws
name|Exception
block|{
name|HadoopShims
name|shims
init|=
name|ShimLoader
operator|.
name|getHadoopShims
argument_list|()
decl_stmt|;
name|mr1
operator|=
name|shims
operator|.
name|getLocalMiniTezCluster
argument_list|(
name|ctx
operator|.
name|hiveConf
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|mr1
operator|.
name|setupConfiguration
argument_list|(
name|ctx
operator|.
name|hiveConf
argument_list|)
expr_stmt|;
name|setupTez
argument_list|(
name|ctx
operator|.
name|hiveConf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterClass
parameter_list|(
name|HiveTestEnvContext
name|ctx
parameter_list|)
throws|throws
name|Exception
block|{
name|mr1
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|setupTez
parameter_list|(
name|HiveConf
name|conf
parameter_list|)
block|{
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_EXECUTION_ENGINE
argument_list|,
literal|"tez"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_USER_INSTALL_DIR
argument_list|,
name|TEST_DATA_DIR
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"tez.am.resource.memory.mb"
argument_list|,
literal|"128"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"tez.am.dag.scheduler.class"
argument_list|,
literal|"org.apache.tez.dag.app.dag.impl.DAGSchedulerNaturalOrderControlled"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
literal|"tez.local.mode"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"fs.defaultFS"
argument_list|,
literal|"file:///"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
literal|"tez.runtime.optimize.local.fetch"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"tez.staging-dir"
argument_list|,
name|TEST_DATA_DIR
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
literal|"tez.ignore.lib.uris"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|String
name|HIVE_ROOT
init|=
name|getHiveRoot
argument_list|()
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|DATA_DIR
init|=
name|HIVE_ROOT
operator|+
literal|"/data/"
decl_stmt|;
name|List
argument_list|<
name|IHiveTestRule
argument_list|>
name|parts
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
specifier|public
name|HiveTestEnvSetup
parameter_list|()
block|{
name|parts
operator|.
name|add
argument_list|(
operator|new
name|TmpDirSetup
argument_list|()
argument_list|)
expr_stmt|;
name|parts
operator|.
name|add
argument_list|(
operator|new
name|SetTestEnvs
argument_list|()
argument_list|)
expr_stmt|;
name|parts
operator|.
name|add
argument_list|(
operator|new
name|SetupHiveConf
argument_list|()
argument_list|)
expr_stmt|;
name|parts
operator|.
name|add
argument_list|(
operator|new
name|SetupZookeeper
argument_list|()
argument_list|)
expr_stmt|;
name|parts
operator|.
name|add
argument_list|(
operator|new
name|SetupTez
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|TemporaryFolder
name|tmpFolderRule
init|=
operator|new
name|TemporaryFolder
argument_list|(
operator|new
name|File
argument_list|(
name|HIVE_ROOT
operator|+
literal|"/target/tmp"
argument_list|)
argument_list|)
decl_stmt|;
specifier|private
name|HiveTestEnvContext
name|testEnvContext
init|=
operator|new
name|HiveTestEnvContext
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|before
parameter_list|()
throws|throws
name|Throwable
block|{
for|for
control|(
name|IHiveTestRule
name|p
range|:
name|parts
control|)
block|{
name|p
operator|.
name|beforeClass
argument_list|(
name|testEnvContext
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|after
parameter_list|()
block|{
try|try
block|{
for|for
control|(
name|IHiveTestRule
name|p
range|:
name|Lists
operator|.
name|reverse
argument_list|(
name|parts
argument_list|)
control|)
block|{
name|p
operator|.
name|afterClass
argument_list|(
name|testEnvContext
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"test-subsystem error"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
class|class
name|MethodRuleProxy
extends|extends
name|ExternalResource
block|{
annotation|@
name|Override
specifier|protected
name|void
name|before
parameter_list|()
throws|throws
name|Throwable
block|{
for|for
control|(
name|IHiveTestRule
name|p
range|:
name|parts
control|)
block|{
name|p
operator|.
name|beforeMethod
argument_list|(
name|testEnvContext
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|after
parameter_list|()
block|{
try|try
block|{
for|for
control|(
name|IHiveTestRule
name|p
range|:
name|Lists
operator|.
name|reverse
argument_list|(
name|parts
argument_list|)
control|)
block|{
name|p
operator|.
name|afterMethod
argument_list|(
name|testEnvContext
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"test-subsystem error"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
specifier|private
specifier|static
name|String
name|getHiveRoot
parameter_list|()
block|{
name|List
argument_list|<
name|String
argument_list|>
name|candidateSiblings
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
if|if
condition|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"hive.root"
argument_list|)
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|candidateSiblings
operator|.
name|add
argument_list|(
operator|new
name|File
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"hive.root"
argument_list|)
argument_list|)
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"error getting hive.root"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
name|candidateSiblings
operator|.
name|add
argument_list|(
operator|new
name|File
argument_list|(
literal|"."
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|string
range|:
name|candidateSiblings
control|)
block|{
name|File
name|curr
init|=
operator|new
name|File
argument_list|(
name|string
argument_list|)
decl_stmt|;
do|do
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|lls
init|=
name|Sets
operator|.
name|newHashSet
argument_list|(
name|curr
operator|.
name|list
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|lls
operator|.
name|contains
argument_list|(
literal|"itests"
argument_list|)
operator|&&
name|lls
operator|.
name|contains
argument_list|(
literal|"ql"
argument_list|)
operator|&&
name|lls
operator|.
name|contains
argument_list|(
literal|"metastore"
argument_list|)
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"detected hiveRoot: "
operator|+
name|curr
argument_list|)
expr_stmt|;
return|return
name|ensurePathEndsInSlash
argument_list|(
name|curr
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
return|;
block|}
name|curr
operator|=
name|curr
operator|.
name|getParentFile
argument_list|()
expr_stmt|;
block|}
do|while
condition|(
name|curr
operator|!=
literal|null
condition|)
do|;
block|}
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"unable to find hiveRoot"
argument_list|)
throw|;
block|}
specifier|public
specifier|static
name|String
name|ensurePathEndsInSlash
parameter_list|(
name|String
name|path
parameter_list|)
block|{
if|if
condition|(
name|path
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|(
literal|"Path cannot be null"
argument_list|)
throw|;
block|}
if|if
condition|(
name|path
operator|.
name|endsWith
argument_list|(
name|File
operator|.
name|separator
argument_list|)
condition|)
block|{
return|return
name|path
return|;
block|}
else|else
block|{
return|return
name|path
operator|+
name|File
operator|.
name|separator
return|;
block|}
block|}
specifier|public
name|File
name|getDir
parameter_list|(
name|String
name|string
parameter_list|)
block|{
try|try
block|{
return|return
name|tmpFolderRule
operator|.
name|newFolder
argument_list|(
name|string
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|TestRule
name|getMethodRule
parameter_list|()
block|{
return|return
operator|new
name|MethodRuleProxy
argument_list|()
return|;
block|}
specifier|public
name|HiveTestEnvContext
name|getTestCtx
parameter_list|()
block|{
return|return
name|testEnvContext
return|;
block|}
block|}
end_class

end_unit

