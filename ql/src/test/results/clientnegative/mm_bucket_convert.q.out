PREHOOK: query: drop table bucket0_mm
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table bucket0_mm
POSTHOOK: type: DROPTABLE
PREHOOK: query: drop table bucket1_mm
PREHOOK: type: DROPTABLE
POSTHOOK: query: drop table bucket1_mm
POSTHOOK: type: DROPTABLE
PREHOOK: query: create table bucket0_mm(key int, id int) clustered by (key) into 2 buckets
  tblproperties("transactional"="true", "transactional_properties"="insert_only")
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@bucket0_mm
POSTHOOK: query: create table bucket0_mm(key int, id int) clustered by (key) into 2 buckets
  tblproperties("transactional"="true", "transactional_properties"="insert_only")
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@bucket0_mm
PREHOOK: query: create table bucket1_mm(key int, id int) clustered by (key) into 2 buckets
  tblproperties("transactional"="true", "transactional_properties"="insert_only")
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@bucket1_mm
POSTHOOK: query: create table bucket1_mm(key int, id int) clustered by (key) into 2 buckets
  tblproperties("transactional"="true", "transactional_properties"="insert_only")
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@bucket1_mm
PREHOOK: query: alter table bucket0_mm unset tblproperties('transactional_properties', 'transactional')
PREHOOK: type: ALTERTABLE_PROPERTIES
PREHOOK: Input: default@bucket0_mm
PREHOOK: Output: default@bucket0_mm
POSTHOOK: query: alter table bucket0_mm unset tblproperties('transactional_properties', 'transactional')
POSTHOOK: type: ALTERTABLE_PROPERTIES
POSTHOOK: Input: default@bucket0_mm
POSTHOOK: Output: default@bucket0_mm
PREHOOK: query: alter table bucket1_mm unset tblproperties('transactional_properties', 'transactional')
PREHOOK: type: ALTERTABLE_PROPERTIES
PREHOOK: Input: default@bucket1_mm
PREHOOK: Output: default@bucket1_mm
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.DDLTask. Converting bucketed tables from MM is not supported by default; copying files from multiple MM directories may potentially break the buckets. You can set hive.strict.checks.bucketing to false for this query if you want to force the conversion.
