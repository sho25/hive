WARNING: Comparing a bigint and a double may result in a loss of precision.
PREHOOK: query: explain SELECT cbigint, cdouble FROM alltypesorc WHERE cbigint < cdouble and cint > 0 limit 7
PREHOOK: type: QUERY
POSTHOOK: query: explain SELECT cbigint, cdouble FROM alltypesorc WHERE cbigint < cdouble and cint > 0 limit 7
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME alltypesorc))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL cbigint)) (TOK_SELEXPR (TOK_TABLE_OR_COL cdouble))) (TOK_WHERE (and (< (TOK_TABLE_OR_COL cbigint) (TOK_TABLE_OR_COL cdouble)) (> (TOK_TABLE_OR_COL cint) 0))) (TOK_LIMIT 7)))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        alltypesorc 
          TableScan
            alias: alltypesorc
            Filter Operator
              predicate:
                  expr: ((cbigint < cdouble) and (cint > 0))
                  type: boolean
              Vectorized execution: true
              Select Operator
                expressions:
                      expr: cbigint
                      type: bigint
                      expr: cdouble
                      type: double
                outputColumnNames: _col0, _col1
                Vectorized execution: true
                Limit
                  Vectorized execution: true
                  File Output Operator
                    compressed: false
                    GlobalTableId: 0
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    Vectorized execution: true

  Stage: Stage-0
    Fetch Operator
      limit: 7


WARNING: Comparing a bigint and a double may result in a loss of precision.
PREHOOK: query: SELECT cbigint, cdouble FROM alltypesorc WHERE cbigint < cdouble and cint > 0 limit 7
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: SELECT cbigint, cdouble FROM alltypesorc WHERE cbigint < cdouble and cint > 0 limit 7
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
-1887561756	1839.0
-1887561756	-10011.0
-1887561756	-13877.0
-1887561756	10361.0
-1887561756	-8881.0
-1887561756	-2281.0
-1887561756	9531.0
PREHOOK: query: -- HIVE-3562 Some limit can be pushed down to map stage - c/p parts from limit_pushdown

explain
select ctinyint,cdouble,csmallint from alltypesorc where ctinyint is not null order by ctinyint,cdouble limit 20
PREHOOK: type: QUERY
POSTHOOK: query: -- HIVE-3562 Some limit can be pushed down to map stage - c/p parts from limit_pushdown

explain
select ctinyint,cdouble,csmallint from alltypesorc where ctinyint is not null order by ctinyint,cdouble limit 20
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME alltypesorc))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL ctinyint)) (TOK_SELEXPR (TOK_TABLE_OR_COL cdouble)) (TOK_SELEXPR (TOK_TABLE_OR_COL csmallint))) (TOK_WHERE (TOK_FUNCTION TOK_ISNOTNULL (TOK_TABLE_OR_COL ctinyint))) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL ctinyint)) (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL cdouble))) (TOK_LIMIT 20)))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        alltypesorc 
          TableScan
            alias: alltypesorc
            Filter Operator
              predicate:
                  expr: ctinyint is not null
                  type: boolean
              Vectorized execution: true
              Select Operator
                expressions:
                      expr: ctinyint
                      type: tinyint
                      expr: cdouble
                      type: double
                      expr: csmallint
                      type: smallint
                outputColumnNames: _col0, _col1, _col2
                Vectorized execution: true
                Reduce Output Operator
                  key expressions:
                        expr: _col0
                        type: tinyint
                        expr: _col1
                        type: double
                  sort order: ++
                  tag: -1
                  TopN: 20
                  TopN Hash Memory Usage: 0.3
                  value expressions:
                        expr: _col0
                        type: tinyint
                        expr: _col1
                        type: double
                        expr: _col2
                        type: smallint
                  Vectorized execution: true
      Reduce Operator Tree:
        Extract
          Limit
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 20


PREHOOK: query: select ctinyint,cdouble,csmallint from alltypesorc where ctinyint is not null order by ctinyint,cdouble limit 20
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: select ctinyint,cdouble,csmallint from alltypesorc where ctinyint is not null order by ctinyint,cdouble limit 20
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
-64	-15920.0	-15920
-64	-10462.0	-10462
-64	-9842.0	-9842
-64	-8080.0	-8080
-64	-7196.0	-7196
-64	-7196.0	-7196
-64	-7196.0	-7196
-64	-7196.0	-7196
-64	-7196.0	-7196
-64	-7196.0	-7196
-64	-7196.0	-7196
-64	-6907.0	-6907
-64	-4803.0	-4803
-64	-4040.0	-4040
-64	-4018.0	-4018
-64	-3586.0	-3586
-64	-3097.0	-3097
-64	-2919.0	-2919
-64	-1600.0	-1600
-64	-200.0	-200
PREHOOK: query: -- deduped RS
explain
select ctinyint,avg(cdouble + 1) from alltypesorc group by ctinyint order by ctinyint limit 20
PREHOOK: type: QUERY
POSTHOOK: query: -- deduped RS
explain
select ctinyint,avg(cdouble + 1) from alltypesorc group by ctinyint order by ctinyint limit 20
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME alltypesorc))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL ctinyint)) (TOK_SELEXPR (TOK_FUNCTION avg (+ (TOK_TABLE_OR_COL cdouble) 1)))) (TOK_GROUPBY (TOK_TABLE_OR_COL ctinyint)) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL ctinyint))) (TOK_LIMIT 20)))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        alltypesorc 
          TableScan
            alias: alltypesorc
            Select Operator
              expressions:
                    expr: ctinyint
                    type: tinyint
                    expr: cdouble
                    type: double
              outputColumnNames: ctinyint, cdouble
              Vectorized execution: true
              Group By Operator
                aggregations:
                      expr: avg((cdouble + 1))
                bucketGroup: false
                keys:
                      expr: ctinyint
                      type: tinyint
                mode: hash
                outputColumnNames: _col0, _col1
                Vectorized execution: true
                Reduce Output Operator
                  key expressions:
                        expr: _col0
                        type: tinyint
                  sort order: +
                  Map-reduce partition columns:
                        expr: _col0
                        type: tinyint
                  tag: -1
                  TopN: 20
                  TopN Hash Memory Usage: 0.3
                  value expressions:
                        expr: _col1
                        type: struct<count:bigint,sum:double>
      Reduce Operator Tree:
        Group By Operator
          aggregations:
                expr: avg(VALUE._col0)
          bucketGroup: false
          keys:
                expr: KEY._col0
                type: tinyint
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Select Operator
            expressions:
                  expr: _col0
                  type: tinyint
                  expr: _col1
                  type: double
            outputColumnNames: _col0, _col1
            Limit
              File Output Operator
                compressed: false
                GlobalTableId: 0
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 20


PREHOOK: query: select ctinyint,avg(cdouble + 1) from alltypesorc group by ctinyint order by ctinyint limit 20
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: select ctinyint,avg(cdouble + 1) from alltypesorc group by ctinyint order by ctinyint limit 20
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
NULL	9370.0945309795
-64	373.52941176470586
-63	2178.7272727272725
-62	245.69387755102042
-61	914.3404255319149
-60	1071.82
-59	318.27272727272725
-58	3483.2444444444445
-57	1867.0535714285713
-56	2595.818181818182
-55	2385.595744680851
-54	2712.7272727272725
-53	-532.7567567567568
-52	2810.705882352941
-51	-96.46341463414635
-50	-960.0192307692307
-49	768.7659574468086
-48	1672.909090909091
-47	-574.6428571428571
-46	3033.55
PREHOOK: query: -- distincts
explain
select distinct(ctinyint) from alltypesorc limit 20
PREHOOK: type: QUERY
POSTHOOK: query: -- distincts
explain
select distinct(ctinyint) from alltypesorc limit 20
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME alltypesorc))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECTDI (TOK_SELEXPR (TOK_TABLE_OR_COL ctinyint))) (TOK_LIMIT 20)))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        alltypesorc 
          TableScan
            alias: alltypesorc
            Select Operator
              expressions:
                    expr: ctinyint
                    type: tinyint
              outputColumnNames: ctinyint
              Vectorized execution: true
              Group By Operator
                bucketGroup: false
                keys:
                      expr: ctinyint
                      type: tinyint
                mode: hash
                outputColumnNames: _col0
                Vectorized execution: true
                Reduce Output Operator
                  key expressions:
                        expr: _col0
                        type: tinyint
                  sort order: +
                  Map-reduce partition columns:
                        expr: _col0
                        type: tinyint
                  tag: -1
                  TopN: 20
                  TopN Hash Memory Usage: 0.3
      Reduce Operator Tree:
        Group By Operator
          bucketGroup: false
          keys:
                expr: KEY._col0
                type: tinyint
          mode: mergepartial
          outputColumnNames: _col0
          Select Operator
            expressions:
                  expr: _col0
                  type: tinyint
            outputColumnNames: _col0
            Limit
              File Output Operator
                compressed: false
                GlobalTableId: 0
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 20


PREHOOK: query: select distinct(ctinyint) from alltypesorc limit 20
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: select distinct(ctinyint) from alltypesorc limit 20
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
NULL
-64
-63
-62
-61
-60
-59
-58
-57
-56
-55
-54
-53
-52
-51
-50
-49
-48
-47
-46
PREHOOK: query: explain
select ctinyint, count(distinct(cdouble)) from alltypesorc group by ctinyint limit 20
PREHOOK: type: QUERY
POSTHOOK: query: explain
select ctinyint, count(distinct(cdouble)) from alltypesorc group by ctinyint limit 20
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME alltypesorc))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL ctinyint)) (TOK_SELEXPR (TOK_FUNCTIONDI count (TOK_TABLE_OR_COL cdouble)))) (TOK_GROUPBY (TOK_TABLE_OR_COL ctinyint)) (TOK_LIMIT 20)))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        alltypesorc 
          TableScan
            alias: alltypesorc
            Select Operator
              expressions:
                    expr: ctinyint
                    type: tinyint
                    expr: cdouble
                    type: double
              outputColumnNames: ctinyint, cdouble
              Vectorized execution: true
              Group By Operator
                aggregations:
                      expr: count(DISTINCT cdouble)
                bucketGroup: false
                keys:
                      expr: ctinyint
                      type: tinyint
                      expr: cdouble
                      type: double
                mode: hash
                outputColumnNames: _col0, _col1, _col2
                Vectorized execution: true
                Reduce Output Operator
                  key expressions:
                        expr: _col0
                        type: tinyint
                        expr: _col1
                        type: double
                  sort order: ++
                  Map-reduce partition columns:
                        expr: _col0
                        type: tinyint
                  tag: -1
                  TopN: 20
                  TopN Hash Memory Usage: 0.3
                  value expressions:
                        expr: _col2
                        type: bigint
      Reduce Operator Tree:
        Group By Operator
          aggregations:
                expr: count(DISTINCT KEY._col1:0._col0)
          bucketGroup: false
          keys:
                expr: KEY._col0
                type: tinyint
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Select Operator
            expressions:
                  expr: _col0
                  type: tinyint
                  expr: _col1
                  type: bigint
            outputColumnNames: _col0, _col1
            Limit
              File Output Operator
                compressed: false
                GlobalTableId: 0
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 20


PREHOOK: query: select ctinyint, count(distinct(cdouble)) from alltypesorc group by ctinyint limit 20
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: select ctinyint, count(distinct(cdouble)) from alltypesorc group by ctinyint limit 20
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
NULL	2932
-64	24
-63	19
-62	27
-61	25
-60	27
-59	31
-58	23
-57	35
-56	36
-55	29
-54	26
-53	22
-52	33
-51	21
-50	30
-49	26
-48	29
-47	22
-46	24
PREHOOK: query: -- limit zero
explain
select ctinyint,cdouble from alltypesorc order by ctinyint limit 0
PREHOOK: type: QUERY
POSTHOOK: query: -- limit zero
explain
select ctinyint,cdouble from alltypesorc order by ctinyint limit 0
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME alltypesorc))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL ctinyint)) (TOK_SELEXPR (TOK_TABLE_OR_COL cdouble))) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL ctinyint))) (TOK_LIMIT 0)))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        alltypesorc 
          TableScan
            alias: alltypesorc
            Select Operator
              expressions:
                    expr: ctinyint
                    type: tinyint
                    expr: cdouble
                    type: double
              outputColumnNames: _col0, _col1
              Vectorized execution: true
              Reduce Output Operator
                key expressions:
                      expr: _col0
                      type: tinyint
                sort order: +
                tag: -1
                value expressions:
                      expr: _col0
                      type: tinyint
                      expr: _col1
                      type: double
                Vectorized execution: true
      Reduce Operator Tree:
        Extract
          Limit
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 0


PREHOOK: query: select ctinyint,cdouble from alltypesorc order by ctinyint limit 0
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: select ctinyint,cdouble from alltypesorc order by ctinyint limit 0
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
PREHOOK: query: -- 2MR (applied to last RS)
explain
select cdouble, sum(ctinyint) as sum from alltypesorc where ctinyint is not null group by cdouble order by sum, cdouble limit 20
PREHOOK: type: QUERY
POSTHOOK: query: -- 2MR (applied to last RS)
explain
select cdouble, sum(ctinyint) as sum from alltypesorc where ctinyint is not null group by cdouble order by sum, cdouble limit 20
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME alltypesorc))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL cdouble)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_TABLE_OR_COL ctinyint)) sum)) (TOK_WHERE (TOK_FUNCTION TOK_ISNOTNULL (TOK_TABLE_OR_COL ctinyint))) (TOK_GROUPBY (TOK_TABLE_OR_COL cdouble)) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL sum)) (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL cdouble))) (TOK_LIMIT 20)))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        alltypesorc 
          TableScan
            alias: alltypesorc
            Filter Operator
              predicate:
                  expr: ctinyint is not null
                  type: boolean
              Vectorized execution: true
              Select Operator
                expressions:
                      expr: cdouble
                      type: double
                      expr: ctinyint
                      type: tinyint
                outputColumnNames: cdouble, ctinyint
                Vectorized execution: true
                Group By Operator
                  aggregations:
                        expr: sum(ctinyint)
                  bucketGroup: false
                  keys:
                        expr: cdouble
                        type: double
                  mode: hash
                  outputColumnNames: _col0, _col1
                  Vectorized execution: true
                  Reduce Output Operator
                    key expressions:
                          expr: _col0
                          type: double
                    sort order: +
                    Map-reduce partition columns:
                          expr: _col0
                          type: double
                    tag: -1
                    value expressions:
                          expr: _col1
                          type: bigint
      Reduce Operator Tree:
        Group By Operator
          aggregations:
                expr: sum(VALUE._col0)
          bucketGroup: false
          keys:
                expr: KEY._col0
                type: double
          mode: mergepartial
          outputColumnNames: _col0, _col1
          Select Operator
            expressions:
                  expr: _col0
                  type: double
                  expr: _col1
                  type: bigint
            outputColumnNames: _col0, _col1
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Alias -> Map Operator Tree:
#### A masked pattern was here ####
          TableScan
            Reduce Output Operator
              key expressions:
                    expr: _col1
                    type: bigint
                    expr: _col0
                    type: double
              sort order: ++
              tag: -1
              TopN: 20
              TopN Hash Memory Usage: 0.3
              value expressions:
                    expr: _col0
                    type: double
                    expr: _col1
                    type: bigint
      Reduce Operator Tree:
        Extract
          Limit
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 20


PREHOOK: query: select cdouble, sum(ctinyint) as sum from alltypesorc where ctinyint is not null group by cdouble order by sum, cdouble limit 20
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: select cdouble, sum(ctinyint) as sum from alltypesorc where ctinyint is not null group by cdouble order by sum, cdouble limit 20
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
NULL	-32768
-7196.0	-2009
15601.0	-1733
4811.0	-115
-11322.0	-101
-1121.0	-89
7705.0	-88
3520.0	-86
-8118.0	-80
5241.0	-80
-11492.0	-78
9452.0	-76
557.0	-75
10496.0	-67
-15920.0	-64
-10462.0	-64
-9842.0	-64
-8080.0	-64
-6907.0	-64
-4803.0	-64
