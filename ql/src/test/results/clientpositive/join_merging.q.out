PREHOOK: query: CREATE TABLE part( 
    p_partkey INT,
    p_name STRING,
    p_mfgr STRING,
    p_brand STRING,
    p_type STRING,
    p_size INT,
    p_container STRING,
    p_retailprice DOUBLE,
    p_comment STRING
)
PREHOOK: type: CREATETABLE
POSTHOOK: query: CREATE TABLE part( 
    p_partkey INT,
    p_name STRING,
    p_mfgr STRING,
    p_brand STRING,
    p_type STRING,
    p_size INT,
    p_container STRING,
    p_retailprice DOUBLE,
    p_comment STRING
)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: default@part
PREHOOK: query: explain select p1.p_size, p2.p_size 
from part p1 left outer join part p2 on p1.p_partkey = p2.p_partkey 
  right outer join part p3 on p2.p_partkey = p3.p_partkey and 
              p1.p_size > 10
PREHOOK: type: QUERY
POSTHOOK: query: explain select p1.p_size, p2.p_size 
from part p1 left outer join part p2 on p1.p_partkey = p2.p_partkey 
  right outer join part p3 on p2.p_partkey = p3.p_partkey and 
              p1.p_size > 10
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_RIGHTOUTERJOIN (TOK_LEFTOUTERJOIN (TOK_TABREF (TOK_TABNAME part) p1) (TOK_TABREF (TOK_TABNAME part) p2) (= (. (TOK_TABLE_OR_COL p1) p_partkey) (. (TOK_TABLE_OR_COL p2) p_partkey))) (TOK_TABREF (TOK_TABNAME part) p3) (and (= (. (TOK_TABLE_OR_COL p2) p_partkey) (. (TOK_TABLE_OR_COL p3) p_partkey)) (> (. (TOK_TABLE_OR_COL p1) p_size) 10)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL p1) p_size)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL p2) p_size)))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        p1 
          TableScan
            alias: p1
            Filter Operator
              predicate:
                  expr: (p_size > 10)
                  type: boolean
              Reduce Output Operator
                key expressions:
                      expr: p_partkey
                      type: int
                sort order: +
                Map-reduce partition columns:
                      expr: p_partkey
                      type: int
                tag: 0
                value expressions:
                      expr: p_size
                      type: int
        p2 
          TableScan
            alias: p2
            Reduce Output Operator
              key expressions:
                    expr: p_partkey
                    type: int
              sort order: +
              Map-reduce partition columns:
                    expr: p_partkey
                    type: int
              tag: 1
              value expressions:
                    expr: p_size
                    type: int
        p3 
          TableScan
            alias: p3
            Reduce Output Operator
              key expressions:
                    expr: p_partkey
                    type: int
              sort order: +
              Map-reduce partition columns:
                    expr: p_partkey
                    type: int
              tag: 2
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Outer Join0 to 1
               Right Outer Join1 to 2
          condition expressions:
            0 {VALUE._col5}
            1 {VALUE._col5}
            2 
          handleSkewJoin: false
          outputColumnNames: _col5, _col16
          Select Operator
            expressions:
                  expr: _col5
                  type: int
                  expr: _col16
                  type: int
            outputColumnNames: _col0, _col1
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: explain select p1.p_size, p2.p_size 
from part p1 left outer join part p2 on p1.p_partkey = p2.p_partkey 
  right outer join part p3 on p2.p_partkey = p3.p_partkey and 
              p1.p_size > 10 and p1.p_size > p2.p_size + 10
PREHOOK: type: QUERY
POSTHOOK: query: explain select p1.p_size, p2.p_size 
from part p1 left outer join part p2 on p1.p_partkey = p2.p_partkey 
  right outer join part p3 on p2.p_partkey = p3.p_partkey and 
              p1.p_size > 10 and p1.p_size > p2.p_size + 10
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_RIGHTOUTERJOIN (TOK_LEFTOUTERJOIN (TOK_TABREF (TOK_TABNAME part) p1) (TOK_TABREF (TOK_TABNAME part) p2) (= (. (TOK_TABLE_OR_COL p1) p_partkey) (. (TOK_TABLE_OR_COL p2) p_partkey))) (TOK_TABREF (TOK_TABNAME part) p3) (and (and (= (. (TOK_TABLE_OR_COL p2) p_partkey) (. (TOK_TABLE_OR_COL p3) p_partkey)) (> (. (TOK_TABLE_OR_COL p1) p_size) 10)) (> (. (TOK_TABLE_OR_COL p1) p_size) (+ (. (TOK_TABLE_OR_COL p2) p_size) 10))))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL p1) p_size)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL p2) p_size)))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        p1 
          TableScan
            alias: p1
            Filter Operator
              predicate:
                  expr: (p_size > 10)
                  type: boolean
              Reduce Output Operator
                key expressions:
                      expr: p_partkey
                      type: int
                sort order: +
                Map-reduce partition columns:
                      expr: p_partkey
                      type: int
                tag: 0
                value expressions:
                      expr: p_size
                      type: int
        p2 
          TableScan
            alias: p2
            Reduce Output Operator
              key expressions:
                    expr: p_partkey
                    type: int
              sort order: +
              Map-reduce partition columns:
                    expr: p_partkey
                    type: int
              tag: 1
              value expressions:
                    expr: p_size
                    type: int
        p3 
          TableScan
            alias: p3
            Reduce Output Operator
              key expressions:
                    expr: p_partkey
                    type: int
              sort order: +
              Map-reduce partition columns:
                    expr: p_partkey
                    type: int
              tag: 2
      Reduce Operator Tree:
        Join Operator
          condition map:
               Left Outer Join0 to 1
               Right Outer Join1 to 2
          condition expressions:
            0 {VALUE._col5}
            1 {VALUE._col5}
            2 
          handleSkewJoin: false
          outputColumnNames: _col5, _col16
          Filter Operator
            predicate:
                expr: (_col5 > (_col16 + 10))
                type: boolean
            Select Operator
              expressions:
                    expr: _col5
                    type: int
                    expr: _col16
                    type: int
              outputColumnNames: _col0, _col1
              File Output Operator
                compressed: false
                GlobalTableId: 0
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1

