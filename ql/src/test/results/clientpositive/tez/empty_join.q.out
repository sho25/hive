PREHOOK: query: DROP TABLE IF EXISTS test_1
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS test_1
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE test_1 AS SELECT 1 AS id
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: database:default
PREHOOK: Output: default@test_1
POSTHOOK: query: CREATE TABLE test_1 AS SELECT 1 AS id
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_1
PREHOOK: query: DROP TABLE IF EXISTS test_2
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS test_2
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE test_2 (id INT)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test_2
POSTHOOK: query: CREATE TABLE test_2 (id INT)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_2
PREHOOK: query: DROP TABLE IF EXISTS test_3
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS test_3
POSTHOOK: type: DROPTABLE
PREHOOK: query: CREATE TABLE test_3 AS SELECT 1 AS id
PREHOOK: type: CREATETABLE_AS_SELECT
PREHOOK: Input: _dummy_database@_dummy_table
PREHOOK: Output: database:default
PREHOOK: Output: default@test_3
POSTHOOK: query: CREATE TABLE test_3 AS SELECT 1 AS id
POSTHOOK: type: CREATETABLE_AS_SELECT
POSTHOOK: Input: _dummy_database@_dummy_table
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_3
PREHOOK: query: explain
SELECT t1.id, t2.id, t3.id
FROM test_1 t1
LEFT JOIN test_2 t2 ON t1.id = t2.id
INNER JOIN test_3 t3 ON t1.id = t3.id
PREHOOK: type: QUERY
POSTHOOK: query: explain
SELECT t1.id, t2.id, t3.id
FROM test_1 t1
LEFT JOIN test_2 t2 ON t1.id = t2.id
INNER JOIN test_3 t3 ON t1.id = t3.id
POSTHOOK: type: QUERY
Plan not optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 2 (BROADCAST_EDGE), Map 3 (BROADCAST_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Map 1
      File Output Operator [FS_8]
        Select Operator [SEL_7] (rows=2 width=1)
          Output:["_col0","_col1","_col2"]
          Map Join Operator [MAPJOIN_16] (rows=2 width=1)
            Conds:TS_0.id=RS_4.id(Left Outer),TS_0.id=RS_5.id(Inner),Output:["_col0","_col4","_col8"]
          <-Map 2 [BROADCAST_EDGE]
            BROADCAST [RS_4]
              PartitionCols:id
              TableScan [TS_1] (rows=1 width=0)
                default@test_2,t2,Tbl:PARTIAL,Col:NONE,Output:["id"]
          <-Map 3 [BROADCAST_EDGE]
            BROADCAST [RS_5]
              PartitionCols:id
              TableScan [TS_2] (rows=1 width=1)
                default@test_3,t3,Tbl:COMPLETE,Col:NONE,Output:["id"]
          <-TableScan [TS_0] (rows=1 width=1)
              default@test_1,t1,Tbl:COMPLETE,Col:NONE,Output:["id"]

PREHOOK: query: SELECT t1.id, t2.id, t3.id
FROM test_1 t1
LEFT JOIN test_2 t2 ON t1.id = t2.id
INNER JOIN test_3 t3 ON t1.id = t3.id
PREHOOK: type: QUERY
PREHOOK: Input: default@test_1
PREHOOK: Input: default@test_2
PREHOOK: Input: default@test_3
#### A masked pattern was here ####
POSTHOOK: query: SELECT t1.id, t2.id, t3.id
FROM test_1 t1
LEFT JOIN test_2 t2 ON t1.id = t2.id
INNER JOIN test_3 t3 ON t1.id = t3.id
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_1
POSTHOOK: Input: default@test_2
POSTHOOK: Input: default@test_3
#### A masked pattern was here ####
1	NULL	1
