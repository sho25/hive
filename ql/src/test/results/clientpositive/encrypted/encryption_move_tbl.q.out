PREHOOK: query: DROP TABLE IF EXISTS encrypted_table PURGE
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS encrypted_table PURGE
POSTHOOK: type: DROPTABLE
PREHOOK: query: DROP DATABASE IF EXISTS encrypted_db
PREHOOK: type: DROPDATABASE
POSTHOOK: query: DROP DATABASE IF EXISTS encrypted_db
POSTHOOK: type: DROPDATABASE
#### A masked pattern was here ####
PREHOOK: type: CREATETABLE
#### A masked pattern was here ####
PREHOOK: Output: database:default
PREHOOK: Output: default@encrypted_table
#### A masked pattern was here ####
POSTHOOK: type: CREATETABLE
#### A masked pattern was here ####
POSTHOOK: Output: database:default
POSTHOOK: Output: default@encrypted_table
Encryption key created: 'key_128'
Encryption zone created: '/build/ql/test/data/warehouse/encrypted_table' using key: 'key_128'
PREHOOK: query: -- create database encrypted_db in its default warehouse location {hiveconf:hive.metastore.warehouse.dir}/encrypted_db.db
#### A masked pattern was here ####
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:encrypted_db
#### A masked pattern was here ####
POSTHOOK: query: -- create database encrypted_db in its default warehouse location {hiveconf:hive.metastore.warehouse.dir}/encrypted_db.db
#### A masked pattern was here ####
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:encrypted_db
#### A masked pattern was here ####
Encryption key created: 'key_128_2'
Encryption zone created: '/build/ql/test/data/warehouse/encrypted_db.db' using key: 'key_128_2'
PREHOOK: query: INSERT OVERWRITE TABLE encrypted_table SELECT * FROM src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@encrypted_table
POSTHOOK: query: INSERT OVERWRITE TABLE encrypted_table SELECT * FROM src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@encrypted_table
POSTHOOK: Lineage: encrypted_table.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: encrypted_table.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: SHOW TABLES
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:default
POSTHOOK: query: SHOW TABLES
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:default
encrypted_table
src
PREHOOK: query: -- should fail, since they are in different encryption zones
ALTER TABLE default.encrypted_table RENAME TO encrypted_db.encrypted_table_2
PREHOOK: type: ALTERTABLE_RENAME
PREHOOK: Input: default@encrypted_table
PREHOOK: Output: default@encrypted_table
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.DDLTask. Unable to alter table. Alter Table operation for default.encrypted_table failed to move data due to: '/build/ql/test/data/warehouse/encrypted_table can't be moved from encryption zone /build/ql/test/data/warehouse/encrypted_table to encryption zone /build/ql/test/data/warehouse/encrypted_db.db.' See hive log file for details.
PREHOOK: query: SHOW TABLES
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:default
POSTHOOK: query: SHOW TABLES
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:default
encrypted_table
src
PREHOOK: query: -- should succeed in Hadoop 2.7 but fail in 2.6  (HDFS-7530)
ALTER TABLE default.encrypted_table RENAME TO default.plain_table
PREHOOK: type: ALTERTABLE_RENAME
PREHOOK: Input: default@encrypted_table
PREHOOK: Output: default@encrypted_table
POSTHOOK: query: -- should succeed in Hadoop 2.7 but fail in 2.6  (HDFS-7530)
ALTER TABLE default.encrypted_table RENAME TO default.plain_table
POSTHOOK: type: ALTERTABLE_RENAME
POSTHOOK: Input: default@encrypted_table
POSTHOOK: Output: default@encrypted_table
POSTHOOK: Output: default@plain_table
PREHOOK: query: SHOW TABLES
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:default
POSTHOOK: query: SHOW TABLES
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:default
plain_table
src
PREHOOK: query: -- create table encrypted_table_outloc under default database but in a specified location other than the default db location in the warehouse
-- rename should succeed since it does not need to move data (HIVE-14909), otherwise, it would fail.
#### A masked pattern was here ####
PREHOOK: type: CREATETABLE
#### A masked pattern was here ####
PREHOOK: Output: database:default
PREHOOK: Output: default@encrypted_table_outloc
POSTHOOK: query: -- create table encrypted_table_outloc under default database but in a specified location other than the default db location in the warehouse
-- rename should succeed since it does not need to move data (HIVE-14909), otherwise, it would fail.
#### A masked pattern was here ####
POSTHOOK: type: CREATETABLE
#### A masked pattern was here ####
POSTHOOK: Output: database:default
POSTHOOK: Output: default@encrypted_table_outloc
Encryption key created: 'key_128_3'
Encryption zone created: '/build/ql/test/data/specified_table_location' using key: 'key_128_3'
PREHOOK: query: ALTER TABLE encrypted_table_outloc RENAME TO renamed_encrypted_table_outloc
PREHOOK: type: ALTERTABLE_RENAME
PREHOOK: Input: default@encrypted_table_outloc
PREHOOK: Output: default@encrypted_table_outloc
POSTHOOK: query: ALTER TABLE encrypted_table_outloc RENAME TO renamed_encrypted_table_outloc
POSTHOOK: type: ALTERTABLE_RENAME
POSTHOOK: Input: default@encrypted_table_outloc
POSTHOOK: Output: default@encrypted_table_outloc
POSTHOOK: Output: default@renamed_encrypted_table_outloc
PREHOOK: query: SHOW TABLES
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:default
POSTHOOK: query: SHOW TABLES
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:default
plain_table
renamed_encrypted_table_outloc
src
PREHOOK: query: -- create database encrypted_db_outloc in a specified location other than its default in warehouse
#### A masked pattern was here ####
PREHOOK: type: CREATEDATABASE
PREHOOK: Output: database:encrypted_db_outloc
#### A masked pattern was here ####
POSTHOOK: query: -- create database encrypted_db_outloc in a specified location other than its default in warehouse
#### A masked pattern was here ####
POSTHOOK: type: CREATEDATABASE
POSTHOOK: Output: database:encrypted_db_outloc
#### A masked pattern was here ####
Encryption key created: 'key_128_4'
Encryption zone created: '/build/ql/test/data/specified_db_location' using key: 'key_128_4'
PREHOOK: query: USE encrypted_db_outloc
PREHOOK: type: SWITCHDATABASE
PREHOOK: Input: database:encrypted_db_outloc
POSTHOOK: query: USE encrypted_db_outloc
POSTHOOK: type: SWITCHDATABASE
POSTHOOK: Input: database:encrypted_db_outloc
PREHOOK: query: CREATE TABLE encrypted_table (key INT, value STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:encrypted_db_outloc
PREHOOK: Output: encrypted_db_outloc@encrypted_table
POSTHOOK: query: CREATE TABLE encrypted_table (key INT, value STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:encrypted_db_outloc
POSTHOOK: Output: encrypted_db_outloc@encrypted_table
PREHOOK: query: INSERT OVERWRITE TABLE encrypted_table SELECT * FROM default.src
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: encrypted_db_outloc@encrypted_table
POSTHOOK: query: INSERT OVERWRITE TABLE encrypted_table SELECT * FROM default.src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: encrypted_db_outloc@encrypted_table
POSTHOOK: Lineage: encrypted_table.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: encrypted_table.value SIMPLE [(src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: ALTER TABLE encrypted_table RENAME TO renamed_encrypted_table
PREHOOK: type: ALTERTABLE_RENAME
PREHOOK: Input: encrypted_db_outloc@encrypted_table
PREHOOK: Output: encrypted_db_outloc@encrypted_table
POSTHOOK: query: ALTER TABLE encrypted_table RENAME TO renamed_encrypted_table
POSTHOOK: type: ALTERTABLE_RENAME
POSTHOOK: Input: encrypted_db_outloc@encrypted_table
POSTHOOK: Output: encrypted_db_outloc@encrypted_table
POSTHOOK: Output: encrypted_db_outloc@renamed_encrypted_table
PREHOOK: query: -- should succeed since data moves within specified_db_location
SHOW TABLES
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:encrypted_db_outloc
POSTHOOK: query: -- should succeed since data moves within specified_db_location
SHOW TABLES
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:encrypted_db_outloc
renamed_encrypted_table
PREHOOK: query: -- should fail, since they are in different encryption zones
ALTER TABLE encrypted_db_outloc.renamed_encrypted_table RENAME TO default.plain_table_2
PREHOOK: type: ALTERTABLE_RENAME
PREHOOK: Input: encrypted_db_outloc@renamed_encrypted_table
PREHOOK: Output: encrypted_db_outloc@renamed_encrypted_table
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.DDLTask. Unable to alter table. Alter Table operation for encrypted_db_outloc.renamed_encrypted_table failed to move data due to: '/build/ql/test/data/specified_db_location/renamed_encrypted_table can't be moved from an encryption zone.' See hive log file for details.
PREHOOK: query: SHOW TABLES
PREHOOK: type: SHOWTABLES
PREHOOK: Input: database:encrypted_db_outloc
POSTHOOK: query: SHOW TABLES
POSTHOOK: type: SHOWTABLES
POSTHOOK: Input: database:encrypted_db_outloc
renamed_encrypted_table
PREHOOK: query: DROP TABLE default.encrypted_table PURGE
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE default.encrypted_table PURGE
POSTHOOK: type: DROPTABLE
PREHOOK: query: DROP TABLE default.plain_table PURGE
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@plain_table
PREHOOK: Output: default@plain_table
POSTHOOK: query: DROP TABLE default.plain_table PURGE
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@plain_table
POSTHOOK: Output: default@plain_table
PREHOOK: query: DROP TABLE default.renamed_encrypted_table_outloc PURGE
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@renamed_encrypted_table_outloc
PREHOOK: Output: default@renamed_encrypted_table_outloc
POSTHOOK: query: DROP TABLE default.renamed_encrypted_table_outloc PURGE
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@renamed_encrypted_table_outloc
POSTHOOK: Output: default@renamed_encrypted_table_outloc
PREHOOK: query: DROP DATABASE encrypted_db
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:encrypted_db
PREHOOK: Output: database:encrypted_db
POSTHOOK: query: DROP DATABASE encrypted_db
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:encrypted_db
POSTHOOK: Output: database:encrypted_db
PREHOOK: query: DROP TABLE encrypted_db_outloc.renamed_encrypted_table PURGE
PREHOOK: type: DROPTABLE
PREHOOK: Input: encrypted_db_outloc@renamed_encrypted_table
PREHOOK: Output: encrypted_db_outloc@renamed_encrypted_table
POSTHOOK: query: DROP TABLE encrypted_db_outloc.renamed_encrypted_table PURGE
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: encrypted_db_outloc@renamed_encrypted_table
POSTHOOK: Output: encrypted_db_outloc@renamed_encrypted_table
PREHOOK: query: DROP DATABASE encrypted_db_outloc
PREHOOK: type: DROPDATABASE
PREHOOK: Input: database:encrypted_db_outloc
PREHOOK: Output: database:encrypted_db_outloc
POSTHOOK: query: DROP DATABASE encrypted_db_outloc
POSTHOOK: type: DROPDATABASE
POSTHOOK: Input: database:encrypted_db_outloc
POSTHOOK: Output: database:encrypted_db_outloc
