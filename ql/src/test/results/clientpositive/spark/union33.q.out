PREHOOK: query: -- SORT_BEFORE_DIFF
-- This tests that a union all with a map only subquery on one side and a 
-- subquery involving two map reduce jobs on the other runs correctly.

CREATE TABLE test_src (key STRING, value STRING)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@test_src
POSTHOOK: query: -- SORT_BEFORE_DIFF
-- This tests that a union all with a map only subquery on one side and a 
-- subquery involving two map reduce jobs on the other runs correctly.

CREATE TABLE test_src (key STRING, value STRING)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@test_src
PREHOOK: query: EXPLAIN INSERT OVERWRITE TABLE test_src 
SELECT key, value FROM (
	SELECT key, value FROM src 
	WHERE key = 0
UNION ALL
 	SELECT key, COUNT(*) AS value FROM src
 	GROUP BY key
)a
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN INSERT OVERWRITE TABLE test_src 
SELECT key, value FROM (
	SELECT key, value FROM src 
	WHERE key = 0
UNION ALL
 	SELECT key, COUNT(*) AS value FROM src
 	GROUP BY key
)a
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 4 <- Map 3 (GROUP SORT)
        Reducer 5 <- Reducer 4 (GROUP)
        Union 2 <- Map 1 (NONE), Reducer 5 (NONE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src
                  Filter Operator
                    predicate: (key = 0) (type: boolean)
                    Select Operator
                      expressions: '0' (type: string), value (type: string)
                      outputColumnNames: _col0, _col1
                      Select Operator
                        expressions: _col0 (type: string), _col1 (type: string)
                        outputColumnNames: _col0, _col1
                        File Output Operator
                          compressed: false
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.test_src
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: src
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        sort order: +
                        Map-reduce partition columns: rand() (type: double)
                        value expressions: _col1 (type: bigint)
        Reducer 4 
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: partials
                outputColumnNames: _col0, _col1
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  value expressions: _col1 (type: bigint)
        Reducer 5 
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: final
                outputColumnNames: _col0, _col1
                Select Operator
                  expressions: _col0 (type: string), UDFToString(_col1) (type: string)
                  outputColumnNames: _col0, _col1
                  Select Operator
                    expressions: _col0 (type: string), _col1 (type: string)
                    outputColumnNames: _col0, _col1
                    File Output Operator
                      compressed: false
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          name: default.test_src
        Union 2 
            Vertex: Union 2

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.test_src

  Stage: Stage-3
    Stats-Aggr Operator

PREHOOK: query: INSERT OVERWRITE TABLE test_src 
SELECT key, value FROM (
	SELECT key, value FROM src 
	WHERE key = 0
UNION ALL
 	SELECT key, COUNT(*) AS value FROM src
 	GROUP BY key
)a
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@test_src
[Error 30017]: Skipping stats aggregation by error org.apache.hadoop.hive.ql.metadata.HiveException: [Error 30015]: Stats aggregator of type counter cannot be connected to
POSTHOOK: query: INSERT OVERWRITE TABLE test_src 
SELECT key, value FROM (
	SELECT key, value FROM src 
	WHERE key = 0
UNION ALL
 	SELECT key, COUNT(*) AS value FROM src
 	GROUP BY key
)a
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@test_src
POSTHOOK: Lineage: test_src.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: test_src.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), (src)src.null, ]
PREHOOK: query: SELECT COUNT(*) FROM test_src
PREHOOK: type: QUERY
PREHOOK: Input: default@test_src
#### A masked pattern was here ####
POSTHOOK: query: SELECT COUNT(*) FROM test_src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_src
#### A masked pattern was here ####
312
PREHOOK: query: EXPLAIN INSERT OVERWRITE TABLE test_src 
SELECT key, value FROM (
	SELECT key, COUNT(*) AS value FROM src
 	GROUP BY key
UNION ALL
 	SELECT key, value FROM src 
	WHERE key = 0
)a
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN INSERT OVERWRITE TABLE test_src 
SELECT key, value FROM (
	SELECT key, COUNT(*) AS value FROM src
 	GROUP BY key
UNION ALL
 	SELECT key, value FROM src 
	WHERE key = 0
)a
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (GROUP SORT)
        Reducer 3 <- Reducer 2 (GROUP)
        Union 4 <- Map 5 (NONE), Reducer 3 (NONE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src
                  Select Operator
                    expressions: key (type: string)
                    outputColumnNames: key
                    Group By Operator
                      aggregations: count()
                      keys: key (type: string)
                      mode: hash
                      outputColumnNames: _col0, _col1
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        sort order: +
                        Map-reduce partition columns: rand() (type: double)
                        value expressions: _col1 (type: bigint)
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: src
                  Filter Operator
                    predicate: (key = 0) (type: boolean)
                    Select Operator
                      expressions: '0' (type: string), value (type: string)
                      outputColumnNames: _col0, _col1
                      Select Operator
                        expressions: _col0 (type: string), _col1 (type: string)
                        outputColumnNames: _col0, _col1
                        File Output Operator
                          compressed: false
                          table:
                              input format: org.apache.hadoop.mapred.TextInputFormat
                              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                              name: default.test_src
        Reducer 2 
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: partials
                outputColumnNames: _col0, _col1
                Reduce Output Operator
                  key expressions: _col0 (type: string)
                  sort order: +
                  Map-reduce partition columns: _col0 (type: string)
                  value expressions: _col1 (type: bigint)
        Reducer 3 
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                keys: KEY._col0 (type: string)
                mode: final
                outputColumnNames: _col0, _col1
                Select Operator
                  expressions: _col0 (type: string), UDFToString(_col1) (type: string)
                  outputColumnNames: _col0, _col1
                  Select Operator
                    expressions: _col0 (type: string), _col1 (type: string)
                    outputColumnNames: _col0, _col1
                    File Output Operator
                      compressed: false
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                          name: default.test_src
        Union 4 
            Vertex: Union 4

  Stage: Stage-2
    Dependency Collection

  Stage: Stage-0
    Move Operator
      tables:
          replace: true
          table:
              input format: org.apache.hadoop.mapred.TextInputFormat
              output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
              serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
              name: default.test_src

  Stage: Stage-3
    Stats-Aggr Operator

PREHOOK: query: INSERT OVERWRITE TABLE test_src 
SELECT key, value FROM (
	SELECT key, COUNT(*) AS value FROM src
 	GROUP BY key
UNION ALL
 	SELECT key, value FROM src 
	WHERE key = 0
)a
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@test_src
[Error 30017]: Skipping stats aggregation by error org.apache.hadoop.hive.ql.metadata.HiveException: [Error 30015]: Stats aggregator of type counter cannot be connected to
POSTHOOK: query: INSERT OVERWRITE TABLE test_src 
SELECT key, value FROM (
	SELECT key, COUNT(*) AS value FROM src
 	GROUP BY key
UNION ALL
 	SELECT key, value FROM src 
	WHERE key = 0
)a
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@test_src
POSTHOOK: Lineage: test_src.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:key, type:string, comment:default), ]
POSTHOOK: Lineage: test_src.value EXPRESSION [(src)src.null, (src)src.FieldSchema(name:value, type:string, comment:default), ]
PREHOOK: query: SELECT COUNT(*) FROM test_src
PREHOOK: type: QUERY
PREHOOK: Input: default@test_src
#### A masked pattern was here ####
POSTHOOK: query: SELECT COUNT(*) FROM test_src
POSTHOOK: type: QUERY
POSTHOOK: Input: default@test_src
#### A masked pattern was here ####
312
