PREHOOK: query: create table tst1(key STRING, cnt INT)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@tst1
POSTHOOK: query: create table tst1(key STRING, cnt INT)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@tst1
PREHOOK: query: INSERT OVERWRITE TABLE tst1
SELECT a.key, count(1) FROM src a group by a.key
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: default@tst1
[Error 30017]: Skipping stats aggregation by error org.apache.hadoop.hive.ql.metadata.HiveException: [Error 30015]: Stats aggregator of type counter cannot be connected to
POSTHOOK: query: INSERT OVERWRITE TABLE tst1
SELECT a.key, count(1) FROM src a group by a.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: default@tst1
POSTHOOK: Lineage: tst1.cnt EXPRESSION [(src)a.null, ]
POSTHOOK: Lineage: tst1.key SIMPLE [(src)a.FieldSchema(name:key, type:string, comment:default), ]
PREHOOK: query: explain 
SELECT sum(a.cnt)  FROM tst1 a JOIN tst1 b ON a.key = b.key
PREHOOK: type: QUERY
POSTHOOK: query: explain 
SELECT sum(a.cnt)  FROM tst1 a JOIN tst1 b ON a.key = b.key
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (GROUP PARTITION-LEVEL SORT, 1), Map 4 (GROUP PARTITION-LEVEL SORT, 1)
        Reducer 3 <- Reducer 2 (GROUP, 1)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 17 Data size: 1791 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 9 Data size: 948 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: key (type: string)
                      sort order: +
                      Map-reduce partition columns: key (type: string)
                      Statistics: Num rows: 9 Data size: 948 Basic stats: COMPLETE Column stats: NONE
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 17 Data size: 1791 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: key is not null (type: boolean)
                    Statistics: Num rows: 9 Data size: 948 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      key expressions: key (type: string)
                      sort order: +
                      Map-reduce partition columns: key (type: string)
                      Statistics: Num rows: 9 Data size: 948 Basic stats: COMPLETE Column stats: NONE
                      value expressions: cnt (type: int)
        Reducer 2 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                condition expressions:
                  0 {VALUE._col0}
                  1 
                outputColumnNames: _col1
                Statistics: Num rows: 9 Data size: 1042 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col1 (type: int)
                  outputColumnNames: _col1
                  Statistics: Num rows: 9 Data size: 1042 Basic stats: COMPLETE Column stats: NONE
                  Group By Operator
                    aggregations: sum(_col1)
                    mode: hash
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      sort order: 
                      Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: bigint)
        Reducer 3 
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: bigint)
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT sum(a.cnt)  FROM tst1 a JOIN tst1 b ON a.key = b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@tst1
#### A masked pattern was here ####
POSTHOOK: query: SELECT sum(a.cnt)  FROM tst1 a JOIN tst1 b ON a.key = b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@tst1
#### A masked pattern was here ####
500
