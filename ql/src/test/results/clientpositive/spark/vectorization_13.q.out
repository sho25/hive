PREHOOK: query: EXPLAIN
SELECT   cboolean1,
         ctinyint,
         ctimestamp1,
         cfloat,
         cstring1,
         (-(ctinyint)),
         MAX(ctinyint),
         ((-(ctinyint)) + MAX(ctinyint)),
         SUM(cfloat),
         (SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))),
         (-(SUM(cfloat))),
         (79.553 * cfloat),
         STDDEV_POP(cfloat),
         (-(SUM(cfloat))),
         STDDEV_POP(ctinyint),
         (((-(ctinyint)) + MAX(ctinyint)) - 10.175),
         (-((-(SUM(cfloat))))),
         (-26.28 / (-((-(SUM(cfloat)))))),
         MAX(cfloat),
         ((SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))) / ctinyint),
         MIN(ctinyint)
FROM     alltypesorc
WHERE    (((cfloat < 3569)
           AND ((10.175 >= cdouble)
                AND (cboolean1 != 1)))
          OR ((ctimestamp1 > 11)
              AND ((ctimestamp2 != 12)
                   AND (ctinyint < 9763215.5639))))
GROUP BY cboolean1, ctinyint, ctimestamp1, cfloat, cstring1
LIMIT 40
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
SELECT   cboolean1,
         ctinyint,
         ctimestamp1,
         cfloat,
         cstring1,
         (-(ctinyint)),
         MAX(ctinyint),
         ((-(ctinyint)) + MAX(ctinyint)),
         SUM(cfloat),
         (SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))),
         (-(SUM(cfloat))),
         (79.553 * cfloat),
         STDDEV_POP(cfloat),
         (-(SUM(cfloat))),
         STDDEV_POP(ctinyint),
         (((-(ctinyint)) + MAX(ctinyint)) - 10.175),
         (-((-(SUM(cfloat))))),
         (-26.28 / (-((-(SUM(cfloat)))))),
         MAX(cfloat),
         ((SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))) / ctinyint),
         MIN(ctinyint)
FROM     alltypesorc
WHERE    (((cfloat < 3569)
           AND ((10.175 >= cdouble)
                AND (cboolean1 != 1)))
          OR ((ctimestamp1 > 11)
              AND ((ctimestamp2 != 12)
                   AND (ctinyint < 9763215.5639))))
GROUP BY cboolean1, ctinyint, ctimestamp1, cfloat, cstring1
LIMIT 40
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (GROUP, 1)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: alltypesorc
                  Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (((cfloat < 3569.0) and ((10.175 >= cdouble) and (cboolean1 <> 1))) or ((ctimestamp1 > 11) and ((ctimestamp2 <> 12) and (ctinyint < 9763215.5639)))) (type: boolean)
                    Statistics: Num rows: 2730 Data size: 83809 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: cboolean1 (type: boolean), ctinyint (type: tinyint), ctimestamp1 (type: timestamp), cfloat (type: float), cstring1 (type: string)
                      outputColumnNames: cboolean1, ctinyint, ctimestamp1, cfloat, cstring1
                      Statistics: Num rows: 2730 Data size: 83809 Basic stats: COMPLETE Column stats: NONE
                      Group By Operator
                        aggregations: max(ctinyint), sum(cfloat), stddev_pop(cfloat), stddev_pop(ctinyint), max(cfloat), min(ctinyint)
                        keys: cboolean1 (type: boolean), ctinyint (type: tinyint), ctimestamp1 (type: timestamp), cfloat (type: float), cstring1 (type: string)
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10
                        Statistics: Num rows: 2730 Data size: 83809 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          key expressions: _col0 (type: boolean), _col1 (type: tinyint), _col2 (type: timestamp), _col3 (type: float), _col4 (type: string)
                          sort order: +++++
                          Map-reduce partition columns: _col0 (type: boolean), _col1 (type: tinyint), _col2 (type: timestamp), _col3 (type: float), _col4 (type: string)
                          Statistics: Num rows: 2730 Data size: 83809 Basic stats: COMPLETE Column stats: NONE
                          value expressions: _col5 (type: tinyint), _col6 (type: double), _col7 (type: struct<count:bigint,sum:double,variance:double>), _col8 (type: struct<count:bigint,sum:double,variance:double>), _col9 (type: float), _col10 (type: tinyint)
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0), sum(VALUE._col1), stddev_pop(VALUE._col2), stddev_pop(VALUE._col3), max(VALUE._col4), min(VALUE._col5)
                keys: KEY._col0 (type: boolean), KEY._col1 (type: tinyint), KEY._col2 (type: timestamp), KEY._col3 (type: float), KEY._col4 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10
                Statistics: Num rows: 1365 Data size: 41904 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: boolean), _col1 (type: tinyint), _col2 (type: timestamp), _col3 (type: float), _col4 (type: string), (- _col1) (type: tinyint), _col5 (type: tinyint), ((- _col1) + _col5) (type: tinyint), _col6 (type: double), (_col6 * ((- _col1) + _col5)) (type: double), (- _col6) (type: double), (79.553 * _col3) (type: double), _col7 (type: double), (- _col6) (type: double), _col8 (type: double), (((- _col1) + _col5) - 10.175) (type: double), (- (- _col6)) (type: double), (-26.28 / (- (- _col6))) (type: double), _col9 (type: float), ((_col6 * ((- _col1) + _col5)) / _col1) (type: double), _col10 (type: tinyint)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20
                  Statistics: Num rows: 1365 Data size: 41904 Basic stats: COMPLETE Column stats: NONE
                  Limit
                    Number of rows: 40
                    Statistics: Num rows: 40 Data size: 1200 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 40 Data size: 1200 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 40
      Processor Tree:
        ListSink

PREHOOK: query: SELECT   cboolean1,
         ctinyint,
         ctimestamp1,
         cfloat,
         cstring1,
         (-(ctinyint)),
         MAX(ctinyint),
         ((-(ctinyint)) + MAX(ctinyint)),
         SUM(cfloat),
         (SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))),
         (-(SUM(cfloat))),
         (79.553 * cfloat),
         STDDEV_POP(cfloat),
         (-(SUM(cfloat))),
         STDDEV_POP(ctinyint),
         (((-(ctinyint)) + MAX(ctinyint)) - 10.175),
         (-((-(SUM(cfloat))))),
         (-26.28 / (-((-(SUM(cfloat)))))),
         MAX(cfloat),
         ((SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))) / ctinyint),
         MIN(ctinyint)
FROM     alltypesorc
WHERE    (((cfloat < 3569)
           AND ((10.175 >= cdouble)
                AND (cboolean1 != 1)))
          OR ((ctimestamp1 > 11)
              AND ((ctimestamp2 != 12)
                   AND (ctinyint < 9763215.5639))))
GROUP BY cboolean1, ctinyint, ctimestamp1, cfloat, cstring1
LIMIT 40
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: SELECT   cboolean1,
         ctinyint,
         ctimestamp1,
         cfloat,
         cstring1,
         (-(ctinyint)),
         MAX(ctinyint),
         ((-(ctinyint)) + MAX(ctinyint)),
         SUM(cfloat),
         (SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))),
         (-(SUM(cfloat))),
         (79.553 * cfloat),
         STDDEV_POP(cfloat),
         (-(SUM(cfloat))),
         STDDEV_POP(ctinyint),
         (((-(ctinyint)) + MAX(ctinyint)) - 10.175),
         (-((-(SUM(cfloat))))),
         (-26.28 / (-((-(SUM(cfloat)))))),
         MAX(cfloat),
         ((SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))) / ctinyint),
         MIN(ctinyint)
FROM     alltypesorc
WHERE    (((cfloat < 3569)
           AND ((10.175 >= cdouble)
                AND (cboolean1 != 1)))
          OR ((ctimestamp1 > 11)
              AND ((ctimestamp2 != 12)
                   AND (ctinyint < 9763215.5639))))
GROUP BY cboolean1, ctinyint, ctimestamp1, cfloat, cstring1
LIMIT 40
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
NULL	-31	1969-12-31 16:00:16.059	-31.0	NULL	31	-31	0	-31.0	-0.0	31.0	-2466.143	0.0	31.0	0.0	-10.175	-31.0	0.847741935483871	-31.0	0.0	-31
true	50	1969-12-31 16:00:16.338	50.0	821UdmGbkEf4j	-50	50	0	50.0	0.0	-50.0	3977.6499999999996	0.0	-50.0	0.0	-10.175	50.0	-0.5256000000000001	50.0	0.0	50
NULL	23	1969-12-31 16:00:11.785	23.0	NULL	-23	23	0	23.0	0.0	-23.0	1829.719	0.0	-23.0	0.0	-10.175	23.0	-1.142608695652174	23.0	0.0	23
true	14	1969-12-31 16:00:11.528	14.0	821UdmGbkEf4j	-14	14	0	14.0	0.0	-14.0	1113.742	0.0	-14.0	0.0	-10.175	14.0	-1.8771428571428572	14.0	0.0	14
true	50	1969-12-31 16:00:11.087	50.0	1cGVWH7n1QU	-50	50	0	50.0	0.0	-50.0	3977.6499999999996	0.0	-50.0	0.0	-10.175	50.0	-0.5256000000000001	50.0	0.0	50
NULL	13	1969-12-31 16:00:12.498	13.0	NULL	-13	13	0	13.0	0.0	-13.0	1034.1889999999999	0.0	-13.0	0.0	-10.175	13.0	-2.0215384615384617	13.0	0.0	13
true	36	1969-12-31 16:00:15.145	36.0	1cGVWH7n1QU	-36	36	0	36.0	0.0	-36.0	2863.908	0.0	-36.0	0.0	-10.175	36.0	-0.73	36.0	0.0	36
true	3	1969-12-31 16:00:14.349	3.0	cvLH6Eat2yFsyy7p	-3	3	0	3.0	0.0	-3.0	238.659	0.0	-3.0	0.0	-10.175	3.0	-8.76	3.0	0.0	3
NULL	-4	1969-12-31 16:00:13.237	-4.0	NULL	4	-4	0	-4.0	-0.0	4.0	-318.212	0.0	4.0	0.0	-10.175	-4.0	6.57	-4.0	0.0	-4
NULL	-20	1969-12-31 16:00:13.131	-20.0	NULL	20	-20	0	-20.0	-0.0	20.0	-1591.06	0.0	20.0	0.0	-10.175	-20.0	1.314	-20.0	0.0	-20
true	30	1969-12-31 16:00:15.705	30.0	821UdmGbkEf4j	-30	30	0	30.0	0.0	-30.0	2386.59	0.0	-30.0	0.0	-10.175	30.0	-0.876	30.0	0.0	30
true	-57	1969-12-31 16:00:13.365	-57.0	1cGVWH7n1QU	57	-57	0	-57.0	-0.0	57.0	-4534.521	0.0	57.0	0.0	-10.175	-57.0	0.4610526315789474	-57.0	0.0	-57
true	40	1969-12-31 16:00:16.188	40.0	1cGVWH7n1QU	-40	40	0	40.0	0.0	-40.0	3182.12	0.0	-40.0	0.0	-10.175	40.0	-0.657	40.0	0.0	40
NULL	-21	1969-12-31 16:00:12.544	-21.0	NULL	21	-21	0	-21.0	-0.0	21.0	-1670.6129999999998	0.0	21.0	0.0	-10.175	-21.0	1.2514285714285716	-21.0	0.0	-21
NULL	7	1969-12-31 16:00:14.872	7.0	NULL	-7	7	0	7.0	0.0	-7.0	556.871	0.0	-7.0	0.0	-10.175	7.0	-3.7542857142857144	7.0	0.0	7
true	-34	1969-12-31 16:00:14.043	-34.0	821UdmGbkEf4j	34	-34	0	-34.0	-0.0	34.0	-2704.8019999999997	0.0	34.0	0.0	-10.175	-34.0	0.7729411764705882	-34.0	0.0	-34
NULL	-58	1969-12-31 16:00:15.658	-58.0	NULL	58	-58	0	-58.0	-0.0	58.0	-4614.074	0.0	58.0	0.0	-10.175	-58.0	0.4531034482758621	-58.0	0.0	-58
true	-59	1969-12-31 16:00:11.231	-59.0	821UdmGbkEf4j	59	-59	0	-59.0	-0.0	59.0	-4693.6269999999995	0.0	59.0	0.0	-10.175	-59.0	0.44542372881355935	-59.0	0.0	-59
NULL	44	1969-12-31 16:00:16.279	44.0	NULL	-44	44	0	44.0	0.0	-44.0	3500.332	0.0	-44.0	0.0	-10.175	44.0	-0.5972727272727273	44.0	0.0	44
true	-27	1969-12-31 16:00:14.723	-27.0	1cGVWH7n1QU	27	-27	0	-27.0	-0.0	27.0	-2147.931	0.0	27.0	0.0	-10.175	-27.0	0.9733333333333334	-27.0	0.0	-27
NULL	0	1969-12-31 16:00:13.396	0.0	NULL	0	0	0	0.0	0.0	-0.0	0.0	0.0	-0.0	0.0	-10.175	0.0	NULL	0.0	NULL	0
true	-25	1969-12-31 16:00:15.516	-25.0	821UdmGbkEf4j	25	-25	0	-25.0	-0.0	25.0	-1988.8249999999998	0.0	25.0	0.0	-10.175	-25.0	1.0512000000000001	-25.0	0.0	-25
true	-40	1969-12-31 16:00:11.833	-40.0	cvLH6Eat2yFsyy7p	40	-40	0	-40.0	-0.0	40.0	-3182.12	0.0	40.0	0.0	-10.175	-40.0	0.657	-40.0	0.0	-40
NULL	29	1969-12-31 16:00:16.19	29.0	NULL	-29	29	0	29.0	0.0	-29.0	2307.037	0.0	-29.0	0.0	-10.175	29.0	-0.9062068965517242	29.0	0.0	29
NULL	-27	1969-12-31 16:00:15.435	-27.0	NULL	27	-27	0	-27.0	-0.0	27.0	-2147.931	0.0	27.0	0.0	-10.175	-27.0	0.9733333333333334	-27.0	0.0	-27
NULL	-63	1969-12-31 16:00:15.436	-63.0	NULL	63	-63	0	-63.0	-0.0	63.0	-5011.839	0.0	63.0	0.0	-10.175	-63.0	0.41714285714285715	-63.0	0.0	-63
NULL	-6	1969-12-31 16:00:11.883	-6.0	NULL	6	-6	0	-6.0	-0.0	6.0	-477.318	0.0	6.0	0.0	-10.175	-6.0	4.38	-6.0	0.0	-6
true	14	1969-12-31 16:00:11.302	14.0	821UdmGbkEf4j	-14	14	0	14.0	0.0	-14.0	1113.742	0.0	-14.0	0.0	-10.175	14.0	-1.8771428571428572	14.0	0.0	14
true	-63	1969-12-31 16:00:14.899	-63.0	cvLH6Eat2yFsyy7p	63	-63	0	-63.0	-0.0	63.0	-5011.839	0.0	63.0	0.0	-10.175	-63.0	0.41714285714285715	-63.0	0.0	-63
true	-13	1969-12-31 16:00:15.223	-13.0	1cGVWH7n1QU	13	-13	0	-13.0	-0.0	13.0	-1034.1889999999999	0.0	13.0	0.0	-10.175	-13.0	2.0215384615384617	-13.0	0.0	-13
true	49	1969-12-31 16:00:15.541	49.0	cvLH6Eat2yFsyy7p	-49	49	0	49.0	0.0	-49.0	3898.0969999999998	0.0	-49.0	0.0	-10.175	49.0	-0.5363265306122449	49.0	0.0	49
true	-60	1969-12-31 16:00:12.291	-60.0	821UdmGbkEf4j	60	-60	0	-60.0	-0.0	60.0	-4773.18	0.0	60.0	0.0	-10.175	-60.0	0.438	-60.0	0.0	-60
NULL	32	1969-12-31 16:00:14.026	32.0	NULL	-32	32	0	32.0	0.0	-32.0	2545.696	0.0	-32.0	0.0	-10.175	32.0	-0.82125	32.0	0.0	32
true	16	1969-12-31 16:00:15.698	16.0	1cGVWH7n1QU	-16	16	0	16.0	0.0	-16.0	1272.848	0.0	-16.0	0.0	-10.175	16.0	-1.6425	16.0	0.0	16
NULL	57	1969-12-31 16:00:14.011	57.0	NULL	-57	57	0	57.0	0.0	-57.0	4534.521	0.0	-57.0	0.0	-10.175	57.0	-0.4610526315789474	57.0	0.0	57
true	41	1969-12-31 16:00:12.235	41.0	cvLH6Eat2yFsyy7p	-41	41	0	41.0	0.0	-41.0	3261.673	0.0	-41.0	0.0	-10.175	41.0	-0.6409756097560976	41.0	0.0	41
true	-64	1969-12-31 16:00:12.857	-64.0	821UdmGbkEf4j	64	-64	0	-64.0	-0.0	64.0	-5091.392	0.0	64.0	0.0	-10.175	-64.0	0.410625	-64.0	0.0	-64
true	36	1969-12-31 16:00:13.825	36.0	cvLH6Eat2yFsyy7p	-36	36	0	36.0	0.0	-36.0	2863.908	0.0	-36.0	0.0	-10.175	36.0	-0.73	36.0	0.0	36
NULL	-15	1969-12-31 16:00:15.186	-15.0	NULL	15	-15	0	-15.0	-0.0	15.0	-1193.295	0.0	15.0	0.0	-10.175	-15.0	1.752	-15.0	0.0	-15
true	-2	1969-12-31 16:00:15.431	-2.0	1cGVWH7n1QU	2	-2	0	-2.0	-0.0	2.0	-159.106	0.0	2.0	0.0	-10.175	-2.0	13.14	-2.0	0.0	-2
PREHOOK: query: -- double compare timestamp
EXPLAIN
SELECT   cboolean1,
         ctinyint,
         ctimestamp1,
         cfloat,
         cstring1,
         (-(ctinyint)),
         MAX(ctinyint),
         ((-(ctinyint)) + MAX(ctinyint)),
         SUM(cfloat),
         (SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))),
         (-(SUM(cfloat))),
         (79.553 * cfloat),
         STDDEV_POP(cfloat),
         (-(SUM(cfloat))),
         STDDEV_POP(ctinyint),
         (((-(ctinyint)) + MAX(ctinyint)) - 10.175),
         (-((-(SUM(cfloat))))),
         (-26.28 / (-((-(SUM(cfloat)))))),
         MAX(cfloat),
         ((SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))) / ctinyint),
         MIN(ctinyint)
FROM     alltypesorc
WHERE    (((cfloat < 3569)
           AND ((10.175 >= cdouble)
                AND (cboolean1 != 1)))
          OR ((ctimestamp1 > -1.388)
              AND ((ctimestamp2 != -1.3359999999999999)
                   AND (ctinyint < 9763215.5639))))
GROUP BY cboolean1, ctinyint, ctimestamp1, cfloat, cstring1
LIMIT 40
PREHOOK: type: QUERY
POSTHOOK: query: -- double compare timestamp
EXPLAIN
SELECT   cboolean1,
         ctinyint,
         ctimestamp1,
         cfloat,
         cstring1,
         (-(ctinyint)),
         MAX(ctinyint),
         ((-(ctinyint)) + MAX(ctinyint)),
         SUM(cfloat),
         (SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))),
         (-(SUM(cfloat))),
         (79.553 * cfloat),
         STDDEV_POP(cfloat),
         (-(SUM(cfloat))),
         STDDEV_POP(ctinyint),
         (((-(ctinyint)) + MAX(ctinyint)) - 10.175),
         (-((-(SUM(cfloat))))),
         (-26.28 / (-((-(SUM(cfloat)))))),
         MAX(cfloat),
         ((SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))) / ctinyint),
         MIN(ctinyint)
FROM     alltypesorc
WHERE    (((cfloat < 3569)
           AND ((10.175 >= cdouble)
                AND (cboolean1 != 1)))
          OR ((ctimestamp1 > -1.388)
              AND ((ctimestamp2 != -1.3359999999999999)
                   AND (ctinyint < 9763215.5639))))
GROUP BY cboolean1, ctinyint, ctimestamp1, cfloat, cstring1
LIMIT 40
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (GROUP, 1)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: alltypesorc
                  Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (((cfloat < 3569.0) and ((10.175 >= cdouble) and (cboolean1 <> 1))) or ((ctimestamp1 > -1.388) and ((ctimestamp2 <> -1.3359999999999999) and (ctinyint < 9763215.5639)))) (type: boolean)
                    Statistics: Num rows: 2730 Data size: 83809 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: cboolean1 (type: boolean), ctinyint (type: tinyint), ctimestamp1 (type: timestamp), cfloat (type: float), cstring1 (type: string)
                      outputColumnNames: cboolean1, ctinyint, ctimestamp1, cfloat, cstring1
                      Statistics: Num rows: 2730 Data size: 83809 Basic stats: COMPLETE Column stats: NONE
                      Group By Operator
                        aggregations: max(ctinyint), sum(cfloat), stddev_pop(cfloat), stddev_pop(ctinyint), max(cfloat), min(ctinyint)
                        keys: cboolean1 (type: boolean), ctinyint (type: tinyint), ctimestamp1 (type: timestamp), cfloat (type: float), cstring1 (type: string)
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10
                        Statistics: Num rows: 2730 Data size: 83809 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          key expressions: _col0 (type: boolean), _col1 (type: tinyint), _col2 (type: timestamp), _col3 (type: float), _col4 (type: string)
                          sort order: +++++
                          Map-reduce partition columns: _col0 (type: boolean), _col1 (type: tinyint), _col2 (type: timestamp), _col3 (type: float), _col4 (type: string)
                          Statistics: Num rows: 2730 Data size: 83809 Basic stats: COMPLETE Column stats: NONE
                          value expressions: _col5 (type: tinyint), _col6 (type: double), _col7 (type: struct<count:bigint,sum:double,variance:double>), _col8 (type: struct<count:bigint,sum:double,variance:double>), _col9 (type: float), _col10 (type: tinyint)
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0), sum(VALUE._col1), stddev_pop(VALUE._col2), stddev_pop(VALUE._col3), max(VALUE._col4), min(VALUE._col5)
                keys: KEY._col0 (type: boolean), KEY._col1 (type: tinyint), KEY._col2 (type: timestamp), KEY._col3 (type: float), KEY._col4 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10
                Statistics: Num rows: 1365 Data size: 41904 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: boolean), _col1 (type: tinyint), _col2 (type: timestamp), _col3 (type: float), _col4 (type: string), (- _col1) (type: tinyint), _col5 (type: tinyint), ((- _col1) + _col5) (type: tinyint), _col6 (type: double), (_col6 * ((- _col1) + _col5)) (type: double), (- _col6) (type: double), (79.553 * _col3) (type: double), _col7 (type: double), (- _col6) (type: double), _col8 (type: double), (((- _col1) + _col5) - 10.175) (type: double), (- (- _col6)) (type: double), (-26.28 / (- (- _col6))) (type: double), _col9 (type: float), ((_col6 * ((- _col1) + _col5)) / _col1) (type: double), _col10 (type: tinyint)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20
                  Statistics: Num rows: 1365 Data size: 41904 Basic stats: COMPLETE Column stats: NONE
                  Limit
                    Number of rows: 40
                    Statistics: Num rows: 40 Data size: 1200 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 40 Data size: 1200 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 40
      Processor Tree:
        ListSink

PREHOOK: query: SELECT   cboolean1,
         ctinyint,
         ctimestamp1,
         cfloat,
         cstring1,
         (-(ctinyint)),
         MAX(ctinyint),
         ((-(ctinyint)) + MAX(ctinyint)),
         SUM(cfloat),
         (SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))),
         (-(SUM(cfloat))),
         (79.553 * cfloat),
         STDDEV_POP(cfloat),
         (-(SUM(cfloat))),
         STDDEV_POP(ctinyint),
         (((-(ctinyint)) + MAX(ctinyint)) - 10.175),
         (-((-(SUM(cfloat))))),
         (-26.28 / (-((-(SUM(cfloat)))))),
         MAX(cfloat),
         ((SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))) / ctinyint),
         MIN(ctinyint)
FROM     alltypesorc
WHERE    (((cfloat < 3569)
           AND ((10.175 >= cdouble)
                AND (cboolean1 != 1)))
          OR ((ctimestamp1 > -1.388)
              AND ((ctimestamp2 != -1.3359999999999999)
                   AND (ctinyint < 9763215.5639))))
GROUP BY cboolean1, ctinyint, ctimestamp1, cfloat, cstring1
LIMIT 40
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: SELECT   cboolean1,
         ctinyint,
         ctimestamp1,
         cfloat,
         cstring1,
         (-(ctinyint)),
         MAX(ctinyint),
         ((-(ctinyint)) + MAX(ctinyint)),
         SUM(cfloat),
         (SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))),
         (-(SUM(cfloat))),
         (79.553 * cfloat),
         STDDEV_POP(cfloat),
         (-(SUM(cfloat))),
         STDDEV_POP(ctinyint),
         (((-(ctinyint)) + MAX(ctinyint)) - 10.175),
         (-((-(SUM(cfloat))))),
         (-26.28 / (-((-(SUM(cfloat)))))),
         MAX(cfloat),
         ((SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))) / ctinyint),
         MIN(ctinyint)
FROM     alltypesorc
WHERE    (((cfloat < 3569)
           AND ((10.175 >= cdouble)
                AND (cboolean1 != 1)))
          OR ((ctimestamp1 > -1.388)
              AND ((ctimestamp2 != -1.3359999999999999)
                   AND (ctinyint < 9763215.5639))))
GROUP BY cboolean1, ctinyint, ctimestamp1, cfloat, cstring1
LIMIT 40
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
NULL	-26	1969-12-31 16:00:08.33	-26.0	NULL	26	-26	0	-26.0	-0.0	26.0	-2068.3779999999997	0.0	26.0	0.0	-10.175	-26.0	1.0107692307692309	-26.0	0.0	-26
NULL	-6	1969-12-31 16:00:07.423	-6.0	NULL	6	-6	0	-6.0	-0.0	6.0	-477.318	0.0	6.0	0.0	-10.175	-6.0	4.38	-6.0	0.0	-6
true	55	1969-12-31 15:59:58.969	55.0	cvLH6Eat2yFsyy7p	-55	55	0	55.0	0.0	-55.0	4375.415	0.0	-55.0	0.0	-10.175	55.0	-0.47781818181818186	55.0	0.0	55
true	14	1969-12-31 16:00:08.209	14.0	1cGVWH7n1QU	-14	14	0	14.0	0.0	-14.0	1113.742	0.0	-14.0	0.0	-10.175	14.0	-1.8771428571428572	14.0	0.0	14
true	48	1969-12-31 16:00:00.923	48.0	1cGVWH7n1QU	-48	48	0	48.0	0.0	-48.0	3818.544	0.0	-48.0	0.0	-10.175	48.0	-0.5475	48.0	0.0	48
true	-10	1969-12-31 16:00:00.082	-10.0	1cGVWH7n1QU	10	-10	0	-10.0	-0.0	10.0	-795.53	0.0	10.0	0.0	-10.175	-10.0	2.628	-10.0	0.0	-10
true	-55	1969-12-31 16:00:05.591	-55.0	1cGVWH7n1QU	55	-55	0	-55.0	-0.0	55.0	-4375.415	0.0	55.0	0.0	-10.175	-55.0	0.47781818181818186	-55.0	0.0	-55
NULL	-35	1969-12-31 16:00:04.52	-35.0	NULL	35	-35	0	-35.0	-0.0	35.0	-2784.355	0.0	35.0	0.0	-10.175	-35.0	0.7508571428571429	-35.0	0.0	-35
NULL	-8	1969-12-31 16:00:00.65	-8.0	NULL	8	-8	0	-8.0	-0.0	8.0	-636.424	0.0	8.0	0.0	-10.175	-8.0	3.285	-8.0	0.0	-8
NULL	-20	1969-12-31 16:00:13.131	-20.0	NULL	20	-20	0	-20.0	-0.0	20.0	-1591.06	0.0	20.0	0.0	-10.175	-20.0	1.314	-20.0	0.0	-20
true	30	1969-12-31 16:00:15.705	30.0	821UdmGbkEf4j	-30	30	0	30.0	0.0	-30.0	2386.59	0.0	-30.0	0.0	-10.175	30.0	-0.876	30.0	0.0	30
true	40	1969-12-31 16:00:16.188	40.0	1cGVWH7n1QU	-40	40	0	40.0	0.0	-40.0	3182.12	0.0	-40.0	0.0	-10.175	40.0	-0.657	40.0	0.0	40
NULL	-21	1969-12-31 16:00:12.544	-21.0	NULL	21	-21	0	-21.0	-0.0	21.0	-1670.6129999999998	0.0	21.0	0.0	-10.175	-21.0	1.2514285714285716	-21.0	0.0	-21
true	-34	1969-12-31 16:00:14.043	-34.0	821UdmGbkEf4j	34	-34	0	-34.0	-0.0	34.0	-2704.8019999999997	0.0	34.0	0.0	-10.175	-34.0	0.7729411764705882	-34.0	0.0	-34
NULL	23	1969-12-31 16:00:08.307	23.0	NULL	-23	23	0	23.0	0.0	-23.0	1829.719	0.0	-23.0	0.0	-10.175	23.0	-1.142608695652174	23.0	0.0	23
true	8	1969-12-31 16:00:10.496	8.0	821UdmGbkEf4j	-8	8	0	8.0	0.0	-8.0	636.424	0.0	-8.0	0.0	-10.175	8.0	-3.285	8.0	0.0	8
NULL	-55	1969-12-31 16:00:08.896	-55.0	NULL	55	-55	0	-55.0	-0.0	55.0	-4375.415	0.0	55.0	0.0	-10.175	-55.0	0.47781818181818186	-55.0	0.0	-55
NULL	-57	1969-12-31 16:00:02.707	-57.0	NULL	57	-57	0	-57.0	-0.0	57.0	-4534.521	0.0	57.0	0.0	-10.175	-57.0	0.4610526315789474	-57.0	0.0	-57
true	1	1969-12-31 16:00:00.125	1.0	cvLH6Eat2yFsyy7p	-1	1	0	1.0	0.0	-1.0	79.553	0.0	-1.0	0.0	-10.175	1.0	-26.28	1.0	0.0	1
true	-1	1969-12-31 16:00:00.107	-1.0	1cGVWH7n1QU	1	-1	0	-1.0	-0.0	1.0	-79.553	0.0	1.0	0.0	-10.175	-1.0	26.28	-1.0	0.0	-1
true	-59	1969-12-31 16:00:11.231	-59.0	821UdmGbkEf4j	59	-59	0	-59.0	-0.0	59.0	-4693.6269999999995	0.0	59.0	0.0	-10.175	-59.0	0.44542372881355935	-59.0	0.0	-59
NULL	33	1969-12-31 16:00:07.006	33.0	NULL	-33	33	0	33.0	0.0	-33.0	2625.249	0.0	-33.0	0.0	-10.175	33.0	-0.7963636363636364	33.0	0.0	33
NULL	-58	1969-12-31 16:00:15.658	-58.0	NULL	58	-58	0	-58.0	-0.0	58.0	-4614.074	0.0	58.0	0.0	-10.175	-58.0	0.4531034482758621	-58.0	0.0	-58
true	-6	1969-12-31 16:00:07.372	-6.0	cvLH6Eat2yFsyy7p	6	-6	0	-6.0	-0.0	6.0	-477.318	0.0	6.0	0.0	-10.175	-6.0	4.38	-6.0	0.0	-6
true	-27	1969-12-31 16:00:14.723	-27.0	1cGVWH7n1QU	27	-27	0	-27.0	-0.0	27.0	-2147.931	0.0	27.0	0.0	-10.175	-27.0	0.9733333333333334	-27.0	0.0	-27
NULL	29	1969-12-31 16:00:16.19	29.0	NULL	-29	29	0	29.0	0.0	-29.0	2307.037	0.0	-29.0	0.0	-10.175	29.0	-0.9062068965517242	29.0	0.0	29
NULL	-27	1969-12-31 16:00:15.435	-27.0	NULL	27	-27	0	-27.0	-0.0	27.0	-2147.931	0.0	27.0	0.0	-10.175	-27.0	0.9733333333333334	-27.0	0.0	-27
true	33	1969-12-31 16:00:09.924	33.0	cvLH6Eat2yFsyy7p	-33	33	0	33.0	0.0	-33.0	2625.249	0.0	-33.0	0.0	-10.175	33.0	-0.7963636363636364	33.0	0.0	33
NULL	-18	1969-12-31 16:00:00.564	-18.0	NULL	18	-18	0	-18.0	-0.0	18.0	-1431.954	0.0	18.0	0.0	-10.175	-18.0	1.46	-18.0	0.0	-18
NULL	-51	1969-12-31 16:00:02.011	-51.0	NULL	51	-51	0	-51.0	-0.0	51.0	-4057.203	0.0	51.0	0.0	-10.175	-51.0	0.5152941176470588	-51.0	0.0	-51
true	-8	1969-12-31 16:00:02.109	-8.0	cvLH6Eat2yFsyy7p	8	-8	0	-8.0	-0.0	8.0	-636.424	0.0	8.0	0.0	-10.175	-8.0	3.285	-8.0	0.0	-8
true	-13	1969-12-31 16:00:15.223	-13.0	1cGVWH7n1QU	13	-13	0	-13.0	-0.0	13.0	-1034.1889999999999	0.0	13.0	0.0	-10.175	-13.0	2.0215384615384617	-13.0	0.0	-13
true	-52	1969-12-31 16:00:01.824	-52.0	821UdmGbkEf4j	52	-52	0	-52.0	-0.0	52.0	-4136.755999999999	0.0	52.0	0.0	-10.175	-52.0	0.5053846153846154	-52.0	0.0	-52
true	-28	1969-12-31 16:00:10.554	-28.0	821UdmGbkEf4j	28	-28	0	-28.0	-0.0	28.0	-2227.484	0.0	28.0	0.0	-10.175	-28.0	0.9385714285714286	-28.0	0.0	-28
true	2	1969-12-31 16:00:06.546	2.0	821UdmGbkEf4j	-2	2	0	2.0	0.0	-2.0	159.106	0.0	-2.0	0.0	-10.175	2.0	-13.14	2.0	0.0	2
true	40	1969-12-31 16:00:02.842	40.0	1cGVWH7n1QU	-40	40	0	40.0	0.0	-40.0	3182.12	0.0	-40.0	0.0	-10.175	40.0	-0.657	40.0	0.0	40
NULL	55	1969-12-31 16:00:02.215	55.0	NULL	-55	55	0	55.0	0.0	-55.0	4375.415	0.0	-55.0	0.0	-10.175	55.0	-0.47781818181818186	55.0	0.0	55
NULL	22	1969-12-31 16:00:00.621	22.0	NULL	-22	22	0	22.0	0.0	-22.0	1750.166	0.0	-22.0	0.0	-10.175	22.0	-1.1945454545454546	22.0	0.0	22
NULL	58	1969-12-31 16:00:03.366	58.0	NULL	-58	58	0	58.0	0.0	-58.0	4614.074	0.0	-58.0	0.0	-10.175	58.0	-0.4531034482758621	58.0	0.0	58
true	0	1969-12-31 16:00:08.742	0.0	821UdmGbkEf4j	0	0	0	0.0	0.0	-0.0	0.0	0.0	-0.0	0.0	-10.175	0.0	NULL	0.0	NULL	0
