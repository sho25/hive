PREHOOK: query: EXPLAIN
SELECT   cboolean1,
         ctinyint,
         ctimestamp1,
         cfloat,
         cstring1,
         (-(ctinyint)),
         MAX(ctinyint),
         ((-(ctinyint)) + MAX(ctinyint)),
         SUM(cfloat),
         (SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))),
         (-(SUM(cfloat))),
         (79.553 * cfloat),
         STDDEV_POP(cfloat),
         (-(SUM(cfloat))),
         STDDEV_POP(ctinyint),
         (((-(ctinyint)) + MAX(ctinyint)) - 10.175),
         (-((-(SUM(cfloat))))),
         (-26.28 / (-((-(SUM(cfloat)))))),
         MAX(cfloat),
         ((SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))) / ctinyint),
         MIN(ctinyint)
FROM     alltypesorc
WHERE    (((cfloat < 3569)
           AND ((10.175 >= cdouble)
                AND (cboolean1 != 1)))
          OR ((ctimestamp1 > 11)
              AND ((ctimestamp2 != 12)
                   AND (ctinyint < 9763215.5639))))
GROUP BY cboolean1, ctinyint, ctimestamp1, cfloat, cstring1
LIMIT 40
PREHOOK: type: QUERY
POSTHOOK: query: EXPLAIN
SELECT   cboolean1,
         ctinyint,
         ctimestamp1,
         cfloat,
         cstring1,
         (-(ctinyint)),
         MAX(ctinyint),
         ((-(ctinyint)) + MAX(ctinyint)),
         SUM(cfloat),
         (SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))),
         (-(SUM(cfloat))),
         (79.553 * cfloat),
         STDDEV_POP(cfloat),
         (-(SUM(cfloat))),
         STDDEV_POP(ctinyint),
         (((-(ctinyint)) + MAX(ctinyint)) - 10.175),
         (-((-(SUM(cfloat))))),
         (-26.28 / (-((-(SUM(cfloat)))))),
         MAX(cfloat),
         ((SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))) / ctinyint),
         MIN(ctinyint)
FROM     alltypesorc
WHERE    (((cfloat < 3569)
           AND ((10.175 >= cdouble)
                AND (cboolean1 != 1)))
          OR ((ctimestamp1 > 11)
              AND ((ctimestamp2 != 12)
                   AND (ctinyint < 9763215.5639))))
GROUP BY cboolean1, ctinyint, ctimestamp1, cfloat, cstring1
LIMIT 40
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (GROUP, 1)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: alltypesorc
                  Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (((cfloat < 3569.0) and ((10.175 >= cdouble) and (cboolean1 <> 1))) or ((ctimestamp1 > 11) and ((ctimestamp2 <> 12) and (ctinyint < 9763215.5639)))) (type: boolean)
                    Statistics: Num rows: 2730 Data size: 83809 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: cboolean1 (type: boolean), ctinyint (type: tinyint), ctimestamp1 (type: timestamp), cfloat (type: float), cstring1 (type: string)
                      outputColumnNames: cboolean1, ctinyint, ctimestamp1, cfloat, cstring1
                      Statistics: Num rows: 2730 Data size: 83809 Basic stats: COMPLETE Column stats: NONE
                      Group By Operator
                        aggregations: max(ctinyint), sum(cfloat), stddev_pop(cfloat), stddev_pop(ctinyint), max(cfloat), min(ctinyint)
                        keys: cboolean1 (type: boolean), ctinyint (type: tinyint), ctimestamp1 (type: timestamp), cfloat (type: float), cstring1 (type: string)
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10
                        Statistics: Num rows: 2730 Data size: 83809 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          key expressions: _col0 (type: boolean), _col1 (type: tinyint), _col2 (type: timestamp), _col3 (type: float), _col4 (type: string)
                          sort order: +++++
                          Map-reduce partition columns: _col0 (type: boolean), _col1 (type: tinyint), _col2 (type: timestamp), _col3 (type: float), _col4 (type: string)
                          Statistics: Num rows: 2730 Data size: 83809 Basic stats: COMPLETE Column stats: NONE
                          value expressions: _col5 (type: tinyint), _col6 (type: double), _col7 (type: struct<count:bigint,sum:double,variance:double>), _col8 (type: struct<count:bigint,sum:double,variance:double>), _col9 (type: float), _col10 (type: tinyint)
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0), sum(VALUE._col1), stddev_pop(VALUE._col2), stddev_pop(VALUE._col3), max(VALUE._col4), min(VALUE._col5)
                keys: KEY._col0 (type: boolean), KEY._col1 (type: tinyint), KEY._col2 (type: timestamp), KEY._col3 (type: float), KEY._col4 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10
                Statistics: Num rows: 1365 Data size: 41904 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: boolean), _col1 (type: tinyint), _col2 (type: timestamp), _col3 (type: float), _col4 (type: string), (- _col1) (type: tinyint), _col5 (type: tinyint), ((- _col1) + _col5) (type: tinyint), _col6 (type: double), (_col6 * ((- _col1) + _col5)) (type: double), (- _col6) (type: double), (79.553 * _col3) (type: double), _col7 (type: double), (- _col6) (type: double), _col8 (type: double), (((- _col1) + _col5) - 10.175) (type: double), (- (- _col6)) (type: double), (-26.28 / (- (- _col6))) (type: double), _col9 (type: float), ((_col6 * ((- _col1) + _col5)) / _col1) (type: double), _col10 (type: tinyint)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20
                  Statistics: Num rows: 1365 Data size: 41904 Basic stats: COMPLETE Column stats: NONE
                  Limit
                    Number of rows: 40
                    Statistics: Num rows: 40 Data size: 1200 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 40 Data size: 1200 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 40
      Processor Tree:
        ListSink

PREHOOK: query: SELECT   cboolean1,
         ctinyint,
         ctimestamp1,
         cfloat,
         cstring1,
         (-(ctinyint)),
         MAX(ctinyint),
         ((-(ctinyint)) + MAX(ctinyint)),
         SUM(cfloat),
         (SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))),
         (-(SUM(cfloat))),
         (79.553 * cfloat),
         STDDEV_POP(cfloat),
         (-(SUM(cfloat))),
         STDDEV_POP(ctinyint),
         (((-(ctinyint)) + MAX(ctinyint)) - 10.175),
         (-((-(SUM(cfloat))))),
         (-26.28 / (-((-(SUM(cfloat)))))),
         MAX(cfloat),
         ((SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))) / ctinyint),
         MIN(ctinyint)
FROM     alltypesorc
WHERE    (((cfloat < 3569)
           AND ((10.175 >= cdouble)
                AND (cboolean1 != 1)))
          OR ((ctimestamp1 > 11)
              AND ((ctimestamp2 != 12)
                   AND (ctinyint < 9763215.5639))))
GROUP BY cboolean1, ctinyint, ctimestamp1, cfloat, cstring1
LIMIT 40
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: SELECT   cboolean1,
         ctinyint,
         ctimestamp1,
         cfloat,
         cstring1,
         (-(ctinyint)),
         MAX(ctinyint),
         ((-(ctinyint)) + MAX(ctinyint)),
         SUM(cfloat),
         (SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))),
         (-(SUM(cfloat))),
         (79.553 * cfloat),
         STDDEV_POP(cfloat),
         (-(SUM(cfloat))),
         STDDEV_POP(ctinyint),
         (((-(ctinyint)) + MAX(ctinyint)) - 10.175),
         (-((-(SUM(cfloat))))),
         (-26.28 / (-((-(SUM(cfloat)))))),
         MAX(cfloat),
         ((SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))) / ctinyint),
         MIN(ctinyint)
FROM     alltypesorc
WHERE    (((cfloat < 3569)
           AND ((10.175 >= cdouble)
                AND (cboolean1 != 1)))
          OR ((ctimestamp1 > 11)
              AND ((ctimestamp2 != 12)
                   AND (ctinyint < 9763215.5639))))
GROUP BY cboolean1, ctinyint, ctimestamp1, cfloat, cstring1
LIMIT 40
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
NULL	-25	1969-12-31 16:00:13.374	-25.0	NULL	25	-25	0	-25.0	-0.0	25.0	-1988.8249999999998	0.0	25.0	0.0	-10.175	-25.0	1.0512000000000001	-25.0	0.0	-25
NULL	62	1969-12-31 16:00:13.524	62.0	NULL	-62	62	0	62.0	0.0	-62.0	4932.286	0.0	-62.0	0.0	-10.175	62.0	-0.4238709677419355	62.0	0.0	62
NULL	-38	1969-12-31 16:00:14.548	-38.0	NULL	38	-38	0	-38.0	-0.0	38.0	-3023.014	0.0	38.0	0.0	-10.175	-38.0	0.6915789473684211	-38.0	0.0	-38
true	26	1969-12-31 16:00:14.341	26.0	1cGVWH7n1QU	-26	26	0	26.0	0.0	-26.0	2068.3779999999997	0.0	-26.0	0.0	-10.175	26.0	-1.0107692307692309	26.0	0.0	26
NULL	-62	1969-12-31 16:00:12.388	-62.0	NULL	62	-62	0	-62.0	-0.0	62.0	-4932.286	0.0	62.0	0.0	-10.175	-62.0	0.4238709677419355	-62.0	0.0	-62
NULL	28	1969-12-31 16:00:12.148	28.0	NULL	-28	28	0	28.0	0.0	-28.0	2227.484	0.0	-28.0	0.0	-10.175	28.0	-0.9385714285714286	28.0	0.0	28
true	49	1969-12-31 16:00:12.273	49.0	821UdmGbkEf4j	-49	49	0	49.0	0.0	-49.0	3898.0969999999998	0.0	-49.0	0.0	-10.175	49.0	-0.5363265306122449	49.0	0.0	49
true	13	1969-12-31 16:00:12.554	13.0	cvLH6Eat2yFsyy7p	-13	13	0	13.0	0.0	-13.0	1034.1889999999999	0.0	-13.0	0.0	-10.175	13.0	-2.0215384615384617	13.0	0.0	13
NULL	41	1969-12-31 16:00:14.017	41.0	NULL	-41	41	0	41.0	0.0	-41.0	3261.673	0.0	-41.0	0.0	-10.175	41.0	-0.6409756097560976	41.0	0.0	41
NULL	-62	1969-12-31 16:00:14.247	-62.0	NULL	62	-62	0	-62.0	-0.0	62.0	-4932.286	0.0	62.0	0.0	-10.175	-62.0	0.4238709677419355	-62.0	0.0	-62
NULL	-49	1969-12-31 16:00:11.627	-49.0	NULL	49	-49	0	-49.0	-0.0	49.0	-3898.0969999999998	0.0	49.0	0.0	-10.175	-49.0	0.5363265306122449	-49.0	0.0	-49
NULL	40	1969-12-31 16:00:14.977	40.0	NULL	-40	40	0	40.0	0.0	-40.0	3182.12	0.0	-40.0	0.0	-10.175	40.0	-0.657	40.0	0.0	40
NULL	13	1969-12-31 16:00:14.548	13.0	NULL	-13	13	0	13.0	0.0	-13.0	1034.1889999999999	0.0	-13.0	0.0	-10.175	13.0	-2.0215384615384617	13.0	0.0	13
NULL	-2	1969-12-31 16:00:14.391	-2.0	NULL	2	-2	0	-2.0	-0.0	2.0	-159.106	0.0	2.0	0.0	-10.175	-2.0	13.14	-2.0	0.0	-2
true	-22	1969-12-31 16:00:14.318	-22.0	1cGVWH7n1QU	22	-22	0	-22.0	-0.0	22.0	-1750.166	0.0	22.0	0.0	-10.175	-22.0	1.1945454545454546	-22.0	0.0	-22
true	34	1969-12-31 16:00:13.221	34.0	821UdmGbkEf4j	-34	34	0	34.0	0.0	-34.0	2704.8019999999997	0.0	-34.0	0.0	-10.175	34.0	-0.7729411764705882	34.0	0.0	34
NULL	18	1969-12-31 16:00:12.437	18.0	NULL	-18	18	0	18.0	0.0	-18.0	1431.954	0.0	-18.0	0.0	-10.175	18.0	-1.46	18.0	0.0	18
NULL	62	1969-12-31 16:00:14.982	62.0	NULL	-62	62	0	62.0	0.0	-62.0	4932.286	0.0	-62.0	0.0	-10.175	62.0	-0.4238709677419355	62.0	0.0	62
true	38	1969-12-31 16:00:14.239	38.0	821UdmGbkEf4j	-38	38	0	38.0	0.0	-38.0	3023.014	0.0	-38.0	0.0	-10.175	38.0	-0.6915789473684211	38.0	0.0	38
true	61	1969-12-31 16:00:15.673	61.0	1cGVWH7n1QU	-61	61	0	61.0	0.0	-61.0	4852.733	0.0	-61.0	0.0	-10.175	61.0	-0.4308196721311476	61.0	0.0	61
true	9	1969-12-31 16:00:11.544	9.0	1cGVWH7n1QU	-9	9	0	9.0	0.0	-9.0	715.977	0.0	-9.0	0.0	-10.175	9.0	-2.92	9.0	0.0	9
NULL	-51	1969-12-31 16:00:12.494	-51.0	NULL	51	-51	0	-51.0	-0.0	51.0	-4057.203	0.0	51.0	0.0	-10.175	-51.0	0.5152941176470588	-51.0	0.0	-51
true	25	1969-12-31 16:00:13.338	25.0	cvLH6Eat2yFsyy7p	-25	25	0	25.0	0.0	-25.0	1988.8249999999998	0.0	-25.0	0.0	-10.175	25.0	-1.0512000000000001	25.0	0.0	25
true	-14	1969-12-31 16:00:15.625	-14.0	cvLH6Eat2yFsyy7p	14	-14	0	-14.0	-0.0	14.0	-1113.742	0.0	14.0	0.0	-10.175	-14.0	1.8771428571428572	-14.0	0.0	-14
true	-34	1969-12-31 16:00:15.254	-34.0	821UdmGbkEf4j	34	-34	0	-34.0	-0.0	34.0	-2704.8019999999997	0.0	34.0	0.0	-10.175	-34.0	0.7729411764705882	-34.0	0.0	-34
true	-1	1969-12-31 16:00:16.189	-1.0	cvLH6Eat2yFsyy7p	1	-1	0	-1.0	-0.0	1.0	-79.553	0.0	1.0	0.0	-10.175	-1.0	26.28	-1.0	0.0	-1
NULL	-30	1969-12-31 16:00:12.935	-30.0	NULL	30	-30	0	-30.0	-0.0	30.0	-2386.59	0.0	30.0	0.0	-10.175	-30.0	0.876	-30.0	0.0	-30
true	-53	1969-12-31 16:00:11.977	-53.0	821UdmGbkEf4j	53	-53	0	-53.0	-0.0	53.0	-4216.309	0.0	53.0	0.0	-10.175	-53.0	0.4958490566037736	-53.0	0.0	-53
true	6	1969-12-31 16:00:11.357	6.0	cvLH6Eat2yFsyy7p	-6	6	0	6.0	0.0	-6.0	477.318	0.0	-6.0	0.0	-10.175	6.0	-4.38	6.0	0.0	6
NULL	30	1969-12-31 16:00:11.876	30.0	NULL	-30	30	0	30.0	0.0	-30.0	2386.59	0.0	-30.0	0.0	-10.175	30.0	-0.876	30.0	0.0	30
NULL	48	1969-12-31 16:00:15.512	48.0	NULL	-48	48	0	48.0	0.0	-48.0	3818.544	0.0	-48.0	0.0	-10.175	48.0	-0.5475	48.0	0.0	48
NULL	-21	1969-12-31 16:00:13.32	-21.0	NULL	21	-21	0	-21.0	-0.0	21.0	-1670.6129999999998	0.0	21.0	0.0	-10.175	-21.0	1.2514285714285716	-21.0	0.0	-21
NULL	-42	1969-12-31 16:00:16.191	-42.0	NULL	42	-42	0	-42.0	-0.0	42.0	-3341.2259999999997	0.0	42.0	0.0	-10.175	-42.0	0.6257142857142858	-42.0	0.0	-42
NULL	0	1969-12-31 16:00:11.089	0.0	NULL	0	0	0	0.0	0.0	-0.0	0.0	0.0	-0.0	0.0	-10.175	0.0	NULL	0.0	NULL	0
true	-58	1969-12-31 16:00:13.209	-58.0	cvLH6Eat2yFsyy7p	58	-58	0	-58.0	-0.0	58.0	-4614.074	0.0	58.0	0.0	-10.175	-58.0	0.4531034482758621	-58.0	0.0	-58
NULL	60	1969-12-31 16:00:11.003	60.0	NULL	-60	60	0	60.0	0.0	-60.0	4773.18	0.0	-60.0	0.0	-10.175	60.0	-0.438	60.0	0.0	60
true	23	1969-12-31 16:00:11.343	23.0	cvLH6Eat2yFsyy7p	-23	23	0	23.0	0.0	-23.0	1829.719	0.0	-23.0	0.0	-10.175	23.0	-1.142608695652174	23.0	0.0	23
NULL	-27	1969-12-31 16:00:14.065	-27.0	NULL	27	-27	0	-27.0	-0.0	27.0	-2147.931	0.0	27.0	0.0	-10.175	-27.0	0.9733333333333334	-27.0	0.0	-27
true	57	1969-12-31 16:00:13.71	57.0	cvLH6Eat2yFsyy7p	-57	57	0	57.0	0.0	-57.0	4534.521	0.0	-57.0	0.0	-10.175	57.0	-0.4610526315789474	57.0	0.0	57
true	-59	1969-12-31 16:00:12.227	-59.0	cvLH6Eat2yFsyy7p	59	-59	0	-59.0	-0.0	59.0	-4693.6269999999995	0.0	59.0	0.0	-10.175	-59.0	0.44542372881355935	-59.0	0.0	-59
PREHOOK: query: -- double compare timestamp
EXPLAIN
SELECT   cboolean1,
         ctinyint,
         ctimestamp1,
         cfloat,
         cstring1,
         (-(ctinyint)),
         MAX(ctinyint),
         ((-(ctinyint)) + MAX(ctinyint)),
         SUM(cfloat),
         (SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))),
         (-(SUM(cfloat))),
         (79.553 * cfloat),
         STDDEV_POP(cfloat),
         (-(SUM(cfloat))),
         STDDEV_POP(ctinyint),
         (((-(ctinyint)) + MAX(ctinyint)) - 10.175),
         (-((-(SUM(cfloat))))),
         (-26.28 / (-((-(SUM(cfloat)))))),
         MAX(cfloat),
         ((SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))) / ctinyint),
         MIN(ctinyint)
FROM     alltypesorc
WHERE    (((cfloat < 3569)
           AND ((10.175 >= cdouble)
                AND (cboolean1 != 1)))
          OR ((ctimestamp1 > -1.388)
              AND ((ctimestamp2 != -1.3359999999999999)
                   AND (ctinyint < 9763215.5639))))
GROUP BY cboolean1, ctinyint, ctimestamp1, cfloat, cstring1
LIMIT 40
PREHOOK: type: QUERY
POSTHOOK: query: -- double compare timestamp
EXPLAIN
SELECT   cboolean1,
         ctinyint,
         ctimestamp1,
         cfloat,
         cstring1,
         (-(ctinyint)),
         MAX(ctinyint),
         ((-(ctinyint)) + MAX(ctinyint)),
         SUM(cfloat),
         (SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))),
         (-(SUM(cfloat))),
         (79.553 * cfloat),
         STDDEV_POP(cfloat),
         (-(SUM(cfloat))),
         STDDEV_POP(ctinyint),
         (((-(ctinyint)) + MAX(ctinyint)) - 10.175),
         (-((-(SUM(cfloat))))),
         (-26.28 / (-((-(SUM(cfloat)))))),
         MAX(cfloat),
         ((SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))) / ctinyint),
         MIN(ctinyint)
FROM     alltypesorc
WHERE    (((cfloat < 3569)
           AND ((10.175 >= cdouble)
                AND (cboolean1 != 1)))
          OR ((ctimestamp1 > -1.388)
              AND ((ctimestamp2 != -1.3359999999999999)
                   AND (ctinyint < 9763215.5639))))
GROUP BY cboolean1, ctinyint, ctimestamp1, cfloat, cstring1
LIMIT 40
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (GROUP, 1)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: alltypesorc
                  Statistics: Num rows: 12288 Data size: 377237 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: (((cfloat < 3569.0) and ((10.175 >= cdouble) and (cboolean1 <> 1))) or ((ctimestamp1 > -1.388) and ((ctimestamp2 <> -1.3359999999999999) and (ctinyint < 9763215.5639)))) (type: boolean)
                    Statistics: Num rows: 2730 Data size: 83809 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: cboolean1 (type: boolean), ctinyint (type: tinyint), ctimestamp1 (type: timestamp), cfloat (type: float), cstring1 (type: string)
                      outputColumnNames: cboolean1, ctinyint, ctimestamp1, cfloat, cstring1
                      Statistics: Num rows: 2730 Data size: 83809 Basic stats: COMPLETE Column stats: NONE
                      Group By Operator
                        aggregations: max(ctinyint), sum(cfloat), stddev_pop(cfloat), stddev_pop(ctinyint), max(cfloat), min(ctinyint)
                        keys: cboolean1 (type: boolean), ctinyint (type: tinyint), ctimestamp1 (type: timestamp), cfloat (type: float), cstring1 (type: string)
                        mode: hash
                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10
                        Statistics: Num rows: 2730 Data size: 83809 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          key expressions: _col0 (type: boolean), _col1 (type: tinyint), _col2 (type: timestamp), _col3 (type: float), _col4 (type: string)
                          sort order: +++++
                          Map-reduce partition columns: _col0 (type: boolean), _col1 (type: tinyint), _col2 (type: timestamp), _col3 (type: float), _col4 (type: string)
                          Statistics: Num rows: 2730 Data size: 83809 Basic stats: COMPLETE Column stats: NONE
                          value expressions: _col5 (type: tinyint), _col6 (type: double), _col7 (type: struct<count:bigint,sum:double,variance:double>), _col8 (type: struct<count:bigint,sum:double,variance:double>), _col9 (type: float), _col10 (type: tinyint)
            Execution mode: vectorized
        Reducer 2 
            Reduce Operator Tree:
              Group By Operator
                aggregations: max(VALUE._col0), sum(VALUE._col1), stddev_pop(VALUE._col2), stddev_pop(VALUE._col3), max(VALUE._col4), min(VALUE._col5)
                keys: KEY._col0 (type: boolean), KEY._col1 (type: tinyint), KEY._col2 (type: timestamp), KEY._col3 (type: float), KEY._col4 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10
                Statistics: Num rows: 1365 Data size: 41904 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: boolean), _col1 (type: tinyint), _col2 (type: timestamp), _col3 (type: float), _col4 (type: string), (- _col1) (type: tinyint), _col5 (type: tinyint), ((- _col1) + _col5) (type: tinyint), _col6 (type: double), (_col6 * ((- _col1) + _col5)) (type: double), (- _col6) (type: double), (79.553 * _col3) (type: double), _col7 (type: double), (- _col6) (type: double), _col8 (type: double), (((- _col1) + _col5) - 10.175) (type: double), (- (- _col6)) (type: double), (-26.28 / (- (- _col6))) (type: double), _col9 (type: float), ((_col6 * ((- _col1) + _col5)) / _col1) (type: double), _col10 (type: tinyint)
                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20
                  Statistics: Num rows: 1365 Data size: 41904 Basic stats: COMPLETE Column stats: NONE
                  Limit
                    Number of rows: 40
                    Statistics: Num rows: 40 Data size: 1200 Basic stats: COMPLETE Column stats: NONE
                    File Output Operator
                      compressed: false
                      Statistics: Num rows: 40 Data size: 1200 Basic stats: COMPLETE Column stats: NONE
                      table:
                          input format: org.apache.hadoop.mapred.TextInputFormat
                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: 40
      Processor Tree:
        ListSink

PREHOOK: query: SELECT   cboolean1,
         ctinyint,
         ctimestamp1,
         cfloat,
         cstring1,
         (-(ctinyint)),
         MAX(ctinyint),
         ((-(ctinyint)) + MAX(ctinyint)),
         SUM(cfloat),
         (SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))),
         (-(SUM(cfloat))),
         (79.553 * cfloat),
         STDDEV_POP(cfloat),
         (-(SUM(cfloat))),
         STDDEV_POP(ctinyint),
         (((-(ctinyint)) + MAX(ctinyint)) - 10.175),
         (-((-(SUM(cfloat))))),
         (-26.28 / (-((-(SUM(cfloat)))))),
         MAX(cfloat),
         ((SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))) / ctinyint),
         MIN(ctinyint)
FROM     alltypesorc
WHERE    (((cfloat < 3569)
           AND ((10.175 >= cdouble)
                AND (cboolean1 != 1)))
          OR ((ctimestamp1 > -1.388)
              AND ((ctimestamp2 != -1.3359999999999999)
                   AND (ctinyint < 9763215.5639))))
GROUP BY cboolean1, ctinyint, ctimestamp1, cfloat, cstring1
LIMIT 40
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: SELECT   cboolean1,
         ctinyint,
         ctimestamp1,
         cfloat,
         cstring1,
         (-(ctinyint)),
         MAX(ctinyint),
         ((-(ctinyint)) + MAX(ctinyint)),
         SUM(cfloat),
         (SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))),
         (-(SUM(cfloat))),
         (79.553 * cfloat),
         STDDEV_POP(cfloat),
         (-(SUM(cfloat))),
         STDDEV_POP(ctinyint),
         (((-(ctinyint)) + MAX(ctinyint)) - 10.175),
         (-((-(SUM(cfloat))))),
         (-26.28 / (-((-(SUM(cfloat)))))),
         MAX(cfloat),
         ((SUM(cfloat) * ((-(ctinyint)) + MAX(ctinyint))) / ctinyint),
         MIN(ctinyint)
FROM     alltypesorc
WHERE    (((cfloat < 3569)
           AND ((10.175 >= cdouble)
                AND (cboolean1 != 1)))
          OR ((ctimestamp1 > -1.388)
              AND ((ctimestamp2 != -1.3359999999999999)
                   AND (ctinyint < 9763215.5639))))
GROUP BY cboolean1, ctinyint, ctimestamp1, cfloat, cstring1
LIMIT 40
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
true	-21	1969-12-31 16:00:00.826	-21.0	1cGVWH7n1QU	21	-21	0	-21.0	-0.0	21.0	-1670.6129999999998	0.0	21.0	0.0	-10.175	-21.0	1.2514285714285716	-21.0	0.0	-21
true	26	1969-12-31 16:00:14.341	26.0	1cGVWH7n1QU	-26	26	0	26.0	0.0	-26.0	2068.3779999999997	0.0	-26.0	0.0	-10.175	26.0	-1.0107692307692309	26.0	0.0	26
NULL	-62	1969-12-31 16:00:12.388	-62.0	NULL	62	-62	0	-62.0	-0.0	62.0	-4932.286	0.0	62.0	0.0	-10.175	-62.0	0.4238709677419355	-62.0	0.0	-62
NULL	-16	1969-12-31 15:59:58.727	-16.0	NULL	16	-16	0	-16.0	-0.0	16.0	-1272.848	0.0	16.0	0.0	-10.175	-16.0	1.6425	-16.0	0.0	-16
NULL	-24	1969-12-31 16:00:07.302	-24.0	NULL	24	-24	0	-24.0	-0.0	24.0	-1909.272	0.0	24.0	0.0	-10.175	-24.0	1.095	-24.0	0.0	-24
true	-10	1969-12-31 16:00:05.636	-10.0	1cGVWH7n1QU	10	-10	0	-10.0	-0.0	10.0	-795.53	0.0	10.0	0.0	-10.175	-10.0	2.628	-10.0	0.0	-10
NULL	41	1969-12-31 16:00:14.017	41.0	NULL	-41	41	0	41.0	0.0	-41.0	3261.673	0.0	-41.0	0.0	-10.175	41.0	-0.6409756097560976	41.0	0.0	41
NULL	26	1969-12-31 16:00:04.699	26.0	NULL	-26	26	0	26.0	0.0	-26.0	2068.3779999999997	0.0	-26.0	0.0	-10.175	26.0	-1.0107692307692309	26.0	0.0	26
NULL	18	1969-12-31 16:00:02.295	18.0	NULL	-18	18	0	18.0	0.0	-18.0	1431.954	0.0	-18.0	0.0	-10.175	18.0	-1.46	18.0	0.0	18
true	61	1969-12-31 16:00:05.394	61.0	cvLH6Eat2yFsyy7p	-61	61	0	61.0	0.0	-61.0	4852.733	0.0	-61.0	0.0	-10.175	61.0	-0.4308196721311476	61.0	0.0	61
true	9	1969-12-31 16:00:11.544	9.0	1cGVWH7n1QU	-9	9	0	9.0	0.0	-9.0	715.977	0.0	-9.0	0.0	-10.175	9.0	-2.92	9.0	0.0	9
true	55	1969-12-31 15:59:58.962	55.0	cvLH6Eat2yFsyy7p	-55	55	0	55.0	0.0	-55.0	4375.415	0.0	-55.0	0.0	-10.175	55.0	-0.47781818181818186	55.0	0.0	55
true	52	1969-12-31 16:00:07.428	52.0	1cGVWH7n1QU	-52	52	0	52.0	0.0	-52.0	4136.755999999999	0.0	-52.0	0.0	-10.175	52.0	-0.5053846153846154	52.0	0.0	52
NULL	-41	1969-12-31 16:00:00.096	-41.0	NULL	41	-41	0	-41.0	-0.0	41.0	-3261.673	0.0	41.0	0.0	-10.175	-41.0	0.6409756097560976	-41.0	0.0	-41
NULL	-51	1969-12-31 16:00:12.494	-51.0	NULL	51	-51	0	-51.0	-0.0	51.0	-4057.203	0.0	51.0	0.0	-10.175	-51.0	0.5152941176470588	-51.0	0.0	-51
NULL	-18	1969-12-31 16:00:06.015	-18.0	NULL	18	-18	0	-18.0	-0.0	18.0	-1431.954	0.0	18.0	0.0	-10.175	-18.0	1.46	-18.0	0.0	-18
true	-34	1969-12-31 16:00:15.254	-34.0	821UdmGbkEf4j	34	-34	0	-34.0	-0.0	34.0	-2704.8019999999997	0.0	34.0	0.0	-10.175	-34.0	0.7729411764705882	-34.0	0.0	-34
NULL	46	1969-12-31 16:00:00.259	46.0	NULL	-46	46	0	46.0	0.0	-46.0	3659.438	0.0	-46.0	0.0	-10.175	46.0	-0.571304347826087	46.0	0.0	46
NULL	-30	1969-12-31 16:00:12.935	-30.0	NULL	30	-30	0	-30.0	-0.0	30.0	-2386.59	0.0	30.0	0.0	-10.175	-30.0	0.876	-30.0	0.0	-30
true	34	1969-12-31 16:00:10.818	34.0	1cGVWH7n1QU	-34	34	0	34.0	0.0	-34.0	2704.8019999999997	0.0	-34.0	0.0	-10.175	34.0	-0.7729411764705882	34.0	0.0	34
true	-29	1969-12-31 16:00:03.586	-29.0	1cGVWH7n1QU	29	-29	0	-29.0	-0.0	29.0	-2307.037	0.0	29.0	0.0	-10.175	-29.0	0.9062068965517242	-29.0	0.0	-29
NULL	48	1969-12-31 16:00:15.512	48.0	NULL	-48	48	0	48.0	0.0	-48.0	3818.544	0.0	-48.0	0.0	-10.175	48.0	-0.5475	48.0	0.0	48
NULL	-21	1969-12-31 16:00:13.32	-21.0	NULL	21	-21	0	-21.0	-0.0	21.0	-1670.6129999999998	0.0	21.0	0.0	-10.175	-21.0	1.2514285714285716	-21.0	0.0	-21
true	15	1969-12-31 16:00:03.901	15.0	1cGVWH7n1QU	-15	15	0	15.0	0.0	-15.0	1193.295	0.0	-15.0	0.0	-10.175	15.0	-1.752	15.0	0.0	15
NULL	53	1969-12-31 16:00:00.557	53.0	NULL	-53	53	0	53.0	0.0	-53.0	4216.309	0.0	-53.0	0.0	-10.175	53.0	-0.4958490566037736	53.0	0.0	53
true	-54	1969-12-31 16:00:01.64	-54.0	821UdmGbkEf4j	54	-54	0	-54.0	-0.0	54.0	-4295.862	0.0	54.0	0.0	-10.175	-54.0	0.4866666666666667	-54.0	0.0	-54
true	-44	1969-12-31 16:00:05.272	-44.0	1cGVWH7n1QU	44	-44	0	-44.0	-0.0	44.0	-3500.332	0.0	44.0	0.0	-10.175	-44.0	0.5972727272727273	-44.0	0.0	-44
true	28	1969-12-31 16:00:02.779	28.0	1cGVWH7n1QU	-28	28	0	28.0	0.0	-28.0	2227.484	0.0	-28.0	0.0	-10.175	28.0	-0.9385714285714286	28.0	0.0	28
NULL	47	1969-12-31 16:00:06.723	47.0	NULL	-47	47	0	47.0	0.0	-47.0	3738.991	0.0	-47.0	0.0	-10.175	47.0	-0.5591489361702128	47.0	0.0	47
NULL	36	1969-12-31 16:00:00.865	36.0	NULL	-36	36	0	36.0	0.0	-36.0	2863.908	0.0	-36.0	0.0	-10.175	36.0	-0.73	36.0	0.0	36
NULL	35	1969-12-31 16:00:09.892	35.0	NULL	-35	35	0	35.0	0.0	-35.0	2784.355	0.0	-35.0	0.0	-10.175	35.0	-0.7508571428571429	35.0	0.0	35
NULL	55	1969-12-31 16:00:15.035	55.0	NULL	-55	55	0	55.0	0.0	-55.0	4375.415	0.0	-55.0	0.0	-10.175	55.0	-0.47781818181818186	55.0	0.0	55
NULL	-19	1969-12-31 16:00:08.607	-19.0	NULL	19	-19	0	-19.0	-0.0	19.0	-1511.507	0.0	19.0	0.0	-10.175	-19.0	1.3831578947368421	-19.0	0.0	-19
NULL	-49	1969-12-31 16:00:09.473	-49.0	NULL	49	-49	0	-49.0	-0.0	49.0	-3898.0969999999998	0.0	49.0	0.0	-10.175	-49.0	0.5363265306122449	-49.0	0.0	-49
true	19	1969-12-31 16:00:03.827	19.0	cvLH6Eat2yFsyy7p	-19	19	0	19.0	0.0	-19.0	1511.507	0.0	-19.0	0.0	-10.175	19.0	-1.3831578947368421	19.0	0.0	19
NULL	13	1969-12-31 16:00:09.387	13.0	NULL	-13	13	0	13.0	0.0	-13.0	1034.1889999999999	0.0	-13.0	0.0	-10.175	13.0	-2.0215384615384617	13.0	0.0	13
NULL	42	1969-12-31 16:00:16.251	42.0	NULL	-42	42	0	42.0	0.0	-42.0	3341.2259999999997	0.0	-42.0	0.0	-10.175	42.0	-0.6257142857142858	42.0	0.0	42
NULL	11	1969-12-31 16:00:15.338	11.0	NULL	-11	11	0	11.0	0.0	-11.0	875.083	0.0	-11.0	0.0	-10.175	11.0	-2.389090909090909	11.0	0.0	11
NULL	39	1969-12-31 16:00:14.32	39.0	NULL	-39	39	0	39.0	0.0	-39.0	3102.567	0.0	-39.0	0.0	-10.175	39.0	-0.6738461538461539	39.0	0.0	39
NULL	9	1969-12-31 16:00:00.945	9.0	NULL	-9	9	0	9.0	0.0	-9.0	715.977	0.0	-9.0	0.0	-10.175	9.0	-2.92	9.0	0.0	9
