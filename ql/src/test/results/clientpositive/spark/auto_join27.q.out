PREHOOK: query: explain
SELECT count(1)
FROM
(
SELECT src.key, src.value from src
UNION ALL
SELECT DISTINCT src.key, src.value from src
) src_12
JOIN
(SELECT src.key as k, src.value as v from src) src3
ON src_12.key = src3.k AND src3.k < 200
PREHOOK: type: QUERY
POSTHOOK: query: explain
SELECT count(1)
FROM
(
SELECT src.key, src.value from src
UNION ALL
SELECT DISTINCT src.key, src.value from src
) src_12
JOIN
(SELECT src.key as k, src.value as v from src) src3
ON src_12.key = src3.k AND src3.k < 200
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Spark
      Edges:
        Reducer 2 <- Map 1 (GROUP, 1)
        Reducer 4 <- Map 7 (GROUP PARTITION-LEVEL SORT, 1), Union 3 (GROUP PARTITION-LEVEL SORT, 1)
        Reducer 5 <- Reducer 4 (GROUP, 1)
        Union 3 <- Map 6 (NONE, 0), Reducer 2 (NONE, 0)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: src
                  Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: ((key < 200) and key is not null) (type: boolean)
                    Statistics: Num rows: 83 Data size: 881 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: string), value (type: string)
                      outputColumnNames: key, value
                      Statistics: Num rows: 83 Data size: 881 Basic stats: COMPLETE Column stats: NONE
                      Group By Operator
                        keys: key (type: string), value (type: string)
                        mode: hash
                        outputColumnNames: _col0, _col1
                        Statistics: Num rows: 83 Data size: 881 Basic stats: COMPLETE Column stats: NONE
                        Reduce Output Operator
                          key expressions: _col0 (type: string), _col1 (type: string)
                          sort order: ++
                          Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                          Statistics: Num rows: 83 Data size: 881 Basic stats: COMPLETE Column stats: NONE
        Map 6 
            Map Operator Tree:
                TableScan
                  alias: src
                  Filter Operator
                    predicate: ((key < 200) and key is not null) (type: boolean)
                    Select Operator
                      expressions: key (type: string)
                      outputColumnNames: _col0
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
        Map 7 
            Map Operator Tree:
                TableScan
                  alias: src
                  Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                  Filter Operator
                    predicate: ((key < 200) and key is not null) (type: boolean)
                    Statistics: Num rows: 83 Data size: 881 Basic stats: COMPLETE Column stats: NONE
                    Select Operator
                      expressions: key (type: string)
                      outputColumnNames: _col0
                      Statistics: Num rows: 83 Data size: 881 Basic stats: COMPLETE Column stats: NONE
                      Reduce Output Operator
                        key expressions: _col0 (type: string)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: string)
                        Statistics: Num rows: 83 Data size: 881 Basic stats: COMPLETE Column stats: NONE
        Reducer 2 
            Reduce Operator Tree:
              Group By Operator
                keys: KEY._col0 (type: string), KEY._col1 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1
                Select Operator
                  expressions: _col0 (type: string)
                  outputColumnNames: _col0
                  Reduce Output Operator
                    key expressions: _col0 (type: string)
                    sort order: +
                    Map-reduce partition columns: _col0 (type: string)
        Reducer 4 
            Reduce Operator Tree:
              Join Operator
                condition map:
                     Inner Join 0 to 1
                condition expressions:
                  0 
                  1 
                Statistics: Num rows: 136 Data size: 1447 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  Statistics: Num rows: 136 Data size: 1447 Basic stats: COMPLETE Column stats: NONE
                  Group By Operator
                    aggregations: count(1)
                    mode: hash
                    outputColumnNames: _col0
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    Reduce Output Operator
                      sort order: 
                      Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                      value expressions: _col0 (type: bigint)
        Reducer 5 
            Reduce Operator Tree:
              Group By Operator
                aggregations: count(VALUE._col0)
                mode: mergepartial
                outputColumnNames: _col0
                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                Select Operator
                  expressions: _col0 (type: bigint)
                  outputColumnNames: _col0
                  Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
        Union 3 
            Vertex: Union 3

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: SELECT count(1)
FROM
(
SELECT src.key, src.value from src
UNION ALL
SELECT DISTINCT src.key, src.value from src
) src_12
JOIN
(SELECT src.key as k, src.value as v from src) src3
ON src_12.key = src3.k AND src3.k < 200
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
POSTHOOK: query: SELECT count(1)
FROM
(
SELECT src.key, src.value from src
UNION ALL
SELECT DISTINCT src.key, src.value from src
) src_12
JOIN
(SELECT src.key as k, src.value as v from src) src3
ON src_12.key = src3.k AND src3.k < 200
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
#### A masked pattern was here ####
548
