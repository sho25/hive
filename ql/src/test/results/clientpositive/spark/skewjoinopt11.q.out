PREHOOK: query: CREATE TABLE T1(key STRING, val STRING)	
SKEWED BY (key) ON ((2)) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T1
POSTHOOK: query: CREATE TABLE T1(key STRING, val STRING)	
SKEWED BY (key) ON ((2)) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T1
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T1.txt' INTO TABLE T1
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@t1
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T1.txt' INTO TABLE T1
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@t1
PREHOOK: query: CREATE TABLE T2(key STRING, val STRING) STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@T2
POSTHOOK: query: CREATE TABLE T2(key STRING, val STRING) STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@T2
PREHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T2.txt' INTO TABLE T2
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@t2
POSTHOOK: query: LOAD DATA LOCAL INPATH '../../data/files/T2.txt' INTO TABLE T2
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@t2
PREHOOK: query: -- This test is to verify the skew join compile optimization when the join is followed
-- by a union. Both sides of a union consist of a join, which should have used
-- skew join compile time optimization.
-- adding an order by at the end to make the results deterministic

EXPLAIN	 
select * from	
(      
  select a.key, a.val as val1, b.val as val2 from T1 a join T2 b on a.key = b.key
    union all 	
  select a.key, a.val as val1, b.val as val2 from T1 a join T2 b on a.key = b.key
) subq1
PREHOOK: type: QUERY
POSTHOOK: query: -- This test is to verify the skew join compile optimization when the join is followed
-- by a union. Both sides of a union consist of a join, which should have used
-- skew join compile time optimization.
-- adding an order by at the end to make the results deterministic

EXPLAIN	 
select * from	
(      
  select a.key, a.val as val1, b.val as val2 from T1 a join T2 b on a.key = b.key
    union all 	
  select a.key, a.val as val1, b.val as val2 from T1 a join T2 b on a.key = b.key
) subq1
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-2 is a root stage
  Stage-1 depends on stages: Stage-2, Stage-3, Stage-4, Stage-5
  Stage-3 depends on stages: Stage-2
  Stage-4 depends on stages: Stage-2, Stage-3
  Stage-5 depends on stages: Stage-2, Stage-3, Stage-4
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-2
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 3 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 0 Data size: 30 Basic stats: PARTIAL Column stats: NONE
                  Filter Operator
                    predicate: (key is not null and (not (key = '2'))) (type: boolean)
                    Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                    Spark HashTable Sink Operator
                      condition expressions:
                        0 {key} {val}
                        1 {val}
                      keys:
                        0 key (type: string)
                        1 key (type: string)
            Local Work:
              Map Reduce Local Work

  Stage: Stage-1
    Spark
      Edges:
        Union 2 <- Map 1 (NONE, 0), Map 4 (NONE, 0), Map 6 (NONE, 0), Map 9 (NONE, 0)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: a
                  Filter Operator
                    predicate: (key is not null and (not (key = '2'))) (type: boolean)
                    Map Join Operator
                      condition map:
                           Inner Join 0 to 1
                      condition expressions:
                        0 {key} {val}
                        1 {val}
                      keys:
                        0 key (type: string)
                        1 key (type: string)
                      outputColumnNames: _col0, _col1, _col6
                      input vertices:
                        1 Map 3
                      Select Operator
                        expressions: _col0 (type: string), _col1 (type: string), _col6 (type: string)
                        outputColumnNames: _col0, _col1, _col2
                        Select Operator
                          SELECT * : (no compute)
                          Select Operator
                            expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string)
                            outputColumnNames: _col0, _col1, _col2
                            File Output Operator
                              compressed: false
                              table:
                                  input format: org.apache.hadoop.mapred.TextInputFormat
                                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Local Work:
              Map Reduce Local Work
        Map 4 
            Map Operator Tree:
                TableScan
                  alias: a
                  Filter Operator
                    predicate: (key is not null and (key = '2')) (type: boolean)
                    Map Join Operator
                      condition map:
                           Inner Join 0 to 1
                      condition expressions:
                        0 {key} {val}
                        1 {val}
                      keys:
                        0 key (type: string)
                        1 key (type: string)
                      outputColumnNames: _col0, _col1, _col6
                      input vertices:
                        1 Map 5
                      Select Operator
                        expressions: _col0 (type: string), _col1 (type: string), _col6 (type: string)
                        outputColumnNames: _col0, _col1, _col2
                        Select Operator
                          SELECT * : (no compute)
                          Select Operator
                            expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string)
                            outputColumnNames: _col0, _col1, _col2
                            File Output Operator
                              compressed: false
                              table:
                                  input format: org.apache.hadoop.mapred.TextInputFormat
                                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Local Work:
              Map Reduce Local Work
        Map 6 
            Map Operator Tree:
                TableScan
                  alias: a
                  Filter Operator
                    predicate: (key is not null and (key = '2')) (type: boolean)
                    Map Join Operator
                      condition map:
                           Inner Join 0 to 1
                      condition expressions:
                        0 {key} {val}
                        1 {val}
                      keys:
                        0 key (type: string)
                        1 key (type: string)
                      outputColumnNames: _col0, _col1, _col6
                      input vertices:
                        1 Map 8
                      Select Operator
                        expressions: _col0 (type: string), _col1 (type: string), _col6 (type: string)
                        outputColumnNames: _col0, _col1, _col2
                        Select Operator
                          SELECT * : (no compute)
                          Select Operator
                            expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string)
                            outputColumnNames: _col0, _col1, _col2
                            File Output Operator
                              compressed: false
                              table:
                                  input format: org.apache.hadoop.mapred.TextInputFormat
                                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Local Work:
              Map Reduce Local Work
        Map 9 
            Map Operator Tree:
                TableScan
                  alias: a
                  Filter Operator
                    predicate: (key is not null and (not (key = '2'))) (type: boolean)
                    Map Join Operator
                      condition map:
                           Inner Join 0 to 1
                      condition expressions:
                        0 {key} {val}
                        1 {val}
                      keys:
                        0 key (type: string)
                        1 key (type: string)
                      outputColumnNames: _col0, _col1, _col6
                      input vertices:
                        1 Map 7
                      Select Operator
                        expressions: _col0 (type: string), _col1 (type: string), _col6 (type: string)
                        outputColumnNames: _col0, _col1, _col2
                        Select Operator
                          SELECT * : (no compute)
                          Select Operator
                            expressions: _col0 (type: string), _col1 (type: string), _col2 (type: string)
                            outputColumnNames: _col0, _col1, _col2
                            File Output Operator
                              compressed: false
                              table:
                                  input format: org.apache.hadoop.mapred.TextInputFormat
                                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Local Work:
              Map Reduce Local Work
        Union 2 
            Vertex: Union 2

  Stage: Stage-3
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 5 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 0 Data size: 30 Basic stats: PARTIAL Column stats: NONE
                  Filter Operator
                    predicate: (key is not null and (key = '2')) (type: boolean)
                    Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                    Spark HashTable Sink Operator
                      condition expressions:
                        0 {key} {val}
                        1 {val}
                      keys:
                        0 key (type: string)
                        1 key (type: string)
            Local Work:
              Map Reduce Local Work

  Stage: Stage-4
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 8 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 0 Data size: 30 Basic stats: PARTIAL Column stats: NONE
                  Filter Operator
                    predicate: (key is not null and (key = '2')) (type: boolean)
                    Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                    Spark HashTable Sink Operator
                      condition expressions:
                        0 {key} {val}
                        1 {val}
                      keys:
                        0 key (type: string)
                        1 key (type: string)
            Local Work:
              Map Reduce Local Work

  Stage: Stage-5
    Spark
#### A masked pattern was here ####
      Vertices:
        Map 7 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 0 Data size: 30 Basic stats: PARTIAL Column stats: NONE
                  Filter Operator
                    predicate: (key is not null and (not (key = '2'))) (type: boolean)
                    Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                    Spark HashTable Sink Operator
                      condition expressions:
                        0 {key} {val}
                        1 {val}
                      keys:
                        0 key (type: string)
                        1 key (type: string)
            Local Work:
              Map Reduce Local Work

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: select * from	
(      
  select a.key, a.val as val1, b.val as val2 from T1 a join T2 b on a.key = b.key
    union all 	
  select a.key, a.val as val1, b.val as val2 from T1 a join T2 b on a.key = b.key
) subq1
ORDER BY key, val1, val2
PREHOOK: type: QUERY
PREHOOK: Input: default@t1
PREHOOK: Input: default@t2
#### A masked pattern was here ####
POSTHOOK: query: select * from	
(      
  select a.key, a.val as val1, b.val as val2 from T1 a join T2 b on a.key = b.key
    union all 	
  select a.key, a.val as val1, b.val as val2 from T1 a join T2 b on a.key = b.key
) subq1
ORDER BY key, val1, val2
POSTHOOK: type: QUERY
POSTHOOK: Input: default@t1
POSTHOOK: Input: default@t2
#### A masked pattern was here ####
2	12	22
2	12	22
3	13	13
3	13	13
8	18	18
8	18	18
8	18	18
8	18	18
8	28	18
8	28	18
8	28	18
8	28	18
