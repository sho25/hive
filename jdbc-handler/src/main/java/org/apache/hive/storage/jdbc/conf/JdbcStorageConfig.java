begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|storage
operator|.
name|jdbc
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|Constants
import|;
end_import

begin_enum
specifier|public
enum|enum
name|JdbcStorageConfig
block|{
name|DATABASE_TYPE
argument_list|(
name|Constants
operator|.
name|JDBC_DATABASE_TYPE
argument_list|,
literal|true
argument_list|)
block|,
name|JDBC_URL
argument_list|(
name|Constants
operator|.
name|JDBC_URL
argument_list|,
literal|true
argument_list|)
block|,
name|JDBC_DRIVER_CLASS
argument_list|(
name|Constants
operator|.
name|JDBC_DRIVER
argument_list|,
literal|true
argument_list|)
block|,
name|QUERY
argument_list|(
name|Constants
operator|.
name|JDBC_QUERY
argument_list|,
literal|false
argument_list|)
block|,
name|TABLE
argument_list|(
name|Constants
operator|.
name|JDBC_TABLE
argument_list|,
literal|false
argument_list|)
block|,
name|JDBC_FETCH_SIZE
argument_list|(
name|Constants
operator|.
name|JDBC_CONFIG_PREFIX
operator|+
literal|".jdbc.fetch.size"
argument_list|,
literal|false
argument_list|)
block|,
name|COLUMN_MAPPING
argument_list|(
name|Constants
operator|.
name|JDBC_CONFIG_PREFIX
operator|+
literal|".column.mapping"
argument_list|,
literal|false
argument_list|)
block|;
specifier|private
name|String
name|propertyName
decl_stmt|;
specifier|private
name|boolean
name|required
init|=
literal|false
decl_stmt|;
name|JdbcStorageConfig
parameter_list|(
name|String
name|propertyName
parameter_list|,
name|boolean
name|required
parameter_list|)
block|{
name|this
operator|.
name|propertyName
operator|=
name|propertyName
expr_stmt|;
name|this
operator|.
name|required
operator|=
name|required
expr_stmt|;
block|}
specifier|public
name|String
name|getPropertyName
parameter_list|()
block|{
return|return
name|propertyName
return|;
block|}
specifier|public
name|boolean
name|isRequired
parameter_list|()
block|{
return|return
name|required
return|;
block|}
block|}
end_enum

end_unit

