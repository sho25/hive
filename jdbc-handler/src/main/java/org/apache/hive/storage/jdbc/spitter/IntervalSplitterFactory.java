begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|storage
operator|.
name|jdbc
operator|.
name|spitter
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|typeinfo
operator|.
name|PrimitiveTypeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|typeinfo
operator|.
name|TypeInfo
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
specifier|public
class|class
name|IntervalSplitterFactory
block|{
specifier|public
specifier|static
name|IntervalSplitter
name|newIntervalSpitter
parameter_list|(
name|TypeInfo
name|typeInfo
parameter_list|)
throws|throws
name|IOException
block|{
name|PrimitiveTypeInfo
name|primitiveTypeInfo
init|=
operator|(
name|PrimitiveTypeInfo
operator|)
name|typeInfo
decl_stmt|;
switch|switch
condition|(
name|primitiveTypeInfo
operator|.
name|getPrimitiveCategory
argument_list|()
condition|)
block|{
case|case
name|BYTE
case|:
case|case
name|SHORT
case|:
case|case
name|INT
case|:
case|case
name|LONG
case|:
return|return
operator|new
name|LongIntervalSpitter
argument_list|()
return|;
case|case
name|FLOAT
case|:
case|case
name|DOUBLE
case|:
return|return
operator|new
name|DoubleIntervalSplitter
argument_list|()
return|;
case|case
name|DECIMAL
case|:
return|return
operator|new
name|DecimalIntervalSplitter
argument_list|()
return|;
case|case
name|TIMESTAMP
case|:
return|return
operator|new
name|TimestampIntervalSplitter
argument_list|()
return|;
case|case
name|DATE
case|:
return|return
operator|new
name|DateIntervalSplitter
argument_list|()
return|;
default|default:
throw|throw
operator|new
name|IOException
argument_list|(
literal|"partitionColumn is "
operator|+
name|primitiveTypeInfo
operator|.
name|getPrimitiveCategory
argument_list|()
operator|+
literal|", only numeric/date/timestamp type can be a partition column"
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

