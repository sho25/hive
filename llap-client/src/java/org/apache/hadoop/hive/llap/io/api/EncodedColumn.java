begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|io
operator|.
name|api
package|;
end_package

begin_class
specifier|public
class|class
name|EncodedColumn
parameter_list|<
name|BatchKey
parameter_list|>
block|{
comment|// TODO: temporary class. Will be filled in when reading (ORC) is implemented. Need to balance
comment|//       generality, and ability to not copy data from underlying low-level cached buffers.
specifier|public
specifier|static
class|class
name|ColumnBuffer
block|{}
specifier|public
name|EncodedColumn
parameter_list|(
name|BatchKey
name|batchKey
parameter_list|,
name|int
name|columnIndex
parameter_list|,
name|ColumnBuffer
name|columnData
parameter_list|)
block|{
name|this
operator|.
name|batchKey
operator|=
name|batchKey
expr_stmt|;
name|this
operator|.
name|columnIndex
operator|=
name|columnIndex
expr_stmt|;
name|this
operator|.
name|columnData
operator|=
name|columnData
expr_stmt|;
block|}
specifier|public
name|BatchKey
name|batchKey
decl_stmt|;
specifier|public
name|int
name|columnIndex
decl_stmt|;
specifier|public
name|ColumnBuffer
name|columnData
decl_stmt|;
block|}
end_class

end_unit

