begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|chunk
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|api
operator|.
name|Vector
operator|.
name|Type
import|;
end_import

begin_interface
specifier|public
interface|interface
name|ChunkWriter
block|{
specifier|public
enum|enum
name|NullsState
block|{
name|NEXT_NULL
block|,
name|HAS_NULLS
block|,
name|NO_NULLS
block|}
comment|// TODO: possible improvement - have chunk format support 1/2/4-sized ints
comment|//       still vectorizable, but much less space for boolean.
name|void
name|writeLongs
parameter_list|(
name|long
index|[]
name|values
parameter_list|,
name|int
name|offset
parameter_list|,
name|int
name|count
parameter_list|,
name|NullsState
name|nullsState
parameter_list|)
function_decl|;
name|void
name|writeLongs
parameter_list|(
name|byte
index|[]
name|literals
parameter_list|,
name|int
name|offset
parameter_list|,
name|int
name|toWrite
parameter_list|,
name|NullsState
name|nullsState
parameter_list|)
function_decl|;
name|void
name|writeRepeatedLongs
parameter_list|(
name|long
name|value
parameter_list|,
name|int
name|count
parameter_list|,
name|NullsState
name|nullsState
parameter_list|)
function_decl|;
name|void
name|writeNulls
parameter_list|(
name|int
name|count
parameter_list|,
name|boolean
name|followedByNonNull
parameter_list|)
function_decl|;
name|void
name|finishCurrentSegment
parameter_list|()
function_decl|;
name|int
name|estimateValueCountThatFits
parameter_list|(
name|Type
name|type
parameter_list|,
name|boolean
name|hasNulls
parameter_list|)
function_decl|;
name|void
name|writeDoubles
parameter_list|(
name|double
index|[]
name|src
parameter_list|,
name|int
name|srcOffset
parameter_list|,
name|int
name|srcCount
parameter_list|,
name|NullsState
name|nullsState
parameter_list|)
function_decl|;
block|}
end_interface

end_unit

