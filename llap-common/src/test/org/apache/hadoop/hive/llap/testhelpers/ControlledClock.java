begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|testhelpers
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|Clock
import|;
end_import

begin_class
specifier|public
class|class
name|ControlledClock
implements|implements
name|Clock
block|{
specifier|private
name|long
name|time
init|=
operator|-
literal|1
decl_stmt|;
specifier|private
specifier|final
name|Clock
name|actualClock
decl_stmt|;
specifier|public
name|ControlledClock
parameter_list|(
name|Clock
name|actualClock
parameter_list|)
block|{
name|this
operator|.
name|actualClock
operator|=
name|actualClock
expr_stmt|;
block|}
specifier|public
specifier|synchronized
name|void
name|setTime
parameter_list|(
name|long
name|time
parameter_list|)
block|{
name|this
operator|.
name|time
operator|=
name|time
expr_stmt|;
block|}
specifier|public
specifier|synchronized
name|void
name|reset
parameter_list|()
block|{
name|time
operator|=
operator|-
literal|1
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
specifier|synchronized
name|long
name|getTime
parameter_list|()
block|{
if|if
condition|(
name|time
operator|!=
operator|-
literal|1
condition|)
block|{
return|return
name|time
return|;
block|}
return|return
name|actualClock
operator|.
name|getTime
argument_list|()
return|;
block|}
block|}
end_class

end_unit

