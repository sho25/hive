begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|metrics
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|impl
operator|.
name|MetricsSystemImpl
import|;
end_import

begin_comment
comment|/**  * Metrics system for llap daemon. We do not use DefaultMetricsSystem here to safegaurd against  * Tez accidentally shutting it down.  */
end_comment

begin_enum
specifier|public
enum|enum
name|LlapMetricsSystem
block|{
name|INSTANCE
block|;
specifier|private
name|AtomicReference
argument_list|<
name|MetricsSystem
argument_list|>
name|impl
init|=
operator|new
name|AtomicReference
argument_list|<
name|MetricsSystem
argument_list|>
argument_list|(
operator|new
name|MetricsSystemImpl
argument_list|()
argument_list|)
decl_stmt|;
comment|/**    * Convenience method to initialize the metrics system    * @param prefix  for the metrics system configuration    * @return the metrics system instance    */
specifier|public
specifier|static
name|MetricsSystem
name|initialize
parameter_list|(
name|String
name|prefix
parameter_list|)
block|{
return|return
name|INSTANCE
operator|.
name|impl
operator|.
name|get
argument_list|()
operator|.
name|init
argument_list|(
name|prefix
argument_list|)
return|;
block|}
comment|/**    * @return the metrics system object    */
specifier|public
specifier|static
name|MetricsSystem
name|instance
parameter_list|()
block|{
return|return
name|INSTANCE
operator|.
name|impl
operator|.
name|get
argument_list|()
return|;
block|}
comment|/**    * Shutdown the metrics system    */
specifier|public
specifier|static
name|void
name|shutdown
parameter_list|()
block|{
name|INSTANCE
operator|.
name|impl
operator|.
name|get
argument_list|()
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
end_enum

end_unit

