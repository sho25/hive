begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|daemon
operator|.
name|rpc
operator|.
name|LlapDaemonProtocolProtos
operator|.
name|NotTezEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|security
operator|.
name|LlapSigner
operator|.
name|Signable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tez
operator|.
name|common
operator|.
name|ProtoConverters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tez
operator|.
name|runtime
operator|.
name|api
operator|.
name|events
operator|.
name|InputDataInformationEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tez
operator|.
name|runtime
operator|.
name|api
operator|.
name|events
operator|.
name|EventProtos
operator|.
name|RootInputDataInformationEventProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tez
operator|.
name|runtime
operator|.
name|api
operator|.
name|impl
operator|.
name|EventMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tez
operator|.
name|runtime
operator|.
name|api
operator|.
name|impl
operator|.
name|TezEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
import|;
end_import

begin_comment
comment|/**  * See NotTezEvent class/.proto comment.  */
end_comment

begin_class
specifier|public
class|class
name|NotTezEventHelper
block|{
specifier|public
specifier|static
name|Signable
name|createSignableNotTezEvent
parameter_list|(
name|InputDataInformationEvent
name|event
parameter_list|,
name|String
name|vertexName
parameter_list|,
name|String
name|destInputName
parameter_list|)
block|{
specifier|final
name|NotTezEvent
operator|.
name|Builder
name|builder
init|=
name|NotTezEvent
operator|.
name|newBuilder
argument_list|()
operator|.
name|setInputEventProtoBytes
argument_list|(
name|ProtoConverters
operator|.
name|convertRootInputDataInformationEventToProto
argument_list|(
name|event
argument_list|)
operator|.
name|toByteString
argument_list|()
argument_list|)
operator|.
name|setVertexName
argument_list|(
name|vertexName
argument_list|)
operator|.
name|setDestInputName
argument_list|(
name|destInputName
argument_list|)
decl_stmt|;
return|return
operator|new
name|Signable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|setSignInfo
parameter_list|(
name|int
name|masterKeyId
parameter_list|)
block|{
name|builder
operator|.
name|setKeyId
argument_list|(
name|masterKeyId
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|byte
index|[]
name|serialize
parameter_list|()
throws|throws
name|IOException
block|{
name|NotTezEvent
name|nte
init|=
name|builder
operator|.
name|build
argument_list|()
decl_stmt|;
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|(
name|nte
operator|.
name|getSerializedSize
argument_list|()
argument_list|)
decl_stmt|;
name|nte
operator|.
name|writeTo
argument_list|(
name|baos
argument_list|)
expr_stmt|;
return|return
name|baos
operator|.
name|toByteArray
argument_list|()
return|;
block|}
block|}
return|;
block|}
specifier|public
specifier|static
name|TezEvent
name|toTezEvent
parameter_list|(
name|NotTezEvent
name|nte
parameter_list|)
throws|throws
name|InvalidProtocolBufferException
block|{
name|EventMetaData
name|sourceMetaData
init|=
operator|new
name|EventMetaData
argument_list|(
name|EventMetaData
operator|.
name|EventProducerConsumerType
operator|.
name|INPUT
argument_list|,
name|nte
operator|.
name|getVertexName
argument_list|()
argument_list|,
literal|"NULL_VERTEX"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|EventMetaData
name|destMetaData
init|=
operator|new
name|EventMetaData
argument_list|(
name|EventMetaData
operator|.
name|EventProducerConsumerType
operator|.
name|INPUT
argument_list|,
name|nte
operator|.
name|getVertexName
argument_list|()
argument_list|,
name|nte
operator|.
name|getDestInputName
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|InputDataInformationEvent
name|event
init|=
name|ProtoConverters
operator|.
name|convertRootInputDataInformationEventFromProto
argument_list|(
name|RootInputDataInformationEventProto
operator|.
name|parseFrom
argument_list|(
name|nte
operator|.
name|getInputEventProtoBytes
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|TezEvent
name|tezEvent
init|=
operator|new
name|TezEvent
argument_list|(
name|event
argument_list|,
name|sourceMetaData
argument_list|,
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
decl_stmt|;
name|tezEvent
operator|.
name|setDestinationInfo
argument_list|(
name|destMetaData
argument_list|)
expr_stmt|;
return|return
name|tezEvent
return|;
block|}
block|}
end_class

end_unit

