begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|primitive
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|ObjectUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|builder
operator|.
name|HashCodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazySimpleSerDe
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_class
specifier|public
class|class
name|LazyObjectInspectorParametersImpl
implements|implements
name|LazyObjectInspectorParameters
block|{
specifier|protected
name|boolean
name|escaped
decl_stmt|;
specifier|protected
name|byte
name|escapeChar
decl_stmt|;
specifier|protected
name|boolean
name|extendedBooleanLiteral
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|String
argument_list|>
name|timestampFormats
decl_stmt|;
specifier|protected
name|byte
index|[]
name|separators
decl_stmt|;
specifier|protected
name|Text
name|nullSequence
decl_stmt|;
specifier|protected
name|boolean
name|lastColumnTakesRest
decl_stmt|;
specifier|public
name|LazyObjectInspectorParametersImpl
parameter_list|()
block|{
name|this
operator|.
name|escaped
operator|=
literal|false
expr_stmt|;
name|this
operator|.
name|extendedBooleanLiteral
operator|=
literal|false
expr_stmt|;
name|this
operator|.
name|timestampFormats
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|LazyObjectInspectorParametersImpl
parameter_list|(
name|boolean
name|escaped
parameter_list|,
name|byte
name|escapeChar
parameter_list|,
name|boolean
name|extendedBooleanLiteral
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|timestampFormats
parameter_list|,
name|byte
index|[]
name|separators
parameter_list|,
name|Text
name|nullSequence
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|escaped
operator|=
name|escaped
expr_stmt|;
name|this
operator|.
name|escapeChar
operator|=
name|escapeChar
expr_stmt|;
name|this
operator|.
name|extendedBooleanLiteral
operator|=
name|extendedBooleanLiteral
expr_stmt|;
name|this
operator|.
name|timestampFormats
operator|=
name|timestampFormats
expr_stmt|;
name|this
operator|.
name|separators
operator|=
name|separators
expr_stmt|;
name|this
operator|.
name|nullSequence
operator|=
name|nullSequence
expr_stmt|;
name|this
operator|.
name|lastColumnTakesRest
operator|=
literal|false
expr_stmt|;
block|}
specifier|public
name|LazyObjectInspectorParametersImpl
parameter_list|(
name|boolean
name|escaped
parameter_list|,
name|byte
name|escapeChar
parameter_list|,
name|boolean
name|extendedBooleanLiteral
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|timestampFormats
parameter_list|,
name|byte
index|[]
name|separators
parameter_list|,
name|Text
name|nullSequence
parameter_list|,
name|boolean
name|lastColumnTakesRest
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|escaped
operator|=
name|escaped
expr_stmt|;
name|this
operator|.
name|escapeChar
operator|=
name|escapeChar
expr_stmt|;
name|this
operator|.
name|extendedBooleanLiteral
operator|=
name|extendedBooleanLiteral
expr_stmt|;
name|this
operator|.
name|timestampFormats
operator|=
name|timestampFormats
expr_stmt|;
name|this
operator|.
name|separators
operator|=
name|separators
expr_stmt|;
name|this
operator|.
name|nullSequence
operator|=
name|nullSequence
expr_stmt|;
name|this
operator|.
name|lastColumnTakesRest
operator|=
name|lastColumnTakesRest
expr_stmt|;
block|}
specifier|public
name|LazyObjectInspectorParametersImpl
parameter_list|(
name|LazyObjectInspectorParameters
name|lazyParams
parameter_list|)
block|{
name|this
operator|.
name|escaped
operator|=
name|lazyParams
operator|.
name|isEscaped
argument_list|()
expr_stmt|;
name|this
operator|.
name|escapeChar
operator|=
name|lazyParams
operator|.
name|getEscapeChar
argument_list|()
expr_stmt|;
name|this
operator|.
name|extendedBooleanLiteral
operator|=
name|lazyParams
operator|.
name|isExtendedBooleanLiteral
argument_list|()
expr_stmt|;
name|this
operator|.
name|timestampFormats
operator|=
name|lazyParams
operator|.
name|getTimestampFormats
argument_list|()
expr_stmt|;
name|this
operator|.
name|separators
operator|=
name|lazyParams
operator|.
name|getSeparators
argument_list|()
expr_stmt|;
name|this
operator|.
name|nullSequence
operator|=
name|lazyParams
operator|.
name|getNullSequence
argument_list|()
expr_stmt|;
name|this
operator|.
name|lastColumnTakesRest
operator|=
name|lazyParams
operator|.
name|isLastColumnTakesRest
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isEscaped
parameter_list|()
block|{
return|return
name|escaped
return|;
block|}
annotation|@
name|Override
specifier|public
name|byte
name|getEscapeChar
parameter_list|()
block|{
return|return
name|escapeChar
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isExtendedBooleanLiteral
parameter_list|()
block|{
return|return
name|extendedBooleanLiteral
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getTimestampFormats
parameter_list|()
block|{
return|return
name|timestampFormats
return|;
block|}
annotation|@
name|Override
specifier|public
name|byte
index|[]
name|getSeparators
parameter_list|()
block|{
return|return
name|separators
return|;
block|}
annotation|@
name|Override
specifier|public
name|Text
name|getNullSequence
parameter_list|()
block|{
return|return
name|nullSequence
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isLastColumnTakesRest
parameter_list|()
block|{
return|return
name|lastColumnTakesRest
return|;
block|}
specifier|protected
name|boolean
name|equals
parameter_list|(
name|LazyObjectInspectorParametersImpl
name|other
parameter_list|)
block|{
return|return
name|this
operator|.
name|escaped
operator|==
name|other
operator|.
name|escaped
operator|&&
name|this
operator|.
name|escapeChar
operator|==
name|other
operator|.
name|escapeChar
operator|&&
name|this
operator|.
name|extendedBooleanLiteral
operator|==
name|other
operator|.
name|extendedBooleanLiteral
operator|&&
name|this
operator|.
name|lastColumnTakesRest
operator|==
name|other
operator|.
name|lastColumnTakesRest
operator|&&
name|ObjectUtils
operator|.
name|equals
argument_list|(
name|this
operator|.
name|nullSequence
argument_list|,
name|other
operator|.
name|nullSequence
argument_list|)
operator|&&
name|Arrays
operator|.
name|equals
argument_list|(
name|this
operator|.
name|separators
argument_list|,
name|other
operator|.
name|separators
argument_list|)
operator|&&
name|ObjectUtils
operator|.
name|equals
argument_list|(
name|this
operator|.
name|timestampFormats
argument_list|,
name|other
operator|.
name|timestampFormats
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|obj
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|LazyObjectInspectorParametersImpl
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
name|equals
argument_list|(
operator|(
name|LazyObjectInspectorParametersImpl
operator|)
name|obj
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
operator|new
name|HashCodeBuilder
argument_list|()
operator|.
name|append
argument_list|(
name|escaped
argument_list|)
operator|.
name|append
argument_list|(
name|escapeChar
argument_list|)
operator|.
name|append
argument_list|(
name|extendedBooleanLiteral
argument_list|)
operator|.
name|append
argument_list|(
name|timestampFormats
argument_list|)
operator|.
name|append
argument_list|(
name|lastColumnTakesRest
argument_list|)
operator|.
name|append
argument_list|(
name|nullSequence
argument_list|)
operator|.
name|append
argument_list|(
name|separators
argument_list|)
operator|.
name|toHashCode
argument_list|()
return|;
block|}
block|}
end_class

end_unit

