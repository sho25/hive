begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|common
operator|.
name|util
operator|.
name|HiveStringUtils
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|HiveBaseCharWritable
block|{
specifier|protected
name|Text
name|value
init|=
operator|new
name|Text
argument_list|()
decl_stmt|;
specifier|public
name|HiveBaseCharWritable
parameter_list|()
block|{   }
specifier|public
name|int
name|getCharacterLength
parameter_list|()
block|{
return|return
name|HiveStringUtils
operator|.
name|getTextUtfLength
argument_list|(
name|value
argument_list|)
return|;
block|}
comment|/**    * Access to the internal Text member. Use with care.    * @return    */
specifier|public
name|Text
name|getTextValue
parameter_list|()
block|{
return|return
name|value
return|;
block|}
specifier|public
name|void
name|readFields
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|value
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|write
parameter_list|(
name|DataOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|value
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
literal|null
operator|||
operator|(
name|obj
operator|.
name|getClass
argument_list|()
operator|!=
name|this
operator|.
name|getClass
argument_list|()
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
name|value
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|HiveBaseCharWritable
operator|)
name|obj
operator|)
operator|.
name|value
argument_list|)
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|value
operator|.
name|hashCode
argument_list|()
return|;
block|}
block|}
end_class

end_unit

