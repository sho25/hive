begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
specifier|public
class|class
name|DelegatedMapObjectInspector
implements|implements
name|MapObjectInspector
block|{
specifier|private
name|MapObjectInspector
name|delegate
decl_stmt|;
specifier|private
name|ObjectInspector
name|key
decl_stmt|;
specifier|private
name|ObjectInspector
name|value
decl_stmt|;
specifier|protected
name|DelegatedMapObjectInspector
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|public
name|DelegatedMapObjectInspector
parameter_list|(
name|MapObjectInspector
name|delegate
parameter_list|)
block|{
name|this
operator|.
name|delegate
operator|=
name|delegate
expr_stmt|;
block|}
specifier|public
name|void
name|reset
parameter_list|(
name|MapObjectInspector
name|current
parameter_list|)
block|{
name|this
operator|.
name|delegate
operator|=
name|current
expr_stmt|;
if|if
condition|(
name|key
operator|!=
literal|null
condition|)
block|{
name|DelegatedObjectInspectorFactory
operator|.
name|reset
argument_list|(
name|key
argument_list|,
name|current
operator|.
name|getMapKeyObjectInspector
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
name|DelegatedObjectInspectorFactory
operator|.
name|reset
argument_list|(
name|value
argument_list|,
name|current
operator|.
name|getMapValueObjectInspector
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|ObjectInspector
name|getMapKeyObjectInspector
parameter_list|()
block|{
return|return
name|key
operator|!=
literal|null
condition|?
name|key
else|:
operator|(
name|key
operator|=
name|DelegatedObjectInspectorFactory
operator|.
name|wrap
argument_list|(
name|delegate
operator|.
name|getMapKeyObjectInspector
argument_list|()
argument_list|)
operator|)
return|;
block|}
specifier|public
name|ObjectInspector
name|getMapValueObjectInspector
parameter_list|()
block|{
return|return
name|value
operator|!=
literal|null
condition|?
name|value
else|:
operator|(
name|value
operator|=
name|DelegatedObjectInspectorFactory
operator|.
name|wrap
argument_list|(
name|delegate
operator|.
name|getMapValueObjectInspector
argument_list|()
argument_list|)
operator|)
return|;
block|}
specifier|public
name|Object
name|getMapValueElement
parameter_list|(
name|Object
name|data
parameter_list|,
name|Object
name|key
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|getMapValueElement
argument_list|(
name|data
argument_list|,
name|key
argument_list|)
return|;
block|}
specifier|public
name|Map
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|getMap
parameter_list|(
name|Object
name|data
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|getMap
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
name|int
name|getMapSize
parameter_list|(
name|Object
name|data
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|getMapSize
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
name|String
name|getTypeName
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|getTypeName
argument_list|()
return|;
block|}
specifier|public
name|Category
name|getCategory
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|getCategory
argument_list|()
return|;
block|}
block|}
end_class

end_unit

