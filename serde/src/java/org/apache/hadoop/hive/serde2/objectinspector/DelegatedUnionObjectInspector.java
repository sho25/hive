begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
specifier|public
class|class
name|DelegatedUnionObjectInspector
implements|implements
name|UnionObjectInspector
block|{
specifier|private
name|UnionObjectInspector
name|delegate
decl_stmt|;
specifier|private
name|List
argument_list|<
name|ObjectInspector
argument_list|>
name|children
decl_stmt|;
specifier|protected
name|DelegatedUnionObjectInspector
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
specifier|public
name|DelegatedUnionObjectInspector
parameter_list|(
name|UnionObjectInspector
name|delegate
parameter_list|)
block|{
name|this
operator|.
name|delegate
operator|=
name|delegate
expr_stmt|;
block|}
specifier|public
name|void
name|reset
parameter_list|(
name|UnionObjectInspector
name|current
parameter_list|)
block|{
name|this
operator|.
name|delegate
operator|=
name|current
expr_stmt|;
if|if
condition|(
name|children
operator|!=
literal|null
condition|)
block|{
name|int
name|index
init|=
literal|0
decl_stmt|;
name|List
argument_list|<
name|ObjectInspector
argument_list|>
name|newOIs
init|=
name|delegate
operator|.
name|getObjectInspectors
argument_list|()
decl_stmt|;
for|for
control|(
name|ObjectInspector
name|child
range|:
name|children
control|)
block|{
name|DelegatedObjectInspectorFactory
operator|.
name|reset
argument_list|(
name|child
argument_list|,
name|newOIs
operator|.
name|get
argument_list|(
name|index
operator|++
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|List
argument_list|<
name|ObjectInspector
argument_list|>
name|getObjectInspectors
parameter_list|()
block|{
if|if
condition|(
name|children
operator|!=
literal|null
operator|||
name|delegate
operator|.
name|getObjectInspectors
argument_list|()
operator|==
literal|null
condition|)
block|{
return|return
name|children
return|;
block|}
name|List
argument_list|<
name|ObjectInspector
argument_list|>
name|inspectors
init|=
name|delegate
operator|.
name|getObjectInspectors
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|ObjectInspector
argument_list|>
name|delegated
init|=
operator|new
name|ArrayList
argument_list|<
name|ObjectInspector
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|ObjectInspector
name|inspector
range|:
name|inspectors
control|)
block|{
name|delegated
operator|.
name|add
argument_list|(
name|DelegatedObjectInspectorFactory
operator|.
name|wrap
argument_list|(
name|inspector
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|children
operator|=
name|delegated
return|;
block|}
specifier|public
name|byte
name|getTag
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|getTag
argument_list|(
name|o
argument_list|)
return|;
block|}
specifier|public
name|Object
name|getField
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|getField
argument_list|(
name|o
argument_list|)
return|;
block|}
specifier|public
name|String
name|getTypeName
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|getTypeName
argument_list|()
return|;
block|}
specifier|public
name|Category
name|getCategory
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|getCategory
argument_list|()
return|;
block|}
block|}
end_class

end_unit

