begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|HiveVarcharWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ConstantObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|typeinfo
operator|.
name|VarcharTypeParams
import|;
end_import

begin_comment
comment|/**  * A WritableConstantHiveVarcharObjectInspector is a WritableHiveVarcharObjectInspector  * that implements ConstantObjectInspector.  */
end_comment

begin_class
specifier|public
class|class
name|WritableConstantHiveVarcharObjectInspector
extends|extends
name|WritableHiveVarcharObjectInspector
implements|implements
name|ConstantObjectInspector
block|{
specifier|protected
name|HiveVarcharWritable
name|value
decl_stmt|;
comment|// no-arg ctor required for Kyro serialization
name|WritableConstantHiveVarcharObjectInspector
parameter_list|()
block|{   }
name|WritableConstantHiveVarcharObjectInspector
parameter_list|(
name|HiveVarcharWritable
name|value
parameter_list|)
block|{
name|this
argument_list|(
name|value
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
name|WritableConstantHiveVarcharObjectInspector
parameter_list|(
name|HiveVarcharWritable
name|value
parameter_list|,
name|VarcharTypeParams
name|typeParams
parameter_list|)
block|{
name|super
argument_list|(
name|PrimitiveObjectInspectorUtils
operator|.
name|varcharTypeEntry
argument_list|)
expr_stmt|;
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
comment|// If we have been provided with type params, then use them.
comment|// Otherwise determine character length and update type params/typeinfo accordingly.
if|if
condition|(
name|typeParams
operator|==
literal|null
condition|)
block|{
name|typeParams
operator|=
operator|new
name|VarcharTypeParams
argument_list|()
expr_stmt|;
name|typeParams
operator|.
name|length
operator|=
name|this
operator|.
name|value
operator|.
name|getCharacterLength
argument_list|()
expr_stmt|;
block|}
name|setTypeParams
argument_list|(
name|typeParams
argument_list|)
expr_stmt|;
name|this
operator|.
name|typeEntry
operator|=
name|PrimitiveObjectInspectorUtils
operator|.
name|getTypeEntryFromTypeSpecs
argument_list|(
name|PrimitiveCategory
operator|.
name|VARCHAR
argument_list|,
name|typeParams
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|HiveVarcharWritable
name|getWritableConstantValue
parameter_list|()
block|{
return|return
name|value
return|;
block|}
block|}
end_class

end_unit

