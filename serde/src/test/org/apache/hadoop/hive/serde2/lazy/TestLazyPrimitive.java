begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_class
specifier|public
class|class
name|TestLazyPrimitive
extends|extends
name|TestCase
block|{
comment|/**    * Initialize the LazyObject with the parameters, wrapping the byte[] automatically.    */
specifier|public
specifier|static
name|void
name|initLazyObject
parameter_list|(
name|LazyObject
name|lo
parameter_list|,
name|byte
index|[]
name|data
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|length
parameter_list|)
block|{
name|ByteArrayRef
name|b
init|=
operator|new
name|ByteArrayRef
argument_list|()
decl_stmt|;
name|b
operator|.
name|setData
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|lo
operator|.
name|init
argument_list|(
name|b
argument_list|,
name|start
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test the LazyByte class.    */
specifier|public
name|void
name|testLazyByte
parameter_list|()
throws|throws
name|Throwable
block|{
try|try
block|{
name|LazyByte
name|b
init|=
operator|new
name|LazyByte
argument_list|()
decl_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'0'
block|}
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'0'
block|}
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Byte
operator|.
name|valueOf
argument_list|(
operator|(
name|byte
operator|)
literal|0
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'0'
block|}
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Byte
operator|.
name|valueOf
argument_list|(
operator|(
name|byte
operator|)
literal|0
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'0'
block|}
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Byte
operator|.
name|valueOf
argument_list|(
operator|(
name|byte
operator|)
literal|0
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'a'
block|,
literal|'1'
block|,
literal|'b'
block|}
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Byte
operator|.
name|valueOf
argument_list|(
operator|(
name|byte
operator|)
literal|1
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'a'
block|,
literal|'-'
block|,
literal|'1'
block|}
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Byte
operator|.
name|valueOf
argument_list|(
operator|(
name|byte
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'a'
block|,
literal|'+'
block|,
literal|'1'
block|}
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Byte
operator|.
name|valueOf
argument_list|(
operator|(
name|byte
operator|)
literal|1
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'1'
block|,
literal|'2'
block|,
literal|'8'
block|}
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Byte
operator|.
name|valueOf
argument_list|(
operator|(
name|byte
operator|)
operator|-
literal|128
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'1'
block|,
literal|'2'
block|,
literal|'7'
block|}
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Byte
operator|.
name|valueOf
argument_list|(
operator|(
name|byte
operator|)
literal|127
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'a'
block|,
literal|'1'
block|,
literal|'b'
block|}
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'1'
block|,
literal|'2'
block|,
literal|'8'
block|}
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'1'
block|,
literal|'2'
block|,
literal|'9'
block|}
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'1'
block|,
literal|'2'
block|,
literal|'3'
block|}
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'1'
block|,
literal|'2'
block|,
literal|'3'
block|}
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
comment|/**    * Test the LazyShort class.    */
specifier|public
name|void
name|testLazyShort
parameter_list|()
throws|throws
name|Throwable
block|{
try|try
block|{
name|LazyShort
name|b
init|=
operator|new
name|LazyShort
argument_list|()
decl_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'0'
block|}
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'0'
block|}
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Short
operator|.
name|valueOf
argument_list|(
operator|(
name|short
operator|)
literal|0
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'0'
block|}
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Short
operator|.
name|valueOf
argument_list|(
operator|(
name|short
operator|)
literal|0
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'0'
block|}
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Short
operator|.
name|valueOf
argument_list|(
operator|(
name|short
operator|)
literal|0
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'a'
block|,
literal|'1'
block|,
literal|'b'
block|}
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Short
operator|.
name|valueOf
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'a'
block|,
literal|'-'
block|,
literal|'1'
block|}
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Short
operator|.
name|valueOf
argument_list|(
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'a'
block|,
literal|'+'
block|,
literal|'1'
block|}
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Short
operator|.
name|valueOf
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'1'
block|,
literal|'2'
block|,
literal|'8'
block|}
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Short
operator|.
name|valueOf
argument_list|(
operator|(
name|short
operator|)
operator|-
literal|128
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'1'
block|,
literal|'2'
block|,
literal|'7'
block|}
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Short
operator|.
name|valueOf
argument_list|(
operator|(
name|short
operator|)
literal|127
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'3'
block|,
literal|'2'
block|,
literal|'7'
block|,
literal|'6'
block|,
literal|'8'
block|}
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Short
operator|.
name|valueOf
argument_list|(
operator|(
name|short
operator|)
operator|-
literal|32768
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'3'
block|,
literal|'2'
block|,
literal|'7'
block|,
literal|'6'
block|,
literal|'7'
block|}
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Short
operator|.
name|valueOf
argument_list|(
operator|(
name|short
operator|)
literal|32767
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'a'
block|,
literal|'1'
block|,
literal|'b'
block|}
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'3'
block|,
literal|'2'
block|,
literal|'7'
block|,
literal|'6'
block|,
literal|'9'
block|}
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'3'
block|,
literal|'2'
block|,
literal|'7'
block|,
literal|'6'
block|,
literal|'8'
block|}
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'1'
block|,
literal|'2'
block|,
literal|'3'
block|}
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'1'
block|,
literal|'2'
block|,
literal|'3'
block|}
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
comment|/**    * Test the LazyInteger class.    */
specifier|public
name|void
name|testLazyInteger
parameter_list|()
throws|throws
name|Throwable
block|{
try|try
block|{
name|LazyInteger
name|b
init|=
operator|new
name|LazyInteger
argument_list|()
decl_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'0'
block|}
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'0'
block|}
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
operator|(
name|int
operator|)
literal|0
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'0'
block|}
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
operator|(
name|int
operator|)
literal|0
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'0'
block|}
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
operator|(
name|int
operator|)
literal|0
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'a'
block|,
literal|'1'
block|,
literal|'b'
block|}
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
operator|(
name|int
operator|)
literal|1
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'a'
block|,
literal|'-'
block|,
literal|'1'
block|}
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
operator|(
name|int
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'a'
block|,
literal|'+'
block|,
literal|'1'
block|}
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
operator|(
name|int
operator|)
literal|1
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'1'
block|,
literal|'2'
block|,
literal|'8'
block|}
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
operator|(
name|int
operator|)
operator|-
literal|128
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'1'
block|,
literal|'2'
block|,
literal|'7'
block|}
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
operator|(
name|int
operator|)
literal|127
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'3'
block|,
literal|'2'
block|,
literal|'7'
block|,
literal|'6'
block|,
literal|'8'
block|}
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
operator|(
name|int
operator|)
operator|-
literal|32768
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'3'
block|,
literal|'2'
block|,
literal|'7'
block|,
literal|'6'
block|,
literal|'7'
block|}
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
operator|(
name|int
operator|)
literal|32767
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'2'
block|,
literal|'1'
block|,
literal|'4'
block|,
literal|'7'
block|,
literal|'4'
block|,
literal|'8'
block|,
literal|'3'
block|,
literal|'6'
block|,
literal|'4'
block|,
literal|'8'
block|}
argument_list|,
literal|0
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
operator|(
name|int
operator|)
operator|-
literal|2147483648
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'2'
block|,
literal|'1'
block|,
literal|'4'
block|,
literal|'7'
block|,
literal|'4'
block|,
literal|'8'
block|,
literal|'3'
block|,
literal|'6'
block|,
literal|'4'
block|,
literal|'7'
block|}
argument_list|,
literal|0
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
operator|(
name|int
operator|)
literal|2147483647
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'a'
block|,
literal|'1'
block|,
literal|'b'
block|}
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'2'
block|,
literal|'1'
block|,
literal|'4'
block|,
literal|'7'
block|,
literal|'4'
block|,
literal|'8'
block|,
literal|'3'
block|,
literal|'6'
block|,
literal|'4'
block|,
literal|'9'
block|}
argument_list|,
literal|0
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'2'
block|,
literal|'1'
block|,
literal|'4'
block|,
literal|'7'
block|,
literal|'4'
block|,
literal|'8'
block|,
literal|'3'
block|,
literal|'6'
block|,
literal|'4'
block|,
literal|'8'
block|}
argument_list|,
literal|0
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'1'
block|,
literal|'2'
block|,
literal|'3'
block|}
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'1'
block|,
literal|'2'
block|,
literal|'3'
block|}
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
comment|/**    * Test the LazyLong class.    */
specifier|public
name|void
name|testLazyLong
parameter_list|()
throws|throws
name|Throwable
block|{
try|try
block|{
name|LazyLong
name|b
init|=
operator|new
name|LazyLong
argument_list|()
decl_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'0'
block|}
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'0'
block|}
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
operator|(
name|long
operator|)
literal|0
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'0'
block|}
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
operator|(
name|long
operator|)
literal|0
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'0'
block|}
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
operator|(
name|long
operator|)
literal|0
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'a'
block|,
literal|'1'
block|,
literal|'b'
block|}
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
operator|(
name|long
operator|)
literal|1
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'a'
block|,
literal|'-'
block|,
literal|'1'
block|}
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
operator|(
name|long
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'a'
block|,
literal|'+'
block|,
literal|'1'
block|}
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
operator|(
name|long
operator|)
literal|1
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'1'
block|,
literal|'2'
block|,
literal|'8'
block|}
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
operator|(
name|long
operator|)
operator|-
literal|128
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'1'
block|,
literal|'2'
block|,
literal|'7'
block|}
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
operator|(
name|long
operator|)
literal|127
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'3'
block|,
literal|'2'
block|,
literal|'7'
block|,
literal|'6'
block|,
literal|'8'
block|}
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
operator|(
name|long
operator|)
operator|-
literal|32768
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'3'
block|,
literal|'2'
block|,
literal|'7'
block|,
literal|'6'
block|,
literal|'7'
block|}
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
operator|(
name|long
operator|)
literal|32767
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'2'
block|,
literal|'1'
block|,
literal|'4'
block|,
literal|'7'
block|,
literal|'4'
block|,
literal|'8'
block|,
literal|'3'
block|,
literal|'6'
block|,
literal|'4'
block|,
literal|'8'
block|}
argument_list|,
literal|0
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
operator|(
name|long
operator|)
operator|-
literal|2147483648
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'2'
block|,
literal|'1'
block|,
literal|'4'
block|,
literal|'7'
block|,
literal|'4'
block|,
literal|'8'
block|,
literal|'3'
block|,
literal|'6'
block|,
literal|'4'
block|,
literal|'7'
block|}
argument_list|,
literal|0
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
operator|(
name|long
operator|)
literal|2147483647
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'9'
block|,
literal|'2'
block|,
literal|'2'
block|,
literal|'3'
block|,
literal|'3'
block|,
literal|'7'
block|,
literal|'2'
block|,
literal|'0'
block|,
literal|'3'
block|,
literal|'6'
block|,
literal|'8'
block|,
literal|'5'
block|,
literal|'4'
block|,
literal|'7'
block|,
literal|'7'
block|,
literal|'5'
block|,
literal|'8'
block|,
literal|'0'
block|,
literal|'8'
block|}
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
operator|(
name|long
operator|)
operator|-
literal|9223372036854775808L
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'9'
block|,
literal|'2'
block|,
literal|'2'
block|,
literal|'3'
block|,
literal|'3'
block|,
literal|'7'
block|,
literal|'2'
block|,
literal|'0'
block|,
literal|'3'
block|,
literal|'6'
block|,
literal|'8'
block|,
literal|'5'
block|,
literal|'4'
block|,
literal|'7'
block|,
literal|'7'
block|,
literal|'5'
block|,
literal|'8'
block|,
literal|'0'
block|,
literal|'7'
block|}
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
operator|(
name|long
operator|)
literal|9223372036854775807L
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'a'
block|,
literal|'1'
block|,
literal|'b'
block|}
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'9'
block|,
literal|'2'
block|,
literal|'2'
block|,
literal|'3'
block|,
literal|'3'
block|,
literal|'7'
block|,
literal|'2'
block|,
literal|'0'
block|,
literal|'3'
block|,
literal|'6'
block|,
literal|'8'
block|,
literal|'5'
block|,
literal|'4'
block|,
literal|'7'
block|,
literal|'7'
block|,
literal|'5'
block|,
literal|'8'
block|,
literal|'0'
block|,
literal|'9'
block|}
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'9'
block|,
literal|'2'
block|,
literal|'2'
block|,
literal|'3'
block|,
literal|'3'
block|,
literal|'7'
block|,
literal|'2'
block|,
literal|'0'
block|,
literal|'3'
block|,
literal|'6'
block|,
literal|'8'
block|,
literal|'5'
block|,
literal|'4'
block|,
literal|'7'
block|,
literal|'7'
block|,
literal|'5'
block|,
literal|'8'
block|,
literal|'0'
block|,
literal|'8'
block|}
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'1'
block|,
literal|'2'
block|,
literal|'3'
block|}
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'1'
block|,
literal|'2'
block|,
literal|'3'
block|}
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
comment|/**    * Test the LazyDouble class.    */
specifier|public
name|void
name|testLazyDouble
parameter_list|()
throws|throws
name|Throwable
block|{
try|try
block|{
name|LazyDouble
name|b
init|=
operator|new
name|LazyDouble
argument_list|()
decl_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'0'
block|}
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'0'
block|}
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
literal|0
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'0'
block|}
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
literal|0
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'0'
block|}
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
operator|-
literal|0.0
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'a'
block|,
literal|'1'
block|,
literal|'b'
block|}
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
literal|1
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'a'
block|,
literal|'-'
block|,
literal|'1'
block|}
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
operator|-
literal|1
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'a'
block|,
literal|'+'
block|,
literal|'1'
block|}
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
literal|1
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'1'
block|,
literal|'2'
block|,
literal|'8'
block|}
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
operator|-
literal|128
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'1'
block|,
literal|'2'
block|,
literal|'7'
block|}
argument_list|,
literal|0
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
literal|127
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'3'
block|,
literal|'2'
block|,
literal|'7'
block|,
literal|'6'
block|,
literal|'8'
block|}
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
operator|-
literal|32768
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'3'
block|,
literal|'2'
block|,
literal|'7'
block|,
literal|'6'
block|,
literal|'7'
block|}
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
literal|32767
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'2'
block|,
literal|'1'
block|,
literal|'4'
block|,
literal|'7'
block|,
literal|'4'
block|,
literal|'8'
block|,
literal|'3'
block|,
literal|'6'
block|,
literal|'4'
block|,
literal|'8'
block|}
argument_list|,
literal|0
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
operator|-
literal|2147483648
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'2'
block|,
literal|'1'
block|,
literal|'4'
block|,
literal|'7'
block|,
literal|'4'
block|,
literal|'8'
block|,
literal|'3'
block|,
literal|'6'
block|,
literal|'4'
block|,
literal|'7'
block|}
argument_list|,
literal|0
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
literal|2147483647
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'9'
block|,
literal|'2'
block|,
literal|'2'
block|,
literal|'3'
block|,
literal|'3'
block|,
literal|'7'
block|,
literal|'2'
block|,
literal|'0'
block|,
literal|'3'
block|,
literal|'6'
block|,
literal|'8'
block|,
literal|'5'
block|,
literal|'4'
block|,
literal|'7'
block|,
literal|'7'
block|,
literal|'5'
block|,
literal|'8'
block|,
literal|'0'
block|,
literal|'8'
block|}
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
operator|-
literal|9223372036854775808L
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'9'
block|,
literal|'2'
block|,
literal|'2'
block|,
literal|'3'
block|,
literal|'3'
block|,
literal|'7'
block|,
literal|'2'
block|,
literal|'0'
block|,
literal|'3'
block|,
literal|'6'
block|,
literal|'8'
block|,
literal|'5'
block|,
literal|'4'
block|,
literal|'7'
block|,
literal|'7'
block|,
literal|'5'
block|,
literal|'8'
block|,
literal|'0'
block|,
literal|'7'
block|}
argument_list|,
literal|0
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|long
operator|)
literal|9223372036854775807L
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'3'
block|,
literal|'.'
block|,
literal|'7'
block|,
literal|'6'
block|,
literal|'8'
block|}
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
operator|-
literal|3.768
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'3'
block|,
literal|'.'
block|,
literal|'7'
block|,
literal|'6'
block|,
literal|'7'
block|}
argument_list|,
literal|0
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
literal|3.767
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'2'
block|,
literal|'.'
block|,
literal|'4'
block|,
literal|'7'
block|,
literal|'4'
block|,
literal|'8'
block|,
literal|'3'
block|,
literal|'6'
block|,
literal|'e'
block|,
literal|'8'
block|}
argument_list|,
literal|0
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
operator|-
literal|2.474836e8
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'2'
block|,
literal|'.'
block|,
literal|'4'
block|,
literal|'7'
block|,
literal|'4'
block|,
literal|'8'
block|,
literal|'3'
block|,
literal|'E'
block|,
literal|'-'
block|,
literal|'7'
block|}
argument_list|,
literal|0
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
literal|2.47483E
operator|-
literal|7
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'.'
block|,
literal|'4'
block|,
literal|'7'
block|,
literal|'4'
block|,
literal|'8'
block|,
literal|'3'
block|,
literal|'6'
block|,
literal|'e'
block|,
literal|'8'
block|}
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
operator|-
literal|.474836e8
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'.'
block|,
literal|'4'
block|,
literal|'7'
block|,
literal|'4'
block|,
literal|'8'
block|,
literal|'3'
block|,
literal|'E'
block|,
literal|'-'
block|,
literal|'7'
block|}
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
literal|.47483E
operator|-
literal|7
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'2'
block|,
literal|'1'
block|,
literal|'4'
block|,
literal|'7'
block|,
literal|'4'
block|,
literal|'8'
block|,
literal|'3'
block|,
literal|'6'
block|,
literal|'4'
block|,
literal|'.'
block|}
argument_list|,
literal|0
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
operator|-
literal|214748364.
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'2'
block|,
literal|'1'
block|,
literal|'4'
block|,
literal|'7'
block|,
literal|'4'
block|,
literal|'8'
block|,
literal|'3'
block|,
literal|'6'
block|,
literal|'4'
block|,
literal|'.'
block|}
argument_list|,
literal|0
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
operator|+
literal|214748364.
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'.'
block|,
literal|'0'
block|}
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
literal|.0
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'0'
block|,
literal|'.'
block|}
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
literal|0.
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'a'
block|,
literal|'1'
block|,
literal|'b'
block|}
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'.'
block|,
literal|'1'
block|,
literal|'2'
block|,
literal|'3'
block|}
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'1'
block|,
literal|'2'
block|,
literal|'3'
block|}
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'1'
block|,
literal|'2'
block|,
literal|'3'
block|}
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'1'
block|,
literal|'e'
block|,
literal|'3'
block|,
literal|'3'
block|,
literal|'3'
block|,
literal|'3'
block|,
literal|'3'
block|,
literal|'3'
block|}
argument_list|,
literal|0
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|NEGATIVE_INFINITY
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'1'
block|,
literal|'e'
block|,
literal|'3'
block|,
literal|'3'
block|,
literal|'3'
block|,
literal|'3'
block|,
literal|'3'
block|,
literal|'3'
block|}
argument_list|,
literal|0
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|POSITIVE_INFINITY
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'+'
block|,
literal|'1'
block|,
literal|'e'
block|,
literal|'-'
block|,
literal|'3'
block|,
literal|'3'
block|,
literal|'3'
block|,
literal|'3'
block|,
literal|'3'
block|}
argument_list|,
literal|0
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
literal|0
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'-'
block|,
literal|'1'
block|,
literal|'e'
block|,
literal|'-'
block|,
literal|'3'
block|,
literal|'3'
block|,
literal|'3'
block|,
literal|'3'
block|,
literal|'3'
block|}
argument_list|,
literal|0
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|double
operator|)
operator|-
literal|0.0
argument_list|)
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
comment|/**    * Test the LazyString class.    */
specifier|public
name|void
name|testLazyString
parameter_list|()
throws|throws
name|Throwable
block|{
try|try
block|{
name|LazyString
name|b
init|=
operator|new
name|LazyString
argument_list|()
decl_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'0'
block|}
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'0'
block|}
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"0"
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
name|initLazyObject
argument_list|(
name|b
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|'0'
block|,
literal|'1'
block|,
literal|'2'
block|}
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|b
operator|.
name|getObject
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
block|}
end_class

end_unit

