begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|type
operator|.
name|HiveChar
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|type
operator|.
name|HiveDecimal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|type
operator|.
name|HiveVarchar
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|ByteWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|DoubleWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|HiveCharWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|HiveVarcharWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|ShortWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|TimestampWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspectorConverters
operator|.
name|Converter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|PrimitiveObjectInspectorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|typeinfo
operator|.
name|PrimitiveTypeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|typeinfo
operator|.
name|TypeInfoFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|typeinfo
operator|.
name|VarcharTypeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|BooleanWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|BytesWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|FloatWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|IntWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|LongWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_comment
comment|/**  * TestObjectInspectorConverters.  *  */
end_comment

begin_class
specifier|public
class|class
name|TestObjectInspectorConverters
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testObjectInspectorConverters
parameter_list|()
throws|throws
name|Throwable
block|{
try|try
block|{
comment|// Boolean
name|Converter
name|booleanConverter
init|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableBooleanObjectInspector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"BooleanConverter"
argument_list|,
operator|new
name|BooleanWritable
argument_list|(
literal|false
argument_list|)
argument_list|,
name|booleanConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"BooleanConverter"
argument_list|,
operator|new
name|BooleanWritable
argument_list|(
literal|true
argument_list|)
argument_list|,
name|booleanConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"BooleanConverter"
argument_list|,
literal|null
argument_list|,
name|booleanConverter
operator|.
name|convert
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// Byte
name|Converter
name|byteConverter
init|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableByteObjectInspector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"ByteConverter"
argument_list|,
operator|new
name|ByteWritable
argument_list|(
operator|(
name|byte
operator|)
literal|0
argument_list|)
argument_list|,
name|byteConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ByteConverter"
argument_list|,
operator|new
name|ByteWritable
argument_list|(
operator|(
name|byte
operator|)
literal|1
argument_list|)
argument_list|,
name|byteConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ByteConverter"
argument_list|,
literal|null
argument_list|,
name|byteConverter
operator|.
name|convert
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// Short
name|Converter
name|shortConverter
init|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableShortObjectInspector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"ShortConverter"
argument_list|,
operator|new
name|ShortWritable
argument_list|(
operator|(
name|short
operator|)
literal|0
argument_list|)
argument_list|,
name|shortConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ShortConverter"
argument_list|,
operator|new
name|ShortWritable
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|)
argument_list|,
name|shortConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ShortConverter"
argument_list|,
literal|null
argument_list|,
name|shortConverter
operator|.
name|convert
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// Int
name|Converter
name|intConverter
init|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableIntObjectInspector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"IntConverter"
argument_list|,
operator|new
name|IntWritable
argument_list|(
literal|0
argument_list|)
argument_list|,
name|intConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"IntConverter"
argument_list|,
operator|new
name|IntWritable
argument_list|(
literal|1
argument_list|)
argument_list|,
name|intConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"IntConverter"
argument_list|,
literal|null
argument_list|,
name|intConverter
operator|.
name|convert
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// Long
name|Converter
name|longConverter
init|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableLongObjectInspector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"LongConverter"
argument_list|,
operator|new
name|LongWritable
argument_list|(
literal|0
argument_list|)
argument_list|,
name|longConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"LongConverter"
argument_list|,
operator|new
name|LongWritable
argument_list|(
literal|1
argument_list|)
argument_list|,
name|longConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"LongConverter"
argument_list|,
literal|null
argument_list|,
name|longConverter
operator|.
name|convert
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// Float
name|Converter
name|floatConverter
init|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableFloatObjectInspector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"LongConverter"
argument_list|,
operator|new
name|FloatWritable
argument_list|(
literal|0
argument_list|)
argument_list|,
name|floatConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"LongConverter"
argument_list|,
operator|new
name|FloatWritable
argument_list|(
literal|1
argument_list|)
argument_list|,
name|floatConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"LongConverter"
argument_list|,
literal|null
argument_list|,
name|floatConverter
operator|.
name|convert
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// Double
name|Converter
name|doubleConverter
init|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableDoubleObjectInspector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"DoubleConverter"
argument_list|,
operator|new
name|DoubleWritable
argument_list|(
literal|0
argument_list|)
argument_list|,
name|doubleConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"DoubleConverter"
argument_list|,
operator|new
name|DoubleWritable
argument_list|(
literal|1
argument_list|)
argument_list|,
name|doubleConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"DoubleConverter"
argument_list|,
literal|null
argument_list|,
name|doubleConverter
operator|.
name|convert
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// Char
name|Converter
name|charConverter
init|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaBooleanObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|javaHiveCharObjectInspector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"CharConverter"
argument_list|,
operator|new
name|HiveChar
argument_list|(
literal|"TRUE"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|charConverter
operator|.
name|convert
argument_list|(
name|Boolean
operator|.
name|valueOf
argument_list|(
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CharConverter"
argument_list|,
operator|new
name|HiveChar
argument_list|(
literal|"FALSE"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|charConverter
operator|.
name|convert
argument_list|(
name|Boolean
operator|.
name|valueOf
argument_list|(
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|charConverter
operator|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaBooleanObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableHiveCharObjectInspector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CharConverter"
argument_list|,
operator|new
name|HiveCharWritable
argument_list|(
operator|new
name|HiveChar
argument_list|(
literal|"TRUE"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|,
name|charConverter
operator|.
name|convert
argument_list|(
name|Boolean
operator|.
name|valueOf
argument_list|(
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CharConverter"
argument_list|,
operator|new
name|HiveCharWritable
argument_list|(
operator|new
name|HiveChar
argument_list|(
literal|"FALSE"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|,
name|charConverter
operator|.
name|convert
argument_list|(
name|Boolean
operator|.
name|valueOf
argument_list|(
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|charConverter
operator|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|javaHiveCharObjectInspector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CharConverter"
argument_list|,
operator|new
name|HiveChar
argument_list|(
literal|"0"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|charConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CharConverter"
argument_list|,
operator|new
name|HiveChar
argument_list|(
literal|"1"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|charConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|charConverter
operator|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableHiveCharObjectInspector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CharConverter"
argument_list|,
operator|new
name|HiveCharWritable
argument_list|(
operator|new
name|HiveChar
argument_list|(
literal|"0"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|,
name|charConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CharConverter"
argument_list|,
operator|new
name|HiveCharWritable
argument_list|(
operator|new
name|HiveChar
argument_list|(
literal|"1"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|,
name|charConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|charConverter
operator|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaStringObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|javaHiveCharObjectInspector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CharConverter"
argument_list|,
operator|new
name|HiveChar
argument_list|(
literal|"hive"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|charConverter
operator|.
name|convert
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
literal|"hive"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|charConverter
operator|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaStringObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableHiveCharObjectInspector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CharConverter"
argument_list|,
operator|new
name|HiveCharWritable
argument_list|(
operator|new
name|HiveChar
argument_list|(
literal|"hive"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|,
name|charConverter
operator|.
name|convert
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
literal|"hive"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// VarChar
name|Converter
name|varcharConverter
init|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaBooleanObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|javaHiveVarcharObjectInspector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"VarCharConverter"
argument_list|,
operator|new
name|HiveVarchar
argument_list|(
literal|"TRUE"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|varcharConverter
operator|.
name|convert
argument_list|(
name|Boolean
operator|.
name|valueOf
argument_list|(
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"VarCharConverter"
argument_list|,
operator|new
name|HiveVarchar
argument_list|(
literal|"FALSE"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|varcharConverter
operator|.
name|convert
argument_list|(
name|Boolean
operator|.
name|valueOf
argument_list|(
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|varcharConverter
operator|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaBooleanObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableHiveVarcharObjectInspector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"VarCharConverter"
argument_list|,
operator|new
name|HiveVarcharWritable
argument_list|(
operator|new
name|HiveVarchar
argument_list|(
literal|"TRUE"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|,
name|varcharConverter
operator|.
name|convert
argument_list|(
name|Boolean
operator|.
name|valueOf
argument_list|(
literal|true
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"VarCharConverter"
argument_list|,
operator|new
name|HiveVarcharWritable
argument_list|(
operator|new
name|HiveVarchar
argument_list|(
literal|"FALSE"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|,
name|varcharConverter
operator|.
name|convert
argument_list|(
name|Boolean
operator|.
name|valueOf
argument_list|(
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|varcharConverter
operator|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|javaHiveVarcharObjectInspector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"VarCharConverter"
argument_list|,
operator|new
name|HiveVarchar
argument_list|(
literal|"0"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|varcharConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"VarCharConverter"
argument_list|,
operator|new
name|HiveVarchar
argument_list|(
literal|"1"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|varcharConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|varcharConverter
operator|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableHiveVarcharObjectInspector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"VarCharConverter"
argument_list|,
operator|new
name|HiveVarcharWritable
argument_list|(
operator|new
name|HiveVarchar
argument_list|(
literal|"0"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|,
name|varcharConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"VarCharConverter"
argument_list|,
operator|new
name|HiveVarcharWritable
argument_list|(
operator|new
name|HiveVarchar
argument_list|(
literal|"1"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|,
name|varcharConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|varcharConverter
operator|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaStringObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|javaHiveVarcharObjectInspector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"VarCharConverter"
argument_list|,
operator|new
name|HiveVarchar
argument_list|(
literal|"hive"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|varcharConverter
operator|.
name|convert
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
literal|"hive"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|varcharConverter
operator|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaStringObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableHiveVarcharObjectInspector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"VarCharConverter"
argument_list|,
operator|new
name|HiveVarcharWritable
argument_list|(
operator|new
name|HiveVarchar
argument_list|(
literal|"hive"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
argument_list|,
name|varcharConverter
operator|.
name|convert
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
literal|"hive"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Text
name|Converter
name|textConverter
init|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableStringObjectInspector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"TextConverter"
argument_list|,
operator|new
name|Text
argument_list|(
literal|"0"
argument_list|)
argument_list|,
name|textConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"TextConverter"
argument_list|,
operator|new
name|Text
argument_list|(
literal|"1"
argument_list|)
argument_list|,
name|textConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"TextConverter"
argument_list|,
literal|null
argument_list|,
name|textConverter
operator|.
name|convert
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|textConverter
operator|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|writableBinaryObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableStringObjectInspector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"TextConverter"
argument_list|,
operator|new
name|Text
argument_list|(
literal|"hive"
argument_list|)
argument_list|,
name|textConverter
operator|.
name|convert
argument_list|(
operator|new
name|BytesWritable
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|'h'
block|,
operator|(
name|byte
operator|)
literal|'i'
block|,
operator|(
name|byte
operator|)
literal|'v'
block|,
operator|(
name|byte
operator|)
literal|'e'
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"TextConverter"
argument_list|,
literal|null
argument_list|,
name|textConverter
operator|.
name|convert
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|textConverter
operator|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|writableStringObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableStringObjectInspector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"TextConverter"
argument_list|,
operator|new
name|Text
argument_list|(
literal|"hive"
argument_list|)
argument_list|,
name|textConverter
operator|.
name|convert
argument_list|(
operator|new
name|Text
argument_list|(
literal|"hive"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"TextConverter"
argument_list|,
literal|null
argument_list|,
name|textConverter
operator|.
name|convert
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|textConverter
operator|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaStringObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableStringObjectInspector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"TextConverter"
argument_list|,
operator|new
name|Text
argument_list|(
literal|"hive"
argument_list|)
argument_list|,
name|textConverter
operator|.
name|convert
argument_list|(
operator|new
name|String
argument_list|(
literal|"hive"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"TextConverter"
argument_list|,
literal|null
argument_list|,
name|textConverter
operator|.
name|convert
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|textConverter
operator|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaHiveDecimalObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableStringObjectInspector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"TextConverter"
argument_list|,
operator|new
name|Text
argument_list|(
literal|"100.001"
argument_list|)
argument_list|,
name|textConverter
operator|.
name|convert
argument_list|(
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"100.001"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"TextConverter"
argument_list|,
literal|null
argument_list|,
name|textConverter
operator|.
name|convert
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// Binary
name|Converter
name|baConverter
init|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaStringObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableBinaryObjectInspector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"BAConverter"
argument_list|,
operator|new
name|BytesWritable
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|'h'
block|,
operator|(
name|byte
operator|)
literal|'i'
block|,
operator|(
name|byte
operator|)
literal|'v'
block|,
operator|(
name|byte
operator|)
literal|'e'
block|}
argument_list|)
argument_list|,
name|baConverter
operator|.
name|convert
argument_list|(
literal|"hive"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"BAConverter"
argument_list|,
literal|null
argument_list|,
name|baConverter
operator|.
name|convert
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|baConverter
operator|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|writableStringObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableBinaryObjectInspector
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"BAConverter"
argument_list|,
operator|new
name|BytesWritable
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|'h'
block|,
operator|(
name|byte
operator|)
literal|'i'
block|,
operator|(
name|byte
operator|)
literal|'v'
block|,
operator|(
name|byte
operator|)
literal|'e'
block|}
argument_list|)
argument_list|,
name|baConverter
operator|.
name|convert
argument_list|(
operator|new
name|Text
argument_list|(
literal|"hive"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"BAConverter"
argument_list|,
literal|null
argument_list|,
name|baConverter
operator|.
name|convert
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// Union
name|ArrayList
argument_list|<
name|String
argument_list|>
name|fieldNames
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|fieldNames
operator|.
name|add
argument_list|(
literal|"firstInteger"
argument_list|)
expr_stmt|;
name|fieldNames
operator|.
name|add
argument_list|(
literal|"secondString"
argument_list|)
expr_stmt|;
name|fieldNames
operator|.
name|add
argument_list|(
literal|"thirdBoolean"
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|ObjectInspector
argument_list|>
name|fieldObjectInspectors
init|=
operator|new
name|ArrayList
argument_list|<
name|ObjectInspector
argument_list|>
argument_list|()
decl_stmt|;
name|fieldObjectInspectors
operator|.
name|add
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|)
expr_stmt|;
name|fieldObjectInspectors
operator|.
name|add
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaStringObjectInspector
argument_list|)
expr_stmt|;
name|fieldObjectInspectors
operator|.
name|add
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaBooleanObjectInspector
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|String
argument_list|>
name|fieldNames2
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|fieldNames2
operator|.
name|add
argument_list|(
literal|"firstString"
argument_list|)
expr_stmt|;
name|fieldNames2
operator|.
name|add
argument_list|(
literal|"secondInteger"
argument_list|)
expr_stmt|;
name|fieldNames2
operator|.
name|add
argument_list|(
literal|"thirdBoolean"
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|ObjectInspector
argument_list|>
name|fieldObjectInspectors2
init|=
operator|new
name|ArrayList
argument_list|<
name|ObjectInspector
argument_list|>
argument_list|()
decl_stmt|;
name|fieldObjectInspectors2
operator|.
name|add
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaStringObjectInspector
argument_list|)
expr_stmt|;
name|fieldObjectInspectors2
operator|.
name|add
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|)
expr_stmt|;
name|fieldObjectInspectors2
operator|.
name|add
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaBooleanObjectInspector
argument_list|)
expr_stmt|;
name|Converter
name|unionConverter0
init|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|ObjectInspectorFactory
operator|.
name|getStandardUnionObjectInspector
argument_list|(
name|fieldObjectInspectors
argument_list|)
argument_list|,
name|ObjectInspectorFactory
operator|.
name|getStandardUnionObjectInspector
argument_list|(
name|fieldObjectInspectors2
argument_list|)
argument_list|)
decl_stmt|;
name|Object
name|convertedObject0
init|=
name|unionConverter0
operator|.
name|convert
argument_list|(
operator|new
name|StandardUnionObjectInspector
operator|.
name|StandardUnion
argument_list|(
operator|(
name|byte
operator|)
literal|0
argument_list|,
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|expectedObject0
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|expectedObject0
operator|.
name|add
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedObject0
argument_list|,
name|convertedObject0
argument_list|)
expr_stmt|;
name|Converter
name|unionConverter1
init|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|ObjectInspectorFactory
operator|.
name|getStandardUnionObjectInspector
argument_list|(
name|fieldObjectInspectors
argument_list|)
argument_list|,
name|ObjectInspectorFactory
operator|.
name|getStandardUnionObjectInspector
argument_list|(
name|fieldObjectInspectors2
argument_list|)
argument_list|)
decl_stmt|;
name|Object
name|convertedObject1
init|=
name|unionConverter1
operator|.
name|convert
argument_list|(
operator|new
name|StandardUnionObjectInspector
operator|.
name|StandardUnion
argument_list|(
operator|(
name|byte
operator|)
literal|1
argument_list|,
literal|"1"
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Integer
argument_list|>
name|expectedObject1
init|=
operator|new
name|ArrayList
argument_list|<
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
name|expectedObject1
operator|.
name|add
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedObject1
argument_list|,
name|convertedObject1
argument_list|)
expr_stmt|;
name|Converter
name|unionConverter2
init|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|ObjectInspectorFactory
operator|.
name|getStandardUnionObjectInspector
argument_list|(
name|fieldObjectInspectors
argument_list|)
argument_list|,
name|ObjectInspectorFactory
operator|.
name|getStandardUnionObjectInspector
argument_list|(
name|fieldObjectInspectors2
argument_list|)
argument_list|)
decl_stmt|;
name|Object
name|convertedObject2
init|=
name|unionConverter2
operator|.
name|convert
argument_list|(
operator|new
name|StandardUnionObjectInspector
operator|.
name|StandardUnion
argument_list|(
operator|(
name|byte
operator|)
literal|2
argument_list|,
literal|true
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Boolean
argument_list|>
name|expectedObject2
init|=
operator|new
name|ArrayList
argument_list|<
name|Boolean
argument_list|>
argument_list|()
decl_stmt|;
name|expectedObject2
operator|.
name|add
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedObject2
argument_list|,
name|convertedObject2
argument_list|)
expr_stmt|;
comment|// Union (extra fields)
name|ArrayList
argument_list|<
name|String
argument_list|>
name|fieldNamesExtra
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|fieldNamesExtra
operator|.
name|add
argument_list|(
literal|"firstInteger"
argument_list|)
expr_stmt|;
name|fieldNamesExtra
operator|.
name|add
argument_list|(
literal|"secondString"
argument_list|)
expr_stmt|;
name|fieldNamesExtra
operator|.
name|add
argument_list|(
literal|"thirdBoolean"
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|ObjectInspector
argument_list|>
name|fieldObjectInspectorsExtra
init|=
operator|new
name|ArrayList
argument_list|<
name|ObjectInspector
argument_list|>
argument_list|()
decl_stmt|;
name|fieldObjectInspectorsExtra
operator|.
name|add
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|)
expr_stmt|;
name|fieldObjectInspectorsExtra
operator|.
name|add
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaStringObjectInspector
argument_list|)
expr_stmt|;
name|fieldObjectInspectorsExtra
operator|.
name|add
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaBooleanObjectInspector
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|String
argument_list|>
name|fieldNamesExtra2
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|fieldNamesExtra2
operator|.
name|add
argument_list|(
literal|"firstString"
argument_list|)
expr_stmt|;
name|fieldNamesExtra2
operator|.
name|add
argument_list|(
literal|"secondInteger"
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|ObjectInspector
argument_list|>
name|fieldObjectInspectorsExtra2
init|=
operator|new
name|ArrayList
argument_list|<
name|ObjectInspector
argument_list|>
argument_list|()
decl_stmt|;
name|fieldObjectInspectorsExtra2
operator|.
name|add
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaStringObjectInspector
argument_list|)
expr_stmt|;
name|fieldObjectInspectorsExtra2
operator|.
name|add
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|)
expr_stmt|;
name|Converter
name|unionConverterExtra
init|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|ObjectInspectorFactory
operator|.
name|getStandardUnionObjectInspector
argument_list|(
name|fieldObjectInspectorsExtra
argument_list|)
argument_list|,
name|ObjectInspectorFactory
operator|.
name|getStandardUnionObjectInspector
argument_list|(
name|fieldObjectInspectorsExtra2
argument_list|)
argument_list|)
decl_stmt|;
name|Object
name|convertedObjectExtra
init|=
name|unionConverterExtra
operator|.
name|convert
argument_list|(
operator|new
name|StandardUnionObjectInspector
operator|.
name|StandardUnion
argument_list|(
operator|(
name|byte
operator|)
literal|2
argument_list|,
literal|true
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|expectedObjectExtra
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|expectedObjectExtra
operator|.
name|add
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedObjectExtra
argument_list|,
name|convertedObjectExtra
argument_list|)
expr_stmt|;
comment|// we should get back null
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
specifier|public
name|void
name|testGetConvertedOI
parameter_list|()
throws|throws
name|Throwable
block|{
comment|// Try with types that have type params
name|PrimitiveTypeInfo
name|varchar5TI
init|=
operator|(
name|PrimitiveTypeInfo
operator|)
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
literal|"varchar(5)"
argument_list|)
decl_stmt|;
name|PrimitiveTypeInfo
name|varchar10TI
init|=
operator|(
name|PrimitiveTypeInfo
operator|)
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
literal|"varchar(10)"
argument_list|)
decl_stmt|;
name|PrimitiveObjectInspector
name|varchar5OI
init|=
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveWritableObjectInspector
argument_list|(
name|varchar5TI
argument_list|)
decl_stmt|;
name|PrimitiveObjectInspector
name|varchar10OI
init|=
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveWritableObjectInspector
argument_list|(
name|varchar10TI
argument_list|)
decl_stmt|;
comment|// output OI should have varchar type params
name|PrimitiveObjectInspector
name|poi
init|=
operator|(
name|PrimitiveObjectInspector
operator|)
name|ObjectInspectorConverters
operator|.
name|getConvertedOI
argument_list|(
name|varchar10OI
argument_list|,
name|varchar5OI
argument_list|)
decl_stmt|;
name|VarcharTypeInfo
name|vcParams
init|=
operator|(
name|VarcharTypeInfo
operator|)
name|poi
operator|.
name|getTypeInfo
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"varchar length doesn't match"
argument_list|,
literal|5
argument_list|,
name|vcParams
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

