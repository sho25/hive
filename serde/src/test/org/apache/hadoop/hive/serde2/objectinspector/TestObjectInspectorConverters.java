begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|ByteWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|DoubleWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|ShortWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspectorConverters
operator|.
name|Converter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|PrimitiveObjectInspectorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|BooleanWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|FloatWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|IntWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|LongWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_class
specifier|public
class|class
name|TestObjectInspectorConverters
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testObjectInspectorConverters
parameter_list|()
throws|throws
name|Throwable
block|{
try|try
block|{
comment|// Boolean
name|Converter
name|booleanConverter
init|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableBooleanObjectInspector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"BooleanConverter"
argument_list|,
operator|new
name|BooleanWritable
argument_list|(
literal|false
argument_list|)
argument_list|,
name|booleanConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"BooleanConverter"
argument_list|,
operator|new
name|BooleanWritable
argument_list|(
literal|true
argument_list|)
argument_list|,
name|booleanConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Byte
name|Converter
name|byteConverter
init|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableByteObjectInspector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"ByteConverter"
argument_list|,
operator|new
name|ByteWritable
argument_list|(
operator|(
name|byte
operator|)
literal|0
argument_list|)
argument_list|,
name|byteConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ByteConverter"
argument_list|,
operator|new
name|ByteWritable
argument_list|(
operator|(
name|byte
operator|)
literal|1
argument_list|)
argument_list|,
name|byteConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Short
name|Converter
name|shortConverter
init|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableShortObjectInspector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"ShortConverter"
argument_list|,
operator|new
name|ShortWritable
argument_list|(
operator|(
name|short
operator|)
literal|0
argument_list|)
argument_list|,
name|shortConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ShortConverter"
argument_list|,
operator|new
name|ShortWritable
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|)
argument_list|,
name|shortConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Int
name|Converter
name|intConverter
init|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableIntObjectInspector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"IntConverter"
argument_list|,
operator|new
name|IntWritable
argument_list|(
literal|0
argument_list|)
argument_list|,
name|intConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"IntConverter"
argument_list|,
operator|new
name|IntWritable
argument_list|(
literal|1
argument_list|)
argument_list|,
name|intConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Long
name|Converter
name|longConverter
init|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableLongObjectInspector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"LongConverter"
argument_list|,
operator|new
name|LongWritable
argument_list|(
literal|0
argument_list|)
argument_list|,
name|longConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"LongConverter"
argument_list|,
operator|new
name|LongWritable
argument_list|(
literal|1
argument_list|)
argument_list|,
name|longConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Float
name|Converter
name|floatConverter
init|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableFloatObjectInspector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"LongConverter"
argument_list|,
operator|new
name|FloatWritable
argument_list|(
literal|0
argument_list|)
argument_list|,
name|floatConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"LongConverter"
argument_list|,
operator|new
name|FloatWritable
argument_list|(
literal|1
argument_list|)
argument_list|,
name|floatConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Double
name|Converter
name|doubleConverter
init|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableDoubleObjectInspector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"DoubleConverter"
argument_list|,
operator|new
name|DoubleWritable
argument_list|(
literal|0
argument_list|)
argument_list|,
name|doubleConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"DoubleConverter"
argument_list|,
operator|new
name|DoubleWritable
argument_list|(
literal|1
argument_list|)
argument_list|,
name|doubleConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Text
name|Converter
name|textConverter
init|=
name|ObjectInspectorConverters
operator|.
name|getConverter
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|writableStringObjectInspector
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"TextConverter"
argument_list|,
operator|new
name|Text
argument_list|(
literal|"0"
argument_list|)
argument_list|,
name|textConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"TextConverter"
argument_list|,
operator|new
name|Text
argument_list|(
literal|"1"
argument_list|)
argument_list|,
name|textConverter
operator|.
name|convert
argument_list|(
name|Integer
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
block|}
end_class

end_unit

