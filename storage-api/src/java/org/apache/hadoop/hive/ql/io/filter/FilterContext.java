begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|filter
package|;
end_package

begin_comment
comment|/**  * A representation of a Filter applied on the rows of a VectorizedRowBatch  * {@link org.apache.hadoop.hive.ql.exec.vector.VectorizedRowBatch}.  *  * Each FilterContext consists of an array with the ids (int) of rows that are selected by the  * filter, an integer representing the number of selected rows, and a boolean showing if the filter  * actually selected any rows.  *  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|FilterContext
block|{
specifier|protected
name|boolean
name|currBatchIsSelectedInUse
init|=
literal|false
decl_stmt|;
specifier|protected
name|int
index|[]
name|currBatchSelected
init|=
literal|null
decl_stmt|;
specifier|protected
name|int
name|currBatchSelectedSize
init|=
literal|0
decl_stmt|;
specifier|public
name|FilterContext
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
block|}
comment|/**    * Reset FilterContext variables.    */
specifier|public
name|void
name|resetFilterContext
parameter_list|()
block|{
name|this
operator|.
name|currBatchIsSelectedInUse
operator|=
literal|false
expr_stmt|;
name|this
operator|.
name|currBatchSelected
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|currBatchSelectedSize
operator|=
literal|0
expr_stmt|;
block|}
comment|/**    * Is the filter applied?    * @return true if the filter is actually applied    */
specifier|public
name|boolean
name|isSelectedInUse
parameter_list|()
block|{
return|return
name|this
operator|.
name|currBatchIsSelectedInUse
return|;
block|}
comment|/**    * Return an int array with the rows that pass the filter.    * Do not modify the array returned!    * @return int array    */
specifier|public
name|int
index|[]
name|getSelected
parameter_list|()
block|{
return|return
name|this
operator|.
name|currBatchSelected
return|;
block|}
comment|/**    * Return the number of rows that pass the filter.    * @return an int    */
specifier|public
name|int
name|getSelectedSize
parameter_list|()
block|{
return|return
name|this
operator|.
name|currBatchSelectedSize
return|;
block|}
block|}
end_class

end_unit

