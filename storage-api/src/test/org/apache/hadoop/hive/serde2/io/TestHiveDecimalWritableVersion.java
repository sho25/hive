begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|annotation
operator|.
name|Annotation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Modifier
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Timestamp
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigDecimal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigInteger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|VersionTestBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|type
operator|.
name|HiveDecimal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|type
operator|.
name|HiveDecimalV1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|TestHiveDecimalWritableVersion
extends|extends
name|VersionTestBase
block|{
comment|/*    * Validation:    * 1) Substitute class name for "ThisClass".    * 2) Only public fields and methods are versioned.    * 3) Methods compare on [non-]static, return type, name, parameter types, exceptions thrown.    * 4) Fields compare on [non-]static, type, name, value when static    */
annotation|@
name|Test
specifier|public
name|void
name|testVerifyHiveDecimalWritablePublicMethodsAndFieldsVersions
parameter_list|()
throws|throws
name|IllegalAccessException
block|{
name|Map
argument_list|<
name|Class
argument_list|,
name|String
argument_list|>
name|versionedClassToNameMap
init|=
operator|new
name|HashMap
argument_list|<
name|Class
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|versionedClassToNameMap
operator|.
name|put
argument_list|(
name|HiveDecimalV1
operator|.
name|class
argument_list|,
literal|"HiveDecimal"
argument_list|)
expr_stmt|;
name|versionedClassToNameMap
operator|.
name|put
argument_list|(
name|HiveDecimal
operator|.
name|class
argument_list|,
literal|"HiveDecimal"
argument_list|)
expr_stmt|;
name|versionedClassToNameMap
operator|.
name|put
argument_list|(
name|HiveDecimalWritableV1
operator|.
name|class
argument_list|,
literal|"HiveDecimalWritable"
argument_list|)
expr_stmt|;
name|versionedClassToNameMap
operator|.
name|put
argument_list|(
name|HiveDecimalWritable
operator|.
name|class
argument_list|,
literal|"HiveDecimalWritable"
argument_list|)
expr_stmt|;
name|doVerifyVersions
argument_list|(
name|HiveDecimalWritableV1
operator|.
name|class
argument_list|,
name|HiveDecimalWritableVersionV1
operator|.
name|class
argument_list|,
name|HiveDecimalWritable
operator|.
name|class
argument_list|,
name|HiveDecimalWritableVersionV2
operator|.
name|class
argument_list|,
name|versionedClassToNameMap
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

