begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertSame
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|JavaDataModelTest
block|{
specifier|private
specifier|static
specifier|final
name|String
name|DATA_MODEL_PROPERTY
init|=
literal|"sun.arch.data.model"
decl_stmt|;
specifier|private
name|String
name|previousModelSetting
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|previousModelSetting
operator|=
name|System
operator|.
name|getProperty
argument_list|(
name|DATA_MODEL_PROPERTY
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|previousModelSetting
operator|!=
literal|null
condition|)
block|{
name|System
operator|.
name|setProperty
argument_list|(
name|DATA_MODEL_PROPERTY
argument_list|,
name|previousModelSetting
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|System
operator|.
name|clearProperty
argument_list|(
name|DATA_MODEL_PROPERTY
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetDoesNotReturnNull
parameter_list|()
throws|throws
name|Exception
block|{
name|JavaDataModel
name|model
init|=
name|JavaDataModel
operator|.
name|get
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|model
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetModelForSystemWhenSetTo32
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|setProperty
argument_list|(
name|DATA_MODEL_PROPERTY
argument_list|,
literal|"32"
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|JavaDataModel
operator|.
name|JAVA32
argument_list|,
name|JavaDataModel
operator|.
name|getModelForSystem
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetModelForSystemWhenSetTo64
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|setProperty
argument_list|(
name|DATA_MODEL_PROPERTY
argument_list|,
literal|"64"
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|JavaDataModel
operator|.
name|JAVA64
argument_list|,
name|JavaDataModel
operator|.
name|getModelForSystem
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetModelForSystemWhenSetToUnknown
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|setProperty
argument_list|(
name|DATA_MODEL_PROPERTY
argument_list|,
literal|"unknown"
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|JavaDataModel
operator|.
name|JAVA64
argument_list|,
name|JavaDataModel
operator|.
name|getModelForSystem
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetModelForSystemWhenUndefined
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|clearProperty
argument_list|(
name|DATA_MODEL_PROPERTY
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|JavaDataModel
operator|.
name|JAVA64
argument_list|,
name|JavaDataModel
operator|.
name|getModelForSystem
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

