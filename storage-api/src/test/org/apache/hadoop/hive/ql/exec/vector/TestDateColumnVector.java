begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|vector
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|TestDateColumnVector
block|{
comment|/**    * Test case for DateColumnVector's changeCalendar    * epoch days, hybrid representation, proleptic representation    *   16768: hybrid: 2015-11-29 proleptic: 2015-11-29    * -141418: hybrid: 1582-10-24 proleptic: 1582-10-24    * -141427: hybrid: 1582-10-15 proleptic: 1582-10-15    * -141428: hybrid: 1582-10-04 proleptic: 1582-10-14    * -141430: hybrid: 1582-10-02 proleptic: 1582-10-12    * -141437: hybrid: 1582-09-25 proleptic: 1582-10-05    * -141438: hybrid: 1582-09-24 proleptic: 1582-10-04    * -499952: hybrid: 0601-03-04 proleptic: 0601-03-07    * -499955: hybrid: 0601-03-01 proleptic: 0601-03-04    * @throws Exception     */
annotation|@
name|Test
specifier|public
name|void
name|testProlepticCalendar
parameter_list|()
throws|throws
name|Exception
block|{
comment|// the expected output is the same as it was with the original calendar,
comment|// as the goal is to change the underlying data in a way that the user
comment|// gets the same string representation after the calendar change
comment|// from hybrid internal representation to proleptic
name|setDateAndVerifyProlepticUpdate
argument_list|(
literal|16768
argument_list|,
literal|"2015-11-29"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|setDateAndVerifyProlepticUpdate
argument_list|(
operator|-
literal|141418
argument_list|,
literal|"1582-10-24"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|setDateAndVerifyProlepticUpdate
argument_list|(
operator|-
literal|141427
argument_list|,
literal|"1582-10-15"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|setDateAndVerifyProlepticUpdate
argument_list|(
operator|-
literal|141428
argument_list|,
literal|"1582-10-04"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|setDateAndVerifyProlepticUpdate
argument_list|(
operator|-
literal|141430
argument_list|,
literal|"1582-10-02"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|setDateAndVerifyProlepticUpdate
argument_list|(
operator|-
literal|141437
argument_list|,
literal|"1582-09-25"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|setDateAndVerifyProlepticUpdate
argument_list|(
operator|-
literal|499952
argument_list|,
literal|"0601-03-04"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|setDateAndVerifyProlepticUpdate
argument_list|(
operator|-
literal|499955
argument_list|,
literal|"0601-03-01"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// from proleptic internal representation to hybrid
comment|// this way, some string representations will change, as some proleptic dates
comment|// (represented as string) don't exist in hybrid calendar, e.g. '1582-10-14'
name|setDateAndVerifyProlepticUpdate
argument_list|(
literal|16768
argument_list|,
literal|"2015-11-29"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|setDateAndVerifyProlepticUpdate
argument_list|(
operator|-
literal|141418
argument_list|,
literal|"1582-10-24"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|setDateAndVerifyProlepticUpdate
argument_list|(
operator|-
literal|141427
argument_list|,
literal|"1582-10-15"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|setDateAndVerifyProlepticUpdate
argument_list|(
operator|-
literal|141428
argument_list|,
literal|"1582-10-24"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// 1582-10-14 -> 1582-10-24
name|setDateAndVerifyProlepticUpdate
argument_list|(
operator|-
literal|141430
argument_list|,
literal|"1582-10-22"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// 1582-10-12 -> 1582-10-22
name|setDateAndVerifyProlepticUpdate
argument_list|(
operator|-
literal|141437
argument_list|,
literal|"1582-10-15"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// 1582-10-05 -> 1582-10-15
name|setDateAndVerifyProlepticUpdate
argument_list|(
operator|-
literal|499952
argument_list|,
literal|"0601-03-07"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|setDateAndVerifyProlepticUpdate
argument_list|(
operator|-
literal|499955
argument_list|,
literal|"0601-03-04"
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|setDateAndVerifyProlepticUpdate
parameter_list|(
name|long
name|longDay
parameter_list|,
name|String
name|expectedDateString
parameter_list|,
name|boolean
name|originalUseProleptic
parameter_list|,
name|boolean
name|newUseProleptic
parameter_list|)
throws|throws
name|Exception
block|{
name|DateColumnVector
name|dateColumnVector
init|=
operator|new
name|DateColumnVector
argument_list|()
operator|.
name|setUsingProlepticCalendar
argument_list|(
name|originalUseProleptic
argument_list|)
decl_stmt|;
name|dateColumnVector
operator|.
name|vector
index|[
literal|0
index|]
operator|=
name|longDay
expr_stmt|;
name|dateColumnVector
operator|.
name|changeCalendar
argument_list|(
name|newUseProleptic
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"original = "
operator|+
name|originalUseProleptic
operator|+
literal|" new = "
operator|+
name|newUseProleptic
argument_list|,
name|expectedDateString
argument_list|,
name|dateColumnVector
operator|.
name|formatDate
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

