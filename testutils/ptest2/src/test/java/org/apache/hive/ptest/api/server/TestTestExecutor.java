begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|api
operator|.
name|server
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ArrayBlockingQueue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|BlockingQueue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|api
operator|.
name|Status
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|api
operator|.
name|request
operator|.
name|TestStartRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|execution
operator|.
name|LocalCommandFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|execution
operator|.
name|PTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|execution
operator|.
name|conf
operator|.
name|ExecutionContextConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|execution
operator|.
name|conf
operator|.
name|Host
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|execution
operator|.
name|conf
operator|.
name|TestConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|execution
operator|.
name|context
operator|.
name|ExecutionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|execution
operator|.
name|context
operator|.
name|ExecutionContextProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|execution
operator|.
name|ssh
operator|.
name|RSyncCommandExecutor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|execution
operator|.
name|ssh
operator|.
name|SSHCommandExecutor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TemporaryFolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Sets
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|Resources
import|;
end_import

begin_class
specifier|public
class|class
name|TestTestExecutor
block|{
specifier|private
specifier|static
specifier|final
name|String
name|TEST_HANDLE
init|=
literal|"myhandle"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PRIVATE_KEY
init|=
literal|"mykey"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PROFILE
init|=
literal|"myprole"
decl_stmt|;
annotation|@
name|Rule
specifier|public
name|TemporaryFolder
name|baseDir
init|=
operator|new
name|TemporaryFolder
argument_list|()
decl_stmt|;
specifier|private
name|TestExecutor
name|testExecutor
decl_stmt|;
specifier|private
name|BlockingQueue
argument_list|<
name|Test
argument_list|>
name|testQueue
decl_stmt|;
specifier|private
name|ExecutionContextConfiguration
name|executionContextConfiguration
decl_stmt|;
specifier|private
name|ExecutionContextProvider
name|executionContextProvider
decl_stmt|;
specifier|private
name|ExecutionContext
name|executionContext
decl_stmt|;
specifier|private
name|PTest
operator|.
name|Builder
name|ptestBuilder
decl_stmt|;
specifier|private
name|PTest
name|ptest
decl_stmt|;
specifier|private
name|Test
name|test
decl_stmt|;
specifier|private
name|TestStartRequest
name|startRequest
decl_stmt|;
specifier|private
name|File
name|profileProperties
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|startRequest
operator|=
operator|new
name|TestStartRequest
argument_list|()
expr_stmt|;
name|startRequest
operator|.
name|setProfile
argument_list|(
name|PROFILE
argument_list|)
expr_stmt|;
name|startRequest
operator|.
name|setTestHandle
argument_list|(
name|TEST_HANDLE
argument_list|)
expr_stmt|;
name|test
operator|=
operator|new
name|Test
argument_list|(
name|startRequest
argument_list|,
name|Status
operator|.
name|pending
argument_list|()
argument_list|,
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
name|testQueue
operator|=
operator|new
name|ArrayBlockingQueue
argument_list|<
name|Test
argument_list|>
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|executionContextConfiguration
operator|=
name|mock
argument_list|(
name|ExecutionContextConfiguration
operator|.
name|class
argument_list|)
expr_stmt|;
name|executionContextProvider
operator|=
name|mock
argument_list|(
name|ExecutionContextProvider
operator|.
name|class
argument_list|)
expr_stmt|;
name|ptest
operator|=
name|mock
argument_list|(
name|PTest
operator|.
name|class
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|Host
argument_list|>
name|hosts
init|=
name|Sets
operator|.
name|newHashSet
argument_list|()
decl_stmt|;
name|String
name|baseDirPath
init|=
name|baseDir
operator|.
name|getRoot
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
decl_stmt|;
name|executionContext
operator|=
operator|new
name|ExecutionContext
argument_list|(
name|executionContextProvider
argument_list|,
name|hosts
argument_list|,
name|baseDirPath
argument_list|,
name|PRIVATE_KEY
argument_list|)
expr_stmt|;
name|profileProperties
operator|=
operator|new
name|File
argument_list|(
name|baseDirPath
argument_list|,
name|PROFILE
operator|+
literal|".properties"
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|executionContextConfiguration
operator|.
name|getProfileDirectory
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|baseDirPath
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|executionContextConfiguration
operator|.
name|getGlobalLogDirectory
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|baseDirPath
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|executionContextProvider
operator|.
name|createExecutionContext
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|executionContext
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|profileProperties
operator|.
name|toString
argument_list|()
argument_list|,
name|profileProperties
operator|.
name|createNewFile
argument_list|()
argument_list|)
expr_stmt|;
name|OutputStream
name|profilePropertiesOutputStream
init|=
operator|new
name|FileOutputStream
argument_list|(
name|profileProperties
argument_list|)
decl_stmt|;
name|Resources
operator|.
name|copy
argument_list|(
name|Resources
operator|.
name|getResource
argument_list|(
literal|"test-configuration.properties"
argument_list|)
argument_list|,
name|profilePropertiesOutputStream
argument_list|)
expr_stmt|;
name|profilePropertiesOutputStream
operator|.
name|close
argument_list|()
expr_stmt|;
name|ptestBuilder
operator|=
operator|new
name|PTest
operator|.
name|Builder
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|PTest
name|build
parameter_list|(
name|TestConfiguration
name|configuration
parameter_list|,
name|ExecutionContext
name|executionContext
parameter_list|,
name|String
name|buildTag
parameter_list|,
name|File
name|logDir
parameter_list|,
name|LocalCommandFactory
name|localCommandFactory
parameter_list|,
name|SSHCommandExecutor
name|sshCommandExecutor
parameter_list|,
name|RSyncCommandExecutor
name|rsyncCommandExecutor
parameter_list|,
name|Logger
name|logger
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|ptest
return|;
block|}
block|}
expr_stmt|;
name|testExecutor
operator|=
operator|new
name|TestExecutor
argument_list|(
name|executionContextConfiguration
argument_list|,
name|executionContextProvider
argument_list|,
name|testQueue
argument_list|,
name|ptestBuilder
argument_list|)
expr_stmt|;
name|testExecutor
operator|.
name|setDaemon
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|testExecutor
operator|.
name|start
argument_list|()
expr_stmt|;
name|TimeUnit
operator|.
name|MILLISECONDS
operator|.
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|teardown
parameter_list|()
block|{
if|if
condition|(
name|testExecutor
operator|!=
literal|null
condition|)
block|{
name|testExecutor
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|org
operator|.
name|junit
operator|.
name|Test
specifier|public
name|void
name|testSuccess
parameter_list|()
throws|throws
name|Exception
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|test
operator|.
name|getStatus
argument_list|()
argument_list|)
argument_list|,
name|Status
operator|.
name|isPending
argument_list|(
name|test
operator|.
name|getStatus
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|testQueue
operator|.
name|add
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|sleep
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|test
operator|.
name|getStatus
argument_list|()
argument_list|)
argument_list|,
name|Status
operator|.
name|isOK
argument_list|(
name|test
operator|.
name|getStatus
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|org
operator|.
name|junit
operator|.
name|Test
specifier|public
name|void
name|testTestFailure
parameter_list|()
throws|throws
name|Exception
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|test
operator|.
name|getStatus
argument_list|()
argument_list|)
argument_list|,
name|Status
operator|.
name|isPending
argument_list|(
name|test
operator|.
name|getStatus
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|ptest
operator|.
name|run
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|testQueue
operator|.
name|add
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|sleep
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|test
operator|.
name|getStatus
argument_list|()
argument_list|)
argument_list|,
name|Status
operator|.
name|isFailed
argument_list|(
name|test
operator|.
name|getStatus
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|org
operator|.
name|junit
operator|.
name|Test
specifier|public
name|void
name|testNoProfileProperties
parameter_list|()
throws|throws
name|Exception
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|test
operator|.
name|getStatus
argument_list|()
argument_list|)
argument_list|,
name|Status
operator|.
name|isPending
argument_list|(
name|test
operator|.
name|getStatus
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|profileProperties
operator|.
name|toString
argument_list|()
argument_list|,
name|profileProperties
operator|.
name|delete
argument_list|()
argument_list|)
expr_stmt|;
name|testQueue
operator|.
name|add
argument_list|(
name|test
argument_list|)
expr_stmt|;
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|sleep
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|test
operator|.
name|getStatus
argument_list|()
argument_list|)
argument_list|,
name|Status
operator|.
name|isIllegalArgument
argument_list|(
name|test
operator|.
name|getStatus
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

