begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|execution
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Maps
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Sets
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|Resources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|execution
operator|.
name|PTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|execution
operator|.
name|context
operator|.
name|ExecutionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TemporaryFolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_class
specifier|public
class|class
name|TestTestConfiguration
block|{
specifier|public
name|TemporaryFolder
name|baseDir
init|=
operator|new
name|TemporaryFolder
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TestTestConfiguration
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testGettersSetters
parameter_list|()
throws|throws
name|Exception
block|{
name|Context
name|ctx
init|=
name|Context
operator|.
name|fromInputStream
argument_list|(
name|Resources
operator|.
name|getResource
argument_list|(
literal|"test-configuration.properties"
argument_list|)
operator|.
name|openStream
argument_list|()
argument_list|)
decl_stmt|;
name|ExecutionContextConfiguration
name|execConf
init|=
name|ExecutionContextConfiguration
operator|.
name|withContext
argument_list|(
name|ctx
argument_list|)
decl_stmt|;
name|TestConfiguration
name|conf
init|=
name|TestConfiguration
operator|.
name|withContext
argument_list|(
name|ctx
argument_list|,
name|LOG
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|Host
argument_list|>
name|expectedHosts
init|=
name|Sets
operator|.
name|newHashSet
argument_list|(
operator|new
name|Host
argument_list|(
literal|"localhost"
argument_list|,
literal|"hiveptest"
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"/home/hiveptest"
block|}
argument_list|,
literal|2
argument_list|)
argument_list|)
decl_stmt|;
name|ExecutionContext
name|executionContext
init|=
name|execConf
operator|.
name|getExecutionContextProvider
argument_list|()
operator|.
name|createExecutionContext
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|expectedHosts
argument_list|,
name|executionContext
operator|.
name|getHosts
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"/tmp/hive-ptest-units/working/dir"
argument_list|,
name|execConf
operator|.
name|getWorkingDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"/etc/hiveptest/conf"
argument_list|,
name|execConf
operator|.
name|getProfileDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"/tmp/hive-ptest-units/working/dir/logs"
argument_list|,
name|execConf
operator|.
name|getGlobalLogDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"/home/brock/.ssh/id_rsa"
argument_list|,
name|executionContext
operator|.
name|getPrivateKey
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"git://github.com/apache/hive.git"
argument_list|,
name|conf
operator|.
name|getRepository
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"apache-github"
argument_list|,
name|conf
operator|.
name|getRepositoryName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"trunk"
argument_list|,
name|conf
operator|.
name|getBranch
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"/tmp/hive-ptest-units/working/dir/working"
argument_list|,
name|executionContext
operator|.
name|getLocalWorkingDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"-Dtest.continue.on.failure=true -Dtest.silent=false"
argument_list|,
name|conf
operator|.
name|getAntArgs
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"hadoop-1,hadoop-2"
argument_list|,
name|conf
operator|.
name|getAdditionalProfiles
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|conf
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|conf
operator|.
name|getPatch
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setPatch
argument_list|(
literal|"Patch"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Patch"
argument_list|,
name|conf
operator|.
name|getPatch
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setRepository
argument_list|(
literal|"Repository"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Repository"
argument_list|,
name|conf
operator|.
name|getRepository
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setRepositoryName
argument_list|(
literal|"RepositoryName"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"RepositoryName"
argument_list|,
name|conf
operator|.
name|getRepositoryName
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBranch
argument_list|(
literal|"Branch"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Branch"
argument_list|,
name|conf
operator|.
name|getBranch
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setAntArgs
argument_list|(
literal|"AntArgs"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"AntArgs"
argument_list|,
name|conf
operator|.
name|getAntArgs
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testContext
parameter_list|()
throws|throws
name|Exception
block|{
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|properties
operator|.
name|load
argument_list|(
name|Resources
operator|.
name|getResource
argument_list|(
literal|"test-configuration.properties"
argument_list|)
operator|.
name|openStream
argument_list|()
argument_list|)
expr_stmt|;
name|Context
name|context
init|=
operator|new
name|Context
argument_list|(
name|Maps
operator|.
name|fromProperties
argument_list|(
name|properties
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|context
operator|.
name|getParameters
argument_list|()
argument_list|,
operator|(
operator|new
name|TestConfiguration
argument_list|(
name|context
argument_list|,
name|LOG
argument_list|)
operator|)
operator|.
name|getContext
argument_list|()
operator|.
name|getParameters
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Host
name|testHost
init|=
operator|new
name|Host
argument_list|(
literal|"test"
argument_list|,
literal|"test"
argument_list|,
operator|new
name|String
index|[
literal|1
index|]
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|Host
argument_list|>
name|testHosts
init|=
operator|new
name|HashSet
argument_list|<
name|Host
argument_list|>
argument_list|()
decl_stmt|;
name|testHosts
operator|.
name|add
argument_list|(
name|testHost
argument_list|)
expr_stmt|;
name|Context
name|ctx
init|=
name|Context
operator|.
name|fromInputStream
argument_list|(
name|Resources
operator|.
name|getResource
argument_list|(
literal|"test-configuration.properties"
argument_list|)
operator|.
name|openStream
argument_list|()
argument_list|)
decl_stmt|;
name|TestConfiguration
name|conf
init|=
name|TestConfiguration
operator|.
name|withContext
argument_list|(
name|ctx
argument_list|,
name|LOG
argument_list|)
decl_stmt|;
name|ExecutionContext
name|execContext
init|=
operator|new
name|ExecutionContext
argument_list|(
literal|null
argument_list|,
name|testHosts
argument_list|,
literal|"test"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|PTest
operator|.
name|Builder
name|mPTestBuilder
init|=
operator|new
name|PTest
operator|.
name|Builder
argument_list|()
decl_stmt|;
name|PTest
name|ptest
init|=
name|mPTestBuilder
operator|.
name|build
argument_list|(
name|conf
argument_list|,
name|execContext
argument_list|,
literal|"1234"
argument_list|,
name|baseDir
operator|.
name|newFolder
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|templateDefaults
init|=
name|ptest
operator|.
name|getTemplateDefaults
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"git://github.com/apache/hive.git"
argument_list|,
name|templateDefaults
operator|.
name|get
argument_list|(
literal|"repository"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"apache-github"
argument_list|,
name|templateDefaults
operator|.
name|get
argument_list|(
literal|"repositoryName"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"trunk"
argument_list|,
name|templateDefaults
operator|.
name|get
argument_list|(
literal|"branch"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"-Dtest.continue.on.failure=true -Dtest.silent=false"
argument_list|,
name|templateDefaults
operator|.
name|get
argument_list|(
literal|"antArgs"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"hadoop-1,hadoop-2"
argument_list|,
name|templateDefaults
operator|.
name|get
argument_list|(
literal|"additionalProfiles"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

