begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|api
operator|.
name|server
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Charsets
import|;
end_import

begin_class
specifier|public
class|class
name|TestTestLogger
block|{
annotation|@
name|org
operator|.
name|junit
operator|.
name|Test
specifier|public
name|void
name|basicTest
parameter_list|()
throws|throws
name|IOException
block|{
name|ByteArrayOutputStream
name|out
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|logFile
init|=
operator|new
name|PrintStream
argument_list|(
name|out
argument_list|)
decl_stmt|;
name|TestLogger
name|logger
init|=
operator|new
name|TestLogger
argument_list|(
name|logFile
argument_list|,
name|TestLogger
operator|.
name|LEVEL
operator|.
name|INFO
argument_list|)
decl_stmt|;
name|logger
operator|.
name|trace
argument_list|(
literal|"trace"
argument_list|)
expr_stmt|;
name|logger
operator|.
name|debug
argument_list|(
literal|"debug"
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"info"
argument_list|)
expr_stmt|;
name|logger
operator|.
name|warn
argument_list|(
literal|"warn"
argument_list|)
expr_stmt|;
name|logger
operator|.
name|error
argument_list|(
literal|"error"
argument_list|)
expr_stmt|;
name|logFile
operator|.
name|flush
argument_list|()
expr_stmt|;
name|logFile
operator|.
name|close
argument_list|()
expr_stmt|;
name|BufferedReader
name|reader
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|StringReader
argument_list|(
operator|new
name|String
argument_list|(
name|out
operator|.
name|toByteArray
argument_list|()
argument_list|,
name|Charsets
operator|.
name|UTF_8
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|info
init|=
name|reader
operator|.
name|readLine
argument_list|()
decl_stmt|;
name|String
name|warn
init|=
name|reader
operator|.
name|readLine
argument_list|()
decl_stmt|;
name|String
name|error
init|=
name|reader
operator|.
name|readLine
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|reader
operator|.
name|readLine
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|info
argument_list|,
name|info
operator|.
name|endsWith
argument_list|(
literal|"info"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|warn
argument_list|,
name|warn
operator|.
name|endsWith
argument_list|(
literal|"warn"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|error
argument_list|,
name|error
operator|.
name|endsWith
argument_list|(
literal|"error"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

