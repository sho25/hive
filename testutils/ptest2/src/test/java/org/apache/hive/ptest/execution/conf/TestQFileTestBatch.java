begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|execution
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Joiner
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Sets
import|;
end_import

begin_class
specifier|public
class|class
name|TestQFileTestBatch
block|{
specifier|private
specifier|static
specifier|final
name|String
name|DRIVER
init|=
literal|"driver"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|QUERY_FILES_PROPERTY
init|=
literal|"qfile"
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|tests
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|tests
operator|=
name|Sets
operator|.
name|newTreeSet
argument_list|(
name|Sets
operator|.
name|newHashSet
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|,
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testParallel
parameter_list|()
throws|throws
name|Exception
block|{
name|QFileTestBatch
name|batch
init|=
operator|new
name|QFileTestBatch
argument_list|(
name|DRIVER
argument_list|,
name|QUERY_FILES_PROPERTY
argument_list|,
name|tests
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|batch
operator|.
name|isParallel
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|DRIVER
argument_list|,
name|batch
operator|.
name|getDriver
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Joiner
operator|.
name|on
argument_list|(
literal|"-"
argument_list|)
operator|.
name|join
argument_list|(
name|DRIVER
argument_list|,
literal|"a"
argument_list|,
literal|"b"
argument_list|,
literal|"c"
argument_list|)
argument_list|,
name|batch
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"-Dtestcase=%s -D%s=a,b,c"
argument_list|,
name|DRIVER
argument_list|,
name|QUERY_FILES_PROPERTY
argument_list|)
argument_list|,
name|batch
operator|.
name|getTestArguments
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMoreThanThreeTests
parameter_list|()
throws|throws
name|Exception
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|tests
operator|.
name|add
argument_list|(
literal|"d"
argument_list|)
argument_list|)
expr_stmt|;
name|QFileTestBatch
name|batch
init|=
operator|new
name|QFileTestBatch
argument_list|(
name|DRIVER
argument_list|,
name|QUERY_FILES_PROPERTY
argument_list|,
name|tests
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|Joiner
operator|.
name|on
argument_list|(
literal|"-"
argument_list|)
operator|.
name|join
argument_list|(
name|DRIVER
argument_list|,
literal|"a"
argument_list|,
literal|"b"
argument_list|,
literal|"c"
argument_list|,
literal|"and"
argument_list|,
literal|"1"
argument_list|,
literal|"more"
argument_list|)
argument_list|,
name|batch
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNotParallel
parameter_list|()
throws|throws
name|Exception
block|{
name|QFileTestBatch
name|batch
init|=
operator|new
name|QFileTestBatch
argument_list|(
name|DRIVER
argument_list|,
name|QUERY_FILES_PROPERTY
argument_list|,
name|tests
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|batch
operator|.
name|isParallel
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

