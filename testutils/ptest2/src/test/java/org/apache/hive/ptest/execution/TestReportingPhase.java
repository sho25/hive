begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|execution
package|;
end_package

begin_import
import|import
name|org
operator|.
name|approvaltests
operator|.
name|Approvals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|approvaltests
operator|.
name|reporters
operator|.
name|JunitReporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|approvaltests
operator|.
name|reporters
operator|.
name|UseReporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
annotation|@
name|UseReporter
argument_list|(
name|JunitReporter
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestReportingPhase
extends|extends
name|AbstractTestPhase
block|{
specifier|private
name|ReportingPhase
name|phase
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|initialize
argument_list|(
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
argument_list|)
expr_stmt|;
name|createHostExecutor
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExecute
parameter_list|()
throws|throws
name|Exception
block|{
name|phase
operator|=
operator|new
name|ReportingPhase
argument_list|(
name|hostExecutors
argument_list|,
name|localCommandFactory
argument_list|,
name|templateDefaults
argument_list|,
name|logger
argument_list|)
expr_stmt|;
name|phase
operator|.
name|execute
argument_list|()
expr_stmt|;
name|Approvals
operator|.
name|verify
argument_list|(
name|getExecutedCommands
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

