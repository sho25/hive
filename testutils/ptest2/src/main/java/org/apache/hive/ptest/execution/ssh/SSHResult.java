begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|execution
operator|.
name|ssh
package|;
end_package

begin_class
specifier|public
class|class
name|SSHResult
extends|extends
name|AbstractSSHResult
block|{
specifier|private
specifier|final
name|String
name|command
decl_stmt|;
specifier|public
name|SSHResult
parameter_list|(
name|String
name|user
parameter_list|,
name|String
name|host
parameter_list|,
name|int
name|instance
parameter_list|,
name|String
name|command
parameter_list|,
name|int
name|exitCode
parameter_list|,
name|Exception
name|exception
parameter_list|,
name|String
name|output
parameter_list|)
block|{
name|super
argument_list|(
name|user
argument_list|,
name|host
argument_list|,
name|instance
argument_list|,
name|exitCode
argument_list|,
name|exception
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|this
operator|.
name|command
operator|=
name|command
expr_stmt|;
block|}
specifier|public
name|String
name|getCommand
parameter_list|()
block|{
return|return
name|command
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"SSHResult [command="
operator|+
name|command
operator|+
literal|", getExitCode()="
operator|+
name|getExitCode
argument_list|()
operator|+
literal|", getException()="
operator|+
name|getException
argument_list|()
operator|+
literal|", getUser()="
operator|+
name|getUser
argument_list|()
operator|+
literal|", getHost()="
operator|+
name|getHost
argument_list|()
operator|+
literal|", getInstance()="
operator|+
name|getInstance
argument_list|()
operator|+
literal|"]"
return|;
block|}
block|}
end_class

end_unit

