begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|api
operator|.
name|response
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|api
operator|.
name|Status
import|;
end_import

begin_class
specifier|public
class|class
name|TestStatus
block|{
specifier|private
name|String
name|testHandle
decl_stmt|;
specifier|private
name|Status
name|status
decl_stmt|;
specifier|private
name|long
name|elapsedQueueTime
decl_stmt|;
specifier|private
name|long
name|elapsedExecutionTime
decl_stmt|;
specifier|private
name|long
name|logFileLength
decl_stmt|;
specifier|public
name|TestStatus
parameter_list|(
name|String
name|testHandle
parameter_list|,
name|Status
name|status
parameter_list|,
name|long
name|elapsedQueueTime
parameter_list|,
name|long
name|elapsedExecutionTime
parameter_list|,
name|long
name|logFileLength
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|testHandle
operator|=
name|testHandle
expr_stmt|;
name|this
operator|.
name|status
operator|=
name|status
expr_stmt|;
name|this
operator|.
name|elapsedQueueTime
operator|=
name|elapsedQueueTime
expr_stmt|;
name|this
operator|.
name|elapsedExecutionTime
operator|=
name|elapsedExecutionTime
expr_stmt|;
name|this
operator|.
name|logFileLength
operator|=
name|logFileLength
expr_stmt|;
block|}
specifier|public
name|TestStatus
parameter_list|()
block|{    }
specifier|public
name|String
name|getTestHandle
parameter_list|()
block|{
return|return
name|testHandle
return|;
block|}
specifier|public
name|void
name|setTestHandle
parameter_list|(
name|String
name|testHandle
parameter_list|)
block|{
name|this
operator|.
name|testHandle
operator|=
name|testHandle
expr_stmt|;
block|}
specifier|public
name|Status
name|getStatus
parameter_list|()
block|{
return|return
name|status
return|;
block|}
specifier|public
name|void
name|setStatus
parameter_list|(
name|Status
name|status
parameter_list|)
block|{
name|this
operator|.
name|status
operator|=
name|status
expr_stmt|;
block|}
specifier|public
name|long
name|getElapsedQueueTime
parameter_list|()
block|{
return|return
name|elapsedQueueTime
return|;
block|}
specifier|public
name|void
name|setElapsedQueueTime
parameter_list|(
name|long
name|elapsedQueueTime
parameter_list|)
block|{
name|this
operator|.
name|elapsedQueueTime
operator|=
name|elapsedQueueTime
expr_stmt|;
block|}
specifier|public
name|long
name|getElapsedExecutionTime
parameter_list|()
block|{
return|return
name|elapsedExecutionTime
return|;
block|}
specifier|public
name|void
name|setElapsedExecutionTime
parameter_list|(
name|long
name|elapsedExecutionTime
parameter_list|)
block|{
name|this
operator|.
name|elapsedExecutionTime
operator|=
name|elapsedExecutionTime
expr_stmt|;
block|}
specifier|public
name|long
name|getLogFileLength
parameter_list|()
block|{
return|return
name|logFileLength
return|;
block|}
specifier|public
name|void
name|setLogFileLength
parameter_list|(
name|long
name|logFileLength
parameter_list|)
block|{
name|this
operator|.
name|logFileLength
operator|=
name|logFileLength
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"TestStatus [testHandle="
operator|+
name|testHandle
operator|+
literal|", status="
operator|+
name|status
operator|+
literal|", elapsedQueueTime="
operator|+
name|toMinutes
argument_list|(
name|elapsedQueueTime
argument_list|)
operator|+
literal|" minute(s), elapsedExecutionTime="
operator|+
name|toMinutes
argument_list|(
name|elapsedExecutionTime
argument_list|)
operator|+
literal|" minute(s), logFileLength="
operator|+
name|logFileLength
operator|+
literal|"]"
return|;
block|}
specifier|private
name|long
name|toMinutes
parameter_list|(
name|long
name|value
parameter_list|)
block|{
return|return
name|TimeUnit
operator|.
name|MINUTES
operator|.
name|convert
argument_list|(
name|value
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
return|;
block|}
block|}
end_class

end_unit

