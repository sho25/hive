begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|execution
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_class
specifier|public
class|class
name|Dirs
block|{
specifier|public
specifier|static
name|File
name|createEmpty
parameter_list|(
name|File
name|dir
parameter_list|)
throws|throws
name|IOException
block|{
name|FileUtils
operator|.
name|deleteQuietly
argument_list|(
name|dir
argument_list|)
expr_stmt|;
return|return
name|create
argument_list|(
name|dir
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|File
name|create
parameter_list|(
name|File
name|dir
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|dir
operator|.
name|isDirectory
argument_list|()
condition|)
block|{
return|return
name|dir
return|;
block|}
if|if
condition|(
name|dir
operator|.
name|mkdirs
argument_list|()
condition|)
block|{
return|return
name|dir
return|;
block|}
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Could not create "
operator|+
name|dir
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

