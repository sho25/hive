begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|execution
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|execution
operator|.
name|Dirs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|execution
operator|.
name|context
operator|.
name|ExecutionContextProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|execution
operator|.
name|context
operator|.
name|FixedExecutionContextProvider
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|annotations
operator|.
name|VisibleForTesting
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Throwables
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Maps
import|;
end_import

begin_class
specifier|public
class|class
name|ExecutionContextConfiguration
block|{
specifier|public
specifier|static
specifier|final
name|String
name|WORKING_DIRECTORY
init|=
literal|"workingDirectory"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PROFILE_DIRECTORY
init|=
literal|"profileDirectory"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MAX_LOG_DIRS_PER_PROFILE
init|=
literal|"maxLogDirectoriesPerProfile"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|MAX_RSYNC_THREADS
init|=
literal|"maxRsyncThreads"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|int
name|MAX_RSYNC_THREADS_DEFAULT
init|=
literal|10
decl_stmt|;
specifier|private
specifier|final
name|ExecutionContextProvider
name|mExecutionContextProvider
decl_stmt|;
specifier|private
specifier|final
name|String
name|mWorkingDirectory
decl_stmt|;
specifier|private
specifier|final
name|String
name|mGlobalLogDirectory
decl_stmt|;
specifier|private
specifier|final
name|String
name|mProfileDirectory
decl_stmt|;
specifier|private
specifier|final
name|int
name|mMaxLogDirectoriesPerProfile
decl_stmt|;
specifier|private
specifier|final
name|int
name|mMaxRsyncThreads
decl_stmt|;
annotation|@
name|VisibleForTesting
specifier|public
name|ExecutionContextConfiguration
parameter_list|(
name|Context
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|mWorkingDirectory
operator|=
name|context
operator|.
name|getString
argument_list|(
name|WORKING_DIRECTORY
argument_list|,
literal|""
argument_list|)
operator|.
name|trim
argument_list|()
expr_stmt|;
name|Preconditions
operator|.
name|checkArgument
argument_list|(
operator|!
name|mWorkingDirectory
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|WORKING_DIRECTORY
operator|+
literal|" is required"
argument_list|)
expr_stmt|;
name|mProfileDirectory
operator|=
name|context
operator|.
name|getString
argument_list|(
name|PROFILE_DIRECTORY
argument_list|,
literal|""
argument_list|)
operator|.
name|trim
argument_list|()
expr_stmt|;
name|Preconditions
operator|.
name|checkArgument
argument_list|(
operator|!
name|mProfileDirectory
operator|.
name|isEmpty
argument_list|()
argument_list|,
name|PROFILE_DIRECTORY
operator|+
literal|" is required"
argument_list|)
expr_stmt|;
name|mGlobalLogDirectory
operator|=
name|Dirs
operator|.
name|create
argument_list|(
operator|new
name|File
argument_list|(
name|mWorkingDirectory
argument_list|,
literal|"logs"
argument_list|)
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
expr_stmt|;
name|mMaxLogDirectoriesPerProfile
operator|=
name|context
operator|.
name|getInteger
argument_list|(
name|MAX_LOG_DIRS_PER_PROFILE
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|mMaxRsyncThreads
operator|=
name|context
operator|.
name|getInteger
argument_list|(
name|MAX_RSYNC_THREADS
argument_list|,
name|MAX_RSYNC_THREADS_DEFAULT
argument_list|)
expr_stmt|;
name|String
name|executionContextProviderBuilder
init|=
name|context
operator|.
name|getString
argument_list|(
literal|"executionContextProvider"
argument_list|,
name|FixedExecutionContextProvider
operator|.
name|Builder
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|trim
argument_list|()
decl_stmt|;
try|try
block|{
name|Object
name|builder
init|=
name|Class
operator|.
name|forName
argument_list|(
name|executionContextProviderBuilder
argument_list|)
operator|.
name|newInstance
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|builder
operator|instanceof
name|ExecutionContextProvider
operator|.
name|Builder
operator|)
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"executionContextProvider must be of type "
operator|+
name|ExecutionContextProvider
operator|.
name|Builder
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
throw|;
block|}
name|mExecutionContextProvider
operator|=
operator|(
operator|(
name|ExecutionContextProvider
operator|.
name|Builder
operator|)
name|builder
operator|)
operator|.
name|build
argument_list|(
name|context
argument_list|,
name|mWorkingDirectory
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
name|Throwables
operator|.
name|propagate
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|int
name|getMaxRsyncThreads
parameter_list|()
block|{
return|return
name|mMaxRsyncThreads
return|;
block|}
specifier|public
name|int
name|getMaxLogDirectoriesPerProfile
parameter_list|()
block|{
return|return
name|mMaxLogDirectoriesPerProfile
return|;
block|}
specifier|public
name|String
name|getWorkingDirectory
parameter_list|()
block|{
return|return
name|mWorkingDirectory
return|;
block|}
specifier|public
name|String
name|getGlobalLogDirectory
parameter_list|()
block|{
return|return
name|mGlobalLogDirectory
return|;
block|}
specifier|public
name|String
name|getProfileDirectory
parameter_list|()
block|{
return|return
name|mProfileDirectory
return|;
block|}
specifier|public
name|ExecutionContextProvider
name|getExecutionContextProvider
parameter_list|()
block|{
return|return
name|mExecutionContextProvider
return|;
block|}
specifier|public
specifier|static
name|ExecutionContextConfiguration
name|fromInputStream
parameter_list|(
name|InputStream
name|inputStream
parameter_list|)
throws|throws
name|IOException
block|{
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|properties
operator|.
name|load
argument_list|(
name|inputStream
argument_list|)
expr_stmt|;
name|Context
name|context
init|=
operator|new
name|Context
argument_list|(
name|Maps
operator|.
name|fromProperties
argument_list|(
name|properties
argument_list|)
argument_list|)
decl_stmt|;
return|return
operator|new
name|ExecutionContextConfiguration
argument_list|(
name|context
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|ExecutionContextConfiguration
name|fromFile
parameter_list|(
name|String
name|file
parameter_list|)
throws|throws
name|IOException
block|{
name|InputStream
name|in
init|=
operator|new
name|FileInputStream
argument_list|(
name|file
argument_list|)
decl_stmt|;
try|try
block|{
return|return
name|fromInputStream
argument_list|(
name|in
argument_list|)
return|;
block|}
finally|finally
block|{
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"ExecutionContextConfiguration{"
operator|+
literal|"mExecutionContextProvider="
operator|+
name|mExecutionContextProvider
operator|+
literal|", mWorkingDirectory='"
operator|+
name|mWorkingDirectory
operator|+
literal|'\''
operator|+
literal|", mGlobalLogDirectory='"
operator|+
name|mGlobalLogDirectory
operator|+
literal|'\''
operator|+
literal|", mProfileDirectory='"
operator|+
name|mProfileDirectory
operator|+
literal|'\''
operator|+
literal|", mMaxLogDirectoriesPerProfile="
operator|+
name|mMaxLogDirectoriesPerProfile
operator|+
literal|", mMaxRsyncThreads="
operator|+
name|mMaxRsyncThreads
operator|+
literal|'}'
return|;
block|}
block|}
end_class

end_unit

