begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|execution
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_class
specifier|public
class|class
name|PrepPhase
extends|extends
name|Phase
block|{
specifier|private
specifier|final
name|File
name|mScratchDir
decl_stmt|;
specifier|private
specifier|final
name|File
name|mPatchFile
decl_stmt|;
specifier|public
name|PrepPhase
parameter_list|(
name|ImmutableList
argument_list|<
name|HostExecutor
argument_list|>
name|hostExecutors
parameter_list|,
name|LocalCommandFactory
name|localCommandFactory
parameter_list|,
name|ImmutableMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|templateDefaults
parameter_list|,
name|File
name|scratchDir
parameter_list|,
name|File
name|patchFile
parameter_list|,
name|Logger
name|logger
parameter_list|)
block|{
name|super
argument_list|(
name|hostExecutors
argument_list|,
name|localCommandFactory
argument_list|,
name|templateDefaults
argument_list|,
name|logger
argument_list|)
expr_stmt|;
name|this
operator|.
name|mScratchDir
operator|=
name|scratchDir
expr_stmt|;
name|this
operator|.
name|mPatchFile
operator|=
name|patchFile
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
throws|throws
name|Exception
block|{
name|long
name|prepStart
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|execLocally
argument_list|(
literal|"mkdir -p $workingDir/scratch"
argument_list|)
expr_stmt|;
name|execInstances
argument_list|(
literal|"mkdir -p $localDir/$instanceName/logs $localDir/$instanceName/maven $localDir/$instanceName/scratch"
argument_list|)
expr_stmt|;
name|execInstances
argument_list|(
literal|"mkdir -p $localDir/$instanceName/ivy $localDir/$instanceName/${repositoryName}-source"
argument_list|)
expr_stmt|;
if|if
condition|(
name|mPatchFile
operator|!=
literal|null
condition|)
block|{
name|File
name|smartApplyPatch
init|=
operator|new
name|File
argument_list|(
name|mScratchDir
argument_list|,
literal|"smart-apply-patch.sh"
argument_list|)
decl_stmt|;
name|PrintWriter
name|writer
init|=
operator|new
name|PrintWriter
argument_list|(
name|smartApplyPatch
argument_list|)
decl_stmt|;
try|try
block|{
name|writer
operator|.
name|write
argument_list|(
name|Templates
operator|.
name|readResource
argument_list|(
literal|"smart-apply-patch.sh"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|writer
operator|.
name|checkError
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Error writing to "
operator|+
name|smartApplyPatch
argument_list|)
throw|;
block|}
block|}
finally|finally
block|{
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|execLocally
argument_list|(
literal|"cp -f "
operator|+
name|mPatchFile
operator|.
name|getPath
argument_list|()
operator|+
literal|" $workingDir/scratch/build.patch"
argument_list|)
expr_stmt|;
block|}
name|long
name|start
decl_stmt|;
name|long
name|elapsedTime
decl_stmt|;
comment|// source prep
name|start
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
name|File
name|sourcePrepScript
init|=
operator|new
name|File
argument_list|(
name|mScratchDir
argument_list|,
literal|"source-prep.sh"
argument_list|)
decl_stmt|;
name|Templates
operator|.
name|writeTemplateResult
argument_list|(
literal|"source-prep.vm"
argument_list|,
name|sourcePrepScript
argument_list|,
name|getTemplateDefaults
argument_list|()
argument_list|)
expr_stmt|;
name|execLocally
argument_list|(
literal|"bash "
operator|+
name|sourcePrepScript
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|logger
operator|.
name|debug
argument_list|(
literal|"Deleting "
operator|+
name|sourcePrepScript
operator|+
literal|": "
operator|+
name|sourcePrepScript
operator|.
name|delete
argument_list|()
argument_list|)
expr_stmt|;
name|elapsedTime
operator|=
name|TimeUnit
operator|.
name|MINUTES
operator|.
name|convert
argument_list|(
operator|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
name|start
operator|)
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"PERF: source prep took "
operator|+
name|elapsedTime
operator|+
literal|" minutes"
argument_list|)
expr_stmt|;
comment|// rsync source
name|start
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
name|rsyncFromLocalToRemoteInstances
argument_list|(
literal|"$workingDir/${repositoryName}-source"
argument_list|,
literal|"$localDir/$instanceName/"
argument_list|)
expr_stmt|;
name|elapsedTime
operator|=
name|TimeUnit
operator|.
name|MINUTES
operator|.
name|convert
argument_list|(
operator|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
name|start
operator|)
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"PERF: rsync source took "
operator|+
name|elapsedTime
operator|+
literal|" minutes"
argument_list|)
expr_stmt|;
name|start
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
name|rsyncFromLocalToRemoteInstances
argument_list|(
literal|"$workingDir/maven"
argument_list|,
literal|"$localDir/$instanceName/"
argument_list|)
expr_stmt|;
name|elapsedTime
operator|=
name|TimeUnit
operator|.
name|MINUTES
operator|.
name|convert
argument_list|(
operator|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
name|start
operator|)
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"PERF: rsync maven took "
operator|+
name|elapsedTime
operator|+
literal|" minutes"
argument_list|)
expr_stmt|;
name|start
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
name|rsyncFromLocalToRemoteInstances
argument_list|(
literal|"$workingDir/ivy"
argument_list|,
literal|"$localDir/$instanceName/"
argument_list|)
expr_stmt|;
name|elapsedTime
operator|=
name|TimeUnit
operator|.
name|MINUTES
operator|.
name|convert
argument_list|(
operator|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
name|start
operator|)
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"PERF: rsync ivy took "
operator|+
name|elapsedTime
operator|+
literal|" minutes"
argument_list|)
expr_stmt|;
name|elapsedTime
operator|=
name|TimeUnit
operator|.
name|MINUTES
operator|.
name|convert
argument_list|(
operator|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
name|prepStart
operator|)
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
expr_stmt|;
name|logger
operator|.
name|info
argument_list|(
literal|"PERF: prep phase took "
operator|+
name|elapsedTime
operator|+
literal|" minutes"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

