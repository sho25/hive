begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|api
operator|.
name|server
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|api
operator|.
name|Status
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|api
operator|.
name|request
operator|.
name|TestStartRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|ptest
operator|.
name|api
operator|.
name|response
operator|.
name|TestStatus
import|;
end_import

begin_comment
comment|/**  * Represents a test run in memory on the server.  */
end_comment

begin_class
class|class
name|Test
block|{
specifier|private
name|TestStartRequest
name|startRequest
decl_stmt|;
specifier|private
name|Status
name|status
decl_stmt|;
specifier|private
name|long
name|enqueueTime
decl_stmt|;
specifier|private
name|long
name|dequeueTime
decl_stmt|;
specifier|private
name|long
name|executionStartTime
decl_stmt|;
specifier|private
name|long
name|executionFinishTime
decl_stmt|;
specifier|private
name|File
name|outputFile
decl_stmt|;
specifier|private
name|boolean
name|stopRequested
decl_stmt|;
name|Test
parameter_list|(
name|TestStartRequest
name|startRequest
parameter_list|,
name|Status
name|status
parameter_list|,
name|long
name|enqueueTime
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|startRequest
operator|=
name|startRequest
expr_stmt|;
name|this
operator|.
name|status
operator|=
name|status
expr_stmt|;
name|this
operator|.
name|enqueueTime
operator|=
name|enqueueTime
expr_stmt|;
block|}
name|boolean
name|isStopRequested
parameter_list|()
block|{
return|return
name|stopRequested
return|;
block|}
name|void
name|setStopRequested
parameter_list|(
name|boolean
name|stopRequested
parameter_list|)
block|{
name|this
operator|.
name|stopRequested
operator|=
name|stopRequested
expr_stmt|;
block|}
name|TestStartRequest
name|getStartRequest
parameter_list|()
block|{
return|return
name|startRequest
return|;
block|}
name|void
name|setStartRequest
parameter_list|(
name|TestStartRequest
name|startRequest
parameter_list|)
block|{
name|this
operator|.
name|startRequest
operator|=
name|startRequest
expr_stmt|;
block|}
name|Status
name|getStatus
parameter_list|()
block|{
return|return
name|status
return|;
block|}
name|void
name|setStatus
parameter_list|(
name|Status
name|status
parameter_list|)
block|{
name|this
operator|.
name|status
operator|=
name|status
expr_stmt|;
block|}
name|long
name|getEnqueueTime
parameter_list|()
block|{
return|return
name|enqueueTime
return|;
block|}
name|void
name|setEnqueueTime
parameter_list|(
name|long
name|enqueueTime
parameter_list|)
block|{
name|this
operator|.
name|enqueueTime
operator|=
name|enqueueTime
expr_stmt|;
block|}
name|long
name|getExecutionStartTime
parameter_list|()
block|{
return|return
name|executionStartTime
return|;
block|}
name|void
name|setExecutionStartTime
parameter_list|(
name|long
name|executionStartTime
parameter_list|)
block|{
name|this
operator|.
name|executionStartTime
operator|=
name|executionStartTime
expr_stmt|;
block|}
name|long
name|getExecutionFinishTime
parameter_list|()
block|{
return|return
name|executionFinishTime
return|;
block|}
name|void
name|setExecutionFinishTime
parameter_list|(
name|long
name|executionFinishTime
parameter_list|)
block|{
name|this
operator|.
name|executionFinishTime
operator|=
name|executionFinishTime
expr_stmt|;
block|}
name|File
name|getOutputFile
parameter_list|()
block|{
return|return
name|outputFile
return|;
block|}
name|void
name|setOutputFile
parameter_list|(
name|File
name|outputFile
parameter_list|)
block|{
name|this
operator|.
name|outputFile
operator|=
name|outputFile
expr_stmt|;
block|}
name|long
name|getDequeueTime
parameter_list|()
block|{
return|return
name|dequeueTime
return|;
block|}
name|void
name|setDequeueTime
parameter_list|(
name|long
name|dequeueTime
parameter_list|)
block|{
name|this
operator|.
name|dequeueTime
operator|=
name|dequeueTime
expr_stmt|;
block|}
name|TestStatus
name|toTestStatus
parameter_list|()
block|{
name|long
name|elapsedQueueTime
decl_stmt|;
if|if
condition|(
name|getDequeueTime
argument_list|()
operator|>
literal|0
condition|)
block|{
name|elapsedQueueTime
operator|=
name|getDequeueTime
argument_list|()
operator|-
name|getEnqueueTime
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|elapsedQueueTime
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
name|getEnqueueTime
argument_list|()
expr_stmt|;
block|}
name|long
name|elapsedExecutionTime
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|getExecutionStartTime
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|getExecutionFinishTime
argument_list|()
operator|>
literal|0
condition|)
block|{
name|elapsedExecutionTime
operator|=
name|getExecutionFinishTime
argument_list|()
operator|-
name|getExecutionStartTime
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|elapsedExecutionTime
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
name|getExecutionStartTime
argument_list|()
expr_stmt|;
block|}
block|}
name|long
name|logFileLength
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|getOutputFile
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|logFileLength
operator|=
name|getOutputFile
argument_list|()
operator|.
name|length
argument_list|()
expr_stmt|;
block|}
return|return
operator|new
name|TestStatus
argument_list|(
name|startRequest
operator|.
name|getTestHandle
argument_list|()
argument_list|,
name|getStatus
argument_list|()
argument_list|,
name|elapsedQueueTime
argument_list|,
name|elapsedExecutionTime
argument_list|,
name|logFileLength
argument_list|)
return|;
block|}
block|}
end_class

end_unit

