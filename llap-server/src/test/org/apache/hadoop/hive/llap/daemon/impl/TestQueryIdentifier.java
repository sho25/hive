begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|daemon
operator|.
name|impl
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotEquals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|TestQueryIdentifier
block|{
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|5000
argument_list|)
specifier|public
name|void
name|testEquality
parameter_list|()
block|{
name|String
name|appIdString1
init|=
literal|"app1"
decl_stmt|;
name|String
name|appIdString2
init|=
literal|"app2"
decl_stmt|;
name|int
name|dagId1
init|=
literal|1
decl_stmt|;
name|int
name|dagId2
init|=
literal|2
decl_stmt|;
name|QueryIdentifier
index|[]
name|queryIdentifiers
init|=
operator|new
name|QueryIdentifier
index|[
literal|4
index|]
decl_stmt|;
name|queryIdentifiers
index|[
literal|0
index|]
operator|=
operator|new
name|QueryIdentifier
argument_list|(
name|appIdString1
argument_list|,
name|dagId1
argument_list|)
expr_stmt|;
name|queryIdentifiers
index|[
literal|1
index|]
operator|=
operator|new
name|QueryIdentifier
argument_list|(
name|appIdString1
argument_list|,
name|dagId2
argument_list|)
expr_stmt|;
name|queryIdentifiers
index|[
literal|2
index|]
operator|=
operator|new
name|QueryIdentifier
argument_list|(
name|appIdString2
argument_list|,
name|dagId1
argument_list|)
expr_stmt|;
name|queryIdentifiers
index|[
literal|3
index|]
operator|=
operator|new
name|QueryIdentifier
argument_list|(
name|appIdString2
argument_list|,
name|dagId2
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|4
condition|;
name|i
operator|++
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
literal|4
condition|;
name|j
operator|++
control|)
block|{
if|if
condition|(
name|i
operator|==
name|j
condition|)
block|{
name|assertEquals
argument_list|(
name|queryIdentifiers
index|[
name|i
index|]
argument_list|,
name|queryIdentifiers
index|[
name|j
index|]
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|assertNotEquals
argument_list|(
name|queryIdentifiers
index|[
name|i
index|]
argument_list|,
name|queryIdentifiers
index|[
name|j
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|QueryIdentifier
name|q11
init|=
operator|new
name|QueryIdentifier
argument_list|(
name|appIdString1
argument_list|,
name|dagId1
argument_list|)
decl_stmt|;
name|QueryIdentifier
name|q12
init|=
operator|new
name|QueryIdentifier
argument_list|(
name|appIdString1
argument_list|,
name|dagId2
argument_list|)
decl_stmt|;
name|QueryIdentifier
name|q21
init|=
operator|new
name|QueryIdentifier
argument_list|(
name|appIdString2
argument_list|,
name|dagId1
argument_list|)
decl_stmt|;
name|QueryIdentifier
name|q22
init|=
operator|new
name|QueryIdentifier
argument_list|(
name|appIdString2
argument_list|,
name|dagId2
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|queryIdentifiers
index|[
literal|0
index|]
argument_list|,
name|q11
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|queryIdentifiers
index|[
literal|1
index|]
argument_list|,
name|q12
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|queryIdentifiers
index|[
literal|2
index|]
argument_list|,
name|q21
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|queryIdentifiers
index|[
literal|3
index|]
argument_list|,
name|q22
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

