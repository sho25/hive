begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p/>  * http://www.apache.org/licenses/LICENSE-2.0  *<p/>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|daemon
operator|.
name|impl
operator|.
name|comparator
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|daemon
operator|.
name|impl
operator|.
name|TaskExecutorTestHelpers
operator|.
name|createSubmitWorkRequestProto
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|daemon
operator|.
name|impl
operator|.
name|TaskExecutorTestHelpers
operator|.
name|createTaskWrapper
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|daemon
operator|.
name|LlapDaemonTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|daemon
operator|.
name|impl
operator|.
name|EvictingPriorityBlockingQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|daemon
operator|.
name|impl
operator|.
name|TaskExecutorService
operator|.
name|TaskWrapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|daemon
operator|.
name|rpc
operator|.
name|LlapDaemonProtocolProtos
operator|.
name|SubmitWorkRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|Credentials
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tez
operator|.
name|dag
operator|.
name|records
operator|.
name|TezDAGID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tez
operator|.
name|dag
operator|.
name|records
operator|.
name|TezVertexID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
specifier|public
class|class
name|TestFirstInFirstOutComparator
block|{
specifier|private
name|SubmitWorkRequestProto
name|createRequest
parameter_list|(
name|int
name|fragmentNumber
parameter_list|,
name|int
name|numSelfAndUpstreamTasks
parameter_list|,
name|int
name|dagStartTime
parameter_list|,
name|int
name|attemptStartTime
parameter_list|)
throws|throws
name|IOException
block|{
comment|// Same priority for all tasks.
return|return
name|createRequest
argument_list|(
name|fragmentNumber
argument_list|,
name|numSelfAndUpstreamTasks
argument_list|,
literal|0
argument_list|,
name|dagStartTime
argument_list|,
name|attemptStartTime
argument_list|,
literal|1
argument_list|)
return|;
block|}
specifier|private
name|SubmitWorkRequestProto
name|createRequest
parameter_list|(
name|int
name|fragmentNumber
parameter_list|,
name|int
name|numSelfAndUpstreamTasks
parameter_list|,
name|int
name|numSelfAndUpstreamComplete
parameter_list|,
name|int
name|dagStartTime
parameter_list|,
name|int
name|attemptStartTime
parameter_list|,
name|int
name|withinDagPriority
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|createRequest
argument_list|(
name|fragmentNumber
argument_list|,
name|numSelfAndUpstreamTasks
argument_list|,
name|numSelfAndUpstreamComplete
argument_list|,
name|dagStartTime
argument_list|,
name|attemptStartTime
argument_list|,
name|withinDagPriority
argument_list|,
literal|"MockDag"
argument_list|)
return|;
block|}
specifier|private
name|SubmitWorkRequestProto
name|createRequest
parameter_list|(
name|int
name|fragmentNumber
parameter_list|,
name|int
name|numSelfAndUpstreamTasks
parameter_list|,
name|int
name|numSelfAndUpstreamComplete
parameter_list|,
name|int
name|dagStartTime
parameter_list|,
name|int
name|attemptStartTime
parameter_list|,
name|int
name|withinDagPriority
parameter_list|,
name|String
name|dagName
parameter_list|)
throws|throws
name|IOException
block|{
name|ApplicationId
name|appId
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|9999
argument_list|,
literal|72
argument_list|)
decl_stmt|;
name|TezDAGID
name|dagId
init|=
name|TezDAGID
operator|.
name|getInstance
argument_list|(
name|appId
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|TezVertexID
name|vId
init|=
name|TezVertexID
operator|.
name|getInstance
argument_list|(
name|dagId
argument_list|,
literal|35
argument_list|)
decl_stmt|;
return|return
name|LlapDaemonTestUtils
operator|.
name|buildSubmitProtoRequest
argument_list|(
name|fragmentNumber
argument_list|,
name|appId
operator|.
name|toString
argument_list|()
argument_list|,
name|dagId
operator|.
name|getId
argument_list|()
argument_list|,
name|vId
operator|.
name|getId
argument_list|()
argument_list|,
name|dagName
argument_list|,
name|dagStartTime
argument_list|,
name|attemptStartTime
argument_list|,
name|numSelfAndUpstreamTasks
argument_list|,
name|numSelfAndUpstreamComplete
argument_list|,
name|withinDagPriority
argument_list|,
operator|new
name|Credentials
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|60000
argument_list|)
specifier|public
name|void
name|testWaitQueueComparator
parameter_list|()
throws|throws
name|InterruptedException
throws|,
name|IOException
block|{
name|TaskWrapper
name|r1
init|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|5
argument_list|,
literal|100
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|100000
argument_list|)
decl_stmt|;
name|TaskWrapper
name|r2
init|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
literal|200
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|100000
argument_list|)
decl_stmt|;
name|TaskWrapper
name|r3
init|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|,
literal|3
argument_list|,
literal|300
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|1000000
argument_list|)
decl_stmt|;
name|TaskWrapper
name|r4
init|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|4
argument_list|,
literal|8
argument_list|,
literal|2
argument_list|,
literal|400
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|1000000
argument_list|)
decl_stmt|;
name|TaskWrapper
name|r5
init|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|,
literal|500
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|1000000
argument_list|)
decl_stmt|;
name|EvictingPriorityBlockingQueue
argument_list|<
name|TaskWrapper
argument_list|>
name|queue
init|=
operator|new
name|EvictingPriorityBlockingQueue
argument_list|<>
argument_list|(
operator|new
name|FirstInFirstOutComparator
argument_list|()
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r2
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r3
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r4
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r4
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
comment|// this offer will be accepted and r1 evicted
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|offer
argument_list|(
name|r5
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r5
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r4
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|r1
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|5
argument_list|,
literal|100
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|r2
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
literal|200
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|r3
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|,
literal|3
argument_list|,
literal|300
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|r4
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|4
argument_list|,
literal|8
argument_list|,
literal|2
argument_list|,
literal|400
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|r5
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|,
literal|500
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|queue
operator|=
operator|new
name|EvictingPriorityBlockingQueue
argument_list|<
name|TaskWrapper
argument_list|>
argument_list|(
operator|new
name|FirstInFirstOutComparator
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r2
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r3
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r4
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r4
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
comment|// this offer will be accpeted and r1 evicted
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|offer
argument_list|(
name|r5
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r5
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r4
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|r1
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|5
argument_list|,
literal|100
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|r2
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
literal|4
argument_list|,
literal|200
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|r3
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|,
literal|300
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|r4
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|400
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|r5
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|,
literal|500
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|queue
operator|=
operator|new
name|EvictingPriorityBlockingQueue
argument_list|<
name|TaskWrapper
argument_list|>
argument_list|(
operator|new
name|FirstInFirstOutComparator
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r2
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r3
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r4
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
comment|// offer accepted and r2 gets evicted
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|offer
argument_list|(
name|r5
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r5
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r4
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|r1
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|5
argument_list|,
literal|100
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|r2
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
literal|200
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|r3
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|,
literal|3
argument_list|,
literal|300
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|r4
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|4
argument_list|,
literal|8
argument_list|,
literal|2
argument_list|,
literal|400
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|r5
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|,
literal|500
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|queue
operator|=
operator|new
name|EvictingPriorityBlockingQueue
argument_list|<
name|TaskWrapper
argument_list|>
argument_list|(
operator|new
name|FirstInFirstOutComparator
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r2
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r3
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r4
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
comment|// offer accepted and r2 gets evicted
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|offer
argument_list|(
name|r5
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r5
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r4
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|r1
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|5
argument_list|,
literal|100
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|r2
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
literal|200
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|r3
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|,
literal|3
argument_list|,
literal|300
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|r4
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|4
argument_list|,
literal|8
argument_list|,
literal|2
argument_list|,
literal|400
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|r5
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|,
literal|500
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|queue
operator|=
operator|new
name|EvictingPriorityBlockingQueue
argument_list|<
name|TaskWrapper
argument_list|>
argument_list|(
operator|new
name|FirstInFirstOutComparator
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r2
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r3
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r4
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
comment|// offer accepted and r2 gets evicted
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|offer
argument_list|(
name|r5
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r5
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r4
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|r1
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|5
argument_list|,
literal|100
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|r2
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
literal|200
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|r3
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|,
literal|3
argument_list|,
literal|300
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|r4
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|4
argument_list|,
literal|8
argument_list|,
literal|2
argument_list|,
literal|400
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|r5
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|,
literal|500
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|queue
operator|=
operator|new
name|EvictingPriorityBlockingQueue
argument_list|<
name|TaskWrapper
argument_list|>
argument_list|(
operator|new
name|FirstInFirstOutComparator
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r2
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r3
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r4
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r4
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
comment|// offer accepted, r1 evicted
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|offer
argument_list|(
name|r5
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r5
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r4
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|r1
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|5
argument_list|,
literal|100
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|r2
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
literal|200
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|r3
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|,
literal|3
argument_list|,
literal|300
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|r4
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|4
argument_list|,
literal|8
argument_list|,
literal|2
argument_list|,
literal|400
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|r5
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|,
literal|2
argument_list|,
literal|500
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|queue
operator|=
operator|new
name|EvictingPriorityBlockingQueue
argument_list|<
name|TaskWrapper
argument_list|>
argument_list|(
operator|new
name|FirstInFirstOutComparator
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r2
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r3
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r4
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r4
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
comment|// offer accepted, r1 evicted
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|offer
argument_list|(
name|r5
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r5
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r4
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|60000
argument_list|)
specifier|public
name|void
name|testWaitQueueComparatorCanFinish
parameter_list|()
throws|throws
name|InterruptedException
block|{
comment|// Test that only the fixed property (...ForQueue) is used in order determination, not the dynamic call.
name|TaskWrapper
name|r1
init|=
name|createTaskWrapper
argument_list|(
name|createSubmitWorkRequestProto
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|100
argument_list|,
literal|2
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|,
literal|100000
argument_list|)
decl_stmt|;
name|TaskWrapper
name|r2
init|=
name|createTaskWrapper
argument_list|(
name|createSubmitWorkRequestProto
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|100
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|,
literal|100000
argument_list|)
decl_stmt|;
name|TaskWrapper
name|r3
init|=
name|createTaskWrapper
argument_list|(
name|createSubmitWorkRequestProto
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|100
argument_list|,
literal|5
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|100000
argument_list|)
decl_stmt|;
name|EvictingPriorityBlockingQueue
argument_list|<
name|TaskWrapper
argument_list|>
name|queue
init|=
operator|new
name|EvictingPriorityBlockingQueue
argument_list|<
name|TaskWrapper
argument_list|>
argument_list|(
operator|new
name|FirstInFirstOutComparator
argument_list|()
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r2
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r3
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|60000
argument_list|)
specifier|public
name|void
name|testWaitQueueComparatorWithinDagPriority
parameter_list|()
throws|throws
name|InterruptedException
throws|,
name|IOException
block|{
name|TaskWrapper
name|r1
init|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|10
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|100000
argument_list|)
decl_stmt|;
name|TaskWrapper
name|r2
init|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|1
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|100000
argument_list|)
decl_stmt|;
name|TaskWrapper
name|r3
init|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|5
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|100000
argument_list|)
decl_stmt|;
name|EvictingPriorityBlockingQueue
argument_list|<
name|TaskWrapper
argument_list|>
name|queue
init|=
operator|new
name|EvictingPriorityBlockingQueue
argument_list|<>
argument_list|(
operator|new
name|FirstInFirstOutComparator
argument_list|()
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r2
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r3
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|60000
argument_list|)
specifier|public
name|void
name|testWaitQueueComparatorWithinSameDagPriority
parameter_list|()
throws|throws
name|InterruptedException
throws|,
name|IOException
block|{
name|TaskWrapper
name|r1
init|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|100
argument_list|,
literal|10
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|100000
argument_list|)
decl_stmt|;
name|TaskWrapper
name|r2
init|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|100
argument_list|,
literal|10
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|100000
argument_list|)
decl_stmt|;
name|TaskWrapper
name|r3
init|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|100
argument_list|,
literal|10
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|100000
argument_list|)
decl_stmt|;
name|EvictingPriorityBlockingQueue
argument_list|<
name|TaskWrapper
argument_list|>
name|queue
init|=
operator|new
name|EvictingPriorityBlockingQueue
argument_list|<>
argument_list|(
operator|new
name|ShortestJobFirstComparator
argument_list|()
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r2
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r3
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// can not queue more requests as queue is full
name|TaskWrapper
name|r4
init|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|,
literal|10
argument_list|,
literal|100
argument_list|,
literal|10
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|100000
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|r4
argument_list|,
name|queue
operator|.
name|offer
argument_list|(
name|r4
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|60000
argument_list|)
specifier|public
name|void
name|testWaitQueueComparatorParallelism
parameter_list|()
throws|throws
name|InterruptedException
throws|,
name|IOException
block|{
name|TaskWrapper
name|r1
init|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|1
argument_list|,
literal|10
argument_list|,
literal|3
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|1
argument_list|,
literal|"q1"
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|100000
argument_list|)
decl_stmt|;
name|TaskWrapper
name|r2
init|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|2
argument_list|,
literal|10
argument_list|,
literal|7
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|1
argument_list|,
literal|"q2"
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|100000
argument_list|)
decl_stmt|;
name|TaskWrapper
name|r3
init|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|3
argument_list|,
literal|10
argument_list|,
literal|5
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|1
argument_list|,
literal|"q3"
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|100000
argument_list|)
decl_stmt|;
name|EvictingPriorityBlockingQueue
argument_list|<
name|TaskWrapper
argument_list|>
name|queue
init|=
operator|new
name|EvictingPriorityBlockingQueue
argument_list|<>
argument_list|(
operator|new
name|FirstInFirstOutComparator
argument_list|()
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r1
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r2
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r3
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

