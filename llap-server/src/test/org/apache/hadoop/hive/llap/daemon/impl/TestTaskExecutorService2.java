begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p/>  * http://www.apache.org/licenses/LICENSE-2.0  *<p/>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|daemon
operator|.
name|impl
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|daemon
operator|.
name|FragmentCompletionHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|daemon
operator|.
name|KilledTaskHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|daemon
operator|.
name|impl
operator|.
name|TaskExecutorService
operator|.
name|TaskWrapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|daemon
operator|.
name|rpc
operator|.
name|LlapDaemonProtocolProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|daemon
operator|.
name|rpc
operator|.
name|LlapDaemonProtocolProtos
operator|.
name|EntityDescriptorProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|daemon
operator|.
name|rpc
operator|.
name|LlapDaemonProtocolProtos
operator|.
name|FragmentSpecProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|daemon
operator|.
name|rpc
operator|.
name|LlapDaemonProtocolProtos
operator|.
name|SubmitWorkRequestProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|Credentials
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|api
operator|.
name|records
operator|.
name|ApplicationId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tez
operator|.
name|dag
operator|.
name|records
operator|.
name|TezDAGID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tez
operator|.
name|dag
operator|.
name|records
operator|.
name|TezTaskAttemptID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tez
operator|.
name|dag
operator|.
name|records
operator|.
name|TezTaskID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tez
operator|.
name|dag
operator|.
name|records
operator|.
name|TezVertexID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tez
operator|.
name|runtime
operator|.
name|api
operator|.
name|impl
operator|.
name|ExecutionContextImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tez
operator|.
name|runtime
operator|.
name|task
operator|.
name|EndReason
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tez
operator|.
name|runtime
operator|.
name|task
operator|.
name|TaskRunner2Result
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|TestTaskExecutorService2
block|{
specifier|private
specifier|static
name|Configuration
name|conf
decl_stmt|;
specifier|private
specifier|static
name|Credentials
name|cred
init|=
operator|new
name|Credentials
argument_list|()
decl_stmt|;
specifier|private
specifier|static
class|class
name|MockRequest
extends|extends
name|TaskRunnerCallable
block|{
specifier|private
name|int
name|workTime
decl_stmt|;
specifier|private
name|boolean
name|canFinish
decl_stmt|;
specifier|public
name|MockRequest
parameter_list|(
name|SubmitWorkRequestProto
name|requestProto
parameter_list|,
name|boolean
name|canFinish
parameter_list|,
name|int
name|workTime
parameter_list|)
block|{
name|super
argument_list|(
name|requestProto
argument_list|,
name|mock
argument_list|(
name|QueryFragmentInfo
operator|.
name|class
argument_list|)
argument_list|,
name|conf
argument_list|,
operator|new
name|ExecutionContextImpl
argument_list|(
literal|"localhost"
argument_list|)
argument_list|,
literal|null
argument_list|,
name|cred
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|mock
argument_list|(
name|KilledTaskHandler
operator|.
name|class
argument_list|)
argument_list|,
name|mock
argument_list|(
name|FragmentCompletionHandler
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|workTime
operator|=
name|workTime
expr_stmt|;
name|this
operator|.
name|canFinish
operator|=
name|canFinish
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|TaskRunner2Result
name|callInternal
parameter_list|()
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|super
operator|.
name|getRequestId
argument_list|()
operator|+
literal|" is executing.."
argument_list|)
expr_stmt|;
try|try
block|{
name|Thread
operator|.
name|sleep
argument_list|(
name|workTime
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
return|return
operator|new
name|TaskRunner2Result
argument_list|(
name|EndReason
operator|.
name|KILL_REQUESTED
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
return|;
block|}
return|return
operator|new
name|TaskRunner2Result
argument_list|(
name|EndReason
operator|.
name|SUCCESS
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|canFinish
parameter_list|()
block|{
return|return
name|canFinish
return|;
block|}
block|}
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
block|}
specifier|private
name|SubmitWorkRequestProto
name|createRequest
parameter_list|(
name|int
name|fragmentNumber
parameter_list|,
name|int
name|parallelism
parameter_list|,
name|int
name|dagStartTime
parameter_list|,
name|int
name|attemptStartTime
parameter_list|)
block|{
name|ApplicationId
name|appId
init|=
name|ApplicationId
operator|.
name|newInstance
argument_list|(
literal|9999
argument_list|,
literal|72
argument_list|)
decl_stmt|;
name|TezDAGID
name|dagId
init|=
name|TezDAGID
operator|.
name|getInstance
argument_list|(
name|appId
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|TezVertexID
name|vId
init|=
name|TezVertexID
operator|.
name|getInstance
argument_list|(
name|dagId
argument_list|,
literal|35
argument_list|)
decl_stmt|;
name|TezTaskID
name|tId
init|=
name|TezTaskID
operator|.
name|getInstance
argument_list|(
name|vId
argument_list|,
literal|389
argument_list|)
decl_stmt|;
name|TezTaskAttemptID
name|taId
init|=
name|TezTaskAttemptID
operator|.
name|getInstance
argument_list|(
name|tId
argument_list|,
name|fragmentNumber
argument_list|)
decl_stmt|;
return|return
name|SubmitWorkRequestProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setFragmentSpec
argument_list|(
name|FragmentSpecProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setAttemptNumber
argument_list|(
literal|0
argument_list|)
operator|.
name|setDagName
argument_list|(
literal|"MockDag"
argument_list|)
operator|.
name|setFragmentNumber
argument_list|(
name|fragmentNumber
argument_list|)
operator|.
name|setVertexName
argument_list|(
literal|"MockVertex"
argument_list|)
operator|.
name|setVertexParallelism
argument_list|(
name|parallelism
argument_list|)
operator|.
name|setProcessorDescriptor
argument_list|(
name|EntityDescriptorProto
operator|.
name|newBuilder
argument_list|()
operator|.
name|setClassName
argument_list|(
literal|"MockProcessor"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|setFragmentIdentifierString
argument_list|(
name|taId
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|setAmHost
argument_list|(
literal|"localhost"
argument_list|)
operator|.
name|setAmPort
argument_list|(
literal|12345
argument_list|)
operator|.
name|setAppAttemptNumber
argument_list|(
literal|0
argument_list|)
operator|.
name|setApplicationIdString
argument_list|(
literal|"MockApp_1"
argument_list|)
operator|.
name|setContainerIdString
argument_list|(
literal|"MockContainer_1"
argument_list|)
operator|.
name|setUser
argument_list|(
literal|"MockUser"
argument_list|)
operator|.
name|setTokenIdentifier
argument_list|(
literal|"MockToken_1"
argument_list|)
operator|.
name|setFragmentRuntimeInfo
argument_list|(
name|LlapDaemonProtocolProtos
operator|.
name|FragmentRuntimeInfo
operator|.
name|newBuilder
argument_list|()
operator|.
name|setDagStartTime
argument_list|(
name|dagStartTime
argument_list|)
operator|.
name|setFirstAttemptStartTime
argument_list|(
name|attemptStartTime
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWaitQueueComparator
parameter_list|()
throws|throws
name|InterruptedException
block|{
name|TaskWrapper
name|r1
init|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|5
argument_list|,
literal|100
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|100000
argument_list|)
decl_stmt|;
name|TaskWrapper
name|r2
init|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
literal|200
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|100000
argument_list|)
decl_stmt|;
name|TaskWrapper
name|r3
init|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|,
literal|3
argument_list|,
literal|300
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|1000000
argument_list|)
decl_stmt|;
name|TaskWrapper
name|r4
init|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|4
argument_list|,
literal|8
argument_list|,
literal|2
argument_list|,
literal|400
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|1000000
argument_list|)
decl_stmt|;
name|TaskWrapper
name|r5
init|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|,
literal|500
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|1000000
argument_list|)
decl_stmt|;
name|EvictingPriorityBlockingQueue
argument_list|<
name|TaskWrapper
argument_list|>
name|queue
init|=
operator|new
name|EvictingPriorityBlockingQueue
argument_list|<>
argument_list|(
operator|new
name|TaskExecutorService
operator|.
name|FirstInFirstOutComparator
argument_list|()
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r3
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r4
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r4
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
comment|// this offer will be accepted and r1 evicted
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|offer
argument_list|(
name|r5
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r5
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r4
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|r1
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|5
argument_list|,
literal|100
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|r2
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
literal|200
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|r3
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|,
literal|3
argument_list|,
literal|300
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|r4
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|4
argument_list|,
literal|8
argument_list|,
literal|2
argument_list|,
literal|400
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|r5
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|,
literal|500
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|queue
operator|=
operator|new
name|EvictingPriorityBlockingQueue
argument_list|(
operator|new
name|TaskExecutorService
operator|.
name|FirstInFirstOutComparator
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r3
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r4
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r4
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
comment|// this offer will be accpeted and r1 evicted
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|offer
argument_list|(
name|r5
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r5
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r4
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|r1
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|5
argument_list|,
literal|100
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|r2
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
literal|4
argument_list|,
literal|200
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|r3
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|,
literal|300
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|r4
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|4
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|400
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|r5
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|,
literal|500
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|queue
operator|=
operator|new
name|EvictingPriorityBlockingQueue
argument_list|(
operator|new
name|TaskExecutorService
operator|.
name|FirstInFirstOutComparator
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r3
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r4
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
comment|// offer accepted and r2 gets evicted
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|offer
argument_list|(
name|r5
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r5
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r4
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|r1
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|5
argument_list|,
literal|100
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|r2
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
literal|200
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|r3
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|,
literal|3
argument_list|,
literal|300
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|r4
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|4
argument_list|,
literal|8
argument_list|,
literal|2
argument_list|,
literal|400
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|r5
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|,
literal|500
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|queue
operator|=
operator|new
name|EvictingPriorityBlockingQueue
argument_list|(
operator|new
name|TaskExecutorService
operator|.
name|FirstInFirstOutComparator
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r3
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r4
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
comment|// offer accepted and r2 gets evicted
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|offer
argument_list|(
name|r5
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r5
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r4
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|r1
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|5
argument_list|,
literal|100
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|r2
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
literal|200
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|r3
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|,
literal|3
argument_list|,
literal|300
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|r4
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|4
argument_list|,
literal|8
argument_list|,
literal|2
argument_list|,
literal|400
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|r5
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|,
literal|500
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|queue
operator|=
operator|new
name|EvictingPriorityBlockingQueue
argument_list|(
operator|new
name|TaskExecutorService
operator|.
name|FirstInFirstOutComparator
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r3
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r4
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
comment|// offer accepted and r2 gets evicted
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|offer
argument_list|(
name|r5
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r5
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r4
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|r1
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|5
argument_list|,
literal|100
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|r2
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
literal|200
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|r3
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|,
literal|3
argument_list|,
literal|300
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|r4
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|4
argument_list|,
literal|8
argument_list|,
literal|2
argument_list|,
literal|400
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|r5
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|,
literal|1
argument_list|,
literal|500
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|queue
operator|=
operator|new
name|EvictingPriorityBlockingQueue
argument_list|(
operator|new
name|TaskExecutorService
operator|.
name|FirstInFirstOutComparator
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r3
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r4
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r4
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
comment|// offer accepted, r1 evicted
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|offer
argument_list|(
name|r5
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r5
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r4
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|r1
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|,
literal|5
argument_list|,
literal|100
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|r2
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
literal|200
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|100000
argument_list|)
expr_stmt|;
name|r3
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|,
literal|3
argument_list|,
literal|300
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|r4
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|4
argument_list|,
literal|8
argument_list|,
literal|2
argument_list|,
literal|400
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|r5
operator|=
name|createTaskWrapper
argument_list|(
name|createRequest
argument_list|(
literal|5
argument_list|,
literal|10
argument_list|,
literal|2
argument_list|,
literal|500
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|1000000
argument_list|)
expr_stmt|;
name|queue
operator|=
operator|new
name|EvictingPriorityBlockingQueue
argument_list|(
operator|new
name|TaskExecutorService
operator|.
name|FirstInFirstOutComparator
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r3
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|queue
operator|.
name|offer
argument_list|(
name|r4
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r4
argument_list|,
name|queue
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
comment|// offer accepted, r1 evicted
name|assertEquals
argument_list|(
name|r1
argument_list|,
name|queue
operator|.
name|offer
argument_list|(
name|r5
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r4
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r5
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r3
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|r2
argument_list|,
name|queue
operator|.
name|take
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|TaskWrapper
name|createTaskWrapper
parameter_list|(
name|SubmitWorkRequestProto
name|request
parameter_list|,
name|boolean
name|canFinish
parameter_list|,
name|int
name|workTime
parameter_list|)
block|{
name|MockRequest
name|mockRequest
init|=
operator|new
name|MockRequest
argument_list|(
name|request
argument_list|,
name|canFinish
argument_list|,
name|workTime
argument_list|)
decl_stmt|;
name|TaskWrapper
name|taskWrapper
init|=
operator|new
name|TaskWrapper
argument_list|(
name|mockRequest
argument_list|,
literal|null
argument_list|)
decl_stmt|;
return|return
name|taskWrapper
return|;
block|}
block|}
end_class

end_unit

