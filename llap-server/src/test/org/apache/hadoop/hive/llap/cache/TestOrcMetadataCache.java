begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|cache
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicBoolean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|io
operator|.
name|DataCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|io
operator|.
name|DiskRange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|io
operator|.
name|DiskRangeList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|cache
operator|.
name|LowLevelCache
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|io
operator|.
name|metadata
operator|.
name|MetadataCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|io
operator|.
name|metadata
operator|.
name|MetadataCache
operator|.
name|LlapBufferOrBuffers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|io
operator|.
name|metadata
operator|.
name|MetadataCache
operator|.
name|LlapMetadataBuffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|metrics
operator|.
name|LlapDaemonCacheMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|encoded
operator|.
name|IncompleteCb
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|TestOrcMetadataCache
block|{
specifier|private
specifier|static
class|class
name|DummyCachePolicy
implements|implements
name|LowLevelCachePolicy
block|{
name|int
name|lockCount
init|=
literal|0
decl_stmt|,
name|unlockCount
init|=
literal|0
decl_stmt|;
specifier|public
name|void
name|cache
parameter_list|(
name|LlapCacheableBuffer
name|buffer
parameter_list|,
name|Priority
name|pri
parameter_list|)
block|{
operator|++
name|lockCount
expr_stmt|;
block|}
specifier|public
name|void
name|notifyLock
parameter_list|(
name|LlapCacheableBuffer
name|buffer
parameter_list|)
block|{
operator|++
name|lockCount
expr_stmt|;
block|}
specifier|public
name|void
name|notifyUnlock
parameter_list|(
name|LlapCacheableBuffer
name|buffer
parameter_list|)
block|{
operator|++
name|unlockCount
expr_stmt|;
block|}
specifier|public
name|long
name|evictSomeBlocks
parameter_list|(
name|long
name|memoryToReserve
parameter_list|)
block|{
return|return
name|memoryToReserve
return|;
block|}
specifier|public
name|void
name|setEvictionListener
parameter_list|(
name|EvictionListener
name|listener
parameter_list|)
block|{     }
specifier|public
name|void
name|setParentDebugDumper
parameter_list|(
name|LlapIoDebugDump
name|dumper
parameter_list|)
block|{     }
annotation|@
name|Override
specifier|public
name|long
name|purge
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|void
name|verifyEquals
parameter_list|(
name|int
name|i
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|i
argument_list|,
name|lockCount
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|i
argument_list|,
name|unlockCount
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|debugDumpShort
parameter_list|(
name|StringBuilder
name|sb
parameter_list|)
block|{     }
block|}
specifier|private
specifier|static
class|class
name|DummyMemoryManager
implements|implements
name|MemoryManager
block|{
specifier|private
name|int
name|allocs
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|reserveMemory
parameter_list|(
name|long
name|memoryToReserve
parameter_list|,
name|AtomicBoolean
name|isStopped
parameter_list|)
block|{
operator|++
name|allocs
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|releaseMemory
parameter_list|(
name|long
name|memUsage
parameter_list|)
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|updateMaxSize
parameter_list|(
name|long
name|maxSize
parameter_list|)
block|{     }
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBuffers
parameter_list|()
throws|throws
name|Exception
block|{
name|DummyMemoryManager
name|mm
init|=
operator|new
name|DummyMemoryManager
argument_list|()
decl_stmt|;
name|DummyCachePolicy
name|cp
init|=
operator|new
name|DummyCachePolicy
argument_list|()
decl_stmt|;
specifier|final
name|int
name|MAX_ALLOC
init|=
literal|64
decl_stmt|;
name|LlapDaemonCacheMetrics
name|metrics
init|=
name|LlapDaemonCacheMetrics
operator|.
name|create
argument_list|(
literal|""
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|BuddyAllocator
name|alloc
init|=
operator|new
name|BuddyAllocator
argument_list|(
literal|false
argument_list|,
literal|false
argument_list|,
literal|8
argument_list|,
name|MAX_ALLOC
argument_list|,
literal|1
argument_list|,
literal|4096
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|,
name|mm
argument_list|,
name|metrics
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|MetadataCache
name|cache
init|=
operator|new
name|MetadataCache
argument_list|(
name|alloc
argument_list|,
name|mm
argument_list|,
name|cp
argument_list|,
literal|true
argument_list|,
name|metrics
argument_list|)
decl_stmt|;
name|Object
name|fileKey1
init|=
operator|new
name|Object
argument_list|()
decl_stmt|;
name|Random
name|rdm
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
name|ByteBuffer
name|smallBuffer
init|=
name|ByteBuffer
operator|.
name|allocate
argument_list|(
name|MAX_ALLOC
operator|-
literal|1
argument_list|)
decl_stmt|;
name|rdm
operator|.
name|nextBytes
argument_list|(
name|smallBuffer
operator|.
name|array
argument_list|()
argument_list|)
expr_stmt|;
name|LlapBufferOrBuffers
name|result
init|=
name|cache
operator|.
name|putFileMetadata
argument_list|(
name|fileKey1
argument_list|,
name|smallBuffer
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|cache
operator|.
name|decRefBuffer
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|ByteBuffer
name|cacheBuf
init|=
name|result
operator|.
name|getSingleBuffer
argument_list|()
operator|.
name|getByteBufferDup
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|smallBuffer
argument_list|,
name|cacheBuf
argument_list|)
expr_stmt|;
name|result
operator|=
name|cache
operator|.
name|putFileMetadata
argument_list|(
name|fileKey1
argument_list|,
name|smallBuffer
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|cache
operator|.
name|decRefBuffer
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|cacheBuf
operator|=
name|result
operator|.
name|getSingleBuffer
argument_list|()
operator|.
name|getByteBufferDup
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|smallBuffer
argument_list|,
name|cacheBuf
argument_list|)
expr_stmt|;
name|result
operator|=
name|cache
operator|.
name|getFileMetadata
argument_list|(
name|fileKey1
argument_list|)
expr_stmt|;
name|cacheBuf
operator|=
name|result
operator|.
name|getSingleBuffer
argument_list|()
operator|.
name|getByteBufferDup
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|smallBuffer
argument_list|,
name|cacheBuf
argument_list|)
expr_stmt|;
name|cache
operator|.
name|decRefBuffer
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|cache
operator|.
name|notifyEvicted
argument_list|(
operator|(
name|LlapMetadataBuffer
argument_list|<
name|?
argument_list|>
operator|)
name|result
operator|.
name|getSingleBuffer
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|cache
operator|.
name|getFileMetadata
argument_list|(
name|fileKey1
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|ByteBuffer
name|largeBuffer
init|=
name|ByteBuffer
operator|.
name|allocate
argument_list|(
call|(
name|int
call|)
argument_list|(
name|MAX_ALLOC
operator|*
literal|2.5
argument_list|)
argument_list|)
decl_stmt|;
name|rdm
operator|.
name|nextBytes
argument_list|(
name|largeBuffer
operator|.
name|array
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|cache
operator|.
name|putFileMetadata
argument_list|(
name|fileKey1
argument_list|,
name|largeBuffer
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|cache
operator|.
name|decRefBuffer
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|result
operator|.
name|getSingleBuffer
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|largeBuffer
argument_list|,
name|extractResultBbs
argument_list|(
name|result
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|=
name|cache
operator|.
name|getFileMetadata
argument_list|(
name|fileKey1
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|result
operator|.
name|getSingleBuffer
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|largeBuffer
argument_list|,
name|extractResultBbs
argument_list|(
name|result
argument_list|)
argument_list|)
expr_stmt|;
name|LlapAllocatorBuffer
name|b0
init|=
name|result
operator|.
name|getMultipleLlapBuffers
argument_list|()
index|[
literal|0
index|]
decl_stmt|,
name|b1
init|=
name|result
operator|.
name|getMultipleLlapBuffers
argument_list|()
index|[
literal|1
index|]
decl_stmt|;
name|cache
operator|.
name|decRefBuffer
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|cache
operator|.
name|notifyEvicted
argument_list|(
operator|(
name|LlapMetadataBuffer
argument_list|<
name|?
argument_list|>
operator|)
name|b1
argument_list|)
expr_stmt|;
name|result
operator|=
name|cache
operator|.
name|getFileMetadata
argument_list|(
name|fileKey1
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|b0
operator|.
name|incRef
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
comment|// Should have also been thrown out.
block|}
specifier|public
name|ByteBuffer
name|extractResultBbs
parameter_list|(
name|LlapBufferOrBuffers
name|result
parameter_list|)
block|{
name|int
name|totalLen
init|=
literal|0
decl_stmt|;
for|for
control|(
name|LlapAllocatorBuffer
name|buf
range|:
name|result
operator|.
name|getMultipleLlapBuffers
argument_list|()
control|)
block|{
name|totalLen
operator|+=
name|buf
operator|.
name|getByteBufferRaw
argument_list|()
operator|.
name|remaining
argument_list|()
expr_stmt|;
block|}
name|ByteBuffer
name|combinedBb
init|=
name|ByteBuffer
operator|.
name|allocate
argument_list|(
name|totalLen
argument_list|)
decl_stmt|;
for|for
control|(
name|LlapAllocatorBuffer
name|buf
range|:
name|result
operator|.
name|getMultipleLlapBuffers
argument_list|()
control|)
block|{
name|combinedBb
operator|.
name|put
argument_list|(
name|buf
operator|.
name|getByteBufferDup
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|combinedBb
operator|.
name|flip
argument_list|()
expr_stmt|;
return|return
name|combinedBb
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIncompleteCbs
parameter_list|()
throws|throws
name|Exception
block|{
name|DummyMemoryManager
name|mm
init|=
operator|new
name|DummyMemoryManager
argument_list|()
decl_stmt|;
name|DummyCachePolicy
name|cp
init|=
operator|new
name|DummyCachePolicy
argument_list|()
decl_stmt|;
specifier|final
name|int
name|MAX_ALLOC
init|=
literal|64
decl_stmt|;
name|LlapDaemonCacheMetrics
name|metrics
init|=
name|LlapDaemonCacheMetrics
operator|.
name|create
argument_list|(
literal|""
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|BuddyAllocator
name|alloc
init|=
operator|new
name|BuddyAllocator
argument_list|(
literal|false
argument_list|,
literal|false
argument_list|,
literal|8
argument_list|,
name|MAX_ALLOC
argument_list|,
literal|1
argument_list|,
literal|4096
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|,
name|mm
argument_list|,
name|metrics
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|MetadataCache
name|cache
init|=
operator|new
name|MetadataCache
argument_list|(
name|alloc
argument_list|,
name|mm
argument_list|,
name|cp
argument_list|,
literal|true
argument_list|,
name|metrics
argument_list|)
decl_stmt|;
name|DataCache
operator|.
name|BooleanRef
name|gotAllData
init|=
operator|new
name|DataCache
operator|.
name|BooleanRef
argument_list|()
decl_stmt|;
name|Object
name|fileKey1
init|=
operator|new
name|Object
argument_list|()
decl_stmt|;
comment|// Note: incomplete CBs are always an exact match.
name|cache
operator|.
name|putIncompleteCbs
argument_list|(
name|fileKey1
argument_list|,
operator|new
name|DiskRange
index|[]
block|{
operator|new
name|DiskRangeList
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
block|}
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|cp
operator|.
name|verifyEquals
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|DiskRangeList
name|result
init|=
name|cache
operator|.
name|getIncompleteCbs
argument_list|(
name|fileKey1
argument_list|,
operator|new
name|DiskRangeList
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|,
literal|0
argument_list|,
name|gotAllData
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|gotAllData
operator|.
name|value
argument_list|)
expr_stmt|;
name|verifyResult
argument_list|(
name|result
argument_list|,
name|INCOMPLETE
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|cache
operator|.
name|putIncompleteCbs
argument_list|(
name|fileKey1
argument_list|,
operator|new
name|DiskRange
index|[]
block|{
operator|new
name|DiskRangeList
argument_list|(
literal|5
argument_list|,
literal|6
argument_list|)
block|}
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|cp
operator|.
name|verifyEquals
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|DiskRangeList
name|ranges
init|=
operator|new
name|DiskRangeList
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|ranges
operator|.
name|insertAfter
argument_list|(
operator|new
name|DiskRangeList
argument_list|(
literal|4
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|=
name|cache
operator|.
name|getIncompleteCbs
argument_list|(
name|fileKey1
argument_list|,
name|ranges
argument_list|,
literal|0
argument_list|,
name|gotAllData
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|gotAllData
operator|.
name|value
argument_list|)
expr_stmt|;
name|verifyResult
argument_list|(
name|result
argument_list|,
name|INCOMPLETE
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|,
name|DRL
argument_list|,
literal|4
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|ranges
operator|=
operator|new
name|DiskRangeList
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|ranges
operator|.
name|insertAfter
argument_list|(
operator|new
name|DiskRangeList
argument_list|(
literal|3
argument_list|,
literal|5
argument_list|)
argument_list|)
operator|.
name|insertAfter
argument_list|(
operator|new
name|DiskRangeList
argument_list|(
literal|5
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|=
name|cache
operator|.
name|getIncompleteCbs
argument_list|(
name|fileKey1
argument_list|,
name|ranges
argument_list|,
literal|0
argument_list|,
name|gotAllData
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|gotAllData
operator|.
name|value
argument_list|)
expr_stmt|;
name|verifyResult
argument_list|(
name|result
argument_list|,
name|INCOMPLETE
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|,
name|DRL
argument_list|,
literal|3
argument_list|,
literal|5
argument_list|,
name|INCOMPLETE
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|result
operator|=
name|cache
operator|.
name|getIncompleteCbs
argument_list|(
name|fileKey1
argument_list|,
operator|new
name|DiskRangeList
argument_list|(
literal|5
argument_list|,
literal|6
argument_list|)
argument_list|,
literal|0
argument_list|,
name|gotAllData
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|gotAllData
operator|.
name|value
argument_list|)
expr_stmt|;
name|verifyResult
argument_list|(
name|result
argument_list|,
name|INCOMPLETE
argument_list|,
literal|5
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|result
operator|=
name|cache
operator|.
name|getIncompleteCbs
argument_list|(
name|fileKey1
argument_list|,
operator|new
name|DiskRangeList
argument_list|(
literal|4
argument_list|,
literal|5
argument_list|)
argument_list|,
literal|0
argument_list|,
name|gotAllData
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|gotAllData
operator|.
name|value
argument_list|)
expr_stmt|;
name|verifyResult
argument_list|(
name|result
argument_list|,
name|DRL
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|int
name|INCOMPLETE
init|=
literal|0
decl_stmt|,
name|DRL
init|=
literal|1
decl_stmt|;
specifier|public
name|void
name|verifyResult
parameter_list|(
name|DiskRangeList
name|result
parameter_list|,
name|long
modifier|...
name|vals
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|vals
operator|.
name|length
condition|;
name|i
operator|+=
literal|3
control|)
block|{
switch|switch
condition|(
operator|(
name|int
operator|)
name|vals
index|[
name|i
index|]
condition|)
block|{
case|case
name|INCOMPLETE
case|:
name|assertTrue
argument_list|(
name|result
operator|instanceof
name|IncompleteCb
argument_list|)
expr_stmt|;
break|break;
case|case
name|DRL
case|:
name|assertFalse
argument_list|(
name|result
operator|instanceof
name|IncompleteCb
argument_list|)
expr_stmt|;
break|break;
default|default:
name|fail
argument_list|()
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|vals
index|[
name|i
operator|+
literal|1
index|]
argument_list|,
name|result
operator|.
name|getOffset
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|vals
index|[
name|i
operator|+
literal|2
index|]
argument_list|,
name|result
operator|.
name|getEnd
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|.
name|next
expr_stmt|;
block|}
name|assertNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

