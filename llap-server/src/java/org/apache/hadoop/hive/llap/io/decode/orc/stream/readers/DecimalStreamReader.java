begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|io
operator|.
name|decode
operator|.
name|orc
operator|.
name|stream
operator|.
name|readers
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|DiskRange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|io
operator|.
name|api
operator|.
name|EncodedColumnBatch
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|io
operator|.
name|decode
operator|.
name|orc
operator|.
name|stream
operator|.
name|SettableUncompressedStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|io
operator|.
name|decode
operator|.
name|orc
operator|.
name|stream
operator|.
name|StreamUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|CompressionCodec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|OrcProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|PositionProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|RecordReaderImpl
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_comment
comment|/**  * Stream reader for decimal column type.  */
end_comment

begin_class
specifier|public
class|class
name|DecimalStreamReader
extends|extends
name|RecordReaderImpl
operator|.
name|DecimalTreeReader
block|{
specifier|private
name|boolean
name|_isFileCompressed
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_presentStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_valueStream
decl_stmt|;
specifier|private
name|SettableUncompressedStream
name|_scaleStream
decl_stmt|;
specifier|private
name|DecimalStreamReader
parameter_list|(
name|int
name|columnId
parameter_list|,
name|int
name|precision
parameter_list|,
name|int
name|scale
parameter_list|,
name|SettableUncompressedStream
name|presentStream
parameter_list|,
name|SettableUncompressedStream
name|valueStream
parameter_list|,
name|SettableUncompressedStream
name|scaleStream
parameter_list|,
name|boolean
name|isFileCompressed
parameter_list|,
name|OrcProto
operator|.
name|ColumnEncoding
name|encoding
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|columnId
argument_list|,
name|precision
argument_list|,
name|scale
argument_list|,
name|presentStream
argument_list|,
name|valueStream
argument_list|,
name|scaleStream
argument_list|,
name|encoding
argument_list|)
expr_stmt|;
name|this
operator|.
name|_isFileCompressed
operator|=
name|isFileCompressed
expr_stmt|;
name|this
operator|.
name|_presentStream
operator|=
name|presentStream
expr_stmt|;
name|this
operator|.
name|_valueStream
operator|=
name|valueStream
expr_stmt|;
name|this
operator|.
name|_scaleStream
operator|=
name|scaleStream
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|seek
parameter_list|(
name|PositionProvider
name|index
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|present
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|present
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
comment|// data stream could be empty stream or already reached end of stream before present stream.
comment|// This can happen if all values in stream are nulls or last row group values are all null.
if|if
condition|(
name|_valueStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|value
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_scaleStream
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|_isFileCompressed
condition|)
block|{
name|index
operator|.
name|getNext
argument_list|()
expr_stmt|;
block|}
name|scaleReader
operator|.
name|seek
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|setBuffers
parameter_list|(
name|EncodedColumnBatch
operator|.
name|StreamBuffer
name|presentStreamBuffer
parameter_list|,
name|EncodedColumnBatch
operator|.
name|StreamBuffer
name|valueStreamBuffer
parameter_list|,
name|EncodedColumnBatch
operator|.
name|StreamBuffer
name|scaleStreamBuffer
parameter_list|)
block|{
name|long
name|length
decl_stmt|;
if|if
condition|(
name|_presentStream
operator|!=
literal|null
condition|)
block|{
name|List
argument_list|<
name|DiskRange
argument_list|>
name|presentDiskRanges
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|length
operator|=
name|StreamUtils
operator|.
name|createDiskRanges
argument_list|(
name|presentStreamBuffer
argument_list|,
name|presentDiskRanges
argument_list|)
expr_stmt|;
name|_presentStream
operator|.
name|setBuffers
argument_list|(
name|presentDiskRanges
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_valueStream
operator|!=
literal|null
condition|)
block|{
name|List
argument_list|<
name|DiskRange
argument_list|>
name|valueDiskRanges
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|length
operator|=
name|StreamUtils
operator|.
name|createDiskRanges
argument_list|(
name|valueStreamBuffer
argument_list|,
name|valueDiskRanges
argument_list|)
expr_stmt|;
name|_valueStream
operator|.
name|setBuffers
argument_list|(
name|valueDiskRanges
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|_scaleStream
operator|!=
literal|null
condition|)
block|{
name|List
argument_list|<
name|DiskRange
argument_list|>
name|scaleDiskRanges
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|length
operator|=
name|StreamUtils
operator|.
name|createDiskRanges
argument_list|(
name|scaleStreamBuffer
argument_list|,
name|scaleDiskRanges
argument_list|)
expr_stmt|;
name|_scaleStream
operator|.
name|setBuffers
argument_list|(
name|scaleDiskRanges
argument_list|,
name|length
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|StreamReaderBuilder
block|{
specifier|private
name|Long
name|fileId
decl_stmt|;
specifier|private
name|int
name|columnIndex
decl_stmt|;
specifier|private
name|EncodedColumnBatch
operator|.
name|StreamBuffer
name|presentStream
decl_stmt|;
specifier|private
name|EncodedColumnBatch
operator|.
name|StreamBuffer
name|valueStream
decl_stmt|;
specifier|private
name|EncodedColumnBatch
operator|.
name|StreamBuffer
name|scaleStream
decl_stmt|;
specifier|private
name|int
name|scale
decl_stmt|;
specifier|private
name|int
name|precision
decl_stmt|;
specifier|private
name|CompressionCodec
name|compressionCodec
decl_stmt|;
specifier|private
name|OrcProto
operator|.
name|ColumnEncoding
name|columnEncoding
decl_stmt|;
specifier|public
name|StreamReaderBuilder
name|setFileId
parameter_list|(
name|Long
name|fileId
parameter_list|)
block|{
name|this
operator|.
name|fileId
operator|=
name|fileId
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnIndex
parameter_list|(
name|int
name|columnIndex
parameter_list|)
block|{
name|this
operator|.
name|columnIndex
operator|=
name|columnIndex
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setPrecision
parameter_list|(
name|int
name|precision
parameter_list|)
block|{
name|this
operator|.
name|precision
operator|=
name|precision
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setScale
parameter_list|(
name|int
name|scale
parameter_list|)
block|{
name|this
operator|.
name|scale
operator|=
name|scale
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setPresentStream
parameter_list|(
name|EncodedColumnBatch
operator|.
name|StreamBuffer
name|presentStream
parameter_list|)
block|{
name|this
operator|.
name|presentStream
operator|=
name|presentStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setValueStream
parameter_list|(
name|EncodedColumnBatch
operator|.
name|StreamBuffer
name|valueStream
parameter_list|)
block|{
name|this
operator|.
name|valueStream
operator|=
name|valueStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setScaleStream
parameter_list|(
name|EncodedColumnBatch
operator|.
name|StreamBuffer
name|scaleStream
parameter_list|)
block|{
name|this
operator|.
name|scaleStream
operator|=
name|scaleStream
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setCompressionCodec
parameter_list|(
name|CompressionCodec
name|compressionCodec
parameter_list|)
block|{
name|this
operator|.
name|compressionCodec
operator|=
name|compressionCodec
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|StreamReaderBuilder
name|setColumnEncoding
parameter_list|(
name|OrcProto
operator|.
name|ColumnEncoding
name|encoding
parameter_list|)
block|{
name|this
operator|.
name|columnEncoding
operator|=
name|encoding
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|DecimalStreamReader
name|build
parameter_list|()
throws|throws
name|IOException
block|{
name|SettableUncompressedStream
name|presentInStream
init|=
name|StreamUtils
operator|.
name|createLlapInStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|PRESENT
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|presentStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|valueInStream
init|=
name|StreamUtils
operator|.
name|createLlapInStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|DATA
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|valueStream
argument_list|)
decl_stmt|;
name|SettableUncompressedStream
name|scaleInStream
init|=
name|StreamUtils
operator|.
name|createLlapInStream
argument_list|(
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
operator|.
name|SECONDARY
operator|.
name|name
argument_list|()
argument_list|,
name|fileId
argument_list|,
name|scaleStream
argument_list|)
decl_stmt|;
name|boolean
name|isFileCompressed
init|=
name|compressionCodec
operator|!=
literal|null
decl_stmt|;
return|return
operator|new
name|DecimalStreamReader
argument_list|(
name|columnIndex
argument_list|,
name|precision
argument_list|,
name|scale
argument_list|,
name|presentInStream
argument_list|,
name|valueInStream
argument_list|,
name|scaleInStream
argument_list|,
name|isFileCompressed
argument_list|,
name|columnEncoding
argument_list|)
return|;
block|}
block|}
specifier|public
specifier|static
name|StreamReaderBuilder
name|builder
parameter_list|()
block|{
return|return
operator|new
name|StreamReaderBuilder
argument_list|()
return|;
block|}
block|}
end_class

end_unit

