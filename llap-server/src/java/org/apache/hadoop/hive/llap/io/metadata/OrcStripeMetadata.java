begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|io
operator|.
name|metadata
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|annotations
operator|.
name|VisibleForTesting
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|encoded
operator|.
name|OrcBatchKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|OrcProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|OrcProto
operator|.
name|RowIndexEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|StripeInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|impl
operator|.
name|OrcIndex
import|;
end_import

begin_class
specifier|public
class|class
name|OrcStripeMetadata
implements|implements
name|ConsumerStripeMetadata
block|{
specifier|private
specifier|final
name|OrcBatchKey
name|stripeKey
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|OrcProto
operator|.
name|ColumnEncoding
argument_list|>
name|encodings
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|OrcProto
operator|.
name|Stream
argument_list|>
name|streams
decl_stmt|;
specifier|private
specifier|final
name|String
name|writerTimezone
decl_stmt|;
specifier|private
specifier|final
name|long
name|rowCount
decl_stmt|;
specifier|private
name|OrcIndex
name|rowIndex
decl_stmt|;
specifier|public
name|OrcStripeMetadata
parameter_list|(
name|OrcBatchKey
name|stripeKey
parameter_list|,
name|OrcProto
operator|.
name|StripeFooter
name|footer
parameter_list|,
name|OrcIndex
name|orcIndex
parameter_list|,
name|StripeInformation
name|stripe
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|stripeKey
operator|=
name|stripeKey
expr_stmt|;
name|streams
operator|=
name|footer
operator|.
name|getStreamsList
argument_list|()
expr_stmt|;
name|encodings
operator|=
name|footer
operator|.
name|getColumnsList
argument_list|()
expr_stmt|;
name|writerTimezone
operator|=
name|footer
operator|.
name|getWriterTimezone
argument_list|()
expr_stmt|;
name|rowCount
operator|=
name|stripe
operator|.
name|getNumberOfRows
argument_list|()
expr_stmt|;
name|rowIndex
operator|=
name|orcIndex
expr_stmt|;
block|}
specifier|public
name|int
name|getStripeIx
parameter_list|()
block|{
return|return
name|stripeKey
operator|.
name|stripeIx
return|;
block|}
specifier|public
name|OrcProto
operator|.
name|RowIndex
index|[]
name|getRowIndexes
parameter_list|()
block|{
return|return
name|rowIndex
operator|.
name|getRowGroupIndex
argument_list|()
return|;
block|}
specifier|public
name|OrcProto
operator|.
name|Stream
operator|.
name|Kind
index|[]
name|getBloomFilterKinds
parameter_list|()
block|{
return|return
name|rowIndex
operator|.
name|getBloomFilterKinds
argument_list|()
return|;
block|}
specifier|public
name|OrcProto
operator|.
name|BloomFilterIndex
index|[]
name|getBloomFilterIndexes
parameter_list|()
block|{
return|return
name|rowIndex
operator|.
name|getBloomFilterIndex
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|OrcProto
operator|.
name|ColumnEncoding
argument_list|>
name|getEncodings
parameter_list|()
block|{
return|return
name|encodings
return|;
block|}
specifier|public
name|List
argument_list|<
name|OrcProto
operator|.
name|Stream
argument_list|>
name|getStreams
parameter_list|()
block|{
return|return
name|streams
return|;
block|}
specifier|public
name|String
name|getWriterTimezone
parameter_list|()
block|{
return|return
name|writerTimezone
return|;
block|}
specifier|public
name|OrcBatchKey
name|getKey
parameter_list|()
block|{
return|return
name|stripeKey
return|;
block|}
specifier|public
name|long
name|getRowCount
parameter_list|()
block|{
return|return
name|rowCount
return|;
block|}
annotation|@
name|VisibleForTesting
specifier|public
name|void
name|resetRowIndex
parameter_list|()
block|{
name|rowIndex
operator|=
literal|null
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|RowIndexEntry
name|getRowIndexEntry
parameter_list|(
name|int
name|colIx
parameter_list|,
name|int
name|rgIx
parameter_list|)
block|{
return|return
name|rowIndex
operator|.
name|getRowGroupIndex
argument_list|()
index|[
name|colIx
index|]
operator|.
name|getEntry
argument_list|(
name|rgIx
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|supportsRowIndexes
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|OrcIndex
name|getIndex
parameter_list|()
block|{
return|return
name|rowIndex
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"OrcStripeMetadata [stripeKey="
operator|+
name|stripeKey
operator|+
literal|", rowCount="
operator|+
name|rowCount
operator|+
literal|", writerTimezone="
operator|+
name|writerTimezone
operator|+
literal|", encodings="
operator|+
name|encodings
operator|+
literal|", streams="
operator|+
name|streams
operator|+
literal|", rowIndex="
operator|+
name|rowIndex
operator|+
literal|"]"
return|;
block|}
block|}
end_class

end_unit

