begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|old
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|old
operator|.
name|BufferPool
operator|.
name|WeakBuffer
import|;
end_import

begin_interface
specifier|public
interface|interface
name|CachePolicy
block|{
specifier|public
specifier|static
specifier|final
name|WeakBuffer
name|CANNOT_EVICT
init|=
name|BufferPool
operator|.
name|allocateFake
argument_list|()
decl_stmt|;
comment|/**    * @param buffer Buffer to cache.    * @return Evicted buffer. All buffers are of the same size currently, so it is one or none.    *         It can also be CANNOT_EVICT fake buffer, if we cannot evict and thus cache.    */
name|WeakBuffer
name|cache
parameter_list|(
name|WeakBuffer
name|buffer
parameter_list|)
function_decl|;
name|void
name|notifyLock
parameter_list|(
name|WeakBuffer
name|buffer
parameter_list|)
function_decl|;
name|void
name|notifyUnlock
parameter_list|(
name|WeakBuffer
name|buffer
parameter_list|)
function_decl|;
block|}
end_interface

end_unit

