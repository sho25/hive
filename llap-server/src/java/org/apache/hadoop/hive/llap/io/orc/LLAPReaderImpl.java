begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *   Copyright 2014 Prasanth Jayachandran  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|io
operator|.
name|orc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|io
operator|.
name|metadata
operator|.
name|CompressionBuffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|CompressionKind
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|OrcFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|OrcProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|ReaderImpl
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
specifier|public
class|class
name|LLAPReaderImpl
extends|extends
name|ReaderImpl
implements|implements
name|Reader
block|{
specifier|public
name|LLAPReaderImpl
parameter_list|(
name|Path
name|path
parameter_list|,
name|OrcFile
operator|.
name|ReaderOptions
name|options
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|path
argument_list|,
name|options
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|RecordReader
name|rows
parameter_list|()
throws|throws
name|IOException
block|{
name|Reader
operator|.
name|Options
name|options
init|=
operator|new
name|Options
argument_list|()
decl_stmt|;
name|boolean
index|[]
name|include
init|=
name|options
operator|.
name|getInclude
argument_list|()
decl_stmt|;
comment|// if included columns is null, then include all columns
if|if
condition|(
name|include
operator|==
literal|null
condition|)
block|{
name|include
operator|=
operator|new
name|boolean
index|[
name|footer
operator|.
name|getTypesCount
argument_list|()
index|]
expr_stmt|;
name|Arrays
operator|.
name|fill
argument_list|(
name|include
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|options
operator|.
name|include
argument_list|(
name|include
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|LLAPRecordReaderImpl
argument_list|(
name|this
operator|.
name|getStripes
argument_list|()
argument_list|,
name|fileSystem
argument_list|,
name|path
argument_list|,
name|options
argument_list|,
name|footer
operator|.
name|getTypesList
argument_list|()
argument_list|,
name|codec
argument_list|,
name|bufferSize
argument_list|,
name|footer
operator|.
name|getRowIndexStride
argument_list|()
argument_list|,
name|conf
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|RecordReader
name|rows
parameter_list|(
name|CompressionBuffer
name|buffer
parameter_list|,
name|CompressionKind
name|kind
parameter_list|,
name|OrcProto
operator|.
name|ColumnEncoding
name|encoding
parameter_list|)
throws|throws
name|IOException
block|{
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

