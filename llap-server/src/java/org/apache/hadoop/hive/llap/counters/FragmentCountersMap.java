begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  * http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|counters
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tez
operator|.
name|common
operator|.
name|counters
operator|.
name|TezCounters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Maintains references to tez counters  */
end_comment

begin_class
specifier|public
class|class
name|FragmentCountersMap
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|FragmentCountersMap
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|ConcurrentMap
argument_list|<
name|String
argument_list|,
name|TezCounters
argument_list|>
name|perFragmentCounters
init|=
operator|new
name|ConcurrentHashMap
argument_list|<>
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|void
name|registerCountersForFragment
parameter_list|(
name|String
name|identifier
parameter_list|,
name|TezCounters
name|tezCounters
parameter_list|)
block|{
if|if
condition|(
name|perFragmentCounters
operator|.
name|putIfAbsent
argument_list|(
name|identifier
argument_list|,
name|tezCounters
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Not registering duplicate counters for fragment with tez identifier string="
operator|+
name|identifier
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|TezCounters
name|getCountersForFragment
parameter_list|(
name|String
name|identifier
parameter_list|)
block|{
return|return
name|perFragmentCounters
operator|.
name|get
argument_list|(
name|identifier
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|void
name|unregisterCountersForFragment
parameter_list|(
name|String
name|identifier
parameter_list|)
block|{
name|perFragmentCounters
operator|.
name|remove
argument_list|(
name|identifier
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

