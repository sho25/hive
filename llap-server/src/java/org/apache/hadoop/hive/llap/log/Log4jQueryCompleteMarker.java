begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|log
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|Marker
import|;
end_import

begin_class
specifier|public
class|class
name|Log4jQueryCompleteMarker
implements|implements
name|Marker
block|{
specifier|public
specifier|static
specifier|final
name|String
name|EOF_MARKER
init|=
literal|"EOF_MARKER"
decl_stmt|;
annotation|@
name|Override
specifier|public
name|Marker
name|addParents
parameter_list|(
name|Marker
modifier|...
name|markers
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|EOF_MARKER
return|;
block|}
annotation|@
name|Override
specifier|public
name|Marker
index|[]
name|getParents
parameter_list|()
block|{
return|return
operator|new
name|Marker
index|[
literal|0
index|]
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|hasParents
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isInstanceOf
parameter_list|(
name|Marker
name|m
parameter_list|)
block|{
if|if
condition|(
name|m
operator|!=
literal|null
operator|&&
name|this
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|m
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
else|else
block|{
return|return
literal|false
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isInstanceOf
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|remove
parameter_list|(
name|Marker
name|marker
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|Marker
name|setParents
parameter_list|(
name|Marker
modifier|...
name|markers
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

