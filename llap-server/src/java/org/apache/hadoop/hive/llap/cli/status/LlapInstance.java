begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|cli
operator|.
name|status
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|builder
operator|.
name|ToStringBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|builder
operator|.
name|ToStringStyle
import|;
end_import

begin_comment
comment|/**  * Representing the state of an Llap instance monitored.  */
end_comment

begin_class
class|class
name|LlapInstance
block|{
specifier|private
specifier|final
name|String
name|hostname
decl_stmt|;
specifier|private
specifier|final
name|String
name|containerId
decl_stmt|;
specifier|private
name|String
name|logUrl
decl_stmt|;
comment|// Only for live instances.
specifier|private
name|String
name|statusUrl
decl_stmt|;
specifier|private
name|String
name|webUrl
decl_stmt|;
specifier|private
name|Integer
name|rpcPort
decl_stmt|;
specifier|private
name|Integer
name|mgmtPort
decl_stmt|;
specifier|private
name|Integer
name|shufflePort
decl_stmt|;
comment|// For completed instances
specifier|private
name|String
name|diagnostics
decl_stmt|;
specifier|private
name|int
name|yarnContainerExitStatus
decl_stmt|;
comment|// TODO HIVE-13454 Add additional information such as #executors, container size, etc
name|LlapInstance
parameter_list|(
name|String
name|hostname
parameter_list|,
name|String
name|containerId
parameter_list|)
block|{
name|this
operator|.
name|hostname
operator|=
name|hostname
expr_stmt|;
name|this
operator|.
name|containerId
operator|=
name|containerId
expr_stmt|;
block|}
name|LlapInstance
name|setLogUrl
parameter_list|(
name|String
name|logUrl
parameter_list|)
block|{
name|this
operator|.
name|logUrl
operator|=
name|logUrl
expr_stmt|;
return|return
name|this
return|;
block|}
name|LlapInstance
name|setStatusUrl
parameter_list|(
name|String
name|statusUrl
parameter_list|)
block|{
name|this
operator|.
name|statusUrl
operator|=
name|statusUrl
expr_stmt|;
return|return
name|this
return|;
block|}
name|LlapInstance
name|setWebUrl
parameter_list|(
name|String
name|webUrl
parameter_list|)
block|{
name|this
operator|.
name|webUrl
operator|=
name|webUrl
expr_stmt|;
return|return
name|this
return|;
block|}
name|LlapInstance
name|setRpcPort
parameter_list|(
name|int
name|rpcPort
parameter_list|)
block|{
name|this
operator|.
name|rpcPort
operator|=
name|rpcPort
expr_stmt|;
return|return
name|this
return|;
block|}
name|LlapInstance
name|setMgmtPort
parameter_list|(
name|int
name|mgmtPort
parameter_list|)
block|{
name|this
operator|.
name|mgmtPort
operator|=
name|mgmtPort
expr_stmt|;
return|return
name|this
return|;
block|}
name|LlapInstance
name|setShufflePort
parameter_list|(
name|int
name|shufflePort
parameter_list|)
block|{
name|this
operator|.
name|shufflePort
operator|=
name|shufflePort
expr_stmt|;
return|return
name|this
return|;
block|}
name|LlapInstance
name|setDiagnostics
parameter_list|(
name|String
name|diagnostics
parameter_list|)
block|{
name|this
operator|.
name|diagnostics
operator|=
name|diagnostics
expr_stmt|;
return|return
name|this
return|;
block|}
name|LlapInstance
name|setYarnContainerExitStatus
parameter_list|(
name|int
name|yarnContainerExitStatus
parameter_list|)
block|{
name|this
operator|.
name|yarnContainerExitStatus
operator|=
name|yarnContainerExitStatus
expr_stmt|;
return|return
name|this
return|;
block|}
name|String
name|getHostname
parameter_list|()
block|{
return|return
name|hostname
return|;
block|}
name|String
name|getContainerId
parameter_list|()
block|{
return|return
name|containerId
return|;
block|}
name|String
name|getLogUrl
parameter_list|()
block|{
return|return
name|logUrl
return|;
block|}
name|String
name|getStatusUrl
parameter_list|()
block|{
return|return
name|statusUrl
return|;
block|}
name|String
name|getWebUrl
parameter_list|()
block|{
return|return
name|webUrl
return|;
block|}
name|Integer
name|getRpcPort
parameter_list|()
block|{
return|return
name|rpcPort
return|;
block|}
name|Integer
name|getMgmtPort
parameter_list|()
block|{
return|return
name|mgmtPort
return|;
block|}
name|Integer
name|getShufflePort
parameter_list|()
block|{
return|return
name|shufflePort
return|;
block|}
name|String
name|getDiagnostics
parameter_list|()
block|{
return|return
name|diagnostics
return|;
block|}
name|int
name|getYarnContainerExitStatus
parameter_list|()
block|{
return|return
name|yarnContainerExitStatus
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|ToStringBuilder
operator|.
name|reflectionToString
argument_list|(
name|this
argument_list|,
name|ToStringStyle
operator|.
name|SHORT_PREFIX_STYLE
argument_list|)
return|;
block|}
block|}
end_class

end_unit

