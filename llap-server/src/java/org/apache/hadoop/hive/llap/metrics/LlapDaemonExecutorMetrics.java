begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|metrics
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|metrics
operator|.
name|LlapDaemonExecutorInfo
operator|.
name|EXECUTOR_NUM_QUEUED_REQUESTS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|metrics
operator|.
name|LlapDaemonExecutorInfo
operator|.
name|EXECUTOR_TOTAL_ASKED_TO_DIE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|metrics
operator|.
name|LlapDaemonExecutorInfo
operator|.
name|EXECUTOR_TOTAL_EXECUTION_FAILURE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|metrics
operator|.
name|LlapDaemonExecutorInfo
operator|.
name|EXECUTOR_TOTAL_INTERRUPTED
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|metrics
operator|.
name|LlapDaemonExecutorInfo
operator|.
name|EXECUTOR_TOTAL_REQUESTS_HANDLED
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|metrics
operator|.
name|LlapDaemonExecutorInfo
operator|.
name|EXECUTOR_TOTAL_SUCCESS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|metrics
operator|.
name|LlapDaemonExecutorInfo
operator|.
name|LLAP_DAEMON_EXECUTOR_METRICS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|impl
operator|.
name|MsInfo
operator|.
name|ProcessName
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|impl
operator|.
name|MsInfo
operator|.
name|SessionId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsCollector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsRecordBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|annotation
operator|.
name|Metric
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|annotation
operator|.
name|Metrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MetricsRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableCounterLong
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|source
operator|.
name|JvmMetrics
import|;
end_import

begin_comment
comment|/**  * Metrics about the llap daemon executors.  */
end_comment

begin_class
annotation|@
name|Metrics
argument_list|(
name|about
operator|=
literal|"LlapDaemon Executor Metrics"
argument_list|,
name|context
operator|=
literal|"llap"
argument_list|)
specifier|public
class|class
name|LlapDaemonExecutorMetrics
implements|implements
name|MetricsSource
block|{
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
specifier|private
specifier|final
name|JvmMetrics
name|jvmMetrics
decl_stmt|;
specifier|private
specifier|final
name|String
name|sessionId
decl_stmt|;
specifier|private
specifier|final
name|MetricsRegistry
name|registry
decl_stmt|;
specifier|private
specifier|final
name|int
name|numExecutors
decl_stmt|;
annotation|@
name|Metric
name|MutableCounterLong
index|[]
name|executorThreadCpuTime
decl_stmt|;
annotation|@
name|Metric
name|MutableCounterLong
index|[]
name|executorThreadUserTime
decl_stmt|;
annotation|@
name|Metric
name|MutableCounterLong
index|[]
name|executorThreadSystemTime
decl_stmt|;
annotation|@
name|Metric
name|MutableCounterLong
name|executorTotalRequestHandled
decl_stmt|;
annotation|@
name|Metric
name|MutableCounterLong
name|executorNumQueuedRequests
decl_stmt|;
annotation|@
name|Metric
name|MutableCounterLong
name|executorTotalSuccess
decl_stmt|;
annotation|@
name|Metric
name|MutableCounterLong
name|executorTotalInterrupted
decl_stmt|;
annotation|@
name|Metric
name|MutableCounterLong
name|executorTotalExecutionFailed
decl_stmt|;
annotation|@
name|Metric
name|MutableCounterLong
name|executorTotalAskedToDie
decl_stmt|;
specifier|private
name|LlapDaemonExecutorMetrics
parameter_list|(
name|String
name|displayName
parameter_list|,
name|JvmMetrics
name|jm
parameter_list|,
name|String
name|sessionId
parameter_list|,
name|int
name|numExecutors
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|displayName
expr_stmt|;
name|this
operator|.
name|jvmMetrics
operator|=
name|jm
expr_stmt|;
name|this
operator|.
name|sessionId
operator|=
name|sessionId
expr_stmt|;
name|this
operator|.
name|registry
operator|=
operator|new
name|MetricsRegistry
argument_list|(
literal|"LlapDaemonExecutorRegistry"
argument_list|)
expr_stmt|;
name|this
operator|.
name|numExecutors
operator|=
name|numExecutors
expr_stmt|;
name|this
operator|.
name|executorThreadCpuTime
operator|=
operator|new
name|MutableCounterLong
index|[
name|numExecutors
index|]
expr_stmt|;
name|this
operator|.
name|executorThreadUserTime
operator|=
operator|new
name|MutableCounterLong
index|[
name|numExecutors
index|]
expr_stmt|;
name|this
operator|.
name|executorThreadSystemTime
operator|=
operator|new
name|MutableCounterLong
index|[
name|numExecutors
index|]
expr_stmt|;
block|}
specifier|public
specifier|static
name|LlapDaemonExecutorMetrics
name|create
parameter_list|(
name|String
name|displayName
parameter_list|,
name|String
name|sessionId
parameter_list|,
name|int
name|numExecutors
parameter_list|)
block|{
name|MetricsSystem
name|ms
init|=
name|LlapMetricsSystem
operator|.
name|instance
argument_list|()
decl_stmt|;
name|JvmMetrics
name|jm
init|=
name|JvmMetrics
operator|.
name|create
argument_list|(
literal|"LlapDaemon"
argument_list|,
name|sessionId
argument_list|,
name|ms
argument_list|)
decl_stmt|;
return|return
name|ms
operator|.
name|register
argument_list|(
name|displayName
argument_list|,
literal|"LlapDaemon Executor Metrics"
argument_list|,
operator|new
name|LlapDaemonExecutorMetrics
argument_list|(
name|displayName
argument_list|,
name|jm
argument_list|,
name|sessionId
argument_list|,
name|numExecutors
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|getMetrics
parameter_list|(
name|MetricsCollector
name|collector
parameter_list|,
name|boolean
name|b
parameter_list|)
block|{
name|MetricsRecordBuilder
name|rb
init|=
name|collector
operator|.
name|addRecord
argument_list|(
name|LLAP_DAEMON_EXECUTOR_METRICS
argument_list|)
operator|.
name|setContext
argument_list|(
literal|"llap"
argument_list|)
operator|.
name|tag
argument_list|(
name|ProcessName
argument_list|,
literal|"LlapDaemon"
argument_list|)
operator|.
name|tag
argument_list|(
name|SessionId
argument_list|,
name|sessionId
argument_list|)
decl_stmt|;
name|getExecutorStats
argument_list|(
name|rb
argument_list|)
expr_stmt|;
block|}
comment|// Assumption here is threadId is from 0 to numExecutors - 1
specifier|public
name|void
name|incrExecutorThreadCpuTime
parameter_list|(
name|int
name|threadId
parameter_list|,
name|int
name|delta
parameter_list|)
block|{
name|executorThreadCpuTime
index|[
name|threadId
index|]
operator|.
name|incr
argument_list|(
name|delta
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|incrExecutorThreadUserTime
parameter_list|(
name|int
name|threadId
parameter_list|,
name|int
name|delta
parameter_list|)
block|{
name|executorThreadUserTime
index|[
name|threadId
index|]
operator|.
name|incr
argument_list|(
name|delta
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|incrExecutorThreadSystemTime
parameter_list|(
name|int
name|threadId
parameter_list|,
name|int
name|delta
parameter_list|)
block|{
name|executorThreadSystemTime
index|[
name|threadId
index|]
operator|.
name|incr
argument_list|(
name|delta
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|incrExecutorTotalRequestsHandled
parameter_list|()
block|{
name|executorTotalRequestHandled
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|incrExecutorNumQueuedRequests
parameter_list|()
block|{
name|executorNumQueuedRequests
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|decrExecutorNumQueuedRequests
parameter_list|()
block|{
name|executorNumQueuedRequests
operator|.
name|incr
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|incrExecutorTotalSuccess
parameter_list|()
block|{
name|executorTotalSuccess
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|incrExecutorTotalExecutionFailed
parameter_list|()
block|{
name|executorTotalExecutionFailed
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|incrExecutorTotalInterrupted
parameter_list|()
block|{
name|executorTotalInterrupted
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|incrExecutorTotalAskedToDie
parameter_list|()
block|{
name|executorTotalAskedToDie
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|getExecutorStats
parameter_list|(
name|MetricsRecordBuilder
name|rb
parameter_list|)
block|{
comment|// TODO: Enable this after adding InstrumentedThreadPool executor
comment|//    for (int i = 0; i< numExecutors; i++) {
comment|//      rb.addCounter(EXECUTOR_THREAD_CPU_TIME, executorThreadCpuTime[i].value())
comment|//          .addCounter(EXECUTOR_THREAD_USER_TIME, executorThreadUserTime[i].value())
comment|//          .addCounter(EXECUTOR_THREAD_SYSTEM_TIME, executorThreadSystemTime[i].value());
comment|//    }
name|rb
operator|.
name|addCounter
argument_list|(
name|EXECUTOR_TOTAL_REQUESTS_HANDLED
argument_list|,
name|executorTotalRequestHandled
operator|.
name|value
argument_list|()
argument_list|)
operator|.
name|addCounter
argument_list|(
name|EXECUTOR_NUM_QUEUED_REQUESTS
argument_list|,
name|executorNumQueuedRequests
operator|.
name|value
argument_list|()
argument_list|)
operator|.
name|addCounter
argument_list|(
name|EXECUTOR_TOTAL_SUCCESS
argument_list|,
name|executorTotalSuccess
operator|.
name|value
argument_list|()
argument_list|)
operator|.
name|addCounter
argument_list|(
name|EXECUTOR_TOTAL_EXECUTION_FAILURE
argument_list|,
name|executorTotalExecutionFailed
operator|.
name|value
argument_list|()
argument_list|)
operator|.
name|addCounter
argument_list|(
name|EXECUTOR_TOTAL_INTERRUPTED
argument_list|,
name|executorTotalInterrupted
operator|.
name|value
argument_list|()
argument_list|)
operator|.
name|addCounter
argument_list|(
name|EXECUTOR_TOTAL_ASKED_TO_DIE
argument_list|,
name|executorTotalAskedToDie
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|JvmMetrics
name|getJvmMetrics
parameter_list|()
block|{
return|return
name|jvmMetrics
return|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
block|}
end_class

end_unit

