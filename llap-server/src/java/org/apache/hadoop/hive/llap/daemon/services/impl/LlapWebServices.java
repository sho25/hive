begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|daemon
operator|.
name|services
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|configuration
operator|.
name|LlapConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|service
operator|.
name|AbstractService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|WebApp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|webapp
operator|.
name|WebApps
import|;
end_import

begin_class
specifier|public
class|class
name|LlapWebServices
extends|extends
name|AbstractService
block|{
specifier|private
name|int
name|port
decl_stmt|;
specifier|private
name|boolean
name|ssl
decl_stmt|;
specifier|private
name|Configuration
name|conf
decl_stmt|;
specifier|private
name|WebApp
name|webApp
decl_stmt|;
specifier|private
name|LlapWebApp
name|webAppInstance
decl_stmt|;
specifier|public
name|LlapWebServices
parameter_list|()
block|{
name|super
argument_list|(
literal|"LlapWebServices"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|serviceInit
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|this
operator|.
name|conf
operator|=
operator|new
name|Configuration
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|this
operator|.
name|conf
operator|.
name|addResource
argument_list|(
name|YarnConfiguration
operator|.
name|YARN_SITE_CONFIGURATION_FILE
argument_list|)
expr_stmt|;
name|this
operator|.
name|port
operator|=
name|conf
operator|.
name|getInt
argument_list|(
name|LlapConfiguration
operator|.
name|LLAP_DAEMON_SERVICE_PORT
argument_list|,
name|LlapConfiguration
operator|.
name|LLAP_DAEMON_SERVICE_PORT_DEFAULT
argument_list|)
expr_stmt|;
name|this
operator|.
name|ssl
operator|=
name|conf
operator|.
name|getBoolean
argument_list|(
name|LlapConfiguration
operator|.
name|LLAP_DAEMON_SERVICE_SSL
argument_list|,
name|LlapConfiguration
operator|.
name|LLAP_DAEMON_SERVICE_SSL_DEFAULT
argument_list|)
expr_stmt|;
name|this
operator|.
name|webAppInstance
operator|=
operator|new
name|LlapWebApp
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|serviceStart
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|bindAddress
init|=
literal|"0.0.0.0"
decl_stmt|;
name|this
operator|.
name|webApp
operator|=
name|WebApps
operator|.
name|$for
argument_list|(
literal|"llap"
argument_list|)
operator|.
name|at
argument_list|(
name|bindAddress
argument_list|)
operator|.
name|at
argument_list|(
name|port
argument_list|)
operator|.
name|with
argument_list|(
name|getConfig
argument_list|()
argument_list|)
comment|/* TODO: security negotiation here */
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|serviceStop
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|this
operator|.
name|webApp
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|webApp
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

