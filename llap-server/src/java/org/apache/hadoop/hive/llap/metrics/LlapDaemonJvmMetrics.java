begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|metrics
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|metrics
operator|.
name|LlapDaemonJvmInfo
operator|.
name|LlapDaemonDirectBufferCount
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|metrics
operator|.
name|LlapDaemonJvmInfo
operator|.
name|LlapDaemonDirectBufferMemoryUsed
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|metrics
operator|.
name|LlapDaemonJvmInfo
operator|.
name|LlapDaemonDirectBufferTotalCapacity
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|metrics
operator|.
name|LlapDaemonJvmInfo
operator|.
name|LlapDaemonJVMMetrics
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|metrics
operator|.
name|LlapDaemonJvmInfo
operator|.
name|LlapDaemonMappedBufferCount
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|metrics
operator|.
name|LlapDaemonJvmInfo
operator|.
name|LlapDaemonMappedBufferMemoryUsed
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|metrics
operator|.
name|LlapDaemonJvmInfo
operator|.
name|LlapDaemonMappedBufferTotalCapacity
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|metrics
operator|.
name|LlapDaemonJvmInfo
operator|.
name|LlapDaemonMaxFileDescriptorCount
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|metrics
operator|.
name|LlapDaemonJvmInfo
operator|.
name|LlapDaemonOpenFileDescriptorCount
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|metrics
operator|.
name|LlapDaemonJvmInfo
operator|.
name|LlapDaemonResidentSetSize
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|metrics
operator|.
name|LlapDaemonJvmInfo
operator|.
name|LlapDaemonVirtualMemorySize
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|impl
operator|.
name|MsInfo
operator|.
name|ProcessName
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|impl
operator|.
name|MsInfo
operator|.
name|SessionId
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|management
operator|.
name|BufferPoolMXBean
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|management
operator|.
name|ManagementFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|management
operator|.
name|OperatingSystemMXBean
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|LlapDaemonInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|daemon
operator|.
name|impl
operator|.
name|LlapDaemon
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsCollector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsRecordBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|annotation
operator|.
name|Metrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MetricsRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|conf
operator|.
name|YarnConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|yarn
operator|.
name|util
operator|.
name|ResourceCalculatorProcessTree
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|management
operator|.
name|UnixOperatingSystemMXBean
import|;
end_import

begin_comment
comment|/**  * Class to report LLAP Daemon's JVM metrics to the hadoop metrics2 API.  */
end_comment

begin_class
annotation|@
name|Metrics
argument_list|(
name|about
operator|=
literal|"LlapDaemon JVM Metrics"
argument_list|,
name|context
operator|=
literal|"jvm"
argument_list|)
specifier|public
class|class
name|LlapDaemonJvmMetrics
implements|implements
name|MetricsSource
block|{
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
specifier|private
specifier|final
name|String
name|sessionId
decl_stmt|;
specifier|private
specifier|final
name|MetricsRegistry
name|registry
decl_stmt|;
specifier|private
specifier|final
name|ResourceCalculatorProcessTree
name|processTree
decl_stmt|;
specifier|private
specifier|final
name|String
name|daemonPid
init|=
name|LlapDaemonInfo
operator|.
name|INSTANCE
operator|.
name|getPID
argument_list|()
decl_stmt|;
specifier|private
name|LlapDaemonJvmMetrics
parameter_list|(
name|String
name|displayName
parameter_list|,
name|String
name|sessionId
parameter_list|,
specifier|final
name|Configuration
name|conf
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|displayName
expr_stmt|;
name|this
operator|.
name|sessionId
operator|=
name|sessionId
expr_stmt|;
name|Class
argument_list|<
name|?
extends|extends
name|ResourceCalculatorProcessTree
argument_list|>
name|clazz
init|=
name|conf
operator|.
name|getClass
argument_list|(
name|YarnConfiguration
operator|.
name|NM_CONTAINER_MON_PROCESS_TREE
argument_list|,
literal|null
argument_list|,
name|ResourceCalculatorProcessTree
operator|.
name|class
argument_list|)
decl_stmt|;
name|this
operator|.
name|processTree
operator|=
name|ResourceCalculatorProcessTree
operator|.
name|getResourceCalculatorProcessTree
argument_list|(
literal|""
operator|+
name|daemonPid
argument_list|,
name|clazz
argument_list|,
name|conf
argument_list|)
expr_stmt|;
if|if
condition|(
name|processTree
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|processTree
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|registry
operator|=
operator|new
name|MetricsRegistry
argument_list|(
literal|"LlapDaemonJvmRegistry"
argument_list|)
expr_stmt|;
name|this
operator|.
name|registry
operator|.
name|tag
argument_list|(
name|ProcessName
argument_list|,
name|MetricsUtils
operator|.
name|METRICS_PROCESS_NAME
argument_list|)
operator|.
name|tag
argument_list|(
name|SessionId
argument_list|,
name|sessionId
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|LlapDaemonJvmMetrics
name|create
parameter_list|(
name|String
name|displayName
parameter_list|,
name|String
name|sessionId
parameter_list|,
specifier|final
name|Configuration
name|conf
parameter_list|)
block|{
name|MetricsSystem
name|ms
init|=
name|LlapMetricsSystem
operator|.
name|instance
argument_list|()
decl_stmt|;
return|return
name|ms
operator|.
name|register
argument_list|(
name|displayName
argument_list|,
literal|"LlapDaemon JVM Metrics"
argument_list|,
operator|new
name|LlapDaemonJvmMetrics
argument_list|(
name|displayName
argument_list|,
name|sessionId
argument_list|,
name|conf
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|getMetrics
parameter_list|(
name|MetricsCollector
name|collector
parameter_list|,
name|boolean
name|b
parameter_list|)
block|{
name|MetricsRecordBuilder
name|rb
init|=
name|collector
operator|.
name|addRecord
argument_list|(
name|LlapDaemonJVMMetrics
argument_list|)
operator|.
name|setContext
argument_list|(
literal|"jvm"
argument_list|)
operator|.
name|tag
argument_list|(
name|ProcessName
argument_list|,
name|MetricsUtils
operator|.
name|METRICS_PROCESS_NAME
operator|+
literal|"(PID: "
operator|+
name|daemonPid
operator|+
literal|")"
argument_list|)
operator|.
name|tag
argument_list|(
name|SessionId
argument_list|,
name|sessionId
argument_list|)
decl_stmt|;
name|getJvmMetrics
argument_list|(
name|rb
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|getJvmMetrics
parameter_list|(
specifier|final
name|MetricsRecordBuilder
name|rb
parameter_list|)
block|{
name|List
argument_list|<
name|BufferPoolMXBean
argument_list|>
name|pools
init|=
name|ManagementFactory
operator|.
name|getPlatformMXBeans
argument_list|(
name|BufferPoolMXBean
operator|.
name|class
argument_list|)
decl_stmt|;
name|long
name|directBufferCount
init|=
literal|0
decl_stmt|;
name|long
name|directBufferTotalCapacity
init|=
literal|0
decl_stmt|;
name|long
name|directBufferMemoryUsed
init|=
literal|0
decl_stmt|;
name|long
name|mappedBufferCount
init|=
literal|0
decl_stmt|;
name|long
name|mappedBufferTotalCapacity
init|=
literal|0
decl_stmt|;
name|long
name|mappedBufferMemoryUsed
init|=
literal|0
decl_stmt|;
for|for
control|(
name|BufferPoolMXBean
name|pool
range|:
name|pools
control|)
block|{
if|if
condition|(
name|pool
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"direct"
argument_list|)
condition|)
block|{
name|directBufferCount
operator|=
name|pool
operator|.
name|getCount
argument_list|()
expr_stmt|;
name|directBufferTotalCapacity
operator|=
name|pool
operator|.
name|getTotalCapacity
argument_list|()
expr_stmt|;
name|directBufferMemoryUsed
operator|=
name|pool
operator|.
name|getMemoryUsed
argument_list|()
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|pool
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"mapped"
argument_list|)
condition|)
block|{
name|mappedBufferCount
operator|=
name|pool
operator|.
name|getCount
argument_list|()
expr_stmt|;
name|mappedBufferTotalCapacity
operator|=
name|pool
operator|.
name|getTotalCapacity
argument_list|()
expr_stmt|;
name|mappedBufferMemoryUsed
operator|=
name|pool
operator|.
name|getMemoryUsed
argument_list|()
expr_stmt|;
block|}
block|}
name|OperatingSystemMXBean
name|os
init|=
name|ManagementFactory
operator|.
name|getOperatingSystemMXBean
argument_list|()
decl_stmt|;
name|long
name|openFileHandles
init|=
literal|0
decl_stmt|;
name|long
name|maxFileHandles
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|os
operator|instanceof
name|UnixOperatingSystemMXBean
condition|)
block|{
name|openFileHandles
operator|=
operator|(
operator|(
name|UnixOperatingSystemMXBean
operator|)
name|os
operator|)
operator|.
name|getOpenFileDescriptorCount
argument_list|()
expr_stmt|;
name|maxFileHandles
operator|=
operator|(
operator|(
name|UnixOperatingSystemMXBean
operator|)
name|os
operator|)
operator|.
name|getMaxFileDescriptorCount
argument_list|()
expr_stmt|;
block|}
name|long
name|rss
init|=
literal|0
decl_stmt|;
name|long
name|vmem
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|processTree
operator|!=
literal|null
condition|)
block|{
name|rss
operator|=
name|processTree
operator|.
name|getRssMemorySize
argument_list|()
expr_stmt|;
name|vmem
operator|=
name|processTree
operator|.
name|getVirtualMemorySize
argument_list|()
expr_stmt|;
block|}
name|rb
operator|.
name|addGauge
argument_list|(
name|LlapDaemonDirectBufferCount
argument_list|,
name|directBufferCount
argument_list|)
operator|.
name|addGauge
argument_list|(
name|LlapDaemonDirectBufferTotalCapacity
argument_list|,
name|directBufferTotalCapacity
argument_list|)
operator|.
name|addGauge
argument_list|(
name|LlapDaemonDirectBufferMemoryUsed
argument_list|,
name|directBufferMemoryUsed
argument_list|)
operator|.
name|addGauge
argument_list|(
name|LlapDaemonMappedBufferCount
argument_list|,
name|mappedBufferCount
argument_list|)
operator|.
name|addGauge
argument_list|(
name|LlapDaemonMappedBufferTotalCapacity
argument_list|,
name|mappedBufferTotalCapacity
argument_list|)
operator|.
name|addGauge
argument_list|(
name|LlapDaemonMappedBufferMemoryUsed
argument_list|,
name|mappedBufferMemoryUsed
argument_list|)
operator|.
name|addGauge
argument_list|(
name|LlapDaemonOpenFileDescriptorCount
argument_list|,
name|openFileHandles
argument_list|)
operator|.
name|addGauge
argument_list|(
name|LlapDaemonMaxFileDescriptorCount
argument_list|,
name|maxFileHandles
argument_list|)
operator|.
name|addGauge
argument_list|(
name|LlapDaemonResidentSetSize
argument_list|,
name|rss
argument_list|)
operator|.
name|addGauge
argument_list|(
name|LlapDaemonVirtualMemorySize
argument_list|,
name|vmem
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
block|}
end_class

end_unit

