begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|cli
operator|.
name|status
package|;
end_package

begin_comment
comment|/**  * Enumeration of the potential outcomes of the Llap state checking.  */
end_comment

begin_enum
specifier|public
enum|enum
name|ExitCode
block|{
name|SUCCESS
argument_list|(
literal|0
argument_list|)
block|,
name|INCORRECT_USAGE
argument_list|(
literal|10
argument_list|)
block|,
name|YARN_ERROR
argument_list|(
literal|20
argument_list|)
block|,
name|SERVICE_CLIENT_ERROR_CREATE_FAILED
argument_list|(
literal|30
argument_list|)
block|,
name|SERVICE_CLIENT_ERROR_OTHER
argument_list|(
literal|31
argument_list|)
block|,
name|LLAP_REGISTRY_ERROR
argument_list|(
literal|40
argument_list|)
block|,
name|LLAP_JSON_GENERATION_ERROR
argument_list|(
literal|50
argument_list|)
block|,
comment|// Error in the script itself - likely caused by an incompatible change, or new functionality / states added.
name|INTERNAL_ERROR
argument_list|(
literal|100
argument_list|)
block|;
specifier|private
specifier|final
name|int
name|code
decl_stmt|;
name|ExitCode
parameter_list|(
name|int
name|code
parameter_list|)
block|{
name|this
operator|.
name|code
operator|=
name|code
expr_stmt|;
block|}
specifier|public
name|int
name|getCode
parameter_list|()
block|{
return|return
name|code
return|;
block|}
block|}
end_enum

end_unit

