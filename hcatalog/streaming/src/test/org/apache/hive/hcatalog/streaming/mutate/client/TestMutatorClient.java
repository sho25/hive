begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
operator|.
name|client
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|anyString
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|IMetaStoreClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|StorageDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|OrcOutputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|TransactionBatch
operator|.
name|TxnState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
operator|.
name|client
operator|.
name|lock
operator|.
name|Lock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
operator|.
name|client
operator|.
name|lock
operator|.
name|LockFailureListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|TException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|runners
operator|.
name|MockitoJUnitRunner
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|MockitoJUnitRunner
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestMutatorClient
block|{
specifier|private
specifier|static
specifier|final
name|long
name|TRANSACTION_ID
init|=
literal|42L
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TABLE_NAME_1
init|=
literal|"TABLE_1"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TABLE_NAME_2
init|=
literal|"TABLE_2"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DB_NAME
init|=
literal|"DB_1"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|USER
init|=
literal|"user"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|AcidTable
name|TABLE_1
init|=
operator|new
name|AcidTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME_1
argument_list|,
literal|true
argument_list|,
name|TableType
operator|.
name|SINK
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|AcidTable
name|TABLE_2
init|=
operator|new
name|AcidTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME_2
argument_list|,
literal|true
argument_list|,
name|TableType
operator|.
name|SINK
argument_list|)
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|IMetaStoreClient
name|mockMetaStoreClient
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|Lock
name|mockLock
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|Table
name|mockTable1
decl_stmt|,
name|mockTable2
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|StorageDescriptor
name|mockSd
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|mockParameters
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|HiveConf
name|mockConfiguration
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|LockFailureListener
name|mockLockFailureListener
decl_stmt|;
specifier|private
name|MutatorClient
name|client
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|configureMocks
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|mockMetaStoreClient
operator|.
name|getTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME_1
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockTable1
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockTable1
operator|.
name|getDbName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DB_NAME
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockTable1
operator|.
name|getTableName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|TABLE_NAME_1
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockTable1
operator|.
name|getSd
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockSd
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockTable1
operator|.
name|getParameters
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockParameters
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockMetaStoreClient
operator|.
name|getTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME_2
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockTable2
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockTable2
operator|.
name|getDbName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DB_NAME
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockTable2
operator|.
name|getTableName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|TABLE_NAME_2
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockTable2
operator|.
name|getSd
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockSd
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockTable2
operator|.
name|getParameters
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockParameters
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockSd
operator|.
name|getNumBuckets
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockSd
operator|.
name|getOutputFormat
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|OrcOutputFormat
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockParameters
operator|.
name|get
argument_list|(
literal|"transactional"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Boolean
operator|.
name|TRUE
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockMetaStoreClient
operator|.
name|openTxn
argument_list|(
name|USER
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|TRANSACTION_ID
argument_list|)
expr_stmt|;
name|client
operator|=
operator|new
name|MutatorClient
argument_list|(
name|mockMetaStoreClient
argument_list|,
name|mockConfiguration
argument_list|,
name|mockLockFailureListener
argument_list|,
name|USER
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|TABLE_1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCheckValidTableConnect
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|AcidTable
argument_list|>
name|inTables
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|inTables
operator|.
name|add
argument_list|(
name|TABLE_1
argument_list|)
expr_stmt|;
name|inTables
operator|.
name|add
argument_list|(
name|TABLE_2
argument_list|)
expr_stmt|;
name|client
operator|=
operator|new
name|MutatorClient
argument_list|(
name|mockMetaStoreClient
argument_list|,
name|mockConfiguration
argument_list|,
name|mockLockFailureListener
argument_list|,
name|USER
argument_list|,
name|inTables
argument_list|)
expr_stmt|;
name|client
operator|.
name|connect
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|AcidTable
argument_list|>
name|outTables
init|=
name|client
operator|.
name|getTables
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|isConnected
argument_list|()
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|outTables
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|outTables
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getDatabaseName
argument_list|()
argument_list|,
name|is
argument_list|(
name|DB_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|outTables
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTableName
argument_list|()
argument_list|,
name|is
argument_list|(
name|TABLE_NAME_1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|outTables
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTotalBuckets
argument_list|()
argument_list|,
name|is
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|outTables
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getOutputFormatName
argument_list|()
argument_list|,
name|is
argument_list|(
name|OrcOutputFormat
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|outTables
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTransactionId
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|outTables
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTable
argument_list|()
argument_list|,
name|is
argument_list|(
name|mockTable1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|outTables
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getDatabaseName
argument_list|()
argument_list|,
name|is
argument_list|(
name|DB_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|outTables
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getTableName
argument_list|()
argument_list|,
name|is
argument_list|(
name|TABLE_NAME_2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|outTables
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getTotalBuckets
argument_list|()
argument_list|,
name|is
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|outTables
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getOutputFormatName
argument_list|()
argument_list|,
name|is
argument_list|(
name|OrcOutputFormat
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|outTables
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getTransactionId
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|outTables
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getTable
argument_list|()
argument_list|,
name|is
argument_list|(
name|mockTable2
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCheckNonTransactionalTableConnect
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|mockParameters
operator|.
name|get
argument_list|(
literal|"transactional"
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Boolean
operator|.
name|FALSE
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|connect
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ConnectionException
name|e
parameter_list|)
block|{     }
name|assertThat
argument_list|(
name|client
operator|.
name|isConnected
argument_list|()
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCheckUnBucketedTableConnect
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|mockSd
operator|.
name|getNumBuckets
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|0
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|connect
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ConnectionException
name|e
parameter_list|)
block|{     }
name|assertThat
argument_list|(
name|client
operator|.
name|isConnected
argument_list|()
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMetaStoreFailsOnConnect
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|mockMetaStoreClient
operator|.
name|getTable
argument_list|(
name|anyString
argument_list|()
argument_list|,
name|anyString
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenThrow
argument_list|(
operator|new
name|TException
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|connect
argument_list|()
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ConnectionException
name|e
parameter_list|)
block|{     }
name|assertThat
argument_list|(
name|client
operator|.
name|isConnected
argument_list|()
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|ConnectionException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetDestinationsFailsIfNotConnected
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|getTables
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNewTransaction
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|AcidTable
argument_list|>
name|inTables
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|inTables
operator|.
name|add
argument_list|(
name|TABLE_1
argument_list|)
expr_stmt|;
name|inTables
operator|.
name|add
argument_list|(
name|TABLE_2
argument_list|)
expr_stmt|;
name|client
operator|=
operator|new
name|MutatorClient
argument_list|(
name|mockMetaStoreClient
argument_list|,
name|mockConfiguration
argument_list|,
name|mockLockFailureListener
argument_list|,
name|USER
argument_list|,
name|inTables
argument_list|)
expr_stmt|;
name|client
operator|.
name|connect
argument_list|()
expr_stmt|;
name|Transaction
name|transaction
init|=
name|client
operator|.
name|newTransaction
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AcidTable
argument_list|>
name|outTables
init|=
name|client
operator|.
name|getTables
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|isConnected
argument_list|()
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|transaction
operator|.
name|getTransactionId
argument_list|()
argument_list|,
name|is
argument_list|(
name|TRANSACTION_ID
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|transaction
operator|.
name|getState
argument_list|()
argument_list|,
name|is
argument_list|(
name|TxnState
operator|.
name|INACTIVE
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|outTables
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTransactionId
argument_list|()
argument_list|,
name|is
argument_list|(
name|TRANSACTION_ID
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|outTables
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getTransactionId
argument_list|()
argument_list|,
name|is
argument_list|(
name|TRANSACTION_ID
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCloseClosesClient
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|client
operator|.
name|isConnected
argument_list|()
argument_list|,
name|is
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMetaStoreClient
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

