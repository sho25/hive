begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
operator|.
name|client
operator|.
name|lock
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|LockState
operator|.
name|ABORT
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|LockState
operator|.
name|ACQUIRED
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|LockState
operator|.
name|NOT_ACQUIRED
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|LockState
operator|.
name|WAITING
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|anyInt
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|anyLong
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|eq
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doThrow
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verifyNoMoreInteractions
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verifyZeroInteractions
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|IMetaStoreClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|DataOperationType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|LockComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|LockLevel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|LockRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|LockResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|LockType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|NoSuchLockException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|NoSuchTxnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|TxnAbortedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|TException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|ArgumentCaptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Captor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|runners
operator|.
name|MockitoJUnitRunner
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|MockitoJUnitRunner
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestLock
block|{
specifier|private
specifier|static
specifier|final
name|Table
name|SOURCE_TABLE_1
init|=
name|createTable
argument_list|(
literal|"DB"
argument_list|,
literal|"SOURCE_1"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Table
name|SOURCE_TABLE_2
init|=
name|createTable
argument_list|(
literal|"DB"
argument_list|,
literal|"SOURCE_2"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Table
name|SINK_TABLE
init|=
name|createTable
argument_list|(
literal|"DB"
argument_list|,
literal|"SINK"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Set
argument_list|<
name|Table
argument_list|>
name|SOURCES
init|=
name|ImmutableSet
operator|.
name|of
argument_list|(
name|SOURCE_TABLE_1
argument_list|,
name|SOURCE_TABLE_2
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Set
argument_list|<
name|Table
argument_list|>
name|SINKS
init|=
name|ImmutableSet
operator|.
name|of
argument_list|(
name|SINK_TABLE
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Set
argument_list|<
name|Table
argument_list|>
name|TABLES
init|=
name|ImmutableSet
operator|.
name|of
argument_list|(
name|SOURCE_TABLE_1
argument_list|,
name|SOURCE_TABLE_2
argument_list|,
name|SINK_TABLE
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|long
name|LOCK_ID
init|=
literal|42
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|long
name|TRANSACTION_ID
init|=
literal|109
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|USER
init|=
literal|"ewest"
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|IMetaStoreClient
name|mockMetaStoreClient
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|LockFailureListener
name|mockListener
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|LockResponse
name|mockLockResponse
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|HeartbeatFactory
name|mockHeartbeatFactory
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|Timer
name|mockHeartbeat
decl_stmt|;
annotation|@
name|Captor
specifier|private
name|ArgumentCaptor
argument_list|<
name|LockRequest
argument_list|>
name|requestCaptor
decl_stmt|;
specifier|private
name|Lock
name|readLock
decl_stmt|;
specifier|private
name|Lock
name|writeLock
decl_stmt|;
specifier|private
name|HiveConf
name|configuration
init|=
operator|new
name|HiveConf
argument_list|()
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|injectMocks
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|mockMetaStoreClient
operator|.
name|lock
argument_list|(
name|any
argument_list|(
name|LockRequest
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockLockResponse
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockLockResponse
operator|.
name|getLockid
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|LOCK_ID
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockLockResponse
operator|.
name|getState
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ACQUIRED
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockHeartbeatFactory
operator|.
name|newInstance
argument_list|(
name|any
argument_list|(
name|IMetaStoreClient
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|LockFailureListener
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Long
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Collection
operator|.
name|class
argument_list|)
argument_list|,
name|anyLong
argument_list|()
argument_list|,
name|anyInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockHeartbeat
argument_list|)
expr_stmt|;
name|readLock
operator|=
operator|new
name|Lock
argument_list|(
name|mockMetaStoreClient
argument_list|,
name|mockHeartbeatFactory
argument_list|,
name|configuration
argument_list|,
name|mockListener
argument_list|,
name|USER
argument_list|,
name|SOURCES
argument_list|,
name|Collections
operator|.
expr|<
name|Table
operator|>
name|emptySet
argument_list|()
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|writeLock
operator|=
operator|new
name|Lock
argument_list|(
name|mockMetaStoreClient
argument_list|,
name|mockHeartbeatFactory
argument_list|,
name|configuration
argument_list|,
name|mockListener
argument_list|,
name|USER
argument_list|,
name|SOURCES
argument_list|,
name|SINKS
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAcquireReadLockWithNoIssues
parameter_list|()
throws|throws
name|Exception
block|{
name|readLock
operator|.
name|acquire
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|LOCK_ID
argument_list|)
argument_list|,
name|readLock
operator|.
name|getLockId
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|readLock
operator|.
name|getTransactionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAcquireWriteLockWithoutTxn
parameter_list|()
throws|throws
name|Exception
block|{
name|writeLock
operator|.
name|acquire
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAcquireWriteLockWithInvalidTxn
parameter_list|()
throws|throws
name|Exception
block|{
name|writeLock
operator|.
name|acquire
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAcquireTxnLockWithNoIssues
parameter_list|()
throws|throws
name|Exception
block|{
name|writeLock
operator|.
name|acquire
argument_list|(
name|TRANSACTION_ID
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|LOCK_ID
argument_list|)
argument_list|,
name|writeLock
operator|.
name|getLockId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|TRANSACTION_ID
argument_list|)
argument_list|,
name|writeLock
operator|.
name|getTransactionId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAcquireReadLockCheckHeartbeatCreated
parameter_list|()
throws|throws
name|Exception
block|{
name|configuration
operator|.
name|set
argument_list|(
literal|"hive.txn.timeout"
argument_list|,
literal|"100s"
argument_list|)
expr_stmt|;
name|readLock
operator|.
name|acquire
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|mockHeartbeatFactory
argument_list|)
operator|.
name|newInstance
argument_list|(
name|eq
argument_list|(
name|mockMetaStoreClient
argument_list|)
argument_list|,
name|eq
argument_list|(
name|mockListener
argument_list|)
argument_list|,
name|any
argument_list|(
name|Long
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|SOURCES
argument_list|)
argument_list|,
name|eq
argument_list|(
name|LOCK_ID
argument_list|)
argument_list|,
name|eq
argument_list|(
literal|75
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAcquireTxnLockCheckHeartbeatCreated
parameter_list|()
throws|throws
name|Exception
block|{
name|configuration
operator|.
name|set
argument_list|(
literal|"hive.txn.timeout"
argument_list|,
literal|"100s"
argument_list|)
expr_stmt|;
name|writeLock
operator|.
name|acquire
argument_list|(
name|TRANSACTION_ID
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockHeartbeatFactory
argument_list|)
operator|.
name|newInstance
argument_list|(
name|eq
argument_list|(
name|mockMetaStoreClient
argument_list|)
argument_list|,
name|eq
argument_list|(
name|mockListener
argument_list|)
argument_list|,
name|eq
argument_list|(
name|TRANSACTION_ID
argument_list|)
argument_list|,
name|eq
argument_list|(
name|TABLES
argument_list|)
argument_list|,
name|eq
argument_list|(
name|LOCK_ID
argument_list|)
argument_list|,
name|eq
argument_list|(
literal|75
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAcquireLockCheckUser
parameter_list|()
throws|throws
name|Exception
block|{
name|readLock
operator|.
name|acquire
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|mockMetaStoreClient
argument_list|)
operator|.
name|lock
argument_list|(
name|requestCaptor
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|LockRequest
name|actualRequest
init|=
name|requestCaptor
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|USER
argument_list|,
name|actualRequest
operator|.
name|getUser
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAcquireReadLockCheckLocks
parameter_list|()
throws|throws
name|Exception
block|{
name|readLock
operator|.
name|acquire
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|mockMetaStoreClient
argument_list|)
operator|.
name|lock
argument_list|(
name|requestCaptor
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|LockRequest
name|request
init|=
name|requestCaptor
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|request
operator|.
name|getTxnid
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|USER
argument_list|,
name|request
operator|.
name|getUser
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|InetAddress
operator|.
name|getLocalHost
argument_list|()
operator|.
name|getHostName
argument_list|()
argument_list|,
name|request
operator|.
name|getHostname
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
name|request
operator|.
name|getComponent
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|components
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|LockComponent
name|expected1
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_READ
argument_list|,
name|LockLevel
operator|.
name|TABLE
argument_list|,
literal|"DB"
argument_list|)
decl_stmt|;
name|expected1
operator|.
name|setTablename
argument_list|(
literal|"SOURCE_1"
argument_list|)
expr_stmt|;
name|expected1
operator|.
name|setOperationType
argument_list|(
name|DataOperationType
operator|.
name|INSERT
argument_list|)
expr_stmt|;
name|expected1
operator|.
name|setIsTransactional
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|components
operator|.
name|contains
argument_list|(
name|expected1
argument_list|)
argument_list|)
expr_stmt|;
name|LockComponent
name|expected2
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_READ
argument_list|,
name|LockLevel
operator|.
name|TABLE
argument_list|,
literal|"DB"
argument_list|)
decl_stmt|;
name|expected2
operator|.
name|setTablename
argument_list|(
literal|"SOURCE_2"
argument_list|)
expr_stmt|;
name|expected2
operator|.
name|setOperationType
argument_list|(
name|DataOperationType
operator|.
name|INSERT
argument_list|)
expr_stmt|;
name|expected2
operator|.
name|setIsTransactional
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|components
operator|.
name|contains
argument_list|(
name|expected2
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAcquireTxnLockCheckLocks
parameter_list|()
throws|throws
name|Exception
block|{
name|writeLock
operator|.
name|acquire
argument_list|(
name|TRANSACTION_ID
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMetaStoreClient
argument_list|)
operator|.
name|lock
argument_list|(
name|requestCaptor
operator|.
name|capture
argument_list|()
argument_list|)
expr_stmt|;
name|LockRequest
name|request
init|=
name|requestCaptor
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|TRANSACTION_ID
argument_list|,
name|request
operator|.
name|getTxnid
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|USER
argument_list|,
name|request
operator|.
name|getUser
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|InetAddress
operator|.
name|getLocalHost
argument_list|()
operator|.
name|getHostName
argument_list|()
argument_list|,
name|request
operator|.
name|getHostname
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|LockComponent
argument_list|>
name|components
init|=
name|request
operator|.
name|getComponent
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|components
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|LockComponent
name|expected1
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_READ
argument_list|,
name|LockLevel
operator|.
name|TABLE
argument_list|,
literal|"DB"
argument_list|)
decl_stmt|;
name|expected1
operator|.
name|setTablename
argument_list|(
literal|"SOURCE_1"
argument_list|)
expr_stmt|;
name|expected1
operator|.
name|setOperationType
argument_list|(
name|DataOperationType
operator|.
name|INSERT
argument_list|)
expr_stmt|;
name|expected1
operator|.
name|setIsTransactional
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|components
operator|.
name|contains
argument_list|(
name|expected1
argument_list|)
argument_list|)
expr_stmt|;
name|LockComponent
name|expected2
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_READ
argument_list|,
name|LockLevel
operator|.
name|TABLE
argument_list|,
literal|"DB"
argument_list|)
decl_stmt|;
name|expected2
operator|.
name|setTablename
argument_list|(
literal|"SOURCE_2"
argument_list|)
expr_stmt|;
name|expected2
operator|.
name|setOperationType
argument_list|(
name|DataOperationType
operator|.
name|INSERT
argument_list|)
expr_stmt|;
name|expected2
operator|.
name|setIsTransactional
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|components
operator|.
name|contains
argument_list|(
name|expected2
argument_list|)
argument_list|)
expr_stmt|;
name|LockComponent
name|expected3
init|=
operator|new
name|LockComponent
argument_list|(
name|LockType
operator|.
name|SHARED_WRITE
argument_list|,
name|LockLevel
operator|.
name|TABLE
argument_list|,
literal|"DB"
argument_list|)
decl_stmt|;
name|expected3
operator|.
name|setTablename
argument_list|(
literal|"SINK"
argument_list|)
expr_stmt|;
name|expected3
operator|.
name|setOperationType
argument_list|(
name|DataOperationType
operator|.
name|UPDATE
argument_list|)
expr_stmt|;
name|expected3
operator|.
name|setIsTransactional
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|components
operator|.
name|contains
argument_list|(
name|expected3
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|LockException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAcquireLockNotAcquired
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|mockLockResponse
operator|.
name|getState
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|NOT_ACQUIRED
argument_list|)
expr_stmt|;
name|readLock
operator|.
name|acquire
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|LockException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAcquireLockAborted
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|mockLockResponse
operator|.
name|getState
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ABORT
argument_list|)
expr_stmt|;
name|readLock
operator|.
name|acquire
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|LockException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAcquireLockWithWaitRetriesExceeded
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|mockLockResponse
operator|.
name|getState
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|WAITING
argument_list|,
name|WAITING
argument_list|,
name|WAITING
argument_list|)
expr_stmt|;
name|readLock
operator|.
name|acquire
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAcquireLockWithWaitRetries
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|mockLockResponse
operator|.
name|getState
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|WAITING
argument_list|,
name|WAITING
argument_list|,
name|ACQUIRED
argument_list|)
expr_stmt|;
name|readLock
operator|.
name|acquire
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|Long
operator|.
name|valueOf
argument_list|(
name|LOCK_ID
argument_list|)
argument_list|,
name|readLock
operator|.
name|getLockId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReleaseLock
parameter_list|()
throws|throws
name|Exception
block|{
name|readLock
operator|.
name|acquire
argument_list|()
expr_stmt|;
name|readLock
operator|.
name|release
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|mockMetaStoreClient
argument_list|)
operator|.
name|unlock
argument_list|(
name|LOCK_ID
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReleaseLockNoLock
parameter_list|()
throws|throws
name|Exception
block|{
name|readLock
operator|.
name|release
argument_list|()
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|mockMetaStoreClient
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReleaseLockCancelsHeartbeat
parameter_list|()
throws|throws
name|Exception
block|{
name|readLock
operator|.
name|acquire
argument_list|()
expr_stmt|;
name|readLock
operator|.
name|release
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|mockHeartbeat
argument_list|)
operator|.
name|cancel
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadHeartbeat
parameter_list|()
throws|throws
name|Exception
block|{
name|HeartbeatTimerTask
name|task
init|=
operator|new
name|HeartbeatTimerTask
argument_list|(
name|mockMetaStoreClient
argument_list|,
name|mockListener
argument_list|,
literal|null
argument_list|,
name|SOURCES
argument_list|,
name|LOCK_ID
argument_list|)
decl_stmt|;
name|task
operator|.
name|run
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|mockMetaStoreClient
argument_list|)
operator|.
name|heartbeat
argument_list|(
literal|0
argument_list|,
name|LOCK_ID
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTxnHeartbeat
parameter_list|()
throws|throws
name|Exception
block|{
name|HeartbeatTimerTask
name|task
init|=
operator|new
name|HeartbeatTimerTask
argument_list|(
name|mockMetaStoreClient
argument_list|,
name|mockListener
argument_list|,
name|TRANSACTION_ID
argument_list|,
name|SOURCES
argument_list|,
name|LOCK_ID
argument_list|)
decl_stmt|;
name|task
operator|.
name|run
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|mockMetaStoreClient
argument_list|)
operator|.
name|heartbeat
argument_list|(
name|TRANSACTION_ID
argument_list|,
name|LOCK_ID
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadHeartbeatFailsNoSuchLockException
parameter_list|()
throws|throws
name|Exception
block|{
name|Throwable
name|t
init|=
operator|new
name|NoSuchLockException
argument_list|()
decl_stmt|;
name|doThrow
argument_list|(
name|t
argument_list|)
operator|.
name|when
argument_list|(
name|mockMetaStoreClient
argument_list|)
operator|.
name|heartbeat
argument_list|(
literal|0
argument_list|,
name|LOCK_ID
argument_list|)
expr_stmt|;
name|HeartbeatTimerTask
name|task
init|=
operator|new
name|HeartbeatTimerTask
argument_list|(
name|mockMetaStoreClient
argument_list|,
name|mockListener
argument_list|,
literal|null
argument_list|,
name|SOURCES
argument_list|,
name|LOCK_ID
argument_list|)
decl_stmt|;
name|task
operator|.
name|run
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|mockListener
argument_list|)
operator|.
name|lockFailed
argument_list|(
name|LOCK_ID
argument_list|,
literal|null
argument_list|,
name|Lock
operator|.
name|asStrings
argument_list|(
name|SOURCES
argument_list|)
argument_list|,
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTxnHeartbeatFailsNoSuchLockException
parameter_list|()
throws|throws
name|Exception
block|{
name|Throwable
name|t
init|=
operator|new
name|NoSuchLockException
argument_list|()
decl_stmt|;
name|doThrow
argument_list|(
name|t
argument_list|)
operator|.
name|when
argument_list|(
name|mockMetaStoreClient
argument_list|)
operator|.
name|heartbeat
argument_list|(
name|TRANSACTION_ID
argument_list|,
name|LOCK_ID
argument_list|)
expr_stmt|;
name|HeartbeatTimerTask
name|task
init|=
operator|new
name|HeartbeatTimerTask
argument_list|(
name|mockMetaStoreClient
argument_list|,
name|mockListener
argument_list|,
name|TRANSACTION_ID
argument_list|,
name|SOURCES
argument_list|,
name|LOCK_ID
argument_list|)
decl_stmt|;
name|task
operator|.
name|run
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|mockListener
argument_list|)
operator|.
name|lockFailed
argument_list|(
name|LOCK_ID
argument_list|,
name|TRANSACTION_ID
argument_list|,
name|Lock
operator|.
name|asStrings
argument_list|(
name|SOURCES
argument_list|)
argument_list|,
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHeartbeatFailsNoSuchTxnException
parameter_list|()
throws|throws
name|Exception
block|{
name|Throwable
name|t
init|=
operator|new
name|NoSuchTxnException
argument_list|()
decl_stmt|;
name|doThrow
argument_list|(
name|t
argument_list|)
operator|.
name|when
argument_list|(
name|mockMetaStoreClient
argument_list|)
operator|.
name|heartbeat
argument_list|(
name|TRANSACTION_ID
argument_list|,
name|LOCK_ID
argument_list|)
expr_stmt|;
name|HeartbeatTimerTask
name|task
init|=
operator|new
name|HeartbeatTimerTask
argument_list|(
name|mockMetaStoreClient
argument_list|,
name|mockListener
argument_list|,
name|TRANSACTION_ID
argument_list|,
name|SOURCES
argument_list|,
name|LOCK_ID
argument_list|)
decl_stmt|;
name|task
operator|.
name|run
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|mockListener
argument_list|)
operator|.
name|lockFailed
argument_list|(
name|LOCK_ID
argument_list|,
name|TRANSACTION_ID
argument_list|,
name|Lock
operator|.
name|asStrings
argument_list|(
name|SOURCES
argument_list|)
argument_list|,
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHeartbeatFailsTxnAbortedException
parameter_list|()
throws|throws
name|Exception
block|{
name|Throwable
name|t
init|=
operator|new
name|TxnAbortedException
argument_list|()
decl_stmt|;
name|doThrow
argument_list|(
name|t
argument_list|)
operator|.
name|when
argument_list|(
name|mockMetaStoreClient
argument_list|)
operator|.
name|heartbeat
argument_list|(
name|TRANSACTION_ID
argument_list|,
name|LOCK_ID
argument_list|)
expr_stmt|;
name|HeartbeatTimerTask
name|task
init|=
operator|new
name|HeartbeatTimerTask
argument_list|(
name|mockMetaStoreClient
argument_list|,
name|mockListener
argument_list|,
name|TRANSACTION_ID
argument_list|,
name|SOURCES
argument_list|,
name|LOCK_ID
argument_list|)
decl_stmt|;
name|task
operator|.
name|run
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|mockListener
argument_list|)
operator|.
name|lockFailed
argument_list|(
name|LOCK_ID
argument_list|,
name|TRANSACTION_ID
argument_list|,
name|Lock
operator|.
name|asStrings
argument_list|(
name|SOURCES
argument_list|)
argument_list|,
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHeartbeatContinuesTException
parameter_list|()
throws|throws
name|Exception
block|{
name|Throwable
name|t
init|=
operator|new
name|TException
argument_list|()
decl_stmt|;
name|doThrow
argument_list|(
name|t
argument_list|)
operator|.
name|when
argument_list|(
name|mockMetaStoreClient
argument_list|)
operator|.
name|heartbeat
argument_list|(
literal|0
argument_list|,
name|LOCK_ID
argument_list|)
expr_stmt|;
name|HeartbeatTimerTask
name|task
init|=
operator|new
name|HeartbeatTimerTask
argument_list|(
name|mockMetaStoreClient
argument_list|,
name|mockListener
argument_list|,
name|TRANSACTION_ID
argument_list|,
name|SOURCES
argument_list|,
name|LOCK_ID
argument_list|)
decl_stmt|;
name|task
operator|.
name|run
argument_list|()
expr_stmt|;
name|verifyZeroInteractions
argument_list|(
name|mockListener
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|Table
name|createTable
parameter_list|(
name|String
name|databaseName
parameter_list|,
name|String
name|tableName
parameter_list|)
block|{
name|Table
name|table
init|=
operator|new
name|Table
argument_list|()
decl_stmt|;
name|table
operator|.
name|setDbName
argument_list|(
name|databaseName
argument_list|)
expr_stmt|;
name|table
operator|.
name|setTableName
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
return|return
name|table
return|;
block|}
block|}
end_class

end_unit

