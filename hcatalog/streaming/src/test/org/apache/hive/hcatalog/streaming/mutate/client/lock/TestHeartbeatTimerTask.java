begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
operator|.
name|client
operator|.
name|lock
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doThrow
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|IMetaStoreClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|NoSuchLockException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|NoSuchTxnException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|TxnAbortedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|TException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|runners
operator|.
name|MockitoJUnitRunner
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|MockitoJUnitRunner
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestHeartbeatTimerTask
block|{
specifier|private
specifier|static
specifier|final
name|long
name|TRANSACTION_ID
init|=
literal|10L
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|long
name|LOCK_ID
init|=
literal|1L
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|List
argument_list|<
name|Table
argument_list|>
name|TABLES
init|=
name|createTable
argument_list|()
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|IMetaStoreClient
name|mockMetaStoreClient
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|LockFailureListener
name|mockListener
decl_stmt|;
specifier|private
name|HeartbeatTimerTask
name|task
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|create
parameter_list|()
throws|throws
name|Exception
block|{
name|task
operator|=
operator|new
name|HeartbeatTimerTask
argument_list|(
name|mockMetaStoreClient
argument_list|,
name|mockListener
argument_list|,
name|TRANSACTION_ID
argument_list|,
name|TABLES
argument_list|,
name|LOCK_ID
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRun
parameter_list|()
throws|throws
name|Exception
block|{
name|task
operator|.
name|run
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|mockMetaStoreClient
argument_list|)
operator|.
name|heartbeat
argument_list|(
name|TRANSACTION_ID
argument_list|,
name|LOCK_ID
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRunNullTransactionId
parameter_list|()
throws|throws
name|Exception
block|{
name|task
operator|=
operator|new
name|HeartbeatTimerTask
argument_list|(
name|mockMetaStoreClient
argument_list|,
name|mockListener
argument_list|,
literal|null
argument_list|,
name|TABLES
argument_list|,
name|LOCK_ID
argument_list|)
expr_stmt|;
name|task
operator|.
name|run
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|mockMetaStoreClient
argument_list|)
operator|.
name|heartbeat
argument_list|(
literal|0
argument_list|,
name|LOCK_ID
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRunHeartbeatFailsNoSuchLockException
parameter_list|()
throws|throws
name|Exception
block|{
name|NoSuchLockException
name|exception
init|=
operator|new
name|NoSuchLockException
argument_list|()
decl_stmt|;
name|doThrow
argument_list|(
name|exception
argument_list|)
operator|.
name|when
argument_list|(
name|mockMetaStoreClient
argument_list|)
operator|.
name|heartbeat
argument_list|(
name|TRANSACTION_ID
argument_list|,
name|LOCK_ID
argument_list|)
expr_stmt|;
name|task
operator|.
name|run
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|mockListener
argument_list|)
operator|.
name|lockFailed
argument_list|(
name|LOCK_ID
argument_list|,
name|TRANSACTION_ID
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"DB.TABLE"
argument_list|)
argument_list|,
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRunHeartbeatFailsNoSuchTxnException
parameter_list|()
throws|throws
name|Exception
block|{
name|NoSuchTxnException
name|exception
init|=
operator|new
name|NoSuchTxnException
argument_list|()
decl_stmt|;
name|doThrow
argument_list|(
name|exception
argument_list|)
operator|.
name|when
argument_list|(
name|mockMetaStoreClient
argument_list|)
operator|.
name|heartbeat
argument_list|(
name|TRANSACTION_ID
argument_list|,
name|LOCK_ID
argument_list|)
expr_stmt|;
name|task
operator|.
name|run
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|mockListener
argument_list|)
operator|.
name|lockFailed
argument_list|(
name|LOCK_ID
argument_list|,
name|TRANSACTION_ID
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"DB.TABLE"
argument_list|)
argument_list|,
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRunHeartbeatFailsTxnAbortedException
parameter_list|()
throws|throws
name|Exception
block|{
name|TxnAbortedException
name|exception
init|=
operator|new
name|TxnAbortedException
argument_list|()
decl_stmt|;
name|doThrow
argument_list|(
name|exception
argument_list|)
operator|.
name|when
argument_list|(
name|mockMetaStoreClient
argument_list|)
operator|.
name|heartbeat
argument_list|(
name|TRANSACTION_ID
argument_list|,
name|LOCK_ID
argument_list|)
expr_stmt|;
name|task
operator|.
name|run
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|mockListener
argument_list|)
operator|.
name|lockFailed
argument_list|(
name|LOCK_ID
argument_list|,
name|TRANSACTION_ID
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"DB.TABLE"
argument_list|)
argument_list|,
name|exception
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRunHeartbeatFailsTException
parameter_list|()
throws|throws
name|Exception
block|{
name|TException
name|exception
init|=
operator|new
name|TException
argument_list|()
decl_stmt|;
name|doThrow
argument_list|(
name|exception
argument_list|)
operator|.
name|when
argument_list|(
name|mockMetaStoreClient
argument_list|)
operator|.
name|heartbeat
argument_list|(
name|TRANSACTION_ID
argument_list|,
name|LOCK_ID
argument_list|)
expr_stmt|;
name|task
operator|.
name|run
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
name|List
argument_list|<
name|Table
argument_list|>
name|createTable
parameter_list|()
block|{
name|Table
name|table
init|=
operator|new
name|Table
argument_list|()
decl_stmt|;
name|table
operator|.
name|setDbName
argument_list|(
literal|"DB"
argument_list|)
expr_stmt|;
name|table
operator|.
name|setTableName
argument_list|(
literal|"TABLE"
argument_list|)
expr_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|table
argument_list|)
return|;
block|}
block|}
end_class

end_unit

