begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
operator|.
name|client
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|nullValue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
operator|.
name|StreamingTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|TestAcidTableSerializer
block|{
annotation|@
name|Test
specifier|public
name|void
name|testSerializeDeserialize
parameter_list|()
throws|throws
name|Exception
block|{
name|Database
name|database
init|=
name|StreamingTestUtils
operator|.
name|databaseBuilder
argument_list|(
operator|new
name|File
argument_list|(
literal|"/tmp"
argument_list|)
argument_list|)
operator|.
name|name
argument_list|(
literal|"db_1"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Table
name|table
init|=
name|StreamingTestUtils
operator|.
name|tableBuilder
argument_list|(
name|database
argument_list|)
operator|.
name|name
argument_list|(
literal|"table_1"
argument_list|)
operator|.
name|addColumn
argument_list|(
literal|"one"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|addColumn
argument_list|(
literal|"two"
argument_list|,
literal|"integer"
argument_list|)
operator|.
name|partitionKeys
argument_list|(
literal|"partition"
argument_list|)
operator|.
name|addPartition
argument_list|(
literal|"p1"
argument_list|)
operator|.
name|buckets
argument_list|(
literal|10
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|AcidTable
name|acidTable
init|=
operator|new
name|AcidTable
argument_list|(
literal|"db_1"
argument_list|,
literal|"table_1"
argument_list|,
literal|true
argument_list|,
name|TableType
operator|.
name|SINK
argument_list|)
decl_stmt|;
name|acidTable
operator|.
name|setTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|acidTable
operator|.
name|setTransactionId
argument_list|(
literal|42L
argument_list|)
expr_stmt|;
name|String
name|encoded
init|=
name|AcidTableSerializer
operator|.
name|encode
argument_list|(
name|acidTable
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|encoded
argument_list|)
expr_stmt|;
name|AcidTable
name|decoded
init|=
name|AcidTableSerializer
operator|.
name|decode
argument_list|(
name|encoded
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|decoded
operator|.
name|getDatabaseName
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"db_1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|decoded
operator|.
name|getTableName
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"table_1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|decoded
operator|.
name|createPartitions
argument_list|()
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|decoded
operator|.
name|getOutputFormatName
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|decoded
operator|.
name|getTotalBuckets
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|decoded
operator|.
name|getQualifiedName
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"DB_1.TABLE_1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|decoded
operator|.
name|getTransactionId
argument_list|()
argument_list|,
name|is
argument_list|(
literal|42L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|decoded
operator|.
name|getTableType
argument_list|()
argument_list|,
name|is
argument_list|(
name|TableType
operator|.
name|SINK
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|decoded
operator|.
name|getTable
argument_list|()
argument_list|,
name|is
argument_list|(
name|table
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSerializeDeserializeNoTableNoTransaction
parameter_list|()
throws|throws
name|Exception
block|{
name|AcidTable
name|acidTable
init|=
operator|new
name|AcidTable
argument_list|(
literal|"db_1"
argument_list|,
literal|"table_1"
argument_list|,
literal|true
argument_list|,
name|TableType
operator|.
name|SINK
argument_list|)
decl_stmt|;
name|String
name|encoded
init|=
name|AcidTableSerializer
operator|.
name|encode
argument_list|(
name|acidTable
argument_list|)
decl_stmt|;
name|AcidTable
name|decoded
init|=
name|AcidTableSerializer
operator|.
name|decode
argument_list|(
name|encoded
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|decoded
operator|.
name|getDatabaseName
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"db_1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|decoded
operator|.
name|getTableName
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"table_1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|decoded
operator|.
name|createPartitions
argument_list|()
argument_list|,
name|is
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|decoded
operator|.
name|getOutputFormatName
argument_list|()
argument_list|,
name|is
argument_list|(
name|nullValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|decoded
operator|.
name|getTotalBuckets
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|decoded
operator|.
name|getQualifiedName
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"DB_1.TABLE_1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|decoded
operator|.
name|getTransactionId
argument_list|()
argument_list|,
name|is
argument_list|(
literal|0L
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|decoded
operator|.
name|getTableType
argument_list|()
argument_list|,
name|is
argument_list|(
name|TableType
operator|.
name|SINK
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|decoded
operator|.
name|getTable
argument_list|()
argument_list|,
name|is
argument_list|(
name|nullValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

