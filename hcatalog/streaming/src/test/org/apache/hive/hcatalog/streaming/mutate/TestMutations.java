begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|TransactionBatch
operator|.
name|TxnState
operator|.
name|ABORTED
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|TransactionBatch
operator|.
name|TxnState
operator|.
name|COMMITTED
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
operator|.
name|StreamingTestUtils
operator|.
name|databaseBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
operator|.
name|StreamingTestUtils
operator|.
name|tableBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|IMetaStoreClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|AcidOutputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|BucketCodec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|RecordIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|TestStreaming
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
operator|.
name|StreamingAssert
operator|.
name|Factory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
operator|.
name|StreamingAssert
operator|.
name|Record
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
operator|.
name|StreamingTestUtils
operator|.
name|TableBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
operator|.
name|client
operator|.
name|MutatorClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
operator|.
name|client
operator|.
name|MutatorClientBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
operator|.
name|client
operator|.
name|AcidTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
operator|.
name|client
operator|.
name|Transaction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
operator|.
name|worker
operator|.
name|BucketIdResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
operator|.
name|worker
operator|.
name|MutatorCoordinator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
operator|.
name|worker
operator|.
name|MutatorCoordinatorBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
operator|.
name|worker
operator|.
name|MutatorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TemporaryFolder
import|;
end_import

begin_comment
comment|/**  * This test is based on {@link TestStreaming} and has a similar core set of tests to ensure that basic transactional  * behaviour is as expected in the {@link RecordMutator} line. This is complemented with a set of tests related to the  * use of update and delete operations.  */
end_comment

begin_class
specifier|public
class|class
name|TestMutations
block|{
specifier|private
specifier|static
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|EUROPE_FRANCE
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"Europe"
argument_list|,
literal|"France"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|EUROPE_UK
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"Europe"
argument_list|,
literal|"UK"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|ASIA_INDIA
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"Asia"
argument_list|,
literal|"India"
argument_list|)
decl_stmt|;
comment|// id
specifier|private
specifier|static
specifier|final
name|int
index|[]
name|BUCKET_COLUMN_INDEXES
init|=
operator|new
name|int
index|[]
block|{
literal|0
block|}
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|int
name|RECORD_ID_COLUMN
init|=
literal|2
decl_stmt|;
annotation|@
name|Rule
specifier|public
name|TemporaryFolder
name|warehouseFolder
init|=
operator|new
name|TemporaryFolder
argument_list|()
decl_stmt|;
specifier|private
name|StreamingTestUtils
name|testUtils
init|=
operator|new
name|StreamingTestUtils
argument_list|()
decl_stmt|;
specifier|private
name|HiveConf
name|conf
decl_stmt|;
specifier|private
name|IMetaStoreClient
name|metaStoreClient
decl_stmt|;
specifier|private
name|String
name|metaStoreUri
decl_stmt|;
specifier|private
name|Database
name|database
decl_stmt|;
specifier|private
name|TableBuilder
name|partitionedTableBuilder
decl_stmt|;
specifier|private
name|TableBuilder
name|unpartitionedTableBuilder
decl_stmt|;
specifier|private
name|Factory
name|assertionFactory
decl_stmt|;
specifier|public
name|TestMutations
parameter_list|()
throws|throws
name|Exception
block|{
name|conf
operator|=
name|testUtils
operator|.
name|newHiveConf
argument_list|(
name|metaStoreUri
argument_list|)
expr_stmt|;
name|testUtils
operator|.
name|prepareTransactionDatabase
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|metaStoreClient
operator|=
name|testUtils
operator|.
name|newMetaStoreClient
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|assertionFactory
operator|=
operator|new
name|StreamingAssert
operator|.
name|Factory
argument_list|(
name|metaStoreClient
argument_list|,
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|database
operator|=
name|databaseBuilder
argument_list|(
name|warehouseFolder
operator|.
name|getRoot
argument_list|()
argument_list|)
operator|.
name|name
argument_list|(
literal|"testing"
argument_list|)
operator|.
name|dropAndCreate
argument_list|(
name|metaStoreClient
argument_list|)
expr_stmt|;
name|partitionedTableBuilder
operator|=
name|tableBuilder
argument_list|(
name|database
argument_list|)
operator|.
name|name
argument_list|(
literal|"partitioned"
argument_list|)
operator|.
name|addColumn
argument_list|(
literal|"id"
argument_list|,
literal|"int"
argument_list|)
operator|.
name|addColumn
argument_list|(
literal|"msg"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|partitionKeys
argument_list|(
literal|"continent"
argument_list|,
literal|"country"
argument_list|)
operator|.
name|bucketCols
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"string"
argument_list|)
argument_list|)
expr_stmt|;
name|unpartitionedTableBuilder
operator|=
name|tableBuilder
argument_list|(
name|database
argument_list|)
operator|.
name|name
argument_list|(
literal|"unpartitioned"
argument_list|)
operator|.
name|addColumn
argument_list|(
literal|"id"
argument_list|,
literal|"int"
argument_list|)
operator|.
name|addColumn
argument_list|(
literal|"msg"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|bucketCols
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"string"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|int
name|encodeBucket
parameter_list|(
name|int
name|bucketId
parameter_list|)
block|{
return|return
name|BucketCodec
operator|.
name|V1
operator|.
name|encode
argument_list|(
operator|new
name|AcidOutputFormat
operator|.
name|Options
argument_list|(
literal|null
argument_list|)
operator|.
name|bucket
argument_list|(
name|bucketId
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTransactionBatchEmptyCommitPartitioned
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|table
init|=
name|partitionedTableBuilder
operator|.
name|addPartition
argument_list|(
name|ASIA_INDIA
argument_list|)
operator|.
name|create
argument_list|(
name|metaStoreClient
argument_list|)
decl_stmt|;
name|MutatorClient
name|client
init|=
operator|new
name|MutatorClientBuilder
argument_list|()
operator|.
name|addSinkTable
argument_list|(
name|table
operator|.
name|getDbName
argument_list|()
argument_list|,
name|table
operator|.
name|getTableName
argument_list|()
argument_list|,
literal|true
argument_list|)
operator|.
name|metaStoreUri
argument_list|(
name|metaStoreUri
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|connect
argument_list|()
expr_stmt|;
name|Transaction
name|transaction
init|=
name|client
operator|.
name|newTransaction
argument_list|()
decl_stmt|;
name|transaction
operator|.
name|begin
argument_list|()
expr_stmt|;
name|transaction
operator|.
name|commit
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|transaction
operator|.
name|getState
argument_list|()
argument_list|,
name|is
argument_list|(
name|COMMITTED
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTransactionBatchEmptyCommitUnpartitioned
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|table
init|=
name|unpartitionedTableBuilder
operator|.
name|create
argument_list|(
name|metaStoreClient
argument_list|)
decl_stmt|;
name|MutatorClient
name|client
init|=
operator|new
name|MutatorClientBuilder
argument_list|()
operator|.
name|addSinkTable
argument_list|(
name|table
operator|.
name|getDbName
argument_list|()
argument_list|,
name|table
operator|.
name|getTableName
argument_list|()
argument_list|,
literal|false
argument_list|)
operator|.
name|metaStoreUri
argument_list|(
name|metaStoreUri
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|connect
argument_list|()
expr_stmt|;
name|Transaction
name|transaction
init|=
name|client
operator|.
name|newTransaction
argument_list|()
decl_stmt|;
name|transaction
operator|.
name|begin
argument_list|()
expr_stmt|;
name|transaction
operator|.
name|commit
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|transaction
operator|.
name|getState
argument_list|()
argument_list|,
name|is
argument_list|(
name|COMMITTED
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTransactionBatchEmptyAbortPartitioned
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|table
init|=
name|partitionedTableBuilder
operator|.
name|addPartition
argument_list|(
name|ASIA_INDIA
argument_list|)
operator|.
name|create
argument_list|(
name|metaStoreClient
argument_list|)
decl_stmt|;
name|MutatorClient
name|client
init|=
operator|new
name|MutatorClientBuilder
argument_list|()
operator|.
name|addSinkTable
argument_list|(
name|table
operator|.
name|getDbName
argument_list|()
argument_list|,
name|table
operator|.
name|getTableName
argument_list|()
argument_list|,
literal|true
argument_list|)
operator|.
name|metaStoreUri
argument_list|(
name|metaStoreUri
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|connect
argument_list|()
expr_stmt|;
name|Transaction
name|transaction
init|=
name|client
operator|.
name|newTransaction
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AcidTable
argument_list|>
name|destinations
init|=
name|client
operator|.
name|getTables
argument_list|()
decl_stmt|;
name|transaction
operator|.
name|begin
argument_list|()
expr_stmt|;
name|MutatorFactory
name|mutatorFactory
init|=
operator|new
name|ReflectiveMutatorFactory
argument_list|(
name|conf
argument_list|,
name|MutableRecord
operator|.
name|class
argument_list|,
name|RECORD_ID_COLUMN
argument_list|,
name|BUCKET_COLUMN_INDEXES
argument_list|)
decl_stmt|;
name|MutatorCoordinator
name|coordinator
init|=
operator|new
name|MutatorCoordinatorBuilder
argument_list|()
operator|.
name|metaStoreUri
argument_list|(
name|metaStoreUri
argument_list|)
operator|.
name|table
argument_list|(
name|destinations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|mutatorFactory
argument_list|(
name|mutatorFactory
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|coordinator
operator|.
name|close
argument_list|()
expr_stmt|;
name|transaction
operator|.
name|abort
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|transaction
operator|.
name|getState
argument_list|()
argument_list|,
name|is
argument_list|(
name|ABORTED
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTransactionBatchEmptyAbortUnartitioned
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|table
init|=
name|unpartitionedTableBuilder
operator|.
name|create
argument_list|(
name|metaStoreClient
argument_list|)
decl_stmt|;
name|MutatorClient
name|client
init|=
operator|new
name|MutatorClientBuilder
argument_list|()
operator|.
name|addSinkTable
argument_list|(
name|table
operator|.
name|getDbName
argument_list|()
argument_list|,
name|table
operator|.
name|getTableName
argument_list|()
argument_list|,
literal|false
argument_list|)
operator|.
name|metaStoreUri
argument_list|(
name|metaStoreUri
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|connect
argument_list|()
expr_stmt|;
name|Transaction
name|transaction
init|=
name|client
operator|.
name|newTransaction
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AcidTable
argument_list|>
name|destinations
init|=
name|client
operator|.
name|getTables
argument_list|()
decl_stmt|;
name|transaction
operator|.
name|begin
argument_list|()
expr_stmt|;
name|MutatorFactory
name|mutatorFactory
init|=
operator|new
name|ReflectiveMutatorFactory
argument_list|(
name|conf
argument_list|,
name|MutableRecord
operator|.
name|class
argument_list|,
name|RECORD_ID_COLUMN
argument_list|,
name|BUCKET_COLUMN_INDEXES
argument_list|)
decl_stmt|;
name|MutatorCoordinator
name|coordinator
init|=
operator|new
name|MutatorCoordinatorBuilder
argument_list|()
operator|.
name|metaStoreUri
argument_list|(
name|metaStoreUri
argument_list|)
operator|.
name|table
argument_list|(
name|destinations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|mutatorFactory
argument_list|(
name|mutatorFactory
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|coordinator
operator|.
name|close
argument_list|()
expr_stmt|;
name|transaction
operator|.
name|abort
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|transaction
operator|.
name|getState
argument_list|()
argument_list|,
name|is
argument_list|(
name|ABORTED
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTransactionBatchCommitPartitioned
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|table
init|=
name|partitionedTableBuilder
operator|.
name|addPartition
argument_list|(
name|ASIA_INDIA
argument_list|)
operator|.
name|create
argument_list|(
name|metaStoreClient
argument_list|)
decl_stmt|;
name|MutatorClient
name|client
init|=
operator|new
name|MutatorClientBuilder
argument_list|()
operator|.
name|addSinkTable
argument_list|(
name|table
operator|.
name|getDbName
argument_list|()
argument_list|,
name|table
operator|.
name|getTableName
argument_list|()
argument_list|,
literal|true
argument_list|)
operator|.
name|metaStoreUri
argument_list|(
name|metaStoreUri
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|connect
argument_list|()
expr_stmt|;
name|Transaction
name|transaction
init|=
name|client
operator|.
name|newTransaction
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AcidTable
argument_list|>
name|destinations
init|=
name|client
operator|.
name|getTables
argument_list|()
decl_stmt|;
name|transaction
operator|.
name|begin
argument_list|()
expr_stmt|;
name|MutatorFactory
name|mutatorFactory
init|=
operator|new
name|ReflectiveMutatorFactory
argument_list|(
name|conf
argument_list|,
name|MutableRecord
operator|.
name|class
argument_list|,
name|RECORD_ID_COLUMN
argument_list|,
name|BUCKET_COLUMN_INDEXES
argument_list|)
decl_stmt|;
name|MutatorCoordinator
name|coordinator
init|=
operator|new
name|MutatorCoordinatorBuilder
argument_list|()
operator|.
name|metaStoreUri
argument_list|(
name|metaStoreUri
argument_list|)
operator|.
name|table
argument_list|(
name|destinations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|mutatorFactory
argument_list|(
name|mutatorFactory
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|BucketIdResolver
name|bucketIdAppender
init|=
name|mutatorFactory
operator|.
name|newBucketIdResolver
argument_list|(
name|destinations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTotalBuckets
argument_list|()
argument_list|)
decl_stmt|;
name|MutableRecord
name|record
init|=
operator|(
name|MutableRecord
operator|)
name|bucketIdAppender
operator|.
name|attachBucketIdToRecord
argument_list|(
operator|new
name|MutableRecord
argument_list|(
literal|1
argument_list|,
literal|"Hello streaming"
argument_list|)
argument_list|)
decl_stmt|;
name|coordinator
operator|.
name|insert
argument_list|(
name|ASIA_INDIA
argument_list|,
name|record
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|close
argument_list|()
expr_stmt|;
name|transaction
operator|.
name|commit
argument_list|()
expr_stmt|;
name|StreamingAssert
name|streamingAssertions
init|=
name|assertionFactory
operator|.
name|newStreamingAssert
argument_list|(
name|table
argument_list|,
name|ASIA_INDIA
argument_list|)
decl_stmt|;
name|streamingAssertions
operator|.
name|assertMinTransactionId
argument_list|(
literal|1L
argument_list|)
expr_stmt|;
name|streamingAssertions
operator|.
name|assertMaxTransactionId
argument_list|(
literal|1L
argument_list|)
expr_stmt|;
name|streamingAssertions
operator|.
name|assertExpectedFileCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Record
argument_list|>
name|readRecords
init|=
name|streamingAssertions
operator|.
name|readRecords
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|readRecords
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|readRecords
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRow
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"{1, Hello streaming}"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|readRecords
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRecordIdentifier
argument_list|()
argument_list|,
name|is
argument_list|(
operator|new
name|RecordIdentifier
argument_list|(
literal|1L
argument_list|,
name|encodeBucket
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|0L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|transaction
operator|.
name|getState
argument_list|()
argument_list|,
name|is
argument_list|(
name|COMMITTED
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMulti
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|table
init|=
name|partitionedTableBuilder
operator|.
name|addPartition
argument_list|(
name|ASIA_INDIA
argument_list|)
operator|.
name|create
argument_list|(
name|metaStoreClient
argument_list|)
decl_stmt|;
name|MutatorClient
name|client
init|=
operator|new
name|MutatorClientBuilder
argument_list|()
operator|.
name|addSinkTable
argument_list|(
name|table
operator|.
name|getDbName
argument_list|()
argument_list|,
name|table
operator|.
name|getTableName
argument_list|()
argument_list|,
literal|true
argument_list|)
operator|.
name|metaStoreUri
argument_list|(
name|metaStoreUri
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|connect
argument_list|()
expr_stmt|;
name|Transaction
name|transaction
init|=
name|client
operator|.
name|newTransaction
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AcidTable
argument_list|>
name|destinations
init|=
name|client
operator|.
name|getTables
argument_list|()
decl_stmt|;
name|transaction
operator|.
name|begin
argument_list|()
expr_stmt|;
name|MutatorFactory
name|mutatorFactory
init|=
operator|new
name|ReflectiveMutatorFactory
argument_list|(
name|conf
argument_list|,
name|MutableRecord
operator|.
name|class
argument_list|,
name|RECORD_ID_COLUMN
argument_list|,
name|BUCKET_COLUMN_INDEXES
argument_list|)
decl_stmt|;
name|MutatorCoordinator
name|coordinator
init|=
operator|new
name|MutatorCoordinatorBuilder
argument_list|()
operator|.
name|metaStoreUri
argument_list|(
name|metaStoreUri
argument_list|)
operator|.
name|table
argument_list|(
name|destinations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|mutatorFactory
argument_list|(
name|mutatorFactory
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|BucketIdResolver
name|bucketIdResolver
init|=
name|mutatorFactory
operator|.
name|newBucketIdResolver
argument_list|(
name|destinations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTotalBuckets
argument_list|()
argument_list|)
decl_stmt|;
name|MutableRecord
name|asiaIndiaRecord1
init|=
operator|(
name|MutableRecord
operator|)
name|bucketIdResolver
operator|.
name|attachBucketIdToRecord
argument_list|(
operator|new
name|MutableRecord
argument_list|(
literal|1
argument_list|,
literal|"Hello streaming"
argument_list|)
argument_list|)
decl_stmt|;
name|MutableRecord
name|europeUkRecord1
init|=
operator|(
name|MutableRecord
operator|)
name|bucketIdResolver
operator|.
name|attachBucketIdToRecord
argument_list|(
operator|new
name|MutableRecord
argument_list|(
literal|2
argument_list|,
literal|"Hello streaming"
argument_list|)
argument_list|)
decl_stmt|;
name|MutableRecord
name|europeFranceRecord1
init|=
operator|(
name|MutableRecord
operator|)
name|bucketIdResolver
operator|.
name|attachBucketIdToRecord
argument_list|(
operator|new
name|MutableRecord
argument_list|(
literal|3
argument_list|,
literal|"Hello streaming"
argument_list|)
argument_list|)
decl_stmt|;
name|MutableRecord
name|europeFranceRecord2
init|=
operator|(
name|MutableRecord
operator|)
name|bucketIdResolver
operator|.
name|attachBucketIdToRecord
argument_list|(
operator|new
name|MutableRecord
argument_list|(
literal|4
argument_list|,
literal|"Bonjour streaming"
argument_list|)
argument_list|)
decl_stmt|;
name|coordinator
operator|.
name|insert
argument_list|(
name|ASIA_INDIA
argument_list|,
name|asiaIndiaRecord1
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|insert
argument_list|(
name|EUROPE_UK
argument_list|,
name|europeUkRecord1
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|insert
argument_list|(
name|EUROPE_FRANCE
argument_list|,
name|europeFranceRecord1
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|insert
argument_list|(
name|EUROPE_FRANCE
argument_list|,
name|europeFranceRecord2
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|close
argument_list|()
expr_stmt|;
name|transaction
operator|.
name|commit
argument_list|()
expr_stmt|;
comment|// ASIA_INDIA
name|StreamingAssert
name|streamingAssertions
init|=
name|assertionFactory
operator|.
name|newStreamingAssert
argument_list|(
name|table
argument_list|,
name|ASIA_INDIA
argument_list|)
decl_stmt|;
name|streamingAssertions
operator|.
name|assertMinTransactionId
argument_list|(
literal|1L
argument_list|)
expr_stmt|;
name|streamingAssertions
operator|.
name|assertMaxTransactionId
argument_list|(
literal|1L
argument_list|)
expr_stmt|;
name|streamingAssertions
operator|.
name|assertExpectedFileCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Record
argument_list|>
name|readRecords
init|=
name|streamingAssertions
operator|.
name|readRecords
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|readRecords
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|readRecords
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRow
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"{1, Hello streaming}"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|readRecords
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRecordIdentifier
argument_list|()
argument_list|,
name|is
argument_list|(
operator|new
name|RecordIdentifier
argument_list|(
literal|1L
argument_list|,
name|encodeBucket
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|0L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// EUROPE_UK
name|streamingAssertions
operator|=
name|assertionFactory
operator|.
name|newStreamingAssert
argument_list|(
name|table
argument_list|,
name|EUROPE_UK
argument_list|)
expr_stmt|;
name|streamingAssertions
operator|.
name|assertMinTransactionId
argument_list|(
literal|1L
argument_list|)
expr_stmt|;
name|streamingAssertions
operator|.
name|assertMaxTransactionId
argument_list|(
literal|1L
argument_list|)
expr_stmt|;
name|streamingAssertions
operator|.
name|assertExpectedFileCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|readRecords
operator|=
name|streamingAssertions
operator|.
name|readRecords
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|readRecords
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|readRecords
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRow
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"{2, Hello streaming}"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|readRecords
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRecordIdentifier
argument_list|()
argument_list|,
name|is
argument_list|(
operator|new
name|RecordIdentifier
argument_list|(
literal|1L
argument_list|,
name|encodeBucket
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|0L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// EUROPE_FRANCE
name|streamingAssertions
operator|=
name|assertionFactory
operator|.
name|newStreamingAssert
argument_list|(
name|table
argument_list|,
name|EUROPE_FRANCE
argument_list|)
expr_stmt|;
name|streamingAssertions
operator|.
name|assertMinTransactionId
argument_list|(
literal|1L
argument_list|)
expr_stmt|;
name|streamingAssertions
operator|.
name|assertMaxTransactionId
argument_list|(
literal|1L
argument_list|)
expr_stmt|;
name|streamingAssertions
operator|.
name|assertExpectedFileCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|readRecords
operator|=
name|streamingAssertions
operator|.
name|readRecords
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|readRecords
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|readRecords
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRow
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"{3, Hello streaming}"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|readRecords
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRecordIdentifier
argument_list|()
argument_list|,
name|is
argument_list|(
operator|new
name|RecordIdentifier
argument_list|(
literal|1L
argument_list|,
name|encodeBucket
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|0L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|readRecords
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getRow
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"{4, Bonjour streaming}"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|readRecords
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getRecordIdentifier
argument_list|()
argument_list|,
name|is
argument_list|(
operator|new
name|RecordIdentifier
argument_list|(
literal|1L
argument_list|,
name|encodeBucket
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|1L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTransactionBatchCommitUnpartitioned
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|table
init|=
name|unpartitionedTableBuilder
operator|.
name|create
argument_list|(
name|metaStoreClient
argument_list|)
decl_stmt|;
name|MutatorClient
name|client
init|=
operator|new
name|MutatorClientBuilder
argument_list|()
operator|.
name|addSinkTable
argument_list|(
name|table
operator|.
name|getDbName
argument_list|()
argument_list|,
name|table
operator|.
name|getTableName
argument_list|()
argument_list|,
literal|false
argument_list|)
operator|.
name|metaStoreUri
argument_list|(
name|metaStoreUri
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|connect
argument_list|()
expr_stmt|;
name|Transaction
name|transaction
init|=
name|client
operator|.
name|newTransaction
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AcidTable
argument_list|>
name|destinations
init|=
name|client
operator|.
name|getTables
argument_list|()
decl_stmt|;
name|transaction
operator|.
name|begin
argument_list|()
expr_stmt|;
name|MutatorFactory
name|mutatorFactory
init|=
operator|new
name|ReflectiveMutatorFactory
argument_list|(
name|conf
argument_list|,
name|MutableRecord
operator|.
name|class
argument_list|,
name|RECORD_ID_COLUMN
argument_list|,
name|BUCKET_COLUMN_INDEXES
argument_list|)
decl_stmt|;
name|MutatorCoordinator
name|coordinator
init|=
operator|new
name|MutatorCoordinatorBuilder
argument_list|()
operator|.
name|metaStoreUri
argument_list|(
name|metaStoreUri
argument_list|)
operator|.
name|table
argument_list|(
name|destinations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|mutatorFactory
argument_list|(
name|mutatorFactory
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|BucketIdResolver
name|bucketIdResolver
init|=
name|mutatorFactory
operator|.
name|newBucketIdResolver
argument_list|(
name|destinations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTotalBuckets
argument_list|()
argument_list|)
decl_stmt|;
name|MutableRecord
name|record
init|=
operator|(
name|MutableRecord
operator|)
name|bucketIdResolver
operator|.
name|attachBucketIdToRecord
argument_list|(
operator|new
name|MutableRecord
argument_list|(
literal|1
argument_list|,
literal|"Hello streaming"
argument_list|)
argument_list|)
decl_stmt|;
name|coordinator
operator|.
name|insert
argument_list|(
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|record
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|close
argument_list|()
expr_stmt|;
name|transaction
operator|.
name|commit
argument_list|()
expr_stmt|;
name|StreamingAssert
name|streamingAssertions
init|=
name|assertionFactory
operator|.
name|newStreamingAssert
argument_list|(
name|table
argument_list|)
decl_stmt|;
name|streamingAssertions
operator|.
name|assertMinTransactionId
argument_list|(
literal|1L
argument_list|)
expr_stmt|;
name|streamingAssertions
operator|.
name|assertMaxTransactionId
argument_list|(
literal|1L
argument_list|)
expr_stmt|;
name|streamingAssertions
operator|.
name|assertExpectedFileCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Record
argument_list|>
name|readRecords
init|=
name|streamingAssertions
operator|.
name|readRecords
argument_list|()
decl_stmt|;
name|assertThat
argument_list|(
name|readRecords
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|readRecords
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRow
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"{1, Hello streaming}"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|readRecords
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRecordIdentifier
argument_list|()
argument_list|,
name|is
argument_list|(
operator|new
name|RecordIdentifier
argument_list|(
literal|1L
argument_list|,
name|encodeBucket
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|0L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|transaction
operator|.
name|getState
argument_list|()
argument_list|,
name|is
argument_list|(
name|COMMITTED
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTransactionBatchAbort
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|table
init|=
name|partitionedTableBuilder
operator|.
name|addPartition
argument_list|(
name|ASIA_INDIA
argument_list|)
operator|.
name|create
argument_list|(
name|metaStoreClient
argument_list|)
decl_stmt|;
name|MutatorClient
name|client
init|=
operator|new
name|MutatorClientBuilder
argument_list|()
operator|.
name|addSinkTable
argument_list|(
name|table
operator|.
name|getDbName
argument_list|()
argument_list|,
name|table
operator|.
name|getTableName
argument_list|()
argument_list|,
literal|true
argument_list|)
operator|.
name|metaStoreUri
argument_list|(
name|metaStoreUri
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|connect
argument_list|()
expr_stmt|;
name|Transaction
name|transaction
init|=
name|client
operator|.
name|newTransaction
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AcidTable
argument_list|>
name|destinations
init|=
name|client
operator|.
name|getTables
argument_list|()
decl_stmt|;
name|transaction
operator|.
name|begin
argument_list|()
expr_stmt|;
name|MutatorFactory
name|mutatorFactory
init|=
operator|new
name|ReflectiveMutatorFactory
argument_list|(
name|conf
argument_list|,
name|MutableRecord
operator|.
name|class
argument_list|,
name|RECORD_ID_COLUMN
argument_list|,
name|BUCKET_COLUMN_INDEXES
argument_list|)
decl_stmt|;
name|MutatorCoordinator
name|coordinator
init|=
operator|new
name|MutatorCoordinatorBuilder
argument_list|()
operator|.
name|metaStoreUri
argument_list|(
name|metaStoreUri
argument_list|)
operator|.
name|table
argument_list|(
name|destinations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|mutatorFactory
argument_list|(
name|mutatorFactory
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|BucketIdResolver
name|bucketIdResolver
init|=
name|mutatorFactory
operator|.
name|newBucketIdResolver
argument_list|(
name|destinations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTotalBuckets
argument_list|()
argument_list|)
decl_stmt|;
name|MutableRecord
name|record1
init|=
operator|(
name|MutableRecord
operator|)
name|bucketIdResolver
operator|.
name|attachBucketIdToRecord
argument_list|(
operator|new
name|MutableRecord
argument_list|(
literal|1
argument_list|,
literal|"Hello streaming"
argument_list|)
argument_list|)
decl_stmt|;
name|MutableRecord
name|record2
init|=
operator|(
name|MutableRecord
operator|)
name|bucketIdResolver
operator|.
name|attachBucketIdToRecord
argument_list|(
operator|new
name|MutableRecord
argument_list|(
literal|2
argument_list|,
literal|"Welcome to streaming"
argument_list|)
argument_list|)
decl_stmt|;
name|coordinator
operator|.
name|insert
argument_list|(
name|ASIA_INDIA
argument_list|,
name|record1
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|insert
argument_list|(
name|ASIA_INDIA
argument_list|,
name|record2
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|close
argument_list|()
expr_stmt|;
name|transaction
operator|.
name|abort
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|transaction
operator|.
name|getState
argument_list|()
argument_list|,
name|is
argument_list|(
name|ABORTED
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
name|StreamingAssert
name|streamingAssertions
init|=
name|assertionFactory
operator|.
name|newStreamingAssert
argument_list|(
name|table
argument_list|,
name|ASIA_INDIA
argument_list|)
decl_stmt|;
name|streamingAssertions
operator|.
name|assertNothingWritten
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUpdatesAndDeletes
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Set up some base data then stream some inserts/updates/deletes to a number of partitions
name|MutatorFactory
name|mutatorFactory
init|=
operator|new
name|ReflectiveMutatorFactory
argument_list|(
name|conf
argument_list|,
name|MutableRecord
operator|.
name|class
argument_list|,
name|RECORD_ID_COLUMN
argument_list|,
name|BUCKET_COLUMN_INDEXES
argument_list|)
decl_stmt|;
comment|// INSERT DATA
comment|//
name|Table
name|table
init|=
name|partitionedTableBuilder
operator|.
name|addPartition
argument_list|(
name|ASIA_INDIA
argument_list|)
operator|.
name|addPartition
argument_list|(
name|EUROPE_FRANCE
argument_list|)
operator|.
name|create
argument_list|(
name|metaStoreClient
argument_list|)
decl_stmt|;
name|MutatorClient
name|client
init|=
operator|new
name|MutatorClientBuilder
argument_list|()
operator|.
name|addSinkTable
argument_list|(
name|table
operator|.
name|getDbName
argument_list|()
argument_list|,
name|table
operator|.
name|getTableName
argument_list|()
argument_list|,
literal|true
argument_list|)
operator|.
name|metaStoreUri
argument_list|(
name|metaStoreUri
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|connect
argument_list|()
expr_stmt|;
name|Transaction
name|insertTransaction
init|=
name|client
operator|.
name|newTransaction
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|AcidTable
argument_list|>
name|destinations
init|=
name|client
operator|.
name|getTables
argument_list|()
decl_stmt|;
name|insertTransaction
operator|.
name|begin
argument_list|()
expr_stmt|;
name|MutatorCoordinator
name|insertCoordinator
init|=
operator|new
name|MutatorCoordinatorBuilder
argument_list|()
operator|.
name|metaStoreUri
argument_list|(
name|metaStoreUri
argument_list|)
operator|.
name|table
argument_list|(
name|destinations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|mutatorFactory
argument_list|(
name|mutatorFactory
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|BucketIdResolver
name|bucketIdResolver
init|=
name|mutatorFactory
operator|.
name|newBucketIdResolver
argument_list|(
name|destinations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTotalBuckets
argument_list|()
argument_list|)
decl_stmt|;
name|MutableRecord
name|asiaIndiaRecord1
init|=
operator|(
name|MutableRecord
operator|)
name|bucketIdResolver
operator|.
name|attachBucketIdToRecord
argument_list|(
operator|new
name|MutableRecord
argument_list|(
literal|1
argument_list|,
literal|"Namaste streaming 1"
argument_list|)
argument_list|)
decl_stmt|;
name|MutableRecord
name|asiaIndiaRecord2
init|=
operator|(
name|MutableRecord
operator|)
name|bucketIdResolver
operator|.
name|attachBucketIdToRecord
argument_list|(
operator|new
name|MutableRecord
argument_list|(
literal|2
argument_list|,
literal|"Namaste streaming 2"
argument_list|)
argument_list|)
decl_stmt|;
name|MutableRecord
name|europeUkRecord1
init|=
operator|(
name|MutableRecord
operator|)
name|bucketIdResolver
operator|.
name|attachBucketIdToRecord
argument_list|(
operator|new
name|MutableRecord
argument_list|(
literal|3
argument_list|,
literal|"Hello streaming 1"
argument_list|)
argument_list|)
decl_stmt|;
name|MutableRecord
name|europeUkRecord2
init|=
operator|(
name|MutableRecord
operator|)
name|bucketIdResolver
operator|.
name|attachBucketIdToRecord
argument_list|(
operator|new
name|MutableRecord
argument_list|(
literal|4
argument_list|,
literal|"Hello streaming 2"
argument_list|)
argument_list|)
decl_stmt|;
name|MutableRecord
name|europeFranceRecord1
init|=
operator|(
name|MutableRecord
operator|)
name|bucketIdResolver
operator|.
name|attachBucketIdToRecord
argument_list|(
operator|new
name|MutableRecord
argument_list|(
literal|5
argument_list|,
literal|"Bonjour streaming 1"
argument_list|)
argument_list|)
decl_stmt|;
name|MutableRecord
name|europeFranceRecord2
init|=
operator|(
name|MutableRecord
operator|)
name|bucketIdResolver
operator|.
name|attachBucketIdToRecord
argument_list|(
operator|new
name|MutableRecord
argument_list|(
literal|6
argument_list|,
literal|"Bonjour streaming 2"
argument_list|)
argument_list|)
decl_stmt|;
name|insertCoordinator
operator|.
name|insert
argument_list|(
name|ASIA_INDIA
argument_list|,
name|asiaIndiaRecord1
argument_list|)
expr_stmt|;
name|insertCoordinator
operator|.
name|insert
argument_list|(
name|ASIA_INDIA
argument_list|,
name|asiaIndiaRecord2
argument_list|)
expr_stmt|;
name|insertCoordinator
operator|.
name|insert
argument_list|(
name|EUROPE_UK
argument_list|,
name|europeUkRecord1
argument_list|)
expr_stmt|;
name|insertCoordinator
operator|.
name|insert
argument_list|(
name|EUROPE_UK
argument_list|,
name|europeUkRecord2
argument_list|)
expr_stmt|;
name|insertCoordinator
operator|.
name|insert
argument_list|(
name|EUROPE_FRANCE
argument_list|,
name|europeFranceRecord1
argument_list|)
expr_stmt|;
name|insertCoordinator
operator|.
name|insert
argument_list|(
name|EUROPE_FRANCE
argument_list|,
name|europeFranceRecord2
argument_list|)
expr_stmt|;
name|insertCoordinator
operator|.
name|close
argument_list|()
expr_stmt|;
name|insertTransaction
operator|.
name|commit
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|insertTransaction
operator|.
name|getState
argument_list|()
argument_list|,
name|is
argument_list|(
name|COMMITTED
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// MUTATE DATA
comment|//
name|client
operator|=
operator|new
name|MutatorClientBuilder
argument_list|()
operator|.
name|addSinkTable
argument_list|(
name|table
operator|.
name|getDbName
argument_list|()
argument_list|,
name|table
operator|.
name|getTableName
argument_list|()
argument_list|,
literal|true
argument_list|)
operator|.
name|metaStoreUri
argument_list|(
name|metaStoreUri
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|client
operator|.
name|connect
argument_list|()
expr_stmt|;
name|Transaction
name|mutateTransaction
init|=
name|client
operator|.
name|newTransaction
argument_list|()
decl_stmt|;
name|destinations
operator|=
name|client
operator|.
name|getTables
argument_list|()
expr_stmt|;
name|mutateTransaction
operator|.
name|begin
argument_list|()
expr_stmt|;
name|MutatorCoordinator
name|mutateCoordinator
init|=
operator|new
name|MutatorCoordinatorBuilder
argument_list|()
operator|.
name|metaStoreUri
argument_list|(
name|metaStoreUri
argument_list|)
operator|.
name|table
argument_list|(
name|destinations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|mutatorFactory
argument_list|(
name|mutatorFactory
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|bucketIdResolver
operator|=
name|mutatorFactory
operator|.
name|newBucketIdResolver
argument_list|(
name|destinations
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTotalBuckets
argument_list|()
argument_list|)
expr_stmt|;
name|MutableRecord
name|asiaIndiaRecord3
init|=
operator|(
name|MutableRecord
operator|)
name|bucketIdResolver
operator|.
name|attachBucketIdToRecord
argument_list|(
operator|new
name|MutableRecord
argument_list|(
literal|20
argument_list|,
literal|"Namaste streaming 3"
argument_list|)
argument_list|)
decl_stmt|;
name|mutateCoordinator
operator|.
name|update
argument_list|(
name|ASIA_INDIA
argument_list|,
operator|new
name|MutableRecord
argument_list|(
literal|2
argument_list|,
literal|"UPDATED: Namaste streaming 2"
argument_list|,
operator|new
name|RecordIdentifier
argument_list|(
literal|1L
argument_list|,
name|encodeBucket
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|1L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|mutateCoordinator
operator|.
name|insert
argument_list|(
name|ASIA_INDIA
argument_list|,
name|asiaIndiaRecord3
argument_list|)
expr_stmt|;
name|mutateCoordinator
operator|.
name|delete
argument_list|(
name|EUROPE_UK
argument_list|,
operator|new
name|MutableRecord
argument_list|(
literal|3
argument_list|,
literal|"Hello streaming 1"
argument_list|,
operator|new
name|RecordIdentifier
argument_list|(
literal|1L
argument_list|,
name|encodeBucket
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|0L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|mutateCoordinator
operator|.
name|delete
argument_list|(
name|EUROPE_FRANCE
argument_list|,
operator|new
name|MutableRecord
argument_list|(
literal|5
argument_list|,
literal|"Bonjour streaming 1"
argument_list|,
operator|new
name|RecordIdentifier
argument_list|(
literal|1L
argument_list|,
name|encodeBucket
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|0L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|mutateCoordinator
operator|.
name|update
argument_list|(
name|EUROPE_FRANCE
argument_list|,
operator|new
name|MutableRecord
argument_list|(
literal|6
argument_list|,
literal|"UPDATED: Bonjour streaming 2"
argument_list|,
operator|new
name|RecordIdentifier
argument_list|(
literal|1L
argument_list|,
name|encodeBucket
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|1L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|mutateCoordinator
operator|.
name|close
argument_list|()
expr_stmt|;
name|mutateTransaction
operator|.
name|commit
argument_list|()
expr_stmt|;
name|assertThat
argument_list|(
name|mutateTransaction
operator|.
name|getState
argument_list|()
argument_list|,
name|is
argument_list|(
name|COMMITTED
argument_list|)
argument_list|)
expr_stmt|;
name|StreamingAssert
name|indiaAssertions
init|=
name|assertionFactory
operator|.
name|newStreamingAssert
argument_list|(
name|table
argument_list|,
name|ASIA_INDIA
argument_list|)
decl_stmt|;
name|indiaAssertions
operator|.
name|assertMinTransactionId
argument_list|(
literal|1L
argument_list|)
expr_stmt|;
name|indiaAssertions
operator|.
name|assertMaxTransactionId
argument_list|(
literal|2L
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Record
argument_list|>
name|indiaRecords
init|=
name|indiaAssertions
operator|.
name|readRecords
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|indiaRecords
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|indiaRecords
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRow
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"{1, Namaste streaming 1}"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|indiaRecords
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRecordIdentifier
argument_list|()
argument_list|,
name|is
argument_list|(
operator|new
name|RecordIdentifier
argument_list|(
literal|1L
argument_list|,
name|encodeBucket
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|0L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|indiaRecords
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getRow
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"{2, UPDATED: Namaste streaming 2}"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|indiaRecords
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getRecordIdentifier
argument_list|()
argument_list|,
name|is
argument_list|(
operator|new
name|RecordIdentifier
argument_list|(
literal|2L
argument_list|,
name|encodeBucket
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|0L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//with split update, new version of the row is a new insert
name|assertThat
argument_list|(
name|indiaRecords
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getRow
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"{20, Namaste streaming 3}"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|indiaRecords
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getRecordIdentifier
argument_list|()
argument_list|,
name|is
argument_list|(
operator|new
name|RecordIdentifier
argument_list|(
literal|2L
argument_list|,
name|encodeBucket
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|1L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|StreamingAssert
name|ukAssertions
init|=
name|assertionFactory
operator|.
name|newStreamingAssert
argument_list|(
name|table
argument_list|,
name|EUROPE_UK
argument_list|)
decl_stmt|;
name|ukAssertions
operator|.
name|assertMinTransactionId
argument_list|(
literal|1L
argument_list|)
expr_stmt|;
name|ukAssertions
operator|.
name|assertMaxTransactionId
argument_list|(
literal|2L
argument_list|)
expr_stmt|;
comment|//1 split since mutateTransaction txn just does deletes
name|List
argument_list|<
name|Record
argument_list|>
name|ukRecords
init|=
name|ukAssertions
operator|.
name|readRecords
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|ukRecords
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ukRecords
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRow
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"{4, Hello streaming 2}"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|ukRecords
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRecordIdentifier
argument_list|()
argument_list|,
name|is
argument_list|(
operator|new
name|RecordIdentifier
argument_list|(
literal|1L
argument_list|,
name|encodeBucket
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|1L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|StreamingAssert
name|franceAssertions
init|=
name|assertionFactory
operator|.
name|newStreamingAssert
argument_list|(
name|table
argument_list|,
name|EUROPE_FRANCE
argument_list|)
decl_stmt|;
name|franceAssertions
operator|.
name|assertMinTransactionId
argument_list|(
literal|1L
argument_list|)
expr_stmt|;
name|franceAssertions
operator|.
name|assertMaxTransactionId
argument_list|(
literal|2L
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Record
argument_list|>
name|franceRecords
init|=
name|franceAssertions
operator|.
name|readRecords
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|franceRecords
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|franceRecords
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRow
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"{6, UPDATED: Bonjour streaming 2}"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|franceRecords
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRecordIdentifier
argument_list|()
argument_list|,
name|is
argument_list|(
operator|new
name|RecordIdentifier
argument_list|(
literal|2L
argument_list|,
name|encodeBucket
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|0L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//with split update, new version of the row is a new insert
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

