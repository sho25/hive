begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
operator|.
name|worker
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|anyInt
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|anyList
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|anyLong
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|eq
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|never
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verifyZeroInteractions
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|RecordIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|orc
operator|.
name|OrcOutputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
operator|.
name|client
operator|.
name|AcidTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|runners
operator|.
name|MockitoJUnitRunner
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|MockitoJUnitRunner
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestMutatorCoordinator
block|{
specifier|private
specifier|static
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|UNPARTITIONED
init|=
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|PARTITION_B
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"B"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|PARTITION_A
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"A"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|long
name|TRANSACTION_ID
init|=
literal|2L
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|int
name|BUCKET_ID
init|=
literal|0
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Path
name|PATH_A
init|=
operator|new
name|Path
argument_list|(
literal|"X"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Path
name|PATH_B
init|=
operator|new
name|Path
argument_list|(
literal|"B"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Object
name|RECORD
init|=
literal|"RECORD"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|RecordIdentifier
name|ROW__ID_B0_R0
init|=
operator|new
name|RecordIdentifier
argument_list|(
literal|10L
argument_list|,
name|BUCKET_ID
argument_list|,
literal|0L
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|RecordIdentifier
name|ROW__ID_B0_R1
init|=
operator|new
name|RecordIdentifier
argument_list|(
literal|10L
argument_list|,
name|BUCKET_ID
argument_list|,
literal|1L
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|RecordIdentifier
name|ROW__ID_B1_R0
init|=
operator|new
name|RecordIdentifier
argument_list|(
literal|10L
argument_list|,
name|BUCKET_ID
operator|+
literal|1
argument_list|,
literal|0L
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|RecordIdentifier
name|ROW__ID_INSERT
init|=
operator|new
name|RecordIdentifier
argument_list|(
operator|-
literal|1L
argument_list|,
name|BUCKET_ID
argument_list|,
operator|-
literal|1L
argument_list|)
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|MutatorFactory
name|mockMutatorFactory
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|PartitionHelper
name|mockPartitionHelper
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|GroupingValidator
name|mockGroupingValidator
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|SequenceValidator
name|mockSequenceValidator
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|AcidTable
name|mockAcidTable
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|RecordInspector
name|mockRecordInspector
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|BucketIdResolver
name|mockBucketIdResolver
decl_stmt|;
annotation|@
name|Mock
specifier|private
name|Mutator
name|mockMutator
decl_stmt|;
specifier|private
name|MutatorCoordinator
name|coordinator
decl_stmt|;
specifier|private
name|HiveConf
name|configuration
init|=
operator|new
name|HiveConf
argument_list|()
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|createCoordinator
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|mockAcidTable
operator|.
name|getOutputFormatName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|OrcOutputFormat
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockAcidTable
operator|.
name|getTotalBuckets
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockAcidTable
operator|.
name|getTransactionId
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|TRANSACTION_ID
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockAcidTable
operator|.
name|createPartitions
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockMutatorFactory
operator|.
name|newRecordInspector
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockRecordInspector
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockMutatorFactory
operator|.
name|newBucketIdResolver
argument_list|(
name|anyInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockBucketIdResolver
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockMutatorFactory
operator|.
name|newMutator
argument_list|(
name|any
argument_list|(
name|OrcOutputFormat
operator|.
name|class
argument_list|)
argument_list|,
name|anyLong
argument_list|()
argument_list|,
name|any
argument_list|(
name|Path
operator|.
name|class
argument_list|)
argument_list|,
name|anyInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockMutator
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockPartitionHelper
operator|.
name|getPathForPartition
argument_list|(
name|any
argument_list|(
name|List
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|PATH_A
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockRecordInspector
operator|.
name|extractRecordIdentifier
argument_list|(
name|RECORD
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ROW__ID_INSERT
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockSequenceValidator
operator|.
name|isInSequence
argument_list|(
name|any
argument_list|(
name|RecordIdentifier
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockGroupingValidator
operator|.
name|isInSequence
argument_list|(
name|any
argument_list|(
name|List
operator|.
name|class
argument_list|)
argument_list|,
name|anyInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|coordinator
operator|=
operator|new
name|MutatorCoordinator
argument_list|(
name|configuration
argument_list|,
name|mockMutatorFactory
argument_list|,
name|mockPartitionHelper
argument_list|,
name|mockGroupingValidator
argument_list|,
name|mockSequenceValidator
argument_list|,
name|mockAcidTable
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|insert
parameter_list|()
throws|throws
name|Exception
block|{
name|coordinator
operator|.
name|insert
argument_list|(
name|UNPARTITIONED
argument_list|,
name|RECORD
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockPartitionHelper
argument_list|)
operator|.
name|createPartitionIfNotExists
argument_list|(
name|UNPARTITIONED
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMutatorFactory
argument_list|)
operator|.
name|newMutator
argument_list|(
name|any
argument_list|(
name|OrcOutputFormat
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|TRANSACTION_ID
argument_list|)
argument_list|,
name|eq
argument_list|(
name|PATH_A
argument_list|)
argument_list|,
name|eq
argument_list|(
name|BUCKET_ID
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMutator
argument_list|)
operator|.
name|insert
argument_list|(
name|RECORD
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|multipleInserts
parameter_list|()
throws|throws
name|Exception
block|{
name|coordinator
operator|.
name|insert
argument_list|(
name|UNPARTITIONED
argument_list|,
name|RECORD
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|insert
argument_list|(
name|UNPARTITIONED
argument_list|,
name|RECORD
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|insert
argument_list|(
name|UNPARTITIONED
argument_list|,
name|RECORD
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockPartitionHelper
argument_list|)
operator|.
name|createPartitionIfNotExists
argument_list|(
name|UNPARTITIONED
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMutatorFactory
argument_list|)
operator|.
name|newMutator
argument_list|(
name|any
argument_list|(
name|OrcOutputFormat
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|TRANSACTION_ID
argument_list|)
argument_list|,
name|eq
argument_list|(
name|PATH_A
argument_list|)
argument_list|,
name|eq
argument_list|(
name|BUCKET_ID
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMutator
argument_list|,
name|times
argument_list|(
literal|3
argument_list|)
argument_list|)
operator|.
name|insert
argument_list|(
name|RECORD
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|insertPartitionChanges
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|mockPartitionHelper
operator|.
name|getPathForPartition
argument_list|(
name|PARTITION_A
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|PATH_A
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockPartitionHelper
operator|.
name|getPathForPartition
argument_list|(
name|PARTITION_B
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|PATH_B
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|insert
argument_list|(
name|PARTITION_A
argument_list|,
name|RECORD
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|insert
argument_list|(
name|PARTITION_B
argument_list|,
name|RECORD
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockPartitionHelper
argument_list|)
operator|.
name|createPartitionIfNotExists
argument_list|(
name|PARTITION_A
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockPartitionHelper
argument_list|)
operator|.
name|createPartitionIfNotExists
argument_list|(
name|PARTITION_B
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMutatorFactory
argument_list|)
operator|.
name|newMutator
argument_list|(
name|any
argument_list|(
name|OrcOutputFormat
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|TRANSACTION_ID
argument_list|)
argument_list|,
name|eq
argument_list|(
name|PATH_A
argument_list|)
argument_list|,
name|eq
argument_list|(
name|BUCKET_ID
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMutatorFactory
argument_list|)
operator|.
name|newMutator
argument_list|(
name|any
argument_list|(
name|OrcOutputFormat
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|TRANSACTION_ID
argument_list|)
argument_list|,
name|eq
argument_list|(
name|PATH_B
argument_list|)
argument_list|,
name|eq
argument_list|(
name|BUCKET_ID
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMutator
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|insert
argument_list|(
name|RECORD
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|bucketChanges
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|mockRecordInspector
operator|.
name|extractRecordIdentifier
argument_list|(
name|RECORD
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ROW__ID_B0_R0
argument_list|,
name|ROW__ID_B1_R0
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockBucketIdResolver
operator|.
name|computeBucketId
argument_list|(
name|RECORD
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|update
argument_list|(
name|UNPARTITIONED
argument_list|,
name|RECORD
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|delete
argument_list|(
name|UNPARTITIONED
argument_list|,
name|RECORD
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMutatorFactory
argument_list|)
operator|.
name|newMutator
argument_list|(
name|any
argument_list|(
name|OrcOutputFormat
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|TRANSACTION_ID
argument_list|)
argument_list|,
name|eq
argument_list|(
name|PATH_A
argument_list|)
argument_list|,
name|eq
argument_list|(
name|BUCKET_ID
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMutatorFactory
argument_list|)
operator|.
name|newMutator
argument_list|(
name|any
argument_list|(
name|OrcOutputFormat
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|TRANSACTION_ID
argument_list|)
argument_list|,
name|eq
argument_list|(
name|PATH_A
argument_list|)
argument_list|,
name|eq
argument_list|(
name|BUCKET_ID
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMutator
argument_list|)
operator|.
name|update
argument_list|(
name|RECORD
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMutator
argument_list|)
operator|.
name|delete
argument_list|(
name|RECORD
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|partitionThenBucketChanges
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|mockRecordInspector
operator|.
name|extractRecordIdentifier
argument_list|(
name|RECORD
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ROW__ID_B0_R0
argument_list|,
name|ROW__ID_B0_R1
argument_list|,
name|ROW__ID_B1_R0
argument_list|,
name|ROW__ID_INSERT
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockBucketIdResolver
operator|.
name|computeBucketId
argument_list|(
name|RECORD
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockPartitionHelper
operator|.
name|getPathForPartition
argument_list|(
name|PARTITION_A
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|PATH_A
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockPartitionHelper
operator|.
name|getPathForPartition
argument_list|(
name|PARTITION_B
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|PATH_B
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|update
argument_list|(
name|PARTITION_A
argument_list|,
name|RECORD
argument_list|)
expr_stmt|;
comment|/* PaB0 */
name|coordinator
operator|.
name|insert
argument_list|(
name|PARTITION_B
argument_list|,
name|RECORD
argument_list|)
expr_stmt|;
comment|/* PbB0 */
name|coordinator
operator|.
name|delete
argument_list|(
name|PARTITION_B
argument_list|,
name|RECORD
argument_list|)
expr_stmt|;
comment|/* PbB0 */
name|coordinator
operator|.
name|update
argument_list|(
name|PARTITION_B
argument_list|,
name|RECORD
argument_list|)
expr_stmt|;
comment|/* PbB1 */
name|verify
argument_list|(
name|mockPartitionHelper
argument_list|)
operator|.
name|createPartitionIfNotExists
argument_list|(
name|PARTITION_B
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMutatorFactory
argument_list|)
operator|.
name|newMutator
argument_list|(
name|any
argument_list|(
name|OrcOutputFormat
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|TRANSACTION_ID
argument_list|)
argument_list|,
name|eq
argument_list|(
name|PATH_A
argument_list|)
argument_list|,
name|eq
argument_list|(
name|BUCKET_ID
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMutatorFactory
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|newMutator
argument_list|(
name|any
argument_list|(
name|OrcOutputFormat
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|TRANSACTION_ID
argument_list|)
argument_list|,
name|eq
argument_list|(
name|PATH_B
argument_list|)
argument_list|,
name|eq
argument_list|(
name|BUCKET_ID
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMutatorFactory
argument_list|)
operator|.
name|newMutator
argument_list|(
name|any
argument_list|(
name|OrcOutputFormat
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|TRANSACTION_ID
argument_list|)
argument_list|,
name|eq
argument_list|(
name|PATH_B
argument_list|)
argument_list|,
name|eq
argument_list|(
name|BUCKET_ID
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMutator
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|update
argument_list|(
name|RECORD
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMutator
argument_list|)
operator|.
name|delete
argument_list|(
name|RECORD
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMutator
argument_list|)
operator|.
name|insert
argument_list|(
name|RECORD
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockSequenceValidator
argument_list|,
name|times
argument_list|(
literal|4
argument_list|)
argument_list|)
operator|.
name|reset
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|partitionThenBucketChangesNoCreateAsPartitionEstablished
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|mockRecordInspector
operator|.
name|extractRecordIdentifier
argument_list|(
name|RECORD
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ROW__ID_B0_R0
argument_list|,
name|ROW__ID_INSERT
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockBucketIdResolver
operator|.
name|computeBucketId
argument_list|(
name|RECORD
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockPartitionHelper
operator|.
name|getPathForPartition
argument_list|(
name|PARTITION_B
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|PATH_B
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|delete
argument_list|(
name|PARTITION_B
argument_list|,
name|RECORD
argument_list|)
expr_stmt|;
comment|/* PbB0 */
name|coordinator
operator|.
name|insert
argument_list|(
name|PARTITION_B
argument_list|,
name|RECORD
argument_list|)
expr_stmt|;
comment|/* PbB0 */
name|verify
argument_list|(
name|mockPartitionHelper
argument_list|,
name|never
argument_list|()
argument_list|)
operator|.
name|createPartitionIfNotExists
argument_list|(
name|anyList
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|RecordSequenceException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|outOfSequence
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|mockSequenceValidator
operator|.
name|isInSequence
argument_list|(
name|any
argument_list|(
name|RecordIdentifier
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|update
argument_list|(
name|UNPARTITIONED
argument_list|,
name|RECORD
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|delete
argument_list|(
name|UNPARTITIONED
argument_list|,
name|RECORD
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockPartitionHelper
argument_list|)
operator|.
name|createPartitionIfNotExists
argument_list|(
name|UNPARTITIONED
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMutatorFactory
argument_list|)
operator|.
name|newMutator
argument_list|(
name|any
argument_list|(
name|OrcOutputFormat
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|TRANSACTION_ID
argument_list|)
argument_list|,
name|eq
argument_list|(
name|PATH_A
argument_list|)
argument_list|,
name|eq
argument_list|(
name|BUCKET_ID
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMutator
argument_list|)
operator|.
name|update
argument_list|(
name|RECORD
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMutator
argument_list|)
operator|.
name|delete
argument_list|(
name|RECORD
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|GroupRevisitedException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|revisitGroup
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|mockGroupingValidator
operator|.
name|isInSequence
argument_list|(
name|any
argument_list|(
name|List
operator|.
name|class
argument_list|)
argument_list|,
name|anyInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|update
argument_list|(
name|UNPARTITIONED
argument_list|,
name|RECORD
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|delete
argument_list|(
name|UNPARTITIONED
argument_list|,
name|RECORD
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockPartitionHelper
argument_list|)
operator|.
name|createPartitionIfNotExists
argument_list|(
name|UNPARTITIONED
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMutatorFactory
argument_list|)
operator|.
name|newMutator
argument_list|(
name|any
argument_list|(
name|OrcOutputFormat
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|TRANSACTION_ID
argument_list|)
argument_list|,
name|eq
argument_list|(
name|PATH_A
argument_list|)
argument_list|,
name|eq
argument_list|(
name|BUCKET_ID
argument_list|)
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMutator
argument_list|)
operator|.
name|update
argument_list|(
name|RECORD
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockMutator
argument_list|)
operator|.
name|delete
argument_list|(
name|RECORD
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|BucketIdException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|insertWithBadBucket
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|mockRecordInspector
operator|.
name|extractRecordIdentifier
argument_list|(
name|RECORD
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ROW__ID_B0_R0
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockBucketIdResolver
operator|.
name|computeBucketId
argument_list|(
name|RECORD
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|insert
argument_list|(
name|UNPARTITIONED
argument_list|,
name|RECORD
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|BucketIdException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|updateWithBadBucket
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|mockRecordInspector
operator|.
name|extractRecordIdentifier
argument_list|(
name|RECORD
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ROW__ID_B0_R0
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockBucketIdResolver
operator|.
name|computeBucketId
argument_list|(
name|RECORD
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|update
argument_list|(
name|UNPARTITIONED
argument_list|,
name|RECORD
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|deleteWithBadBucket
parameter_list|()
throws|throws
name|Exception
block|{
name|when
argument_list|(
name|mockRecordInspector
operator|.
name|extractRecordIdentifier
argument_list|(
name|RECORD
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ROW__ID_B0_R0
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockBucketIdResolver
operator|.
name|computeBucketId
argument_list|(
name|RECORD
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|delete
argument_list|(
name|UNPARTITIONED
argument_list|,
name|RECORD
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|closeNoRecords
parameter_list|()
throws|throws
name|Exception
block|{
name|coordinator
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// No mutator created
name|verifyZeroInteractions
argument_list|(
name|mockMutator
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|closeUsedCoordinator
parameter_list|()
throws|throws
name|Exception
block|{
name|coordinator
operator|.
name|insert
argument_list|(
name|UNPARTITIONED
argument_list|,
name|RECORD
argument_list|)
expr_stmt|;
name|coordinator
operator|.
name|close
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|mockMutator
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|mockPartitionHelper
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

