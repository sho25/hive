begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
operator|.
name|worker
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|AcidOutputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|RecordIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|StructField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|StructObjectInspector
import|;
end_import

begin_comment
comment|/**  * Standard {@link RecordInspector} implementation that uses the supplied {@link ObjectInspector} and  * {@link AcidOutputFormat.Options#recordIdColumn(int) record id column} to extract {@link RecordIdentifier  * RecordIdentifiers}, and calculate bucket ids from records.  * @deprecated as of Hive 3.0.0  */
end_comment

begin_class
annotation|@
name|Deprecated
specifier|public
class|class
name|RecordInspectorImpl
implements|implements
name|RecordInspector
block|{
specifier|private
specifier|final
name|StructObjectInspector
name|structObjectInspector
decl_stmt|;
specifier|private
specifier|final
name|StructField
name|recordIdentifierField
decl_stmt|;
comment|/**    * Note that all column indexes are with respect to your record structure, not the Hive table structure.    */
specifier|public
name|RecordInspectorImpl
parameter_list|(
name|ObjectInspector
name|objectInspector
parameter_list|,
name|int
name|recordIdColumn
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|objectInspector
operator|instanceof
name|StructObjectInspector
operator|)
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Serious problem, expected a StructObjectInspector, "
operator|+
literal|"but got a "
operator|+
name|objectInspector
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
throw|;
block|}
name|structObjectInspector
operator|=
operator|(
name|StructObjectInspector
operator|)
name|objectInspector
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|StructField
argument_list|>
name|structFields
init|=
name|structObjectInspector
operator|.
name|getAllStructFieldRefs
argument_list|()
decl_stmt|;
name|recordIdentifierField
operator|=
name|structFields
operator|.
name|get
argument_list|(
name|recordIdColumn
argument_list|)
expr_stmt|;
block|}
specifier|public
name|RecordIdentifier
name|extractRecordIdentifier
parameter_list|(
name|Object
name|record
parameter_list|)
block|{
return|return
operator|(
name|RecordIdentifier
operator|)
name|structObjectInspector
operator|.
name|getStructFieldData
argument_list|(
name|record
argument_list|,
name|recordIdentifierField
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"RecordInspectorImpl [structObjectInspector="
operator|+
name|structObjectInspector
operator|+
literal|", recordIdentifierField="
operator|+
name|recordIdentifierField
operator|+
literal|"]"
return|;
block|}
block|}
end_class

end_unit

