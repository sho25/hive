begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|InvocationHandler
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|InvocationTargetException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Proxy
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|UndeclaredThrowableException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PrivilegedExceptionAction
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|HiveMetaStoreClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|IMetaStoreClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|MetaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|TException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|reflect
operator|.
name|AbstractInvocationHandler
import|;
end_import

begin_comment
comment|/**  * Creates a proxied {@link IMetaStoreClient client} that wraps calls in a {@link PrivilegedExceptionAction} if the  * {@link UserGroupInformation} is specified. Invokes directly otherwise.  * @deprecated as of Hive 3.0.0  */
end_comment

begin_class
annotation|@
name|Deprecated
specifier|public
class|class
name|UgiMetaStoreClientFactory
block|{
specifier|private
specifier|static
name|Set
argument_list|<
name|Method
argument_list|>
name|I_META_STORE_CLIENT_METHODS
init|=
name|getIMetaStoreClientMethods
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|String
name|metaStoreUri
decl_stmt|;
specifier|private
specifier|final
name|HiveConf
name|conf
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|secureMode
decl_stmt|;
specifier|private
specifier|final
name|UserGroupInformation
name|authenticatedUser
decl_stmt|;
specifier|private
specifier|final
name|String
name|user
decl_stmt|;
specifier|public
name|UgiMetaStoreClientFactory
parameter_list|(
name|String
name|metaStoreUri
parameter_list|,
name|HiveConf
name|conf
parameter_list|,
name|UserGroupInformation
name|authenticatedUser
parameter_list|,
name|String
name|user
parameter_list|,
name|boolean
name|secureMode
parameter_list|)
block|{
name|this
operator|.
name|metaStoreUri
operator|=
name|metaStoreUri
expr_stmt|;
name|this
operator|.
name|conf
operator|=
name|conf
expr_stmt|;
name|this
operator|.
name|authenticatedUser
operator|=
name|authenticatedUser
expr_stmt|;
name|this
operator|.
name|user
operator|=
name|user
expr_stmt|;
name|this
operator|.
name|secureMode
operator|=
name|secureMode
expr_stmt|;
if|if
condition|(
name|metaStoreUri
operator|!=
literal|null
condition|)
block|{
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTOREURIS
argument_list|,
name|metaStoreUri
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|secureMode
condition|)
block|{
name|conf
operator|.
name|setBoolVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTORE_USE_THRIFT_SASL
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|IMetaStoreClient
name|newInstance
parameter_list|()
throws|throws
name|MetaException
block|{
return|return
name|newInstance
argument_list|(
operator|new
name|HiveMetaStoreClient
argument_list|(
name|conf
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|IMetaStoreClient
name|newInstance
parameter_list|(
name|IMetaStoreClient
name|delegate
parameter_list|)
throws|throws
name|MetaException
block|{
return|return
name|createProxy
argument_list|(
name|delegate
argument_list|,
name|user
argument_list|,
name|authenticatedUser
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"UgiMetaStoreClientFactory [metaStoreUri="
operator|+
name|metaStoreUri
operator|+
literal|", secureMode="
operator|+
name|secureMode
operator|+
literal|", authenticatedUser="
operator|+
name|authenticatedUser
operator|+
literal|", user="
operator|+
name|user
operator|+
literal|"]"
return|;
block|}
specifier|private
name|IMetaStoreClient
name|createProxy
parameter_list|(
specifier|final
name|IMetaStoreClient
name|delegate
parameter_list|,
specifier|final
name|String
name|user
parameter_list|,
specifier|final
name|UserGroupInformation
name|authenticatedUser
parameter_list|)
block|{
name|InvocationHandler
name|handler
init|=
operator|new
name|AbstractInvocationHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|Object
name|handleInvocation
parameter_list|(
name|Object
name|proxy
parameter_list|,
specifier|final
name|Method
name|method
parameter_list|,
specifier|final
name|Object
index|[]
name|args
parameter_list|)
throws|throws
name|Throwable
block|{
try|try
block|{
if|if
condition|(
operator|!
name|I_META_STORE_CLIENT_METHODS
operator|.
name|contains
argument_list|(
name|method
argument_list|)
operator|||
name|authenticatedUser
operator|==
literal|null
condition|)
block|{
return|return
name|method
operator|.
name|invoke
argument_list|(
name|delegate
argument_list|,
name|args
argument_list|)
return|;
block|}
try|try
block|{
return|return
name|authenticatedUser
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|Object
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Object
name|run
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|method
operator|.
name|invoke
argument_list|(
name|delegate
argument_list|,
name|args
argument_list|)
return|;
block|}
block|}
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
decl||
name|InterruptedException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|TException
argument_list|(
literal|"PrivilegedExceptionAction failed as user '"
operator|+
name|user
operator|+
literal|"'."
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
catch|catch
parameter_list|(
name|UndeclaredThrowableException
decl||
name|InvocationTargetException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|getCause
argument_list|()
throw|;
block|}
block|}
block|}
decl_stmt|;
name|ClassLoader
name|classLoader
init|=
name|IMetaStoreClient
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
index|[]
name|interfaces
init|=
operator|new
name|Class
argument_list|<
name|?
argument_list|>
index|[]
block|{
name|IMetaStoreClient
operator|.
name|class
block|}
empty_stmt|;
name|Object
name|proxy
init|=
name|Proxy
operator|.
name|newProxyInstance
argument_list|(
name|classLoader
argument_list|,
name|interfaces
argument_list|,
name|handler
argument_list|)
decl_stmt|;
return|return
name|IMetaStoreClient
operator|.
name|class
operator|.
name|cast
argument_list|(
name|proxy
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|Set
argument_list|<
name|Method
argument_list|>
name|getIMetaStoreClientMethods
parameter_list|()
block|{
return|return
operator|new
name|HashSet
argument_list|<>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|IMetaStoreClient
operator|.
name|class
operator|.
name|getDeclaredMethods
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

