begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|streaming
operator|.
name|mutate
operator|.
name|client
operator|.
name|lock
package|;
end_package

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/** Provides a means to handle the situation when a held lock fails. */
end_comment

begin_interface
specifier|public
interface|interface
name|LockFailureListener
block|{
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|LockFailureListener
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|static
specifier|final
name|LockFailureListener
name|NULL_LISTENER
init|=
operator|new
name|LockFailureListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|lockFailed
parameter_list|(
name|long
name|lockId
parameter_list|,
name|Long
name|transactionId
parameter_list|,
name|Iterable
argument_list|<
name|String
argument_list|>
name|tableNames
parameter_list|,
name|Throwable
name|t
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Ignored lock failure: lockId="
operator|+
name|lockId
operator|+
literal|", transactionId="
operator|+
name|transactionId
operator|+
literal|", tables="
operator|+
name|tableNames
argument_list|,
name|t
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|LockFailureListener
operator|.
name|class
operator|.
name|getName
argument_list|()
operator|+
literal|".NULL_LISTENER"
return|;
block|}
block|}
decl_stmt|;
comment|/** Called when the specified lock has failed. You should probably abort your job in this case. */
name|void
name|lockFailed
parameter_list|(
name|long
name|lockId
parameter_list|,
name|Long
name|transactionId
parameter_list|,
name|Iterable
argument_list|<
name|String
argument_list|>
name|tableNames
parameter_list|,
name|Throwable
name|t
parameter_list|)
function_decl|;
block|}
end_interface

end_unit

