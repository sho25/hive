begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|hbase
operator|.
name|snapshot
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * The snapshot for a table and a list of column families.  */
end_comment

begin_class
specifier|public
class|class
name|TableSnapshot
implements|implements
name|Serializable
block|{
specifier|private
name|String
name|name
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|cfRevisionMap
decl_stmt|;
specifier|private
name|long
name|latestRevision
decl_stmt|;
specifier|public
name|TableSnapshot
parameter_list|(
name|String
name|name
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|cfRevMap
parameter_list|,
name|long
name|latestRevision
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
if|if
condition|(
name|cfRevMap
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"revision map cannot be null"
argument_list|)
throw|;
block|}
name|this
operator|.
name|cfRevisionMap
operator|=
name|cfRevMap
expr_stmt|;
name|this
operator|.
name|latestRevision
operator|=
name|latestRevision
expr_stmt|;
block|}
comment|/**      * Gets the table name.      *      * @return String The name of the table.      */
specifier|public
name|String
name|getTableName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
comment|/**      * Gets the column families.      *      * @return List<String> A list of column families associated with the snapshot.      */
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getColumnFamilies
parameter_list|()
block|{
return|return
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|(
name|this
operator|.
name|cfRevisionMap
operator|.
name|keySet
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Gets the revision.      *      * @param familyName The name of the column family.      * @return the revision      */
specifier|public
name|long
name|getRevision
parameter_list|(
name|String
name|familyName
parameter_list|)
block|{
if|if
condition|(
name|cfRevisionMap
operator|.
name|containsKey
argument_list|(
name|familyName
argument_list|)
condition|)
return|return
name|cfRevisionMap
operator|.
name|get
argument_list|(
name|familyName
argument_list|)
return|;
return|return
name|latestRevision
return|;
block|}
comment|/**      * @return the latest committed revision when this snapshot was taken      */
specifier|public
name|long
name|getLatestRevision
parameter_list|()
block|{
return|return
name|latestRevision
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|String
name|snapshot
init|=
literal|"Table Name : "
operator|+
name|name
operator|+
literal|" Latest Revision: "
operator|+
name|latestRevision
operator|+
literal|" Column Familiy revision : "
operator|+
name|cfRevisionMap
operator|.
name|toString
argument_list|()
decl_stmt|;
return|return
name|snapshot
return|;
block|}
block|}
end_class

end_unit

