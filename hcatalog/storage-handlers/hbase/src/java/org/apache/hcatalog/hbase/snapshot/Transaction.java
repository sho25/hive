begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|hbase
operator|.
name|snapshot
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * This class is responsible for storing information related to  * transactions.  */
end_comment

begin_class
specifier|public
class|class
name|Transaction
implements|implements
name|Serializable
block|{
specifier|private
name|String
name|tableName
decl_stmt|;
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|columnFamilies
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|long
name|timeStamp
decl_stmt|;
specifier|private
name|long
name|keepAlive
decl_stmt|;
specifier|private
name|long
name|revision
decl_stmt|;
name|Transaction
parameter_list|(
name|String
name|tableName
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|columnFamilies
parameter_list|,
name|long
name|revision
parameter_list|,
name|long
name|timestamp
parameter_list|)
block|{
name|this
operator|.
name|tableName
operator|=
name|tableName
expr_stmt|;
name|this
operator|.
name|columnFamilies
operator|=
name|columnFamilies
expr_stmt|;
name|this
operator|.
name|timeStamp
operator|=
name|timestamp
expr_stmt|;
name|this
operator|.
name|revision
operator|=
name|revision
expr_stmt|;
block|}
comment|/**      * @return The revision number associated with a transaction.      */
specifier|public
name|long
name|getRevisionNumber
parameter_list|()
block|{
return|return
name|this
operator|.
name|revision
return|;
block|}
comment|/**      * @return The table name associated with a transaction.      */
specifier|public
name|String
name|getTableName
parameter_list|()
block|{
return|return
name|tableName
return|;
block|}
comment|/**      * @return The column families associated with a transaction.      */
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getColumnFamilies
parameter_list|()
block|{
return|return
name|columnFamilies
return|;
block|}
comment|/**      * @return The expire timestamp associated with a transaction.      */
name|long
name|getTransactionExpireTimeStamp
parameter_list|()
block|{
return|return
name|this
operator|.
name|timeStamp
operator|+
name|this
operator|.
name|keepAlive
return|;
block|}
name|void
name|setKeepAlive
parameter_list|(
name|long
name|seconds
parameter_list|)
block|{
name|this
operator|.
name|keepAlive
operator|=
name|seconds
expr_stmt|;
block|}
comment|/**      * Gets the keep alive value.      *      * @return long  The keep alive value for the transaction.      */
specifier|public
name|long
name|getKeepAliveValue
parameter_list|()
block|{
return|return
name|this
operator|.
name|keepAlive
return|;
block|}
comment|/**      * Gets the family revision info.      *      * @return FamilyRevision An instance of FamilyRevision associated with the transaction.      */
name|FamilyRevision
name|getFamilyRevisionInfo
parameter_list|()
block|{
return|return
operator|new
name|FamilyRevision
argument_list|(
name|revision
argument_list|,
name|getTransactionExpireTimeStamp
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Keep alive transaction. This methods extends the expire timestamp of a      * transaction by the "keep alive" amount.      */
name|void
name|keepAliveTransaction
parameter_list|()
block|{
name|this
operator|.
name|timeStamp
operator|=
name|this
operator|.
name|timeStamp
operator|+
name|this
operator|.
name|keepAlive
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"Revision : "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|getRevisionNumber
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|" Timestamp : "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|getTransactionExpireTimeStamp
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"\n"
argument_list|)
operator|.
name|append
argument_list|(
literal|"Table : "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|tableName
argument_list|)
operator|.
name|append
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"Column Families : "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|columnFamilies
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

