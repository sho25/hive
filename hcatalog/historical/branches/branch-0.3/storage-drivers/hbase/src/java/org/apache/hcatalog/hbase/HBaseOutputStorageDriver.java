begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|hbase
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Writable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|WritableComparable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|JobContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|OutputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskAttemptContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|data
operator|.
name|HCatRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|data
operator|.
name|schema
operator|.
name|HCatSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|mapreduce
operator|.
name|HCatOutputStorageDriver
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_comment
comment|/**  * Forwarding HBaseOutputStorageDriver, actual implementation is decided by a configuration  * {@link HBaseConstants.PROPERTY_OSD_BULK_MODE_KEY} which defaults to HBaseBulkOutputStorageDriver  */
end_comment

begin_class
specifier|public
class|class
name|HBaseOutputStorageDriver
extends|extends
name|HCatOutputStorageDriver
block|{
specifier|private
name|HBaseBulkOutputStorageDriver
name|bulkOSD
init|=
operator|new
name|HBaseBulkOutputStorageDriver
argument_list|()
decl_stmt|;
specifier|private
name|HBaseDirectOutputStorageDriver
name|directOSD
init|=
operator|new
name|HBaseDirectOutputStorageDriver
argument_list|()
decl_stmt|;
specifier|private
name|HBaseBaseOutputStorageDriver
name|activeOSD
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|initialize
parameter_list|(
name|JobContext
name|context
parameter_list|,
name|Properties
name|hcatProperties
parameter_list|)
throws|throws
name|IOException
block|{
name|super
operator|.
name|initialize
argument_list|(
name|context
argument_list|,
name|hcatProperties
argument_list|)
expr_stmt|;
name|determineOSD
argument_list|(
name|context
operator|.
name|getConfiguration
argument_list|()
argument_list|,
name|hcatProperties
argument_list|)
expr_stmt|;
name|activeOSD
operator|.
name|initialize
argument_list|(
name|context
argument_list|,
name|hcatProperties
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|WritableComparable
argument_list|<
name|?
argument_list|>
name|generateKey
parameter_list|(
name|HCatRecord
name|value
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|activeOSD
operator|.
name|generateKey
argument_list|(
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Writable
name|convertValue
parameter_list|(
name|HCatRecord
name|value
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|activeOSD
operator|.
name|convertValue
argument_list|(
name|value
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getOutputLocation
parameter_list|(
name|JobContext
name|jobContext
parameter_list|,
name|String
name|tableLocation
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|partitionCols
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionValues
parameter_list|,
name|String
name|dynHash
parameter_list|)
throws|throws
name|IOException
block|{
comment|//sanity check since we can't determine which will be used till initialize
comment|//and this method gets called before that
name|String
name|l1
init|=
name|bulkOSD
operator|.
name|getOutputLocation
argument_list|(
name|jobContext
argument_list|,
name|tableLocation
argument_list|,
name|partitionCols
argument_list|,
name|partitionValues
argument_list|,
name|dynHash
argument_list|)
decl_stmt|;
name|String
name|l2
init|=
name|directOSD
operator|.
name|getOutputLocation
argument_list|(
name|jobContext
argument_list|,
name|tableLocation
argument_list|,
name|partitionCols
argument_list|,
name|partitionValues
argument_list|,
name|dynHash
argument_list|)
decl_stmt|;
if|if
condition|(
name|l1
operator|!=
literal|null
operator|||
name|l2
operator|!=
literal|null
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"bulkOSD or directOSD returns a non-null path for getOutputLocation()"
argument_list|)
throw|;
block|}
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|Path
name|getWorkFilePath
parameter_list|(
name|TaskAttemptContext
name|context
parameter_list|,
name|String
name|outputLoc
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|activeOSD
operator|.
name|getWorkFilePath
argument_list|(
name|context
argument_list|,
name|outputLoc
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|OutputFormat
argument_list|<
name|?
extends|extends
name|WritableComparable
argument_list|<
name|?
argument_list|>
argument_list|,
name|?
extends|extends
name|Writable
argument_list|>
name|getOutputFormat
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|activeOSD
operator|.
name|getOutputFormat
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setOutputPath
parameter_list|(
name|JobContext
name|jobContext
parameter_list|,
name|String
name|location
parameter_list|)
throws|throws
name|IOException
block|{
name|directOSD
operator|.
name|setOutputPath
argument_list|(
name|jobContext
argument_list|,
name|location
argument_list|)
expr_stmt|;
name|bulkOSD
operator|.
name|setOutputPath
argument_list|(
name|jobContext
argument_list|,
name|location
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setSchema
parameter_list|(
name|JobContext
name|jobContext
parameter_list|,
name|HCatSchema
name|schema
parameter_list|)
throws|throws
name|IOException
block|{
name|directOSD
operator|.
name|setSchema
argument_list|(
name|jobContext
argument_list|,
name|schema
argument_list|)
expr_stmt|;
name|bulkOSD
operator|.
name|setSchema
argument_list|(
name|jobContext
argument_list|,
name|schema
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setPartitionValues
parameter_list|(
name|JobContext
name|jobContext
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionValues
parameter_list|)
throws|throws
name|IOException
block|{
name|directOSD
operator|.
name|setPartitionValues
argument_list|(
name|jobContext
argument_list|,
name|partitionValues
argument_list|)
expr_stmt|;
name|bulkOSD
operator|.
name|setPartitionValues
argument_list|(
name|jobContext
argument_list|,
name|partitionValues
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|determineOSD
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|Properties
name|prop
parameter_list|)
block|{
if|if
condition|(
name|activeOSD
operator|!=
literal|null
condition|)
return|return;
name|String
name|bulkMode
init|=
name|conf
operator|.
name|get
argument_list|(
name|HBaseConstants
operator|.
name|PROPERTY_OSD_BULK_MODE_KEY
argument_list|)
decl_stmt|;
if|if
condition|(
name|bulkMode
operator|==
literal|null
operator|&&
name|prop
operator|!=
literal|null
condition|)
name|bulkMode
operator|=
name|prop
operator|.
name|getProperty
argument_list|(
name|HBaseConstants
operator|.
name|PROPERTY_OSD_BULK_MODE_KEY
argument_list|)
expr_stmt|;
if|if
condition|(
name|bulkMode
operator|!=
literal|null
operator|&&
operator|!
name|Boolean
operator|.
name|valueOf
argument_list|(
name|bulkMode
argument_list|)
condition|)
block|{
name|activeOSD
operator|=
name|directOSD
expr_stmt|;
name|bulkOSD
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|activeOSD
operator|=
name|bulkOSD
expr_stmt|;
name|directOSD
operator|=
literal|null
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

