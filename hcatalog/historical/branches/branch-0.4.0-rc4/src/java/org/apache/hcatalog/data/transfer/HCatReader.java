begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|data
operator|.
name|transfer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|common
operator|.
name|HCatException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|data
operator|.
name|HCatRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|data
operator|.
name|transfer
operator|.
name|state
operator|.
name|StateProvider
import|;
end_import

begin_comment
comment|/** This abstract class is internal to HCatalog and abstracts away the notion of   * underlying system from which reads will be done.   */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|HCatReader
block|{
comment|/** This should be called at master node to obtain {@link ReaderContext} which then should be 	 * serialized and sent to slave nodes. 	 * @return {@link ReaderContext} 	 * @throws HCatException 	 */
specifier|public
specifier|abstract
name|ReaderContext
name|prepareRead
parameter_list|()
throws|throws
name|HCatException
function_decl|;
comment|/** This should be called at slave nodes to read {@link HCatRecord}s 	 * @return {@link Iterator} of {@link HCatRecord} 	 * @throws HCatException 	 */
specifier|public
specifier|abstract
name|Iterator
argument_list|<
name|HCatRecord
argument_list|>
name|read
parameter_list|()
throws|throws
name|HCatException
function_decl|;
comment|/** This constructor will be invoked by {@link DataTransferFactory} at master node. 	 * Don't use this constructor. Instead, use {@link DataTransferFactory}   	 * @param re 	 * @param config 	 */
specifier|protected
name|HCatReader
parameter_list|(
specifier|final
name|ReadEntity
name|re
parameter_list|,
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|config
parameter_list|)
block|{
name|this
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|this
operator|.
name|re
operator|=
name|re
expr_stmt|;
block|}
comment|/** This constructor will be invoked by {@link DataTransferFactory} at slave nodes. 	 * Don't use this constructor. Instead, use {@link DataTransferFactory}  	 * @param config 	 * @param sp 	 */
specifier|protected
name|HCatReader
parameter_list|(
specifier|final
name|Configuration
name|config
parameter_list|,
name|StateProvider
name|sp
parameter_list|)
block|{
name|this
operator|.
name|conf
operator|=
name|config
expr_stmt|;
name|this
operator|.
name|sp
operator|=
name|sp
expr_stmt|;
block|}
specifier|protected
name|ReadEntity
name|re
decl_stmt|;
comment|// This will be null at slaves.
specifier|protected
name|Configuration
name|conf
decl_stmt|;
specifier|protected
name|ReaderContext
name|info
decl_stmt|;
specifier|protected
name|StateProvider
name|sp
decl_stmt|;
comment|// This will be null at master.
specifier|private
name|HCatReader
parameter_list|(
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|config
parameter_list|)
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
if|if
condition|(
literal|null
operator|!=
name|config
condition|)
block|{
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|kv
range|:
name|config
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|conf
operator|.
name|set
argument_list|(
name|kv
operator|.
name|getKey
argument_list|()
argument_list|,
name|kv
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|this
operator|.
name|conf
operator|=
name|conf
expr_stmt|;
block|}
specifier|public
name|Configuration
name|getConf
parameter_list|()
block|{
if|if
condition|(
literal|null
operator|==
name|conf
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"HCatReader is not constructed correctly."
argument_list|)
throw|;
block|}
return|return
name|conf
return|;
block|}
block|}
end_class

end_unit

