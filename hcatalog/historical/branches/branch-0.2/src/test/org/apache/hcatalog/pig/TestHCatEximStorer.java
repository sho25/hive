begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|pig
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|MiniCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|common
operator|.
name|HCatConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|common
operator|.
name|HCatUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|data
operator|.
name|schema
operator|.
name|HCatFieldSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|data
operator|.
name|schema
operator|.
name|HCatSchemaUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|FieldSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Partition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
operator|.
name|EximUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pig
operator|.
name|ExecType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pig
operator|.
name|PigServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pig
operator|.
name|impl
operator|.
name|logicalLayer
operator|.
name|FrontendException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pig
operator|.
name|impl
operator|.
name|util
operator|.
name|UDFContext
import|;
end_import

begin_class
specifier|public
class|class
name|TestHCatEximStorer
extends|extends
name|TestCase
block|{
specifier|private
specifier|static
specifier|final
name|String
name|NONPART_TABLE
init|=
literal|"junit_unparted"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PARTITIONED_TABLE
init|=
literal|"junit_parted"
decl_stmt|;
specifier|private
specifier|static
name|MiniCluster
name|cluster
init|=
name|MiniCluster
operator|.
name|buildCluster
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|dataLocation
init|=
literal|"/tmp/data"
decl_stmt|;
specifier|private
specifier|static
name|String
name|fqdataLocation
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|exportLocation
init|=
literal|"/tmp/export"
decl_stmt|;
specifier|private
specifier|static
name|String
name|fqexportLocation
decl_stmt|;
specifier|private
specifier|static
name|Properties
name|props
decl_stmt|;
specifier|private
name|void
name|cleanup
parameter_list|()
throws|throws
name|IOException
block|{
name|MiniCluster
operator|.
name|deleteFile
argument_list|(
name|cluster
argument_list|,
name|dataLocation
argument_list|)
expr_stmt|;
name|MiniCluster
operator|.
name|deleteFile
argument_list|(
name|cluster
argument_list|,
name|exportLocation
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|props
operator|=
operator|new
name|Properties
argument_list|()
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"fs.default.name"
argument_list|,
name|cluster
operator|.
name|getProperties
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"fs.default.name"
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Filesystem class : "
operator|+
name|cluster
operator|.
name|getFileSystem
argument_list|()
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|", fs.default.name : "
operator|+
name|props
operator|.
name|getProperty
argument_list|(
literal|"fs.default.name"
argument_list|)
argument_list|)
expr_stmt|;
name|fqdataLocation
operator|=
name|cluster
operator|.
name|getProperties
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"fs.default.name"
argument_list|)
operator|+
name|dataLocation
expr_stmt|;
name|fqexportLocation
operator|=
name|cluster
operator|.
name|getProperties
argument_list|()
operator|.
name|getProperty
argument_list|(
literal|"fs.default.name"
argument_list|)
operator|+
name|exportLocation
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"FQ Data Location :"
operator|+
name|fqdataLocation
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"FQ Export Location :"
operator|+
name|fqexportLocation
argument_list|)
expr_stmt|;
name|cleanup
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|cleanup
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|populateDataFile
parameter_list|()
throws|throws
name|IOException
block|{
name|MiniCluster
operator|.
name|deleteFile
argument_list|(
name|cluster
argument_list|,
name|dataLocation
argument_list|)
expr_stmt|;
name|String
index|[]
name|input
init|=
operator|new
name|String
index|[]
block|{
literal|"237,Krishna,01/01/1990,M,IN,TN"
block|,
literal|"238,Kalpana,01/01/2000,F,IN,KA"
block|,
literal|"239,Satya,01/01/2001,M,US,TN"
block|,
literal|"240,Kavya,01/01/2002,F,US,KA"
block|}
decl_stmt|;
name|MiniCluster
operator|.
name|createInputFile
argument_list|(
name|cluster
argument_list|,
name|dataLocation
argument_list|,
name|input
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testStoreNonPartTable
parameter_list|()
throws|throws
name|Exception
block|{
name|populateDataFile
argument_list|()
expr_stmt|;
name|PigServer
name|server
init|=
operator|new
name|PigServer
argument_list|(
name|ExecType
operator|.
name|LOCAL
argument_list|,
name|props
argument_list|)
decl_stmt|;
name|UDFContext
operator|.
name|getUDFContext
argument_list|()
operator|.
name|setClientSystemProps
argument_list|()
expr_stmt|;
name|server
operator|.
name|setBatchOn
argument_list|()
expr_stmt|;
name|server
operator|.
name|registerQuery
argument_list|(
literal|"A = load '"
operator|+
name|fqdataLocation
operator|+
literal|"' using PigStorage(',') as (emp_id:int, emp_name:chararray, emp_dob:chararray, emp_sex:chararray);"
argument_list|)
expr_stmt|;
name|server
operator|.
name|registerQuery
argument_list|(
literal|"store A into '"
operator|+
name|NONPART_TABLE
operator|+
literal|"' using org.apache.hcatalog.pig.HCatEximStorer('"
operator|+
name|fqexportLocation
operator|+
literal|"');"
argument_list|)
expr_stmt|;
name|server
operator|.
name|executeBatch
argument_list|()
expr_stmt|;
name|FileSystem
name|fs
init|=
name|cluster
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Filesystem class : "
operator|+
name|cluster
operator|.
name|getFileSystem
argument_list|()
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|", fs.default.name : "
operator|+
name|props
operator|.
name|getProperty
argument_list|(
literal|"fs.default.name"
argument_list|)
argument_list|)
expr_stmt|;
name|Map
operator|.
name|Entry
argument_list|<
name|Table
argument_list|,
name|List
argument_list|<
name|Partition
argument_list|>
argument_list|>
name|metadata
init|=
name|EximUtil
operator|.
name|readMetaData
argument_list|(
name|fs
argument_list|,
operator|new
name|Path
argument_list|(
name|exportLocation
argument_list|,
literal|"_metadata"
argument_list|)
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
name|metadata
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|metadata
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|HCatFieldSchema
argument_list|>
name|columns
init|=
operator|new
name|ArrayList
argument_list|<
name|HCatFieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|columns
operator|.
name|add
argument_list|(
name|HCatSchemaUtils
operator|.
name|getHCatFieldSchema
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"emp_id"
argument_list|,
name|Constants
operator|.
name|INT_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|columns
operator|.
name|add
argument_list|(
name|HCatSchemaUtils
operator|.
name|getHCatFieldSchema
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"emp_name"
argument_list|,
name|Constants
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|columns
operator|.
name|add
argument_list|(
name|HCatSchemaUtils
operator|.
name|getHCatFieldSchema
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"emp_dob"
argument_list|,
name|Constants
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|columns
operator|.
name|add
argument_list|(
name|HCatSchemaUtils
operator|.
name|getHCatFieldSchema
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"emp_sex"
argument_list|,
name|Constants
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"default"
argument_list|,
name|table
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|NONPART_TABLE
argument_list|,
name|table
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|EximUtil
operator|.
name|schemaCompare
argument_list|(
name|table
operator|.
name|getSd
argument_list|()
operator|.
name|getCols
argument_list|()
argument_list|,
name|HCatUtil
operator|.
name|getFieldSchemaList
argument_list|(
name|columns
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hcatalog.rcfile.RCFileInputDriver"
argument_list|,
name|table
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
name|HCatConstants
operator|.
name|HCAT_ISD_CLASS
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hcatalog.rcfile.RCFileOutputDriver"
argument_list|,
name|table
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
name|HCatConstants
operator|.
name|HCAT_OSD_CLASS
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hadoop.hive.ql.io.RCFileInputFormat"
argument_list|,
name|table
operator|.
name|getSd
argument_list|()
operator|.
name|getInputFormat
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hadoop.hive.ql.io.RCFileOutputFormat"
argument_list|,
name|table
operator|.
name|getSd
argument_list|()
operator|.
name|getOutputFormat
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe"
argument_list|,
name|table
operator|.
name|getSd
argument_list|()
operator|.
name|getSerdeInfo
argument_list|()
operator|.
name|getSerializationLib
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|table
operator|.
name|getPartitionKeys
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|partitions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testStorePartTable
parameter_list|()
throws|throws
name|Exception
block|{
name|populateDataFile
argument_list|()
expr_stmt|;
name|PigServer
name|server
init|=
operator|new
name|PigServer
argument_list|(
name|ExecType
operator|.
name|LOCAL
argument_list|,
name|props
argument_list|)
decl_stmt|;
name|UDFContext
operator|.
name|getUDFContext
argument_list|()
operator|.
name|setClientSystemProps
argument_list|()
expr_stmt|;
name|server
operator|.
name|setBatchOn
argument_list|()
expr_stmt|;
name|server
operator|.
name|registerQuery
argument_list|(
literal|"A = load '"
operator|+
name|fqdataLocation
operator|+
literal|"' using PigStorage(',') as (emp_id:int, emp_name:chararray, emp_dob:chararray, emp_sex:chararray);"
argument_list|)
expr_stmt|;
name|server
operator|.
name|registerQuery
argument_list|(
literal|"store A into '"
operator|+
name|PARTITIONED_TABLE
operator|+
literal|"' using org.apache.hcatalog.pig.HCatEximStorer('"
operator|+
name|fqexportLocation
operator|+
literal|"', 'emp_country=in,emp_state=tn');"
argument_list|)
expr_stmt|;
name|server
operator|.
name|executeBatch
argument_list|()
expr_stmt|;
name|FileSystem
name|fs
init|=
name|cluster
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Filesystem class : "
operator|+
name|cluster
operator|.
name|getFileSystem
argument_list|()
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|", fs.default.name : "
operator|+
name|props
operator|.
name|getProperty
argument_list|(
literal|"fs.default.name"
argument_list|)
argument_list|)
expr_stmt|;
name|Map
operator|.
name|Entry
argument_list|<
name|Table
argument_list|,
name|List
argument_list|<
name|Partition
argument_list|>
argument_list|>
name|metadata
init|=
name|EximUtil
operator|.
name|readMetaData
argument_list|(
name|fs
argument_list|,
operator|new
name|Path
argument_list|(
name|exportLocation
argument_list|,
literal|"_metadata"
argument_list|)
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
name|metadata
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|metadata
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|HCatFieldSchema
argument_list|>
name|columns
init|=
operator|new
name|ArrayList
argument_list|<
name|HCatFieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|columns
operator|.
name|add
argument_list|(
name|HCatSchemaUtils
operator|.
name|getHCatFieldSchema
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"emp_id"
argument_list|,
name|Constants
operator|.
name|INT_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|columns
operator|.
name|add
argument_list|(
name|HCatSchemaUtils
operator|.
name|getHCatFieldSchema
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"emp_name"
argument_list|,
name|Constants
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|columns
operator|.
name|add
argument_list|(
name|HCatSchemaUtils
operator|.
name|getHCatFieldSchema
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"emp_dob"
argument_list|,
name|Constants
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|columns
operator|.
name|add
argument_list|(
name|HCatSchemaUtils
operator|.
name|getHCatFieldSchema
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"emp_sex"
argument_list|,
name|Constants
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"default"
argument_list|,
name|table
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PARTITIONED_TABLE
argument_list|,
name|table
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|EximUtil
operator|.
name|schemaCompare
argument_list|(
name|table
operator|.
name|getSd
argument_list|()
operator|.
name|getCols
argument_list|()
argument_list|,
name|HCatUtil
operator|.
name|getFieldSchemaList
argument_list|(
name|columns
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hcatalog.rcfile.RCFileInputDriver"
argument_list|,
name|table
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
name|HCatConstants
operator|.
name|HCAT_ISD_CLASS
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hcatalog.rcfile.RCFileOutputDriver"
argument_list|,
name|table
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
name|HCatConstants
operator|.
name|HCAT_OSD_CLASS
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hadoop.hive.ql.io.RCFileInputFormat"
argument_list|,
name|table
operator|.
name|getSd
argument_list|()
operator|.
name|getInputFormat
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hadoop.hive.ql.io.RCFileOutputFormat"
argument_list|,
name|table
operator|.
name|getSd
argument_list|()
operator|.
name|getOutputFormat
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe"
argument_list|,
name|table
operator|.
name|getSd
argument_list|()
operator|.
name|getSerdeInfo
argument_list|()
operator|.
name|getSerializationLib
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|table
operator|.
name|getPartitionKeys
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|partSchema
init|=
name|table
operator|.
name|getPartitionKeys
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"emp_country"
argument_list|,
name|partSchema
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"emp_state"
argument_list|,
name|partSchema
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|partitions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Partition
name|partition
init|=
name|partitions
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"in"
argument_list|,
name|partition
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"tn"
argument_list|,
name|partition
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hcatalog.rcfile.RCFileInputDriver"
argument_list|,
name|partition
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
name|HCatConstants
operator|.
name|HCAT_ISD_CLASS
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hcatalog.rcfile.RCFileOutputDriver"
argument_list|,
name|partition
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
name|HCatConstants
operator|.
name|HCAT_OSD_CLASS
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testStorePartTable_state_country
parameter_list|()
throws|throws
name|Exception
block|{
name|populateDataFile
argument_list|()
expr_stmt|;
name|PigServer
name|server
init|=
operator|new
name|PigServer
argument_list|(
name|ExecType
operator|.
name|LOCAL
argument_list|,
name|props
argument_list|)
decl_stmt|;
name|UDFContext
operator|.
name|getUDFContext
argument_list|()
operator|.
name|setClientSystemProps
argument_list|()
expr_stmt|;
name|server
operator|.
name|setBatchOn
argument_list|()
expr_stmt|;
name|server
operator|.
name|registerQuery
argument_list|(
literal|"A = load '"
operator|+
name|fqdataLocation
operator|+
literal|"' using PigStorage(',') as (emp_id:int, emp_name:chararray, emp_dob:chararray, emp_sex:chararray);"
argument_list|)
expr_stmt|;
name|server
operator|.
name|registerQuery
argument_list|(
literal|"store A into '"
operator|+
name|PARTITIONED_TABLE
operator|+
literal|"' using org.apache.hcatalog.pig.HCatEximStorer('"
operator|+
name|fqexportLocation
operator|+
literal|"', 'emp_state=tn,emp_country=in');"
argument_list|)
expr_stmt|;
name|server
operator|.
name|executeBatch
argument_list|()
expr_stmt|;
name|FileSystem
name|fs
init|=
name|cluster
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Filesystem class : "
operator|+
name|cluster
operator|.
name|getFileSystem
argument_list|()
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|", fs.default.name : "
operator|+
name|props
operator|.
name|getProperty
argument_list|(
literal|"fs.default.name"
argument_list|)
argument_list|)
expr_stmt|;
name|Map
operator|.
name|Entry
argument_list|<
name|Table
argument_list|,
name|List
argument_list|<
name|Partition
argument_list|>
argument_list|>
name|metadata
init|=
name|EximUtil
operator|.
name|readMetaData
argument_list|(
name|fs
argument_list|,
operator|new
name|Path
argument_list|(
name|exportLocation
argument_list|,
literal|"_metadata"
argument_list|)
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
name|metadata
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|metadata
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|HCatFieldSchema
argument_list|>
name|columns
init|=
operator|new
name|ArrayList
argument_list|<
name|HCatFieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|columns
operator|.
name|add
argument_list|(
name|HCatSchemaUtils
operator|.
name|getHCatFieldSchema
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"emp_id"
argument_list|,
name|Constants
operator|.
name|INT_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|columns
operator|.
name|add
argument_list|(
name|HCatSchemaUtils
operator|.
name|getHCatFieldSchema
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"emp_name"
argument_list|,
name|Constants
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|columns
operator|.
name|add
argument_list|(
name|HCatSchemaUtils
operator|.
name|getHCatFieldSchema
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"emp_dob"
argument_list|,
name|Constants
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|columns
operator|.
name|add
argument_list|(
name|HCatSchemaUtils
operator|.
name|getHCatFieldSchema
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"emp_sex"
argument_list|,
name|Constants
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"default"
argument_list|,
name|table
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PARTITIONED_TABLE
argument_list|,
name|table
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|EximUtil
operator|.
name|schemaCompare
argument_list|(
name|table
operator|.
name|getSd
argument_list|()
operator|.
name|getCols
argument_list|()
argument_list|,
name|HCatUtil
operator|.
name|getFieldSchemaList
argument_list|(
name|columns
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hcatalog.rcfile.RCFileInputDriver"
argument_list|,
name|table
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
name|HCatConstants
operator|.
name|HCAT_ISD_CLASS
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hcatalog.rcfile.RCFileOutputDriver"
argument_list|,
name|table
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
name|HCatConstants
operator|.
name|HCAT_OSD_CLASS
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hadoop.hive.ql.io.RCFileInputFormat"
argument_list|,
name|table
operator|.
name|getSd
argument_list|()
operator|.
name|getInputFormat
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hadoop.hive.ql.io.RCFileOutputFormat"
argument_list|,
name|table
operator|.
name|getSd
argument_list|()
operator|.
name|getOutputFormat
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe"
argument_list|,
name|table
operator|.
name|getSd
argument_list|()
operator|.
name|getSerdeInfo
argument_list|()
operator|.
name|getSerializationLib
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|table
operator|.
name|getPartitionKeys
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|partSchema
init|=
name|table
operator|.
name|getPartitionKeys
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"emp_state"
argument_list|,
name|partSchema
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"emp_country"
argument_list|,
name|partSchema
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|partitions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Partition
name|partition
init|=
name|partitions
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"tn"
argument_list|,
name|partition
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"in"
argument_list|,
name|partition
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hcatalog.rcfile.RCFileInputDriver"
argument_list|,
name|partition
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
name|HCatConstants
operator|.
name|HCAT_ISD_CLASS
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hcatalog.rcfile.RCFileOutputDriver"
argument_list|,
name|partition
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
name|HCatConstants
operator|.
name|HCAT_OSD_CLASS
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testStoreNonPartCompatSchemaTable
parameter_list|()
throws|throws
name|Exception
block|{
name|populateDataFile
argument_list|()
expr_stmt|;
name|PigServer
name|server
init|=
operator|new
name|PigServer
argument_list|(
name|ExecType
operator|.
name|LOCAL
argument_list|,
name|props
argument_list|)
decl_stmt|;
name|UDFContext
operator|.
name|getUDFContext
argument_list|()
operator|.
name|setClientSystemProps
argument_list|()
expr_stmt|;
name|server
operator|.
name|setBatchOn
argument_list|()
expr_stmt|;
name|server
operator|.
name|registerQuery
argument_list|(
literal|"A = load '"
operator|+
name|fqdataLocation
operator|+
literal|"' using PigStorage(',') as (emp_id:int, emp_name:chararray, emp_dob:chararray, emp_sex:chararray);"
argument_list|)
expr_stmt|;
name|server
operator|.
name|registerQuery
argument_list|(
literal|"store A into '"
operator|+
name|NONPART_TABLE
operator|+
literal|"' using org.apache.hcatalog.pig.HCatEximStorer('"
operator|+
name|fqexportLocation
operator|+
literal|"', '', 'id:int, name:chararray, dob:chararray, sex:chararray');"
argument_list|)
expr_stmt|;
name|server
operator|.
name|executeBatch
argument_list|()
expr_stmt|;
name|FileSystem
name|fs
init|=
name|cluster
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Filesystem class : "
operator|+
name|cluster
operator|.
name|getFileSystem
argument_list|()
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|", fs.default.name : "
operator|+
name|props
operator|.
name|getProperty
argument_list|(
literal|"fs.default.name"
argument_list|)
argument_list|)
expr_stmt|;
name|Map
operator|.
name|Entry
argument_list|<
name|Table
argument_list|,
name|List
argument_list|<
name|Partition
argument_list|>
argument_list|>
name|metadata
init|=
name|EximUtil
operator|.
name|readMetaData
argument_list|(
name|fs
argument_list|,
operator|new
name|Path
argument_list|(
name|exportLocation
argument_list|,
literal|"_metadata"
argument_list|)
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
name|metadata
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|metadata
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|HCatFieldSchema
argument_list|>
name|columns
init|=
operator|new
name|ArrayList
argument_list|<
name|HCatFieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|columns
operator|.
name|add
argument_list|(
name|HCatSchemaUtils
operator|.
name|getHCatFieldSchema
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"id"
argument_list|,
name|Constants
operator|.
name|INT_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|columns
operator|.
name|add
argument_list|(
name|HCatSchemaUtils
operator|.
name|getHCatFieldSchema
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"name"
argument_list|,
name|Constants
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|columns
operator|.
name|add
argument_list|(
name|HCatSchemaUtils
operator|.
name|getHCatFieldSchema
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"dob"
argument_list|,
name|Constants
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|columns
operator|.
name|add
argument_list|(
name|HCatSchemaUtils
operator|.
name|getHCatFieldSchema
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"sex"
argument_list|,
name|Constants
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"default"
argument_list|,
name|table
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|NONPART_TABLE
argument_list|,
name|table
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|EximUtil
operator|.
name|schemaCompare
argument_list|(
name|table
operator|.
name|getSd
argument_list|()
operator|.
name|getCols
argument_list|()
argument_list|,
name|HCatUtil
operator|.
name|getFieldSchemaList
argument_list|(
name|columns
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hcatalog.rcfile.RCFileInputDriver"
argument_list|,
name|table
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
name|HCatConstants
operator|.
name|HCAT_ISD_CLASS
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hcatalog.rcfile.RCFileOutputDriver"
argument_list|,
name|table
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
name|HCatConstants
operator|.
name|HCAT_OSD_CLASS
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hadoop.hive.ql.io.RCFileInputFormat"
argument_list|,
name|table
operator|.
name|getSd
argument_list|()
operator|.
name|getInputFormat
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hadoop.hive.ql.io.RCFileOutputFormat"
argument_list|,
name|table
operator|.
name|getSd
argument_list|()
operator|.
name|getOutputFormat
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe"
argument_list|,
name|table
operator|.
name|getSd
argument_list|()
operator|.
name|getSerdeInfo
argument_list|()
operator|.
name|getSerializationLib
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|table
operator|.
name|getPartitionKeys
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|partitions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testStoreNonPartNonCompatSchemaTable
parameter_list|()
throws|throws
name|Exception
block|{
name|populateDataFile
argument_list|()
expr_stmt|;
name|PigServer
name|server
init|=
operator|new
name|PigServer
argument_list|(
name|ExecType
operator|.
name|LOCAL
argument_list|,
name|props
argument_list|)
decl_stmt|;
name|UDFContext
operator|.
name|getUDFContext
argument_list|()
operator|.
name|setClientSystemProps
argument_list|()
expr_stmt|;
name|server
operator|.
name|setBatchOn
argument_list|()
expr_stmt|;
name|server
operator|.
name|registerQuery
argument_list|(
literal|"A = load '"
operator|+
name|fqdataLocation
operator|+
literal|"' using PigStorage(',') as (emp_id:int, emp_name:chararray, emp_dob:chararray, emp_sex:chararray);"
argument_list|)
expr_stmt|;
name|server
operator|.
name|registerQuery
argument_list|(
literal|"store A into '"
operator|+
name|NONPART_TABLE
operator|+
literal|"' using org.apache.hcatalog.pig.HCatEximStorer('"
operator|+
name|fqexportLocation
operator|+
literal|"', '', 'id:int, name:chararray, dob:chararray, sex:int');"
argument_list|)
expr_stmt|;
try|try
block|{
name|server
operator|.
name|executeBatch
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Expected exception not thrown"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FrontendException
name|e
parameter_list|)
block|{     }
block|}
specifier|public
name|void
name|testStoreMultiPartTable
parameter_list|()
throws|throws
name|Exception
block|{
name|populateDataFile
argument_list|()
expr_stmt|;
name|PigServer
name|server
init|=
operator|new
name|PigServer
argument_list|(
name|ExecType
operator|.
name|LOCAL
argument_list|,
name|props
argument_list|)
decl_stmt|;
name|UDFContext
operator|.
name|getUDFContext
argument_list|()
operator|.
name|setClientSystemProps
argument_list|()
expr_stmt|;
name|server
operator|.
name|setBatchOn
argument_list|()
expr_stmt|;
name|server
operator|.
name|registerQuery
argument_list|(
literal|"A = load '"
operator|+
name|fqdataLocation
operator|+
literal|"' using PigStorage(',') as (emp_id:int, emp_name:chararray, emp_dob:chararray, emp_sex:chararray, emp_country:chararray, emp_state:chararray);"
argument_list|)
expr_stmt|;
name|server
operator|.
name|registerQuery
argument_list|(
literal|"INTN = FILTER A BY emp_country == 'IN' AND emp_state == 'TN';"
argument_list|)
expr_stmt|;
name|server
operator|.
name|registerQuery
argument_list|(
literal|"INKA = FILTER A BY emp_country == 'IN' AND emp_state == 'KA';"
argument_list|)
expr_stmt|;
name|server
operator|.
name|registerQuery
argument_list|(
literal|"USTN = FILTER A BY emp_country == 'US' AND emp_state == 'TN';"
argument_list|)
expr_stmt|;
name|server
operator|.
name|registerQuery
argument_list|(
literal|"USKA = FILTER A BY emp_country == 'US' AND emp_state == 'KA';"
argument_list|)
expr_stmt|;
name|server
operator|.
name|registerQuery
argument_list|(
literal|"store INTN into '"
operator|+
name|PARTITIONED_TABLE
operator|+
literal|"' using org.apache.hcatalog.pig.HCatEximStorer('"
operator|+
name|fqexportLocation
operator|+
literal|"', 'emp_country=in,emp_state=tn');"
argument_list|)
expr_stmt|;
name|server
operator|.
name|registerQuery
argument_list|(
literal|"store INKA into '"
operator|+
name|PARTITIONED_TABLE
operator|+
literal|"' using org.apache.hcatalog.pig.HCatEximStorer('"
operator|+
name|fqexportLocation
operator|+
literal|"', 'emp_country=in,emp_state=ka');"
argument_list|)
expr_stmt|;
name|server
operator|.
name|registerQuery
argument_list|(
literal|"store USTN into '"
operator|+
name|PARTITIONED_TABLE
operator|+
literal|"' using org.apache.hcatalog.pig.HCatEximStorer('"
operator|+
name|fqexportLocation
operator|+
literal|"', 'emp_country=us,emp_state=tn');"
argument_list|)
expr_stmt|;
name|server
operator|.
name|registerQuery
argument_list|(
literal|"store USKA into '"
operator|+
name|PARTITIONED_TABLE
operator|+
literal|"' using org.apache.hcatalog.pig.HCatEximStorer('"
operator|+
name|fqexportLocation
operator|+
literal|"', 'emp_country=us,emp_state=ka');"
argument_list|)
expr_stmt|;
name|server
operator|.
name|executeBatch
argument_list|()
expr_stmt|;
name|FileSystem
name|fs
init|=
name|cluster
operator|.
name|getFileSystem
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Filesystem class : "
operator|+
name|cluster
operator|.
name|getFileSystem
argument_list|()
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|", fs.default.name : "
operator|+
name|props
operator|.
name|getProperty
argument_list|(
literal|"fs.default.name"
argument_list|)
argument_list|)
expr_stmt|;
name|Map
operator|.
name|Entry
argument_list|<
name|Table
argument_list|,
name|List
argument_list|<
name|Partition
argument_list|>
argument_list|>
name|metadata
init|=
name|EximUtil
operator|.
name|readMetaData
argument_list|(
name|fs
argument_list|,
operator|new
name|Path
argument_list|(
name|exportLocation
argument_list|,
literal|"_metadata"
argument_list|)
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
name|metadata
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|metadata
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|HCatFieldSchema
argument_list|>
name|columns
init|=
operator|new
name|ArrayList
argument_list|<
name|HCatFieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|columns
operator|.
name|add
argument_list|(
name|HCatSchemaUtils
operator|.
name|getHCatFieldSchema
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"emp_id"
argument_list|,
name|Constants
operator|.
name|INT_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|columns
operator|.
name|add
argument_list|(
name|HCatSchemaUtils
operator|.
name|getHCatFieldSchema
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"emp_name"
argument_list|,
name|Constants
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|columns
operator|.
name|add
argument_list|(
name|HCatSchemaUtils
operator|.
name|getHCatFieldSchema
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"emp_dob"
argument_list|,
name|Constants
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|columns
operator|.
name|add
argument_list|(
name|HCatSchemaUtils
operator|.
name|getHCatFieldSchema
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"emp_sex"
argument_list|,
name|Constants
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"default"
argument_list|,
name|table
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PARTITIONED_TABLE
argument_list|,
name|table
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|EximUtil
operator|.
name|schemaCompare
argument_list|(
name|table
operator|.
name|getSd
argument_list|()
operator|.
name|getCols
argument_list|()
argument_list|,
name|HCatUtil
operator|.
name|getFieldSchemaList
argument_list|(
name|columns
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hcatalog.rcfile.RCFileInputDriver"
argument_list|,
name|table
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
name|HCatConstants
operator|.
name|HCAT_ISD_CLASS
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hcatalog.rcfile.RCFileOutputDriver"
argument_list|,
name|table
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
name|HCatConstants
operator|.
name|HCAT_OSD_CLASS
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hadoop.hive.ql.io.RCFileInputFormat"
argument_list|,
name|table
operator|.
name|getSd
argument_list|()
operator|.
name|getInputFormat
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hadoop.hive.ql.io.RCFileOutputFormat"
argument_list|,
name|table
operator|.
name|getSd
argument_list|()
operator|.
name|getOutputFormat
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe"
argument_list|,
name|table
operator|.
name|getSd
argument_list|()
operator|.
name|getSerdeInfo
argument_list|()
operator|.
name|getSerializationLib
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|table
operator|.
name|getPartitionKeys
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|partSchema
init|=
name|table
operator|.
name|getPartitionKeys
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"emp_country"
argument_list|,
name|partSchema
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"emp_state"
argument_list|,
name|partSchema
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|partitions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|parts
init|=
operator|new
name|TreeSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|parts
operator|.
name|add
argument_list|(
literal|"in,tn"
argument_list|)
expr_stmt|;
name|parts
operator|.
name|add
argument_list|(
literal|"in,ka"
argument_list|)
expr_stmt|;
name|parts
operator|.
name|add
argument_list|(
literal|"us,tn"
argument_list|)
expr_stmt|;
name|parts
operator|.
name|add
argument_list|(
literal|"us,ka"
argument_list|)
expr_stmt|;
for|for
control|(
name|Partition
name|partition
range|:
name|partitions
control|)
block|{
name|assertEquals
argument_list|(
literal|"org.apache.hcatalog.rcfile.RCFileInputDriver"
argument_list|,
name|partition
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
name|HCatConstants
operator|.
name|HCAT_ISD_CLASS
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.hcatalog.rcfile.RCFileOutputDriver"
argument_list|,
name|partition
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
name|HCatConstants
operator|.
name|HCAT_OSD_CLASS
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|parts
operator|.
name|remove
argument_list|(
name|partition
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|+
literal|","
operator|+
name|partition
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|parts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

