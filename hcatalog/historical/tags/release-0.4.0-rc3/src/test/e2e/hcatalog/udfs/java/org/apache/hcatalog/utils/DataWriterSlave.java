begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|utils
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ObjectInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|data
operator|.
name|DefaultHCatRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|data
operator|.
name|HCatRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|data
operator|.
name|transfer
operator|.
name|DataTransferFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|data
operator|.
name|transfer
operator|.
name|HCatWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|data
operator|.
name|transfer
operator|.
name|WriterContext
import|;
end_import

begin_class
specifier|public
class|class
name|DataWriterSlave
block|{
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|FileNotFoundException
throws|,
name|IOException
throws|,
name|ClassNotFoundException
block|{
name|ObjectInputStream
name|ois
init|=
operator|new
name|ObjectInputStream
argument_list|(
operator|new
name|FileInputStream
argument_list|(
name|args
index|[
literal|0
index|]
argument_list|)
argument_list|)
decl_stmt|;
name|WriterContext
name|cntxt
init|=
operator|(
name|WriterContext
operator|)
name|ois
operator|.
name|readObject
argument_list|()
decl_stmt|;
name|ois
operator|.
name|close
argument_list|()
expr_stmt|;
name|HCatWriter
name|writer
init|=
name|DataTransferFactory
operator|.
name|getHCatWriter
argument_list|(
name|cntxt
argument_list|)
decl_stmt|;
name|writer
operator|.
name|write
argument_list|(
operator|new
name|HCatRecordItr
argument_list|(
name|args
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
class|class
name|HCatRecordItr
implements|implements
name|Iterator
argument_list|<
name|HCatRecord
argument_list|>
block|{
name|BufferedReader
name|reader
decl_stmt|;
name|String
name|curLine
decl_stmt|;
specifier|public
name|HCatRecordItr
parameter_list|(
name|String
name|fileName
parameter_list|)
throws|throws
name|FileNotFoundException
block|{
name|reader
operator|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|FileReader
argument_list|(
operator|new
name|File
argument_list|(
name|fileName
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|hasNext
parameter_list|()
block|{
try|try
block|{
name|curLine
operator|=
name|reader
operator|.
name|readLine
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
literal|null
operator|==
name|curLine
condition|?
literal|false
else|:
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|HCatRecord
name|next
parameter_list|()
block|{
name|String
index|[]
name|fields
init|=
name|curLine
operator|.
name|split
argument_list|(
literal|"\t"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|data
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|data
operator|.
name|add
argument_list|(
name|fields
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|data
operator|.
name|add
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|fields
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|data
operator|.
name|add
argument_list|(
name|Double
operator|.
name|parseDouble
argument_list|(
name|fields
index|[
literal|2
index|]
argument_list|)
argument_list|)
expr_stmt|;
return|return
operator|new
name|DefaultHCatRecord
argument_list|(
name|data
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|remove
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
block|}
block|}
block|}
end_class

end_unit

