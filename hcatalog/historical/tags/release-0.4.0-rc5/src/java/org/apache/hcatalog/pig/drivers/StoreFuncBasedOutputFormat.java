begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|pig
operator|.
name|drivers
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|BytesWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|Job
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|JobContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|JobStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|OutputCommitter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|OutputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|RecordWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskAttemptContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|common
operator|.
name|HCatConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|common
operator|.
name|HCatUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|mapreduce
operator|.
name|OutputJobInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|pig
operator|.
name|PigHCatUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pig
operator|.
name|ResourceSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pig
operator|.
name|StoreFunc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pig
operator|.
name|StoreFuncInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pig
operator|.
name|StoreMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pig
operator|.
name|data
operator|.
name|Tuple
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pig
operator|.
name|impl
operator|.
name|logicalLayer
operator|.
name|schema
operator|.
name|Schema
import|;
end_import

begin_class
specifier|public
class|class
name|StoreFuncBasedOutputFormat
extends|extends
name|OutputFormat
argument_list|<
name|BytesWritable
argument_list|,
name|Tuple
argument_list|>
block|{
specifier|private
specifier|final
name|StoreFuncInterface
name|storeFunc
decl_stmt|;
specifier|public
name|StoreFuncBasedOutputFormat
parameter_list|(
name|StoreFuncInterface
name|storeFunc
parameter_list|)
block|{
name|this
operator|.
name|storeFunc
operator|=
name|storeFunc
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|checkOutputSpecs
parameter_list|(
name|JobContext
name|jobContext
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|OutputFormat
argument_list|<
name|BytesWritable
argument_list|,
name|Tuple
argument_list|>
name|outputFormat
init|=
name|storeFunc
operator|.
name|getOutputFormat
argument_list|()
decl_stmt|;
name|outputFormat
operator|.
name|checkOutputSpecs
argument_list|(
name|jobContext
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|OutputCommitter
name|getOutputCommitter
parameter_list|(
name|TaskAttemptContext
name|ctx
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|String
name|serializedJobInfo
init|=
name|ctx
operator|.
name|getConfiguration
argument_list|()
operator|.
name|get
argument_list|(
name|HCatConstants
operator|.
name|HCAT_KEY_OUTPUT_INFO
argument_list|)
decl_stmt|;
name|OutputJobInfo
name|outputJobInfo
init|=
operator|(
name|OutputJobInfo
operator|)
name|HCatUtil
operator|.
name|deserialize
argument_list|(
name|serializedJobInfo
argument_list|)
decl_stmt|;
name|ResourceSchema
name|rs
init|=
name|PigHCatUtil
operator|.
name|getResourceSchema
argument_list|(
name|outputJobInfo
operator|.
name|getOutputSchema
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|location
init|=
name|outputJobInfo
operator|.
name|getLocation
argument_list|()
decl_stmt|;
name|OutputFormat
argument_list|<
name|BytesWritable
argument_list|,
name|Tuple
argument_list|>
name|outputFormat
init|=
name|storeFunc
operator|.
name|getOutputFormat
argument_list|()
decl_stmt|;
return|return
operator|new
name|StoreFuncBasedOutputCommitter
argument_list|(
name|storeFunc
argument_list|,
name|outputFormat
operator|.
name|getOutputCommitter
argument_list|(
name|ctx
argument_list|)
argument_list|,
name|location
argument_list|,
name|rs
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|RecordWriter
argument_list|<
name|BytesWritable
argument_list|,
name|Tuple
argument_list|>
name|getRecordWriter
parameter_list|(
name|TaskAttemptContext
name|ctx
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|RecordWriter
argument_list|<
name|BytesWritable
argument_list|,
name|Tuple
argument_list|>
name|writer
init|=
name|storeFunc
operator|.
name|getOutputFormat
argument_list|()
operator|.
name|getRecordWriter
argument_list|(
name|ctx
argument_list|)
decl_stmt|;
name|String
name|serializedJobInfo
init|=
name|ctx
operator|.
name|getConfiguration
argument_list|()
operator|.
name|get
argument_list|(
name|HCatConstants
operator|.
name|HCAT_KEY_OUTPUT_INFO
argument_list|)
decl_stmt|;
name|OutputJobInfo
name|outputJobInfo
init|=
operator|(
name|OutputJobInfo
operator|)
name|HCatUtil
operator|.
name|deserialize
argument_list|(
name|serializedJobInfo
argument_list|)
decl_stmt|;
name|ResourceSchema
name|rs
init|=
name|PigHCatUtil
operator|.
name|getResourceSchema
argument_list|(
name|outputJobInfo
operator|.
name|getOutputSchema
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|location
init|=
name|outputJobInfo
operator|.
name|getLocation
argument_list|()
decl_stmt|;
return|return
operator|new
name|StoreFuncBasedRecordWriter
argument_list|(
name|writer
argument_list|,
name|storeFunc
argument_list|,
name|location
argument_list|,
name|rs
argument_list|)
return|;
block|}
specifier|static
class|class
name|StoreFuncBasedRecordWriter
extends|extends
name|RecordWriter
argument_list|<
name|BytesWritable
argument_list|,
name|Tuple
argument_list|>
block|{
specifier|private
specifier|final
name|RecordWriter
argument_list|<
name|BytesWritable
argument_list|,
name|Tuple
argument_list|>
name|writer
decl_stmt|;
specifier|private
specifier|final
name|StoreFuncInterface
name|storeFunc
decl_stmt|;
specifier|private
specifier|final
name|ResourceSchema
name|schema
decl_stmt|;
specifier|private
specifier|final
name|String
name|location
decl_stmt|;
specifier|public
name|StoreFuncBasedRecordWriter
parameter_list|(
name|RecordWriter
argument_list|<
name|BytesWritable
argument_list|,
name|Tuple
argument_list|>
name|writer
parameter_list|,
name|StoreFuncInterface
name|sf
parameter_list|,
name|String
name|location
parameter_list|,
name|ResourceSchema
name|rs
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|writer
operator|=
name|writer
expr_stmt|;
name|this
operator|.
name|storeFunc
operator|=
name|sf
expr_stmt|;
name|this
operator|.
name|schema
operator|=
name|rs
expr_stmt|;
name|this
operator|.
name|location
operator|=
name|location
expr_stmt|;
name|storeFunc
operator|.
name|prepareToWrite
argument_list|(
name|writer
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|(
name|TaskAttemptContext
name|ctx
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|writer
operator|.
name|close
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
name|BytesWritable
name|key
parameter_list|,
name|Tuple
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|storeFunc
operator|.
name|putNext
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
class|class
name|StoreFuncBasedOutputCommitter
extends|extends
name|OutputCommitter
block|{
name|StoreFuncInterface
name|sf
decl_stmt|;
name|OutputCommitter
name|wrappedOutputCommitter
decl_stmt|;
name|String
name|location
decl_stmt|;
name|ResourceSchema
name|rs
decl_stmt|;
specifier|public
name|StoreFuncBasedOutputCommitter
parameter_list|(
name|StoreFuncInterface
name|sf
parameter_list|,
name|OutputCommitter
name|outputCommitter
parameter_list|,
name|String
name|location
parameter_list|,
name|ResourceSchema
name|rs
parameter_list|)
block|{
name|this
operator|.
name|sf
operator|=
name|sf
expr_stmt|;
name|this
operator|.
name|wrappedOutputCommitter
operator|=
name|outputCommitter
expr_stmt|;
name|this
operator|.
name|location
operator|=
name|location
expr_stmt|;
name|this
operator|.
name|rs
operator|=
name|rs
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|abortTask
parameter_list|(
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|wrappedOutputCommitter
operator|.
name|abortTask
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|commitTask
parameter_list|(
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|wrappedOutputCommitter
operator|.
name|commitTask
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|needsTaskCommit
parameter_list|(
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|wrappedOutputCommitter
operator|.
name|needsTaskCommit
argument_list|(
name|context
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setupJob
parameter_list|(
name|JobContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|wrappedOutputCommitter
operator|.
name|setupJob
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setupTask
parameter_list|(
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|wrappedOutputCommitter
operator|.
name|setupTask
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|commitJob
parameter_list|(
name|JobContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|wrappedOutputCommitter
operator|.
name|commitJob
argument_list|(
name|context
argument_list|)
expr_stmt|;
if|if
condition|(
name|sf
operator|instanceof
name|StoreMetadata
condition|)
block|{
if|if
condition|(
name|rs
operator|!=
literal|null
condition|)
block|{
operator|(
operator|(
name|StoreMetadata
operator|)
name|sf
operator|)
operator|.
name|storeSchema
argument_list|(
name|rs
argument_list|,
name|location
argument_list|,
operator|new
name|Job
argument_list|(
name|context
operator|.
name|getConfiguration
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|cleanupJob
parameter_list|(
name|JobContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|wrappedOutputCommitter
operator|.
name|cleanupJob
argument_list|(
name|context
argument_list|)
expr_stmt|;
if|if
condition|(
name|sf
operator|instanceof
name|StoreMetadata
condition|)
block|{
if|if
condition|(
name|rs
operator|!=
literal|null
condition|)
block|{
operator|(
operator|(
name|StoreMetadata
operator|)
name|sf
operator|)
operator|.
name|storeSchema
argument_list|(
name|rs
argument_list|,
name|location
argument_list|,
operator|new
name|Job
argument_list|(
name|context
operator|.
name|getConfiguration
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|void
name|abortJob
parameter_list|(
name|JobContext
name|context
parameter_list|,
name|JobStatus
operator|.
name|State
name|state
parameter_list|)
throws|throws
name|IOException
block|{
name|wrappedOutputCommitter
operator|.
name|abortJob
argument_list|(
name|context
argument_list|,
name|state
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

