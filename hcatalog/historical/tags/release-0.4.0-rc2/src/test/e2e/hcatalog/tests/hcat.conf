#!/home/y/bin/perl
############################################################################           
#  Licensed to the Apache Software Foundation (ASF) under one or more                  
#  contributor license agreements.  See the NOTICE file distributed with               
#  this work for additional information regarding copyright ownership.                 
#  The ASF licenses this file to You under the Apache License, Version 2.0             
#  (the "License"); you may not use this file except in compliance with                
#  the License.  You may obtain a copy of the License at                               
#                                                                                      
#      http://www.apache.org/licenses/LICENSE-2.0                                      
#                                                                                      
#  Unless required by applicable law or agreed to in writing, software                 
#  distributed under the License is distributed on an "AS IS" BASIS,                   
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.            
#  See the License for the specific language governing permissions and                 
#  limitations under the License.                                                      
                                                                                       
###############################################################################

	#
	# Do
	# egrep '^#|name.*=>' hcat.conf | egrep -v '^#!|egrep' | less
	# to get an outline of this test conf file
	#
	
  # Has a couple of Hive set directives:
  #   set hive.exec.dynamic.partition.mode=nonstrict;
  #   set hive.exec.dynamic.partition=true;


$cfg = {
        'driver' => 'HCat',
		'groups' => [
# This first group should be moved to deployer ?
		{
			'name' => 'HCat_CreateTable',
			'tests' => [

				{
				 'num' => 1
				,'hcat' => q\
drop table if exists hcat_createtable_1;
create table hcat_createtable_1(name string,
age int,
gpa double)
stored as textfile;
describe hcat_createtable_1;\
				,'rc'   => 0
                                ,'expected_out_regex' => 'name	string(\s)*age	int(\s)*gpa	double'
                                ,'expected_err_regex' => 'OK(.*)OK(.*)OK'
				}, 
				{
				 'num' => 2
                                ,'hcat' => q\
drop table if exists hcat_createtable_2;
create table hcat_createtable_2(name string,
age int,
gpa double) partitioned by (b string) stored as TEXTFILE;
describe extended hcat_createtable_2;
\,
				,'rc'   => 0
                                ,'expected_out_regex' => 'name	string(\s)*age	int(\s)*gpa	double'
				}, 
				{
				 'num' => 3
                                ,'hcat' => q\
drop table if exists hcat_create_table_3;
create table if not exists hcat_createtable_3(name string, age int, gpa double) stored as textfile;
create table if not exists hcat_createtable_3(name string, age int, gpa double) stored as textfile;
describe hcat_createtable_3;
\,
				,'rc'   => 0
                                ,'expected_out_regex' => 'name	string(\s)*age	int(\s)*gpa	double'
                                ,'expected_err_regex' => 'OK(.*)OK(.*)OK(.*)OK'
				}, 

			],
 		}, # end g
                {
                        'name' => 'HCat_DropTable',
                        'tests' => [

                                {
                                 'num' => 1
                                ,'hcat' => q\
create table if not exists hcat_droptable_1(name string,
age int,
gpa double)
stored as textfile;
drop table hcat_droptable_1;
describe hcat_droptable_1;\
                                ,'expected_out_regex' => 'does not exist'
                                },
                                {
                                 'num' => 2
                                ,'hcat' => q\
create table if not exists hcat_droptable_2(name string,
age int,
gpa double)
stored as textfile;
drop table if exists hcat_droptable_2;
describe hcat_droptable_2;\,
                                ,'rc'   => 0
                                ,'expected_out_regex' => 'does not exist'
                                },

                        ],
                }, # end g
                {
                        'name' => 'HCat_AlterTable',
                        'tests' => [

                                {
                                 'num' => 1
                                ,'hcat' => q\
drop table if exists hcat_altertable_1;
create table hcat_altertable_1(name string, age int, gpa double) partitioned by (b string) stored as textfile;
alter table hcat_altertable_1 add partition (b='2010-10-10');
show partitions hcat_altertable_1;\
                                ,'rc'   => 0
                                ,'expected_out_regex' => 'b=2010-10-10'
                                },
                                {
                                 'num' => 2
                                ,'hcat' => q\
alter table hcat_altertable_1 add partition (b='2010-10-11');
alter table hcat_altertable_1 drop partition (b='2010-10-10');
show partitions hcat_altertable_1;\,
                                ,'rc'   => 0
                                ,'expected_out_regex' => 'b=2010-10-11'
                                ,'not_expected_out_regex' => 'b=2010-10-10'
                                },
                                {
                                 'num' => 3
                                ,'hcat' => q\
alter table studenttab10k touch;
\
                                ,'rc'   => 0
                                },
                                {
                                 'num' => 4
                                ,'hcat' => q\
drop table if exists hcat_altertable_4;
create table hcat_altertable_4(name string, age int, gpa double) stored as textfile;
alter table hcat_altertable_4 set serdeproperties('xyz'='0');
\
                                ,'rc'   => 0
                                },
                                {
                                 'num' => 5
                                ,'hcat' => q\
drop table if exists hcat_altertable_5;
create table hcat_altertable_5(name string, age int, gpa double) stored as textfile;
alter table hcat_altertable_5 clustered by (age) into 1 buckets;
\
                                ,'rc'   => 0
                                },
                                {
                                 'num' => 6
                                ,'hcat' => q\
drop table if exists hcat_altertable_6;
create table hcat_altertable_6(name string, age int, gpa double) stored as textfile;
alter table hcat_altertable_6 set serde 'org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe';
\
                                ,'rc'   => 0
                                },
                        ],
                }, # end g
                {
                        'name' => 'HCat_Database',
                        'tests' => [
                                {
                                 'num' => 1
                                ,'hcat' => q\
drop database if exists hcat_database_1;
create database hcat_database_1;
alter database hcat_database_1 set dbproperties ('new.property'='some props');
describe database hcat_database_1;
show databases;
use hcat_database_1;
use default;
drop database hcat_database_1;\
                                ,'rc'   => 0
                                },
                        ],
                }, # end g
                {
                        'name' => 'HCat_View',
                        'tests' => [
                                {
                                 'num' => 1
                                ,'hcat' => q"
drop table if exists hcat_view_1;
drop view if exists hcat_view_1_1;
drop view if exists hcat_view_1_2;
create external table hcat_view_1 (name string, age int, gpa double) row format delimited fields terminated by '\t' stored as TEXTFILE location '/user/hcat/tests/data/studenttab10k';
create view hcat_view_1_1 as select name, gpa, age from studenttab10k;
create view hcat_view_1_2 partitioned on (age) as select name, gpa, age from studenttab10k;
alter view hcat_view_1_1 set tblproperties('key'='value');
show tables;
describe hcat_view_1_1;
describe hcat_view_1_2;
drop view hcat_view_1_1;
drop view hcat_view_1_3;"
                                ,'rc'   => 0
                                },
                        ],
                }, # end g
                {
                        'name' => 'HCat_Authorize',
                        'tests' => [
                                {
                                 'num' => 1
                                ,'hcat' => q\
create role role1;
grant drop, select on table studenttab10k to role role1 with grant option;
show grant role role1 on table studenttab10k;
revoke drop on table studenttab10k from role role1;
drop role role1;\
                                ,'rc'   => 0
                                },
                                {
                                 'num' => 2
                                ,'hcat' => q\
grant drop, select on table studenttab10k to user root;
show grant user root on table studenttab10k;
revoke drop, select on table studenttab10k from user root;\
                                ,'rc'   => 0
                                },
                        ],
                }, # end g
                {
                        'name' => 'HCat_Index',
                        'tests' => [
                                {
                                 'num' => 1
                                ,'hcat' => q\
drop table if exists hcat_index_1;
create table hcat_index_1 (a string) partitioned by (b string) stored as TEXTFILE;
create index hcat_index_1_1 on table hcat_index_1(a) as 'compact' with deferred rebuild comment 'hcat test';
alter index hcat_index_1_1 on hcat_index_1 set idxproperties ('prop1'='val1');
show indexes on hcat_index_1;
drop index hcat_index_1_1 on hcat_index_1;
;\
                                ,'rc'   => 0
                                },
                        ],
                }, # end g
                {
                        'name' => 'HCat_Lock',
                        'tests' => [
                                {
                                 'num' => 1,
                                 'ignore' => 1, # this test need zookeeper setup, to ease the tests, ignore it by default, you may enable it if you have the right zookeeper setup
                                ,'hcat' => q\
set hive.support.concurrency=true;
set hive.zookeeper.quorum=localhost;
lock table studenttab10k shared;
show locks;
unlock table studenttab10k;
;\
                                ,'rc'   => 0
                                },
                        ],
                }, # end g
                {
                        'name' => 'HCat_Misc',
                        'tests' => [
                                {
                                 'num' => 1
                                ,'hcat' => q\
show databases;\
                                ,'rc'   => 0
                                ,'expected_out_regex' => 'default'
                                },
                                {
                                 'num' => 2
                                ,'hcat' => q\
show tables;\,
                                ,'rc'   => 0
                                ,'expected_out_regex' => 'hcat_createtable_1'
                                },
                                {
                                 'num' => 3
                                ,'hcat' => q\
show tables in default;\,
                                ,'rc'   => 0
                                },
                                {
                                 'num' => 4
                                ,'hcat' => q\
explain select * from studenttab10k;\,
                                ,'rc'   => 0
                                },
                                {
                                 'num' => 5
                                ,'hcat' => q\
show functions;\,
                                ,'rc'   => 0
                                },
                                {
                                 'num' => 6
                                ,'hcat' => q\
describe function xpath_int;\,
                                ,'rc'   => 0
                                },
                                {
                                 'num' => 7
                                ,'hcat' => q\
dfs -ls;\,
                                ,'rc'   => 0
                                },
                        ],
                }, # end g
                {
                        'name' => 'HCat_Negative',
                        'tests' => [
                                {
                                 'num' => 1
                                ,'hcat' => q\
create table hcat_negative_1 as select * from studenttab10k;
;\
                                ,'expected_err_regex' => 'Operation not supported'
                                },
                                {
                                 'num' => 2
                                ,'hcat' => q\
alter index test111 on hcat_test2 rebuild;
;\
                                ,'expected_err_regex' => 'Operation not supported'
                                },
                                {
                                 'num' => 3
                                ,'hcat' => q\
alter table studentparttab30k PARTITION (ds='1') CONCATENATE;
;\
                                ,'expected_err_regex' => 'Operation not supported'
                                },
                                {
                                 'num' => 4
                                ,'hcat' => q\
alter table studentparttab30k archive PARTITION (ds='20110924');
;\
                                ,'expected_err_regex' => 'Operation not supported'
                                },
                                {
                                 'num' => 5
                                ,'hcat' => q\
analyze table studenttab10k compute statistics;
;\
                                ,'expected_err_regex' => 'Operation not supported'
                                },
                                {
                                 'num' => 6
                                ,'hcat' => q\
export table studenttab10k to '111';
;\
                                ,'expected_err_regex' => 'Operation not supported'
                                },
                                {
                                 'num' => 7
                                ,'hcat' => q\
import from '111';
;\
                                ,'expected_err_regex' => 'Operation not supported'
                                },
                        ],
                }, # end g
         ]
}
