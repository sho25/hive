#!/home/y/bin/perl

	#
	# Do
	# egrep '^#|name.*=>' hcat.conf | egrep -v '^#!|egrep' | less
	# to get an outline of this test conf file
	#
	
  # Has a couple of Hive set directives:
  #   set hive.exec.dynamic.partition.mode=nonstrict;
  #   set hive.exec.dynamic.partition=true;


$cfg = {
        'driver' => 'Hadoop',
		'groups' => [
# This first group should be moved to deployer ?
		{
			'name' => 'Hadoop_Checkin',
			'tests' => [
				{
				 'num' => 1
				,'hadoop' => q\
jar :FUNCPATH:/testudf.jar org.apache.hcatalog.utils.SimpleRead -libjars :HCAT_JAR: :THRIFTSERVER: studenttab10k :OUTPATH:
\,
                                ,'sql' => q\select name, gpa from studenttab10k;\
                                ,'floatpostprocess' => 1
                                ,'delimiter' => '	'
				}, 
                                {
                                 'num' => 2
                                ,'hcat_prep'=>q\drop table if exists hadoop_checkin_2;
create table hadoop_checkin_2 (name string, age int, gpa double) STORED AS TEXTFILE;\
                                ,'hadoop' => q\
jar :FUNCPATH:/testudf.jar org.apache.hcatalog.utils.ReadWrite -libjars :HCAT_JAR: :THRIFTSERVER: studenttab10k hadoop_checkin_2
\,
                                ,'result_table' => 'hadoop_checkin_2'
                                ,'sql' => q\select * from studenttab10k;\
                                ,'floatpostprocess' => 1
                                ,'delimiter' => '	'
                                },
                                {
                                 'num' => 3
                                ,'hcat_prep'=>q\drop table if exists hadoop_checkin_3;
create table hadoop_checkin_3 (name string, cnt int) STORED AS TEXTFILE;\
                                ,'hadoop' => q\
jar :FUNCPATH:/testudf.jar org.apache.hcatalog.utils.GroupByAge -libjars :HCAT_JAR: :THRIFTSERVER: studenttab10k hadoop_checkin_3
\,
                                ,'result_table' => 'hadoop_checkin_3'
                                ,'sql' => q\select age, count(*) from studenttab10k group by age;\
                                ,'floatpostprocess' => 1
                                ,'delimiter' => '	'
                                },
			],
 		}, # end g
                {
                        'name' => 'Hadoop_Read',
                        'tests' => [
                                {
                                 'num' => 1
                                ,'hadoop' => q\
jar :FUNCPATH:/testudf.jar org.apache.hcatalog.utils.ReadText -libjars :HCAT_JAR: :THRIFTSERVER: all100k :OUTPATH:
\,
                                ,'sql' => q\select * from all100k;\
                                ,'floatpostprocess' => 1
                                ,'delimiter' => '	'
                                },
                                {
                                 'num' => 2
                                ,'hadoop' => q\
jar :FUNCPATH:/testudf.jar org.apache.hcatalog.utils.ReadJson -libjars :HCAT_JAR: :THRIFTSERVER: all100kjson :OUTPATH:
\,
                                ,'sql' => q\select s, i, d from all100kjson;\
                                ,'floatpostprocess' => 1
                                ,'delimiter' => '	'
                                },
                                {
                                 'num' => 3
                                ,'hadoop' => q\
jar :FUNCPATH:/testudf.jar org.apache.hcatalog.utils.ReadRC -libjars :HCAT_JAR: :THRIFTSERVER: all100krc :OUTPATH:
\,
                                ,'sql' => q\select name, age, floor(gpa) + 0.1 from all100krc;\
                                ,'floatpostprocess' => 1
                                ,'delimiter' => '	'
                                },
                        ],
                }, # end g
                {
                        'name' => 'Hadoop_Write',
                        'tests' => [
                                {
                                 'ignore' => 1, # Need to checkin HCATALOG-168.
                                 'num' => 1
                                ,'hcat_prep'=>q\
drop table if exists hadoop_write_1;
create table hadoop_write_1(
            t tinyint,
            si smallint,
            i int,
            b bigint,
            f float,
            d double,
            s string)
        row format delimited
        fields terminated by ':'
        stored as textfile;\
                                ,'hadoop' => q\
jar :FUNCPATH:/testudf.jar org.apache.hcatalog.utils.WriteText -libjars :HCAT_JAR: :THRIFTSERVER: all100k hadoop_write_1
\,
                                ,'result_table' => 'hadoop_write_1'
                                ,'sql' => q\select * from all100k;\
                                ,'floatpostprocess' => 1
                                ,'delimiter' => '	'
                                },
                                {
                                 'num' => 2
                                ,'hcat_prep' => q\
drop table if exists hadoop_write_2;
create table hadoop_write_2(
            s string,
            i int,
            d double,
            m map<string, string>,
            bb array<struct<a: int, b: string>>)
            STORED AS INPUTFORMAT 'org.apache.hadoop.mapred.TextInputFormat' OUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.IgnoreKeyTextOutputFormat'
            INPUTDRIVER 'org.apache.hcatalog.pig.drivers.LoadFuncBasedInputDriver' OUTPUTDRIVER 'org.apache.hcatalog.pig.drivers.StoreFuncBasedOutputDriver'
            TBLPROPERTIES ('hcat.pig.loader'='org.apache.pig.builtin.JsonLoader', 'hcat.pig.storer'='org.apache.pig.builtin.JsonStorage', 'hcat.pig.loader.args'=
's:chararray, i:int, d:double, m:map[chararray], bb:{t:(a:int, b:chararray)}', 'hcat.pig.args.delimiter'='	');\
                                ,'hadoop' => q\
jar :FUNCPATH:/testudf.jar org.apache.hcatalog.utils.WriteJson -libjars :HCAT_JAR: :THRIFTSERVER: all100kjson hadoop_write_2
\,
                                ,'result_table' => 'hadoop_write_2'
                                ,'sql' => q\select s, i, d, '', '' from all100kjson;\
                                ,'floatpostprocess' => 1
                                ,'delimiter' => '	'
                                },
                                {
                                 'num' => 3
                                ,'hcat_prep' => q\
drop table if exists hadoop_write_3;
create table hadoop_write_3(
            name string,
            age int,
            gpa double)
stored as rcfile
TBLPROPERTIES (
    'hcat.isd'='org.apache.hcatalog.rcfile.RCFileInputDriver',
    'hcat.osd'='org.apache.hcatalog.rcfile.RCFileOutputDriver'
);
\,
                                ,'hadoop' => q\
jar :FUNCPATH:/testudf.jar org.apache.hcatalog.utils.WriteRC -libjars :HCAT_JAR: :THRIFTSERVER: all100krc hadoop_write_3
\,
                                ,'result_table' => 'hadoop_write_3'
                                ,'sql' => q\select name, age, floor(gpa) + 0.1 from all100krc;\
                                ,'floatpostprocess' => 1
                                ,'delimiter' => '	'
                                },
                        ],
                }, # end g
         ]
}
