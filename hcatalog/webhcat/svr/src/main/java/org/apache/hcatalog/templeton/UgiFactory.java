begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|templeton
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentHashMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_class
specifier|public
class|class
name|UgiFactory
block|{
specifier|private
specifier|static
name|ConcurrentHashMap
argument_list|<
name|String
argument_list|,
name|UserGroupInformation
argument_list|>
name|userUgiMap
init|=
operator|new
name|ConcurrentHashMap
argument_list|<
name|String
argument_list|,
name|UserGroupInformation
argument_list|>
argument_list|()
decl_stmt|;
specifier|static
name|UserGroupInformation
name|getUgi
parameter_list|(
name|String
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|UserGroupInformation
name|ugi
init|=
name|userUgiMap
operator|.
name|get
argument_list|(
name|user
argument_list|)
decl_stmt|;
if|if
condition|(
name|ugi
operator|==
literal|null
condition|)
block|{
comment|//create new ugi and add to map
specifier|final
name|UserGroupInformation
name|newUgi
init|=
name|UserGroupInformation
operator|.
name|createProxyUser
argument_list|(
name|user
argument_list|,
name|UserGroupInformation
operator|.
name|getLoginUser
argument_list|()
argument_list|)
decl_stmt|;
comment|//if another thread adds an entry before the check in this one
comment|// the one created here will not be added.
name|userUgiMap
operator|.
name|putIfAbsent
argument_list|(
name|user
argument_list|,
name|newUgi
argument_list|)
expr_stmt|;
comment|//use the UGI object that got added
return|return
name|userUgiMap
operator|.
name|get
argument_list|(
name|user
argument_list|)
return|;
block|}
return|return
name|ugi
return|;
block|}
block|}
end_class

end_unit

