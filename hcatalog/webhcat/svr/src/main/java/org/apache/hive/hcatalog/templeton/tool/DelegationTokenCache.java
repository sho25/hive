begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|templeton
operator|.
name|tool
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentHashMap
import|;
end_import

begin_comment
comment|/*  * Cache of delegation tokens.  When {@link TempletonControllerJob} submits a job that requires  * metastore access and this access should be secure, TCJ will add a delegation token to the  * submitted job.  When the job completes we need to cancel the token since by default the token  * lives for 7 days and over time can cause OOM (if not cancelled).  Cancelling from   * TempletonControllerJob.LauchMapper mapper (via custom OutputCommitter for example) requires  * the jar containing HiveMetastoreClient (and any dependent jars) to be available on the node  * running LaunchMapper.  Specifying transitive closure of the necessary jars is   * configuration/maintenance headache for each release.  Caching the token means cancellation is   * done from WebHCat server and thus has Hive jars on the classpath.  *   * While it's possible that WebHCat crashes and looses this in-memory state, but this would be an  * exceptional condition and since tokens will automatically be cancelled after 7 days,   * the fact that this info is not persisted is OK.  (Persisting it also complicates things   * because that needs to be done securely)  * @see TempletonControllerJob  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Evolving
specifier|public
class|class
name|DelegationTokenCache
parameter_list|<
name|JobId
parameter_list|,
name|TokenObject
parameter_list|>
block|{
specifier|private
name|ConcurrentHashMap
argument_list|<
name|JobId
argument_list|,
name|TokenObject
argument_list|>
name|tokenCache
init|=
operator|new
name|ConcurrentHashMap
argument_list|<
name|JobId
argument_list|,
name|TokenObject
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|DelegationTokenCache
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|stringFormTokenCache
init|=
operator|new
name|DelegationTokenCache
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
comment|/*    * Returns the singleton instance of jobId->delegation-token-in-string-form cache    */
specifier|public
specifier|static
name|DelegationTokenCache
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getStringFormTokenCache
parameter_list|()
block|{
return|return
name|stringFormTokenCache
return|;
block|}
name|TokenObject
name|storeDelegationToken
parameter_list|(
name|JobId
name|jobId
parameter_list|,
name|TokenObject
name|token
parameter_list|)
block|{
return|return
name|tokenCache
operator|.
name|put
argument_list|(
name|jobId
argument_list|,
name|token
argument_list|)
return|;
block|}
specifier|public
name|TokenObject
name|getDelegationToken
parameter_list|(
name|JobId
name|jobId
parameter_list|)
block|{
return|return
name|tokenCache
operator|.
name|get
argument_list|(
name|jobId
argument_list|)
return|;
block|}
specifier|public
name|void
name|removeDelegationToken
parameter_list|(
name|JobId
name|jobId
parameter_list|)
block|{
name|tokenCache
operator|.
name|remove
argument_list|(
name|jobId
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

