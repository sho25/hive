begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|templeton
operator|.
name|tool
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|TestTempletonUtils
block|{
specifier|public
specifier|static
specifier|final
name|String
index|[]
name|CONTROLLER_LINES
init|=
block|{
literal|"2011-12-15 18:12:21,758 [main] INFO  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher - More information at: http://localhost:50030/jobdetails.jsp?jobid=job_201112140012_0047"
block|,
literal|"2011-12-15 18:12:46,907 [main] INFO  org.apache.pig.tools.pigstats.SimplePigStats - Script Statistics: "
block|}
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|testDataDir
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"test.data.dir"
argument_list|)
decl_stmt|;
name|File
name|tmpFile
decl_stmt|;
name|File
name|usrFile
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
block|{
try|try
block|{
name|tmpFile
operator|=
operator|new
name|File
argument_list|(
name|testDataDir
argument_list|,
literal|"tmp"
argument_list|)
expr_stmt|;
name|tmpFile
operator|.
name|createNewFile
argument_list|()
expr_stmt|;
name|usrFile
operator|=
operator|new
name|File
argument_list|(
name|testDataDir
argument_list|,
literal|"usr"
argument_list|)
expr_stmt|;
name|usrFile
operator|.
name|createNewFile
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
block|{
name|tmpFile
operator|.
name|delete
argument_list|()
expr_stmt|;
name|usrFile
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIssetString
parameter_list|()
block|{
name|Assert
operator|.
name|assertFalse
argument_list|(
name|TempletonUtils
operator|.
name|isset
argument_list|(
operator|(
name|String
operator|)
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|TempletonUtils
operator|.
name|isset
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|TempletonUtils
operator|.
name|isset
argument_list|(
literal|"hello"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIssetTArray
parameter_list|()
block|{
name|Assert
operator|.
name|assertFalse
argument_list|(
name|TempletonUtils
operator|.
name|isset
argument_list|(
operator|(
name|Long
index|[]
operator|)
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|TempletonUtils
operator|.
name|isset
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|String
index|[]
name|parts
init|=
operator|new
name|String
argument_list|(
literal|"hello.world"
argument_list|)
operator|.
name|split
argument_list|(
literal|"\\."
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|TempletonUtils
operator|.
name|isset
argument_list|(
name|parts
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPrintTaggedJobID
parameter_list|()
block|{
comment|//JobID job = new JobID();
comment|// TODO -- capture System.out?
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExtractPercentComplete
parameter_list|()
block|{
name|Assert
operator|.
name|assertNull
argument_list|(
name|TempletonUtils
operator|.
name|extractPercentComplete
argument_list|(
literal|"fred"
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|line
range|:
name|CONTROLLER_LINES
control|)
block|{
name|Assert
operator|.
name|assertNull
argument_list|(
name|TempletonUtils
operator|.
name|extractPercentComplete
argument_list|(
name|line
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|String
name|fifty
init|=
literal|"2011-12-15 18:12:36,333 [main] INFO  org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MapReduceLauncher - 50% complete"
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"50% complete"
argument_list|,
name|TempletonUtils
operator|.
name|extractPercentComplete
argument_list|(
name|fifty
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEncodeArray
parameter_list|()
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|TempletonUtils
operator|.
name|encodeArray
argument_list|(
operator|(
name|String
index|[]
operator|)
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|String
index|[]
name|tmp
init|=
operator|new
name|String
index|[
literal|0
index|]
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|TempletonUtils
operator|.
name|encodeArray
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|)
operator|.
name|length
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
name|tmp
operator|=
operator|new
name|String
index|[
literal|3
index|]
expr_stmt|;
name|tmp
index|[
literal|0
index|]
operator|=
literal|"fred"
expr_stmt|;
name|tmp
index|[
literal|1
index|]
operator|=
literal|null
expr_stmt|;
name|tmp
index|[
literal|2
index|]
operator|=
literal|"peter,lisa,, barney"
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"fred,,peter"
operator|+
name|StringUtils
operator|.
name|ESCAPE_CHAR
operator|+
literal|",lisa"
operator|+
name|StringUtils
operator|.
name|ESCAPE_CHAR
operator|+
literal|","
operator|+
name|StringUtils
operator|.
name|ESCAPE_CHAR
operator|+
literal|", barney"
argument_list|,
name|TempletonUtils
operator|.
name|encodeArray
argument_list|(
name|tmp
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDecodeArray
parameter_list|()
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|TempletonUtils
operator|.
name|encodeArray
argument_list|(
operator|(
name|String
index|[]
operator|)
literal|null
argument_list|)
operator|==
literal|null
argument_list|)
expr_stmt|;
name|String
index|[]
name|tmp
init|=
operator|new
name|String
index|[
literal|3
index|]
decl_stmt|;
name|tmp
index|[
literal|0
index|]
operator|=
literal|"fred"
expr_stmt|;
name|tmp
index|[
literal|1
index|]
operator|=
literal|null
expr_stmt|;
name|tmp
index|[
literal|2
index|]
operator|=
literal|"peter,lisa,, barney"
expr_stmt|;
name|String
index|[]
name|tmp2
init|=
name|TempletonUtils
operator|.
name|decodeArray
argument_list|(
name|TempletonUtils
operator|.
name|encodeArray
argument_list|(
name|tmp
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|tmp
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|(
name|String
operator|)
name|tmp
index|[
name|i
index|]
argument_list|,
operator|(
name|String
operator|)
name|tmp2
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Arrays were not equal"
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHadoopFsPath
parameter_list|()
block|{
try|try
block|{
name|TempletonUtils
operator|.
name|hadoopFsPath
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|TempletonUtils
operator|.
name|hadoopFsPath
argument_list|(
name|tmpFile
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|TempletonUtils
operator|.
name|hadoopFsPath
argument_list|(
name|tmpFile
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Couldn't find "
operator|+
name|tmpFile
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// This is our problem -- it means the configuration was wrong.
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
try|try
block|{
name|TempletonUtils
operator|.
name|hadoopFsPath
argument_list|(
literal|"/scoobydoo/teddybear"
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Should not have found /scoobydoo/teddybear"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
comment|// Should go here.
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// This is our problem -- it means the configuration was wrong.
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
try|try
block|{
name|TempletonUtils
operator|.
name|hadoopFsPath
argument_list|(
literal|"a"
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|,
literal|"teddybear"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Should not have found /user/teddybear/a"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"/user/teddybear/a"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// This is our problem -- it means the configuration was wrong.
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Get wrong exception: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHadoopFsFilename
parameter_list|()
block|{
try|try
block|{
name|String
name|tmpFileName1
init|=
literal|"/tmp/testHadoopFsListAsArray1"
decl_stmt|;
name|String
name|tmpFileName2
init|=
literal|"/tmp/testHadoopFsListAsArray2"
decl_stmt|;
name|File
name|tmpFile1
init|=
operator|new
name|File
argument_list|(
name|tmpFileName1
argument_list|)
decl_stmt|;
name|File
name|tmpFile2
init|=
operator|new
name|File
argument_list|(
name|tmpFileName2
argument_list|)
decl_stmt|;
name|tmpFile1
operator|.
name|createNewFile
argument_list|()
expr_stmt|;
name|tmpFile2
operator|.
name|createNewFile
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|TempletonUtils
operator|.
name|hadoopFsFilename
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|TempletonUtils
operator|.
name|hadoopFsFilename
argument_list|(
name|tmpFile
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|tmpFile
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|TempletonUtils
operator|.
name|hadoopFsFilename
argument_list|(
name|tmpFile
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Couldn't find name for /tmp"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Couldn't find name for "
operator|+
name|tmpFile
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// Something else is wrong
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
try|try
block|{
name|TempletonUtils
operator|.
name|hadoopFsFilename
argument_list|(
literal|"/scoobydoo/teddybear"
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Should not have found /scoobydoo/teddybear"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
comment|// Should go here.
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// Something else is wrong.
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHadoopFsListAsArray
parameter_list|()
block|{
try|try
block|{
name|String
name|tmpFileName1
init|=
literal|"/tmp/testHadoopFsListAsArray1"
decl_stmt|;
name|String
name|tmpFileName2
init|=
literal|"/tmp/testHadoopFsListAsArray2"
decl_stmt|;
name|File
name|tmpFile1
init|=
operator|new
name|File
argument_list|(
name|tmpFileName1
argument_list|)
decl_stmt|;
name|File
name|tmpFile2
init|=
operator|new
name|File
argument_list|(
name|tmpFileName2
argument_list|)
decl_stmt|;
name|tmpFile1
operator|.
name|createNewFile
argument_list|()
expr_stmt|;
name|tmpFile2
operator|.
name|createNewFile
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|TempletonUtils
operator|.
name|hadoopFsListAsArray
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
operator|==
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|TempletonUtils
operator|.
name|hadoopFsListAsArray
argument_list|(
name|tmpFileName1
operator|+
literal|","
operator|+
name|tmpFileName2
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
operator|==
literal|null
argument_list|)
expr_stmt|;
name|String
index|[]
name|tmp2
init|=
name|TempletonUtils
operator|.
name|hadoopFsListAsArray
argument_list|(
name|tmpFileName1
operator|+
literal|","
operator|+
name|tmpFileName2
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"file:"
operator|+
name|tmpFileName1
argument_list|,
name|tmp2
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"file:"
operator|+
name|tmpFileName2
argument_list|,
name|tmp2
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|tmpFile1
operator|.
name|delete
argument_list|()
expr_stmt|;
name|tmpFile2
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Couldn't find name for "
operator|+
name|tmpFile
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// Something else is wrong
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
try|try
block|{
name|TempletonUtils
operator|.
name|hadoopFsListAsArray
argument_list|(
literal|"/scoobydoo/teddybear,joe"
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Should not have found /scoobydoo/teddybear"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
comment|// Should go here.
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// Something else is wrong.
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testHadoopFsListAsString
parameter_list|()
block|{
try|try
block|{
name|String
name|tmpFileName1
init|=
literal|"/tmp/testHadoopFsListAsString1"
decl_stmt|;
name|String
name|tmpFileName2
init|=
literal|"/tmp/testHadoopFsListAsString2"
decl_stmt|;
name|File
name|tmpFile1
init|=
operator|new
name|File
argument_list|(
name|tmpFileName1
argument_list|)
decl_stmt|;
name|File
name|tmpFile2
init|=
operator|new
name|File
argument_list|(
name|tmpFileName2
argument_list|)
decl_stmt|;
name|tmpFile1
operator|.
name|createNewFile
argument_list|()
expr_stmt|;
name|tmpFile2
operator|.
name|createNewFile
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|TempletonUtils
operator|.
name|hadoopFsListAsString
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
operator|==
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|TempletonUtils
operator|.
name|hadoopFsListAsString
argument_list|(
literal|"/tmp,/usr"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
operator|==
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"file:"
operator|+
name|tmpFileName1
operator|+
literal|",file:"
operator|+
name|tmpFileName2
argument_list|,
name|TempletonUtils
operator|.
name|hadoopFsListAsString
argument_list|(
name|tmpFileName1
operator|+
literal|","
operator|+
name|tmpFileName2
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Couldn't find name for "
operator|+
name|tmpFile
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// Something else is wrong
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
try|try
block|{
name|TempletonUtils
operator|.
name|hadoopFsListAsString
argument_list|(
literal|"/scoobydoo/teddybear,joe"
argument_list|,
operator|new
name|Configuration
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Should not have found /scoobydoo/teddybear"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
comment|// Should go here.
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// Something else is wrong.
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testConstructingUserHomeDirectory
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|sources
init|=
operator|new
name|String
index|[]
block|{
literal|"output+"
block|,
literal|"/user/hadoop/output"
block|,
literal|"hdfs://container"
block|,
literal|"hdfs://container/"
block|,
literal|"hdfs://container/path"
block|,
literal|"output#link"
block|,
literal|"hdfs://cointaner/output#link"
block|,
literal|"hdfs://container@acc/test"
block|}
decl_stmt|;
name|String
index|[]
name|expectedResults
init|=
operator|new
name|String
index|[]
block|{
literal|"/user/webhcat/output+"
block|,
literal|"/user/hadoop/output"
block|,
literal|"hdfs://container/user/webhcat"
block|,
literal|"hdfs://container/"
block|,
literal|"hdfs://container/path"
block|,
literal|"/user/webhcat/output#link"
block|,
literal|"hdfs://cointaner/output#link"
block|,
literal|"hdfs://container@acc/test"
block|}
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|sources
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|String
name|source
init|=
name|sources
index|[
name|i
index|]
decl_stmt|;
name|String
name|expectedResult
init|=
name|expectedResults
index|[
name|i
index|]
decl_stmt|;
name|String
name|result
init|=
name|TempletonUtils
operator|.
name|addUserHomeDirectoryIfApplicable
argument_list|(
name|source
argument_list|,
literal|"webhcat"
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|result
argument_list|,
name|expectedResult
argument_list|)
expr_stmt|;
block|}
name|String
name|badUri
init|=
literal|"c:\\some\\path"
decl_stmt|;
try|try
block|{
name|TempletonUtils
operator|.
name|addUserHomeDirectoryIfApplicable
argument_list|(
name|badUri
argument_list|,
literal|"webhcat"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"addUserHomeDirectoryIfApplicable should fail for bad URI: "
operator|+
name|badUri
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|ex
parameter_list|)
block|{     }
block|}
block|}
end_class

end_unit

