begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|api
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|common
operator|.
name|HCatException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Interface to serialize HCat API elements.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Stable
specifier|abstract
class|class
name|MetadataSerializer
block|{
comment|// Prevent construction outside the get() method.
specifier|protected
name|MetadataSerializer
parameter_list|()
block|{}
comment|/**    * Static getter method for the appropriate MetadataSerializer implementation.    * @return MetadataSerializer sub-class.    * @throws HCatException On failure to construct a concrete MetadataSerializer.    */
specifier|public
specifier|static
name|MetadataSerializer
name|get
parameter_list|()
throws|throws
name|HCatException
block|{
return|return
operator|new
name|MetadataJSONSerializer
argument_list|()
return|;
block|}
comment|/**    * Serializer for HCatTable instances.    * @param hcatTable The HCatTable operand, to be serialized.    * @return Serialized (i.e. String-ified) HCatTable.    * @throws HCatException On failure to serialize.    */
specifier|public
specifier|abstract
name|String
name|serializeTable
parameter_list|(
name|HCatTable
name|hcatTable
parameter_list|)
throws|throws
name|HCatException
function_decl|;
comment|/**    * Deserializer for HCatTable string-representations.    * @param hcatTableStringRep Serialized HCatTable String (gotten from serializeTable()).    * @return Deserialized HCatTable instance.    * @throws HCatException On failure to deserialize (e.g. incompatible serialization format, etc.)    */
specifier|public
specifier|abstract
name|HCatTable
name|deserializeTable
parameter_list|(
name|String
name|hcatTableStringRep
parameter_list|)
throws|throws
name|HCatException
function_decl|;
comment|/**    * Serializer for HCatPartition instances.    * @param hcatPartition The HCatPartition operand, to be serialized.    * @return Serialized (i.e. String-ified) HCatPartition.    * @throws HCatException On failure to serialize.    */
specifier|public
specifier|abstract
name|String
name|serializePartition
parameter_list|(
name|HCatPartition
name|hcatPartition
parameter_list|)
throws|throws
name|HCatException
function_decl|;
comment|/**    * Deserializer for HCatPartition string-representations.    * @param hcatPartitionStringRep Serialized HCatPartition String (gotten from serializePartition()).    * @return Deserialized HCatPartition instance.    * @throws HCatException On failure to deserialize (e.g. incompatible serialization format, etc.)    */
specifier|public
specifier|abstract
name|HCatPartition
name|deserializePartition
parameter_list|(
name|String
name|hcatPartitionStringRep
parameter_list|)
throws|throws
name|HCatException
function_decl|;
comment|/**    * Serializer for HCatPartitionSpec.    * @param hcatPartitionSpec HCatPartitionSpec instance to be serialized.    * @return Serialized string-representations.    * @throws HCatException On failure to serialize.    */
annotation|@
name|InterfaceAudience
operator|.
name|LimitedPrivate
argument_list|(
block|{
literal|"Hive"
block|}
argument_list|)
annotation|@
name|InterfaceStability
operator|.
name|Evolving
specifier|public
specifier|abstract
name|List
argument_list|<
name|String
argument_list|>
name|serializePartitionSpec
parameter_list|(
name|HCatPartitionSpec
name|hcatPartitionSpec
parameter_list|)
throws|throws
name|HCatException
function_decl|;
comment|/**    * Deserializer for HCatPartitionSpec string-representations.    * @param hcatPartitionSpecStrings List of strings to be converted into an HCatPartitionSpec.    * @return Deserialized HCatPartitionSpec instance.    * @throws HCatException On failure to deserialize. (e.g. incompatible serialization format, etc.)    */
annotation|@
name|InterfaceAudience
operator|.
name|LimitedPrivate
argument_list|(
block|{
literal|"Hive"
block|}
argument_list|)
annotation|@
name|InterfaceStability
operator|.
name|Evolving
specifier|public
specifier|abstract
name|HCatPartitionSpec
name|deserializePartitionSpec
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|hcatPartitionSpecStrings
parameter_list|)
throws|throws
name|HCatException
function_decl|;
block|}
end_class

end_unit

