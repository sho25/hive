begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|api
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Order
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde
operator|.
name|serdeConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|common
operator|.
name|HCatException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|data
operator|.
name|schema
operator|.
name|HCatFieldSchema
import|;
end_import

begin_comment
comment|/**  * The Class HCatCreateTableDesc for defining attributes for a new table.  */
end_comment

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Stable
specifier|public
class|class
name|HCatCreateTableDesc
block|{
specifier|private
name|boolean
name|ifNotExists
decl_stmt|;
specifier|private
name|HCatTable
name|hcatTable
decl_stmt|;
specifier|private
name|HCatCreateTableDesc
parameter_list|(
name|HCatTable
name|hcatTable
parameter_list|,
name|boolean
name|ifNotExists
parameter_list|)
block|{
name|this
operator|.
name|hcatTable
operator|=
name|hcatTable
expr_stmt|;
name|this
operator|.
name|ifNotExists
operator|=
name|ifNotExists
expr_stmt|;
block|}
comment|/**    * Creates a builder for defining attributes.    *    * @param dbName the db name    * @param tableName the table name    * @param columns the columns    * @return the builder    */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link #create(HCatTable)}. To be removed in Hive 0.16.
specifier|public
specifier|static
name|Builder
name|create
parameter_list|(
name|String
name|dbName
parameter_list|,
name|String
name|tableName
parameter_list|,
name|List
argument_list|<
name|HCatFieldSchema
argument_list|>
name|columns
parameter_list|)
block|{
return|return
operator|new
name|Builder
argument_list|(
name|dbName
argument_list|,
name|tableName
argument_list|,
name|columns
argument_list|)
return|;
block|}
comment|/**    * Getter for HCatCreateTableDesc.Builder instance.    * @param table Spec for HCatTable to be created.    * @param ifNotExists Only create the table if it doesn't already exist.    * @return Builder instance.    */
specifier|public
specifier|static
name|Builder
name|create
parameter_list|(
name|HCatTable
name|table
parameter_list|,
name|boolean
name|ifNotExists
parameter_list|)
block|{
return|return
operator|new
name|Builder
argument_list|(
name|table
argument_list|,
name|ifNotExists
argument_list|)
return|;
block|}
comment|/**    * Getter for HCatCreateTableDesc.Builder instance. By default, ifNotExists is false.    * So the attempt to create the table is made even if the table already exists.    * @param table Spec for HCatTable to be created.    * @return Builder instance.    */
specifier|public
specifier|static
name|Builder
name|create
parameter_list|(
name|HCatTable
name|table
parameter_list|)
block|{
return|return
operator|new
name|Builder
argument_list|(
name|table
argument_list|,
literal|false
argument_list|)
return|;
block|}
comment|/**    * Getter for underlying HCatTable instance.    */
specifier|public
name|HCatTable
name|getHCatTable
parameter_list|()
block|{
return|return
name|this
operator|.
name|hcatTable
return|;
block|}
comment|/**    * Gets the if not exists.    *    * @return the if not exists    */
specifier|public
name|boolean
name|getIfNotExists
parameter_list|()
block|{
return|return
name|this
operator|.
name|ifNotExists
return|;
block|}
comment|/**    * Gets the table name.    *    * @return the table name    */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#getDbTableName()}. To be removed in Hive 0.16.
specifier|public
name|String
name|getTableName
parameter_list|()
block|{
return|return
name|this
operator|.
name|hcatTable
operator|.
name|getTableName
argument_list|()
return|;
block|}
comment|/**    * Gets the cols.    *    * @return the cols    */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#getCols()}. To be removed in Hive 0.16.
specifier|public
name|List
argument_list|<
name|HCatFieldSchema
argument_list|>
name|getCols
parameter_list|()
block|{
return|return
name|this
operator|.
name|hcatTable
operator|.
name|getCols
argument_list|()
return|;
block|}
comment|/**    * Gets the partition cols.    *    * @return the partition cols    */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#getPartCols()}. To be removed in Hive 0.16.
specifier|public
name|List
argument_list|<
name|HCatFieldSchema
argument_list|>
name|getPartitionCols
parameter_list|()
block|{
return|return
name|this
operator|.
name|hcatTable
operator|.
name|getPartCols
argument_list|()
return|;
block|}
comment|/**    * Gets the bucket cols.    *    * @return the bucket cols    */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#getBucketCols()}. To be removed in Hive 0.16.
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getBucketCols
parameter_list|()
block|{
return|return
name|this
operator|.
name|hcatTable
operator|.
name|getBucketCols
argument_list|()
return|;
block|}
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#getNumBuckets()}.
specifier|public
name|int
name|getNumBuckets
parameter_list|()
block|{
return|return
name|this
operator|.
name|hcatTable
operator|.
name|getNumBuckets
argument_list|()
return|;
block|}
comment|/**    * Gets the comments.    *    * @return the comments    */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#comment()}. To be removed in Hive 0.16.
specifier|public
name|String
name|getComments
parameter_list|()
block|{
return|return
name|this
operator|.
name|hcatTable
operator|.
name|comment
argument_list|()
return|;
block|}
comment|/**    * Gets the storage handler.    *    * @return the storage handler    */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#getStorageHandler()}. To be removed in Hive 0.16.
specifier|public
name|String
name|getStorageHandler
parameter_list|()
block|{
return|return
name|this
operator|.
name|hcatTable
operator|.
name|getStorageHandler
argument_list|()
return|;
block|}
comment|/**    * Gets the location.    *    * @return the location    */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#getLocation()}. To be removed in Hive 0.16.
specifier|public
name|String
name|getLocation
parameter_list|()
block|{
return|return
name|this
operator|.
name|hcatTable
operator|.
name|getLocation
argument_list|()
return|;
block|}
comment|/**    * Gets the external.    *    * @return the external    */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#getTableType()}. To be removed in Hive 0.16.
specifier|public
name|boolean
name|getExternal
parameter_list|()
block|{
return|return
name|this
operator|.
name|hcatTable
operator|.
name|getTabletype
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|HCatTable
operator|.
name|Type
operator|.
name|EXTERNAL_TABLE
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
comment|/**    * Gets the sort cols.    *    * @return the sort cols    */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#getSortCols()}. To be removed in Hive 0.16.
specifier|public
name|List
argument_list|<
name|Order
argument_list|>
name|getSortCols
parameter_list|()
block|{
return|return
name|this
operator|.
name|hcatTable
operator|.
name|getSortCols
argument_list|()
return|;
block|}
comment|/**    * Gets the tbl props.    *    * @return the tbl props    */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#getTblProps()}. To be removed in Hive 0.16.
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getTblProps
parameter_list|()
block|{
return|return
name|this
operator|.
name|hcatTable
operator|.
name|getTblProps
argument_list|()
return|;
block|}
comment|/**    * Gets the file format.    *    * @return the file format    */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#fileFormat()}. To be removed in Hive 0.16.
specifier|public
name|String
name|getFileFormat
parameter_list|()
block|{
return|return
name|this
operator|.
name|hcatTable
operator|.
name|fileFormat
argument_list|()
return|;
block|}
comment|/**    * Gets the database name.    *    * @return the database name    */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#getDbName()}. To be removed in Hive 0.16.
specifier|public
name|String
name|getDatabaseName
parameter_list|()
block|{
return|return
name|this
operator|.
name|hcatTable
operator|.
name|getDbName
argument_list|()
return|;
block|}
comment|/**    * Gets the SerDe parameters; for example see {@link org.apache.hive.hcatalog.api.HCatCreateTableDesc.Builder#fieldsTerminatedBy(char)}    */
annotation|@
name|Deprecated
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getSerdeParams
parameter_list|()
block|{
return|return
name|this
operator|.
name|hcatTable
operator|.
name|getSerdeParams
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"HCatCreateTableDesc [ "
operator|+
name|hcatTable
operator|.
name|toString
argument_list|()
operator|+
literal|", ifNotExists = "
operator|+
name|ifNotExists
operator|+
literal|"]"
return|;
block|}
specifier|public
specifier|static
class|class
name|Builder
block|{
specifier|private
name|boolean
name|ifNotExists
decl_stmt|;
specifier|private
name|HCatTable
name|hcatTable
decl_stmt|;
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link #Builder(HCatTable, boolean)}. To be removed in Hive 0.16.
specifier|private
name|Builder
parameter_list|(
name|String
name|dbName
parameter_list|,
name|String
name|tableName
parameter_list|,
name|List
argument_list|<
name|HCatFieldSchema
argument_list|>
name|columns
parameter_list|)
block|{
name|hcatTable
operator|=
operator|new
name|HCatTable
argument_list|(
name|dbName
argument_list|,
name|tableName
argument_list|)
operator|.
name|cols
argument_list|(
name|columns
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|HCatTable
name|hcatTable
parameter_list|,
name|boolean
name|ifNotExists
parameter_list|)
block|{
name|this
operator|.
name|hcatTable
operator|=
name|hcatTable
expr_stmt|;
name|this
operator|.
name|ifNotExists
operator|=
name|ifNotExists
expr_stmt|;
block|}
comment|/**      * If not exists.      *      * @param ifNotExists If set to true, hive will not throw exception, if a      * table with the same name already exists.      * @return the builder      */
specifier|public
name|Builder
name|ifNotExists
parameter_list|(
name|boolean
name|ifNotExists
parameter_list|)
block|{
name|this
operator|.
name|ifNotExists
operator|=
name|ifNotExists
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Partition cols.      *      * @param partCols the partition cols      * @return the builder      */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#partCols(List<FieldSchema>)}. To be removed in Hive 0.16.
specifier|public
name|Builder
name|partCols
parameter_list|(
name|List
argument_list|<
name|HCatFieldSchema
argument_list|>
name|partCols
parameter_list|)
block|{
name|this
operator|.
name|hcatTable
operator|.
name|partCols
argument_list|(
name|partCols
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Bucket cols.      *      * @param bucketCols the bucket cols      * @return the builder      */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#bucketCols(List<FieldSchema>) and HCatTable.#numBuckets(int)}.
comment|// To be removed in Hive 0.16.
specifier|public
name|Builder
name|bucketCols
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|bucketCols
parameter_list|,
name|int
name|buckets
parameter_list|)
block|{
name|this
operator|.
name|hcatTable
operator|.
name|bucketCols
argument_list|(
name|bucketCols
argument_list|)
operator|.
name|numBuckets
argument_list|(
name|buckets
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Storage handler.      *      * @param storageHandler the storage handler      * @return the builder      */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#storageHandler(String)}. To be removed in Hive 0.16.
specifier|public
name|Builder
name|storageHandler
parameter_list|(
name|String
name|storageHandler
parameter_list|)
throws|throws
name|HCatException
block|{
name|this
operator|.
name|hcatTable
operator|.
name|storageHandler
argument_list|(
name|storageHandler
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Location.      *      * @param location the location      * @return the builder      */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#location(String)}. To be removed in Hive 0.16.
specifier|public
name|Builder
name|location
parameter_list|(
name|String
name|location
parameter_list|)
block|{
name|this
operator|.
name|hcatTable
operator|.
name|location
argument_list|(
name|location
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Comments.      *      * @param comment the comment      * @return the builder      */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#comment(String)}. To be removed in Hive 0.16.
specifier|public
name|Builder
name|comments
parameter_list|(
name|String
name|comment
parameter_list|)
block|{
name|this
operator|.
name|hcatTable
operator|.
name|comment
argument_list|(
name|comment
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Checks if is table external.      *      * @param isExternal the is external      * @return the builder      */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#tableType(HCatTable.Type)}. To be removed in Hive 0.16.
specifier|public
name|Builder
name|isTableExternal
parameter_list|(
name|boolean
name|isExternal
parameter_list|)
block|{
name|this
operator|.
name|hcatTable
operator|.
name|tableType
argument_list|(
name|isExternal
condition|?
name|HCatTable
operator|.
name|Type
operator|.
name|EXTERNAL_TABLE
else|:
name|HCatTable
operator|.
name|Type
operator|.
name|MANAGED_TABLE
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Sort cols.      *      * @param sortCols the sort cols      * @return the builder      */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#sortCols(ArrayList<Order>)}. To be removed in Hive 0.16.
specifier|public
name|Builder
name|sortCols
parameter_list|(
name|ArrayList
argument_list|<
name|Order
argument_list|>
name|sortCols
parameter_list|)
block|{
name|this
operator|.
name|hcatTable
operator|.
name|sortCols
argument_list|(
name|sortCols
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Tbl props.      *      * @param tblProps the tbl props      * @return the builder      */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#sortCols(Map<String, String>)}.
comment|// To be removed in Hive 0.16.
specifier|public
name|Builder
name|tblProps
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|tblProps
parameter_list|)
block|{
name|this
operator|.
name|hcatTable
operator|.
name|tblProps
argument_list|(
name|tblProps
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * File format.      *      * @param format the format      * @return the builder      */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#fileFormat(String)}. To be removed in Hive 0.16.
specifier|public
name|Builder
name|fileFormat
parameter_list|(
name|String
name|format
parameter_list|)
block|{
name|this
operator|.
name|hcatTable
operator|.
name|fileFormat
argument_list|(
name|format
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * See<i>row_format</i> element of CREATE_TABLE DDL for Hive.      */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#fieldsTerminatedBy()}. To be removed in Hive 0.16.
specifier|public
name|Builder
name|fieldsTerminatedBy
parameter_list|(
name|char
name|delimiter
parameter_list|)
block|{
return|return
name|serdeParam
argument_list|(
name|serdeConstants
operator|.
name|FIELD_DELIM
argument_list|,
name|Character
operator|.
name|toString
argument_list|(
name|delimiter
argument_list|)
argument_list|)
return|;
block|}
comment|/**      * See<i>row_format</i> element of CREATE_TABLE DDL for Hive.      */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#escapeChar()}.
specifier|public
name|Builder
name|escapeChar
parameter_list|(
name|char
name|escapeChar
parameter_list|)
block|{
return|return
name|serdeParam
argument_list|(
name|serdeConstants
operator|.
name|ESCAPE_CHAR
argument_list|,
name|Character
operator|.
name|toString
argument_list|(
name|escapeChar
argument_list|)
argument_list|)
return|;
block|}
comment|/**      * See<i>row_format</i> element of CREATE_TABLE DDL for Hive.      */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#collectionItemsTerminatedBy()}. To be removed in Hive 0.16.
specifier|public
name|Builder
name|collectionItemsTerminatedBy
parameter_list|(
name|char
name|delimiter
parameter_list|)
block|{
return|return
name|serdeParam
argument_list|(
name|serdeConstants
operator|.
name|COLLECTION_DELIM
argument_list|,
name|Character
operator|.
name|toString
argument_list|(
name|delimiter
argument_list|)
argument_list|)
return|;
block|}
comment|/**      * See<i>row_format</i> element of CREATE_TABLE DDL for Hive.      */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#mapKeysTerminatedBy()}. To be removed in Hive 0.16.
specifier|public
name|Builder
name|mapKeysTerminatedBy
parameter_list|(
name|char
name|delimiter
parameter_list|)
block|{
return|return
name|serdeParam
argument_list|(
name|serdeConstants
operator|.
name|MAPKEY_DELIM
argument_list|,
name|Character
operator|.
name|toString
argument_list|(
name|delimiter
argument_list|)
argument_list|)
return|;
block|}
comment|/**      * See<i>row_format</i> element of CREATE_TABLE DDL for Hive.      */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#linesTerminatedBy()}. To be removed in Hive 0.16.
specifier|public
name|Builder
name|linesTerminatedBy
parameter_list|(
name|char
name|delimiter
parameter_list|)
block|{
return|return
name|serdeParam
argument_list|(
name|serdeConstants
operator|.
name|LINE_DELIM
argument_list|,
name|Character
operator|.
name|toString
argument_list|(
name|delimiter
argument_list|)
argument_list|)
return|;
block|}
comment|/**      * See<i>row_format</i> element of CREATE_TABLE DDL for Hive.      */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#nullDefinedAs()}. To be removed in Hive 0.16.
specifier|public
name|Builder
name|nullDefinedAs
parameter_list|(
name|char
name|nullChar
parameter_list|)
block|{
return|return
name|serdeParam
argument_list|(
name|serdeConstants
operator|.
name|SERIALIZATION_NULL_FORMAT
argument_list|,
name|Character
operator|.
name|toString
argument_list|(
name|nullChar
argument_list|)
argument_list|)
return|;
block|}
comment|/**      * used for setting arbitrary SerDe parameter      */
annotation|@
name|Deprecated
comment|// @deprecated in favour of {@link HCatTable.#serdeParam(Map<String, String>)}.
comment|// To be removed in Hive 0.16.
specifier|public
name|Builder
name|serdeParam
parameter_list|(
name|String
name|paramName
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|hcatTable
operator|.
name|serdeParam
argument_list|(
name|paramName
argument_list|,
name|value
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Builds the HCatCreateTableDesc.      *      * @return HCatCreateTableDesc      * @throws HCatException      */
specifier|public
name|HCatCreateTableDesc
name|build
parameter_list|()
throws|throws
name|HCatException
block|{
return|return
operator|new
name|HCatCreateTableDesc
argument_list|(
name|this
operator|.
name|hcatTable
argument_list|,
name|this
operator|.
name|ifNotExists
argument_list|)
return|;
block|}
block|}
comment|// class Builder;
block|}
end_class

begin_comment
comment|// class HCatAddPartitionDesc;
end_comment

end_unit

