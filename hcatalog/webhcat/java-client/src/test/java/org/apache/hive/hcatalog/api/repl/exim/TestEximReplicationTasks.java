begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|api
operator|.
name|repl
operator|.
name|exim
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Function
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|FieldSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|NotificationEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Partition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|api
operator|.
name|HCatClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|api
operator|.
name|HCatNotificationEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|api
operator|.
name|TestHCatClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|api
operator|.
name|repl
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|api
operator|.
name|repl
operator|.
name|CommandTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|api
operator|.
name|repl
operator|.
name|NoopReplicationTask
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|api
operator|.
name|repl
operator|.
name|ReplicationTask
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|api
operator|.
name|repl
operator|.
name|ReplicationUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|api
operator|.
name|repl
operator|.
name|StagingDirectoryProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|api
operator|.
name|repl
operator|.
name|commands
operator|.
name|DropDatabaseCommand
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|api
operator|.
name|repl
operator|.
name|commands
operator|.
name|DropPartitionCommand
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|api
operator|.
name|repl
operator|.
name|commands
operator|.
name|DropTableCommand
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|api
operator|.
name|repl
operator|.
name|commands
operator|.
name|ExportCommand
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|api
operator|.
name|repl
operator|.
name|commands
operator|.
name|ImportCommand
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|api
operator|.
name|repl
operator|.
name|commands
operator|.
name|NoopCommand
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|common
operator|.
name|HCatConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|common
operator|.
name|HCatException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|data
operator|.
name|schema
operator|.
name|HCatSchemaUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|messaging
operator|.
name|MessageFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|TestEximReplicationTasks
block|{
specifier|private
specifier|static
name|MessageFactory
name|msgFactory
init|=
name|MessageFactory
operator|.
name|getInstance
argument_list|()
decl_stmt|;
specifier|private
specifier|static
name|StagingDirectoryProvider
name|stagingDirectoryProvider
init|=
operator|new
name|StagingDirectoryProvider
operator|.
name|TrivialImpl
argument_list|(
literal|"/tmp"
argument_list|,
literal|"/"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|HCatClient
name|client
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|setUpBeforeClass
parameter_list|()
throws|throws
name|HCatException
block|{
name|client
operator|=
name|HCatClient
operator|.
name|create
argument_list|(
operator|new
name|HiveConf
argument_list|()
argument_list|)
expr_stmt|;
name|ReplicationTask
operator|.
name|resetFactory
argument_list|(
name|EximReplicationTaskFactory
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
comment|// Dummy mapping used for all db and table name mappings
specifier|static
name|Function
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|debugMapping
init|=
operator|new
name|Function
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
block|{
annotation|@
name|Nullable
annotation|@
name|Override
specifier|public
name|String
name|apply
parameter_list|(
annotation|@
name|Nullable
name|String
name|s
parameter_list|)
block|{
if|if
condition|(
name|s
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
else|else
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|(
name|s
argument_list|)
decl_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
operator|+
name|sb
operator|.
name|reverse
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
block|}
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testDebugMapper
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"BlahhalB"
argument_list|,
name|debugMapping
operator|.
name|apply
argument_list|(
literal|"Blah"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|debugMapping
operator|.
name|apply
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|debugMapping
operator|.
name|apply
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateDb
parameter_list|()
block|{
name|Database
name|db
init|=
operator|new
name|Database
argument_list|()
decl_stmt|;
name|db
operator|.
name|setName
argument_list|(
literal|"testdb"
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
operator|new
name|NotificationEvent
argument_list|(
name|getEventId
argument_list|()
argument_list|,
name|getTime
argument_list|()
argument_list|,
name|HCatConstants
operator|.
name|HCAT_CREATE_DATABASE_EVENT
argument_list|,
name|msgFactory
operator|.
name|buildCreateDatabaseMessage
argument_list|(
name|db
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|event
operator|.
name|setDbName
argument_list|(
name|db
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|HCatNotificationEvent
name|hev
init|=
operator|new
name|HCatNotificationEvent
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|ReplicationTask
name|rtask
init|=
name|ReplicationTask
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hev
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|hev
operator|.
name|toString
argument_list|()
argument_list|,
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|verifyCreateDbReplicationTask
argument_list|(
name|rtask
argument_list|)
expr_stmt|;
comment|// CREATE DB currently replicated as Noop.
block|}
specifier|private
specifier|static
name|void
name|verifyCreateDbReplicationTask
parameter_list|(
name|ReplicationTask
name|rtask
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|CreateDatabaseReplicationTask
operator|.
name|class
argument_list|,
name|rtask
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"CreateDatabaseReplicationTask should be a noop"
argument_list|,
name|rtask
operator|instanceof
name|NoopReplicationTask
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rtask
operator|.
name|needsStagingDirs
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rtask
operator|.
name|isActionable
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Command
name|c
range|:
name|rtask
operator|.
name|getSrcWhCommands
argument_list|()
control|)
block|{
name|assertEquals
argument_list|(
name|NoopCommand
operator|.
name|class
argument_list|,
name|c
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|Command
name|c
range|:
name|rtask
operator|.
name|getDstWhCommands
argument_list|()
control|)
block|{
name|assertEquals
argument_list|(
name|NoopCommand
operator|.
name|class
argument_list|,
name|c
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDropDb
parameter_list|()
throws|throws
name|IOException
block|{
name|Database
name|db
init|=
operator|new
name|Database
argument_list|()
decl_stmt|;
name|db
operator|.
name|setName
argument_list|(
literal|"testdb"
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
operator|new
name|NotificationEvent
argument_list|(
name|getEventId
argument_list|()
argument_list|,
name|getTime
argument_list|()
argument_list|,
name|HCatConstants
operator|.
name|HCAT_DROP_DATABASE_EVENT
argument_list|,
name|msgFactory
operator|.
name|buildCreateDatabaseMessage
argument_list|(
name|db
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|event
operator|.
name|setDbName
argument_list|(
name|db
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|HCatNotificationEvent
name|hev
init|=
operator|new
name|HCatNotificationEvent
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|ReplicationTask
name|rtask
init|=
name|ReplicationTask
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hev
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|hev
operator|.
name|toString
argument_list|()
argument_list|,
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|verifyDropDbReplicationTask
argument_list|(
name|rtask
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|verifyDropDbReplicationTask
parameter_list|(
name|ReplicationTask
name|rtask
parameter_list|)
throws|throws
name|IOException
block|{
name|assertEquals
argument_list|(
name|DropDatabaseReplicationTask
operator|.
name|class
argument_list|,
name|rtask
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rtask
operator|.
name|needsStagingDirs
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rtask
operator|.
name|isActionable
argument_list|()
argument_list|)
expr_stmt|;
name|rtask
operator|.
name|withDbNameMapping
argument_list|(
name|debugMapping
argument_list|)
operator|.
name|withTableNameMapping
argument_list|(
name|debugMapping
argument_list|)
expr_stmt|;
for|for
control|(
name|Command
name|c
range|:
name|rtask
operator|.
name|getSrcWhCommands
argument_list|()
control|)
block|{
name|assertEquals
argument_list|(
name|NoopCommand
operator|.
name|class
argument_list|,
name|c
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|?
extends|extends
name|Command
argument_list|>
name|dstCommands
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|rtask
operator|.
name|getDstWhCommands
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dstCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DropDatabaseCommand
operator|.
name|class
argument_list|,
name|dstCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|DropDatabaseCommand
name|dropDatabaseCommand
init|=
operator|new
name|DropDatabaseCommand
argument_list|(
name|debugMapping
operator|.
name|apply
argument_list|(
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|getDbName
argument_list|()
argument_list|)
argument_list|,
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|getEventId
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ReplicationUtils
operator|.
name|serializeCommand
argument_list|(
name|dropDatabaseCommand
argument_list|)
argument_list|,
name|ReplicationUtils
operator|.
name|serializeCommand
argument_list|(
name|dstCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateTable
parameter_list|()
throws|throws
name|IOException
block|{
name|Table
name|t
init|=
operator|new
name|Table
argument_list|()
decl_stmt|;
name|t
operator|.
name|setDbName
argument_list|(
literal|"testdb"
argument_list|)
expr_stmt|;
name|t
operator|.
name|setTableName
argument_list|(
literal|"testtable"
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
operator|new
name|NotificationEvent
argument_list|(
name|getEventId
argument_list|()
argument_list|,
name|getTime
argument_list|()
argument_list|,
name|HCatConstants
operator|.
name|HCAT_CREATE_TABLE_EVENT
argument_list|,
name|msgFactory
operator|.
name|buildCreateTableMessage
argument_list|(
name|t
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|event
operator|.
name|setDbName
argument_list|(
name|t
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|setTableName
argument_list|(
name|t
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|HCatNotificationEvent
name|hev
init|=
operator|new
name|HCatNotificationEvent
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|ReplicationTask
name|rtask
init|=
name|ReplicationTask
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hev
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|hev
operator|.
name|toString
argument_list|()
argument_list|,
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|verifyCreateTableReplicationTask
argument_list|(
name|rtask
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|verifyCreateTableReplicationTask
parameter_list|(
name|ReplicationTask
name|rtask
parameter_list|)
throws|throws
name|IOException
block|{
name|assertEquals
argument_list|(
name|CreateTableReplicationTask
operator|.
name|class
argument_list|,
name|rtask
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rtask
operator|.
name|needsStagingDirs
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rtask
operator|.
name|isActionable
argument_list|()
argument_list|)
expr_stmt|;
name|rtask
operator|.
name|withSrcStagingDirProvider
argument_list|(
name|stagingDirectoryProvider
argument_list|)
operator|.
name|withDstStagingDirProvider
argument_list|(
name|stagingDirectoryProvider
argument_list|)
operator|.
name|withDbNameMapping
argument_list|(
name|debugMapping
argument_list|)
operator|.
name|withTableNameMapping
argument_list|(
name|debugMapping
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rtask
operator|.
name|isActionable
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Command
argument_list|>
name|srcCommands
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|rtask
operator|.
name|getSrcWhCommands
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|srcCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ExportCommand
operator|.
name|class
argument_list|,
name|srcCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|ExportCommand
name|exportCommand
init|=
name|getExpectedExportCommand
argument_list|(
name|rtask
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ReplicationUtils
operator|.
name|serializeCommand
argument_list|(
name|exportCommand
argument_list|)
argument_list|,
name|ReplicationUtils
operator|.
name|serializeCommand
argument_list|(
name|srcCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Command
argument_list|>
name|dstCommands
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|rtask
operator|.
name|getDstWhCommands
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dstCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ImportCommand
operator|.
name|class
argument_list|,
name|dstCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|ImportCommand
name|importCommand
init|=
name|getExpectedImportCommand
argument_list|(
name|rtask
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ReplicationUtils
operator|.
name|serializeCommand
argument_list|(
name|importCommand
argument_list|)
argument_list|,
name|ReplicationUtils
operator|.
name|serializeCommand
argument_list|(
name|dstCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDropTable
parameter_list|()
throws|throws
name|IOException
block|{
name|Table
name|t
init|=
operator|new
name|Table
argument_list|()
decl_stmt|;
name|t
operator|.
name|setDbName
argument_list|(
literal|"testdb"
argument_list|)
expr_stmt|;
name|t
operator|.
name|setTableName
argument_list|(
literal|"testtable"
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
operator|new
name|NotificationEvent
argument_list|(
name|getEventId
argument_list|()
argument_list|,
name|getTime
argument_list|()
argument_list|,
name|HCatConstants
operator|.
name|HCAT_DROP_TABLE_EVENT
argument_list|,
name|msgFactory
operator|.
name|buildDropTableMessage
argument_list|(
name|t
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|event
operator|.
name|setDbName
argument_list|(
name|t
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|setTableName
argument_list|(
name|t
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|HCatNotificationEvent
name|hev
init|=
operator|new
name|HCatNotificationEvent
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|ReplicationTask
name|rtask
init|=
name|ReplicationTask
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hev
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|hev
operator|.
name|toString
argument_list|()
argument_list|,
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|verifyDropTableReplicationTask
argument_list|(
name|rtask
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|verifyDropTableReplicationTask
parameter_list|(
name|ReplicationTask
name|rtask
parameter_list|)
throws|throws
name|IOException
block|{
name|assertEquals
argument_list|(
name|DropTableReplicationTask
operator|.
name|class
argument_list|,
name|rtask
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rtask
operator|.
name|needsStagingDirs
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rtask
operator|.
name|isActionable
argument_list|()
argument_list|)
expr_stmt|;
name|rtask
operator|.
name|withDbNameMapping
argument_list|(
name|debugMapping
argument_list|)
operator|.
name|withTableNameMapping
argument_list|(
name|debugMapping
argument_list|)
expr_stmt|;
for|for
control|(
name|Command
name|c
range|:
name|rtask
operator|.
name|getSrcWhCommands
argument_list|()
control|)
block|{
name|assertEquals
argument_list|(
name|NoopCommand
operator|.
name|class
argument_list|,
name|c
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|?
extends|extends
name|Command
argument_list|>
name|dstCommands
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|rtask
operator|.
name|getDstWhCommands
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dstCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DropTableCommand
operator|.
name|class
argument_list|,
name|dstCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|DropTableCommand
name|dropTableCommand
init|=
operator|new
name|DropTableCommand
argument_list|(
name|debugMapping
operator|.
name|apply
argument_list|(
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|getDbName
argument_list|()
argument_list|)
argument_list|,
name|debugMapping
operator|.
name|apply
argument_list|(
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|getTableName
argument_list|()
argument_list|)
argument_list|,
literal|true
argument_list|,
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|getEventId
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ReplicationUtils
operator|.
name|serializeCommand
argument_list|(
name|dropTableCommand
argument_list|)
argument_list|,
name|ReplicationUtils
operator|.
name|serializeCommand
argument_list|(
name|dstCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAlterTable
parameter_list|()
throws|throws
name|IOException
block|{
name|Table
name|t
init|=
operator|new
name|Table
argument_list|()
decl_stmt|;
name|t
operator|.
name|setDbName
argument_list|(
literal|"testdb"
argument_list|)
expr_stmt|;
name|t
operator|.
name|setTableName
argument_list|(
literal|"testtable"
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
operator|new
name|NotificationEvent
argument_list|(
name|getEventId
argument_list|()
argument_list|,
name|getTime
argument_list|()
argument_list|,
name|HCatConstants
operator|.
name|HCAT_ALTER_TABLE_EVENT
argument_list|,
name|msgFactory
operator|.
name|buildAlterTableMessage
argument_list|(
name|t
argument_list|,
name|t
argument_list|,
name|t
operator|.
name|getWriteId
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|event
operator|.
name|setDbName
argument_list|(
name|t
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|setTableName
argument_list|(
name|t
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|HCatNotificationEvent
name|hev
init|=
operator|new
name|HCatNotificationEvent
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|ReplicationTask
name|rtask
init|=
name|ReplicationTask
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hev
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|hev
operator|.
name|toString
argument_list|()
argument_list|,
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|verifyAlterTableReplicationTask
argument_list|(
name|rtask
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|verifyAlterTableReplicationTask
parameter_list|(
name|ReplicationTask
name|rtask
parameter_list|)
throws|throws
name|IOException
block|{
name|assertEquals
argument_list|(
name|AlterTableReplicationTask
operator|.
name|class
argument_list|,
name|rtask
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rtask
operator|.
name|needsStagingDirs
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rtask
operator|.
name|isActionable
argument_list|()
argument_list|)
expr_stmt|;
name|rtask
operator|.
name|withSrcStagingDirProvider
argument_list|(
name|stagingDirectoryProvider
argument_list|)
operator|.
name|withDstStagingDirProvider
argument_list|(
name|stagingDirectoryProvider
argument_list|)
operator|.
name|withDbNameMapping
argument_list|(
name|debugMapping
argument_list|)
operator|.
name|withTableNameMapping
argument_list|(
name|debugMapping
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rtask
operator|.
name|isActionable
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Command
argument_list|>
name|srcCommands
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|rtask
operator|.
name|getSrcWhCommands
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|srcCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ExportCommand
operator|.
name|class
argument_list|,
name|srcCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|ExportCommand
name|exportCommand
init|=
name|getExpectedExportCommand
argument_list|(
name|rtask
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ReplicationUtils
operator|.
name|serializeCommand
argument_list|(
name|exportCommand
argument_list|)
argument_list|,
name|ReplicationUtils
operator|.
name|serializeCommand
argument_list|(
name|srcCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Command
argument_list|>
name|dstCommands
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|rtask
operator|.
name|getDstWhCommands
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dstCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ImportCommand
operator|.
name|class
argument_list|,
name|dstCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|ImportCommand
name|importCommand
init|=
name|getExpectedImportCommand
argument_list|(
name|rtask
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|ReplicationUtils
operator|.
name|serializeCommand
argument_list|(
name|importCommand
argument_list|)
argument_list|,
name|ReplicationUtils
operator|.
name|serializeCommand
argument_list|(
name|dstCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddPartition
parameter_list|()
throws|throws
name|IOException
block|{
name|Table
name|t
init|=
operator|new
name|Table
argument_list|()
decl_stmt|;
name|t
operator|.
name|setDbName
argument_list|(
literal|"testdb"
argument_list|)
expr_stmt|;
name|t
operator|.
name|setTableName
argument_list|(
literal|"testtable"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|pkeys
init|=
name|HCatSchemaUtils
operator|.
name|getFieldSchemas
argument_list|(
name|HCatSchemaUtils
operator|.
name|getHCatSchema
argument_list|(
literal|"a:int,b:string"
argument_list|)
operator|.
name|getFields
argument_list|()
argument_list|)
decl_stmt|;
name|t
operator|.
name|setPartitionKeys
argument_list|(
name|pkeys
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|addedPtns
init|=
operator|new
name|ArrayList
argument_list|<
name|Partition
argument_list|>
argument_list|()
decl_stmt|;
name|addedPtns
operator|.
name|add
argument_list|(
name|createPtn
argument_list|(
name|t
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"120"
argument_list|,
literal|"abc"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|addedPtns
operator|.
name|add
argument_list|(
name|createPtn
argument_list|(
name|t
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"201"
argument_list|,
literal|"xyz"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
operator|new
name|NotificationEvent
argument_list|(
name|getEventId
argument_list|()
argument_list|,
name|getTime
argument_list|()
argument_list|,
name|HCatConstants
operator|.
name|HCAT_ADD_PARTITION_EVENT
argument_list|,
name|msgFactory
operator|.
name|buildAddPartitionMessage
argument_list|(
name|t
argument_list|,
name|addedPtns
operator|.
name|iterator
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|event
operator|.
name|setDbName
argument_list|(
name|t
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|setTableName
argument_list|(
name|t
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|HCatNotificationEvent
name|hev
init|=
operator|new
name|HCatNotificationEvent
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|ReplicationTask
name|rtask
init|=
name|ReplicationTask
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hev
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|hev
operator|.
name|toString
argument_list|()
argument_list|,
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|verifyAddPartitionReplicationTask
argument_list|(
name|rtask
argument_list|,
name|t
argument_list|,
name|addedPtns
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|verifyAddPartitionReplicationTask
parameter_list|(
name|ReplicationTask
name|rtask
parameter_list|,
name|Table
name|table
parameter_list|,
name|List
argument_list|<
name|Partition
argument_list|>
name|addedPtns
parameter_list|)
throws|throws
name|IOException
block|{
name|assertEquals
argument_list|(
name|AddPartitionReplicationTask
operator|.
name|class
argument_list|,
name|rtask
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rtask
operator|.
name|needsStagingDirs
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rtask
operator|.
name|isActionable
argument_list|()
argument_list|)
expr_stmt|;
name|rtask
operator|.
name|withSrcStagingDirProvider
argument_list|(
name|stagingDirectoryProvider
argument_list|)
operator|.
name|withDstStagingDirProvider
argument_list|(
name|stagingDirectoryProvider
argument_list|)
operator|.
name|withDbNameMapping
argument_list|(
name|debugMapping
argument_list|)
operator|.
name|withTableNameMapping
argument_list|(
name|debugMapping
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rtask
operator|.
name|isActionable
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Command
argument_list|>
name|srcCommands
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|rtask
operator|.
name|getSrcWhCommands
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|srcCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ExportCommand
operator|.
name|class
argument_list|,
name|srcCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ExportCommand
operator|.
name|class
argument_list|,
name|srcCommands
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|ExportCommand
name|exportCommand1
init|=
name|getExpectedExportCommand
argument_list|(
name|rtask
argument_list|,
name|getPtnDesc
argument_list|(
name|table
argument_list|,
name|addedPtns
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|ExportCommand
name|exportCommand2
init|=
name|getExpectedExportCommand
argument_list|(
name|rtask
argument_list|,
name|getPtnDesc
argument_list|(
name|table
argument_list|,
name|addedPtns
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|CommandTestUtils
operator|.
name|compareCommands
argument_list|(
name|exportCommand1
argument_list|,
name|srcCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|CommandTestUtils
operator|.
name|compareCommands
argument_list|(
name|exportCommand2
argument_list|,
name|srcCommands
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Command
argument_list|>
name|dstCommands
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|rtask
operator|.
name|getDstWhCommands
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|dstCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ImportCommand
operator|.
name|class
argument_list|,
name|dstCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ImportCommand
operator|.
name|class
argument_list|,
name|dstCommands
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|ImportCommand
name|importCommand1
init|=
name|getExpectedImportCommand
argument_list|(
name|rtask
argument_list|,
name|getPtnDesc
argument_list|(
name|table
argument_list|,
name|addedPtns
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|ImportCommand
name|importCommand2
init|=
name|getExpectedImportCommand
argument_list|(
name|rtask
argument_list|,
name|getPtnDesc
argument_list|(
name|table
argument_list|,
name|addedPtns
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|CommandTestUtils
operator|.
name|compareCommands
argument_list|(
name|importCommand1
argument_list|,
name|dstCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|CommandTestUtils
operator|.
name|compareCommands
argument_list|(
name|importCommand2
argument_list|,
name|dstCommands
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getPtnDesc
parameter_list|(
name|Table
name|t
parameter_list|,
name|Partition
name|p
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|t
operator|.
name|getPartitionKeysSize
argument_list|()
argument_list|,
name|p
operator|.
name|getValuesSize
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|retval
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|Iterator
argument_list|<
name|String
argument_list|>
name|pval
init|=
name|p
operator|.
name|getValuesIterator
argument_list|()
decl_stmt|;
for|for
control|(
name|FieldSchema
name|fs
range|:
name|t
operator|.
name|getPartitionKeys
argument_list|()
control|)
block|{
name|retval
operator|.
name|put
argument_list|(
name|fs
operator|.
name|getName
argument_list|()
argument_list|,
name|pval
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|retval
return|;
block|}
specifier|private
specifier|static
name|Partition
name|createPtn
parameter_list|(
name|Table
name|t
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|pvals
parameter_list|)
block|{
name|Partition
name|ptn
init|=
operator|new
name|Partition
argument_list|()
decl_stmt|;
name|ptn
operator|.
name|setDbName
argument_list|(
name|t
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|ptn
operator|.
name|setTableName
argument_list|(
name|t
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|ptn
operator|.
name|setValues
argument_list|(
name|pvals
argument_list|)
expr_stmt|;
return|return
name|ptn
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDropPartition
parameter_list|()
throws|throws
name|HCatException
block|{
name|Table
name|t
init|=
operator|new
name|Table
argument_list|()
decl_stmt|;
name|t
operator|.
name|setDbName
argument_list|(
literal|"testdb"
argument_list|)
expr_stmt|;
name|t
operator|.
name|setTableName
argument_list|(
literal|"testtable"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|pkeys
init|=
name|HCatSchemaUtils
operator|.
name|getFieldSchemas
argument_list|(
name|HCatSchemaUtils
operator|.
name|getHCatSchema
argument_list|(
literal|"a:int,b:string"
argument_list|)
operator|.
name|getFields
argument_list|()
argument_list|)
decl_stmt|;
name|t
operator|.
name|setPartitionKeys
argument_list|(
name|pkeys
argument_list|)
expr_stmt|;
name|Partition
name|p
init|=
name|createPtn
argument_list|(
name|t
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"102"
argument_list|,
literal|"lmn"
argument_list|)
argument_list|)
decl_stmt|;
name|NotificationEvent
name|event
init|=
operator|new
name|NotificationEvent
argument_list|(
name|getEventId
argument_list|()
argument_list|,
name|getTime
argument_list|()
argument_list|,
name|HCatConstants
operator|.
name|HCAT_DROP_PARTITION_EVENT
argument_list|,
name|msgFactory
operator|.
name|buildDropPartitionMessage
argument_list|(
name|t
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|p
argument_list|)
operator|.
name|iterator
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|event
operator|.
name|setDbName
argument_list|(
name|t
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|setTableName
argument_list|(
name|t
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|HCatNotificationEvent
name|hev
init|=
operator|new
name|HCatNotificationEvent
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|ReplicationTask
name|rtask
init|=
name|ReplicationTask
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hev
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|hev
operator|.
name|toString
argument_list|()
argument_list|,
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|verifyDropPartitionReplicationTask
argument_list|(
name|rtask
argument_list|,
name|t
argument_list|,
name|p
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|verifyDropPartitionReplicationTask
parameter_list|(
name|ReplicationTask
name|rtask
parameter_list|,
name|Table
name|table
parameter_list|,
name|Partition
name|ptn
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|DropPartitionReplicationTask
operator|.
name|class
argument_list|,
name|rtask
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rtask
operator|.
name|needsStagingDirs
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rtask
operator|.
name|isActionable
argument_list|()
argument_list|)
expr_stmt|;
name|rtask
operator|.
name|withDbNameMapping
argument_list|(
name|debugMapping
argument_list|)
operator|.
name|withTableNameMapping
argument_list|(
name|debugMapping
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rtask
operator|.
name|isActionable
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Command
name|c
range|:
name|rtask
operator|.
name|getSrcWhCommands
argument_list|()
control|)
block|{
name|assertEquals
argument_list|(
name|NoopCommand
operator|.
name|class
argument_list|,
name|c
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|?
extends|extends
name|Command
argument_list|>
name|dstCommands
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|rtask
operator|.
name|getDstWhCommands
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dstCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DropPartitionCommand
operator|.
name|class
argument_list|,
name|dstCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|DropPartitionCommand
name|dropPartitionCommand
init|=
operator|new
name|DropPartitionCommand
argument_list|(
name|debugMapping
operator|.
name|apply
argument_list|(
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|getDbName
argument_list|()
argument_list|)
argument_list|,
name|debugMapping
operator|.
name|apply
argument_list|(
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|getTableName
argument_list|()
argument_list|)
argument_list|,
name|getPtnDesc
argument_list|(
name|table
argument_list|,
name|ptn
argument_list|)
argument_list|,
literal|true
argument_list|,
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|getEventId
argument_list|()
argument_list|)
decl_stmt|;
name|CommandTestUtils
operator|.
name|compareCommands
argument_list|(
name|dropPartitionCommand
argument_list|,
name|dstCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAlterPartition
parameter_list|()
throws|throws
name|HCatException
block|{
name|Table
name|t
init|=
operator|new
name|Table
argument_list|()
decl_stmt|;
name|t
operator|.
name|setDbName
argument_list|(
literal|"testdb"
argument_list|)
expr_stmt|;
name|t
operator|.
name|setTableName
argument_list|(
literal|"testtable"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|pkeys
init|=
name|HCatSchemaUtils
operator|.
name|getFieldSchemas
argument_list|(
name|HCatSchemaUtils
operator|.
name|getHCatSchema
argument_list|(
literal|"a:int,b:string"
argument_list|)
operator|.
name|getFields
argument_list|()
argument_list|)
decl_stmt|;
name|t
operator|.
name|setPartitionKeys
argument_list|(
name|pkeys
argument_list|)
expr_stmt|;
name|Partition
name|p
init|=
name|createPtn
argument_list|(
name|t
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"102"
argument_list|,
literal|"lmn"
argument_list|)
argument_list|)
decl_stmt|;
name|NotificationEvent
name|event
init|=
operator|new
name|NotificationEvent
argument_list|(
name|getEventId
argument_list|()
argument_list|,
name|getTime
argument_list|()
argument_list|,
name|HCatConstants
operator|.
name|HCAT_ALTER_PARTITION_EVENT
argument_list|,
name|msgFactory
operator|.
name|buildAlterPartitionMessage
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
name|p
argument_list|,
name|p
operator|.
name|getWriteId
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|event
operator|.
name|setDbName
argument_list|(
name|t
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|setTableName
argument_list|(
name|t
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|HCatNotificationEvent
name|hev
init|=
operator|new
name|HCatNotificationEvent
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|ReplicationTask
name|rtask
init|=
name|ReplicationTask
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hev
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|hev
operator|.
name|toString
argument_list|()
argument_list|,
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|verifyAlterPartitionReplicationTask
argument_list|(
name|rtask
argument_list|,
name|t
argument_list|,
name|p
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|verifyAlterPartitionReplicationTask
parameter_list|(
name|ReplicationTask
name|rtask
parameter_list|,
name|Table
name|table
parameter_list|,
name|Partition
name|ptn
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|AlterPartitionReplicationTask
operator|.
name|class
argument_list|,
name|rtask
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rtask
operator|.
name|needsStagingDirs
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rtask
operator|.
name|isActionable
argument_list|()
argument_list|)
expr_stmt|;
name|rtask
operator|.
name|withSrcStagingDirProvider
argument_list|(
name|stagingDirectoryProvider
argument_list|)
operator|.
name|withDstStagingDirProvider
argument_list|(
name|stagingDirectoryProvider
argument_list|)
operator|.
name|withDbNameMapping
argument_list|(
name|debugMapping
argument_list|)
operator|.
name|withTableNameMapping
argument_list|(
name|debugMapping
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rtask
operator|.
name|isActionable
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Command
argument_list|>
name|srcCommands
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|rtask
operator|.
name|getSrcWhCommands
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|srcCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ExportCommand
operator|.
name|class
argument_list|,
name|srcCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|ExportCommand
name|exportCommand
init|=
name|getExpectedExportCommand
argument_list|(
name|rtask
argument_list|,
name|getPtnDesc
argument_list|(
name|table
argument_list|,
name|ptn
argument_list|)
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|CommandTestUtils
operator|.
name|compareCommands
argument_list|(
name|exportCommand
argument_list|,
name|srcCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Command
argument_list|>
name|dstCommands
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|rtask
operator|.
name|getDstWhCommands
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dstCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ImportCommand
operator|.
name|class
argument_list|,
name|dstCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|ImportCommand
name|importCommand
init|=
name|getExpectedImportCommand
argument_list|(
name|rtask
argument_list|,
name|getPtnDesc
argument_list|(
name|table
argument_list|,
name|ptn
argument_list|)
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|CommandTestUtils
operator|.
name|compareCommands
argument_list|(
name|importCommand
argument_list|,
name|dstCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInsert
parameter_list|()
throws|throws
name|HCatException
block|{
name|Table
name|t
init|=
operator|new
name|Table
argument_list|()
decl_stmt|;
name|t
operator|.
name|setDbName
argument_list|(
literal|"testdb"
argument_list|)
expr_stmt|;
name|t
operator|.
name|setTableName
argument_list|(
literal|"testtable"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|pkeys
init|=
name|HCatSchemaUtils
operator|.
name|getFieldSchemas
argument_list|(
name|HCatSchemaUtils
operator|.
name|getHCatSchema
argument_list|(
literal|"a:int,b:string"
argument_list|)
operator|.
name|getFields
argument_list|()
argument_list|)
decl_stmt|;
name|t
operator|.
name|setPartitionKeys
argument_list|(
name|pkeys
argument_list|)
expr_stmt|;
name|Partition
name|p
init|=
name|createPtn
argument_list|(
name|t
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"102"
argument_list|,
literal|"lmn"
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|files
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"/tmp/test123"
argument_list|)
decl_stmt|;
name|NotificationEvent
name|event
init|=
operator|new
name|NotificationEvent
argument_list|(
name|getEventId
argument_list|()
argument_list|,
name|getTime
argument_list|()
argument_list|,
name|HCatConstants
operator|.
name|HCAT_INSERT_EVENT
argument_list|,
name|msgFactory
operator|.
name|buildInsertMessage
argument_list|(
name|t
operator|.
name|getDbName
argument_list|()
argument_list|,
name|t
operator|.
name|getTableName
argument_list|()
argument_list|,
name|getPtnDesc
argument_list|(
name|t
argument_list|,
name|p
argument_list|)
argument_list|,
name|files
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|event
operator|.
name|setDbName
argument_list|(
name|t
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|.
name|setTableName
argument_list|(
name|t
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|HCatNotificationEvent
name|hev
init|=
operator|new
name|HCatNotificationEvent
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|ReplicationTask
name|rtask
init|=
name|ReplicationTask
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hev
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|hev
operator|.
name|toString
argument_list|()
argument_list|,
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|verifyInsertReplicationTask
argument_list|(
name|rtask
argument_list|,
name|t
argument_list|,
name|p
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|verifyInsertReplicationTask
parameter_list|(
name|ReplicationTask
name|rtask
parameter_list|,
name|Table
name|table
parameter_list|,
name|Partition
name|ptn
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|InsertReplicationTask
operator|.
name|class
argument_list|,
name|rtask
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rtask
operator|.
name|needsStagingDirs
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rtask
operator|.
name|isActionable
argument_list|()
argument_list|)
expr_stmt|;
name|rtask
operator|.
name|withSrcStagingDirProvider
argument_list|(
name|stagingDirectoryProvider
argument_list|)
operator|.
name|withDstStagingDirProvider
argument_list|(
name|stagingDirectoryProvider
argument_list|)
operator|.
name|withDbNameMapping
argument_list|(
name|debugMapping
argument_list|)
operator|.
name|withTableNameMapping
argument_list|(
name|debugMapping
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rtask
operator|.
name|isActionable
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Command
argument_list|>
name|srcCommands
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|rtask
operator|.
name|getSrcWhCommands
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|srcCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ExportCommand
operator|.
name|class
argument_list|,
name|srcCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|ExportCommand
name|exportCommand
init|=
name|getExpectedExportCommand
argument_list|(
name|rtask
argument_list|,
name|getPtnDesc
argument_list|(
name|table
argument_list|,
name|ptn
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|CommandTestUtils
operator|.
name|compareCommands
argument_list|(
name|exportCommand
argument_list|,
name|srcCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
extends|extends
name|Command
argument_list|>
name|dstCommands
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|rtask
operator|.
name|getDstWhCommands
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|dstCommands
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ImportCommand
operator|.
name|class
argument_list|,
name|dstCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|ImportCommand
name|importCommand
init|=
name|getExpectedImportCommand
argument_list|(
name|rtask
argument_list|,
name|getPtnDesc
argument_list|(
name|table
argument_list|,
name|ptn
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|CommandTestUtils
operator|.
name|compareCommands
argument_list|(
name|importCommand
argument_list|,
name|dstCommands
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|long
name|getEventId
parameter_list|()
block|{
comment|// Does not need to be unique, just non-zero distinct value to test against.
return|return
literal|42
return|;
block|}
specifier|private
specifier|static
name|int
name|getTime
parameter_list|()
block|{
comment|// Does not need to be actual time, just non-zero distinct value to test against.
return|return
literal|1729
return|;
block|}
specifier|private
specifier|static
name|ImportCommand
name|getExpectedImportCommand
parameter_list|(
name|ReplicationTask
name|rtask
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|ptnDesc
parameter_list|,
name|boolean
name|isMetadataOnly
parameter_list|)
block|{
name|String
name|dbName
init|=
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|getDbName
argument_list|()
decl_stmt|;
name|String
name|tableName
init|=
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|getTableName
argument_list|()
decl_stmt|;
return|return
operator|new
name|ImportCommand
argument_list|(
name|ReplicationUtils
operator|.
name|mapIfMapAvailable
argument_list|(
name|dbName
argument_list|,
name|debugMapping
argument_list|)
argument_list|,
name|ReplicationUtils
operator|.
name|mapIfMapAvailable
argument_list|(
name|tableName
argument_list|,
name|debugMapping
argument_list|)
argument_list|,
name|ptnDesc
argument_list|,
name|stagingDirectoryProvider
operator|.
name|getStagingDirectory
argument_list|(
name|ReplicationUtils
operator|.
name|getUniqueKey
argument_list|(
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|getEventId
argument_list|()
argument_list|,
name|dbName
argument_list|,
name|tableName
argument_list|,
name|ptnDesc
argument_list|)
argument_list|)
argument_list|,
name|isMetadataOnly
argument_list|,
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|getEventId
argument_list|()
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|ExportCommand
name|getExpectedExportCommand
parameter_list|(
name|ReplicationTask
name|rtask
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|ptnDesc
parameter_list|,
name|boolean
name|isMetadataOnly
parameter_list|)
block|{
name|String
name|dbName
init|=
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|getDbName
argument_list|()
decl_stmt|;
name|String
name|tableName
init|=
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|getTableName
argument_list|()
decl_stmt|;
return|return
operator|new
name|ExportCommand
argument_list|(
name|dbName
argument_list|,
name|tableName
argument_list|,
name|ptnDesc
argument_list|,
name|stagingDirectoryProvider
operator|.
name|getStagingDirectory
argument_list|(
name|ReplicationUtils
operator|.
name|getUniqueKey
argument_list|(
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|getEventId
argument_list|()
argument_list|,
name|dbName
argument_list|,
name|tableName
argument_list|,
name|ptnDesc
argument_list|)
argument_list|)
argument_list|,
name|isMetadataOnly
argument_list|,
name|rtask
operator|.
name|getEvent
argument_list|()
operator|.
name|getEventId
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

