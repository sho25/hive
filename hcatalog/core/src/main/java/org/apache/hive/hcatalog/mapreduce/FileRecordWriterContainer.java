begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|mapreduce
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|parquet
operator|.
name|write
operator|.
name|ParquetRecordWriterWrapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|HiveStorageHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|AbstractSerDe
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|SerDeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|NullWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Writable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|WritableComparable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|Reporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|RecordWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|JobContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|OutputCommitter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskAttemptContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|output
operator|.
name|FileOutputCommitter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|output
operator|.
name|FileOutputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|ReflectionUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|common
operator|.
name|ErrorType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|common
operator|.
name|HCatException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|common
operator|.
name|HCatUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|data
operator|.
name|HCatRecord
import|;
end_import

begin_comment
comment|/**  * Part of the FileOutput*Container classes See {@link FileOutputFormatContainer} for more  * information  */
end_comment

begin_class
specifier|abstract
class|class
name|FileRecordWriterContainer
extends|extends
name|RecordWriterContainer
block|{
specifier|protected
specifier|final
name|HiveStorageHandler
name|storageHandler
decl_stmt|;
specifier|protected
specifier|final
name|AbstractSerDe
name|serDe
decl_stmt|;
specifier|protected
specifier|final
name|ObjectInspector
name|objectInspector
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|Integer
argument_list|>
name|partColsToDel
decl_stmt|;
specifier|protected
name|OutputJobInfo
name|jobInfo
decl_stmt|;
specifier|protected
name|TaskAttemptContext
name|context
decl_stmt|;
comment|/**    * @param baseWriter RecordWriter to contain    * @param context current TaskAttemptContext    * @throws IOException    * @throws InterruptedException    */
specifier|public
name|FileRecordWriterContainer
parameter_list|(
name|RecordWriter
argument_list|<
name|?
super|super
name|WritableComparable
argument_list|<
name|?
argument_list|>
argument_list|,
name|?
super|super
name|Writable
argument_list|>
name|baseWriter
parameter_list|,
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|super
argument_list|(
name|context
argument_list|,
name|baseWriter
argument_list|)
expr_stmt|;
name|this
operator|.
name|context
operator|=
name|context
expr_stmt|;
name|jobInfo
operator|=
name|HCatOutputFormat
operator|.
name|getJobInfo
argument_list|(
name|context
operator|.
name|getConfiguration
argument_list|()
argument_list|)
expr_stmt|;
name|storageHandler
operator|=
name|HCatUtil
operator|.
name|getStorageHandler
argument_list|(
name|context
operator|.
name|getConfiguration
argument_list|()
argument_list|,
name|jobInfo
operator|.
name|getTableInfo
argument_list|()
operator|.
name|getStorerInfo
argument_list|()
argument_list|)
expr_stmt|;
name|serDe
operator|=
name|ReflectionUtils
operator|.
name|newInstance
argument_list|(
name|storageHandler
operator|.
name|getSerDeClass
argument_list|()
argument_list|,
name|context
operator|.
name|getConfiguration
argument_list|()
argument_list|)
expr_stmt|;
name|objectInspector
operator|=
name|InternalUtil
operator|.
name|createStructObjectInspector
argument_list|(
name|jobInfo
operator|.
name|getOutputSchema
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|InternalUtil
operator|.
name|initializeOutputSerDe
argument_list|(
name|serDe
argument_list|,
name|context
operator|.
name|getConfiguration
argument_list|()
argument_list|,
name|jobInfo
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SerDeException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Failed to inialize SerDe"
argument_list|,
name|e
argument_list|)
throw|;
block|}
comment|// If partition columns occur in data, we want to remove them.
name|partColsToDel
operator|=
name|jobInfo
operator|.
name|getPosOfPartCols
argument_list|()
expr_stmt|;
if|if
condition|(
name|partColsToDel
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|HCatException
argument_list|(
literal|"It seems that setSchema() is not called on "
operator|+
literal|"HCatOutputFormat. Please make sure that method is called."
argument_list|)
throw|;
block|}
block|}
comment|/**    * @return the storagehandler    */
specifier|public
name|HiveStorageHandler
name|getStorageHandler
parameter_list|()
block|{
return|return
name|storageHandler
return|;
block|}
specifier|abstract
specifier|protected
name|LocalFileWriter
name|getLocalFileWriter
parameter_list|(
name|HCatRecord
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|HCatException
function_decl|;
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
name|WritableComparable
argument_list|<
name|?
argument_list|>
name|key
parameter_list|,
name|HCatRecord
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|LocalFileWriter
name|localFileWriter
init|=
name|getLocalFileWriter
argument_list|(
name|value
argument_list|)
decl_stmt|;
name|RecordWriter
name|localWriter
init|=
name|localFileWriter
operator|.
name|getLocalWriter
argument_list|()
decl_stmt|;
name|ObjectInspector
name|localObjectInspector
init|=
name|localFileWriter
operator|.
name|getLocalObjectInspector
argument_list|()
decl_stmt|;
name|AbstractSerDe
name|localSerDe
init|=
name|localFileWriter
operator|.
name|getLocalSerDe
argument_list|()
decl_stmt|;
name|OutputJobInfo
name|localJobInfo
init|=
name|localFileWriter
operator|.
name|getLocalJobInfo
argument_list|()
decl_stmt|;
for|for
control|(
name|Integer
name|colToDel
range|:
name|partColsToDel
control|)
block|{
name|value
operator|.
name|remove
argument_list|(
name|colToDel
argument_list|)
expr_stmt|;
block|}
try|try
block|{
comment|// The key given by user is ignored - in case of Parquet we need to supply null
name|Object
name|keyToWrite
init|=
name|localWriter
operator|instanceof
name|ParquetRecordWriterWrapper
condition|?
literal|null
else|:
name|NullWritable
operator|.
name|get
argument_list|()
decl_stmt|;
name|localWriter
operator|.
name|write
argument_list|(
name|keyToWrite
argument_list|,
name|localSerDe
operator|.
name|serialize
argument_list|(
name|value
operator|.
name|getAll
argument_list|()
argument_list|,
name|localObjectInspector
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SerDeException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Failed to serialize object"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
class|class
name|LocalFileWriter
block|{
specifier|private
name|RecordWriter
name|localWriter
decl_stmt|;
specifier|private
name|ObjectInspector
name|localObjectInspector
decl_stmt|;
specifier|private
name|AbstractSerDe
name|localSerDe
decl_stmt|;
specifier|private
name|OutputJobInfo
name|localJobInfo
decl_stmt|;
specifier|public
name|LocalFileWriter
parameter_list|(
name|RecordWriter
name|localWriter
parameter_list|,
name|ObjectInspector
name|localObjectInspector
parameter_list|,
name|AbstractSerDe
name|localSerDe
parameter_list|,
name|OutputJobInfo
name|localJobInfo
parameter_list|)
block|{
name|this
operator|.
name|localWriter
operator|=
name|localWriter
expr_stmt|;
name|this
operator|.
name|localObjectInspector
operator|=
name|localObjectInspector
expr_stmt|;
name|this
operator|.
name|localSerDe
operator|=
name|localSerDe
expr_stmt|;
name|this
operator|.
name|localJobInfo
operator|=
name|localJobInfo
expr_stmt|;
block|}
specifier|public
name|RecordWriter
name|getLocalWriter
parameter_list|()
block|{
return|return
name|localWriter
return|;
block|}
specifier|public
name|ObjectInspector
name|getLocalObjectInspector
parameter_list|()
block|{
return|return
name|localObjectInspector
return|;
block|}
specifier|public
name|AbstractSerDe
name|getLocalSerDe
parameter_list|()
block|{
return|return
name|localSerDe
return|;
block|}
specifier|public
name|OutputJobInfo
name|getLocalJobInfo
parameter_list|()
block|{
return|return
name|localJobInfo
return|;
block|}
block|}
block|}
end_class

end_unit

