begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|mapreduce
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|Counters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|InputSplit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|Reporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|StatusReporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskAttemptContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskInputOutputContext
import|;
end_import

begin_class
class|class
name|ProgressReporter
extends|extends
name|StatusReporter
implements|implements
name|Reporter
block|{
specifier|private
name|TaskInputOutputContext
name|context
init|=
literal|null
decl_stmt|;
specifier|private
name|TaskAttemptContext
name|taskAttemptContext
init|=
literal|null
decl_stmt|;
specifier|public
name|ProgressReporter
parameter_list|(
name|TaskAttemptContext
name|context
parameter_list|)
block|{
if|if
condition|(
name|context
operator|instanceof
name|TaskInputOutputContext
condition|)
block|{
name|this
operator|.
name|context
operator|=
operator|(
name|TaskInputOutputContext
operator|)
name|context
expr_stmt|;
block|}
else|else
block|{
name|taskAttemptContext
operator|=
name|context
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setStatus
parameter_list|(
name|String
name|status
parameter_list|)
block|{
if|if
condition|(
name|context
operator|!=
literal|null
condition|)
block|{
name|context
operator|.
name|setStatus
argument_list|(
name|status
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Counters
operator|.
name|Counter
name|getCounter
parameter_list|(
name|Enum
argument_list|<
name|?
argument_list|>
name|name
parameter_list|)
block|{
return|return
operator|(
name|context
operator|!=
literal|null
operator|)
condition|?
operator|(
name|Counters
operator|.
name|Counter
operator|)
name|context
operator|.
name|getCounter
argument_list|(
name|name
argument_list|)
else|:
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|Counters
operator|.
name|Counter
name|getCounter
parameter_list|(
name|String
name|group
parameter_list|,
name|String
name|name
parameter_list|)
block|{
return|return
operator|(
name|context
operator|!=
literal|null
operator|)
condition|?
operator|(
name|Counters
operator|.
name|Counter
operator|)
name|context
operator|.
name|getCounter
argument_list|(
name|group
argument_list|,
name|name
argument_list|)
else|:
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|incrCounter
parameter_list|(
name|Enum
argument_list|<
name|?
argument_list|>
name|key
parameter_list|,
name|long
name|amount
parameter_list|)
block|{
if|if
condition|(
name|context
operator|!=
literal|null
condition|)
block|{
name|context
operator|.
name|getCounter
argument_list|(
name|key
argument_list|)
operator|.
name|increment
argument_list|(
name|amount
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|incrCounter
parameter_list|(
name|String
name|group
parameter_list|,
name|String
name|counter
parameter_list|,
name|long
name|amount
parameter_list|)
block|{
if|if
condition|(
name|context
operator|!=
literal|null
condition|)
block|{
name|context
operator|.
name|getCounter
argument_list|(
name|group
argument_list|,
name|counter
argument_list|)
operator|.
name|increment
argument_list|(
name|amount
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|InputSplit
name|getInputSplit
parameter_list|()
throws|throws
name|UnsupportedOperationException
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|float
name|getProgress
parameter_list|()
block|{
comment|/* Required to build against 0.23 Reporter and StatusReporter. */
comment|/* TODO: determine the progress. */
return|return
literal|0.0f
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|progress
parameter_list|()
block|{
if|if
condition|(
name|context
operator|!=
literal|null
condition|)
block|{
name|context
operator|.
name|progress
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|taskAttemptContext
operator|.
name|progress
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

