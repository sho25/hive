begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|mapreduce
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Writable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|WritableComparable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|RecordWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|Reporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskAttemptContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|mapreduce
operator|.
name|FileRecordWriterContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|common
operator|.
name|HCatException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|data
operator|.
name|HCatRecord
import|;
end_import

begin_comment
comment|/**  * Record writer container for tables using static partitioning. See  * {@link FileOutputFormatContainer} for more information  */
end_comment

begin_class
class|class
name|StaticPartitionFileRecordWriterContainer
extends|extends
name|FileRecordWriterContainer
block|{
comment|/**    * @param baseWriter RecordWriter to contain    * @param context current TaskAttemptContext    * @throws IOException    * @throws InterruptedException    */
specifier|public
name|StaticPartitionFileRecordWriterContainer
parameter_list|(
name|RecordWriter
argument_list|<
name|?
super|super
name|WritableComparable
argument_list|<
name|?
argument_list|>
argument_list|,
name|?
super|super
name|Writable
argument_list|>
name|baseWriter
parameter_list|,
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|super
argument_list|(
name|baseWriter
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|(
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|Reporter
name|reporter
init|=
name|InternalUtil
operator|.
name|createReporter
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|getBaseRecordWriter
argument_list|()
operator|.
name|close
argument_list|(
name|reporter
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|LocalFileWriter
name|getLocalFileWriter
parameter_list|(
name|HCatRecord
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|HCatException
block|{
return|return
operator|new
name|LocalFileWriter
argument_list|(
name|getBaseRecordWriter
argument_list|()
argument_list|,
name|objectInspector
argument_list|,
name|serDe
argument_list|,
name|jobInfo
argument_list|)
return|;
block|}
block|}
end_class

end_unit

