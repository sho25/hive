begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hcatalog
operator|.
name|rcfile
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|RCFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|RCFile
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|columnar
operator|.
name|BytesRefArrayWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|LongWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|InputSplit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|RecordReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskAttemptContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|lib
operator|.
name|input
operator|.
name|FileSplit
import|;
end_import

begin_comment
comment|/**  * @deprecated Use/modify {@link org.apache.hive.hcatalog.rcfile.RCFileMapReduceRecordReader} instead  */
end_comment

begin_class
specifier|public
class|class
name|RCFileMapReduceRecordReader
parameter_list|<
name|K
extends|extends
name|LongWritable
parameter_list|,
name|V
extends|extends
name|BytesRefArrayWritable
parameter_list|>
extends|extends
name|RecordReader
argument_list|<
name|LongWritable
argument_list|,
name|BytesRefArrayWritable
argument_list|>
block|{
specifier|private
name|Reader
name|in
decl_stmt|;
specifier|private
name|long
name|start
decl_stmt|;
specifier|private
name|long
name|end
decl_stmt|;
specifier|private
name|boolean
name|more
init|=
literal|true
decl_stmt|;
comment|// key and value objects are created once in initialize() and then reused
comment|// for every getCurrentKey() and getCurrentValue() call. This is important
comment|// since RCFile makes an assumption of this fact.
specifier|private
name|LongWritable
name|key
decl_stmt|;
specifier|private
name|BytesRefArrayWritable
name|value
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|LongWritable
name|getCurrentKey
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|key
return|;
block|}
annotation|@
name|Override
specifier|public
name|BytesRefArrayWritable
name|getCurrentValue
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|value
return|;
block|}
annotation|@
name|Override
specifier|public
name|float
name|getProgress
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
if|if
condition|(
name|end
operator|==
name|start
condition|)
block|{
return|return
literal|0.0f
return|;
block|}
else|else
block|{
return|return
name|Math
operator|.
name|min
argument_list|(
literal|1.0f
argument_list|,
operator|(
name|in
operator|.
name|getPosition
argument_list|()
operator|-
name|start
operator|)
operator|/
call|(
name|float
call|)
argument_list|(
name|end
operator|-
name|start
argument_list|)
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|nextKeyValue
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|more
operator|=
name|next
argument_list|(
name|key
argument_list|)
expr_stmt|;
if|if
condition|(
name|more
condition|)
block|{
name|in
operator|.
name|getCurrentRow
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|more
return|;
block|}
specifier|private
name|boolean
name|next
parameter_list|(
name|LongWritable
name|key
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|!
name|more
condition|)
block|{
return|return
literal|false
return|;
block|}
name|more
operator|=
name|in
operator|.
name|next
argument_list|(
name|key
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|more
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|in
operator|.
name|lastSeenSyncPos
argument_list|()
operator|>=
name|end
condition|)
block|{
name|more
operator|=
literal|false
expr_stmt|;
return|return
name|more
return|;
block|}
return|return
name|more
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|initialize
parameter_list|(
name|InputSplit
name|split
parameter_list|,
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|FileSplit
name|fSplit
init|=
operator|(
name|FileSplit
operator|)
name|split
decl_stmt|;
name|Path
name|path
init|=
name|fSplit
operator|.
name|getPath
argument_list|()
decl_stmt|;
name|Configuration
name|conf
init|=
name|context
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|this
operator|.
name|in
operator|=
operator|new
name|RCFile
operator|.
name|Reader
argument_list|(
name|path
operator|.
name|getFileSystem
argument_list|(
name|conf
argument_list|)
argument_list|,
name|path
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|this
operator|.
name|end
operator|=
name|fSplit
operator|.
name|getStart
argument_list|()
operator|+
name|fSplit
operator|.
name|getLength
argument_list|()
expr_stmt|;
if|if
condition|(
name|fSplit
operator|.
name|getStart
argument_list|()
operator|>
name|in
operator|.
name|getPosition
argument_list|()
condition|)
block|{
name|in
operator|.
name|sync
argument_list|(
name|fSplit
operator|.
name|getStart
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|start
operator|=
name|in
operator|.
name|getPosition
argument_list|()
expr_stmt|;
name|more
operator|=
name|start
operator|<
name|end
expr_stmt|;
name|key
operator|=
operator|new
name|LongWritable
argument_list|()
expr_stmt|;
name|value
operator|=
operator|new
name|BytesRefArrayWritable
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

