begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|mr
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|AccumuloException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|AccumuloSecurityException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|Connector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|mapred
operator|.
name|AccumuloOutputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|security
operator|.
name|tokens
operator|.
name|AuthenticationToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|security
operator|.
name|tokens
operator|.
name|PasswordToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|data
operator|.
name|Mutation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|AccumuloConnectionParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|HiveAccumuloHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|serde
operator|.
name|AccumuloSerDeParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|RecordWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|Token
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|TokenIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|Progressable
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
specifier|public
class|class
name|HiveAccumuloTableOutputFormat
extends|extends
name|AccumuloOutputFormat
block|{
specifier|protected
specifier|final
name|HiveAccumuloHelper
name|helper
init|=
operator|new
name|HiveAccumuloHelper
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|checkOutputSpecs
parameter_list|(
name|FileSystem
name|ignored
parameter_list|,
name|JobConf
name|job
parameter_list|)
throws|throws
name|IOException
block|{
name|configureAccumuloOutputFormat
argument_list|(
name|job
argument_list|)
expr_stmt|;
name|super
operator|.
name|checkOutputSpecs
argument_list|(
name|ignored
argument_list|,
name|job
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|RecordWriter
argument_list|<
name|Text
argument_list|,
name|Mutation
argument_list|>
name|getRecordWriter
parameter_list|(
name|FileSystem
name|ignored
parameter_list|,
name|JobConf
name|job
parameter_list|,
name|String
name|name
parameter_list|,
name|Progressable
name|progress
parameter_list|)
throws|throws
name|IOException
block|{
name|configureAccumuloOutputFormat
argument_list|(
name|job
argument_list|)
expr_stmt|;
return|return
name|super
operator|.
name|getRecordWriter
argument_list|(
name|ignored
argument_list|,
name|job
argument_list|,
name|name
argument_list|,
name|progress
argument_list|)
return|;
block|}
specifier|protected
name|void
name|configureAccumuloOutputFormat
parameter_list|(
name|JobConf
name|job
parameter_list|)
throws|throws
name|IOException
block|{
name|AccumuloConnectionParameters
name|cnxnParams
init|=
name|getConnectionParams
argument_list|(
name|job
argument_list|)
decl_stmt|;
specifier|final
name|String
name|tableName
init|=
name|job
operator|.
name|get
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|TABLE_NAME
argument_list|)
decl_stmt|;
comment|// Make sure we actually go the table name
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|tableName
argument_list|,
literal|"Expected Accumulo table name to be provided in job configuration"
argument_list|)
expr_stmt|;
comment|// Set the necessary Accumulo information
try|try
block|{
if|if
condition|(
name|cnxnParams
operator|.
name|useMockInstance
argument_list|()
condition|)
block|{
name|setMockInstanceWithErrorChecking
argument_list|(
name|job
argument_list|,
name|cnxnParams
operator|.
name|getAccumuloInstanceName
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// Accumulo instance name with ZK quorum
name|setZooKeeperInstanceWithErrorChecking
argument_list|(
name|job
argument_list|,
name|cnxnParams
operator|.
name|getAccumuloInstanceName
argument_list|()
argument_list|,
name|cnxnParams
operator|.
name|getZooKeepers
argument_list|()
argument_list|,
name|cnxnParams
operator|.
name|useSasl
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// Extract the delegation Token from the UGI and add it to the job
comment|// The AccumuloOutputFormat will look for it there.
if|if
condition|(
name|cnxnParams
operator|.
name|useSasl
argument_list|()
condition|)
block|{
name|UserGroupInformation
name|ugi
init|=
name|getCurrentUser
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|hasKerberosCredentials
argument_list|(
name|ugi
argument_list|)
condition|)
block|{
name|getHelper
argument_list|()
operator|.
name|addTokenFromUserToJobConf
argument_list|(
name|ugi
argument_list|,
name|job
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// Still in the local JVM, can use Kerberos credentials
try|try
block|{
name|Connector
name|connector
init|=
name|cnxnParams
operator|.
name|getConnector
argument_list|()
decl_stmt|;
name|AuthenticationToken
name|token
init|=
name|getHelper
argument_list|()
operator|.
name|getDelegationToken
argument_list|(
name|connector
argument_list|)
decl_stmt|;
comment|// Send the DelegationToken down to the Configuration for Accumulo to use
name|setConnectorInfoWithErrorChecking
argument_list|(
name|job
argument_list|,
name|cnxnParams
operator|.
name|getAccumuloUserName
argument_list|()
argument_list|,
name|token
argument_list|)
expr_stmt|;
comment|// Convert the Accumulo token in a Hadoop token
name|Token
argument_list|<
name|?
extends|extends
name|TokenIdentifier
argument_list|>
name|accumuloToken
init|=
name|getHelper
argument_list|()
operator|.
name|getHadoopToken
argument_list|(
name|token
argument_list|)
decl_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"Adding Hadoop Token for Accumulo to Job's Credentials"
argument_list|)
expr_stmt|;
comment|// Add the Hadoop token to the JobConf
name|getHelper
argument_list|()
operator|.
name|mergeTokenIntoJobConf
argument_list|(
name|job
argument_list|,
name|accumuloToken
argument_list|)
expr_stmt|;
comment|// Make sure the UGI contains the token too for good measure
if|if
condition|(
operator|!
name|ugi
operator|.
name|addToken
argument_list|(
name|accumuloToken
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Failed to add Accumulo Token to UGI"
argument_list|)
throw|;
block|}
block|}
catch|catch
parameter_list|(
name|AccumuloException
decl||
name|AccumuloSecurityException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Failed to acquire Accumulo DelegationToken"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
else|else
block|{
name|setConnectorInfoWithErrorChecking
argument_list|(
name|job
argument_list|,
name|cnxnParams
operator|.
name|getAccumuloUserName
argument_list|()
argument_list|,
operator|new
name|PasswordToken
argument_list|(
name|cnxnParams
operator|.
name|getAccumuloPassword
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Set the table where we're writing this data
name|setDefaultAccumuloTableName
argument_list|(
name|job
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|AccumuloSecurityException
name|e
parameter_list|)
block|{
name|log
operator|.
name|error
argument_list|(
literal|"Could not connect to Accumulo with provided credentials"
argument_list|,
name|e
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
comment|// Non-static methods to wrap the static AccumuloOutputFormat methods to enable testing
specifier|protected
name|void
name|setConnectorInfoWithErrorChecking
parameter_list|(
name|JobConf
name|conf
parameter_list|,
name|String
name|username
parameter_list|,
name|AuthenticationToken
name|token
parameter_list|)
throws|throws
name|AccumuloSecurityException
block|{
try|try
block|{
name|AccumuloOutputFormat
operator|.
name|setConnectorInfo
argument_list|(
name|conf
argument_list|,
name|username
argument_list|,
name|token
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{
comment|// AccumuloOutputFormat complains if you re-set an already set value. We just don't care.
name|log
operator|.
name|debug
argument_list|(
literal|"Ignoring exception setting Accumulo Connector instance for user "
operator|+
name|username
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
specifier|protected
name|void
name|setZooKeeperInstanceWithErrorChecking
parameter_list|(
name|JobConf
name|conf
parameter_list|,
name|String
name|instanceName
parameter_list|,
name|String
name|zookeepers
parameter_list|,
name|boolean
name|isSasl
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
if|if
condition|(
name|isSasl
condition|)
block|{
comment|// Reflection to support Accumulo 1.5. Remove when Accumulo 1.5 support is dropped
comment|// 1.6 works with the deprecated 1.5 method, but must use reflection for 1.7-only
comment|// SASL support
name|getHelper
argument_list|()
operator|.
name|setZooKeeperInstance
argument_list|(
name|conf
argument_list|,
name|AccumuloOutputFormat
operator|.
name|class
argument_list|,
name|zookeepers
argument_list|,
name|instanceName
argument_list|,
name|isSasl
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|AccumuloOutputFormat
operator|.
name|setZooKeeperInstance
argument_list|(
name|conf
argument_list|,
name|instanceName
argument_list|,
name|zookeepers
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|ise
parameter_list|)
block|{
comment|// AccumuloOutputFormat complains if you re-set an already set value. We just don't care.
name|log
operator|.
name|debug
argument_list|(
literal|"Ignoring exception setting ZooKeeper instance of "
operator|+
name|instanceName
operator|+
literal|" at "
operator|+
name|zookeepers
argument_list|,
name|ise
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|setMockInstanceWithErrorChecking
parameter_list|(
name|JobConf
name|conf
parameter_list|,
name|String
name|instanceName
parameter_list|)
block|{
try|try
block|{
name|AccumuloOutputFormat
operator|.
name|setMockInstance
argument_list|(
name|conf
argument_list|,
name|instanceName
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|e
parameter_list|)
block|{
comment|// AccumuloOutputFormat complains if you re-set an already set value. We just don't care.
name|log
operator|.
name|debug
argument_list|(
literal|"Ignoring exception setting mock instance of "
operator|+
name|instanceName
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|setDefaultAccumuloTableName
parameter_list|(
name|JobConf
name|conf
parameter_list|,
name|String
name|tableName
parameter_list|)
block|{
name|AccumuloOutputFormat
operator|.
name|setDefaultTableName
argument_list|(
name|conf
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
name|HiveAccumuloHelper
name|getHelper
parameter_list|()
block|{
comment|// Allows mocking in testing.
return|return
name|helper
return|;
block|}
name|AccumuloConnectionParameters
name|getConnectionParams
parameter_list|(
name|JobConf
name|conf
parameter_list|)
block|{
comment|// Allows mocking in testing.
return|return
operator|new
name|AccumuloConnectionParameters
argument_list|(
name|conf
argument_list|)
return|;
block|}
name|boolean
name|hasKerberosCredentials
parameter_list|(
name|UserGroupInformation
name|ugi
parameter_list|)
block|{
comment|// Allows mocking in testing.
return|return
name|ugi
operator|.
name|hasKerberosCredentials
argument_list|()
return|;
block|}
name|UserGroupInformation
name|getCurrentUser
parameter_list|()
throws|throws
name|IOException
block|{
comment|// Allows mocking in testing.
return|return
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
return|;
block|}
block|}
end_class

end_unit

