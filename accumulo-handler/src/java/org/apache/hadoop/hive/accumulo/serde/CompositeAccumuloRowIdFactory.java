begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|serde
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Constructor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|Utils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|SerDeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|LazySimpleStructObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * {@link AccumuloRowIdFactory} designed for injection of the {@link AccumuloCompositeRowId} to be  * used to generate the Accumulo rowId. Allows for custom {@link AccumuloCompositeRowId}s to be  * specified without overriding the entire ObjectInspector for the Hive row.  *  * @param<T>  */
end_comment

begin_class
specifier|public
class|class
name|CompositeAccumuloRowIdFactory
parameter_list|<
name|T
extends|extends
name|AccumuloCompositeRowId
parameter_list|>
extends|extends
name|DefaultAccumuloRowIdFactory
block|{
specifier|public
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|CompositeAccumuloRowIdFactory
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|Class
argument_list|<
name|T
argument_list|>
name|keyClass
decl_stmt|;
specifier|private
specifier|final
name|Constructor
argument_list|<
name|T
argument_list|>
name|constructor
decl_stmt|;
specifier|public
name|CompositeAccumuloRowIdFactory
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|keyClass
parameter_list|)
throws|throws
name|SecurityException
throws|,
name|NoSuchMethodException
block|{
comment|// see javadoc of AccumuloCompositeRowId
name|this
operator|.
name|keyClass
operator|=
name|keyClass
expr_stmt|;
name|this
operator|.
name|constructor
operator|=
name|keyClass
operator|.
name|getDeclaredConstructor
argument_list|(
name|LazySimpleStructObjectInspector
operator|.
name|class
argument_list|,
name|Properties
operator|.
name|class
argument_list|,
name|Configuration
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|addDependencyJars
parameter_list|(
name|Configuration
name|jobConf
parameter_list|)
throws|throws
name|IOException
block|{
comment|// Make sure the jar containing the custom CompositeRowId is included
comment|// in the mapreduce job's classpath (libjars)
name|Utils
operator|.
name|addDependencyJars
argument_list|(
name|jobConf
argument_list|,
name|keyClass
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|T
name|createRowId
parameter_list|(
name|ObjectInspector
name|inspector
parameter_list|)
throws|throws
name|SerDeException
block|{
try|try
block|{
return|return
operator|(
name|T
operator|)
name|constructor
operator|.
name|newInstance
argument_list|(
name|inspector
argument_list|,
name|this
operator|.
name|properties
argument_list|,
name|this
operator|.
name|accumuloSerDeParams
operator|.
name|getConf
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SerDeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

