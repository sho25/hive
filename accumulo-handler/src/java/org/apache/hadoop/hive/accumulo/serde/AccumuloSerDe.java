begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|serde
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|data
operator|.
name|Mutation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|AccumuloHiveRow
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|LazyAccumuloRow
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|columns
operator|.
name|ColumnMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|columns
operator|.
name|HiveAccumuloRowIdColumnMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|SerDe
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|SerDeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|SerDeStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazyFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazySerDeParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|LazyObjectInspectorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|LazySimpleStructObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|typeinfo
operator|.
name|TypeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Writable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Deserialization from Accumulo to LazyAccumuloRow for Hive.  *  */
end_comment

begin_class
specifier|public
class|class
name|AccumuloSerDe
implements|implements
name|SerDe
block|{
specifier|private
name|AccumuloSerDeParameters
name|accumuloSerDeParameters
decl_stmt|;
specifier|private
name|LazyAccumuloRow
name|cachedRow
decl_stmt|;
specifier|private
name|ObjectInspector
name|cachedObjectInspector
decl_stmt|;
specifier|private
name|AccumuloRowSerializer
name|serializer
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|AccumuloSerDe
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
name|void
name|initialize
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|Properties
name|properties
parameter_list|)
throws|throws
name|SerDeException
block|{
name|accumuloSerDeParameters
operator|=
operator|new
name|AccumuloSerDeParameters
argument_list|(
name|conf
argument_list|,
name|properties
argument_list|,
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|LazySerDeParameters
name|serDeParams
init|=
name|accumuloSerDeParameters
operator|.
name|getSerDeParameters
argument_list|()
decl_stmt|;
specifier|final
name|List
argument_list|<
name|ColumnMapping
argument_list|>
name|mappings
init|=
name|accumuloSerDeParameters
operator|.
name|getColumnMappings
argument_list|()
decl_stmt|;
specifier|final
name|List
argument_list|<
name|TypeInfo
argument_list|>
name|columnTypes
init|=
name|accumuloSerDeParameters
operator|.
name|getHiveColumnTypes
argument_list|()
decl_stmt|;
specifier|final
name|AccumuloRowIdFactory
name|factory
init|=
name|accumuloSerDeParameters
operator|.
name|getRowIdFactory
argument_list|()
decl_stmt|;
name|ArrayList
argument_list|<
name|ObjectInspector
argument_list|>
name|columnObjectInspectors
init|=
name|getColumnObjectInspectors
argument_list|(
name|columnTypes
argument_list|,
name|serDeParams
argument_list|,
name|mappings
argument_list|,
name|factory
argument_list|)
decl_stmt|;
name|cachedObjectInspector
operator|=
name|LazyObjectInspectorFactory
operator|.
name|getLazySimpleStructObjectInspector
argument_list|(
name|serDeParams
operator|.
name|getColumnNames
argument_list|()
argument_list|,
name|columnObjectInspectors
argument_list|,
name|serDeParams
operator|.
name|getSeparators
argument_list|()
index|[
literal|0
index|]
argument_list|,
name|serDeParams
operator|.
name|getNullSequence
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|isLastColumnTakesRest
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|isEscaped
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|getEscapeChar
argument_list|()
argument_list|)
expr_stmt|;
name|cachedRow
operator|=
operator|new
name|LazyAccumuloRow
argument_list|(
operator|(
name|LazySimpleStructObjectInspector
operator|)
name|cachedObjectInspector
argument_list|)
expr_stmt|;
name|serializer
operator|=
operator|new
name|AccumuloRowSerializer
argument_list|(
name|accumuloSerDeParameters
operator|.
name|getRowIdOffset
argument_list|()
argument_list|,
name|accumuloSerDeParameters
operator|.
name|getSerDeParameters
argument_list|()
argument_list|,
name|accumuloSerDeParameters
operator|.
name|getColumnMappings
argument_list|()
argument_list|,
name|accumuloSerDeParameters
operator|.
name|getTableVisibilityLabel
argument_list|()
argument_list|,
name|accumuloSerDeParameters
operator|.
name|getRowIdFactory
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|log
operator|.
name|isInfoEnabled
argument_list|()
condition|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Initialized with {} type: {}"
argument_list|,
name|accumuloSerDeParameters
operator|.
name|getSerDeParameters
argument_list|()
operator|.
name|getColumnNames
argument_list|()
argument_list|,
name|accumuloSerDeParameters
operator|.
name|getSerDeParameters
argument_list|()
operator|.
name|getColumnTypes
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|ArrayList
argument_list|<
name|ObjectInspector
argument_list|>
name|getColumnObjectInspectors
parameter_list|(
name|List
argument_list|<
name|TypeInfo
argument_list|>
name|columnTypes
parameter_list|,
name|LazySerDeParameters
name|serDeParams
parameter_list|,
name|List
argument_list|<
name|ColumnMapping
argument_list|>
name|mappings
parameter_list|,
name|AccumuloRowIdFactory
name|factory
parameter_list|)
throws|throws
name|SerDeException
block|{
name|ArrayList
argument_list|<
name|ObjectInspector
argument_list|>
name|columnObjectInspectors
init|=
operator|new
name|ArrayList
argument_list|<
name|ObjectInspector
argument_list|>
argument_list|(
name|columnTypes
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|columnTypes
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|TypeInfo
name|type
init|=
name|columnTypes
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|ColumnMapping
name|mapping
init|=
name|mappings
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|mapping
operator|instanceof
name|HiveAccumuloRowIdColumnMapping
condition|)
block|{
name|columnObjectInspectors
operator|.
name|add
argument_list|(
name|factory
operator|.
name|createRowIdObjectInspector
argument_list|(
name|type
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|columnObjectInspectors
operator|.
name|add
argument_list|(
name|LazyFactory
operator|.
name|createLazyObjectInspector
argument_list|(
name|type
argument_list|,
name|serDeParams
operator|.
name|getSeparators
argument_list|()
argument_list|,
literal|1
argument_list|,
name|serDeParams
operator|.
name|getNullSequence
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|isEscaped
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|getEscapeChar
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|columnObjectInspectors
return|;
block|}
comment|/***    * For testing purposes.    */
specifier|public
name|LazyAccumuloRow
name|getCachedRow
parameter_list|()
block|{
return|return
name|cachedRow
return|;
block|}
specifier|public
name|Class
argument_list|<
name|?
extends|extends
name|Writable
argument_list|>
name|getSerializedClass
parameter_list|()
block|{
return|return
name|Mutation
operator|.
name|class
return|;
block|}
annotation|@
name|Override
specifier|public
name|Writable
name|serialize
parameter_list|(
name|Object
name|o
parameter_list|,
name|ObjectInspector
name|objectInspector
parameter_list|)
throws|throws
name|SerDeException
block|{
try|try
block|{
return|return
name|serializer
operator|.
name|serialize
argument_list|(
name|o
argument_list|,
name|objectInspector
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SerDeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Object
name|deserialize
parameter_list|(
name|Writable
name|writable
parameter_list|)
throws|throws
name|SerDeException
block|{
if|if
condition|(
operator|!
operator|(
name|writable
operator|instanceof
name|AccumuloHiveRow
operator|)
condition|)
block|{
throw|throw
operator|new
name|SerDeException
argument_list|(
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|" : "
operator|+
literal|"Expected AccumuloHiveRow. Got "
operator|+
name|writable
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
throw|;
block|}
name|cachedRow
operator|.
name|init
argument_list|(
operator|(
name|AccumuloHiveRow
operator|)
name|writable
argument_list|,
name|accumuloSerDeParameters
operator|.
name|getColumnMappings
argument_list|()
argument_list|,
name|accumuloSerDeParameters
operator|.
name|getRowIdFactory
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|cachedRow
return|;
block|}
specifier|public
name|ObjectInspector
name|getObjectInspector
parameter_list|()
throws|throws
name|SerDeException
block|{
return|return
name|cachedObjectInspector
return|;
block|}
specifier|public
name|SerDeStats
name|getSerDeStats
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"SerdeStats not supported."
argument_list|)
throw|;
block|}
specifier|public
name|AccumuloSerDeParameters
name|getParams
parameter_list|()
block|{
return|return
name|accumuloSerDeParameters
return|;
block|}
specifier|public
name|boolean
name|getIteratorPushdown
parameter_list|()
block|{
return|return
name|accumuloSerDeParameters
operator|.
name|getIteratorPushdown
argument_list|()
return|;
block|}
specifier|protected
name|AccumuloRowSerializer
name|getSerializer
parameter_list|()
block|{
return|return
name|serializer
return|;
block|}
block|}
end_class

end_unit

