begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|columns
operator|.
name|ColumnEncoding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|columns
operator|.
name|ColumnMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|serde
operator|.
name|AccumuloSerDe
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|serde
operator|.
name|AccumuloSerDeParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|serde
operator|.
name|DefaultAccumuloRowIdFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde
operator|.
name|serdeConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|SerDeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|SerDeUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazyFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazyInteger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazySimpleSerDe
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazyString
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|LazySimpleStructObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazydio
operator|.
name|LazyDioInteger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|typeinfo
operator|.
name|TypeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|typeinfo
operator|.
name|TypeInfoFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Joiner
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
specifier|public
class|class
name|TestLazyAccumuloRow
block|{
annotation|@
name|Test
specifier|public
name|void
name|testExpectedDeserializationOfColumns
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|columns
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"row"
argument_list|,
literal|"given_name"
argument_list|,
literal|"surname"
argument_list|,
literal|"age"
argument_list|,
literal|"weight"
argument_list|,
literal|"height"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|TypeInfo
argument_list|>
name|types
init|=
name|Arrays
operator|.
expr|<
name|TypeInfo
operator|>
name|asList
argument_list|(
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|intTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|intTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|intTypeInfo
argument_list|)
decl_stmt|;
name|LazySimpleStructObjectInspector
name|objectInspector
init|=
operator|(
name|LazySimpleStructObjectInspector
operator|)
name|LazyFactory
operator|.
name|createLazyStructInspector
argument_list|(
name|columns
argument_list|,
name|types
argument_list|,
name|LazySimpleSerDe
operator|.
name|DefaultSeparators
argument_list|,
operator|new
name|Text
argument_list|(
literal|"\\N"
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
operator|(
name|byte
operator|)
literal|'\\'
argument_list|)
decl_stmt|;
name|DefaultAccumuloRowIdFactory
name|rowIdFactory
init|=
operator|new
name|DefaultAccumuloRowIdFactory
argument_list|()
decl_stmt|;
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|,
literal|":rowid,personal:given_name,personal:surname,personal:age,personal:weight,personal:height"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMNS
argument_list|,
name|Joiner
operator|.
name|on
argument_list|(
literal|','
argument_list|)
operator|.
name|join
argument_list|(
name|columns
argument_list|)
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMN_TYPES
argument_list|,
name|Joiner
operator|.
name|on
argument_list|(
literal|','
argument_list|)
operator|.
name|join
argument_list|(
name|types
argument_list|)
argument_list|)
expr_stmt|;
name|AccumuloSerDeParameters
name|params
init|=
operator|new
name|AccumuloSerDeParameters
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|,
name|props
argument_list|,
name|AccumuloSerDe
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|rowIdFactory
operator|.
name|init
argument_list|(
name|params
argument_list|,
name|props
argument_list|)
expr_stmt|;
name|LazyAccumuloRow
name|lazyRow
init|=
operator|new
name|LazyAccumuloRow
argument_list|(
name|objectInspector
argument_list|)
decl_stmt|;
name|AccumuloHiveRow
name|hiveRow
init|=
operator|new
name|AccumuloHiveRow
argument_list|(
literal|"1"
argument_list|)
decl_stmt|;
name|hiveRow
operator|.
name|add
argument_list|(
literal|"personal"
argument_list|,
literal|"given_name"
argument_list|,
literal|"Bob"
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|hiveRow
operator|.
name|add
argument_list|(
literal|"personal"
argument_list|,
literal|"surname"
argument_list|,
literal|"Stevens"
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|hiveRow
operator|.
name|add
argument_list|(
literal|"personal"
argument_list|,
literal|"age"
argument_list|,
literal|"30"
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|hiveRow
operator|.
name|add
argument_list|(
literal|"personal"
argument_list|,
literal|"weight"
argument_list|,
literal|"200"
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|hiveRow
operator|.
name|add
argument_list|(
literal|"personal"
argument_list|,
literal|"height"
argument_list|,
literal|"72"
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|ColumnMapper
name|columnMapper
init|=
name|params
operator|.
name|getColumnMapper
argument_list|()
decl_stmt|;
name|lazyRow
operator|.
name|init
argument_list|(
name|hiveRow
argument_list|,
name|columnMapper
operator|.
name|getColumnMappings
argument_list|()
argument_list|,
name|rowIdFactory
argument_list|)
expr_stmt|;
name|Object
name|o
init|=
name|lazyRow
operator|.
name|getField
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|LazyString
operator|.
name|class
argument_list|,
name|o
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
operator|(
operator|(
name|LazyString
operator|)
name|o
operator|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|lazyRow
operator|.
name|getField
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|LazyString
operator|.
name|class
argument_list|,
name|o
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Bob"
argument_list|,
operator|(
operator|(
name|LazyString
operator|)
name|o
operator|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|lazyRow
operator|.
name|getField
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|LazyString
operator|.
name|class
argument_list|,
name|o
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Stevens"
argument_list|,
operator|(
operator|(
name|LazyString
operator|)
name|o
operator|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|lazyRow
operator|.
name|getField
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|LazyInteger
operator|.
name|class
argument_list|,
name|o
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"30"
argument_list|,
operator|(
operator|(
name|LazyInteger
operator|)
name|o
operator|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|lazyRow
operator|.
name|getField
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|LazyInteger
operator|.
name|class
argument_list|,
name|o
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"200"
argument_list|,
operator|(
operator|(
name|LazyInteger
operator|)
name|o
operator|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|lazyRow
operator|.
name|getField
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|LazyInteger
operator|.
name|class
argument_list|,
name|o
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"72"
argument_list|,
operator|(
operator|(
name|LazyInteger
operator|)
name|o
operator|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeserializationOfBinaryEncoding
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|columns
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"row"
argument_list|,
literal|"given_name"
argument_list|,
literal|"surname"
argument_list|,
literal|"age"
argument_list|,
literal|"weight"
argument_list|,
literal|"height"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|TypeInfo
argument_list|>
name|types
init|=
name|Arrays
operator|.
expr|<
name|TypeInfo
operator|>
name|asList
argument_list|(
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|intTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|intTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|intTypeInfo
argument_list|)
decl_stmt|;
name|LazySimpleStructObjectInspector
name|objectInspector
init|=
operator|(
name|LazySimpleStructObjectInspector
operator|)
name|LazyFactory
operator|.
name|createLazyStructInspector
argument_list|(
name|columns
argument_list|,
name|types
argument_list|,
name|LazySimpleSerDe
operator|.
name|DefaultSeparators
argument_list|,
operator|new
name|Text
argument_list|(
literal|"\\N"
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
operator|(
name|byte
operator|)
literal|'\\'
argument_list|)
decl_stmt|;
name|DefaultAccumuloRowIdFactory
name|rowIdFactory
init|=
operator|new
name|DefaultAccumuloRowIdFactory
argument_list|()
decl_stmt|;
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|,
literal|":rowid#s,personal:given_name#s,personal:surname#s,personal:age,personal:weight,personal:height"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMNS
argument_list|,
name|Joiner
operator|.
name|on
argument_list|(
literal|','
argument_list|)
operator|.
name|join
argument_list|(
name|columns
argument_list|)
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMN_TYPES
argument_list|,
name|Joiner
operator|.
name|on
argument_list|(
literal|','
argument_list|)
operator|.
name|join
argument_list|(
name|types
argument_list|)
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|DEFAULT_STORAGE_TYPE
argument_list|,
name|ColumnEncoding
operator|.
name|BINARY
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|AccumuloSerDeParameters
name|params
init|=
operator|new
name|AccumuloSerDeParameters
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|,
name|props
argument_list|,
name|AccumuloSerDe
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|rowIdFactory
operator|.
name|init
argument_list|(
name|params
argument_list|,
name|props
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|DataOutputStream
name|out
init|=
operator|new
name|DataOutputStream
argument_list|(
name|baos
argument_list|)
decl_stmt|;
name|LazyAccumuloRow
name|lazyRow
init|=
operator|new
name|LazyAccumuloRow
argument_list|(
name|objectInspector
argument_list|)
decl_stmt|;
name|AccumuloHiveRow
name|hiveRow
init|=
operator|new
name|AccumuloHiveRow
argument_list|(
literal|"1"
argument_list|)
decl_stmt|;
name|hiveRow
operator|.
name|add
argument_list|(
literal|"personal"
argument_list|,
literal|"given_name"
argument_list|,
literal|"Bob"
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|hiveRow
operator|.
name|add
argument_list|(
literal|"personal"
argument_list|,
literal|"surname"
argument_list|,
literal|"Stevens"
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|hiveRow
operator|.
name|add
argument_list|(
literal|"personal"
argument_list|,
literal|"age"
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|hiveRow
operator|.
name|add
argument_list|(
literal|"personal"
argument_list|,
literal|"weight"
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
literal|72
argument_list|)
expr_stmt|;
name|hiveRow
operator|.
name|add
argument_list|(
literal|"personal"
argument_list|,
literal|"height"
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
name|ColumnMapper
name|columnMapper
init|=
name|params
operator|.
name|getColumnMapper
argument_list|()
decl_stmt|;
name|lazyRow
operator|.
name|init
argument_list|(
name|hiveRow
argument_list|,
name|columnMapper
operator|.
name|getColumnMappings
argument_list|()
argument_list|,
name|rowIdFactory
argument_list|)
expr_stmt|;
name|Object
name|o
init|=
name|lazyRow
operator|.
name|getField
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|o
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|LazyString
operator|.
name|class
argument_list|,
name|o
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
operator|(
operator|(
name|LazyString
operator|)
name|o
operator|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|lazyRow
operator|.
name|getField
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|o
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|LazyString
operator|.
name|class
argument_list|,
name|o
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Bob"
argument_list|,
operator|(
operator|(
name|LazyString
operator|)
name|o
operator|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|lazyRow
operator|.
name|getField
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|o
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|LazyString
operator|.
name|class
argument_list|,
name|o
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Stevens"
argument_list|,
operator|(
operator|(
name|LazyString
operator|)
name|o
operator|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|lazyRow
operator|.
name|getField
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|o
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|LazyDioInteger
operator|.
name|class
argument_list|,
name|o
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"30"
argument_list|,
operator|(
operator|(
name|LazyDioInteger
operator|)
name|o
operator|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|lazyRow
operator|.
name|getField
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|o
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|LazyDioInteger
operator|.
name|class
argument_list|,
name|o
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"200"
argument_list|,
operator|(
operator|(
name|LazyDioInteger
operator|)
name|o
operator|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|o
operator|=
name|lazyRow
operator|.
name|getField
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|o
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|LazyDioInteger
operator|.
name|class
argument_list|,
name|o
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"72"
argument_list|,
operator|(
operator|(
name|LazyDioInteger
operator|)
name|o
operator|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNullInit
parameter_list|()
throws|throws
name|SerDeException
block|{
name|List
argument_list|<
name|String
argument_list|>
name|columns
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"row"
argument_list|,
literal|"1"
argument_list|,
literal|"2"
argument_list|,
literal|"3"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|TypeInfo
argument_list|>
name|types
init|=
name|Arrays
operator|.
expr|<
name|TypeInfo
operator|>
name|asList
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|STRING_TYPE_NAME
argument_list|)
argument_list|,
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|STRING_TYPE_NAME
argument_list|)
argument_list|,
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|STRING_TYPE_NAME
argument_list|)
argument_list|,
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|STRING_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazySimpleStructObjectInspector
name|objectInspector
init|=
operator|(
name|LazySimpleStructObjectInspector
operator|)
name|LazyFactory
operator|.
name|createLazyStructInspector
argument_list|(
name|columns
argument_list|,
name|types
argument_list|,
name|LazySimpleSerDe
operator|.
name|DefaultSeparators
argument_list|,
operator|new
name|Text
argument_list|(
literal|"\\N"
argument_list|)
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
operator|(
name|byte
operator|)
literal|'\\'
argument_list|)
decl_stmt|;
name|DefaultAccumuloRowIdFactory
name|rowIdFactory
init|=
operator|new
name|DefaultAccumuloRowIdFactory
argument_list|()
decl_stmt|;
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|,
literal|":rowid,cf:cq1,cf:cq2,cf:cq3"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMNS
argument_list|,
name|Joiner
operator|.
name|on
argument_list|(
literal|','
argument_list|)
operator|.
name|join
argument_list|(
name|columns
argument_list|)
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMN_TYPES
argument_list|,
name|Joiner
operator|.
name|on
argument_list|(
literal|','
argument_list|)
operator|.
name|join
argument_list|(
name|types
argument_list|)
argument_list|)
expr_stmt|;
name|AccumuloSerDeParameters
name|params
init|=
operator|new
name|AccumuloSerDeParameters
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|,
name|props
argument_list|,
name|AccumuloSerDe
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|rowIdFactory
operator|.
name|init
argument_list|(
name|params
argument_list|,
name|props
argument_list|)
expr_stmt|;
name|ColumnMapper
name|columnMapper
init|=
name|params
operator|.
name|getColumnMapper
argument_list|()
decl_stmt|;
name|LazyAccumuloRow
name|lazyRow
init|=
operator|new
name|LazyAccumuloRow
argument_list|(
name|objectInspector
argument_list|)
decl_stmt|;
name|AccumuloHiveRow
name|hiveRow
init|=
operator|new
name|AccumuloHiveRow
argument_list|(
literal|"1"
argument_list|)
decl_stmt|;
name|hiveRow
operator|.
name|add
argument_list|(
literal|"cf"
argument_list|,
literal|"cq1"
argument_list|,
literal|"foo"
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|hiveRow
operator|.
name|add
argument_list|(
literal|"cf"
argument_list|,
literal|"cq3"
argument_list|,
literal|"bar"
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|lazyRow
operator|.
name|init
argument_list|(
name|hiveRow
argument_list|,
name|columnMapper
operator|.
name|getColumnMappings
argument_list|()
argument_list|,
name|rowIdFactory
argument_list|)
expr_stmt|;
comment|// Noticed that we also suffer from the same issue as HIVE-3179
comment|// Only want to call a field init'ed when it's non-NULL
comment|// Check it twice, make sure we get null both times
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"{'row':'1','1':'foo','2':null,'3':'bar'}"
operator|.
name|replace
argument_list|(
literal|'\''
argument_list|,
literal|'"'
argument_list|)
argument_list|,
name|SerDeUtils
operator|.
name|getJSONString
argument_list|(
name|lazyRow
argument_list|,
name|objectInspector
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"{'row':'1','1':'foo','2':null,'3':'bar'}"
operator|.
name|replace
argument_list|(
literal|'\''
argument_list|,
literal|'"'
argument_list|)
argument_list|,
name|SerDeUtils
operator|.
name|getJSONString
argument_list|(
name|lazyRow
argument_list|,
name|objectInspector
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

