begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|Connector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|mock
operator|.
name|MockInstance
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|security
operator|.
name|tokens
operator|.
name|PasswordToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|columns
operator|.
name|ColumnEncoding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|serde
operator|.
name|AccumuloSerDeParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|MetaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|SerDeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|StorageDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|plan
operator|.
name|TableDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde
operator|.
name|serdeConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
specifier|public
class|class
name|TestAccumuloStorageHandler
block|{
specifier|protected
name|AccumuloStorageHandler
name|storageHandler
decl_stmt|;
annotation|@
name|Rule
specifier|public
name|TestName
name|test
init|=
operator|new
name|TestName
argument_list|()
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|storageHandler
operator|=
operator|new
name|AccumuloStorageHandler
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTablePropertiesPassedToOutputJobProperties
parameter_list|()
block|{
name|TableDesc
name|tableDesc
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|TableDesc
operator|.
name|class
argument_list|)
decl_stmt|;
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|jobProperties
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|,
literal|"cf:cq1,cf:cq2,cf:cq3"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMN_TYPES
argument_list|,
literal|"string:int:string"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMNS
argument_list|,
literal|"name,age,email"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|TABLE_NAME
argument_list|,
literal|"table"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|VISIBILITY_LABEL_KEY
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|tableDesc
operator|.
name|getProperties
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|props
argument_list|)
expr_stmt|;
name|storageHandler
operator|.
name|configureOutputJobProperties
argument_list|(
name|tableDesc
argument_list|,
name|jobProperties
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|jobProperties
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Job properties did not contain column mappings"
argument_list|,
name|jobProperties
operator|.
name|containsKey
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|)
argument_list|,
name|jobProperties
operator|.
name|get
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Job properties did not contain accumulo table name"
argument_list|,
name|jobProperties
operator|.
name|containsKey
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|TABLE_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|TABLE_NAME
argument_list|)
argument_list|,
name|jobProperties
operator|.
name|get
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|TABLE_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Job properties did not contain visibility label"
argument_list|,
name|jobProperties
operator|.
name|containsKey
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|VISIBILITY_LABEL_KEY
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|VISIBILITY_LABEL_KEY
argument_list|)
argument_list|,
name|jobProperties
operator|.
name|get
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|VISIBILITY_LABEL_KEY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTablePropertiesPassedToInputJobProperties
parameter_list|()
block|{
name|TableDesc
name|tableDesc
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|TableDesc
operator|.
name|class
argument_list|)
decl_stmt|;
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|jobProperties
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|,
literal|"cf:cq1,cf:cq2,cf:cq3"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|TABLE_NAME
argument_list|,
literal|"table"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|ITERATOR_PUSHDOWN_KEY
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|DEFAULT_STORAGE_TYPE
argument_list|,
name|ColumnEncoding
operator|.
name|BINARY
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|AUTHORIZATIONS_KEY
argument_list|,
literal|"foo,bar"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|tableDesc
operator|.
name|getProperties
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|props
argument_list|)
expr_stmt|;
name|storageHandler
operator|.
name|configureInputJobProperties
argument_list|(
name|tableDesc
argument_list|,
name|jobProperties
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|jobProperties
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|jobProperties
operator|.
name|containsKey
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|)
argument_list|,
name|jobProperties
operator|.
name|get
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|jobProperties
operator|.
name|containsKey
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|TABLE_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|TABLE_NAME
argument_list|)
argument_list|,
name|jobProperties
operator|.
name|get
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|TABLE_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|jobProperties
operator|.
name|containsKey
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|ITERATOR_PUSHDOWN_KEY
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|ITERATOR_PUSHDOWN_KEY
argument_list|)
argument_list|,
name|jobProperties
operator|.
name|get
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|ITERATOR_PUSHDOWN_KEY
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|jobProperties
operator|.
name|containsKey
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|DEFAULT_STORAGE_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|DEFAULT_STORAGE_TYPE
argument_list|)
argument_list|,
name|jobProperties
operator|.
name|get
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|DEFAULT_STORAGE_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|jobProperties
operator|.
name|containsKey
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|AUTHORIZATIONS_KEY
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|AUTHORIZATIONS_KEY
argument_list|)
argument_list|,
name|jobProperties
operator|.
name|get
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|AUTHORIZATIONS_KEY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testNonBooleanIteratorPushdownValue
parameter_list|()
block|{
name|TableDesc
name|tableDesc
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|TableDesc
operator|.
name|class
argument_list|)
decl_stmt|;
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|jobProperties
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|,
literal|"cf:cq1,cf:cq2,cf:cq3"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|TABLE_NAME
argument_list|,
literal|"table"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|ITERATOR_PUSHDOWN_KEY
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|tableDesc
operator|.
name|getProperties
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|props
argument_list|)
expr_stmt|;
name|storageHandler
operator|.
name|configureInputJobProperties
argument_list|(
name|tableDesc
argument_list|,
name|jobProperties
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testEmptyIteratorPushdownValue
parameter_list|()
block|{
name|TableDesc
name|tableDesc
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|TableDesc
operator|.
name|class
argument_list|)
decl_stmt|;
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|jobProperties
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|,
literal|"cf:cq1,cf:cq2,cf:cq3"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|TABLE_NAME
argument_list|,
literal|"table"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|ITERATOR_PUSHDOWN_KEY
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|tableDesc
operator|.
name|getProperties
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|props
argument_list|)
expr_stmt|;
name|storageHandler
operator|.
name|configureInputJobProperties
argument_list|(
name|tableDesc
argument_list|,
name|jobProperties
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTableJobPropertiesCallsInputAndOutputMethods
parameter_list|()
block|{
name|AccumuloStorageHandler
name|mockStorageHandler
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AccumuloStorageHandler
operator|.
name|class
argument_list|)
decl_stmt|;
name|TableDesc
name|tableDesc
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|TableDesc
operator|.
name|class
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|jobProperties
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|Mockito
operator|.
name|doCallRealMethod
argument_list|()
operator|.
name|when
argument_list|(
name|mockStorageHandler
argument_list|)
operator|.
name|configureTableJobProperties
argument_list|(
name|tableDesc
argument_list|,
name|jobProperties
argument_list|)
expr_stmt|;
comment|// configureTableJobProperties shouldn't be getting called by Hive, but, if it somehow does,
comment|// we should just set all of the configurations for input and output.
name|mockStorageHandler
operator|.
name|configureTableJobProperties
argument_list|(
name|tableDesc
argument_list|,
name|jobProperties
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|mockStorageHandler
argument_list|)
operator|.
name|configureInputJobProperties
argument_list|(
name|tableDesc
argument_list|,
name|jobProperties
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|mockStorageHandler
argument_list|)
operator|.
name|configureOutputJobProperties
argument_list|(
name|tableDesc
argument_list|,
name|jobProperties
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPreCreateTable
parameter_list|()
throws|throws
name|Exception
block|{
name|MockInstance
name|inst
init|=
operator|new
name|MockInstance
argument_list|(
name|test
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|Connector
name|conn
init|=
name|inst
operator|.
name|getConnector
argument_list|(
literal|"root"
argument_list|,
operator|new
name|PasswordToken
argument_list|(
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|tableName
init|=
literal|"table"
decl_stmt|;
comment|// Define the SerDe Parameters
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|,
literal|"cf:cq"
argument_list|)
expr_stmt|;
name|AccumuloConnectionParameters
name|connectionParams
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|class
argument_list|)
decl_stmt|;
name|AccumuloStorageHandler
name|storageHandler
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AccumuloStorageHandler
operator|.
name|class
argument_list|)
decl_stmt|;
name|StorageDescriptor
name|sd
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|StorageDescriptor
operator|.
name|class
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Table
operator|.
name|class
argument_list|)
decl_stmt|;
name|SerDeInfo
name|serDeInfo
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|SerDeInfo
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// Call the real preCreateTable method
name|Mockito
operator|.
name|doCallRealMethod
argument_list|()
operator|.
name|when
argument_list|(
name|storageHandler
argument_list|)
operator|.
name|preCreateTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
comment|// Return our known table name
name|Mockito
operator|.
name|when
argument_list|(
name|storageHandler
operator|.
name|getTableName
argument_list|(
name|table
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
comment|// Not an EXTERNAL table
name|Mockito
operator|.
name|when
argument_list|(
name|storageHandler
operator|.
name|isExternalTable
argument_list|(
name|table
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// Return the mocked StorageDescriptor
name|Mockito
operator|.
name|when
argument_list|(
name|table
operator|.
name|getSd
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|sd
argument_list|)
expr_stmt|;
comment|// No location expected with AccumuloStorageHandler
name|Mockito
operator|.
name|when
argument_list|(
name|sd
operator|.
name|getLocation
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
comment|// Return mocked SerDeInfo
name|Mockito
operator|.
name|when
argument_list|(
name|sd
operator|.
name|getSerdeInfo
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|serDeInfo
argument_list|)
expr_stmt|;
comment|// Custom parameters
name|Mockito
operator|.
name|when
argument_list|(
name|serDeInfo
operator|.
name|getParameters
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|params
argument_list|)
expr_stmt|;
comment|// Return the MockInstance's Connector
name|Mockito
operator|.
name|when
argument_list|(
name|connectionParams
operator|.
name|getConnector
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|conn
argument_list|)
expr_stmt|;
name|storageHandler
operator|.
name|connectionParams
operator|=
name|connectionParams
expr_stmt|;
name|storageHandler
operator|.
name|preCreateTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Table does not exist when we expect it to"
argument_list|,
name|conn
operator|.
name|tableOperations
argument_list|()
operator|.
name|exists
argument_list|(
name|tableName
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testMissingColumnMappingFails
parameter_list|()
throws|throws
name|Exception
block|{
name|MockInstance
name|inst
init|=
operator|new
name|MockInstance
argument_list|(
name|test
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|Connector
name|conn
init|=
name|inst
operator|.
name|getConnector
argument_list|(
literal|"root"
argument_list|,
operator|new
name|PasswordToken
argument_list|(
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|tableName
init|=
literal|"table"
decl_stmt|;
comment|// Empty parameters are sent, no COLUMN_MAPPING
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|AccumuloConnectionParameters
name|connectionParams
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|class
argument_list|)
decl_stmt|;
name|AccumuloStorageHandler
name|storageHandler
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AccumuloStorageHandler
operator|.
name|class
argument_list|)
decl_stmt|;
name|StorageDescriptor
name|sd
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|StorageDescriptor
operator|.
name|class
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Table
operator|.
name|class
argument_list|)
decl_stmt|;
name|SerDeInfo
name|serDeInfo
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|SerDeInfo
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// Call the real preCreateTable method
name|Mockito
operator|.
name|doCallRealMethod
argument_list|()
operator|.
name|when
argument_list|(
name|storageHandler
argument_list|)
operator|.
name|preCreateTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
comment|// Return our known table name
name|Mockito
operator|.
name|when
argument_list|(
name|storageHandler
operator|.
name|getTableName
argument_list|(
name|table
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
comment|// Not an EXTERNAL table
name|Mockito
operator|.
name|when
argument_list|(
name|storageHandler
operator|.
name|isExternalTable
argument_list|(
name|table
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// Return the mocked StorageDescriptor
name|Mockito
operator|.
name|when
argument_list|(
name|table
operator|.
name|getSd
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|sd
argument_list|)
expr_stmt|;
comment|// No location expected with AccumuloStorageHandler
name|Mockito
operator|.
name|when
argument_list|(
name|sd
operator|.
name|getLocation
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
comment|// Return mocked SerDeInfo
name|Mockito
operator|.
name|when
argument_list|(
name|sd
operator|.
name|getSerdeInfo
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|serDeInfo
argument_list|)
expr_stmt|;
comment|// Custom parameters
name|Mockito
operator|.
name|when
argument_list|(
name|serDeInfo
operator|.
name|getParameters
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|params
argument_list|)
expr_stmt|;
comment|// Return the MockInstance's Connector
name|Mockito
operator|.
name|when
argument_list|(
name|connectionParams
operator|.
name|getConnector
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|conn
argument_list|)
expr_stmt|;
name|storageHandler
operator|.
name|connectionParams
operator|=
name|connectionParams
expr_stmt|;
name|storageHandler
operator|.
name|preCreateTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testNonNullLocation
parameter_list|()
throws|throws
name|Exception
block|{
name|MockInstance
name|inst
init|=
operator|new
name|MockInstance
argument_list|(
name|test
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|Connector
name|conn
init|=
name|inst
operator|.
name|getConnector
argument_list|(
literal|"root"
argument_list|,
operator|new
name|PasswordToken
argument_list|(
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|tableName
init|=
literal|"table"
decl_stmt|;
comment|// Empty parameters are sent, no COLUMN_MAPPING
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|,
literal|"cf:cq"
argument_list|)
expr_stmt|;
name|AccumuloConnectionParameters
name|connectionParams
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|class
argument_list|)
decl_stmt|;
name|AccumuloStorageHandler
name|storageHandler
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AccumuloStorageHandler
operator|.
name|class
argument_list|)
decl_stmt|;
name|StorageDescriptor
name|sd
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|StorageDescriptor
operator|.
name|class
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Table
operator|.
name|class
argument_list|)
decl_stmt|;
name|SerDeInfo
name|serDeInfo
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|SerDeInfo
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// Call the real preCreateTable method
name|Mockito
operator|.
name|doCallRealMethod
argument_list|()
operator|.
name|when
argument_list|(
name|storageHandler
argument_list|)
operator|.
name|preCreateTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
comment|// Return our known table name
name|Mockito
operator|.
name|when
argument_list|(
name|storageHandler
operator|.
name|getTableName
argument_list|(
name|table
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
comment|// Not an EXTERNAL table
name|Mockito
operator|.
name|when
argument_list|(
name|storageHandler
operator|.
name|isExternalTable
argument_list|(
name|table
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// Return the mocked StorageDescriptor
name|Mockito
operator|.
name|when
argument_list|(
name|table
operator|.
name|getSd
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|sd
argument_list|)
expr_stmt|;
comment|// No location expected with AccumuloStorageHandler
name|Mockito
operator|.
name|when
argument_list|(
name|sd
operator|.
name|getLocation
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"foobar"
argument_list|)
expr_stmt|;
comment|// Return mocked SerDeInfo
name|Mockito
operator|.
name|when
argument_list|(
name|sd
operator|.
name|getSerdeInfo
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|serDeInfo
argument_list|)
expr_stmt|;
comment|// Custom parameters
name|Mockito
operator|.
name|when
argument_list|(
name|serDeInfo
operator|.
name|getParameters
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|params
argument_list|)
expr_stmt|;
comment|// Return the MockInstance's Connector
name|Mockito
operator|.
name|when
argument_list|(
name|connectionParams
operator|.
name|getConnector
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|conn
argument_list|)
expr_stmt|;
name|storageHandler
operator|.
name|connectionParams
operator|=
name|connectionParams
expr_stmt|;
name|storageHandler
operator|.
name|preCreateTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExternalNonExistentTableFails
parameter_list|()
throws|throws
name|Exception
block|{
name|MockInstance
name|inst
init|=
operator|new
name|MockInstance
argument_list|(
name|test
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|Connector
name|conn
init|=
name|inst
operator|.
name|getConnector
argument_list|(
literal|"root"
argument_list|,
operator|new
name|PasswordToken
argument_list|(
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|tableName
init|=
literal|"table"
decl_stmt|;
comment|// Define the SerDe Parameters
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|,
literal|"cf:cq"
argument_list|)
expr_stmt|;
name|AccumuloConnectionParameters
name|connectionParams
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|class
argument_list|)
decl_stmt|;
name|AccumuloStorageHandler
name|storageHandler
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AccumuloStorageHandler
operator|.
name|class
argument_list|)
decl_stmt|;
name|StorageDescriptor
name|sd
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|StorageDescriptor
operator|.
name|class
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Table
operator|.
name|class
argument_list|)
decl_stmt|;
name|SerDeInfo
name|serDeInfo
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|SerDeInfo
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// Call the real preCreateTable method
name|Mockito
operator|.
name|doCallRealMethod
argument_list|()
operator|.
name|when
argument_list|(
name|storageHandler
argument_list|)
operator|.
name|preCreateTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
comment|// Return our known table name
name|Mockito
operator|.
name|when
argument_list|(
name|storageHandler
operator|.
name|getTableName
argument_list|(
name|table
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
comment|// Is an EXTERNAL table
name|Mockito
operator|.
name|when
argument_list|(
name|storageHandler
operator|.
name|isExternalTable
argument_list|(
name|table
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// Return the mocked StorageDescriptor
name|Mockito
operator|.
name|when
argument_list|(
name|table
operator|.
name|getSd
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|sd
argument_list|)
expr_stmt|;
comment|// No location expected with AccumuloStorageHandler
name|Mockito
operator|.
name|when
argument_list|(
name|sd
operator|.
name|getLocation
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
comment|// Return mocked SerDeInfo
name|Mockito
operator|.
name|when
argument_list|(
name|sd
operator|.
name|getSerdeInfo
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|serDeInfo
argument_list|)
expr_stmt|;
comment|// Custom parameters
name|Mockito
operator|.
name|when
argument_list|(
name|serDeInfo
operator|.
name|getParameters
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|params
argument_list|)
expr_stmt|;
comment|// Return the MockInstance's Connector
name|Mockito
operator|.
name|when
argument_list|(
name|connectionParams
operator|.
name|getConnector
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|conn
argument_list|)
expr_stmt|;
name|storageHandler
operator|.
name|connectionParams
operator|=
name|connectionParams
expr_stmt|;
name|storageHandler
operator|.
name|preCreateTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testNonExternalExistentTable
parameter_list|()
throws|throws
name|Exception
block|{
name|MockInstance
name|inst
init|=
operator|new
name|MockInstance
argument_list|(
name|test
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|Connector
name|conn
init|=
name|inst
operator|.
name|getConnector
argument_list|(
literal|"root"
argument_list|,
operator|new
name|PasswordToken
argument_list|(
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|tableName
init|=
literal|"table"
decl_stmt|;
comment|// Create the table
name|conn
operator|.
name|tableOperations
argument_list|()
operator|.
name|create
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
comment|// Define the SerDe Parameters
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|,
literal|"cf:cq"
argument_list|)
expr_stmt|;
name|AccumuloConnectionParameters
name|connectionParams
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|class
argument_list|)
decl_stmt|;
name|AccumuloStorageHandler
name|storageHandler
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AccumuloStorageHandler
operator|.
name|class
argument_list|)
decl_stmt|;
name|StorageDescriptor
name|sd
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|StorageDescriptor
operator|.
name|class
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Table
operator|.
name|class
argument_list|)
decl_stmt|;
name|SerDeInfo
name|serDeInfo
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|SerDeInfo
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// Call the real preCreateTable method
name|Mockito
operator|.
name|doCallRealMethod
argument_list|()
operator|.
name|when
argument_list|(
name|storageHandler
argument_list|)
operator|.
name|preCreateTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
comment|// Return our known table name
name|Mockito
operator|.
name|when
argument_list|(
name|storageHandler
operator|.
name|getTableName
argument_list|(
name|table
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
comment|// Is not an EXTERNAL table
name|Mockito
operator|.
name|when
argument_list|(
name|storageHandler
operator|.
name|isExternalTable
argument_list|(
name|table
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// Return the mocked StorageDescriptor
name|Mockito
operator|.
name|when
argument_list|(
name|table
operator|.
name|getSd
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|sd
argument_list|)
expr_stmt|;
comment|// No location expected with AccumuloStorageHandler
name|Mockito
operator|.
name|when
argument_list|(
name|sd
operator|.
name|getLocation
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
comment|// Return mocked SerDeInfo
name|Mockito
operator|.
name|when
argument_list|(
name|sd
operator|.
name|getSerdeInfo
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|serDeInfo
argument_list|)
expr_stmt|;
comment|// Custom parameters
name|Mockito
operator|.
name|when
argument_list|(
name|serDeInfo
operator|.
name|getParameters
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|params
argument_list|)
expr_stmt|;
comment|// Return the MockInstance's Connector
name|Mockito
operator|.
name|when
argument_list|(
name|connectionParams
operator|.
name|getConnector
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|conn
argument_list|)
expr_stmt|;
name|storageHandler
operator|.
name|connectionParams
operator|=
name|connectionParams
expr_stmt|;
name|storageHandler
operator|.
name|preCreateTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|()
specifier|public
name|void
name|testRollbackCreateTableOnNonExistentTable
parameter_list|()
throws|throws
name|Exception
block|{
name|MockInstance
name|inst
init|=
operator|new
name|MockInstance
argument_list|(
name|test
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|Connector
name|conn
init|=
name|inst
operator|.
name|getConnector
argument_list|(
literal|"root"
argument_list|,
operator|new
name|PasswordToken
argument_list|(
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|AccumuloStorageHandler
name|storageHandler
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AccumuloStorageHandler
operator|.
name|class
argument_list|)
decl_stmt|;
name|String
name|tableName
init|=
literal|"table"
decl_stmt|;
name|AccumuloConnectionParameters
name|connectionParams
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|class
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Table
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// Call the real preCreateTable method
name|Mockito
operator|.
name|doCallRealMethod
argument_list|()
operator|.
name|when
argument_list|(
name|storageHandler
argument_list|)
operator|.
name|rollbackCreateTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
comment|// Return our known table name
name|Mockito
operator|.
name|when
argument_list|(
name|storageHandler
operator|.
name|getTableName
argument_list|(
name|table
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
comment|// Is not an EXTERNAL table
name|Mockito
operator|.
name|when
argument_list|(
name|storageHandler
operator|.
name|isExternalTable
argument_list|(
name|table
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// Return the MockInstance's Connector
name|Mockito
operator|.
name|when
argument_list|(
name|connectionParams
operator|.
name|getConnector
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|conn
argument_list|)
expr_stmt|;
name|storageHandler
operator|.
name|connectionParams
operator|=
name|connectionParams
expr_stmt|;
name|storageHandler
operator|.
name|rollbackCreateTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|()
specifier|public
name|void
name|testRollbackCreateTableDeletesExistentTable
parameter_list|()
throws|throws
name|Exception
block|{
name|MockInstance
name|inst
init|=
operator|new
name|MockInstance
argument_list|(
name|test
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|Connector
name|conn
init|=
name|inst
operator|.
name|getConnector
argument_list|(
literal|"root"
argument_list|,
operator|new
name|PasswordToken
argument_list|(
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|AccumuloStorageHandler
name|storageHandler
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AccumuloStorageHandler
operator|.
name|class
argument_list|)
decl_stmt|;
name|String
name|tableName
init|=
literal|"table"
decl_stmt|;
comment|// Create the table
name|conn
operator|.
name|tableOperations
argument_list|()
operator|.
name|create
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
name|AccumuloConnectionParameters
name|connectionParams
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|class
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Table
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// Call the real preCreateTable method
name|Mockito
operator|.
name|doCallRealMethod
argument_list|()
operator|.
name|when
argument_list|(
name|storageHandler
argument_list|)
operator|.
name|rollbackCreateTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doCallRealMethod
argument_list|()
operator|.
name|when
argument_list|(
name|storageHandler
argument_list|)
operator|.
name|commitDropTable
argument_list|(
name|table
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// Return our known table name
name|Mockito
operator|.
name|when
argument_list|(
name|storageHandler
operator|.
name|getTableName
argument_list|(
name|table
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
comment|// Is not an EXTERNAL table
name|Mockito
operator|.
name|when
argument_list|(
name|storageHandler
operator|.
name|isExternalTable
argument_list|(
name|table
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// Return the MockInstance's Connector
name|Mockito
operator|.
name|when
argument_list|(
name|connectionParams
operator|.
name|getConnector
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|conn
argument_list|)
expr_stmt|;
name|storageHandler
operator|.
name|connectionParams
operator|=
name|connectionParams
expr_stmt|;
name|storageHandler
operator|.
name|rollbackCreateTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|conn
operator|.
name|tableOperations
argument_list|()
operator|.
name|exists
argument_list|(
name|tableName
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|()
specifier|public
name|void
name|testRollbackCreateTableDoesntDeleteExternalExistentTable
parameter_list|()
throws|throws
name|Exception
block|{
name|MockInstance
name|inst
init|=
operator|new
name|MockInstance
argument_list|(
name|test
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|Connector
name|conn
init|=
name|inst
operator|.
name|getConnector
argument_list|(
literal|"root"
argument_list|,
operator|new
name|PasswordToken
argument_list|(
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|AccumuloStorageHandler
name|storageHandler
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AccumuloStorageHandler
operator|.
name|class
argument_list|)
decl_stmt|;
name|String
name|tableName
init|=
literal|"table"
decl_stmt|;
comment|// Create the table
name|conn
operator|.
name|tableOperations
argument_list|()
operator|.
name|create
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
name|AccumuloConnectionParameters
name|connectionParams
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|class
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Table
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// Call the real preCreateTable method
name|Mockito
operator|.
name|doCallRealMethod
argument_list|()
operator|.
name|when
argument_list|(
name|storageHandler
argument_list|)
operator|.
name|rollbackCreateTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doCallRealMethod
argument_list|()
operator|.
name|when
argument_list|(
name|storageHandler
argument_list|)
operator|.
name|commitDropTable
argument_list|(
name|table
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// Return our known table name
name|Mockito
operator|.
name|when
argument_list|(
name|storageHandler
operator|.
name|getTableName
argument_list|(
name|table
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
comment|// Is not an EXTERNAL table
name|Mockito
operator|.
name|when
argument_list|(
name|storageHandler
operator|.
name|isExternalTable
argument_list|(
name|table
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// Return the MockInstance's Connector
name|Mockito
operator|.
name|when
argument_list|(
name|connectionParams
operator|.
name|getConnector
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|conn
argument_list|)
expr_stmt|;
name|storageHandler
operator|.
name|connectionParams
operator|=
name|connectionParams
expr_stmt|;
name|storageHandler
operator|.
name|rollbackCreateTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|conn
operator|.
name|tableOperations
argument_list|()
operator|.
name|exists
argument_list|(
name|tableName
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDropTableWithoutDeleteLeavesTableIntact
parameter_list|()
throws|throws
name|Exception
block|{
name|MockInstance
name|inst
init|=
operator|new
name|MockInstance
argument_list|(
name|test
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|Connector
name|conn
init|=
name|inst
operator|.
name|getConnector
argument_list|(
literal|"root"
argument_list|,
operator|new
name|PasswordToken
argument_list|(
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|AccumuloStorageHandler
name|storageHandler
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AccumuloStorageHandler
operator|.
name|class
argument_list|)
decl_stmt|;
name|String
name|tableName
init|=
literal|"table"
decl_stmt|;
comment|// Create the table
name|conn
operator|.
name|tableOperations
argument_list|()
operator|.
name|create
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
name|AccumuloConnectionParameters
name|connectionParams
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|class
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Table
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// Call the real preCreateTable method
name|Mockito
operator|.
name|doCallRealMethod
argument_list|()
operator|.
name|when
argument_list|(
name|storageHandler
argument_list|)
operator|.
name|commitDropTable
argument_list|(
name|table
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// Return our known table name
name|Mockito
operator|.
name|when
argument_list|(
name|storageHandler
operator|.
name|getTableName
argument_list|(
name|table
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
comment|// Is not an EXTERNAL table
name|Mockito
operator|.
name|when
argument_list|(
name|storageHandler
operator|.
name|isExternalTable
argument_list|(
name|table
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// Return the MockInstance's Connector
name|Mockito
operator|.
name|when
argument_list|(
name|connectionParams
operator|.
name|getConnector
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|conn
argument_list|)
expr_stmt|;
name|storageHandler
operator|.
name|connectionParams
operator|=
name|connectionParams
expr_stmt|;
name|storageHandler
operator|.
name|rollbackCreateTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|conn
operator|.
name|tableOperations
argument_list|()
operator|.
name|exists
argument_list|(
name|tableName
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

