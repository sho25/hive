begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|mr
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|AccumuloSecurityException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|Connector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|Instance
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|mock
operator|.
name|MockInstance
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|security
operator|.
name|tokens
operator|.
name|PasswordToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|data
operator|.
name|Key
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|data
operator|.
name|Mutation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|data
operator|.
name|Value
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|security
operator|.
name|Authorizations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|security
operator|.
name|ColumnVisibility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|AccumuloConnectionParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|columns
operator|.
name|ColumnEncoding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|serde
operator|.
name|AccumuloRowSerializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|serde
operator|.
name|AccumuloSerDe
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|serde
operator|.
name|AccumuloSerDeParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde
operator|.
name|serdeConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|ByteArrayRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazyFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazySerDeParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazyStruct
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|LazyMapObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|LazyObjectInspectorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|LazySimpleStructObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|LazyStringObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|typeinfo
operator|.
name|TypeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|typeinfo
operator|.
name|TypeInfoFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|RecordWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Joiner
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
specifier|public
class|class
name|TestHiveAccumuloTableOutputFormat
block|{
specifier|protected
name|JobConf
name|conf
decl_stmt|;
specifier|protected
name|String
name|user
init|=
literal|"root"
decl_stmt|;
specifier|protected
name|String
name|password
init|=
literal|"password"
decl_stmt|;
specifier|protected
name|String
name|instanceName
init|=
literal|"instance"
decl_stmt|;
specifier|protected
name|String
name|zookeepers
init|=
literal|"host1:2181,host2:2181,host3:2181"
decl_stmt|;
specifier|protected
name|String
name|outputTable
init|=
literal|"output"
decl_stmt|;
annotation|@
name|Rule
specifier|public
name|TestName
name|test
init|=
operator|new
name|TestName
argument_list|()
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|IOException
block|{
name|conf
operator|=
operator|new
name|JobConf
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|USER_NAME
argument_list|,
name|user
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|USER_PASS
argument_list|,
name|password
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|INSTANCE_NAME
argument_list|,
name|instanceName
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|ZOOKEEPERS
argument_list|,
name|zookeepers
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|TABLE_NAME
argument_list|,
name|outputTable
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBasicConfiguration
parameter_list|()
throws|throws
name|IOException
throws|,
name|AccumuloSecurityException
block|{
name|HiveAccumuloTableOutputFormat
name|outputFormat
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HiveAccumuloTableOutputFormat
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|doCallRealMethod
argument_list|()
operator|.
name|when
argument_list|(
name|outputFormat
argument_list|)
operator|.
name|configureAccumuloOutputFormat
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|outputFormat
operator|.
name|configureAccumuloOutputFormat
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|outputFormat
argument_list|)
operator|.
name|setAccumuloConnectorInfo
argument_list|(
name|conf
argument_list|,
name|user
argument_list|,
operator|new
name|PasswordToken
argument_list|(
name|password
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|outputFormat
argument_list|)
operator|.
name|setAccumuloZooKeeperInstance
argument_list|(
name|conf
argument_list|,
name|instanceName
argument_list|,
name|zookeepers
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|outputFormat
argument_list|)
operator|.
name|setDefaultAccumuloTableName
argument_list|(
name|conf
argument_list|,
name|outputTable
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMockInstance
parameter_list|()
throws|throws
name|IOException
throws|,
name|AccumuloSecurityException
block|{
name|HiveAccumuloTableOutputFormat
name|outputFormat
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HiveAccumuloTableOutputFormat
operator|.
name|class
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|USE_MOCK_INSTANCE
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|unset
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|ZOOKEEPERS
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|doCallRealMethod
argument_list|()
operator|.
name|when
argument_list|(
name|outputFormat
argument_list|)
operator|.
name|configureAccumuloOutputFormat
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|outputFormat
operator|.
name|configureAccumuloOutputFormat
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|outputFormat
argument_list|)
operator|.
name|setAccumuloConnectorInfo
argument_list|(
name|conf
argument_list|,
name|user
argument_list|,
operator|new
name|PasswordToken
argument_list|(
name|password
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|outputFormat
argument_list|)
operator|.
name|setAccumuloMockInstance
argument_list|(
name|conf
argument_list|,
name|instanceName
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|verify
argument_list|(
name|outputFormat
argument_list|)
operator|.
name|setDefaultAccumuloTableName
argument_list|(
name|conf
argument_list|,
name|outputTable
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteToMockInstance
parameter_list|()
throws|throws
name|Exception
block|{
name|Instance
name|inst
init|=
operator|new
name|MockInstance
argument_list|(
name|test
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|Connector
name|conn
init|=
name|inst
operator|.
name|getConnector
argument_list|(
literal|"root"
argument_list|,
operator|new
name|PasswordToken
argument_list|(
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|HiveAccumuloTableOutputFormat
name|outputFormat
init|=
operator|new
name|HiveAccumuloTableOutputFormat
argument_list|()
decl_stmt|;
name|String
name|table
init|=
name|test
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|conn
operator|.
name|tableOperations
argument_list|()
operator|.
name|create
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|JobConf
name|conf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|INSTANCE_NAME
argument_list|,
name|inst
operator|.
name|getInstanceName
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|USER_NAME
argument_list|,
literal|"root"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|USER_PASS
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|USE_MOCK_INSTANCE
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|TABLE_NAME
argument_list|,
name|test
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
name|local
init|=
name|FileSystem
operator|.
name|getLocal
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|outputFormat
operator|.
name|checkOutputSpecs
argument_list|(
name|local
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|RecordWriter
argument_list|<
name|Text
argument_list|,
name|Mutation
argument_list|>
name|recordWriter
init|=
name|outputFormat
operator|.
name|getRecordWriter
argument_list|(
name|local
argument_list|,
name|conf
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|names
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"row"
argument_list|,
literal|"col1"
argument_list|,
literal|"col2"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|TypeInfo
argument_list|>
name|types
init|=
name|Arrays
operator|.
expr|<
name|TypeInfo
operator|>
name|asList
argument_list|(
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|)
decl_stmt|;
name|Properties
name|tableProperties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|,
literal|":rowID,cf:cq1,cf:cq2"
argument_list|)
expr_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|FIELD_DELIM
argument_list|,
literal|" "
argument_list|)
expr_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMNS
argument_list|,
name|Joiner
operator|.
name|on
argument_list|(
literal|','
argument_list|)
operator|.
name|join
argument_list|(
name|names
argument_list|)
argument_list|)
expr_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMN_TYPES
argument_list|,
name|Joiner
operator|.
name|on
argument_list|(
literal|','
argument_list|)
operator|.
name|join
argument_list|(
name|types
argument_list|)
argument_list|)
expr_stmt|;
name|AccumuloSerDeParameters
name|accumuloSerDeParams
init|=
operator|new
name|AccumuloSerDeParameters
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|,
name|tableProperties
argument_list|,
name|AccumuloSerDe
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|)
decl_stmt|;
name|LazySerDeParameters
name|serDeParams
init|=
name|accumuloSerDeParams
operator|.
name|getSerDeParameters
argument_list|()
decl_stmt|;
name|AccumuloRowSerializer
name|serializer
init|=
operator|new
name|AccumuloRowSerializer
argument_list|(
literal|0
argument_list|,
name|serDeParams
argument_list|,
name|accumuloSerDeParams
operator|.
name|getColumnMappings
argument_list|()
argument_list|,
name|AccumuloSerDeParameters
operator|.
name|DEFAULT_VISIBILITY_LABEL
argument_list|,
name|accumuloSerDeParams
operator|.
name|getRowIdFactory
argument_list|()
argument_list|)
decl_stmt|;
name|TypeInfo
name|stringTypeInfo
init|=
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|STRING_TYPE_NAME
argument_list|)
decl_stmt|;
name|LazySimpleStructObjectInspector
name|structOI
init|=
operator|(
name|LazySimpleStructObjectInspector
operator|)
name|LazyFactory
operator|.
name|createLazyStructInspector
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"row"
argument_list|,
literal|"cq1"
argument_list|,
literal|"cq2"
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|stringTypeInfo
argument_list|,
name|stringTypeInfo
argument_list|,
name|stringTypeInfo
argument_list|)
argument_list|,
name|serDeParams
operator|.
name|getSeparators
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|getNullSequence
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|isLastColumnTakesRest
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|isEscaped
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|getEscapeChar
argument_list|()
argument_list|)
decl_stmt|;
name|LazyStruct
name|struct
init|=
operator|(
name|LazyStruct
operator|)
name|LazyFactory
operator|.
name|createLazyObject
argument_list|(
name|structOI
argument_list|)
decl_stmt|;
name|ByteArrayRef
name|bytes
init|=
operator|new
name|ByteArrayRef
argument_list|()
decl_stmt|;
name|bytes
operator|.
name|setData
argument_list|(
literal|"row value1 value2"
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|struct
operator|.
name|init
argument_list|(
name|bytes
argument_list|,
literal|0
argument_list|,
name|bytes
operator|.
name|getData
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
comment|// Serialize the struct into a mutation
name|Mutation
name|m
init|=
name|serializer
operator|.
name|serialize
argument_list|(
name|struct
argument_list|,
name|structOI
argument_list|)
decl_stmt|;
comment|// Write the mutation
name|recordWriter
operator|.
name|write
argument_list|(
operator|new
name|Text
argument_list|(
name|table
argument_list|)
argument_list|,
name|m
argument_list|)
expr_stmt|;
comment|// Close the writer
name|recordWriter
operator|.
name|close
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|Entry
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
argument_list|>
name|iter
init|=
name|conn
operator|.
name|createScanner
argument_list|(
name|table
argument_list|,
operator|new
name|Authorizations
argument_list|()
argument_list|)
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Iterator did not have an element as expected"
argument_list|,
name|iter
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|Entry
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
name|entry
init|=
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|Key
name|k
init|=
name|entry
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|Value
name|v
init|=
name|entry
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"row"
argument_list|,
name|k
operator|.
name|getRow
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cf"
argument_list|,
name|k
operator|.
name|getColumnFamily
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cq1"
argument_list|,
name|k
operator|.
name|getColumnQualifier
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|k
operator|.
name|getColumnVisibility
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"value1"
argument_list|,
operator|new
name|String
argument_list|(
name|v
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Iterator did not have an element as expected"
argument_list|,
name|iter
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|=
name|iter
operator|.
name|next
argument_list|()
expr_stmt|;
name|k
operator|=
name|entry
operator|.
name|getKey
argument_list|()
expr_stmt|;
name|v
operator|=
name|entry
operator|.
name|getValue
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"row"
argument_list|,
name|k
operator|.
name|getRow
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cf"
argument_list|,
name|k
operator|.
name|getColumnFamily
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cq2"
argument_list|,
name|k
operator|.
name|getColumnQualifier
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|k
operator|.
name|getColumnVisibility
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"value2"
argument_list|,
operator|new
name|String
argument_list|(
name|v
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Iterator unexpectedly had more data"
argument_list|,
name|iter
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteToMockInstanceWithVisibility
parameter_list|()
throws|throws
name|Exception
block|{
name|Instance
name|inst
init|=
operator|new
name|MockInstance
argument_list|(
name|test
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|Connector
name|conn
init|=
name|inst
operator|.
name|getConnector
argument_list|(
literal|"root"
argument_list|,
operator|new
name|PasswordToken
argument_list|(
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|Authorizations
name|auths
init|=
operator|new
name|Authorizations
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|conn
operator|.
name|securityOperations
argument_list|()
operator|.
name|changeUserAuthorizations
argument_list|(
literal|"root"
argument_list|,
name|auths
argument_list|)
expr_stmt|;
name|HiveAccumuloTableOutputFormat
name|outputFormat
init|=
operator|new
name|HiveAccumuloTableOutputFormat
argument_list|()
decl_stmt|;
name|String
name|table
init|=
name|test
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|conn
operator|.
name|tableOperations
argument_list|()
operator|.
name|create
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|JobConf
name|conf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|INSTANCE_NAME
argument_list|,
name|inst
operator|.
name|getInstanceName
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|USER_NAME
argument_list|,
literal|"root"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|USER_PASS
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|USE_MOCK_INSTANCE
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|TABLE_NAME
argument_list|,
name|test
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
name|local
init|=
name|FileSystem
operator|.
name|getLocal
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|outputFormat
operator|.
name|checkOutputSpecs
argument_list|(
name|local
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|RecordWriter
argument_list|<
name|Text
argument_list|,
name|Mutation
argument_list|>
name|recordWriter
init|=
name|outputFormat
operator|.
name|getRecordWriter
argument_list|(
name|local
argument_list|,
name|conf
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|names
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"row"
argument_list|,
literal|"col1"
argument_list|,
literal|"col2"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|TypeInfo
argument_list|>
name|types
init|=
name|Arrays
operator|.
expr|<
name|TypeInfo
operator|>
name|asList
argument_list|(
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|)
decl_stmt|;
name|Properties
name|tableProperties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|,
literal|":rowID,cf:cq1,cf:cq2"
argument_list|)
expr_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|FIELD_DELIM
argument_list|,
literal|" "
argument_list|)
expr_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMNS
argument_list|,
name|Joiner
operator|.
name|on
argument_list|(
literal|','
argument_list|)
operator|.
name|join
argument_list|(
name|names
argument_list|)
argument_list|)
expr_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMN_TYPES
argument_list|,
name|Joiner
operator|.
name|on
argument_list|(
literal|','
argument_list|)
operator|.
name|join
argument_list|(
name|types
argument_list|)
argument_list|)
expr_stmt|;
name|AccumuloSerDeParameters
name|accumuloSerDeParams
init|=
operator|new
name|AccumuloSerDeParameters
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|,
name|tableProperties
argument_list|,
name|AccumuloSerDe
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|)
decl_stmt|;
name|LazySerDeParameters
name|serDeParams
init|=
name|accumuloSerDeParams
operator|.
name|getSerDeParameters
argument_list|()
decl_stmt|;
name|AccumuloRowSerializer
name|serializer
init|=
operator|new
name|AccumuloRowSerializer
argument_list|(
literal|0
argument_list|,
name|serDeParams
argument_list|,
name|accumuloSerDeParams
operator|.
name|getColumnMappings
argument_list|()
argument_list|,
operator|new
name|ColumnVisibility
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
name|accumuloSerDeParams
operator|.
name|getRowIdFactory
argument_list|()
argument_list|)
decl_stmt|;
name|LazySimpleStructObjectInspector
name|structOI
init|=
operator|(
name|LazySimpleStructObjectInspector
operator|)
name|LazyFactory
operator|.
name|createLazyStructInspector
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"row"
argument_list|,
literal|"cq1"
argument_list|,
literal|"cq2"
argument_list|)
argument_list|,
name|Arrays
operator|.
expr|<
name|TypeInfo
operator|>
name|asList
argument_list|(
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|)
argument_list|,
name|serDeParams
operator|.
name|getSeparators
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|getNullSequence
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|isLastColumnTakesRest
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|isEscaped
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|getEscapeChar
argument_list|()
argument_list|)
decl_stmt|;
name|LazyStruct
name|struct
init|=
operator|(
name|LazyStruct
operator|)
name|LazyFactory
operator|.
name|createLazyObject
argument_list|(
name|structOI
argument_list|)
decl_stmt|;
name|ByteArrayRef
name|bytes
init|=
operator|new
name|ByteArrayRef
argument_list|()
decl_stmt|;
name|bytes
operator|.
name|setData
argument_list|(
literal|"row value1 value2"
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|struct
operator|.
name|init
argument_list|(
name|bytes
argument_list|,
literal|0
argument_list|,
name|bytes
operator|.
name|getData
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
comment|// Serialize the struct into a mutation
name|Mutation
name|m
init|=
name|serializer
operator|.
name|serialize
argument_list|(
name|struct
argument_list|,
name|structOI
argument_list|)
decl_stmt|;
comment|// Write the mutation
name|recordWriter
operator|.
name|write
argument_list|(
operator|new
name|Text
argument_list|(
name|table
argument_list|)
argument_list|,
name|m
argument_list|)
expr_stmt|;
comment|// Close the writer
name|recordWriter
operator|.
name|close
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|Entry
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
argument_list|>
name|iter
init|=
name|conn
operator|.
name|createScanner
argument_list|(
name|table
argument_list|,
name|auths
argument_list|)
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Iterator did not have an element as expected"
argument_list|,
name|iter
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|Entry
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
name|entry
init|=
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|Key
name|k
init|=
name|entry
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|Value
name|v
init|=
name|entry
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"row"
argument_list|,
name|k
operator|.
name|getRow
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cf"
argument_list|,
name|k
operator|.
name|getColumnFamily
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cq1"
argument_list|,
name|k
operator|.
name|getColumnQualifier
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"foo"
argument_list|,
name|k
operator|.
name|getColumnVisibility
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"value1"
argument_list|,
operator|new
name|String
argument_list|(
name|v
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Iterator did not have an element as expected"
argument_list|,
name|iter
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|=
name|iter
operator|.
name|next
argument_list|()
expr_stmt|;
name|k
operator|=
name|entry
operator|.
name|getKey
argument_list|()
expr_stmt|;
name|v
operator|=
name|entry
operator|.
name|getValue
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"row"
argument_list|,
name|k
operator|.
name|getRow
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cf"
argument_list|,
name|k
operator|.
name|getColumnFamily
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cq2"
argument_list|,
name|k
operator|.
name|getColumnQualifier
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"foo"
argument_list|,
name|k
operator|.
name|getColumnVisibility
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"value2"
argument_list|,
operator|new
name|String
argument_list|(
name|v
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Iterator unexpectedly had more data"
argument_list|,
name|iter
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWriteMap
parameter_list|()
throws|throws
name|Exception
block|{
name|Instance
name|inst
init|=
operator|new
name|MockInstance
argument_list|(
name|test
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|Connector
name|conn
init|=
name|inst
operator|.
name|getConnector
argument_list|(
literal|"root"
argument_list|,
operator|new
name|PasswordToken
argument_list|(
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|HiveAccumuloTableOutputFormat
name|outputFormat
init|=
operator|new
name|HiveAccumuloTableOutputFormat
argument_list|()
decl_stmt|;
name|String
name|table
init|=
name|test
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|conn
operator|.
name|tableOperations
argument_list|()
operator|.
name|create
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|JobConf
name|conf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|INSTANCE_NAME
argument_list|,
name|inst
operator|.
name|getInstanceName
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|USER_NAME
argument_list|,
literal|"root"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|USER_PASS
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|USE_MOCK_INSTANCE
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|TABLE_NAME
argument_list|,
name|test
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
name|local
init|=
name|FileSystem
operator|.
name|getLocal
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|outputFormat
operator|.
name|checkOutputSpecs
argument_list|(
name|local
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|RecordWriter
argument_list|<
name|Text
argument_list|,
name|Mutation
argument_list|>
name|recordWriter
init|=
name|outputFormat
operator|.
name|getRecordWriter
argument_list|(
name|local
argument_list|,
name|conf
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|names
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"row"
argument_list|,
literal|"col1"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|TypeInfo
argument_list|>
name|types
init|=
name|Arrays
operator|.
expr|<
name|TypeInfo
operator|>
name|asList
argument_list|(
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|)
decl_stmt|;
name|Properties
name|tableProperties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|,
literal|":rowID,cf:*"
argument_list|)
expr_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|FIELD_DELIM
argument_list|,
literal|" "
argument_list|)
expr_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMNS
argument_list|,
name|Joiner
operator|.
name|on
argument_list|(
literal|','
argument_list|)
operator|.
name|join
argument_list|(
name|names
argument_list|)
argument_list|)
expr_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMN_TYPES
argument_list|,
name|Joiner
operator|.
name|on
argument_list|(
literal|','
argument_list|)
operator|.
name|join
argument_list|(
name|types
argument_list|)
argument_list|)
expr_stmt|;
name|AccumuloSerDeParameters
name|accumuloSerDeParams
init|=
operator|new
name|AccumuloSerDeParameters
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|,
name|tableProperties
argument_list|,
name|AccumuloSerDe
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|)
decl_stmt|;
name|LazySerDeParameters
name|serDeParams
init|=
name|accumuloSerDeParams
operator|.
name|getSerDeParameters
argument_list|()
decl_stmt|;
name|AccumuloRowSerializer
name|serializer
init|=
operator|new
name|AccumuloRowSerializer
argument_list|(
literal|0
argument_list|,
name|serDeParams
argument_list|,
name|accumuloSerDeParams
operator|.
name|getColumnMappings
argument_list|()
argument_list|,
name|AccumuloSerDeParameters
operator|.
name|DEFAULT_VISIBILITY_LABEL
argument_list|,
name|accumuloSerDeParams
operator|.
name|getRowIdFactory
argument_list|()
argument_list|)
decl_stmt|;
name|TypeInfo
name|stringTypeInfo
init|=
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|STRING_TYPE_NAME
argument_list|)
decl_stmt|;
name|LazyStringObjectInspector
name|stringOI
init|=
operator|(
name|LazyStringObjectInspector
operator|)
name|LazyFactory
operator|.
name|createLazyObjectInspector
argument_list|(
name|stringTypeInfo
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|0
block|}
argument_list|,
literal|0
argument_list|,
name|serDeParams
operator|.
name|getNullSequence
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|isEscaped
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|getEscapeChar
argument_list|()
argument_list|)
decl_stmt|;
name|LazyMapObjectInspector
name|mapOI
init|=
name|LazyObjectInspectorFactory
operator|.
name|getLazySimpleMapObjectInspector
argument_list|(
name|stringOI
argument_list|,
name|stringOI
argument_list|,
operator|(
name|byte
operator|)
literal|','
argument_list|,
operator|(
name|byte
operator|)
literal|':'
argument_list|,
name|serDeParams
operator|.
name|getNullSequence
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|isEscaped
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|getEscapeChar
argument_list|()
argument_list|)
decl_stmt|;
name|LazySimpleStructObjectInspector
name|structOI
init|=
operator|(
name|LazySimpleStructObjectInspector
operator|)
name|LazyObjectInspectorFactory
operator|.
name|getLazySimpleStructObjectInspector
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"row"
argument_list|,
literal|"data"
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|stringOI
argument_list|,
name|mapOI
argument_list|)
argument_list|,
operator|(
name|byte
operator|)
literal|' '
argument_list|,
name|serDeParams
operator|.
name|getNullSequence
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|isLastColumnTakesRest
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|isEscaped
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|getEscapeChar
argument_list|()
argument_list|)
decl_stmt|;
name|LazyStruct
name|struct
init|=
operator|(
name|LazyStruct
operator|)
name|LazyFactory
operator|.
name|createLazyObject
argument_list|(
name|structOI
argument_list|)
decl_stmt|;
name|ByteArrayRef
name|bytes
init|=
operator|new
name|ByteArrayRef
argument_list|()
decl_stmt|;
name|bytes
operator|.
name|setData
argument_list|(
literal|"row cq1:value1,cq2:value2"
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|struct
operator|.
name|init
argument_list|(
name|bytes
argument_list|,
literal|0
argument_list|,
name|bytes
operator|.
name|getData
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
comment|// Serialize the struct into a mutation
name|Mutation
name|m
init|=
name|serializer
operator|.
name|serialize
argument_list|(
name|struct
argument_list|,
name|structOI
argument_list|)
decl_stmt|;
comment|// Write the mutation
name|recordWriter
operator|.
name|write
argument_list|(
operator|new
name|Text
argument_list|(
name|table
argument_list|)
argument_list|,
name|m
argument_list|)
expr_stmt|;
comment|// Close the writer
name|recordWriter
operator|.
name|close
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|Entry
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
argument_list|>
name|iter
init|=
name|conn
operator|.
name|createScanner
argument_list|(
name|table
argument_list|,
operator|new
name|Authorizations
argument_list|()
argument_list|)
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Iterator did not have an element as expected"
argument_list|,
name|iter
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|Entry
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
name|entry
init|=
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|Key
name|k
init|=
name|entry
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|Value
name|v
init|=
name|entry
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"row"
argument_list|,
name|k
operator|.
name|getRow
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cf"
argument_list|,
name|k
operator|.
name|getColumnFamily
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cq1"
argument_list|,
name|k
operator|.
name|getColumnQualifier
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|DEFAULT_VISIBILITY_LABEL
argument_list|,
name|k
operator|.
name|getColumnVisibilityParsed
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"value1"
argument_list|,
operator|new
name|String
argument_list|(
name|v
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Iterator did not have an element as expected"
argument_list|,
name|iter
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|=
name|iter
operator|.
name|next
argument_list|()
expr_stmt|;
name|k
operator|=
name|entry
operator|.
name|getKey
argument_list|()
expr_stmt|;
name|v
operator|=
name|entry
operator|.
name|getValue
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"row"
argument_list|,
name|k
operator|.
name|getRow
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cf"
argument_list|,
name|k
operator|.
name|getColumnFamily
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cq2"
argument_list|,
name|k
operator|.
name|getColumnQualifier
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|DEFAULT_VISIBILITY_LABEL
argument_list|,
name|k
operator|.
name|getColumnVisibilityParsed
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"value2"
argument_list|,
operator|new
name|String
argument_list|(
name|v
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Iterator unexpectedly had more data"
argument_list|,
name|iter
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBinarySerializationOnStringFallsBackToUtf8
parameter_list|()
throws|throws
name|Exception
block|{
name|Instance
name|inst
init|=
operator|new
name|MockInstance
argument_list|(
name|test
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|Connector
name|conn
init|=
name|inst
operator|.
name|getConnector
argument_list|(
literal|"root"
argument_list|,
operator|new
name|PasswordToken
argument_list|(
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|HiveAccumuloTableOutputFormat
name|outputFormat
init|=
operator|new
name|HiveAccumuloTableOutputFormat
argument_list|()
decl_stmt|;
name|String
name|table
init|=
name|test
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|conn
operator|.
name|tableOperations
argument_list|()
operator|.
name|create
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|JobConf
name|conf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|INSTANCE_NAME
argument_list|,
name|inst
operator|.
name|getInstanceName
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|USER_NAME
argument_list|,
literal|"root"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|USER_PASS
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|USE_MOCK_INSTANCE
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|TABLE_NAME
argument_list|,
name|test
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|FileSystem
name|local
init|=
name|FileSystem
operator|.
name|getLocal
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|outputFormat
operator|.
name|checkOutputSpecs
argument_list|(
name|local
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|RecordWriter
argument_list|<
name|Text
argument_list|,
name|Mutation
argument_list|>
name|recordWriter
init|=
name|outputFormat
operator|.
name|getRecordWriter
argument_list|(
name|local
argument_list|,
name|conf
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|names
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"row"
argument_list|,
literal|"col1"
argument_list|,
literal|"col2"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|TypeInfo
argument_list|>
name|types
init|=
name|Arrays
operator|.
expr|<
name|TypeInfo
operator|>
name|asList
argument_list|(
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|)
decl_stmt|;
name|Properties
name|tableProperties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|,
literal|":rowID,cf:cq1,cf:cq2"
argument_list|)
expr_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|FIELD_DELIM
argument_list|,
literal|" "
argument_list|)
expr_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMNS
argument_list|,
name|Joiner
operator|.
name|on
argument_list|(
literal|','
argument_list|)
operator|.
name|join
argument_list|(
name|names
argument_list|)
argument_list|)
expr_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMN_TYPES
argument_list|,
name|Joiner
operator|.
name|on
argument_list|(
literal|','
argument_list|)
operator|.
name|join
argument_list|(
name|types
argument_list|)
argument_list|)
expr_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|DEFAULT_STORAGE_TYPE
argument_list|,
name|ColumnEncoding
operator|.
name|BINARY
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|AccumuloSerDeParameters
name|accumuloSerDeParams
init|=
operator|new
name|AccumuloSerDeParameters
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|,
name|tableProperties
argument_list|,
name|AccumuloSerDe
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|)
decl_stmt|;
name|LazySerDeParameters
name|serDeParams
init|=
name|accumuloSerDeParams
operator|.
name|getSerDeParameters
argument_list|()
decl_stmt|;
name|AccumuloRowSerializer
name|serializer
init|=
operator|new
name|AccumuloRowSerializer
argument_list|(
literal|0
argument_list|,
name|serDeParams
argument_list|,
name|accumuloSerDeParams
operator|.
name|getColumnMappings
argument_list|()
argument_list|,
name|AccumuloSerDeParameters
operator|.
name|DEFAULT_VISIBILITY_LABEL
argument_list|,
name|accumuloSerDeParams
operator|.
name|getRowIdFactory
argument_list|()
argument_list|)
decl_stmt|;
name|TypeInfo
name|stringTypeInfo
init|=
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|STRING_TYPE_NAME
argument_list|)
decl_stmt|;
name|LazySimpleStructObjectInspector
name|structOI
init|=
operator|(
name|LazySimpleStructObjectInspector
operator|)
name|LazyFactory
operator|.
name|createLazyStructInspector
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"row"
argument_list|,
literal|"cq1"
argument_list|,
literal|"cq2"
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|stringTypeInfo
argument_list|,
name|stringTypeInfo
argument_list|,
name|stringTypeInfo
argument_list|)
argument_list|,
name|serDeParams
operator|.
name|getSeparators
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|getNullSequence
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|isLastColumnTakesRest
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|isEscaped
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|getEscapeChar
argument_list|()
argument_list|)
decl_stmt|;
name|LazyStruct
name|struct
init|=
operator|(
name|LazyStruct
operator|)
name|LazyFactory
operator|.
name|createLazyObject
argument_list|(
name|structOI
argument_list|)
decl_stmt|;
name|ByteArrayRef
name|bytes
init|=
operator|new
name|ByteArrayRef
argument_list|()
decl_stmt|;
name|bytes
operator|.
name|setData
argument_list|(
literal|"row value1 value2"
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|struct
operator|.
name|init
argument_list|(
name|bytes
argument_list|,
literal|0
argument_list|,
name|bytes
operator|.
name|getData
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
comment|// Serialize the struct into a mutation
name|Mutation
name|m
init|=
name|serializer
operator|.
name|serialize
argument_list|(
name|struct
argument_list|,
name|structOI
argument_list|)
decl_stmt|;
comment|// Write the mutation
name|recordWriter
operator|.
name|write
argument_list|(
operator|new
name|Text
argument_list|(
name|table
argument_list|)
argument_list|,
name|m
argument_list|)
expr_stmt|;
comment|// Close the writer
name|recordWriter
operator|.
name|close
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|Entry
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
argument_list|>
name|iter
init|=
name|conn
operator|.
name|createScanner
argument_list|(
name|table
argument_list|,
operator|new
name|Authorizations
argument_list|()
argument_list|)
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Iterator did not have an element as expected"
argument_list|,
name|iter
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|Entry
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
name|entry
init|=
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|Key
name|k
init|=
name|entry
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|Value
name|v
init|=
name|entry
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"row"
argument_list|,
name|k
operator|.
name|getRow
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cf"
argument_list|,
name|k
operator|.
name|getColumnFamily
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cq1"
argument_list|,
name|k
operator|.
name|getColumnQualifier
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|k
operator|.
name|getColumnVisibility
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"value1"
argument_list|,
operator|new
name|String
argument_list|(
name|v
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"Iterator did not have an element as expected"
argument_list|,
name|iter
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|entry
operator|=
name|iter
operator|.
name|next
argument_list|()
expr_stmt|;
name|k
operator|=
name|entry
operator|.
name|getKey
argument_list|()
expr_stmt|;
name|v
operator|=
name|entry
operator|.
name|getValue
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"row"
argument_list|,
name|k
operator|.
name|getRow
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cf"
argument_list|,
name|k
operator|.
name|getColumnFamily
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cq2"
argument_list|,
name|k
operator|.
name|getColumnQualifier
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|k
operator|.
name|getColumnVisibility
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"value2"
argument_list|,
operator|new
name|String
argument_list|(
name|v
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
literal|"Iterator unexpectedly had more data"
argument_list|,
name|iter
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

