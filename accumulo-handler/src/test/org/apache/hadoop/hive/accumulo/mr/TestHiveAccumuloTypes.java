begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|mr
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Timestamp
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|BatchWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|BatchWriterConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|Connector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|mock
operator|.
name|MockInstance
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|security
operator|.
name|tokens
operator|.
name|PasswordToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|data
operator|.
name|Key
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|data
operator|.
name|Mutation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|data
operator|.
name|Value
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|security
operator|.
name|Authorizations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|AccumuloHiveConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|AccumuloHiveRow
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|serde
operator|.
name|AccumuloSerDeParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|type
operator|.
name|HiveChar
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|type
operator|.
name|HiveDecimal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|type
operator|.
name|HiveVarchar
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde
operator|.
name|serdeConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|ByteStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|DateWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|HiveDecimalWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|io
operator|.
name|TimestampWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|ByteArrayRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazyBoolean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazyByte
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazyDate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazyDouble
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazyFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazyFloat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazyHiveChar
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazyHiveDecimal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazyHiveVarchar
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazyInteger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazyLong
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazyShort
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazyString
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazyTimestamp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazyUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|LazyBooleanObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|LazyByteObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|LazyDateObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|LazyDoubleObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|LazyFloatObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|LazyHiveCharObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|LazyHiveDecimalObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|LazyHiveVarcharObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|LazyIntObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|LazyLongObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|LazyPrimitiveObjectInspectorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|LazyShortObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|LazyStringObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|LazyTimestampObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|JavaBooleanObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|JavaByteObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|JavaDateObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|JavaDoubleObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|JavaFloatObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|JavaHiveCharObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|JavaHiveDecimalObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|JavaHiveVarcharObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|JavaIntObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|JavaLongObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|JavaShortObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|JavaStringObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|JavaTimestampObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|PrimitiveObjectInspectorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|typeinfo
operator|.
name|CharTypeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|typeinfo
operator|.
name|DecimalTypeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|typeinfo
operator|.
name|TypeInfoFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|typeinfo
operator|.
name|VarcharTypeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|FileInputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|InputSplit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|RecordReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestName
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
specifier|public
class|class
name|TestHiveAccumuloTypes
block|{
annotation|@
name|Rule
specifier|public
name|TestName
name|test
init|=
operator|new
name|TestName
argument_list|()
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testBinaryTypes
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|tableName
init|=
name|test
operator|.
name|getMethodName
argument_list|()
decl_stmt|,
name|user
init|=
literal|"root"
decl_stmt|,
name|pass
init|=
literal|""
decl_stmt|;
name|MockInstance
name|mockInstance
init|=
operator|new
name|MockInstance
argument_list|(
name|test
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|Connector
name|conn
init|=
name|mockInstance
operator|.
name|getConnector
argument_list|(
name|user
argument_list|,
operator|new
name|PasswordToken
argument_list|(
name|pass
argument_list|)
argument_list|)
decl_stmt|;
name|HiveAccumuloTableInputFormat
name|inputformat
init|=
operator|new
name|HiveAccumuloTableInputFormat
argument_list|()
decl_stmt|;
name|JobConf
name|conf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|TABLE_NAME
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|USE_MOCK_INSTANCE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|INSTANCE_NAME
argument_list|,
name|test
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|USER_NAME
argument_list|,
name|user
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|USER_PASS
argument_list|,
name|pass
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|ZOOKEEPERS
argument_list|,
literal|"localhost:2181"
argument_list|)
expr_stmt|;
comment|// not used for mock, but
comment|// required by input format.
name|conf
operator|.
name|set
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|,
name|AccumuloHiveConstants
operator|.
name|ROWID
operator|+
literal|",cf:string,cf:boolean,cf:tinyint,cf:smallint,cf:int,cf:bigint"
operator|+
literal|",cf:float,cf:double,cf:decimal,cf:date,cf:timestamp,cf:char,cf:varchar"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMNS
argument_list|,
literal|"string,string,boolean,tinyint,smallint,int,bigint,float,double,decimal,date,timestamp,char(4),varchar(7)"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMN_TYPES
argument_list|,
literal|"string,string,boolean,tinyint,smallint,int,bigint,float,double,decimal,date,timestamp,char(4),varchar(7)"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|DEFAULT_STORAGE_TYPE
argument_list|,
literal|"binary"
argument_list|)
expr_stmt|;
name|conn
operator|.
name|tableOperations
argument_list|()
operator|.
name|create
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
name|BatchWriterConfig
name|writerConf
init|=
operator|new
name|BatchWriterConfig
argument_list|()
decl_stmt|;
name|BatchWriter
name|writer
init|=
name|conn
operator|.
name|createBatchWriter
argument_list|(
name|tableName
argument_list|,
name|writerConf
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|DataOutputStream
name|out
init|=
operator|new
name|DataOutputStream
argument_list|(
name|baos
argument_list|)
decl_stmt|;
name|String
name|cf
init|=
literal|"cf"
decl_stmt|;
name|byte
index|[]
name|cfBytes
init|=
name|cf
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|Mutation
name|m
init|=
operator|new
name|Mutation
argument_list|(
literal|"row1"
argument_list|)
decl_stmt|;
comment|// string
name|String
name|stringValue
init|=
literal|"string"
decl_stmt|;
name|JavaStringObjectInspector
name|stringOI
init|=
operator|(
name|JavaStringObjectInspector
operator|)
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveJavaObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|STRING_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyUtils
operator|.
name|writePrimitiveUTF8
argument_list|(
name|baos
argument_list|,
name|stringOI
operator|.
name|create
argument_list|(
name|stringValue
argument_list|)
argument_list|,
name|stringOI
argument_list|,
literal|false
argument_list|,
operator|(
name|byte
operator|)
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"string"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
comment|// boolean
name|boolean
name|booleanValue
init|=
literal|true
decl_stmt|;
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|JavaBooleanObjectInspector
name|booleanOI
init|=
operator|(
name|JavaBooleanObjectInspector
operator|)
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveJavaObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|BOOLEAN_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyUtils
operator|.
name|writePrimitive
argument_list|(
name|baos
argument_list|,
name|booleanOI
operator|.
name|create
argument_list|(
name|booleanValue
argument_list|)
argument_list|,
name|booleanOI
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"boolean"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
comment|// tinyint
name|byte
name|tinyintValue
init|=
operator|-
literal|127
decl_stmt|;
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|JavaByteObjectInspector
name|byteOI
init|=
operator|(
name|JavaByteObjectInspector
operator|)
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveJavaObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|TINYINT_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyUtils
operator|.
name|writePrimitive
argument_list|(
name|baos
argument_list|,
name|tinyintValue
argument_list|,
name|byteOI
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"tinyint"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
comment|// smallint
name|short
name|smallintValue
init|=
name|Short
operator|.
name|MAX_VALUE
decl_stmt|;
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|JavaShortObjectInspector
name|shortOI
init|=
operator|(
name|JavaShortObjectInspector
operator|)
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveJavaObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|SMALLINT_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyUtils
operator|.
name|writePrimitive
argument_list|(
name|baos
argument_list|,
name|smallintValue
argument_list|,
name|shortOI
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"smallint"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
comment|// int
name|int
name|intValue
init|=
name|Integer
operator|.
name|MAX_VALUE
decl_stmt|;
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|JavaIntObjectInspector
name|intOI
init|=
operator|(
name|JavaIntObjectInspector
operator|)
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveJavaObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|INT_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyUtils
operator|.
name|writePrimitive
argument_list|(
name|baos
argument_list|,
name|intValue
argument_list|,
name|intOI
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"int"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
comment|// bigint
name|long
name|bigintValue
init|=
name|Long
operator|.
name|MAX_VALUE
decl_stmt|;
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|JavaLongObjectInspector
name|longOI
init|=
operator|(
name|JavaLongObjectInspector
operator|)
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveJavaObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|BIGINT_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyUtils
operator|.
name|writePrimitive
argument_list|(
name|baos
argument_list|,
name|bigintValue
argument_list|,
name|longOI
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"bigint"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
comment|// float
name|float
name|floatValue
init|=
name|Float
operator|.
name|MAX_VALUE
decl_stmt|;
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|JavaFloatObjectInspector
name|floatOI
init|=
operator|(
name|JavaFloatObjectInspector
operator|)
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveJavaObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|FLOAT_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyUtils
operator|.
name|writePrimitive
argument_list|(
name|baos
argument_list|,
name|floatValue
argument_list|,
name|floatOI
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"float"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
comment|// double
name|double
name|doubleValue
init|=
name|Double
operator|.
name|MAX_VALUE
decl_stmt|;
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|JavaDoubleObjectInspector
name|doubleOI
init|=
operator|(
name|JavaDoubleObjectInspector
operator|)
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveJavaObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|DOUBLE_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyUtils
operator|.
name|writePrimitive
argument_list|(
name|baos
argument_list|,
name|doubleValue
argument_list|,
name|doubleOI
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"double"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
comment|// decimal
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|HiveDecimal
name|decimalValue
init|=
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|65536l
argument_list|)
decl_stmt|;
name|HiveDecimalWritable
name|decimalWritable
init|=
operator|new
name|HiveDecimalWritable
argument_list|(
name|decimalValue
argument_list|)
decl_stmt|;
name|decimalWritable
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"decimal"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
comment|// date
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|Date
name|now
init|=
operator|new
name|Date
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
decl_stmt|;
name|DateWritable
name|dateWritable
init|=
operator|new
name|DateWritable
argument_list|(
name|now
argument_list|)
decl_stmt|;
name|Date
name|dateValue
init|=
name|dateWritable
operator|.
name|get
argument_list|()
decl_stmt|;
name|dateWritable
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"date"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
comment|// tiemestamp
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|Timestamp
name|timestampValue
init|=
operator|new
name|Timestamp
argument_list|(
name|now
operator|.
name|getTime
argument_list|()
argument_list|)
decl_stmt|;
name|ByteStream
operator|.
name|Output
name|output
init|=
operator|new
name|ByteStream
operator|.
name|Output
argument_list|()
decl_stmt|;
name|TimestampWritable
name|timestampWritable
init|=
operator|new
name|TimestampWritable
argument_list|(
operator|new
name|Timestamp
argument_list|(
name|now
operator|.
name|getTime
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|timestampWritable
operator|.
name|write
argument_list|(
name|output
argument_list|)
expr_stmt|;
name|output
operator|.
name|close
argument_list|()
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"timestamp"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|output
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
comment|// char
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|HiveChar
name|charValue
init|=
operator|new
name|HiveChar
argument_list|(
literal|"char"
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|JavaHiveCharObjectInspector
name|charOI
init|=
operator|(
name|JavaHiveCharObjectInspector
operator|)
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveJavaObjectInspector
argument_list|(
operator|new
name|CharTypeInfo
argument_list|(
literal|4
argument_list|)
argument_list|)
decl_stmt|;
name|LazyUtils
operator|.
name|writePrimitiveUTF8
argument_list|(
name|baos
argument_list|,
name|charOI
operator|.
name|create
argument_list|(
name|charValue
argument_list|)
argument_list|,
name|charOI
argument_list|,
literal|false
argument_list|,
operator|(
name|byte
operator|)
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"char"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|HiveVarchar
name|varcharValue
init|=
operator|new
name|HiveVarchar
argument_list|(
literal|"varchar"
argument_list|,
literal|7
argument_list|)
decl_stmt|;
name|JavaHiveVarcharObjectInspector
name|varcharOI
init|=
operator|(
name|JavaHiveVarcharObjectInspector
operator|)
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveJavaObjectInspector
argument_list|(
operator|new
name|VarcharTypeInfo
argument_list|(
literal|7
argument_list|)
argument_list|)
decl_stmt|;
name|LazyUtils
operator|.
name|writePrimitiveUTF8
argument_list|(
name|baos
argument_list|,
name|varcharOI
operator|.
name|create
argument_list|(
name|varcharValue
argument_list|)
argument_list|,
name|varcharOI
argument_list|,
literal|false
argument_list|,
operator|(
name|byte
operator|)
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"varchar"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addMutation
argument_list|(
name|m
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
for|for
control|(
name|Entry
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
name|e
range|:
name|conn
operator|.
name|createScanner
argument_list|(
name|tableName
argument_list|,
operator|new
name|Authorizations
argument_list|()
argument_list|)
control|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
comment|// Create the RecordReader
name|FileInputFormat
operator|.
name|addInputPath
argument_list|(
name|conf
argument_list|,
operator|new
name|Path
argument_list|(
literal|"unused"
argument_list|)
argument_list|)
expr_stmt|;
name|InputSplit
index|[]
name|splits
init|=
name|inputformat
operator|.
name|getSplits
argument_list|(
name|conf
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|splits
operator|.
name|length
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|RecordReader
argument_list|<
name|Text
argument_list|,
name|AccumuloHiveRow
argument_list|>
name|reader
init|=
name|inputformat
operator|.
name|getRecordReader
argument_list|(
name|splits
index|[
literal|0
index|]
argument_list|,
name|conf
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Text
name|key
init|=
name|reader
operator|.
name|createKey
argument_list|()
decl_stmt|;
name|AccumuloHiveRow
name|value
init|=
name|reader
operator|.
name|createValue
argument_list|()
decl_stmt|;
name|reader
operator|.
name|next
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|13
argument_list|,
name|value
operator|.
name|getTuples
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|ByteArrayRef
name|byteRef
init|=
operator|new
name|ByteArrayRef
argument_list|()
decl_stmt|;
comment|// string
name|Text
name|cfText
init|=
operator|new
name|Text
argument_list|(
name|cf
argument_list|)
decl_stmt|,
name|cqHolder
init|=
operator|new
name|Text
argument_list|()
decl_stmt|;
name|cqHolder
operator|.
name|set
argument_list|(
literal|"string"
argument_list|)
expr_stmt|;
name|byte
index|[]
name|valueBytes
init|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|LazyStringObjectInspector
name|lazyStringOI
init|=
name|LazyPrimitiveObjectInspectorFactory
operator|.
name|getLazyStringObjectInspector
argument_list|(
literal|false
argument_list|,
operator|(
name|byte
operator|)
literal|0
argument_list|)
decl_stmt|;
name|LazyString
name|lazyString
init|=
operator|(
name|LazyString
operator|)
name|LazyFactory
operator|.
name|createLazyObject
argument_list|(
name|lazyStringOI
argument_list|)
decl_stmt|;
name|lazyString
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|valueBytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|stringValue
argument_list|,
name|lazyString
operator|.
name|getWritableObject
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|// boolean
name|cqHolder
operator|.
name|set
argument_list|(
literal|"boolean"
argument_list|)
expr_stmt|;
name|valueBytes
operator|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|LazyBooleanObjectInspector
name|lazyBooleanOI
init|=
operator|(
name|LazyBooleanObjectInspector
operator|)
name|LazyPrimitiveObjectInspectorFactory
operator|.
name|getLazyObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|BOOLEAN_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyBoolean
name|lazyBoolean
init|=
operator|(
name|LazyBoolean
operator|)
name|LazyFactory
operator|.
name|createLazyPrimitiveBinaryClass
argument_list|(
name|lazyBooleanOI
argument_list|)
decl_stmt|;
name|lazyBoolean
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|valueBytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|booleanValue
argument_list|,
name|lazyBoolean
operator|.
name|getWritableObject
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
comment|// tinyint
name|cqHolder
operator|.
name|set
argument_list|(
literal|"tinyint"
argument_list|)
expr_stmt|;
name|valueBytes
operator|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|LazyByteObjectInspector
name|lazyByteOI
init|=
operator|(
name|LazyByteObjectInspector
operator|)
name|LazyPrimitiveObjectInspectorFactory
operator|.
name|getLazyObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|TINYINT_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyByte
name|lazyByte
init|=
operator|(
name|LazyByte
operator|)
name|LazyFactory
operator|.
name|createLazyPrimitiveBinaryClass
argument_list|(
name|lazyByteOI
argument_list|)
decl_stmt|;
name|lazyByte
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|valueBytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|tinyintValue
argument_list|,
name|lazyByte
operator|.
name|getWritableObject
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
comment|// smallint
name|cqHolder
operator|.
name|set
argument_list|(
literal|"smallint"
argument_list|)
expr_stmt|;
name|valueBytes
operator|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|LazyShortObjectInspector
name|lazyShortOI
init|=
operator|(
name|LazyShortObjectInspector
operator|)
name|LazyPrimitiveObjectInspectorFactory
operator|.
name|getLazyObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|SMALLINT_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyShort
name|lazyShort
init|=
operator|(
name|LazyShort
operator|)
name|LazyFactory
operator|.
name|createLazyPrimitiveBinaryClass
argument_list|(
name|lazyShortOI
argument_list|)
decl_stmt|;
name|lazyShort
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|valueBytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|smallintValue
argument_list|,
name|lazyShort
operator|.
name|getWritableObject
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
comment|// int
name|cqHolder
operator|.
name|set
argument_list|(
literal|"int"
argument_list|)
expr_stmt|;
name|valueBytes
operator|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|LazyIntObjectInspector
name|lazyIntOI
init|=
operator|(
name|LazyIntObjectInspector
operator|)
name|LazyPrimitiveObjectInspectorFactory
operator|.
name|getLazyObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|INT_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyInteger
name|lazyInt
init|=
operator|(
name|LazyInteger
operator|)
name|LazyFactory
operator|.
name|createLazyPrimitiveBinaryClass
argument_list|(
name|lazyIntOI
argument_list|)
decl_stmt|;
name|lazyInt
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|valueBytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|intValue
argument_list|,
name|lazyInt
operator|.
name|getWritableObject
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
comment|// bigint
name|cqHolder
operator|.
name|set
argument_list|(
literal|"bigint"
argument_list|)
expr_stmt|;
name|valueBytes
operator|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|LazyLongObjectInspector
name|lazyLongOI
init|=
operator|(
name|LazyLongObjectInspector
operator|)
name|LazyPrimitiveObjectInspectorFactory
operator|.
name|getLazyObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|BIGINT_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyLong
name|lazyLong
init|=
operator|(
name|LazyLong
operator|)
name|LazyFactory
operator|.
name|createLazyPrimitiveBinaryClass
argument_list|(
name|lazyLongOI
argument_list|)
decl_stmt|;
name|lazyLong
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|valueBytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|bigintValue
argument_list|,
name|lazyLong
operator|.
name|getWritableObject
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
comment|// float
name|cqHolder
operator|.
name|set
argument_list|(
literal|"float"
argument_list|)
expr_stmt|;
name|valueBytes
operator|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|LazyFloatObjectInspector
name|lazyFloatOI
init|=
operator|(
name|LazyFloatObjectInspector
operator|)
name|LazyPrimitiveObjectInspectorFactory
operator|.
name|getLazyObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|FLOAT_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyFloat
name|lazyFloat
init|=
operator|(
name|LazyFloat
operator|)
name|LazyFactory
operator|.
name|createLazyPrimitiveBinaryClass
argument_list|(
name|lazyFloatOI
argument_list|)
decl_stmt|;
name|lazyFloat
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|valueBytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|floatValue
argument_list|,
name|lazyFloat
operator|.
name|getWritableObject
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// double
name|cqHolder
operator|.
name|set
argument_list|(
literal|"double"
argument_list|)
expr_stmt|;
name|valueBytes
operator|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|LazyDoubleObjectInspector
name|lazyDoubleOI
init|=
operator|(
name|LazyDoubleObjectInspector
operator|)
name|LazyPrimitiveObjectInspectorFactory
operator|.
name|getLazyObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|DOUBLE_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyDouble
name|lazyDouble
init|=
operator|(
name|LazyDouble
operator|)
name|LazyFactory
operator|.
name|createLazyPrimitiveBinaryClass
argument_list|(
name|lazyDoubleOI
argument_list|)
decl_stmt|;
name|lazyDouble
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|valueBytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|doubleValue
argument_list|,
name|lazyDouble
operator|.
name|getWritableObject
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// decimal
name|cqHolder
operator|.
name|set
argument_list|(
literal|"decimal"
argument_list|)
expr_stmt|;
name|valueBytes
operator|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|ByteArrayInputStream
name|bais
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|valueBytes
argument_list|)
decl_stmt|;
name|DataInputStream
name|in
init|=
operator|new
name|DataInputStream
argument_list|(
name|bais
argument_list|)
decl_stmt|;
name|decimalWritable
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|decimalValue
argument_list|,
name|decimalWritable
operator|.
name|getHiveDecimal
argument_list|()
argument_list|)
expr_stmt|;
comment|// date
name|cqHolder
operator|.
name|set
argument_list|(
literal|"date"
argument_list|)
expr_stmt|;
name|valueBytes
operator|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|bais
operator|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|in
operator|=
operator|new
name|DataInputStream
argument_list|(
name|bais
argument_list|)
expr_stmt|;
name|dateWritable
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|dateValue
argument_list|,
name|dateWritable
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
comment|// timestamp
name|cqHolder
operator|.
name|set
argument_list|(
literal|"timestamp"
argument_list|)
expr_stmt|;
name|valueBytes
operator|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|bais
operator|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|in
operator|=
operator|new
name|DataInputStream
argument_list|(
name|bais
argument_list|)
expr_stmt|;
name|timestampWritable
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|timestampValue
argument_list|,
name|timestampWritable
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
comment|// char
name|cqHolder
operator|.
name|set
argument_list|(
literal|"char"
argument_list|)
expr_stmt|;
name|valueBytes
operator|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|LazyHiveCharObjectInspector
name|lazyCharOI
init|=
operator|(
name|LazyHiveCharObjectInspector
operator|)
name|LazyPrimitiveObjectInspectorFactory
operator|.
name|getLazyObjectInspector
argument_list|(
operator|new
name|CharTypeInfo
argument_list|(
literal|4
argument_list|)
argument_list|)
decl_stmt|;
name|LazyHiveChar
name|lazyChar
init|=
operator|(
name|LazyHiveChar
operator|)
name|LazyFactory
operator|.
name|createLazyObject
argument_list|(
name|lazyCharOI
argument_list|)
decl_stmt|;
name|lazyChar
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|valueBytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|charValue
argument_list|,
name|lazyChar
operator|.
name|getWritableObject
argument_list|()
operator|.
name|getHiveChar
argument_list|()
argument_list|)
expr_stmt|;
comment|// varchar
name|cqHolder
operator|.
name|set
argument_list|(
literal|"varchar"
argument_list|)
expr_stmt|;
name|valueBytes
operator|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|LazyHiveVarcharObjectInspector
name|lazyVarcharOI
init|=
operator|(
name|LazyHiveVarcharObjectInspector
operator|)
name|LazyPrimitiveObjectInspectorFactory
operator|.
name|getLazyObjectInspector
argument_list|(
operator|new
name|VarcharTypeInfo
argument_list|(
literal|7
argument_list|)
argument_list|)
decl_stmt|;
name|LazyHiveVarchar
name|lazyVarchar
init|=
operator|(
name|LazyHiveVarchar
operator|)
name|LazyFactory
operator|.
name|createLazyObject
argument_list|(
name|lazyVarcharOI
argument_list|)
decl_stmt|;
name|lazyVarchar
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|valueBytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|varcharValue
operator|.
name|toString
argument_list|()
argument_list|,
name|lazyVarchar
operator|.
name|getWritableObject
argument_list|()
operator|.
name|getHiveVarchar
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUtf8Types
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|tableName
init|=
name|test
operator|.
name|getMethodName
argument_list|()
decl_stmt|,
name|user
init|=
literal|"root"
decl_stmt|,
name|pass
init|=
literal|""
decl_stmt|;
name|MockInstance
name|mockInstance
init|=
operator|new
name|MockInstance
argument_list|(
name|test
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|Connector
name|conn
init|=
name|mockInstance
operator|.
name|getConnector
argument_list|(
name|user
argument_list|,
operator|new
name|PasswordToken
argument_list|(
name|pass
argument_list|)
argument_list|)
decl_stmt|;
name|HiveAccumuloTableInputFormat
name|inputformat
init|=
operator|new
name|HiveAccumuloTableInputFormat
argument_list|()
decl_stmt|;
name|JobConf
name|conf
init|=
operator|new
name|JobConf
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|TABLE_NAME
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|USE_MOCK_INSTANCE
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|INSTANCE_NAME
argument_list|,
name|test
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|USER_NAME
argument_list|,
name|user
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|USER_PASS
argument_list|,
name|pass
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|ZOOKEEPERS
argument_list|,
literal|"localhost:2181"
argument_list|)
expr_stmt|;
comment|// not used for mock, but
comment|// required by input format.
name|conf
operator|.
name|set
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|,
name|AccumuloHiveConstants
operator|.
name|ROWID
operator|+
literal|",cf:string,cf:boolean,cf:tinyint,cf:smallint,cf:int,cf:bigint"
operator|+
literal|",cf:float,cf:double,cf:decimal,cf:date,cf:timestamp,cf:char,cf:varchar"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMNS
argument_list|,
literal|"string,string,boolean,tinyint,smallint,int,bigint,float,double,decimal,date,timestamp,char(4),varchar(7)"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMN_TYPES
argument_list|,
literal|"string,string,boolean,tinyint,smallint,int,bigint,float,double,decimal,date,timestamp,char(4),varchar(7)"
argument_list|)
expr_stmt|;
name|conn
operator|.
name|tableOperations
argument_list|()
operator|.
name|create
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
name|BatchWriterConfig
name|writerConf
init|=
operator|new
name|BatchWriterConfig
argument_list|()
decl_stmt|;
name|BatchWriter
name|writer
init|=
name|conn
operator|.
name|createBatchWriter
argument_list|(
name|tableName
argument_list|,
name|writerConf
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|String
name|cf
init|=
literal|"cf"
decl_stmt|;
name|byte
index|[]
name|cfBytes
init|=
name|cf
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|ByteArrayRef
name|byteRef
init|=
operator|new
name|ByteArrayRef
argument_list|()
decl_stmt|;
name|Mutation
name|m
init|=
operator|new
name|Mutation
argument_list|(
literal|"row1"
argument_list|)
decl_stmt|;
comment|// string
name|String
name|stringValue
init|=
literal|"string"
decl_stmt|;
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|JavaStringObjectInspector
name|stringOI
init|=
operator|(
name|JavaStringObjectInspector
operator|)
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveJavaObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|STRING_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyUtils
operator|.
name|writePrimitiveUTF8
argument_list|(
name|baos
argument_list|,
name|stringOI
operator|.
name|create
argument_list|(
name|stringValue
argument_list|)
argument_list|,
name|stringOI
argument_list|,
literal|false
argument_list|,
operator|(
name|byte
operator|)
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"string"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
comment|// boolean
name|boolean
name|booleanValue
init|=
literal|true
decl_stmt|;
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|JavaBooleanObjectInspector
name|booleanOI
init|=
operator|(
name|JavaBooleanObjectInspector
operator|)
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveJavaObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|BOOLEAN_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyUtils
operator|.
name|writePrimitiveUTF8
argument_list|(
name|baos
argument_list|,
name|booleanOI
operator|.
name|create
argument_list|(
name|booleanValue
argument_list|)
argument_list|,
name|booleanOI
argument_list|,
literal|false
argument_list|,
operator|(
name|byte
operator|)
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"boolean"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
comment|// tinyint
name|byte
name|tinyintValue
init|=
operator|-
literal|127
decl_stmt|;
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|JavaByteObjectInspector
name|byteOI
init|=
operator|(
name|JavaByteObjectInspector
operator|)
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveJavaObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|TINYINT_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyUtils
operator|.
name|writePrimitiveUTF8
argument_list|(
name|baos
argument_list|,
name|tinyintValue
argument_list|,
name|byteOI
argument_list|,
literal|false
argument_list|,
operator|(
name|byte
operator|)
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"tinyint"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
comment|// smallint
name|short
name|smallintValue
init|=
name|Short
operator|.
name|MAX_VALUE
decl_stmt|;
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|JavaShortObjectInspector
name|shortOI
init|=
operator|(
name|JavaShortObjectInspector
operator|)
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveJavaObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|SMALLINT_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyUtils
operator|.
name|writePrimitiveUTF8
argument_list|(
name|baos
argument_list|,
name|smallintValue
argument_list|,
name|shortOI
argument_list|,
literal|false
argument_list|,
operator|(
name|byte
operator|)
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"smallint"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
comment|// int
name|int
name|intValue
init|=
name|Integer
operator|.
name|MAX_VALUE
decl_stmt|;
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|JavaIntObjectInspector
name|intOI
init|=
operator|(
name|JavaIntObjectInspector
operator|)
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveJavaObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|INT_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyUtils
operator|.
name|writePrimitiveUTF8
argument_list|(
name|baos
argument_list|,
name|intValue
argument_list|,
name|intOI
argument_list|,
literal|false
argument_list|,
operator|(
name|byte
operator|)
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"int"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
comment|// bigint
name|long
name|bigintValue
init|=
name|Long
operator|.
name|MAX_VALUE
decl_stmt|;
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|JavaLongObjectInspector
name|longOI
init|=
operator|(
name|JavaLongObjectInspector
operator|)
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveJavaObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|BIGINT_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyUtils
operator|.
name|writePrimitiveUTF8
argument_list|(
name|baos
argument_list|,
name|bigintValue
argument_list|,
name|longOI
argument_list|,
literal|false
argument_list|,
operator|(
name|byte
operator|)
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"bigint"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
comment|// float
name|float
name|floatValue
init|=
name|Float
operator|.
name|MAX_VALUE
decl_stmt|;
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|JavaFloatObjectInspector
name|floatOI
init|=
operator|(
name|JavaFloatObjectInspector
operator|)
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveJavaObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|FLOAT_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyUtils
operator|.
name|writePrimitiveUTF8
argument_list|(
name|baos
argument_list|,
name|floatValue
argument_list|,
name|floatOI
argument_list|,
literal|false
argument_list|,
operator|(
name|byte
operator|)
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"float"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
comment|// double
name|double
name|doubleValue
init|=
name|Double
operator|.
name|MAX_VALUE
decl_stmt|;
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|JavaDoubleObjectInspector
name|doubleOI
init|=
operator|(
name|JavaDoubleObjectInspector
operator|)
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveJavaObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|DOUBLE_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyUtils
operator|.
name|writePrimitiveUTF8
argument_list|(
name|baos
argument_list|,
name|doubleValue
argument_list|,
name|doubleOI
argument_list|,
literal|false
argument_list|,
operator|(
name|byte
operator|)
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"double"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
comment|// decimal
name|HiveDecimal
name|decimalValue
init|=
name|HiveDecimal
operator|.
name|create
argument_list|(
literal|"1.23"
argument_list|)
decl_stmt|;
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|JavaHiveDecimalObjectInspector
name|decimalOI
init|=
operator|(
name|JavaHiveDecimalObjectInspector
operator|)
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveJavaObjectInspector
argument_list|(
operator|new
name|DecimalTypeInfo
argument_list|(
literal|5
argument_list|,
literal|2
argument_list|)
argument_list|)
decl_stmt|;
name|LazyUtils
operator|.
name|writePrimitiveUTF8
argument_list|(
name|baos
argument_list|,
name|decimalOI
operator|.
name|create
argument_list|(
name|decimalValue
argument_list|)
argument_list|,
name|decimalOI
argument_list|,
literal|false
argument_list|,
operator|(
name|byte
operator|)
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"decimal"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
comment|// date
name|Date
name|now
init|=
operator|new
name|Date
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
decl_stmt|;
name|DateWritable
name|dateWritable
init|=
operator|new
name|DateWritable
argument_list|(
name|now
argument_list|)
decl_stmt|;
name|Date
name|dateValue
init|=
name|dateWritable
operator|.
name|get
argument_list|()
decl_stmt|;
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|JavaDateObjectInspector
name|dateOI
init|=
operator|(
name|JavaDateObjectInspector
operator|)
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveJavaObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|DATE_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyUtils
operator|.
name|writePrimitiveUTF8
argument_list|(
name|baos
argument_list|,
name|dateOI
operator|.
name|create
argument_list|(
name|dateValue
argument_list|)
argument_list|,
name|dateOI
argument_list|,
literal|false
argument_list|,
operator|(
name|byte
operator|)
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"date"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
comment|// timestamp
name|Timestamp
name|timestampValue
init|=
operator|new
name|Timestamp
argument_list|(
name|now
operator|.
name|getTime
argument_list|()
argument_list|)
decl_stmt|;
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|JavaTimestampObjectInspector
name|timestampOI
init|=
operator|(
name|JavaTimestampObjectInspector
operator|)
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveJavaObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|TIMESTAMP_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyUtils
operator|.
name|writePrimitiveUTF8
argument_list|(
name|baos
argument_list|,
name|timestampOI
operator|.
name|create
argument_list|(
name|timestampValue
argument_list|)
argument_list|,
name|timestampOI
argument_list|,
literal|false
argument_list|,
operator|(
name|byte
operator|)
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"timestamp"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
comment|// char
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|HiveChar
name|charValue
init|=
operator|new
name|HiveChar
argument_list|(
literal|"char"
argument_list|,
literal|4
argument_list|)
decl_stmt|;
name|JavaHiveCharObjectInspector
name|charOI
init|=
operator|(
name|JavaHiveCharObjectInspector
operator|)
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveJavaObjectInspector
argument_list|(
operator|new
name|CharTypeInfo
argument_list|(
literal|4
argument_list|)
argument_list|)
decl_stmt|;
name|LazyUtils
operator|.
name|writePrimitiveUTF8
argument_list|(
name|baos
argument_list|,
name|charOI
operator|.
name|create
argument_list|(
name|charValue
argument_list|)
argument_list|,
name|charOI
argument_list|,
literal|false
argument_list|,
operator|(
name|byte
operator|)
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"char"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
comment|// varchar
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|HiveVarchar
name|varcharValue
init|=
operator|new
name|HiveVarchar
argument_list|(
literal|"varchar"
argument_list|,
literal|7
argument_list|)
decl_stmt|;
name|JavaHiveVarcharObjectInspector
name|varcharOI
init|=
operator|(
name|JavaHiveVarcharObjectInspector
operator|)
name|PrimitiveObjectInspectorFactory
operator|.
name|getPrimitiveJavaObjectInspector
argument_list|(
operator|new
name|VarcharTypeInfo
argument_list|(
literal|7
argument_list|)
argument_list|)
decl_stmt|;
name|LazyUtils
operator|.
name|writePrimitiveUTF8
argument_list|(
name|baos
argument_list|,
name|varcharOI
operator|.
name|create
argument_list|(
name|varcharValue
argument_list|)
argument_list|,
name|varcharOI
argument_list|,
literal|false
argument_list|,
operator|(
name|byte
operator|)
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|m
operator|.
name|put
argument_list|(
name|cfBytes
argument_list|,
literal|"varchar"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addMutation
argument_list|(
name|m
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
for|for
control|(
name|Entry
argument_list|<
name|Key
argument_list|,
name|Value
argument_list|>
name|e
range|:
name|conn
operator|.
name|createScanner
argument_list|(
name|tableName
argument_list|,
operator|new
name|Authorizations
argument_list|()
argument_list|)
control|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
comment|// Create the RecordReader
name|FileInputFormat
operator|.
name|addInputPath
argument_list|(
name|conf
argument_list|,
operator|new
name|Path
argument_list|(
literal|"unused"
argument_list|)
argument_list|)
expr_stmt|;
name|InputSplit
index|[]
name|splits
init|=
name|inputformat
operator|.
name|getSplits
argument_list|(
name|conf
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|splits
operator|.
name|length
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|RecordReader
argument_list|<
name|Text
argument_list|,
name|AccumuloHiveRow
argument_list|>
name|reader
init|=
name|inputformat
operator|.
name|getRecordReader
argument_list|(
name|splits
index|[
literal|0
index|]
argument_list|,
name|conf
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Text
name|key
init|=
name|reader
operator|.
name|createKey
argument_list|()
decl_stmt|;
name|AccumuloHiveRow
name|value
init|=
name|reader
operator|.
name|createValue
argument_list|()
decl_stmt|;
name|reader
operator|.
name|next
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|13
argument_list|,
name|value
operator|.
name|getTuples
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// string
name|Text
name|cfText
init|=
operator|new
name|Text
argument_list|(
name|cf
argument_list|)
decl_stmt|,
name|cqHolder
init|=
operator|new
name|Text
argument_list|()
decl_stmt|;
name|cqHolder
operator|.
name|set
argument_list|(
literal|"string"
argument_list|)
expr_stmt|;
name|byte
index|[]
name|valueBytes
init|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|LazyStringObjectInspector
name|lazyStringOI
init|=
name|LazyPrimitiveObjectInspectorFactory
operator|.
name|getLazyStringObjectInspector
argument_list|(
literal|false
argument_list|,
operator|(
name|byte
operator|)
literal|0
argument_list|)
decl_stmt|;
name|LazyString
name|lazyString
init|=
operator|(
name|LazyString
operator|)
name|LazyFactory
operator|.
name|createLazyObject
argument_list|(
name|lazyStringOI
argument_list|)
decl_stmt|;
name|lazyString
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|valueBytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|Text
argument_list|(
name|stringValue
argument_list|)
argument_list|,
name|lazyString
operator|.
name|getWritableObject
argument_list|()
argument_list|)
expr_stmt|;
comment|// boolean
name|cqHolder
operator|.
name|set
argument_list|(
literal|"boolean"
argument_list|)
expr_stmt|;
name|valueBytes
operator|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|LazyBooleanObjectInspector
name|lazyBooleanOI
init|=
operator|(
name|LazyBooleanObjectInspector
operator|)
name|LazyPrimitiveObjectInspectorFactory
operator|.
name|getLazyObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|BOOLEAN_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyBoolean
name|lazyBoolean
init|=
operator|(
name|LazyBoolean
operator|)
name|LazyFactory
operator|.
name|createLazyObject
argument_list|(
name|lazyBooleanOI
argument_list|)
decl_stmt|;
name|lazyBoolean
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|valueBytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|booleanValue
argument_list|,
name|lazyBoolean
operator|.
name|getWritableObject
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
comment|// tinyint
name|cqHolder
operator|.
name|set
argument_list|(
literal|"tinyint"
argument_list|)
expr_stmt|;
name|valueBytes
operator|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|LazyByteObjectInspector
name|lazyByteOI
init|=
operator|(
name|LazyByteObjectInspector
operator|)
name|LazyPrimitiveObjectInspectorFactory
operator|.
name|getLazyObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|TINYINT_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyByte
name|lazyByte
init|=
operator|(
name|LazyByte
operator|)
name|LazyFactory
operator|.
name|createLazyObject
argument_list|(
name|lazyByteOI
argument_list|)
decl_stmt|;
name|lazyByte
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|valueBytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|tinyintValue
argument_list|,
name|lazyByte
operator|.
name|getWritableObject
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
comment|// smallint
name|cqHolder
operator|.
name|set
argument_list|(
literal|"smallint"
argument_list|)
expr_stmt|;
name|valueBytes
operator|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|LazyShortObjectInspector
name|lazyShortOI
init|=
operator|(
name|LazyShortObjectInspector
operator|)
name|LazyPrimitiveObjectInspectorFactory
operator|.
name|getLazyObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|SMALLINT_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyShort
name|lazyShort
init|=
operator|(
name|LazyShort
operator|)
name|LazyFactory
operator|.
name|createLazyObject
argument_list|(
name|lazyShortOI
argument_list|)
decl_stmt|;
name|lazyShort
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|valueBytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|smallintValue
argument_list|,
name|lazyShort
operator|.
name|getWritableObject
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
comment|// int
name|cqHolder
operator|.
name|set
argument_list|(
literal|"int"
argument_list|)
expr_stmt|;
name|valueBytes
operator|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|LazyIntObjectInspector
name|lazyIntOI
init|=
operator|(
name|LazyIntObjectInspector
operator|)
name|LazyPrimitiveObjectInspectorFactory
operator|.
name|getLazyObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|INT_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyInteger
name|lazyInt
init|=
operator|(
name|LazyInteger
operator|)
name|LazyFactory
operator|.
name|createLazyObject
argument_list|(
name|lazyIntOI
argument_list|)
decl_stmt|;
name|lazyInt
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|valueBytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|intValue
argument_list|,
name|lazyInt
operator|.
name|getWritableObject
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
comment|// bigint
name|cqHolder
operator|.
name|set
argument_list|(
literal|"bigint"
argument_list|)
expr_stmt|;
name|valueBytes
operator|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|LazyLongObjectInspector
name|lazyLongOI
init|=
operator|(
name|LazyLongObjectInspector
operator|)
name|LazyPrimitiveObjectInspectorFactory
operator|.
name|getLazyObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|BIGINT_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyLong
name|lazyLong
init|=
operator|(
name|LazyLong
operator|)
name|LazyFactory
operator|.
name|createLazyObject
argument_list|(
name|lazyLongOI
argument_list|)
decl_stmt|;
name|lazyLong
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|valueBytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|bigintValue
argument_list|,
name|lazyLong
operator|.
name|getWritableObject
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
comment|// float
name|cqHolder
operator|.
name|set
argument_list|(
literal|"float"
argument_list|)
expr_stmt|;
name|valueBytes
operator|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|LazyFloatObjectInspector
name|lazyFloatOI
init|=
operator|(
name|LazyFloatObjectInspector
operator|)
name|LazyPrimitiveObjectInspectorFactory
operator|.
name|getLazyObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|FLOAT_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyFloat
name|lazyFloat
init|=
operator|(
name|LazyFloat
operator|)
name|LazyFactory
operator|.
name|createLazyObject
argument_list|(
name|lazyFloatOI
argument_list|)
decl_stmt|;
name|lazyFloat
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|valueBytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|floatValue
argument_list|,
name|lazyFloat
operator|.
name|getWritableObject
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// double
name|cqHolder
operator|.
name|set
argument_list|(
literal|"double"
argument_list|)
expr_stmt|;
name|valueBytes
operator|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|LazyDoubleObjectInspector
name|lazyDoubleOI
init|=
operator|(
name|LazyDoubleObjectInspector
operator|)
name|LazyPrimitiveObjectInspectorFactory
operator|.
name|getLazyObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|DOUBLE_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyDouble
name|lazyDouble
init|=
operator|(
name|LazyDouble
operator|)
name|LazyFactory
operator|.
name|createLazyObject
argument_list|(
name|lazyDoubleOI
argument_list|)
decl_stmt|;
name|lazyDouble
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|valueBytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|doubleValue
argument_list|,
name|lazyDouble
operator|.
name|getWritableObject
argument_list|()
operator|.
name|get
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
comment|// decimal
name|cqHolder
operator|.
name|set
argument_list|(
literal|"decimal"
argument_list|)
expr_stmt|;
name|valueBytes
operator|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|LazyHiveDecimalObjectInspector
name|lazyDecimalOI
init|=
operator|(
name|LazyHiveDecimalObjectInspector
operator|)
name|LazyPrimitiveObjectInspectorFactory
operator|.
name|getLazyObjectInspector
argument_list|(
operator|new
name|DecimalTypeInfo
argument_list|(
literal|5
argument_list|,
literal|2
argument_list|)
argument_list|)
decl_stmt|;
name|LazyHiveDecimal
name|lazyDecimal
init|=
operator|(
name|LazyHiveDecimal
operator|)
name|LazyFactory
operator|.
name|createLazyObject
argument_list|(
name|lazyDecimalOI
argument_list|)
decl_stmt|;
name|lazyDecimal
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|valueBytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|decimalValue
argument_list|,
name|lazyDecimal
operator|.
name|getWritableObject
argument_list|()
operator|.
name|getHiveDecimal
argument_list|()
argument_list|)
expr_stmt|;
comment|// date
name|cqHolder
operator|.
name|set
argument_list|(
literal|"date"
argument_list|)
expr_stmt|;
name|valueBytes
operator|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|LazyDateObjectInspector
name|lazyDateOI
init|=
operator|(
name|LazyDateObjectInspector
operator|)
name|LazyPrimitiveObjectInspectorFactory
operator|.
name|getLazyObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|DATE_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyDate
name|lazyDate
init|=
operator|(
name|LazyDate
operator|)
name|LazyFactory
operator|.
name|createLazyObject
argument_list|(
name|lazyDateOI
argument_list|)
decl_stmt|;
name|lazyDate
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|valueBytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|dateValue
argument_list|,
name|lazyDate
operator|.
name|getWritableObject
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
comment|// timestamp
name|cqHolder
operator|.
name|set
argument_list|(
literal|"timestamp"
argument_list|)
expr_stmt|;
name|valueBytes
operator|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|LazyTimestampObjectInspector
name|lazyTimestampOI
init|=
operator|(
name|LazyTimestampObjectInspector
operator|)
name|LazyPrimitiveObjectInspectorFactory
operator|.
name|getLazyObjectInspector
argument_list|(
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|TIMESTAMP_TYPE_NAME
argument_list|)
argument_list|)
decl_stmt|;
name|LazyTimestamp
name|lazyTimestamp
init|=
operator|(
name|LazyTimestamp
operator|)
name|LazyFactory
operator|.
name|createLazyObject
argument_list|(
name|lazyTimestampOI
argument_list|)
decl_stmt|;
name|lazyTimestamp
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|valueBytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|timestampValue
argument_list|,
name|lazyTimestamp
operator|.
name|getWritableObject
argument_list|()
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
comment|// char
name|cqHolder
operator|.
name|set
argument_list|(
literal|"char"
argument_list|)
expr_stmt|;
name|valueBytes
operator|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|LazyHiveCharObjectInspector
name|lazyCharOI
init|=
operator|(
name|LazyHiveCharObjectInspector
operator|)
name|LazyPrimitiveObjectInspectorFactory
operator|.
name|getLazyObjectInspector
argument_list|(
operator|new
name|CharTypeInfo
argument_list|(
literal|4
argument_list|)
argument_list|)
decl_stmt|;
name|LazyHiveChar
name|lazyChar
init|=
operator|(
name|LazyHiveChar
operator|)
name|LazyFactory
operator|.
name|createLazyObject
argument_list|(
name|lazyCharOI
argument_list|)
decl_stmt|;
name|lazyChar
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|valueBytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|charValue
argument_list|,
name|lazyChar
operator|.
name|getWritableObject
argument_list|()
operator|.
name|getHiveChar
argument_list|()
argument_list|)
expr_stmt|;
comment|// varchar
name|cqHolder
operator|.
name|set
argument_list|(
literal|"varchar"
argument_list|)
expr_stmt|;
name|valueBytes
operator|=
name|value
operator|.
name|getValue
argument_list|(
name|cfText
argument_list|,
name|cqHolder
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
name|valueBytes
argument_list|)
expr_stmt|;
name|LazyHiveVarcharObjectInspector
name|lazyVarcharOI
init|=
operator|(
name|LazyHiveVarcharObjectInspector
operator|)
name|LazyPrimitiveObjectInspectorFactory
operator|.
name|getLazyObjectInspector
argument_list|(
operator|new
name|VarcharTypeInfo
argument_list|(
literal|7
argument_list|)
argument_list|)
decl_stmt|;
name|LazyHiveVarchar
name|lazyVarchar
init|=
operator|(
name|LazyHiveVarchar
operator|)
name|LazyFactory
operator|.
name|createLazyObject
argument_list|(
name|lazyVarcharOI
argument_list|)
decl_stmt|;
name|lazyVarchar
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|valueBytes
operator|.
name|length
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|varcharValue
operator|.
name|toString
argument_list|()
argument_list|,
name|lazyVarchar
operator|.
name|getWritableObject
argument_list|()
operator|.
name|getHiveVarchar
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

