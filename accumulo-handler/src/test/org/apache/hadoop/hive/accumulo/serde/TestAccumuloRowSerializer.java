begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|serde
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|data
operator|.
name|ColumnUpdate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|data
operator|.
name|Mutation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|security
operator|.
name|ColumnVisibility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|columns
operator|.
name|ColumnEncoding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|columns
operator|.
name|ColumnMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde
operator|.
name|serdeConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|ByteStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|SerDeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|ByteArrayRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazyFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazySimpleSerDe
operator|.
name|SerDeParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|LazyStruct
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|LazyMapObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|LazyObjectInspectorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|LazySimpleStructObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|lazy
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|LazyStringObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|PrimitiveObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|PrimitiveObjectInspector
operator|.
name|PrimitiveCategory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|StringObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|typeinfo
operator|.
name|TypeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|typeinfo
operator|.
name|TypeInfoFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Joiner
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
specifier|public
class|class
name|TestAccumuloRowSerializer
block|{
annotation|@
name|Test
specifier|public
name|void
name|testBufferResetBeforeUse
parameter_list|()
throws|throws
name|IOException
block|{
name|ByteStream
operator|.
name|Output
name|output
init|=
operator|new
name|ByteStream
operator|.
name|Output
argument_list|()
decl_stmt|;
name|PrimitiveObjectInspector
name|fieldObjectInspector
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|StringObjectInspector
operator|.
name|class
argument_list|)
decl_stmt|;
name|ColumnMapping
name|mapping
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|ColumnMapping
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// Write some garbage to the buffer that should be erased
name|output
operator|.
name|write
argument_list|(
literal|"foobar"
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
comment|// Stub out the serializer
name|AccumuloRowSerializer
name|serializer
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AccumuloRowSerializer
operator|.
name|class
argument_list|)
decl_stmt|;
name|String
name|object
init|=
literal|"hello"
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|serializer
operator|.
name|getSerializedValue
argument_list|(
name|Mockito
operator|.
name|any
argument_list|(
name|ObjectInspector
operator|.
name|class
argument_list|)
argument_list|,
name|Mockito
operator|.
name|any
argument_list|()
argument_list|,
name|Mockito
operator|.
name|any
argument_list|(
name|ByteStream
operator|.
name|Output
operator|.
name|class
argument_list|)
argument_list|,
name|Mockito
operator|.
name|any
argument_list|(
name|ColumnMapping
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenCallRealMethod
argument_list|()
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|fieldObjectInspector
operator|.
name|getCategory
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ObjectInspector
operator|.
name|Category
operator|.
name|PRIMITIVE
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|fieldObjectInspector
operator|.
name|getPrimitiveCategory
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|PrimitiveCategory
operator|.
name|STRING
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|fieldObjectInspector
operator|.
name|getPrimitiveWritableObject
argument_list|(
name|Mockito
operator|.
name|any
argument_list|(
name|Object
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|Text
argument_list|(
name|object
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mapping
operator|.
name|getEncoding
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ColumnEncoding
operator|.
name|STRING
argument_list|)
expr_stmt|;
comment|// Invoke the method
name|serializer
operator|.
name|getSerializedValue
argument_list|(
name|fieldObjectInspector
argument_list|,
name|object
argument_list|,
name|output
argument_list|,
name|mapping
argument_list|)
expr_stmt|;
comment|// Verify the buffer was reset (real output doesn't happen because it was mocked)
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|output
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBinarySerialization
parameter_list|()
throws|throws
name|IOException
throws|,
name|SerDeException
block|{
name|List
argument_list|<
name|String
argument_list|>
name|columns
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"row"
argument_list|,
literal|"cq1"
argument_list|,
literal|"cq2"
argument_list|,
literal|"cq3"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|TypeInfo
argument_list|>
name|types
init|=
name|Arrays
operator|.
expr|<
name|TypeInfo
operator|>
name|asList
argument_list|(
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|intTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|intTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|typeNames
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|(
name|types
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|TypeInfo
name|type
range|:
name|types
control|)
block|{
name|typeNames
operator|.
name|add
argument_list|(
name|type
operator|.
name|getTypeName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Properties
name|tableProperties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|,
literal|":rowid,cf:cq1#b,cf:cq2#b,cf:cq3"
argument_list|)
expr_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|FIELD_DELIM
argument_list|,
literal|" "
argument_list|)
expr_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMNS
argument_list|,
name|Joiner
operator|.
name|on
argument_list|(
literal|','
argument_list|)
operator|.
name|join
argument_list|(
name|columns
argument_list|)
argument_list|)
expr_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMN_TYPES
argument_list|,
name|Joiner
operator|.
name|on
argument_list|(
literal|','
argument_list|)
operator|.
name|join
argument_list|(
name|typeNames
argument_list|)
argument_list|)
expr_stmt|;
name|AccumuloSerDeParameters
name|accumuloSerDeParams
init|=
operator|new
name|AccumuloSerDeParameters
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|,
name|tableProperties
argument_list|,
name|AccumuloSerDe
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|)
decl_stmt|;
name|SerDeParameters
name|serDeParams
init|=
name|accumuloSerDeParams
operator|.
name|getSerDeParameters
argument_list|()
decl_stmt|;
name|LazySimpleStructObjectInspector
name|oi
init|=
operator|(
name|LazySimpleStructObjectInspector
operator|)
name|LazyFactory
operator|.
name|createLazyStructInspector
argument_list|(
name|columns
argument_list|,
name|types
argument_list|,
name|serDeParams
operator|.
name|getSeparators
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|getNullSequence
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|isLastColumnTakesRest
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|isEscaped
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|getEscapeChar
argument_list|()
argument_list|)
decl_stmt|;
name|AccumuloRowSerializer
name|serializer
init|=
operator|new
name|AccumuloRowSerializer
argument_list|(
literal|0
argument_list|,
name|serDeParams
argument_list|,
name|accumuloSerDeParams
operator|.
name|getColumnMappings
argument_list|()
argument_list|,
operator|new
name|ColumnVisibility
argument_list|()
argument_list|,
name|accumuloSerDeParams
operator|.
name|getRowIdFactory
argument_list|()
argument_list|)
decl_stmt|;
comment|// Create the LazyStruct from the LazyStruct...Inspector
name|LazyStruct
name|obj
init|=
operator|(
name|LazyStruct
operator|)
name|LazyFactory
operator|.
name|createLazyObject
argument_list|(
name|oi
argument_list|)
decl_stmt|;
name|ByteArrayRef
name|byteRef
init|=
operator|new
name|ByteArrayRef
argument_list|()
decl_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
operator|new
name|byte
index|[]
block|{
literal|'r'
block|,
literal|'o'
block|,
literal|'w'
block|,
literal|'1'
block|,
literal|' '
block|,
literal|'1'
block|,
literal|'0'
block|,
literal|' '
block|,
literal|'2'
block|,
literal|'0'
block|,
literal|' '
block|,
literal|'v'
block|,
literal|'a'
block|,
literal|'l'
block|,
literal|'u'
block|,
literal|'e'
block|}
argument_list|)
expr_stmt|;
name|obj
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|byteRef
operator|.
name|getData
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|Mutation
name|m
init|=
operator|(
name|Mutation
operator|)
name|serializer
operator|.
name|serialize
argument_list|(
name|obj
argument_list|,
name|oi
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
literal|"row1"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|m
operator|.
name|getRow
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ColumnUpdate
argument_list|>
name|updates
init|=
name|m
operator|.
name|getUpdates
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|updates
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|DataOutputStream
name|out
init|=
operator|new
name|DataOutputStream
argument_list|(
name|baos
argument_list|)
decl_stmt|;
name|ColumnUpdate
name|update
init|=
name|updates
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cf"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getColumnFamily
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cq1"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getColumnQualifier
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|,
name|update
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|update
operator|=
name|updates
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cf"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getColumnFamily
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cq2"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getColumnQualifier
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|,
name|update
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|update
operator|=
name|updates
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cf"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getColumnFamily
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cq3"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getColumnQualifier
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"value"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testVisibilityLabel
parameter_list|()
throws|throws
name|IOException
throws|,
name|SerDeException
block|{
name|List
argument_list|<
name|String
argument_list|>
name|columns
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"row"
argument_list|,
literal|"cq1"
argument_list|,
literal|"cq2"
argument_list|,
literal|"cq3"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|TypeInfo
argument_list|>
name|types
init|=
name|Arrays
operator|.
expr|<
name|TypeInfo
operator|>
name|asList
argument_list|(
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|intTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|intTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|typeNames
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|(
name|types
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|TypeInfo
name|type
range|:
name|types
control|)
block|{
name|typeNames
operator|.
name|add
argument_list|(
name|type
operator|.
name|getTypeName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Properties
name|tableProperties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|,
literal|":rowid,cf:cq1#b,cf:cq2#b,cf:cq3"
argument_list|)
expr_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|FIELD_DELIM
argument_list|,
literal|" "
argument_list|)
expr_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMNS
argument_list|,
name|Joiner
operator|.
name|on
argument_list|(
literal|','
argument_list|)
operator|.
name|join
argument_list|(
name|columns
argument_list|)
argument_list|)
expr_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMN_TYPES
argument_list|,
name|Joiner
operator|.
name|on
argument_list|(
literal|','
argument_list|)
operator|.
name|join
argument_list|(
name|typeNames
argument_list|)
argument_list|)
expr_stmt|;
name|AccumuloSerDeParameters
name|accumuloSerDeParams
init|=
operator|new
name|AccumuloSerDeParameters
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|,
name|tableProperties
argument_list|,
name|AccumuloSerDe
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|)
decl_stmt|;
name|SerDeParameters
name|serDeParams
init|=
name|accumuloSerDeParams
operator|.
name|getSerDeParameters
argument_list|()
decl_stmt|;
name|LazySimpleStructObjectInspector
name|oi
init|=
operator|(
name|LazySimpleStructObjectInspector
operator|)
name|LazyFactory
operator|.
name|createLazyStructInspector
argument_list|(
name|columns
argument_list|,
name|types
argument_list|,
name|serDeParams
operator|.
name|getSeparators
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|getNullSequence
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|isLastColumnTakesRest
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|isEscaped
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|getEscapeChar
argument_list|()
argument_list|)
decl_stmt|;
name|AccumuloRowSerializer
name|serializer
init|=
operator|new
name|AccumuloRowSerializer
argument_list|(
literal|0
argument_list|,
name|serDeParams
argument_list|,
name|accumuloSerDeParams
operator|.
name|getColumnMappings
argument_list|()
argument_list|,
operator|new
name|ColumnVisibility
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
name|accumuloSerDeParams
operator|.
name|getRowIdFactory
argument_list|()
argument_list|)
decl_stmt|;
comment|// Create the LazyStruct from the LazyStruct...Inspector
name|LazyStruct
name|obj
init|=
operator|(
name|LazyStruct
operator|)
name|LazyFactory
operator|.
name|createLazyObject
argument_list|(
name|oi
argument_list|)
decl_stmt|;
name|ByteArrayRef
name|byteRef
init|=
operator|new
name|ByteArrayRef
argument_list|()
decl_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
operator|new
name|byte
index|[]
block|{
literal|'r'
block|,
literal|'o'
block|,
literal|'w'
block|,
literal|'1'
block|,
literal|' '
block|,
literal|'1'
block|,
literal|'0'
block|,
literal|' '
block|,
literal|'2'
block|,
literal|'0'
block|,
literal|' '
block|,
literal|'v'
block|,
literal|'a'
block|,
literal|'l'
block|,
literal|'u'
block|,
literal|'e'
block|}
argument_list|)
expr_stmt|;
name|obj
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|byteRef
operator|.
name|getData
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|Mutation
name|m
init|=
operator|(
name|Mutation
operator|)
name|serializer
operator|.
name|serialize
argument_list|(
name|obj
argument_list|,
name|oi
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
literal|"row1"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|m
operator|.
name|getRow
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ColumnUpdate
argument_list|>
name|updates
init|=
name|m
operator|.
name|getUpdates
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|updates
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|DataOutputStream
name|out
init|=
operator|new
name|DataOutputStream
argument_list|(
name|baos
argument_list|)
decl_stmt|;
name|ColumnUpdate
name|update
init|=
name|updates
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cf"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getColumnFamily
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cq1"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getColumnQualifier
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"foo"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getColumnVisibility
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|,
name|update
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|update
operator|=
name|updates
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cf"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getColumnFamily
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cq2"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getColumnQualifier
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"foo"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getColumnVisibility
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|baos
operator|.
name|reset
argument_list|()
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|,
name|update
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|update
operator|=
name|updates
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cf"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getColumnFamily
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cq3"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getColumnQualifier
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"foo"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getColumnVisibility
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"value"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMapSerialization
parameter_list|()
throws|throws
name|IOException
throws|,
name|SerDeException
block|{
name|List
argument_list|<
name|String
argument_list|>
name|columns
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"row"
argument_list|,
literal|"col"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|TypeInfo
argument_list|>
name|types
init|=
name|Arrays
operator|.
expr|<
name|TypeInfo
operator|>
name|asList
argument_list|(
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|getMapTypeInfo
argument_list|(
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|,
name|TypeInfoFactory
operator|.
name|stringTypeInfo
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|typeNames
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|(
name|types
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|TypeInfo
name|type
range|:
name|types
control|)
block|{
name|typeNames
operator|.
name|add
argument_list|(
name|type
operator|.
name|getTypeName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Properties
name|tableProperties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|,
literal|":rowid,cf:*"
argument_list|)
expr_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|FIELD_DELIM
argument_list|,
literal|" "
argument_list|)
expr_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|COLLECTION_DELIM
argument_list|,
literal|","
argument_list|)
expr_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|MAPKEY_DELIM
argument_list|,
literal|":"
argument_list|)
expr_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMNS
argument_list|,
name|Joiner
operator|.
name|on
argument_list|(
literal|','
argument_list|)
operator|.
name|join
argument_list|(
name|columns
argument_list|)
argument_list|)
expr_stmt|;
name|tableProperties
operator|.
name|setProperty
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMN_TYPES
argument_list|,
name|Joiner
operator|.
name|on
argument_list|(
literal|','
argument_list|)
operator|.
name|join
argument_list|(
name|typeNames
argument_list|)
argument_list|)
expr_stmt|;
name|AccumuloSerDeParameters
name|accumuloSerDeParams
init|=
operator|new
name|AccumuloSerDeParameters
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|,
name|tableProperties
argument_list|,
name|AccumuloSerDe
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|)
decl_stmt|;
name|SerDeParameters
name|serDeParams
init|=
name|accumuloSerDeParams
operator|.
name|getSerDeParameters
argument_list|()
decl_stmt|;
name|TypeInfo
name|stringTypeInfo
init|=
name|TypeInfoFactory
operator|.
name|getPrimitiveTypeInfo
argument_list|(
name|serdeConstants
operator|.
name|STRING_TYPE_NAME
argument_list|)
decl_stmt|;
name|LazyStringObjectInspector
name|stringOI
init|=
operator|(
name|LazyStringObjectInspector
operator|)
name|LazyFactory
operator|.
name|createLazyObjectInspector
argument_list|(
name|stringTypeInfo
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|0
block|}
argument_list|,
literal|0
argument_list|,
name|serDeParams
operator|.
name|getNullSequence
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|isEscaped
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|getEscapeChar
argument_list|()
argument_list|)
decl_stmt|;
name|LazyMapObjectInspector
name|mapOI
init|=
name|LazyObjectInspectorFactory
operator|.
name|getLazySimpleMapObjectInspector
argument_list|(
name|stringOI
argument_list|,
name|stringOI
argument_list|,
operator|(
name|byte
operator|)
literal|','
argument_list|,
operator|(
name|byte
operator|)
literal|':'
argument_list|,
name|serDeParams
operator|.
name|getNullSequence
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|isEscaped
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|getEscapeChar
argument_list|()
argument_list|)
decl_stmt|;
name|LazySimpleStructObjectInspector
name|structOI
init|=
operator|(
name|LazySimpleStructObjectInspector
operator|)
name|LazyObjectInspectorFactory
operator|.
name|getLazySimpleStructObjectInspector
argument_list|(
name|columns
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|stringOI
argument_list|,
name|mapOI
argument_list|)
argument_list|,
operator|(
name|byte
operator|)
literal|' '
argument_list|,
name|serDeParams
operator|.
name|getNullSequence
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|isLastColumnTakesRest
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|isEscaped
argument_list|()
argument_list|,
name|serDeParams
operator|.
name|getEscapeChar
argument_list|()
argument_list|)
decl_stmt|;
name|AccumuloRowSerializer
name|serializer
init|=
operator|new
name|AccumuloRowSerializer
argument_list|(
literal|0
argument_list|,
name|serDeParams
argument_list|,
name|accumuloSerDeParams
operator|.
name|getColumnMappings
argument_list|()
argument_list|,
operator|new
name|ColumnVisibility
argument_list|()
argument_list|,
name|accumuloSerDeParams
operator|.
name|getRowIdFactory
argument_list|()
argument_list|)
decl_stmt|;
comment|// Create the LazyStruct from the LazyStruct...Inspector
name|LazyStruct
name|obj
init|=
operator|(
name|LazyStruct
operator|)
name|LazyFactory
operator|.
name|createLazyObject
argument_list|(
name|structOI
argument_list|)
decl_stmt|;
name|ByteArrayRef
name|byteRef
init|=
operator|new
name|ByteArrayRef
argument_list|()
decl_stmt|;
name|byteRef
operator|.
name|setData
argument_list|(
literal|"row1 cq1:10,cq2:20,cq3:value"
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|obj
operator|.
name|init
argument_list|(
name|byteRef
argument_list|,
literal|0
argument_list|,
name|byteRef
operator|.
name|getData
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|Mutation
name|m
init|=
operator|(
name|Mutation
operator|)
name|serializer
operator|.
name|serialize
argument_list|(
name|obj
argument_list|,
name|structOI
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
literal|"row1"
operator|.
name|getBytes
argument_list|()
argument_list|,
name|m
operator|.
name|getRow
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ColumnUpdate
argument_list|>
name|updates
init|=
name|m
operator|.
name|getUpdates
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|updates
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|ColumnUpdate
name|update
init|=
name|updates
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cf"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getColumnFamily
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cq1"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getColumnQualifier
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"10"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|update
operator|=
name|updates
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cf"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getColumnFamily
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cq2"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getColumnQualifier
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"20"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|update
operator|=
name|updates
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cf"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getColumnFamily
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"cq3"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getColumnQualifier
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"value"
argument_list|,
operator|new
name|String
argument_list|(
name|update
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testInvalidRowIdOffset
parameter_list|()
throws|throws
name|SerDeException
block|{
name|ArrayList
argument_list|<
name|ColumnMapping
argument_list|>
name|mappings
init|=
operator|new
name|ArrayList
argument_list|<
name|ColumnMapping
argument_list|>
argument_list|()
decl_stmt|;
comment|// Should fail because of the -1
operator|new
name|AccumuloRowSerializer
argument_list|(
operator|-
literal|1
argument_list|,
literal|null
argument_list|,
name|mappings
argument_list|,
operator|new
name|ColumnVisibility
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

