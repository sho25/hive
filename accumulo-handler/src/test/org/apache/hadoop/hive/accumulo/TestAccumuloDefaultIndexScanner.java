begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|AccumuloException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|AccumuloSecurityException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|BatchWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|BatchWriterConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|Connector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|MutationsRejectedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|TableExistsException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|TableNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|mock
operator|.
name|MockInstance
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|client
operator|.
name|security
operator|.
name|tokens
operator|.
name|PasswordToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|data
operator|.
name|Mutation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|data
operator|.
name|Range
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|accumulo
operator|.
name|core
operator|.
name|data
operator|.
name|Value
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|serde
operator|.
name|AccumuloIndexParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|accumulo
operator|.
name|serde
operator|.
name|AccumuloSerDeParameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde
operator|.
name|serdeConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|TestAccumuloDefaultIndexScanner
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TestAccumuloDefaultIndexScanner
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Value
name|EMPTY_VALUE
init|=
operator|new
name|Value
argument_list|()
decl_stmt|;
specifier|private
specifier|static
name|void
name|addRow
parameter_list|(
name|BatchWriter
name|writer
parameter_list|,
name|String
name|rowId
parameter_list|,
name|String
name|cf
parameter_list|,
name|String
name|cq
parameter_list|)
throws|throws
name|MutationsRejectedException
block|{
name|Mutation
name|mut
init|=
operator|new
name|Mutation
argument_list|(
name|rowId
argument_list|)
decl_stmt|;
name|mut
operator|.
name|put
argument_list|(
operator|new
name|Text
argument_list|(
name|cf
argument_list|)
argument_list|,
operator|new
name|Text
argument_list|(
name|cq
argument_list|)
argument_list|,
name|EMPTY_VALUE
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addMutation
argument_list|(
name|mut
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|addRow
parameter_list|(
name|BatchWriter
name|writer
parameter_list|,
name|Integer
name|rowId
parameter_list|,
name|String
name|cf
parameter_list|,
name|String
name|cq
parameter_list|)
throws|throws
name|MutationsRejectedException
block|{
name|Mutation
name|mut
init|=
operator|new
name|Mutation
argument_list|(
name|AccumuloIndexLexicoder
operator|.
name|encodeValue
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|rowId
argument_list|)
operator|.
name|getBytes
argument_list|()
argument_list|,
literal|"int"
argument_list|,
literal|true
argument_list|)
argument_list|)
decl_stmt|;
name|mut
operator|.
name|put
argument_list|(
operator|new
name|Text
argument_list|(
name|cf
argument_list|)
argument_list|,
operator|new
name|Text
argument_list|(
name|cq
argument_list|)
argument_list|,
name|EMPTY_VALUE
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addMutation
argument_list|(
name|mut
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|addRow
parameter_list|(
name|BatchWriter
name|writer
parameter_list|,
name|boolean
name|rowId
parameter_list|,
name|String
name|cf
parameter_list|,
name|String
name|cq
parameter_list|)
throws|throws
name|MutationsRejectedException
block|{
name|Mutation
name|mut
init|=
operator|new
name|Mutation
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|rowId
argument_list|)
argument_list|)
decl_stmt|;
name|mut
operator|.
name|put
argument_list|(
operator|new
name|Text
argument_list|(
name|cf
argument_list|)
argument_list|,
operator|new
name|Text
argument_list|(
name|cq
argument_list|)
argument_list|,
name|EMPTY_VALUE
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addMutation
argument_list|(
name|mut
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|AccumuloDefaultIndexScanner
name|buildMockHandler
parameter_list|(
name|int
name|maxMatches
parameter_list|)
block|{
try|try
block|{
name|String
name|table
init|=
literal|"table"
decl_stmt|;
name|Text
name|emptyText
init|=
operator|new
name|Text
argument_list|(
literal|""
argument_list|)
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloIndexParameters
operator|.
name|INDEXTABLE_NAME
argument_list|,
name|table
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|AccumuloIndexParameters
operator|.
name|MAX_INDEX_ROWS
argument_list|,
name|maxMatches
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloIndexParameters
operator|.
name|INDEXED_COLUMNS
argument_list|,
literal|"*"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|serdeConstants
operator|.
name|LIST_COLUMNS
argument_list|,
literal|"rid,name,age,cars,mgr"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloSerDeParameters
operator|.
name|COLUMN_MAPPINGS
argument_list|,
literal|":rowId,name:name,age:age,cars:cars,mgr:mgr"
argument_list|)
expr_stmt|;
name|AccumuloDefaultIndexScanner
name|handler
init|=
operator|new
name|AccumuloDefaultIndexScanner
argument_list|()
decl_stmt|;
name|handler
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|MockInstance
name|inst
init|=
operator|new
name|MockInstance
argument_list|(
literal|"test_instance"
argument_list|)
decl_stmt|;
name|Connector
name|conn
init|=
name|inst
operator|.
name|getConnector
argument_list|(
literal|"root"
argument_list|,
operator|new
name|PasswordToken
argument_list|(
literal|""
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|conn
operator|.
name|tableOperations
argument_list|()
operator|.
name|exists
argument_list|(
name|table
argument_list|)
condition|)
block|{
name|conn
operator|.
name|tableOperations
argument_list|()
operator|.
name|create
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|BatchWriterConfig
name|batchConfig
init|=
operator|new
name|BatchWriterConfig
argument_list|()
decl_stmt|;
name|BatchWriter
name|writer
init|=
name|conn
operator|.
name|createBatchWriter
argument_list|(
name|table
argument_list|,
name|batchConfig
argument_list|)
decl_stmt|;
name|addRow
argument_list|(
name|writer
argument_list|,
literal|"fred"
argument_list|,
literal|"name_name"
argument_list|,
literal|"row1"
argument_list|)
expr_stmt|;
name|addRow
argument_list|(
name|writer
argument_list|,
literal|"25"
argument_list|,
literal|"age_age"
argument_list|,
literal|"row1"
argument_list|)
expr_stmt|;
name|addRow
argument_list|(
name|writer
argument_list|,
literal|5
argument_list|,
literal|"cars_cars"
argument_list|,
literal|"row1"
argument_list|)
expr_stmt|;
name|addRow
argument_list|(
name|writer
argument_list|,
literal|true
argument_list|,
literal|"mgr_mgr"
argument_list|,
literal|"row1"
argument_list|)
expr_stmt|;
name|addRow
argument_list|(
name|writer
argument_list|,
literal|"bill"
argument_list|,
literal|"name_name"
argument_list|,
literal|"row2"
argument_list|)
expr_stmt|;
name|addRow
argument_list|(
name|writer
argument_list|,
literal|"20"
argument_list|,
literal|"age_age"
argument_list|,
literal|"row2"
argument_list|)
expr_stmt|;
name|addRow
argument_list|(
name|writer
argument_list|,
literal|2
argument_list|,
literal|"cars_cars"
argument_list|,
literal|"row2"
argument_list|)
expr_stmt|;
name|addRow
argument_list|(
name|writer
argument_list|,
literal|false
argument_list|,
literal|"mgr_mgr"
argument_list|,
literal|"row2"
argument_list|)
expr_stmt|;
name|addRow
argument_list|(
name|writer
argument_list|,
literal|"sally"
argument_list|,
literal|"name_name"
argument_list|,
literal|"row3"
argument_list|)
expr_stmt|;
name|addRow
argument_list|(
name|writer
argument_list|,
literal|"23"
argument_list|,
literal|"age_age"
argument_list|,
literal|"row3"
argument_list|)
expr_stmt|;
name|addRow
argument_list|(
name|writer
argument_list|,
literal|6
argument_list|,
literal|"cars_cars"
argument_list|,
literal|"row3"
argument_list|)
expr_stmt|;
name|addRow
argument_list|(
name|writer
argument_list|,
literal|true
argument_list|,
literal|"mgr_mgr"
argument_list|,
literal|"row3"
argument_list|)
expr_stmt|;
name|addRow
argument_list|(
name|writer
argument_list|,
literal|"rob"
argument_list|,
literal|"name_name"
argument_list|,
literal|"row4"
argument_list|)
expr_stmt|;
name|addRow
argument_list|(
name|writer
argument_list|,
literal|"60"
argument_list|,
literal|"age_age"
argument_list|,
literal|"row4"
argument_list|)
expr_stmt|;
name|addRow
argument_list|(
name|writer
argument_list|,
literal|1
argument_list|,
literal|"cars_cars"
argument_list|,
literal|"row4"
argument_list|)
expr_stmt|;
name|addRow
argument_list|(
name|writer
argument_list|,
literal|false
argument_list|,
literal|"mgr_mgr"
argument_list|,
literal|"row4"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|AccumuloConnectionParameters
name|connectionParams
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AccumuloConnectionParameters
operator|.
name|class
argument_list|)
decl_stmt|;
name|AccumuloStorageHandler
name|storageHandler
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|AccumuloStorageHandler
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|connectionParams
operator|.
name|getConnector
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|conn
argument_list|)
expr_stmt|;
name|handler
operator|.
name|setConnectParams
argument_list|(
name|connectionParams
argument_list|)
expr_stmt|;
return|return
name|handler
return|;
block|}
catch|catch
parameter_list|(
name|AccumuloSecurityException
decl||
name|AccumuloException
decl||
name|TableExistsException
decl||
name|TableNotFoundException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
name|e
operator|.
name|getLocalizedMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMatchNone
parameter_list|()
block|{
name|AccumuloDefaultIndexScanner
name|handler
init|=
name|buildMockHandler
argument_list|(
literal|10
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Range
argument_list|>
name|ranges
init|=
name|handler
operator|.
name|getIndexRowRanges
argument_list|(
literal|"name"
argument_list|,
operator|new
name|Range
argument_list|(
literal|"mike"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ranges
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMatchRange
parameter_list|()
block|{
name|AccumuloDefaultIndexScanner
name|handler
init|=
name|buildMockHandler
argument_list|(
literal|10
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Range
argument_list|>
name|ranges
init|=
name|handler
operator|.
name|getIndexRowRanges
argument_list|(
literal|"age"
argument_list|,
operator|new
name|Range
argument_list|(
literal|"10"
argument_list|,
literal|"50"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|ranges
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"does not contain row1"
argument_list|,
name|ranges
operator|.
name|contains
argument_list|(
operator|new
name|Range
argument_list|(
literal|"row1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"does not contain row2"
argument_list|,
name|ranges
operator|.
name|contains
argument_list|(
operator|new
name|Range
argument_list|(
literal|"row2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"does not contain row3"
argument_list|,
name|ranges
operator|.
name|contains
argument_list|(
operator|new
name|Range
argument_list|(
literal|"row3"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testTooManyMatches
parameter_list|()
block|{
name|AccumuloDefaultIndexScanner
name|handler
init|=
name|buildMockHandler
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Range
argument_list|>
name|ranges
init|=
name|handler
operator|.
name|getIndexRowRanges
argument_list|(
literal|"age"
argument_list|,
operator|new
name|Range
argument_list|(
literal|"10"
argument_list|,
literal|"50"
argument_list|)
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
literal|"ranges should be null"
argument_list|,
name|ranges
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMatchExact
parameter_list|()
block|{
name|AccumuloDefaultIndexScanner
name|handler
init|=
name|buildMockHandler
argument_list|(
literal|10
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Range
argument_list|>
name|ranges
init|=
name|handler
operator|.
name|getIndexRowRanges
argument_list|(
literal|"age"
argument_list|,
operator|new
name|Range
argument_list|(
literal|"20"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ranges
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"does not contain row2"
argument_list|,
name|ranges
operator|.
name|contains
argument_list|(
operator|new
name|Range
argument_list|(
literal|"row2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testValidIndex
parameter_list|()
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloIndexParameters
operator|.
name|INDEXED_COLUMNS
argument_list|,
literal|"name,age,phone,email"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloIndexParameters
operator|.
name|INDEXTABLE_NAME
argument_list|,
literal|"contact"
argument_list|)
expr_stmt|;
name|AccumuloDefaultIndexScanner
name|handler
init|=
operator|new
name|AccumuloDefaultIndexScanner
argument_list|()
decl_stmt|;
name|handler
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"name is not identified as an index"
argument_list|,
name|handler
operator|.
name|isIndexed
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"age is not identified as an index"
argument_list|,
name|handler
operator|.
name|isIndexed
argument_list|(
literal|"age"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"phone is not identified as an index"
argument_list|,
name|handler
operator|.
name|isIndexed
argument_list|(
literal|"phone"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"email is not identified as an index"
argument_list|,
name|handler
operator|.
name|isIndexed
argument_list|(
literal|"email"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInvalidIndex
parameter_list|()
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloIndexParameters
operator|.
name|INDEXED_COLUMNS
argument_list|,
literal|"name,age,phone,email"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloIndexParameters
operator|.
name|INDEXTABLE_NAME
argument_list|,
literal|"contact"
argument_list|)
expr_stmt|;
name|AccumuloDefaultIndexScanner
name|handler
init|=
operator|new
name|AccumuloDefaultIndexScanner
argument_list|()
decl_stmt|;
name|handler
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"mobile is identified as an index"
argument_list|,
name|handler
operator|.
name|isIndexed
argument_list|(
literal|"mobile"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"mail is identified as an index"
argument_list|,
name|handler
operator|.
name|isIndexed
argument_list|(
literal|"mail"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMissingTable
parameter_list|()
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloIndexParameters
operator|.
name|INDEXED_COLUMNS
argument_list|,
literal|"name,age,phone,email"
argument_list|)
expr_stmt|;
name|AccumuloDefaultIndexScanner
name|handler
init|=
operator|new
name|AccumuloDefaultIndexScanner
argument_list|()
decl_stmt|;
name|handler
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"name is identified as an index"
argument_list|,
name|handler
operator|.
name|isIndexed
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"age is identified as an index"
argument_list|,
name|handler
operator|.
name|isIndexed
argument_list|(
literal|"age"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWildcardIndex
parameter_list|()
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloIndexParameters
operator|.
name|INDEXED_COLUMNS
argument_list|,
literal|"*"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloIndexParameters
operator|.
name|INDEXTABLE_NAME
argument_list|,
literal|"contact"
argument_list|)
expr_stmt|;
name|AccumuloDefaultIndexScanner
name|handler
init|=
operator|new
name|AccumuloDefaultIndexScanner
argument_list|()
decl_stmt|;
name|handler
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"name is not identified as an index"
argument_list|,
name|handler
operator|.
name|isIndexed
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"age is not identified as an index"
argument_list|,
name|handler
operator|.
name|isIndexed
argument_list|(
literal|"age"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNullIndex
parameter_list|()
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloIndexParameters
operator|.
name|INDEXTABLE_NAME
argument_list|,
literal|"contact"
argument_list|)
expr_stmt|;
name|AccumuloDefaultIndexScanner
name|handler
init|=
operator|new
name|AccumuloDefaultIndexScanner
argument_list|()
decl_stmt|;
name|handler
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"name is not identified as an index"
argument_list|,
name|handler
operator|.
name|isIndexed
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEmptyIndex
parameter_list|()
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloIndexParameters
operator|.
name|INDEXED_COLUMNS
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|AccumuloIndexParameters
operator|.
name|INDEXTABLE_NAME
argument_list|,
literal|"contact"
argument_list|)
expr_stmt|;
name|AccumuloDefaultIndexScanner
name|handler
init|=
operator|new
name|AccumuloDefaultIndexScanner
argument_list|()
decl_stmt|;
name|handler
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"name is identified as an index"
argument_list|,
name|handler
operator|.
name|isIndexed
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

