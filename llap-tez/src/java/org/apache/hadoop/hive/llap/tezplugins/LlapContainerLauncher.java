begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|tezplugins
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tez
operator|.
name|serviceplugins
operator|.
name|api
operator|.
name|ContainerLaunchRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tez
operator|.
name|serviceplugins
operator|.
name|api
operator|.
name|ContainerLauncher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tez
operator|.
name|serviceplugins
operator|.
name|api
operator|.
name|ContainerLauncherContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tez
operator|.
name|serviceplugins
operator|.
name|api
operator|.
name|ContainerStopRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
specifier|public
class|class
name|LlapContainerLauncher
extends|extends
name|ContainerLauncher
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|LlapContainerLauncher
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
name|LlapContainerLauncher
parameter_list|(
name|ContainerLauncherContext
name|containerLauncherContext
parameter_list|)
block|{
name|super
argument_list|(
name|containerLauncherContext
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|launchContainer
parameter_list|(
name|ContainerLaunchRequest
name|containerLaunchRequest
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"No-op launch for container: "
operator|+
name|containerLaunchRequest
operator|.
name|getContainerId
argument_list|()
operator|+
literal|" succeeded on host: "
operator|+
name|containerLaunchRequest
operator|.
name|getNodeId
argument_list|()
argument_list|)
expr_stmt|;
name|getContext
argument_list|()
operator|.
name|containerLaunched
argument_list|(
name|containerLaunchRequest
operator|.
name|getContainerId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|stopContainer
parameter_list|(
name|ContainerStopRequest
name|containerStopRequest
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"DEBUG: Ignoring STOP_REQUEST for event: "
operator|+
name|containerStopRequest
argument_list|)
expr_stmt|;
name|getContext
argument_list|()
operator|.
name|containerStopRequested
argument_list|(
name|containerStopRequest
operator|.
name|getContainerId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

