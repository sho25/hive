begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|hwi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|shims
operator|.
name|JettyShims
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|shims
operator|.
name|ShimLoader
import|;
end_import

begin_comment
comment|/**  * This is the entry point for HWI. A web server is invoked in the same manner  * as the hive CLI. Rather then opening a command line session a web server is  * started and a web application to work with hive is started.  */
end_comment

begin_class
specifier|public
class|class
name|HWIServer
block|{
specifier|protected
specifier|static
specifier|final
name|Log
name|l4j
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|HWIServer
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
name|JettyShims
operator|.
name|Server
name|webServer
decl_stmt|;
specifier|private
specifier|final
name|String
index|[]
name|args
decl_stmt|;
comment|/**    *     * @param args    *          These are the command line arguments. Usually -hiveconf.    * @throws java.io.IOException    */
specifier|public
name|HWIServer
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|args
operator|=
name|args
expr_stmt|;
block|}
comment|/**    * This method initialized the internal Jetty Servlet Engine. It adds the hwi    * context path.    *     * @throws java.io.IOException    *           Port already in use, bad bind etc.    */
specifier|public
name|void
name|start
parameter_list|()
throws|throws
name|IOException
block|{
name|HiveConf
name|conf
init|=
operator|new
name|HiveConf
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|listen
init|=
literal|null
decl_stmt|;
name|int
name|port
init|=
operator|-
literal|1
decl_stmt|;
name|listen
operator|=
name|conf
operator|.
name|getVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVEHWILISTENHOST
argument_list|)
expr_stmt|;
name|port
operator|=
name|conf
operator|.
name|getIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVEHWILISTENPORT
argument_list|)
expr_stmt|;
if|if
condition|(
name|listen
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
name|l4j
operator|.
name|warn
argument_list|(
literal|"hive.hwi.listen.host was not specified defaulting to 0.0.0.0"
argument_list|)
expr_stmt|;
name|listen
operator|=
literal|"0.0.0.0"
expr_stmt|;
block|}
if|if
condition|(
name|port
operator|==
operator|-
literal|1
condition|)
block|{
name|l4j
operator|.
name|warn
argument_list|(
literal|"hive.hwi.listen.port was not specified defaulting to 9999"
argument_list|)
expr_stmt|;
name|port
operator|=
literal|9999
expr_stmt|;
block|}
name|String
name|hwiWAR
init|=
name|conf
operator|.
name|getVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVEHWIWARFILE
argument_list|)
decl_stmt|;
name|String
name|hivehome
init|=
name|System
operator|.
name|getenv
argument_list|()
operator|.
name|get
argument_list|(
literal|"HIVE_HOME"
argument_list|)
decl_stmt|;
name|File
name|hwiWARFile
init|=
operator|new
name|File
argument_list|(
name|hivehome
argument_list|,
name|hwiWAR
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|hwiWARFile
operator|.
name|exists
argument_list|()
condition|)
block|{
name|l4j
operator|.
name|fatal
argument_list|(
literal|"HWI WAR file not found at "
operator|+
name|hwiWAR
argument_list|)
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
name|webServer
operator|=
name|ShimLoader
operator|.
name|getJettyShims
argument_list|()
operator|.
name|startServer
argument_list|(
name|listen
argument_list|,
name|port
argument_list|)
expr_stmt|;
name|webServer
operator|.
name|addWar
argument_list|(
name|hwiWARFile
operator|.
name|toString
argument_list|()
argument_list|,
literal|"/hwi"
argument_list|)
expr_stmt|;
comment|/*      * The command line args may be used by multiple components. Rather by      * setting these as a system property we avoid having to specifically pass      * them      */
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|arg
range|:
name|args
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|arg
operator|+
literal|" "
argument_list|)
expr_stmt|;
block|}
name|System
operator|.
name|setProperty
argument_list|(
literal|"hwi-args"
argument_list|,
name|sb
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
while|while
condition|(
literal|true
condition|)
block|{
try|try
block|{
name|webServer
operator|.
name|start
argument_list|()
expr_stmt|;
name|webServer
operator|.
name|join
argument_list|()
expr_stmt|;
name|l4j
operator|.
name|debug
argument_list|(
literal|" HWI Web Server is started."
argument_list|)
expr_stmt|;
break|break;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|mortbay
operator|.
name|util
operator|.
name|MultiException
name|ex
parameter_list|)
block|{
throw|throw
name|ex
throw|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|ie
parameter_list|)
block|{
throw|throw
name|ie
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|IOException
name|ie
init|=
operator|new
name|IOException
argument_list|(
literal|"Problem starting HWI server"
argument_list|)
decl_stmt|;
name|ie
operator|.
name|initCause
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|l4j
operator|.
name|error
argument_list|(
literal|"Parsing hwi.listen.port caused exception "
argument_list|,
name|e
argument_list|)
expr_stmt|;
throw|throw
name|ie
throw|;
block|}
block|}
comment|/**    *     * @param args    *          as of now no arguments are supported    * @throws java.lang.Exception    *           Could be thrown if due to issues with Jetty or bad configuration    *           options    *     */
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|HWIServer
name|hwi
init|=
operator|new
name|HWIServer
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|l4j
operator|.
name|info
argument_list|(
literal|"HWI is starting up"
argument_list|)
expr_stmt|;
name|hwi
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
comment|/**    * Shut down the running HWI Server.    *     * @throws Exception    *           Running Thread.stop() can and probably will throw this    */
specifier|public
name|void
name|stop
parameter_list|()
throws|throws
name|Exception
block|{
name|l4j
operator|.
name|info
argument_list|(
literal|"HWI is shutting down"
argument_list|)
expr_stmt|;
name|webServer
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

