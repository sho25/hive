begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|hwi
package|;
end_package

begin_comment
comment|/**  * Represents an authenticated user. This class is stored in the users session.  * It is also used as a key for the HiveSessionManager  */
end_comment

begin_class
specifier|public
class|class
name|HWIAuth
implements|implements
name|Comparable
block|{
specifier|private
name|String
name|user
decl_stmt|;
specifier|private
name|String
index|[]
name|groups
decl_stmt|;
specifier|public
name|HWIAuth
parameter_list|()
block|{    }
specifier|public
name|String
name|getUser
parameter_list|()
block|{
return|return
name|user
return|;
block|}
specifier|public
name|void
name|setUser
parameter_list|(
name|String
name|user
parameter_list|)
block|{
name|this
operator|.
name|user
operator|=
name|user
expr_stmt|;
block|}
specifier|public
name|String
index|[]
name|getGroups
parameter_list|()
block|{
return|return
name|groups
return|;
block|}
specifier|public
name|void
name|setGroups
parameter_list|(
name|String
index|[]
name|groups
parameter_list|)
block|{
name|this
operator|.
name|groups
operator|=
name|groups
expr_stmt|;
block|}
comment|/**    * HWIAuth is used in SortedSets(s) the compartTo method is required    *     * @return chained call to String.compareTo based on user property    */
specifier|public
name|int
name|compareTo
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
literal|null
condition|)
block|{
return|return
operator|-
literal|1
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|HWIAuth
operator|)
condition|)
block|{
return|return
operator|-
literal|1
return|;
block|}
name|HWIAuth
name|o
init|=
operator|(
name|HWIAuth
operator|)
name|obj
decl_stmt|;
return|return
name|o
operator|.
name|getUser
argument_list|()
operator|.
name|compareTo
argument_list|(
name|user
argument_list|)
return|;
block|}
comment|/**    * HWIAuth is used in Map(s) the hashCode method is required    *     * @see java.lang.Object#hashCode()    */
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
specifier|final
name|int
name|prime
init|=
literal|31
decl_stmt|;
name|int
name|result
init|=
literal|1
decl_stmt|;
name|result
operator|=
name|prime
operator|*
name|result
operator|+
operator|(
operator|(
name|user
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|user
operator|.
name|hashCode
argument_list|()
operator|)
expr_stmt|;
return|return
name|result
return|;
block|}
comment|/**    * HWIAuth is used in Map(s) the equals method is required    *     * @see java.lang.Object#equals(java.lang.Object)    */
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|obj
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|obj
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|HWIAuth
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|HWIAuth
name|other
init|=
operator|(
name|HWIAuth
operator|)
name|obj
decl_stmt|;
if|if
condition|(
name|user
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|other
operator|.
name|user
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|user
operator|.
name|equals
argument_list|(
name|other
operator|.
name|user
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
block|}
end_class

end_unit

