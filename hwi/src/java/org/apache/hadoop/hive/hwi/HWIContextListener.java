begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|hwi
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletContextEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_comment
comment|/**  * After getting a contextInitialized event this component starts an  * instance of the HiveSessionManager.  *  */
end_comment

begin_class
specifier|public
class|class
name|HWIContextListener
implements|implements
name|javax
operator|.
name|servlet
operator|.
name|ServletContextListener
block|{
specifier|protected
specifier|static
specifier|final
name|Log
name|l4j
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|HWIContextListener
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
comment|/**    * The Hive Web Interface manages multiple hive sessions. This event is used to    * start a Runnable, HiveSessionManager as a thread inside the servlet     * container.     * @param sce An event fired by the servlet context on startup    */
specifier|public
name|void
name|contextInitialized
parameter_list|(
name|ServletContextEvent
name|sce
parameter_list|)
block|{
name|ServletContext
name|sc
init|=
name|sce
operator|.
name|getServletContext
argument_list|()
decl_stmt|;
name|HWISessionManager
name|hs
init|=
operator|new
name|HWISessionManager
argument_list|()
decl_stmt|;
name|l4j
operator|.
name|debug
argument_list|(
literal|"HWISessionManager created."
argument_list|)
expr_stmt|;
name|Thread
name|t
init|=
operator|new
name|Thread
argument_list|(
name|hs
argument_list|)
decl_stmt|;
name|t
operator|.
name|start
argument_list|()
expr_stmt|;
name|l4j
operator|.
name|debug
argument_list|(
literal|"HWISessionManager thread started."
argument_list|)
expr_stmt|;
name|sc
operator|.
name|setAttribute
argument_list|(
literal|"hs"
argument_list|,
name|hs
argument_list|)
expr_stmt|;
name|l4j
operator|.
name|debug
argument_list|(
literal|"HWISessionManager placed in application context."
argument_list|)
expr_stmt|;
block|}
comment|/**       * When the Hive Web Interface is closing we locate the Runnable       * HiveSessionManager and set it's internal goOn variable to false. This      * should allow the application to gracefully shutdown.      * @param sce An event fired by the servlet context on context shutdown      */
specifier|public
name|void
name|contextDestroyed
parameter_list|(
name|ServletContextEvent
name|sce
parameter_list|)
block|{
name|ServletContext
name|sc
init|=
name|sce
operator|.
name|getServletContext
argument_list|()
decl_stmt|;
name|HWISessionManager
name|hs
init|=
operator|(
name|HWISessionManager
operator|)
name|sc
operator|.
name|getAttribute
argument_list|(
literal|"hs"
argument_list|)
decl_stmt|;
if|if
condition|(
name|hs
operator|==
literal|null
condition|)
block|{
name|l4j
operator|.
name|error
argument_list|(
literal|"HWISessionManager was not found in context"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|l4j
operator|.
name|error
argument_list|(
literal|"HWISessionManager goOn set to false. Shutting down."
argument_list|)
expr_stmt|;
name|hs
operator|.
name|setGoOn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

