begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|streaming
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|LongAdder
import|;
end_import

begin_comment
comment|/**  * Store statistics about streaming connection.  */
end_comment

begin_class
specifier|public
class|class
name|ConnectionStats
block|{
specifier|private
name|LongAdder
name|recordsWritten
init|=
operator|new
name|LongAdder
argument_list|()
decl_stmt|;
specifier|private
name|LongAdder
name|recordsSize
init|=
operator|new
name|LongAdder
argument_list|()
decl_stmt|;
specifier|private
name|LongAdder
name|committedTransactions
init|=
operator|new
name|LongAdder
argument_list|()
decl_stmt|;
specifier|private
name|LongAdder
name|abortedTransactions
init|=
operator|new
name|LongAdder
argument_list|()
decl_stmt|;
specifier|private
name|LongAdder
name|autoFlushCount
init|=
operator|new
name|LongAdder
argument_list|()
decl_stmt|;
specifier|private
name|LongAdder
name|metastoreCalls
init|=
operator|new
name|LongAdder
argument_list|()
decl_stmt|;
comment|/**    * Total partitions that have been affected.    */
specifier|private
name|LongAdder
name|totalPartitions
init|=
operator|new
name|LongAdder
argument_list|()
decl_stmt|;
comment|/**    * Number of partitions that where created.    */
specifier|private
name|LongAdder
name|createdPartitions
init|=
operator|new
name|LongAdder
argument_list|()
decl_stmt|;
specifier|public
name|void
name|incrementRecordsWritten
parameter_list|()
block|{
name|recordsWritten
operator|.
name|increment
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|incrementCommittedTransactions
parameter_list|()
block|{
name|committedTransactions
operator|.
name|increment
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|incrementAbortedTransactions
parameter_list|()
block|{
name|abortedTransactions
operator|.
name|increment
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|incrementAutoFlushCount
parameter_list|()
block|{
name|autoFlushCount
operator|.
name|increment
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|incrementMetastoreCalls
parameter_list|()
block|{
name|metastoreCalls
operator|.
name|increment
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|incrementRecordsSize
parameter_list|(
name|long
name|delta
parameter_list|)
block|{
name|recordsSize
operator|.
name|add
argument_list|(
name|delta
argument_list|)
expr_stmt|;
block|}
comment|/**    * Increment by delta the number of created partitions.    * @param delta to increment by.    */
specifier|public
name|void
name|incrementCreatedPartitions
parameter_list|(
name|long
name|delta
parameter_list|)
block|{
name|createdPartitions
operator|.
name|add
argument_list|(
name|delta
argument_list|)
expr_stmt|;
block|}
comment|/**    * Increment by delta the total partitions.    * @param delta to increment by.    */
specifier|public
name|void
name|incrementTotalPartitions
parameter_list|(
name|long
name|delta
parameter_list|)
block|{
name|totalPartitions
operator|.
name|add
argument_list|(
name|delta
argument_list|)
expr_stmt|;
block|}
specifier|public
name|long
name|getRecordsWritten
parameter_list|()
block|{
return|return
name|recordsWritten
operator|.
name|longValue
argument_list|()
return|;
block|}
specifier|public
name|long
name|getRecordsSize
parameter_list|()
block|{
return|return
name|recordsSize
operator|.
name|longValue
argument_list|()
return|;
block|}
specifier|public
name|long
name|getCommittedTransactions
parameter_list|()
block|{
return|return
name|committedTransactions
operator|.
name|longValue
argument_list|()
return|;
block|}
specifier|public
name|long
name|getAbortedTransactions
parameter_list|()
block|{
return|return
name|abortedTransactions
operator|.
name|longValue
argument_list|()
return|;
block|}
specifier|public
name|long
name|getAutoFlushCount
parameter_list|()
block|{
return|return
name|autoFlushCount
operator|.
name|longValue
argument_list|()
return|;
block|}
specifier|public
name|long
name|getMetastoreCalls
parameter_list|()
block|{
return|return
name|metastoreCalls
operator|.
name|longValue
argument_list|()
return|;
block|}
specifier|public
name|LongAdder
name|getTotalPartitions
parameter_list|()
block|{
return|return
name|totalPartitions
return|;
block|}
specifier|public
name|LongAdder
name|getCreatedPartitions
parameter_list|()
block|{
return|return
name|createdPartitions
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"{records-written: "
operator|+
name|recordsWritten
operator|+
literal|", records-size: "
operator|+
name|recordsSize
operator|+
literal|", committed-transactions: "
operator|+
name|committedTransactions
operator|+
literal|", aborted-transactions: "
operator|+
name|abortedTransactions
operator|+
literal|", auto-flushes: "
operator|+
name|autoFlushCount
operator|+
literal|", metastore-calls: "
operator|+
name|metastoreCalls
operator|+
literal|", created-partitions: "
operator|+
name|createdPartitions
operator|+
literal|", total-partitions: "
operator|+
name|totalPartitions
operator|+
literal|" }"
return|;
block|}
block|}
end_class

end_unit

