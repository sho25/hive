begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|api
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|InputSplit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|api
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|api
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|processor
operator|.
name|Pool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|io
operator|.
name|sarg
operator|.
name|SearchArgument
import|;
end_import

begin_class
specifier|public
class|class
name|RequestImpl
implements|implements
name|Request
block|{
specifier|private
name|InputSplit
name|split
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Integer
argument_list|>
name|includedColumnIds
init|=
literal|null
decl_stmt|;
comment|// null means all columns
specifier|private
name|SearchArgument
name|sarg
init|=
literal|null
decl_stmt|;
specifier|private
specifier|final
name|Pool
name|processorPool
decl_stmt|;
specifier|public
name|RequestImpl
parameter_list|(
name|Pool
name|processorPool
parameter_list|)
block|{
name|this
operator|.
name|processorPool
operator|=
name|processorPool
expr_stmt|;
block|}
specifier|public
name|Reader
name|submit
parameter_list|()
block|{
name|ReaderImpl
name|reader
init|=
operator|new
name|ReaderImpl
argument_list|()
decl_stmt|;
name|processorPool
operator|.
name|enqueue
argument_list|(
name|this
argument_list|,
name|reader
argument_list|)
expr_stmt|;
return|return
name|reader
return|;
block|}
specifier|public
name|Request
name|setSplit
parameter_list|(
name|InputSplit
name|split
parameter_list|)
block|{
name|this
operator|.
name|split
operator|=
name|split
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|InputSplit
name|getSplit
parameter_list|()
block|{
return|return
name|split
return|;
block|}
specifier|public
name|Request
name|setColumns
parameter_list|(
name|List
argument_list|<
name|Integer
argument_list|>
name|columnIds
parameter_list|)
block|{
name|this
operator|.
name|includedColumnIds
operator|=
name|columnIds
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|List
argument_list|<
name|Integer
argument_list|>
name|getColumns
parameter_list|()
block|{
return|return
name|includedColumnIds
return|;
block|}
specifier|public
name|Request
name|setSarg
parameter_list|(
name|SearchArgument
name|sarg
parameter_list|)
block|{
name|this
operator|.
name|sarg
operator|=
name|sarg
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|SearchArgument
name|getSarg
parameter_list|()
block|{
return|return
name|sarg
return|;
block|}
block|}
end_class

end_unit

