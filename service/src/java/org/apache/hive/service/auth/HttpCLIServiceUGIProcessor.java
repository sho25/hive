begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|auth
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PrivilegedExceptionAction
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|shims
operator|.
name|HadoopShims
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|shims
operator|.
name|ShimLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|session
operator|.
name|SessionManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|TException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|TProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|protocol
operator|.
name|TProtocol
import|;
end_import

begin_comment
comment|/**  *  * Wraps the underlying thrift processor's process call,  * to assume the client user's UGI/Subject for the doAs calls.  * Gets the client's username from a threadlocal in SessionManager which is  * set in the ThriftHttpServlet, and constructs a client UGI object from that.  *  */
end_comment

begin_class
specifier|public
class|class
name|HttpCLIServiceUGIProcessor
implements|implements
name|TProcessor
block|{
specifier|private
specifier|final
name|TProcessor
name|underlyingProcessor
decl_stmt|;
specifier|private
specifier|final
name|HadoopShims
name|shim
decl_stmt|;
specifier|public
name|HttpCLIServiceUGIProcessor
parameter_list|(
name|TProcessor
name|underlyingProcessor
parameter_list|)
block|{
name|this
operator|.
name|underlyingProcessor
operator|=
name|underlyingProcessor
expr_stmt|;
name|this
operator|.
name|shim
operator|=
name|ShimLoader
operator|.
name|getHadoopShims
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|process
parameter_list|(
specifier|final
name|TProtocol
name|in
parameter_list|,
specifier|final
name|TProtocol
name|out
parameter_list|)
throws|throws
name|TException
block|{
comment|/**      * Build the client UGI from threadlocal username [SessionManager.getUserName()].      * The threadlocal username is set in the ThriftHttpServlet.      */
name|UserGroupInformation
name|clientUgi
init|=
literal|null
decl_stmt|;
try|try
block|{
name|clientUgi
operator|=
name|shim
operator|.
name|createRemoteUser
argument_list|(
name|SessionManager
operator|.
name|getUserName
argument_list|()
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|shim
operator|.
name|doAs
argument_list|(
name|clientUgi
argument_list|,
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Boolean
name|run
parameter_list|()
block|{
try|try
block|{
return|return
name|underlyingProcessor
operator|.
name|process
argument_list|(
name|in
argument_list|,
name|out
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|TException
name|te
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|te
argument_list|)
throw|;
block|}
block|}
block|}
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|rte
parameter_list|)
block|{
if|if
condition|(
name|rte
operator|.
name|getCause
argument_list|()
operator|instanceof
name|TException
condition|)
block|{
throw|throw
operator|(
name|TException
operator|)
name|rte
operator|.
name|getCause
argument_list|()
throw|;
block|}
throw|throw
name|rte
throw|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|ie
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|ie
argument_list|)
throw|;
comment|// unexpected!
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|ioe
argument_list|)
throw|;
comment|// unexpected!
block|}
block|}
block|}
end_class

end_unit

