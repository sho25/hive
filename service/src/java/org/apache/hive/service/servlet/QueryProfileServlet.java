begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|servlet
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|QueryInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|operation
operator|.
name|OperationManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|session
operator|.
name|SessionManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|tmpl
operator|.
name|QueryProfileTmpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServlet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * Renders a query page  */
end_comment

begin_class
specifier|public
class|class
name|QueryProfileServlet
extends|extends
name|HttpServlet
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|QueryProfileServlet
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|doGet
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|ServletException
throws|,
name|IOException
block|{
name|String
name|opId
init|=
operator|(
name|String
operator|)
name|request
operator|.
name|getParameter
argument_list|(
literal|"operationId"
argument_list|)
decl_stmt|;
name|ServletContext
name|ctx
init|=
name|getServletContext
argument_list|()
decl_stmt|;
name|SessionManager
name|sessionManager
init|=
operator|(
name|SessionManager
operator|)
name|ctx
operator|.
name|getAttribute
argument_list|(
literal|"hive.sm"
argument_list|)
decl_stmt|;
name|OperationManager
name|opManager
init|=
name|sessionManager
operator|.
name|getOperationManager
argument_list|()
decl_stmt|;
name|QueryInfo
name|queryInfo
init|=
name|opManager
operator|.
name|getQueryInfo
argument_list|(
name|opId
argument_list|)
decl_stmt|;
if|if
condition|(
name|queryInfo
operator|==
literal|null
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"No display object found for operation {} "
argument_list|,
name|opId
argument_list|)
expr_stmt|;
return|return;
block|}
operator|new
name|QueryProfileTmpl
argument_list|()
operator|.
name|render
argument_list|(
name|response
operator|.
name|getWriter
argument_list|()
argument_list|,
name|queryInfo
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

