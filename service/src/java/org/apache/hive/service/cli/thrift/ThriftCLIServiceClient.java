begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|thrift
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|auth
operator|.
name|HiveAuthFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|CLIServiceClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|FetchOrientation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|FetchType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|GetInfoType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|GetInfoValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|HiveSQLException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|OperationHandle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|OperationState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|OperationStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|RowSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|RowSetFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|SessionHandle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|TableSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TCLIService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TCancelDelegationTokenReq
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TCancelDelegationTokenResp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TCancelOperationReq
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TCancelOperationResp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TCloseOperationReq
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TCloseOperationResp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TCloseSessionReq
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TCloseSessionResp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TExecuteStatementReq
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TExecuteStatementResp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TFetchResultsReq
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TFetchResultsResp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetCatalogsReq
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetCatalogsResp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetColumnsReq
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetColumnsResp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetCrossReferenceReq
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetCrossReferenceResp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetDelegationTokenReq
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetDelegationTokenResp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetFunctionsReq
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetFunctionsResp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetInfoReq
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetInfoResp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetOperationStatusReq
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetOperationStatusResp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetPrimaryKeysReq
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetPrimaryKeysResp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetResultSetMetadataReq
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetResultSetMetadataResp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetSchemasReq
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetSchemasResp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetTableTypesReq
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetTableTypesResp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetTablesReq
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetTablesResp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetTypeInfoReq
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TGetTypeInfoResp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TOpenSessionReq
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TOpenSessionResp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TProtocolVersion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TRenewDelegationTokenReq
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TRenewDelegationTokenResp
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TStatusCode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|TException
import|;
end_import

begin_comment
comment|/**  * ThriftCLIServiceClient.  *  */
end_comment

begin_class
specifier|public
class|class
name|ThriftCLIServiceClient
extends|extends
name|CLIServiceClient
block|{
specifier|private
specifier|final
name|TCLIService
operator|.
name|Iface
name|cliService
decl_stmt|;
specifier|public
name|ThriftCLIServiceClient
parameter_list|(
name|TCLIService
operator|.
name|Iface
name|cliService
parameter_list|)
block|{
name|this
operator|.
name|cliService
operator|=
name|cliService
expr_stmt|;
block|}
specifier|public
name|void
name|checkStatus
parameter_list|(
name|TStatus
name|status
parameter_list|)
throws|throws
name|HiveSQLException
block|{
if|if
condition|(
name|TStatusCode
operator|.
name|ERROR_STATUS
operator|.
name|equals
argument_list|(
name|status
operator|.
name|getStatusCode
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|HiveSQLException
argument_list|(
name|status
argument_list|)
throw|;
block|}
block|}
comment|/* (non-Javadoc)    * @see org.apache.hive.service.cli.ICLIService#openSession(java.lang.String, java.lang.String, java.util.Map)    */
annotation|@
name|Override
specifier|public
name|SessionHandle
name|openSession
parameter_list|(
name|String
name|username
parameter_list|,
name|String
name|password
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|configuration
parameter_list|)
throws|throws
name|HiveSQLException
block|{
try|try
block|{
name|TOpenSessionReq
name|req
init|=
operator|new
name|TOpenSessionReq
argument_list|()
decl_stmt|;
name|req
operator|.
name|setUsername
argument_list|(
name|username
argument_list|)
expr_stmt|;
name|req
operator|.
name|setPassword
argument_list|(
name|password
argument_list|)
expr_stmt|;
name|req
operator|.
name|setConfiguration
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|TOpenSessionResp
name|resp
init|=
name|cliService
operator|.
name|OpenSession
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|checkStatus
argument_list|(
name|resp
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
return|return
operator|new
name|SessionHandle
argument_list|(
name|resp
operator|.
name|getSessionHandle
argument_list|()
argument_list|,
name|resp
operator|.
name|getServerProtocolVersion
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|HiveSQLException
name|e
parameter_list|)
block|{
throw|throw
name|e
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HiveSQLException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
comment|/* (non-Javadoc)    * @see org.apache.hive.service.cli.ICLIService#closeSession(org.apache.hive.service.cli.SessionHandle)    */
annotation|@
name|Override
specifier|public
name|SessionHandle
name|openSessionWithImpersonation
parameter_list|(
name|String
name|username
parameter_list|,
name|String
name|password
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|configuration
parameter_list|,
name|String
name|delegationToken
parameter_list|)
throws|throws
name|HiveSQLException
block|{
throw|throw
operator|new
name|HiveSQLException
argument_list|(
literal|"open with impersonation operation is not supported in the client"
argument_list|)
throw|;
block|}
comment|/* (non-Javadoc)    * @see org.apache.hive.service.cli.ICLIService#closeSession(org.apache.hive.service.cli.SessionHandle)    */
annotation|@
name|Override
specifier|public
name|void
name|closeSession
parameter_list|(
name|SessionHandle
name|sessionHandle
parameter_list|)
throws|throws
name|HiveSQLException
block|{
try|try
block|{
name|TCloseSessionReq
name|req
init|=
operator|new
name|TCloseSessionReq
argument_list|(
name|sessionHandle
operator|.
name|toTSessionHandle
argument_list|()
argument_list|)
decl_stmt|;
name|TCloseSessionResp
name|resp
init|=
name|cliService
operator|.
name|CloseSession
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|checkStatus
argument_list|(
name|resp
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|HiveSQLException
name|e
parameter_list|)
block|{
throw|throw
name|e
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HiveSQLException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
comment|/* (non-Javadoc)    * @see org.apache.hive.service.cli.ICLIService#getInfo(org.apache.hive.service.cli.SessionHandle, java.util.List)    */
annotation|@
name|Override
specifier|public
name|GetInfoValue
name|getInfo
parameter_list|(
name|SessionHandle
name|sessionHandle
parameter_list|,
name|GetInfoType
name|infoType
parameter_list|)
throws|throws
name|HiveSQLException
block|{
try|try
block|{
comment|// FIXME extract the right info type
name|TGetInfoReq
name|req
init|=
operator|new
name|TGetInfoReq
argument_list|(
name|sessionHandle
operator|.
name|toTSessionHandle
argument_list|()
argument_list|,
name|infoType
operator|.
name|toTGetInfoType
argument_list|()
argument_list|)
decl_stmt|;
name|TGetInfoResp
name|resp
init|=
name|cliService
operator|.
name|GetInfo
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|checkStatus
argument_list|(
name|resp
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
return|return
operator|new
name|GetInfoValue
argument_list|(
name|resp
operator|.
name|getInfoValue
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|HiveSQLException
name|e
parameter_list|)
block|{
throw|throw
name|e
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HiveSQLException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|OperationHandle
name|executeStatement
parameter_list|(
name|SessionHandle
name|sessionHandle
parameter_list|,
name|String
name|statement
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|confOverlay
parameter_list|)
throws|throws
name|HiveSQLException
block|{
return|return
name|executeStatementInternal
argument_list|(
name|sessionHandle
argument_list|,
name|statement
argument_list|,
name|confOverlay
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|OperationHandle
name|executeStatement
parameter_list|(
name|SessionHandle
name|sessionHandle
parameter_list|,
name|String
name|statement
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|confOverlay
parameter_list|,
name|long
name|queryTimeout
parameter_list|)
throws|throws
name|HiveSQLException
block|{
return|return
name|executeStatementInternal
argument_list|(
name|sessionHandle
argument_list|,
name|statement
argument_list|,
name|confOverlay
argument_list|,
literal|false
argument_list|,
name|queryTimeout
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|OperationHandle
name|executeStatementAsync
parameter_list|(
name|SessionHandle
name|sessionHandle
parameter_list|,
name|String
name|statement
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|confOverlay
parameter_list|)
throws|throws
name|HiveSQLException
block|{
return|return
name|executeStatementInternal
argument_list|(
name|sessionHandle
argument_list|,
name|statement
argument_list|,
name|confOverlay
argument_list|,
literal|true
argument_list|,
literal|0
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|OperationHandle
name|executeStatementAsync
parameter_list|(
name|SessionHandle
name|sessionHandle
parameter_list|,
name|String
name|statement
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|confOverlay
parameter_list|,
name|long
name|queryTimeout
parameter_list|)
throws|throws
name|HiveSQLException
block|{
return|return
name|executeStatementInternal
argument_list|(
name|sessionHandle
argument_list|,
name|statement
argument_list|,
name|confOverlay
argument_list|,
literal|true
argument_list|,
name|queryTimeout
argument_list|)
return|;
block|}
specifier|private
name|OperationHandle
name|executeStatementInternal
parameter_list|(
name|SessionHandle
name|sessionHandle
parameter_list|,
name|String
name|statement
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|confOverlay
parameter_list|,
name|boolean
name|isAsync
parameter_list|,
name|long
name|queryTimeout
parameter_list|)
throws|throws
name|HiveSQLException
block|{
try|try
block|{
name|TExecuteStatementReq
name|req
init|=
operator|new
name|TExecuteStatementReq
argument_list|(
name|sessionHandle
operator|.
name|toTSessionHandle
argument_list|()
argument_list|,
name|statement
argument_list|)
decl_stmt|;
name|req
operator|.
name|setConfOverlay
argument_list|(
name|confOverlay
argument_list|)
expr_stmt|;
name|req
operator|.
name|setRunAsync
argument_list|(
name|isAsync
argument_list|)
expr_stmt|;
name|req
operator|.
name|setQueryTimeout
argument_list|(
name|queryTimeout
argument_list|)
expr_stmt|;
name|TExecuteStatementResp
name|resp
init|=
name|cliService
operator|.
name|ExecuteStatement
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|checkStatus
argument_list|(
name|resp
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|TProtocolVersion
name|protocol
init|=
name|sessionHandle
operator|.
name|getProtocolVersion
argument_list|()
decl_stmt|;
return|return
operator|new
name|OperationHandle
argument_list|(
name|resp
operator|.
name|getOperationHandle
argument_list|()
argument_list|,
name|protocol
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|HiveSQLException
name|e
parameter_list|)
block|{
throw|throw
name|e
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HiveSQLException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
comment|/* (non-Javadoc)    * @see org.apache.hive.service.cli.ICLIService#getTypeInfo(org.apache.hive.service.cli.SessionHandle)    */
annotation|@
name|Override
specifier|public
name|OperationHandle
name|getTypeInfo
parameter_list|(
name|SessionHandle
name|sessionHandle
parameter_list|)
throws|throws
name|HiveSQLException
block|{
try|try
block|{
name|TGetTypeInfoReq
name|req
init|=
operator|new
name|TGetTypeInfoReq
argument_list|(
name|sessionHandle
operator|.
name|toTSessionHandle
argument_list|()
argument_list|)
decl_stmt|;
name|TGetTypeInfoResp
name|resp
init|=
name|cliService
operator|.
name|GetTypeInfo
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|checkStatus
argument_list|(
name|resp
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|TProtocolVersion
name|protocol
init|=
name|sessionHandle
operator|.
name|getProtocolVersion
argument_list|()
decl_stmt|;
return|return
operator|new
name|OperationHandle
argument_list|(
name|resp
operator|.
name|getOperationHandle
argument_list|()
argument_list|,
name|protocol
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|HiveSQLException
name|e
parameter_list|)
block|{
throw|throw
name|e
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HiveSQLException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
comment|/* (non-Javadoc)    * @see org.apache.hive.service.cli.ICLIService#getCatalogs(org.apache.hive.service.cli.SessionHandle)    */
annotation|@
name|Override
specifier|public
name|OperationHandle
name|getCatalogs
parameter_list|(
name|SessionHandle
name|sessionHandle
parameter_list|)
throws|throws
name|HiveSQLException
block|{
try|try
block|{
name|TGetCatalogsReq
name|req
init|=
operator|new
name|TGetCatalogsReq
argument_list|(
name|sessionHandle
operator|.
name|toTSessionHandle
argument_list|()
argument_list|)
decl_stmt|;
name|TGetCatalogsResp
name|resp
init|=
name|cliService
operator|.
name|GetCatalogs
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|checkStatus
argument_list|(
name|resp
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|TProtocolVersion
name|protocol
init|=
name|sessionHandle
operator|.
name|getProtocolVersion
argument_list|()
decl_stmt|;
return|return
operator|new
name|OperationHandle
argument_list|(
name|resp
operator|.
name|getOperationHandle
argument_list|()
argument_list|,
name|protocol
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|HiveSQLException
name|e
parameter_list|)
block|{
throw|throw
name|e
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HiveSQLException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
comment|/* (non-Javadoc)    * @see org.apache.hive.service.cli.ICLIService#getSchemas(org.apache.hive.service.cli.SessionHandle, java.lang.String, java.lang.String)    */
annotation|@
name|Override
specifier|public
name|OperationHandle
name|getSchemas
parameter_list|(
name|SessionHandle
name|sessionHandle
parameter_list|,
name|String
name|catalogName
parameter_list|,
name|String
name|schemaName
parameter_list|)
throws|throws
name|HiveSQLException
block|{
try|try
block|{
name|TGetSchemasReq
name|req
init|=
operator|new
name|TGetSchemasReq
argument_list|(
name|sessionHandle
operator|.
name|toTSessionHandle
argument_list|()
argument_list|)
decl_stmt|;
name|req
operator|.
name|setCatalogName
argument_list|(
name|catalogName
argument_list|)
expr_stmt|;
name|req
operator|.
name|setSchemaName
argument_list|(
name|schemaName
argument_list|)
expr_stmt|;
name|TGetSchemasResp
name|resp
init|=
name|cliService
operator|.
name|GetSchemas
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|checkStatus
argument_list|(
name|resp
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|TProtocolVersion
name|protocol
init|=
name|sessionHandle
operator|.
name|getProtocolVersion
argument_list|()
decl_stmt|;
return|return
operator|new
name|OperationHandle
argument_list|(
name|resp
operator|.
name|getOperationHandle
argument_list|()
argument_list|,
name|protocol
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|HiveSQLException
name|e
parameter_list|)
block|{
throw|throw
name|e
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HiveSQLException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
comment|/* (non-Javadoc)    * @see org.apache.hive.service.cli.ICLIService#getTables(org.apache.hive.service.cli.SessionHandle, java.lang.String, java.lang.String, java.lang.String, java.util.List)    */
annotation|@
name|Override
specifier|public
name|OperationHandle
name|getTables
parameter_list|(
name|SessionHandle
name|sessionHandle
parameter_list|,
name|String
name|catalogName
parameter_list|,
name|String
name|schemaName
parameter_list|,
name|String
name|tableName
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|tableTypes
parameter_list|)
throws|throws
name|HiveSQLException
block|{
try|try
block|{
name|TGetTablesReq
name|req
init|=
operator|new
name|TGetTablesReq
argument_list|(
name|sessionHandle
operator|.
name|toTSessionHandle
argument_list|()
argument_list|)
decl_stmt|;
name|req
operator|.
name|setTableName
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
name|req
operator|.
name|setTableTypes
argument_list|(
name|tableTypes
argument_list|)
expr_stmt|;
name|req
operator|.
name|setSchemaName
argument_list|(
name|schemaName
argument_list|)
expr_stmt|;
name|TGetTablesResp
name|resp
init|=
name|cliService
operator|.
name|GetTables
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|checkStatus
argument_list|(
name|resp
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|TProtocolVersion
name|protocol
init|=
name|sessionHandle
operator|.
name|getProtocolVersion
argument_list|()
decl_stmt|;
return|return
operator|new
name|OperationHandle
argument_list|(
name|resp
operator|.
name|getOperationHandle
argument_list|()
argument_list|,
name|protocol
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|HiveSQLException
name|e
parameter_list|)
block|{
throw|throw
name|e
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HiveSQLException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
comment|/* (non-Javadoc)    * @see org.apache.hive.service.cli.ICLIService#getTableTypes(org.apache.hive.service.cli.SessionHandle)    */
annotation|@
name|Override
specifier|public
name|OperationHandle
name|getTableTypes
parameter_list|(
name|SessionHandle
name|sessionHandle
parameter_list|)
throws|throws
name|HiveSQLException
block|{
try|try
block|{
name|TGetTableTypesReq
name|req
init|=
operator|new
name|TGetTableTypesReq
argument_list|(
name|sessionHandle
operator|.
name|toTSessionHandle
argument_list|()
argument_list|)
decl_stmt|;
name|TGetTableTypesResp
name|resp
init|=
name|cliService
operator|.
name|GetTableTypes
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|checkStatus
argument_list|(
name|resp
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|TProtocolVersion
name|protocol
init|=
name|sessionHandle
operator|.
name|getProtocolVersion
argument_list|()
decl_stmt|;
return|return
operator|new
name|OperationHandle
argument_list|(
name|resp
operator|.
name|getOperationHandle
argument_list|()
argument_list|,
name|protocol
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|HiveSQLException
name|e
parameter_list|)
block|{
throw|throw
name|e
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HiveSQLException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
comment|/* (non-Javadoc)    * @see org.apache.hive.service.cli.ICLIService#getColumns(org.apache.hive.service.cli.SessionHandle)    */
annotation|@
name|Override
specifier|public
name|OperationHandle
name|getColumns
parameter_list|(
name|SessionHandle
name|sessionHandle
parameter_list|,
name|String
name|catalogName
parameter_list|,
name|String
name|schemaName
parameter_list|,
name|String
name|tableName
parameter_list|,
name|String
name|columnName
parameter_list|)
throws|throws
name|HiveSQLException
block|{
try|try
block|{
name|TGetColumnsReq
name|req
init|=
operator|new
name|TGetColumnsReq
argument_list|()
decl_stmt|;
name|req
operator|.
name|setSessionHandle
argument_list|(
name|sessionHandle
operator|.
name|toTSessionHandle
argument_list|()
argument_list|)
expr_stmt|;
name|req
operator|.
name|setCatalogName
argument_list|(
name|catalogName
argument_list|)
expr_stmt|;
name|req
operator|.
name|setSchemaName
argument_list|(
name|schemaName
argument_list|)
expr_stmt|;
name|req
operator|.
name|setTableName
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
name|req
operator|.
name|setColumnName
argument_list|(
name|columnName
argument_list|)
expr_stmt|;
name|TGetColumnsResp
name|resp
init|=
name|cliService
operator|.
name|GetColumns
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|checkStatus
argument_list|(
name|resp
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|TProtocolVersion
name|protocol
init|=
name|sessionHandle
operator|.
name|getProtocolVersion
argument_list|()
decl_stmt|;
return|return
operator|new
name|OperationHandle
argument_list|(
name|resp
operator|.
name|getOperationHandle
argument_list|()
argument_list|,
name|protocol
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|HiveSQLException
name|e
parameter_list|)
block|{
throw|throw
name|e
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HiveSQLException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
comment|/* (non-Javadoc)    * @see org.apache.hive.service.cli.ICLIService#getFunctions(org.apache.hive.service.cli.SessionHandle)    */
annotation|@
name|Override
specifier|public
name|OperationHandle
name|getFunctions
parameter_list|(
name|SessionHandle
name|sessionHandle
parameter_list|,
name|String
name|catalogName
parameter_list|,
name|String
name|schemaName
parameter_list|,
name|String
name|functionName
parameter_list|)
throws|throws
name|HiveSQLException
block|{
try|try
block|{
name|TGetFunctionsReq
name|req
init|=
operator|new
name|TGetFunctionsReq
argument_list|(
name|sessionHandle
operator|.
name|toTSessionHandle
argument_list|()
argument_list|,
name|functionName
argument_list|)
decl_stmt|;
name|req
operator|.
name|setCatalogName
argument_list|(
name|catalogName
argument_list|)
expr_stmt|;
name|req
operator|.
name|setSchemaName
argument_list|(
name|schemaName
argument_list|)
expr_stmt|;
name|TGetFunctionsResp
name|resp
init|=
name|cliService
operator|.
name|GetFunctions
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|checkStatus
argument_list|(
name|resp
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|TProtocolVersion
name|protocol
init|=
name|sessionHandle
operator|.
name|getProtocolVersion
argument_list|()
decl_stmt|;
return|return
operator|new
name|OperationHandle
argument_list|(
name|resp
operator|.
name|getOperationHandle
argument_list|()
argument_list|,
name|protocol
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|HiveSQLException
name|e
parameter_list|)
block|{
throw|throw
name|e
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HiveSQLException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
comment|/* (non-Javadoc)    * @see org.apache.hive.service.cli.ICLIService#getOperationStatus(org.apache.hive.service.cli.OperationHandle)    */
annotation|@
name|Override
specifier|public
name|OperationStatus
name|getOperationStatus
parameter_list|(
name|OperationHandle
name|opHandle
parameter_list|)
throws|throws
name|HiveSQLException
block|{
try|try
block|{
name|TGetOperationStatusReq
name|req
init|=
operator|new
name|TGetOperationStatusReq
argument_list|(
name|opHandle
operator|.
name|toTOperationHandle
argument_list|()
argument_list|)
decl_stmt|;
name|TGetOperationStatusResp
name|resp
init|=
name|cliService
operator|.
name|GetOperationStatus
argument_list|(
name|req
argument_list|)
decl_stmt|;
comment|// Checks the status of the RPC call, throws an exception in case of error
name|checkStatus
argument_list|(
name|resp
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|OperationState
name|opState
init|=
name|OperationState
operator|.
name|getOperationState
argument_list|(
name|resp
operator|.
name|getOperationState
argument_list|()
argument_list|)
decl_stmt|;
name|HiveSQLException
name|opException
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|opState
operator|==
name|OperationState
operator|.
name|ERROR
condition|)
block|{
name|opException
operator|=
operator|new
name|HiveSQLException
argument_list|(
name|resp
operator|.
name|getErrorMessage
argument_list|()
argument_list|,
name|resp
operator|.
name|getSqlState
argument_list|()
argument_list|,
name|resp
operator|.
name|getErrorCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|OperationStatus
argument_list|(
name|opState
argument_list|,
name|resp
operator|.
name|getTaskStatus
argument_list|()
argument_list|,
name|resp
operator|.
name|getOperationStarted
argument_list|()
argument_list|,
name|resp
operator|.
name|getOperationCompleted
argument_list|()
argument_list|,
name|opException
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|HiveSQLException
name|e
parameter_list|)
block|{
throw|throw
name|e
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HiveSQLException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
comment|/* (non-Javadoc)    * @see org.apache.hive.service.cli.ICLIService#cancelOperation(org.apache.hive.service.cli.OperationHandle)    */
annotation|@
name|Override
specifier|public
name|void
name|cancelOperation
parameter_list|(
name|OperationHandle
name|opHandle
parameter_list|)
throws|throws
name|HiveSQLException
block|{
try|try
block|{
name|TCancelOperationReq
name|req
init|=
operator|new
name|TCancelOperationReq
argument_list|(
name|opHandle
operator|.
name|toTOperationHandle
argument_list|()
argument_list|)
decl_stmt|;
name|TCancelOperationResp
name|resp
init|=
name|cliService
operator|.
name|CancelOperation
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|checkStatus
argument_list|(
name|resp
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|HiveSQLException
name|e
parameter_list|)
block|{
throw|throw
name|e
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HiveSQLException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
comment|/* (non-Javadoc)    * @see org.apache.hive.service.cli.ICLIService#closeOperation(org.apache.hive.service.cli.OperationHandle)    */
annotation|@
name|Override
specifier|public
name|void
name|closeOperation
parameter_list|(
name|OperationHandle
name|opHandle
parameter_list|)
throws|throws
name|HiveSQLException
block|{
try|try
block|{
name|TCloseOperationReq
name|req
init|=
operator|new
name|TCloseOperationReq
argument_list|(
name|opHandle
operator|.
name|toTOperationHandle
argument_list|()
argument_list|)
decl_stmt|;
name|TCloseOperationResp
name|resp
init|=
name|cliService
operator|.
name|CloseOperation
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|checkStatus
argument_list|(
name|resp
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|HiveSQLException
name|e
parameter_list|)
block|{
throw|throw
name|e
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HiveSQLException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
comment|/* (non-Javadoc)    * @see org.apache.hive.service.cli.ICLIService#getResultSetMetadata(org.apache.hive.service.cli.OperationHandle)    */
annotation|@
name|Override
specifier|public
name|TableSchema
name|getResultSetMetadata
parameter_list|(
name|OperationHandle
name|opHandle
parameter_list|)
throws|throws
name|HiveSQLException
block|{
try|try
block|{
name|TGetResultSetMetadataReq
name|req
init|=
operator|new
name|TGetResultSetMetadataReq
argument_list|(
name|opHandle
operator|.
name|toTOperationHandle
argument_list|()
argument_list|)
decl_stmt|;
name|TGetResultSetMetadataResp
name|resp
init|=
name|cliService
operator|.
name|GetResultSetMetadata
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|checkStatus
argument_list|(
name|resp
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
return|return
operator|new
name|TableSchema
argument_list|(
name|resp
operator|.
name|getSchema
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|HiveSQLException
name|e
parameter_list|)
block|{
throw|throw
name|e
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HiveSQLException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|RowSet
name|fetchResults
parameter_list|(
name|OperationHandle
name|opHandle
parameter_list|,
name|FetchOrientation
name|orientation
parameter_list|,
name|long
name|maxRows
parameter_list|,
name|FetchType
name|fetchType
parameter_list|)
throws|throws
name|HiveSQLException
block|{
try|try
block|{
name|TFetchResultsReq
name|req
init|=
operator|new
name|TFetchResultsReq
argument_list|()
decl_stmt|;
name|req
operator|.
name|setOperationHandle
argument_list|(
name|opHandle
operator|.
name|toTOperationHandle
argument_list|()
argument_list|)
expr_stmt|;
name|req
operator|.
name|setOrientation
argument_list|(
name|orientation
operator|.
name|toTFetchOrientation
argument_list|()
argument_list|)
expr_stmt|;
name|req
operator|.
name|setMaxRows
argument_list|(
name|maxRows
argument_list|)
expr_stmt|;
name|req
operator|.
name|setFetchType
argument_list|(
name|fetchType
operator|.
name|toTFetchType
argument_list|()
argument_list|)
expr_stmt|;
name|TFetchResultsResp
name|resp
init|=
name|cliService
operator|.
name|FetchResults
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|checkStatus
argument_list|(
name|resp
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|RowSetFactory
operator|.
name|create
argument_list|(
name|resp
operator|.
name|getResults
argument_list|()
argument_list|,
name|opHandle
operator|.
name|getProtocolVersion
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|HiveSQLException
name|e
parameter_list|)
block|{
throw|throw
name|e
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HiveSQLException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
comment|/* (non-Javadoc)    * @see org.apache.hive.service.cli.ICLIService#fetchResults(org.apache.hive.service.cli.OperationHandle)    */
annotation|@
name|Override
specifier|public
name|RowSet
name|fetchResults
parameter_list|(
name|OperationHandle
name|opHandle
parameter_list|)
throws|throws
name|HiveSQLException
block|{
comment|// TODO: set the correct default fetch size
return|return
name|fetchResults
argument_list|(
name|opHandle
argument_list|,
name|FetchOrientation
operator|.
name|FETCH_NEXT
argument_list|,
literal|10000
argument_list|,
name|FetchType
operator|.
name|QUERY_OUTPUT
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDelegationToken
parameter_list|(
name|SessionHandle
name|sessionHandle
parameter_list|,
name|HiveAuthFactory
name|authFactory
parameter_list|,
name|String
name|owner
parameter_list|,
name|String
name|renewer
parameter_list|)
throws|throws
name|HiveSQLException
block|{
name|TGetDelegationTokenReq
name|req
init|=
operator|new
name|TGetDelegationTokenReq
argument_list|(
name|sessionHandle
operator|.
name|toTSessionHandle
argument_list|()
argument_list|,
name|owner
argument_list|,
name|renewer
argument_list|)
decl_stmt|;
try|try
block|{
name|TGetDelegationTokenResp
name|tokenResp
init|=
name|cliService
operator|.
name|GetDelegationToken
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|checkStatus
argument_list|(
name|tokenResp
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|tokenResp
operator|.
name|getDelegationToken
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HiveSQLException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|cancelDelegationToken
parameter_list|(
name|SessionHandle
name|sessionHandle
parameter_list|,
name|HiveAuthFactory
name|authFactory
parameter_list|,
name|String
name|tokenStr
parameter_list|)
throws|throws
name|HiveSQLException
block|{
name|TCancelDelegationTokenReq
name|cancelReq
init|=
operator|new
name|TCancelDelegationTokenReq
argument_list|(
name|sessionHandle
operator|.
name|toTSessionHandle
argument_list|()
argument_list|,
name|tokenStr
argument_list|)
decl_stmt|;
try|try
block|{
name|TCancelDelegationTokenResp
name|cancelResp
init|=
name|cliService
operator|.
name|CancelDelegationToken
argument_list|(
name|cancelReq
argument_list|)
decl_stmt|;
name|checkStatus
argument_list|(
name|cancelResp
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
return|return;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HiveSQLException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|renewDelegationToken
parameter_list|(
name|SessionHandle
name|sessionHandle
parameter_list|,
name|HiveAuthFactory
name|authFactory
parameter_list|,
name|String
name|tokenStr
parameter_list|)
throws|throws
name|HiveSQLException
block|{
name|TRenewDelegationTokenReq
name|cancelReq
init|=
operator|new
name|TRenewDelegationTokenReq
argument_list|(
name|sessionHandle
operator|.
name|toTSessionHandle
argument_list|()
argument_list|,
name|tokenStr
argument_list|)
decl_stmt|;
try|try
block|{
name|TRenewDelegationTokenResp
name|renewResp
init|=
name|cliService
operator|.
name|RenewDelegationToken
argument_list|(
name|cancelReq
argument_list|)
decl_stmt|;
name|checkStatus
argument_list|(
name|renewResp
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
return|return;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HiveSQLException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|OperationHandle
name|getPrimaryKeys
parameter_list|(
name|SessionHandle
name|sessionHandle
parameter_list|,
name|String
name|catalog
parameter_list|,
name|String
name|schema
parameter_list|,
name|String
name|table
parameter_list|)
throws|throws
name|HiveSQLException
block|{
try|try
block|{
name|TGetPrimaryKeysReq
name|req
init|=
operator|new
name|TGetPrimaryKeysReq
argument_list|(
name|sessionHandle
operator|.
name|toTSessionHandle
argument_list|()
argument_list|)
decl_stmt|;
name|req
operator|.
name|setCatalogName
argument_list|(
name|catalog
argument_list|)
expr_stmt|;
name|req
operator|.
name|setSchemaName
argument_list|(
name|schema
argument_list|)
expr_stmt|;
name|req
operator|.
name|setTableName
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|TGetPrimaryKeysResp
name|resp
init|=
name|cliService
operator|.
name|GetPrimaryKeys
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|checkStatus
argument_list|(
name|resp
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|TProtocolVersion
name|protocol
init|=
name|sessionHandle
operator|.
name|getProtocolVersion
argument_list|()
decl_stmt|;
return|return
operator|new
name|OperationHandle
argument_list|(
name|resp
operator|.
name|getOperationHandle
argument_list|()
argument_list|,
name|protocol
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|HiveSQLException
name|e
parameter_list|)
block|{
throw|throw
name|e
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HiveSQLException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|OperationHandle
name|getCrossReference
parameter_list|(
name|SessionHandle
name|sessionHandle
parameter_list|,
name|String
name|primaryCatalog
parameter_list|,
name|String
name|primarySchema
parameter_list|,
name|String
name|primaryTable
parameter_list|,
name|String
name|foreignCatalog
parameter_list|,
name|String
name|foreignSchema
parameter_list|,
name|String
name|foreignTable
parameter_list|)
throws|throws
name|HiveSQLException
block|{
try|try
block|{
name|TGetCrossReferenceReq
name|req
init|=
operator|new
name|TGetCrossReferenceReq
argument_list|(
name|sessionHandle
operator|.
name|toTSessionHandle
argument_list|()
argument_list|)
decl_stmt|;
name|req
operator|.
name|setParentCatalogName
argument_list|(
name|primaryCatalog
argument_list|)
expr_stmt|;
name|req
operator|.
name|setParentSchemaName
argument_list|(
name|primarySchema
argument_list|)
expr_stmt|;
name|req
operator|.
name|setParentTableName
argument_list|(
name|primaryTable
argument_list|)
expr_stmt|;
name|req
operator|.
name|setForeignCatalogName
argument_list|(
name|foreignCatalog
argument_list|)
expr_stmt|;
name|req
operator|.
name|setForeignSchemaName
argument_list|(
name|foreignSchema
argument_list|)
expr_stmt|;
name|req
operator|.
name|setForeignTableName
argument_list|(
name|foreignTable
argument_list|)
expr_stmt|;
name|TGetCrossReferenceResp
name|resp
init|=
name|cliService
operator|.
name|GetCrossReference
argument_list|(
name|req
argument_list|)
decl_stmt|;
name|checkStatus
argument_list|(
name|resp
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|TProtocolVersion
name|protocol
init|=
name|sessionHandle
operator|.
name|getProtocolVersion
argument_list|()
decl_stmt|;
return|return
operator|new
name|OperationHandle
argument_list|(
name|resp
operator|.
name|getOperationHandle
argument_list|()
argument_list|,
name|protocol
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|HiveSQLException
name|e
parameter_list|)
block|{
throw|throw
name|e
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HiveSQLException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

