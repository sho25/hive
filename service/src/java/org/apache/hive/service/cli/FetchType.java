begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
package|;
end_package

begin_comment
comment|/**  * FetchType indicates the type of fetchResults request.  * It maps the TFetchType, which is generated from Thrift interface.  */
end_comment

begin_enum
specifier|public
enum|enum
name|FetchType
block|{
name|QUERY_OUTPUT
argument_list|(
operator|(
name|short
operator|)
literal|0
argument_list|)
block|,
name|LOG
argument_list|(
operator|(
name|short
operator|)
literal|1
argument_list|)
block|;
specifier|private
specifier|final
name|short
name|tFetchType
decl_stmt|;
name|FetchType
parameter_list|(
name|short
name|tFetchType
parameter_list|)
block|{
name|this
operator|.
name|tFetchType
operator|=
name|tFetchType
expr_stmt|;
block|}
specifier|public
specifier|static
name|FetchType
name|getFetchType
parameter_list|(
name|short
name|tFetchType
parameter_list|)
block|{
for|for
control|(
name|FetchType
name|fetchType
range|:
name|values
argument_list|()
control|)
block|{
if|if
condition|(
name|tFetchType
operator|==
name|fetchType
operator|.
name|toTFetchType
argument_list|()
condition|)
block|{
return|return
name|fetchType
return|;
block|}
block|}
return|return
name|QUERY_OUTPUT
return|;
block|}
specifier|public
name|short
name|toTFetchType
parameter_list|()
block|{
return|return
name|tFetchType
return|;
block|}
block|}
end_enum

end_unit

