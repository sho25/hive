begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Autogenerated by Thrift  *  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|service
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|meta_data
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|protocol
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|HiveClusterStatus
implements|implements
name|TBase
implements|,
name|java
operator|.
name|io
operator|.
name|Serializable
implements|,
name|Cloneable
block|{
specifier|private
specifier|static
specifier|final
name|TStruct
name|STRUCT_DESC
init|=
operator|new
name|TStruct
argument_list|(
literal|"HiveClusterStatus"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|TField
name|TASK_TRACKERS_FIELD_DESC
init|=
operator|new
name|TField
argument_list|(
literal|"taskTrackers"
argument_list|,
name|TType
operator|.
name|I32
argument_list|,
operator|(
name|short
operator|)
literal|1
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|TField
name|MAP_TASKS_FIELD_DESC
init|=
operator|new
name|TField
argument_list|(
literal|"mapTasks"
argument_list|,
name|TType
operator|.
name|I32
argument_list|,
operator|(
name|short
operator|)
literal|2
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|TField
name|REDUCE_TASKS_FIELD_DESC
init|=
operator|new
name|TField
argument_list|(
literal|"reduceTasks"
argument_list|,
name|TType
operator|.
name|I32
argument_list|,
operator|(
name|short
operator|)
literal|3
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|TField
name|MAX_MAP_TASKS_FIELD_DESC
init|=
operator|new
name|TField
argument_list|(
literal|"maxMapTasks"
argument_list|,
name|TType
operator|.
name|I32
argument_list|,
operator|(
name|short
operator|)
literal|4
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|TField
name|MAX_REDUCE_TASKS_FIELD_DESC
init|=
operator|new
name|TField
argument_list|(
literal|"maxReduceTasks"
argument_list|,
name|TType
operator|.
name|I32
argument_list|,
operator|(
name|short
operator|)
literal|5
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|TField
name|STATE_FIELD_DESC
init|=
operator|new
name|TField
argument_list|(
literal|"state"
argument_list|,
name|TType
operator|.
name|I32
argument_list|,
operator|(
name|short
operator|)
literal|6
argument_list|)
decl_stmt|;
specifier|private
name|int
name|taskTrackers
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|TASKTRACKERS
init|=
literal|1
decl_stmt|;
specifier|private
name|int
name|mapTasks
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|MAPTASKS
init|=
literal|2
decl_stmt|;
specifier|private
name|int
name|reduceTasks
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|REDUCETASKS
init|=
literal|3
decl_stmt|;
specifier|private
name|int
name|maxMapTasks
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|MAXMAPTASKS
init|=
literal|4
decl_stmt|;
specifier|private
name|int
name|maxReduceTasks
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|MAXREDUCETASKS
init|=
literal|5
decl_stmt|;
specifier|private
name|int
name|state
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|STATE
init|=
literal|6
decl_stmt|;
specifier|private
specifier|final
name|Isset
name|__isset
init|=
operator|new
name|Isset
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
class|class
name|Isset
implements|implements
name|java
operator|.
name|io
operator|.
name|Serializable
block|{
specifier|public
name|boolean
name|taskTrackers
init|=
literal|false
decl_stmt|;
specifier|public
name|boolean
name|mapTasks
init|=
literal|false
decl_stmt|;
specifier|public
name|boolean
name|reduceTasks
init|=
literal|false
decl_stmt|;
specifier|public
name|boolean
name|maxMapTasks
init|=
literal|false
decl_stmt|;
specifier|public
name|boolean
name|maxReduceTasks
init|=
literal|false
decl_stmt|;
specifier|public
name|boolean
name|state
init|=
literal|false
decl_stmt|;
block|}
specifier|public
specifier|static
specifier|final
name|Map
argument_list|<
name|Integer
argument_list|,
name|FieldMetaData
argument_list|>
name|metaDataMap
init|=
name|Collections
operator|.
name|unmodifiableMap
argument_list|(
operator|new
name|HashMap
argument_list|<
name|Integer
argument_list|,
name|FieldMetaData
argument_list|>
argument_list|()
block|{
block|{
name|put
argument_list|(
name|TASKTRACKERS
argument_list|,
operator|new
name|FieldMetaData
argument_list|(
literal|"taskTrackers"
argument_list|,
name|TFieldRequirementType
operator|.
name|DEFAULT
argument_list|,
operator|new
name|FieldValueMetaData
argument_list|(
name|TType
operator|.
name|I32
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|put
argument_list|(
name|MAPTASKS
argument_list|,
operator|new
name|FieldMetaData
argument_list|(
literal|"mapTasks"
argument_list|,
name|TFieldRequirementType
operator|.
name|DEFAULT
argument_list|,
operator|new
name|FieldValueMetaData
argument_list|(
name|TType
operator|.
name|I32
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|put
argument_list|(
name|REDUCETASKS
argument_list|,
operator|new
name|FieldMetaData
argument_list|(
literal|"reduceTasks"
argument_list|,
name|TFieldRequirementType
operator|.
name|DEFAULT
argument_list|,
operator|new
name|FieldValueMetaData
argument_list|(
name|TType
operator|.
name|I32
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|put
argument_list|(
name|MAXMAPTASKS
argument_list|,
operator|new
name|FieldMetaData
argument_list|(
literal|"maxMapTasks"
argument_list|,
name|TFieldRequirementType
operator|.
name|DEFAULT
argument_list|,
operator|new
name|FieldValueMetaData
argument_list|(
name|TType
operator|.
name|I32
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|put
argument_list|(
name|MAXREDUCETASKS
argument_list|,
operator|new
name|FieldMetaData
argument_list|(
literal|"maxReduceTasks"
argument_list|,
name|TFieldRequirementType
operator|.
name|DEFAULT
argument_list|,
operator|new
name|FieldValueMetaData
argument_list|(
name|TType
operator|.
name|I32
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|put
argument_list|(
name|STATE
argument_list|,
operator|new
name|FieldMetaData
argument_list|(
literal|"state"
argument_list|,
name|TFieldRequirementType
operator|.
name|DEFAULT
argument_list|,
operator|new
name|FieldValueMetaData
argument_list|(
name|TType
operator|.
name|I32
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
static|static
block|{
name|FieldMetaData
operator|.
name|addStructMetaDataMap
argument_list|(
name|HiveClusterStatus
operator|.
name|class
argument_list|,
name|metaDataMap
argument_list|)
expr_stmt|;
block|}
specifier|public
name|HiveClusterStatus
parameter_list|()
block|{   }
specifier|public
name|HiveClusterStatus
parameter_list|(
name|int
name|taskTrackers
parameter_list|,
name|int
name|mapTasks
parameter_list|,
name|int
name|reduceTasks
parameter_list|,
name|int
name|maxMapTasks
parameter_list|,
name|int
name|maxReduceTasks
parameter_list|,
name|int
name|state
parameter_list|)
block|{
name|this
argument_list|()
expr_stmt|;
name|this
operator|.
name|taskTrackers
operator|=
name|taskTrackers
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|taskTrackers
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|mapTasks
operator|=
name|mapTasks
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|mapTasks
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|reduceTasks
operator|=
name|reduceTasks
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|reduceTasks
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|maxMapTasks
operator|=
name|maxMapTasks
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|maxMapTasks
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|maxReduceTasks
operator|=
name|maxReduceTasks
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|maxReduceTasks
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|state
operator|=
name|state
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|state
operator|=
literal|true
expr_stmt|;
block|}
comment|/**    * Performs a deep copy on<i>other</i>.    */
specifier|public
name|HiveClusterStatus
parameter_list|(
name|HiveClusterStatus
name|other
parameter_list|)
block|{
name|__isset
operator|.
name|taskTrackers
operator|=
name|other
operator|.
name|__isset
operator|.
name|taskTrackers
expr_stmt|;
name|this
operator|.
name|taskTrackers
operator|=
name|other
operator|.
name|taskTrackers
expr_stmt|;
name|__isset
operator|.
name|mapTasks
operator|=
name|other
operator|.
name|__isset
operator|.
name|mapTasks
expr_stmt|;
name|this
operator|.
name|mapTasks
operator|=
name|other
operator|.
name|mapTasks
expr_stmt|;
name|__isset
operator|.
name|reduceTasks
operator|=
name|other
operator|.
name|__isset
operator|.
name|reduceTasks
expr_stmt|;
name|this
operator|.
name|reduceTasks
operator|=
name|other
operator|.
name|reduceTasks
expr_stmt|;
name|__isset
operator|.
name|maxMapTasks
operator|=
name|other
operator|.
name|__isset
operator|.
name|maxMapTasks
expr_stmt|;
name|this
operator|.
name|maxMapTasks
operator|=
name|other
operator|.
name|maxMapTasks
expr_stmt|;
name|__isset
operator|.
name|maxReduceTasks
operator|=
name|other
operator|.
name|__isset
operator|.
name|maxReduceTasks
expr_stmt|;
name|this
operator|.
name|maxReduceTasks
operator|=
name|other
operator|.
name|maxReduceTasks
expr_stmt|;
name|__isset
operator|.
name|state
operator|=
name|other
operator|.
name|__isset
operator|.
name|state
expr_stmt|;
name|this
operator|.
name|state
operator|=
name|other
operator|.
name|state
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|HiveClusterStatus
name|clone
parameter_list|()
block|{
return|return
operator|new
name|HiveClusterStatus
argument_list|(
name|this
argument_list|)
return|;
block|}
specifier|public
name|int
name|getTaskTrackers
parameter_list|()
block|{
return|return
name|this
operator|.
name|taskTrackers
return|;
block|}
specifier|public
name|void
name|setTaskTrackers
parameter_list|(
name|int
name|taskTrackers
parameter_list|)
block|{
name|this
operator|.
name|taskTrackers
operator|=
name|taskTrackers
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|taskTrackers
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|void
name|unsetTaskTrackers
parameter_list|()
block|{
name|this
operator|.
name|__isset
operator|.
name|taskTrackers
operator|=
literal|false
expr_stmt|;
block|}
comment|// Returns true if field taskTrackers is set (has been asigned a value) and false otherwise
specifier|public
name|boolean
name|isSetTaskTrackers
parameter_list|()
block|{
return|return
name|this
operator|.
name|__isset
operator|.
name|taskTrackers
return|;
block|}
specifier|public
name|int
name|getMapTasks
parameter_list|()
block|{
return|return
name|this
operator|.
name|mapTasks
return|;
block|}
specifier|public
name|void
name|setMapTasks
parameter_list|(
name|int
name|mapTasks
parameter_list|)
block|{
name|this
operator|.
name|mapTasks
operator|=
name|mapTasks
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|mapTasks
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|void
name|unsetMapTasks
parameter_list|()
block|{
name|this
operator|.
name|__isset
operator|.
name|mapTasks
operator|=
literal|false
expr_stmt|;
block|}
comment|// Returns true if field mapTasks is set (has been asigned a value) and false otherwise
specifier|public
name|boolean
name|isSetMapTasks
parameter_list|()
block|{
return|return
name|this
operator|.
name|__isset
operator|.
name|mapTasks
return|;
block|}
specifier|public
name|int
name|getReduceTasks
parameter_list|()
block|{
return|return
name|this
operator|.
name|reduceTasks
return|;
block|}
specifier|public
name|void
name|setReduceTasks
parameter_list|(
name|int
name|reduceTasks
parameter_list|)
block|{
name|this
operator|.
name|reduceTasks
operator|=
name|reduceTasks
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|reduceTasks
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|void
name|unsetReduceTasks
parameter_list|()
block|{
name|this
operator|.
name|__isset
operator|.
name|reduceTasks
operator|=
literal|false
expr_stmt|;
block|}
comment|// Returns true if field reduceTasks is set (has been asigned a value) and false otherwise
specifier|public
name|boolean
name|isSetReduceTasks
parameter_list|()
block|{
return|return
name|this
operator|.
name|__isset
operator|.
name|reduceTasks
return|;
block|}
specifier|public
name|int
name|getMaxMapTasks
parameter_list|()
block|{
return|return
name|this
operator|.
name|maxMapTasks
return|;
block|}
specifier|public
name|void
name|setMaxMapTasks
parameter_list|(
name|int
name|maxMapTasks
parameter_list|)
block|{
name|this
operator|.
name|maxMapTasks
operator|=
name|maxMapTasks
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|maxMapTasks
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|void
name|unsetMaxMapTasks
parameter_list|()
block|{
name|this
operator|.
name|__isset
operator|.
name|maxMapTasks
operator|=
literal|false
expr_stmt|;
block|}
comment|// Returns true if field maxMapTasks is set (has been asigned a value) and false otherwise
specifier|public
name|boolean
name|isSetMaxMapTasks
parameter_list|()
block|{
return|return
name|this
operator|.
name|__isset
operator|.
name|maxMapTasks
return|;
block|}
specifier|public
name|int
name|getMaxReduceTasks
parameter_list|()
block|{
return|return
name|this
operator|.
name|maxReduceTasks
return|;
block|}
specifier|public
name|void
name|setMaxReduceTasks
parameter_list|(
name|int
name|maxReduceTasks
parameter_list|)
block|{
name|this
operator|.
name|maxReduceTasks
operator|=
name|maxReduceTasks
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|maxReduceTasks
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|void
name|unsetMaxReduceTasks
parameter_list|()
block|{
name|this
operator|.
name|__isset
operator|.
name|maxReduceTasks
operator|=
literal|false
expr_stmt|;
block|}
comment|// Returns true if field maxReduceTasks is set (has been asigned a value) and false otherwise
specifier|public
name|boolean
name|isSetMaxReduceTasks
parameter_list|()
block|{
return|return
name|this
operator|.
name|__isset
operator|.
name|maxReduceTasks
return|;
block|}
specifier|public
name|int
name|getState
parameter_list|()
block|{
return|return
name|this
operator|.
name|state
return|;
block|}
specifier|public
name|void
name|setState
parameter_list|(
name|int
name|state
parameter_list|)
block|{
name|this
operator|.
name|state
operator|=
name|state
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|state
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|void
name|unsetState
parameter_list|()
block|{
name|this
operator|.
name|__isset
operator|.
name|state
operator|=
literal|false
expr_stmt|;
block|}
comment|// Returns true if field state is set (has been asigned a value) and false otherwise
specifier|public
name|boolean
name|isSetState
parameter_list|()
block|{
return|return
name|this
operator|.
name|__isset
operator|.
name|state
return|;
block|}
specifier|public
name|void
name|setFieldValue
parameter_list|(
name|int
name|fieldID
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
switch|switch
condition|(
name|fieldID
condition|)
block|{
case|case
name|TASKTRACKERS
case|:
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unsetTaskTrackers
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|setTaskTrackers
argument_list|(
operator|(
name|Integer
operator|)
name|value
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|MAPTASKS
case|:
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unsetMapTasks
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|setMapTasks
argument_list|(
operator|(
name|Integer
operator|)
name|value
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|REDUCETASKS
case|:
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unsetReduceTasks
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|setReduceTasks
argument_list|(
operator|(
name|Integer
operator|)
name|value
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|MAXMAPTASKS
case|:
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unsetMaxMapTasks
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|setMaxMapTasks
argument_list|(
operator|(
name|Integer
operator|)
name|value
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|MAXREDUCETASKS
case|:
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unsetMaxReduceTasks
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|setMaxReduceTasks
argument_list|(
operator|(
name|Integer
operator|)
name|value
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|STATE
case|:
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unsetState
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|setState
argument_list|(
operator|(
name|Integer
operator|)
name|value
argument_list|)
expr_stmt|;
block|}
break|break;
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Field "
operator|+
name|fieldID
operator|+
literal|" doesn't exist!"
argument_list|)
throw|;
block|}
block|}
specifier|public
name|Object
name|getFieldValue
parameter_list|(
name|int
name|fieldID
parameter_list|)
block|{
switch|switch
condition|(
name|fieldID
condition|)
block|{
case|case
name|TASKTRACKERS
case|:
return|return
operator|new
name|Integer
argument_list|(
name|getTaskTrackers
argument_list|()
argument_list|)
return|;
case|case
name|MAPTASKS
case|:
return|return
operator|new
name|Integer
argument_list|(
name|getMapTasks
argument_list|()
argument_list|)
return|;
case|case
name|REDUCETASKS
case|:
return|return
operator|new
name|Integer
argument_list|(
name|getReduceTasks
argument_list|()
argument_list|)
return|;
case|case
name|MAXMAPTASKS
case|:
return|return
operator|new
name|Integer
argument_list|(
name|getMaxMapTasks
argument_list|()
argument_list|)
return|;
case|case
name|MAXREDUCETASKS
case|:
return|return
operator|new
name|Integer
argument_list|(
name|getMaxReduceTasks
argument_list|()
argument_list|)
return|;
case|case
name|STATE
case|:
return|return
name|getState
argument_list|()
return|;
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Field "
operator|+
name|fieldID
operator|+
literal|" doesn't exist!"
argument_list|)
throw|;
block|}
block|}
comment|// Returns true if field corresponding to fieldID is set (has been asigned a value) and false otherwise
specifier|public
name|boolean
name|isSet
parameter_list|(
name|int
name|fieldID
parameter_list|)
block|{
switch|switch
condition|(
name|fieldID
condition|)
block|{
case|case
name|TASKTRACKERS
case|:
return|return
name|isSetTaskTrackers
argument_list|()
return|;
case|case
name|MAPTASKS
case|:
return|return
name|isSetMapTasks
argument_list|()
return|;
case|case
name|REDUCETASKS
case|:
return|return
name|isSetReduceTasks
argument_list|()
return|;
case|case
name|MAXMAPTASKS
case|:
return|return
name|isSetMaxMapTasks
argument_list|()
return|;
case|case
name|MAXREDUCETASKS
case|:
return|return
name|isSetMaxReduceTasks
argument_list|()
return|;
case|case
name|STATE
case|:
return|return
name|isSetState
argument_list|()
return|;
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Field "
operator|+
name|fieldID
operator|+
literal|" doesn't exist!"
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|that
parameter_list|)
block|{
if|if
condition|(
name|that
operator|==
literal|null
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|that
operator|instanceof
name|HiveClusterStatus
condition|)
return|return
name|this
operator|.
name|equals
argument_list|(
operator|(
name|HiveClusterStatus
operator|)
name|that
argument_list|)
return|;
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|HiveClusterStatus
name|that
parameter_list|)
block|{
if|if
condition|(
name|that
operator|==
literal|null
condition|)
return|return
literal|false
return|;
name|boolean
name|this_present_taskTrackers
init|=
literal|true
decl_stmt|;
name|boolean
name|that_present_taskTrackers
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|this_present_taskTrackers
operator|||
name|that_present_taskTrackers
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|this_present_taskTrackers
operator|&&
name|that_present_taskTrackers
operator|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|this
operator|.
name|taskTrackers
operator|!=
name|that
operator|.
name|taskTrackers
condition|)
return|return
literal|false
return|;
block|}
name|boolean
name|this_present_mapTasks
init|=
literal|true
decl_stmt|;
name|boolean
name|that_present_mapTasks
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|this_present_mapTasks
operator|||
name|that_present_mapTasks
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|this_present_mapTasks
operator|&&
name|that_present_mapTasks
operator|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|this
operator|.
name|mapTasks
operator|!=
name|that
operator|.
name|mapTasks
condition|)
return|return
literal|false
return|;
block|}
name|boolean
name|this_present_reduceTasks
init|=
literal|true
decl_stmt|;
name|boolean
name|that_present_reduceTasks
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|this_present_reduceTasks
operator|||
name|that_present_reduceTasks
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|this_present_reduceTasks
operator|&&
name|that_present_reduceTasks
operator|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|this
operator|.
name|reduceTasks
operator|!=
name|that
operator|.
name|reduceTasks
condition|)
return|return
literal|false
return|;
block|}
name|boolean
name|this_present_maxMapTasks
init|=
literal|true
decl_stmt|;
name|boolean
name|that_present_maxMapTasks
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|this_present_maxMapTasks
operator|||
name|that_present_maxMapTasks
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|this_present_maxMapTasks
operator|&&
name|that_present_maxMapTasks
operator|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|this
operator|.
name|maxMapTasks
operator|!=
name|that
operator|.
name|maxMapTasks
condition|)
return|return
literal|false
return|;
block|}
name|boolean
name|this_present_maxReduceTasks
init|=
literal|true
decl_stmt|;
name|boolean
name|that_present_maxReduceTasks
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|this_present_maxReduceTasks
operator|||
name|that_present_maxReduceTasks
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|this_present_maxReduceTasks
operator|&&
name|that_present_maxReduceTasks
operator|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|this
operator|.
name|maxReduceTasks
operator|!=
name|that
operator|.
name|maxReduceTasks
condition|)
return|return
literal|false
return|;
block|}
name|boolean
name|this_present_state
init|=
literal|true
decl_stmt|;
name|boolean
name|that_present_state
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|this_present_state
operator|||
name|that_present_state
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|this_present_state
operator|&&
name|that_present_state
operator|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|this
operator|.
name|state
operator|!=
name|that
operator|.
name|state
condition|)
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|void
name|read
parameter_list|(
name|TProtocol
name|iprot
parameter_list|)
throws|throws
name|TException
block|{
name|TField
name|field
decl_stmt|;
name|iprot
operator|.
name|readStructBegin
argument_list|()
expr_stmt|;
while|while
condition|(
literal|true
condition|)
block|{
name|field
operator|=
name|iprot
operator|.
name|readFieldBegin
argument_list|()
expr_stmt|;
if|if
condition|(
name|field
operator|.
name|type
operator|==
name|TType
operator|.
name|STOP
condition|)
block|{
break|break;
block|}
switch|switch
condition|(
name|field
operator|.
name|id
condition|)
block|{
case|case
name|TASKTRACKERS
case|:
if|if
condition|(
name|field
operator|.
name|type
operator|==
name|TType
operator|.
name|I32
condition|)
block|{
name|this
operator|.
name|taskTrackers
operator|=
name|iprot
operator|.
name|readI32
argument_list|()
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|taskTrackers
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|TProtocolUtil
operator|.
name|skip
argument_list|(
name|iprot
argument_list|,
name|field
operator|.
name|type
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|MAPTASKS
case|:
if|if
condition|(
name|field
operator|.
name|type
operator|==
name|TType
operator|.
name|I32
condition|)
block|{
name|this
operator|.
name|mapTasks
operator|=
name|iprot
operator|.
name|readI32
argument_list|()
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|mapTasks
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|TProtocolUtil
operator|.
name|skip
argument_list|(
name|iprot
argument_list|,
name|field
operator|.
name|type
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|REDUCETASKS
case|:
if|if
condition|(
name|field
operator|.
name|type
operator|==
name|TType
operator|.
name|I32
condition|)
block|{
name|this
operator|.
name|reduceTasks
operator|=
name|iprot
operator|.
name|readI32
argument_list|()
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|reduceTasks
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|TProtocolUtil
operator|.
name|skip
argument_list|(
name|iprot
argument_list|,
name|field
operator|.
name|type
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|MAXMAPTASKS
case|:
if|if
condition|(
name|field
operator|.
name|type
operator|==
name|TType
operator|.
name|I32
condition|)
block|{
name|this
operator|.
name|maxMapTasks
operator|=
name|iprot
operator|.
name|readI32
argument_list|()
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|maxMapTasks
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|TProtocolUtil
operator|.
name|skip
argument_list|(
name|iprot
argument_list|,
name|field
operator|.
name|type
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|MAXREDUCETASKS
case|:
if|if
condition|(
name|field
operator|.
name|type
operator|==
name|TType
operator|.
name|I32
condition|)
block|{
name|this
operator|.
name|maxReduceTasks
operator|=
name|iprot
operator|.
name|readI32
argument_list|()
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|maxReduceTasks
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|TProtocolUtil
operator|.
name|skip
argument_list|(
name|iprot
argument_list|,
name|field
operator|.
name|type
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|STATE
case|:
if|if
condition|(
name|field
operator|.
name|type
operator|==
name|TType
operator|.
name|I32
condition|)
block|{
name|this
operator|.
name|state
operator|=
name|iprot
operator|.
name|readI32
argument_list|()
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|state
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|TProtocolUtil
operator|.
name|skip
argument_list|(
name|iprot
argument_list|,
name|field
operator|.
name|type
argument_list|)
expr_stmt|;
block|}
break|break;
default|default:
name|TProtocolUtil
operator|.
name|skip
argument_list|(
name|iprot
argument_list|,
name|field
operator|.
name|type
argument_list|)
expr_stmt|;
break|break;
block|}
name|iprot
operator|.
name|readFieldEnd
argument_list|()
expr_stmt|;
block|}
name|iprot
operator|.
name|readStructEnd
argument_list|()
expr_stmt|;
name|validate
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|write
parameter_list|(
name|TProtocol
name|oprot
parameter_list|)
throws|throws
name|TException
block|{
name|validate
argument_list|()
expr_stmt|;
name|oprot
operator|.
name|writeStructBegin
argument_list|(
name|STRUCT_DESC
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeFieldBegin
argument_list|(
name|TASK_TRACKERS_FIELD_DESC
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeI32
argument_list|(
name|this
operator|.
name|taskTrackers
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeFieldEnd
argument_list|()
expr_stmt|;
name|oprot
operator|.
name|writeFieldBegin
argument_list|(
name|MAP_TASKS_FIELD_DESC
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeI32
argument_list|(
name|this
operator|.
name|mapTasks
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeFieldEnd
argument_list|()
expr_stmt|;
name|oprot
operator|.
name|writeFieldBegin
argument_list|(
name|REDUCE_TASKS_FIELD_DESC
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeI32
argument_list|(
name|this
operator|.
name|reduceTasks
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeFieldEnd
argument_list|()
expr_stmt|;
name|oprot
operator|.
name|writeFieldBegin
argument_list|(
name|MAX_MAP_TASKS_FIELD_DESC
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeI32
argument_list|(
name|this
operator|.
name|maxMapTasks
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeFieldEnd
argument_list|()
expr_stmt|;
name|oprot
operator|.
name|writeFieldBegin
argument_list|(
name|MAX_REDUCE_TASKS_FIELD_DESC
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeI32
argument_list|(
name|this
operator|.
name|maxReduceTasks
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeFieldEnd
argument_list|()
expr_stmt|;
name|oprot
operator|.
name|writeFieldBegin
argument_list|(
name|STATE_FIELD_DESC
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeI32
argument_list|(
name|this
operator|.
name|state
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeFieldEnd
argument_list|()
expr_stmt|;
name|oprot
operator|.
name|writeFieldStop
argument_list|()
expr_stmt|;
name|oprot
operator|.
name|writeStructEnd
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|(
literal|"HiveClusterStatus("
argument_list|)
decl_stmt|;
name|boolean
name|first
init|=
literal|true
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"taskTrackers:"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|taskTrackers
argument_list|)
expr_stmt|;
name|first
operator|=
literal|false
expr_stmt|;
if|if
condition|(
operator|!
name|first
condition|)
name|sb
operator|.
name|append
argument_list|(
literal|", "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"mapTasks:"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|mapTasks
argument_list|)
expr_stmt|;
name|first
operator|=
literal|false
expr_stmt|;
if|if
condition|(
operator|!
name|first
condition|)
name|sb
operator|.
name|append
argument_list|(
literal|", "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"reduceTasks:"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|reduceTasks
argument_list|)
expr_stmt|;
name|first
operator|=
literal|false
expr_stmt|;
if|if
condition|(
operator|!
name|first
condition|)
name|sb
operator|.
name|append
argument_list|(
literal|", "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"maxMapTasks:"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|maxMapTasks
argument_list|)
expr_stmt|;
name|first
operator|=
literal|false
expr_stmt|;
if|if
condition|(
operator|!
name|first
condition|)
name|sb
operator|.
name|append
argument_list|(
literal|", "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"maxReduceTasks:"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|maxReduceTasks
argument_list|)
expr_stmt|;
name|first
operator|=
literal|false
expr_stmt|;
if|if
condition|(
operator|!
name|first
condition|)
name|sb
operator|.
name|append
argument_list|(
literal|", "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"state:"
argument_list|)
expr_stmt|;
name|String
name|state_name
init|=
name|JobTrackerState
operator|.
name|VALUES_TO_NAMES
operator|.
name|get
argument_list|(
name|this
operator|.
name|state
argument_list|)
decl_stmt|;
if|if
condition|(
name|state_name
operator|!=
literal|null
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|state_name
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|" ("
argument_list|)
expr_stmt|;
block|}
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|state
argument_list|)
expr_stmt|;
if|if
condition|(
name|state_name
operator|!=
literal|null
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|")"
argument_list|)
expr_stmt|;
block|}
name|first
operator|=
literal|false
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|")"
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|void
name|validate
parameter_list|()
throws|throws
name|TException
block|{
comment|// check for required fields
comment|// check that fields of type enum have valid values
if|if
condition|(
name|isSetState
argument_list|()
operator|&&
operator|!
name|JobTrackerState
operator|.
name|VALID_VALUES
operator|.
name|contains
argument_list|(
name|state
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|TProtocolException
argument_list|(
literal|"The field 'state' has been assigned the invalid value "
operator|+
name|state
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

