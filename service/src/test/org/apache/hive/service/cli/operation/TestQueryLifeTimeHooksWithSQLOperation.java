begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|operation
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|hooks
operator|.
name|QueryLifeTimeHookContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|hooks
operator|.
name|QueryLifeTimeHookWithParseHooks
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|hooks
operator|.
name|TestQueryHooks
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|session
operator|.
name|SessionState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|HiveSQLException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|session
operator|.
name|HiveSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
specifier|public
class|class
name|TestQueryLifeTimeHooksWithSQLOperation
block|{
specifier|private
specifier|static
specifier|final
name|String
name|QUERY
init|=
literal|"select 1"
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testQueryInfoInHookContext
parameter_list|()
throws|throws
name|IllegalAccessException
throws|,
name|ClassNotFoundException
throws|,
name|InstantiationException
throws|,
name|HiveSQLException
block|{
name|HiveConf
name|conf
init|=
operator|new
name|HiveConf
argument_list|(
name|TestQueryHooks
operator|.
name|class
argument_list|)
decl_stmt|;
name|conf
operator|.
name|setBoolVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SUPPORT_CONCURRENCY
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_AUTHORIZATION_MANAGER
argument_list|,
literal|"org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.SQLStdHiveAuthorizerFactory"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_QUERY_LIFETIME_HOOKS
operator|.
name|varname
argument_list|,
name|QueryInfoVerificationHook
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|SessionState
operator|.
name|start
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|HiveSession
name|mockHiveSession
init|=
name|mock
argument_list|(
name|HiveSession
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|mockHiveSession
operator|.
name|getHiveConf
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockHiveSession
operator|.
name|getSessionState
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|SessionState
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|SQLOperation
name|sqlOperation
init|=
operator|new
name|SQLOperation
argument_list|(
name|mockHiveSession
argument_list|,
name|QUERY
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|()
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|sqlOperation
operator|.
name|run
argument_list|()
expr_stmt|;
block|}
comment|/**    * Has to be public so that it can be created by the Driver    */
specifier|public
specifier|final
specifier|static
class|class
name|QueryInfoVerificationHook
implements|implements
name|QueryLifeTimeHookWithParseHooks
block|{
annotation|@
name|Override
specifier|public
name|void
name|beforeParse
parameter_list|(
name|QueryLifeTimeHookContext
name|ctx
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ctx
operator|.
name|getCommand
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|,
name|QUERY
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterParse
parameter_list|(
name|QueryLifeTimeHookContext
name|ctx
parameter_list|,
name|boolean
name|hasError
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ctx
operator|.
name|getCommand
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|,
name|QUERY
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|hasError
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|beforeCompile
parameter_list|(
name|QueryLifeTimeHookContext
name|ctx
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ctx
operator|.
name|getCommand
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|,
name|QUERY
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterCompile
parameter_list|(
name|QueryLifeTimeHookContext
name|ctx
parameter_list|,
name|boolean
name|hasError
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ctx
operator|.
name|getCommand
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|,
name|QUERY
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|hasError
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|beforeExecution
parameter_list|(
name|QueryLifeTimeHookContext
name|ctx
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ctx
operator|.
name|getCommand
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|,
name|QUERY
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ctx
operator|.
name|getHookContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ctx
operator|.
name|getHookContext
argument_list|()
operator|.
name|getQueryInfo
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ctx
operator|.
name|getHookContext
argument_list|()
operator|.
name|getQueryInfo
argument_list|()
operator|.
name|getQueryDisplay
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterExecution
parameter_list|(
name|QueryLifeTimeHookContext
name|ctx
parameter_list|,
name|boolean
name|hasError
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ctx
operator|.
name|getCommand
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|,
name|QUERY
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|hasError
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ctx
operator|.
name|getHookContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|ctx
operator|.
name|getHookContext
argument_list|()
operator|.
name|getErrorMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|ctx
operator|.
name|getHookContext
argument_list|()
operator|.
name|getException
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ctx
operator|.
name|getHookContext
argument_list|()
operator|.
name|getQueryInfo
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ctx
operator|.
name|getHookContext
argument_list|()
operator|.
name|getQueryInfo
argument_list|()
operator|.
name|getQueryDisplay
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

