begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  * http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|session
operator|.
name|SessionManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|ExpectedException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_class
specifier|public
class|class
name|TestCLIServiceConnectionLimits
block|{
annotation|@
name|org
operator|.
name|junit
operator|.
name|Rule
specifier|public
name|ExpectedException
name|thrown
init|=
name|ExpectedException
operator|.
name|none
argument_list|()
decl_stmt|;
specifier|private
name|int
name|limit
init|=
literal|10
decl_stmt|;
specifier|private
name|HiveConf
name|conf
init|=
operator|new
name|HiveConf
argument_list|()
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testNoLimit
parameter_list|()
throws|throws
name|HiveSQLException
block|{
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_IPADDRESS
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER_IPADDRESS
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|CLIService
name|service
init|=
name|getService
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|SessionHandle
argument_list|>
name|sessionHandles
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
try|try
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|limit
operator|+
literal|1
condition|;
name|i
operator|++
control|)
block|{
name|SessionHandle
name|session
init|=
name|service
operator|.
name|openSession
argument_list|(
name|CLIService
operator|.
name|SERVER_VERSION
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|"127.0.0.1"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|sessionHandles
operator|.
name|add
argument_list|(
name|session
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
for|for
control|(
name|SessionHandle
name|sessionHandle
range|:
name|sessionHandles
control|)
block|{
name|service
operator|.
name|closeSession
argument_list|(
name|sessionHandle
argument_list|)
expr_stmt|;
block|}
name|service
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIncrementAndDecrementConnectionsUser
parameter_list|()
throws|throws
name|HiveSQLException
block|{
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_IPADDRESS
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER_IPADDRESS
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|CLIService
name|service
init|=
name|getService
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|SessionHandle
argument_list|>
name|sessionHandles
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
try|try
block|{
comment|// open 5 connections
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|limit
operator|/
literal|2
condition|;
name|i
operator|++
control|)
block|{
name|SessionHandle
name|session
init|=
name|service
operator|.
name|openSession
argument_list|(
name|CLIService
operator|.
name|SERVER_VERSION
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|"127.0.0.1"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|sessionHandles
operator|.
name|add
argument_list|(
name|session
argument_list|)
expr_stmt|;
block|}
comment|// close them all
for|for
control|(
name|SessionHandle
name|sessionHandle
range|:
name|sessionHandles
control|)
block|{
name|service
operator|.
name|closeSession
argument_list|(
name|sessionHandle
argument_list|)
expr_stmt|;
block|}
name|sessionHandles
operator|.
name|clear
argument_list|()
expr_stmt|;
comment|// open till limit but not exceed
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|limit
condition|;
name|i
operator|++
control|)
block|{
name|SessionHandle
name|session
init|=
name|service
operator|.
name|openSession
argument_list|(
name|CLIService
operator|.
name|SERVER_VERSION
argument_list|,
literal|"ff"
argument_list|,
literal|"bar"
argument_list|,
literal|"127.0.0.1"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|sessionHandles
operator|.
name|add
argument_list|(
name|session
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
for|for
control|(
name|SessionHandle
name|sessionHandle
range|:
name|sessionHandles
control|)
block|{
name|service
operator|.
name|closeSession
argument_list|(
name|sessionHandle
argument_list|)
expr_stmt|;
block|}
name|service
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInvalidUserName
parameter_list|()
throws|throws
name|HiveSQLException
block|{
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_IPADDRESS
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER_IPADDRESS
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|CLIService
name|service
init|=
name|getService
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|SessionHandle
argument_list|>
name|sessionHandles
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
try|try
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|limit
operator|+
literal|1
condition|;
name|i
operator|++
control|)
block|{
name|SessionHandle
name|session
init|=
name|service
operator|.
name|openSession
argument_list|(
name|CLIService
operator|.
name|SERVER_VERSION
argument_list|,
literal|null
argument_list|,
literal|"bar"
argument_list|,
literal|"127.0.0.1"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|sessionHandles
operator|.
name|add
argument_list|(
name|session
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|limit
operator|+
literal|1
condition|;
name|i
operator|++
control|)
block|{
name|SessionHandle
name|session
init|=
name|service
operator|.
name|openSession
argument_list|(
name|CLIService
operator|.
name|SERVER_VERSION
argument_list|,
literal|""
argument_list|,
literal|"bar"
argument_list|,
literal|"127.0.0.1"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|sessionHandles
operator|.
name|add
argument_list|(
name|session
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
for|for
control|(
name|SessionHandle
name|sessionHandle
range|:
name|sessionHandles
control|)
block|{
name|service
operator|.
name|closeSession
argument_list|(
name|sessionHandle
argument_list|)
expr_stmt|;
block|}
name|service
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInvalidIpaddress
parameter_list|()
throws|throws
name|HiveSQLException
block|{
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_IPADDRESS
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER_IPADDRESS
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|CLIService
name|service
init|=
name|getService
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|SessionHandle
argument_list|>
name|sessionHandles
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
try|try
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|limit
operator|+
literal|1
condition|;
name|i
operator|++
control|)
block|{
name|SessionHandle
name|session
init|=
name|service
operator|.
name|openSession
argument_list|(
name|CLIService
operator|.
name|SERVER_VERSION
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|sessionHandles
operator|.
name|add
argument_list|(
name|session
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|limit
operator|+
literal|1
condition|;
name|i
operator|++
control|)
block|{
name|SessionHandle
name|session
init|=
name|service
operator|.
name|openSession
argument_list|(
name|CLIService
operator|.
name|SERVER_VERSION
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|""
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|sessionHandles
operator|.
name|add
argument_list|(
name|session
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
for|for
control|(
name|SessionHandle
name|sessionHandle
range|:
name|sessionHandles
control|)
block|{
name|service
operator|.
name|closeSession
argument_list|(
name|sessionHandle
argument_list|)
expr_stmt|;
block|}
name|service
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInvalidUserIpaddress
parameter_list|()
throws|throws
name|HiveSQLException
block|{
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_IPADDRESS
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER_IPADDRESS
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|CLIService
name|service
init|=
name|getService
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|SessionHandle
argument_list|>
name|sessionHandles
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
try|try
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|limit
operator|+
literal|1
condition|;
name|i
operator|++
control|)
block|{
name|SessionHandle
name|session
init|=
name|service
operator|.
name|openSession
argument_list|(
name|CLIService
operator|.
name|SERVER_VERSION
argument_list|,
literal|"   "
argument_list|,
literal|"bar"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|sessionHandles
operator|.
name|add
argument_list|(
name|session
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
for|for
control|(
name|SessionHandle
name|sessionHandle
range|:
name|sessionHandles
control|)
block|{
name|service
operator|.
name|closeSession
argument_list|(
name|sessionHandle
argument_list|)
expr_stmt|;
block|}
name|service
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testConnectionLimitPerUser
parameter_list|()
throws|throws
name|HiveSQLException
block|{
name|thrown
operator|.
name|expect
argument_list|(
name|HiveSQLException
operator|.
name|class
argument_list|)
expr_stmt|;
name|thrown
operator|.
name|expectMessage
argument_list|(
literal|"Connection limit per user reached (user: foo limit: 10)"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_IPADDRESS
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER_IPADDRESS
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|CLIService
name|service
init|=
name|getService
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|SessionHandle
argument_list|>
name|sessionHandles
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
try|try
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|limit
operator|+
literal|1
condition|;
name|i
operator|++
control|)
block|{
name|SessionHandle
name|session
init|=
name|service
operator|.
name|openSession
argument_list|(
name|CLIService
operator|.
name|SERVER_VERSION
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|"127.0.0.1"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|sessionHandles
operator|.
name|add
argument_list|(
name|session
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
for|for
control|(
name|SessionHandle
name|sessionHandle
range|:
name|sessionHandles
control|)
block|{
name|service
operator|.
name|closeSession
argument_list|(
name|sessionHandle
argument_list|)
expr_stmt|;
block|}
name|service
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testConnectionLimitPerIpAddress
parameter_list|()
throws|throws
name|HiveSQLException
block|{
name|thrown
operator|.
name|expect
argument_list|(
name|HiveSQLException
operator|.
name|class
argument_list|)
expr_stmt|;
name|thrown
operator|.
name|expectMessage
argument_list|(
literal|"Connection limit per ipaddress reached (ipaddress: 127.0.0.1 limit: 10)"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_IPADDRESS
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER_IPADDRESS
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|CLIService
name|service
init|=
name|getService
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|SessionHandle
argument_list|>
name|sessionHandles
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
try|try
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|limit
operator|+
literal|1
condition|;
name|i
operator|++
control|)
block|{
name|SessionHandle
name|session
init|=
name|service
operator|.
name|openSession
argument_list|(
name|CLIService
operator|.
name|SERVER_VERSION
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|"127.0.0.1"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|sessionHandles
operator|.
name|add
argument_list|(
name|session
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
for|for
control|(
name|SessionHandle
name|sessionHandle
range|:
name|sessionHandles
control|)
block|{
name|service
operator|.
name|closeSession
argument_list|(
name|sessionHandle
argument_list|)
expr_stmt|;
block|}
name|service
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testConnectionLimitPerUserIpAddress
parameter_list|()
throws|throws
name|HiveSQLException
block|{
name|thrown
operator|.
name|expect
argument_list|(
name|HiveSQLException
operator|.
name|class
argument_list|)
expr_stmt|;
name|thrown
operator|.
name|expectMessage
argument_list|(
literal|"Connection limit per user:ipaddress reached (user:ipaddress: foo:127.0.0.1 limit: 10)"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_IPADDRESS
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER_IPADDRESS
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|CLIService
name|service
init|=
name|getService
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|SessionHandle
argument_list|>
name|sessionHandles
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
try|try
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|limit
operator|+
literal|1
condition|;
name|i
operator|++
control|)
block|{
name|SessionHandle
name|session
init|=
name|service
operator|.
name|openSession
argument_list|(
name|CLIService
operator|.
name|SERVER_VERSION
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|"127.0.0.1"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|sessionHandles
operator|.
name|add
argument_list|(
name|session
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
for|for
control|(
name|SessionHandle
name|sessionHandle
range|:
name|sessionHandles
control|)
block|{
name|service
operator|.
name|closeSession
argument_list|(
name|sessionHandle
argument_list|)
expr_stmt|;
block|}
name|service
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testConnectionMultipleLimitsUserAndIP
parameter_list|()
throws|throws
name|HiveSQLException
block|{
name|thrown
operator|.
name|expect
argument_list|(
name|HiveSQLException
operator|.
name|class
argument_list|)
expr_stmt|;
name|thrown
operator|.
name|expectMessage
argument_list|(
literal|"Connection limit per user reached (user: foo limit: 5)"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_IPADDRESS
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER_IPADDRESS
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|CLIService
name|service
init|=
name|getService
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|SessionHandle
argument_list|>
name|sessionHandles
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
try|try
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|limit
operator|+
literal|1
condition|;
name|i
operator|++
control|)
block|{
name|SessionHandle
name|session
init|=
name|service
operator|.
name|openSession
argument_list|(
name|CLIService
operator|.
name|SERVER_VERSION
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|"127.0.0.1"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|sessionHandles
operator|.
name|add
argument_list|(
name|session
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
for|for
control|(
name|SessionHandle
name|sessionHandle
range|:
name|sessionHandles
control|)
block|{
name|service
operator|.
name|closeSession
argument_list|(
name|sessionHandle
argument_list|)
expr_stmt|;
block|}
name|service
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testConnectionMultipleLimitsIPAndUserIP
parameter_list|()
throws|throws
name|HiveSQLException
block|{
name|thrown
operator|.
name|expect
argument_list|(
name|HiveSQLException
operator|.
name|class
argument_list|)
expr_stmt|;
name|thrown
operator|.
name|expectMessage
argument_list|(
literal|"Connection limit per ipaddress reached (ipaddress: 127.0.0.1 limit: 5)"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_IPADDRESS
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER_IPADDRESS
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|CLIService
name|service
init|=
name|getService
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|SessionHandle
argument_list|>
name|sessionHandles
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
try|try
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|limit
operator|+
literal|1
condition|;
name|i
operator|++
control|)
block|{
name|SessionHandle
name|session
init|=
name|service
operator|.
name|openSession
argument_list|(
name|CLIService
operator|.
name|SERVER_VERSION
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|"127.0.0.1"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|sessionHandles
operator|.
name|add
argument_list|(
name|session
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
for|for
control|(
name|SessionHandle
name|sessionHandle
range|:
name|sessionHandles
control|)
block|{
name|service
operator|.
name|closeSession
argument_list|(
name|sessionHandle
argument_list|)
expr_stmt|;
block|}
name|service
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testConnectionMultipleLimitsUserIPAndUser
parameter_list|()
throws|throws
name|HiveSQLException
block|{
name|thrown
operator|.
name|expect
argument_list|(
name|HiveSQLException
operator|.
name|class
argument_list|)
expr_stmt|;
name|thrown
operator|.
name|expectMessage
argument_list|(
literal|"Connection limit per user:ipaddress reached (user:ipaddress: foo:127.0.0.1 limit: 10)"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER
argument_list|,
literal|15
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_IPADDRESS
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER_IPADDRESS
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|CLIService
name|service
init|=
name|getService
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|SessionHandle
argument_list|>
name|sessionHandles
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
try|try
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|limit
operator|+
literal|1
condition|;
name|i
operator|++
control|)
block|{
name|SessionHandle
name|session
init|=
name|service
operator|.
name|openSession
argument_list|(
name|CLIService
operator|.
name|SERVER_VERSION
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|"127.0.0.1"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|sessionHandles
operator|.
name|add
argument_list|(
name|session
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
for|for
control|(
name|SessionHandle
name|sessionHandle
range|:
name|sessionHandles
control|)
block|{
name|service
operator|.
name|closeSession
argument_list|(
name|sessionHandle
argument_list|)
expr_stmt|;
block|}
name|service
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testConnectionForwardedIpAddresses
parameter_list|()
throws|throws
name|HiveSQLException
block|{
name|thrown
operator|.
name|expect
argument_list|(
name|HiveSQLException
operator|.
name|class
argument_list|)
expr_stmt|;
name|thrown
operator|.
name|expectMessage
argument_list|(
literal|"Connection limit per ipaddress reached (ipaddress: 194.167.0.3 limit: 10)"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_IPADDRESS
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SERVER2_LIMIT_CONNECTIONS_PER_USER_IPADDRESS
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|CLIService
name|service
init|=
name|getService
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|SessionManager
operator|.
name|setForwardedAddresses
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"194.167.0.3"
argument_list|,
literal|"194.167.0.2"
argument_list|,
literal|"194.167.0.1"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|SessionHandle
argument_list|>
name|sessionHandles
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
try|try
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|limit
operator|+
literal|1
condition|;
name|i
operator|++
control|)
block|{
name|SessionHandle
name|session
init|=
name|service
operator|.
name|openSession
argument_list|(
name|CLIService
operator|.
name|SERVER_VERSION
argument_list|,
literal|"foo"
argument_list|,
literal|"bar"
argument_list|,
literal|"194.167.0.1"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|sessionHandles
operator|.
name|add
argument_list|(
name|session
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|SessionManager
operator|.
name|setForwardedAddresses
argument_list|(
name|Collections
operator|.
name|emptyList
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|SessionHandle
name|sessionHandle
range|:
name|sessionHandles
control|)
block|{
name|service
operator|.
name|closeSession
argument_list|(
name|sessionHandle
argument_list|)
expr_stmt|;
block|}
name|service
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|CLIService
name|getService
parameter_list|(
name|HiveConf
name|conf
parameter_list|)
block|{
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_AUTHORIZATION_MANAGER
argument_list|,
literal|"org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.SQLStdHiveAuthorizerFactory"
argument_list|)
expr_stmt|;
name|CLIService
name|service
init|=
operator|new
name|CLIService
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|service
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|service
operator|.
name|start
argument_list|()
expr_stmt|;
return|return
name|service
return|;
block|}
block|}
end_class

end_unit

