begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * CLIServiceTest.  *  */
end_comment

begin_class
specifier|public
class|class
name|TestCookieSigner
block|{
specifier|protected
specifier|static
name|CookieSigner
name|cs
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Random
name|RAN
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
comment|/**    * @throws java.lang.Exception    */
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|cs
operator|=
operator|new
name|CookieSigner
argument_list|(
name|Long
operator|.
name|toString
argument_list|(
name|RAN
operator|.
name|nextLong
argument_list|()
argument_list|)
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * @throws java.lang.Exception    */
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{   }
annotation|@
name|Test
specifier|public
name|void
name|testVerifyAndExtract
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|originalStr
init|=
literal|"cu=scott"
decl_stmt|;
name|String
name|signedStr
init|=
name|cs
operator|.
name|signCookie
argument_list|(
name|originalStr
argument_list|)
decl_stmt|;
assert|assert
operator|(
name|cs
operator|.
name|verifyAndExtract
argument_list|(
name|signedStr
argument_list|)
operator|.
name|equals
argument_list|(
name|originalStr
argument_list|)
operator|)
assert|;
block|}
block|}
end_class

end_unit

