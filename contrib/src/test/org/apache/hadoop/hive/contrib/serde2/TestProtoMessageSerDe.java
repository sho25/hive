begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|contrib
operator|.
name|serde2
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertArrayEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Constructor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|contrib
operator|.
name|serde2
operator|.
name|SampleProtos
operator|.
name|AllTypes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|contrib
operator|.
name|serde2
operator|.
name|SampleProtos
operator|.
name|AllTypes
operator|.
name|Enum1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|contrib
operator|.
name|serde2
operator|.
name|SampleProtos
operator|.
name|MapFieldEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|contrib
operator|.
name|serde2
operator|.
name|SampleProtos
operator|.
name|Mesg1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|ObjectInspectorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|objectinspector
operator|.
name|primitive
operator|.
name|PrimitiveObjectInspectorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|BytesWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tez
operator|.
name|dag
operator|.
name|history
operator|.
name|logging
operator|.
name|proto
operator|.
name|ProtoMessageWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
import|;
end_import

begin_comment
comment|/**  * Test class for ProtobufSerDe.  */
end_comment

begin_class
specifier|public
class|class
name|TestProtoMessageSerDe
block|{
specifier|private
specifier|static
name|ObjectInspector
name|stroi
init|=
name|PrimitiveObjectInspectorFactory
operator|.
name|javaStringObjectInspector
decl_stmt|;
specifier|private
specifier|static
name|ObjectInspector
name|intoi
init|=
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
decl_stmt|;
specifier|private
specifier|static
name|ObjectInspector
name|strmapoi
init|=
name|ObjectInspectorFactory
operator|.
name|getStandardMapObjectInspector
argument_list|(
name|stroi
argument_list|,
name|stroi
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|ObjectInspector
name|mfoi
init|=
name|structoi
argument_list|(
name|list
argument_list|(
literal|"key"
argument_list|,
literal|"value"
argument_list|)
argument_list|,
name|list
argument_list|(
name|stroi
argument_list|,
name|stroi
argument_list|)
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|ObjectInspector
name|m1oi
init|=
name|structoi
argument_list|(
name|list
argument_list|(
literal|"anotherMap"
argument_list|,
literal|"noMap"
argument_list|,
literal|"intList"
argument_list|)
argument_list|,
name|list
argument_list|(
name|strmapoi
argument_list|,
name|mfoi
argument_list|,
name|listoi
argument_list|(
name|intoi
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
specifier|private
name|ProtobufSerDe
name|serde
decl_stmt|;
specifier|private
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|(
literal|false
argument_list|)
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
parameter_list|<
name|T
extends|extends
name|Message
parameter_list|>
name|ProtoMessageWritable
argument_list|<
name|T
argument_list|>
name|init
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|clazz
parameter_list|,
name|String
name|mapTypes
parameter_list|)
throws|throws
name|Exception
block|{
name|serde
operator|=
operator|new
name|ProtobufMessageSerDe
argument_list|()
expr_stmt|;
name|Properties
name|tbl
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|tbl
operator|.
name|setProperty
argument_list|(
name|ProtobufSerDe
operator|.
name|PROTO_CLASS
argument_list|,
name|clazz
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|tbl
operator|.
name|setProperty
argument_list|(
name|ProtobufSerDe
operator|.
name|MAP_TYPES
argument_list|,
name|mapTypes
argument_list|)
expr_stmt|;
name|serde
operator|.
name|initialize
argument_list|(
name|conf
argument_list|,
name|tbl
argument_list|)
expr_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
name|Constructor
argument_list|<
name|ProtoMessageWritable
argument_list|>
name|cons
init|=
name|ProtoMessageWritable
operator|.
name|class
operator|.
name|getDeclaredConstructor
argument_list|(
name|Parser
operator|.
name|class
argument_list|)
decl_stmt|;
name|cons
operator|.
name|setAccessible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
name|cons
operator|.
name|newInstance
argument_list|(
operator|(
name|Parser
argument_list|<
name|T
argument_list|>
operator|)
name|clazz
operator|.
name|getField
argument_list|(
literal|"PARSER"
argument_list|)
operator|.
name|get
argument_list|(
literal|null
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|MapFieldEntry
name|makeMap
parameter_list|(
name|int
name|i
parameter_list|)
block|{
return|return
name|MapFieldEntry
operator|.
name|newBuilder
argument_list|()
operator|.
name|setKey
argument_list|(
literal|"key"
operator|+
name|i
argument_list|)
operator|.
name|setValue
argument_list|(
literal|"val"
operator|+
name|i
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
specifier|private
name|Mesg1
name|makeMesg1
parameter_list|(
name|int
name|start
parameter_list|)
block|{
return|return
name|Mesg1
operator|.
name|newBuilder
argument_list|()
operator|.
name|addAnotherMap
argument_list|(
name|makeMap
argument_list|(
name|start
operator|+
literal|1
argument_list|)
argument_list|)
operator|.
name|addAnotherMap
argument_list|(
name|makeMap
argument_list|(
name|start
operator|+
literal|2
argument_list|)
argument_list|)
operator|.
name|setNoMap
argument_list|(
name|makeMap
argument_list|(
name|start
operator|+
literal|3
argument_list|)
argument_list|)
operator|.
name|addIntList
argument_list|(
name|start
operator|+
literal|4
argument_list|)
operator|.
name|addIntList
argument_list|(
name|start
operator|+
literal|5
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSimpleMessage
parameter_list|()
throws|throws
name|Exception
block|{
name|ProtoMessageWritable
argument_list|<
name|MapFieldEntry
argument_list|>
name|writable
init|=
name|init
argument_list|(
name|MapFieldEntry
operator|.
name|class
argument_list|,
literal|" MapFieldEntry     , Invalid  "
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|mfoi
argument_list|,
name|serde
operator|.
name|getObjectInspector
argument_list|()
argument_list|)
expr_stmt|;
name|writable
operator|.
name|setMessage
argument_list|(
name|MapFieldEntry
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
name|arr
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|(
name|Object
index|[]
operator|)
name|serde
operator|.
name|deserialize
argument_list|(
name|writable
argument_list|)
argument_list|)
expr_stmt|;
name|MapFieldEntry
name|proto
init|=
name|makeMap
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|writable
operator|.
name|setMessage
argument_list|(
name|proto
argument_list|)
expr_stmt|;
name|Object
name|obj
init|=
name|serde
operator|.
name|deserialize
argument_list|(
name|writable
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|obj
operator|instanceof
name|Object
index|[]
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
name|arr
argument_list|(
name|proto
operator|.
name|getKey
argument_list|()
argument_list|,
name|proto
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|,
operator|(
name|Object
index|[]
operator|)
name|obj
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMapAndList
parameter_list|()
throws|throws
name|Exception
block|{
name|ProtoMessageWritable
argument_list|<
name|Mesg1
argument_list|>
name|writable
init|=
name|init
argument_list|(
name|Mesg1
operator|.
name|class
argument_list|,
literal|"MapFieldEntry,Invalid"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|m1oi
argument_list|,
name|serde
operator|.
name|getObjectInspector
argument_list|()
argument_list|)
expr_stmt|;
name|writable
operator|.
name|setMessage
argument_list|(
name|Mesg1
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
name|arr
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|(
name|Object
index|[]
operator|)
name|serde
operator|.
name|deserialize
argument_list|(
name|writable
argument_list|)
argument_list|)
expr_stmt|;
name|Mesg1
name|proto
init|=
name|makeMesg1
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|writable
operator|.
name|setMessage
argument_list|(
name|proto
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
name|arr
argument_list|(
name|map
argument_list|(
literal|"key1"
argument_list|,
literal|"val1"
argument_list|,
literal|"key2"
argument_list|,
literal|"val2"
argument_list|)
argument_list|,
name|arr
argument_list|(
literal|"key3"
argument_list|,
literal|"val3"
argument_list|)
argument_list|,
name|arr
argument_list|(
literal|4
argument_list|,
literal|5
argument_list|)
argument_list|)
argument_list|,
operator|(
name|Object
index|[]
operator|)
name|serde
operator|.
name|deserialize
argument_list|(
name|writable
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMapAndListNoMapConfigured
parameter_list|()
throws|throws
name|Exception
block|{
name|ProtoMessageWritable
argument_list|<
name|Mesg1
argument_list|>
name|writable
init|=
name|init
argument_list|(
name|Mesg1
operator|.
name|class
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|structoi
argument_list|(
name|list
argument_list|(
literal|"anotherMap"
argument_list|,
literal|"noMap"
argument_list|,
literal|"intList"
argument_list|)
argument_list|,
name|list
argument_list|(
name|listoi
argument_list|(
name|mfoi
argument_list|)
argument_list|,
name|mfoi
argument_list|,
name|listoi
argument_list|(
name|intoi
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|serde
operator|.
name|getObjectInspector
argument_list|()
argument_list|)
expr_stmt|;
name|writable
operator|.
name|setMessage
argument_list|(
name|Mesg1
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
name|arr
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|(
name|Object
index|[]
operator|)
name|serde
operator|.
name|deserialize
argument_list|(
name|writable
argument_list|)
argument_list|)
expr_stmt|;
name|Mesg1
name|proto
init|=
name|makeMesg1
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|writable
operator|.
name|setMessage
argument_list|(
name|proto
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
name|arr
argument_list|(
name|arr
argument_list|(
name|arr
argument_list|(
literal|"key1"
argument_list|,
literal|"val1"
argument_list|)
argument_list|,
name|arr
argument_list|(
literal|"key2"
argument_list|,
literal|"val2"
argument_list|)
argument_list|)
argument_list|,
name|arr
argument_list|(
literal|"key3"
argument_list|,
literal|"val3"
argument_list|)
argument_list|,
name|arr
argument_list|(
literal|4
argument_list|,
literal|5
argument_list|)
argument_list|)
argument_list|,
operator|(
name|Object
index|[]
operator|)
name|serde
operator|.
name|deserialize
argument_list|(
name|writable
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAll
parameter_list|()
throws|throws
name|Exception
block|{
name|ProtoMessageWritable
argument_list|<
name|AllTypes
argument_list|>
name|writable
init|=
name|init
argument_list|(
name|AllTypes
operator|.
name|class
argument_list|,
literal|"MapFieldEntry"
argument_list|)
decl_stmt|;
name|ObjectInspector
name|oi
init|=
name|structoi
argument_list|(
name|list
argument_list|(
literal|"doubleType"
argument_list|,
literal|"floatType"
argument_list|,
literal|"int32Type"
argument_list|,
literal|"int64Type"
argument_list|,
literal|"uint32Type"
argument_list|,
literal|"uint64Type"
argument_list|,
literal|"sint32Type"
argument_list|,
literal|"sint64Type"
argument_list|,
literal|"fixed32Type"
argument_list|,
literal|"fixed64Type"
argument_list|,
literal|"sfixed32Type"
argument_list|,
literal|"sfixed64Type"
argument_list|,
literal|"boolType"
argument_list|,
literal|"stringType"
argument_list|,
literal|"bytesType"
argument_list|,
literal|"mapType"
argument_list|,
literal|"stringListType"
argument_list|,
literal|"messageType"
argument_list|,
literal|"messageListType"
argument_list|,
literal|"enumType"
argument_list|)
argument_list|,
name|list
argument_list|(
name|PrimitiveObjectInspectorFactory
operator|.
name|javaDoubleObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|javaFloatObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|javaLongObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|javaLongObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|javaLongObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|javaLongObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|javaIntObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|javaLongObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|javaBooleanObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|javaStringObjectInspector
argument_list|,
name|PrimitiveObjectInspectorFactory
operator|.
name|javaByteArrayObjectInspector
argument_list|,
name|strmapoi
argument_list|,
name|listoi
argument_list|(
name|stroi
argument_list|)
argument_list|,
name|m1oi
argument_list|,
name|listoi
argument_list|(
name|m1oi
argument_list|)
argument_list|,
name|stroi
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|oi
argument_list|,
name|serde
operator|.
name|getObjectInspector
argument_list|()
argument_list|)
expr_stmt|;
name|writable
operator|.
name|setMessage
argument_list|(
name|AllTypes
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
name|arr
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|(
name|Object
index|[]
operator|)
name|serde
operator|.
name|deserialize
argument_list|(
name|writable
argument_list|)
argument_list|)
expr_stmt|;
name|AllTypes
name|proto
init|=
name|AllTypes
operator|.
name|newBuilder
argument_list|()
operator|.
name|setDoubleType
argument_list|(
literal|1.0
argument_list|)
operator|.
name|setFloatType
argument_list|(
literal|2.0f
argument_list|)
operator|.
name|setInt32Type
argument_list|(
literal|3
argument_list|)
operator|.
name|setInt64Type
argument_list|(
literal|4
argument_list|)
operator|.
name|setUint32Type
argument_list|(
literal|5
argument_list|)
operator|.
name|setUint64Type
argument_list|(
literal|6
argument_list|)
operator|.
name|setSint32Type
argument_list|(
literal|7
argument_list|)
operator|.
name|setSint64Type
argument_list|(
literal|8
argument_list|)
operator|.
name|setFixed32Type
argument_list|(
literal|9
argument_list|)
operator|.
name|setFixed64Type
argument_list|(
literal|10
argument_list|)
operator|.
name|setSfixed32Type
argument_list|(
literal|11
argument_list|)
operator|.
name|setSfixed64Type
argument_list|(
literal|12
argument_list|)
operator|.
name|setBoolType
argument_list|(
literal|true
argument_list|)
operator|.
name|setStringType
argument_list|(
literal|"val13"
argument_list|)
operator|.
name|setBytesType
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
operator|new
name|byte
index|[]
block|{
literal|14
block|,
literal|15
block|}
argument_list|)
argument_list|)
operator|.
name|addMapType
argument_list|(
name|makeMap
argument_list|(
literal|16
argument_list|)
argument_list|)
operator|.
name|addMapType
argument_list|(
name|makeMap
argument_list|(
literal|17
argument_list|)
argument_list|)
operator|.
name|addStringListType
argument_list|(
literal|"val18"
argument_list|)
operator|.
name|addStringListType
argument_list|(
literal|"val19"
argument_list|)
operator|.
name|setMessageType
argument_list|(
name|makeMesg1
argument_list|(
literal|19
argument_list|)
argument_list|)
operator|.
name|addMessageListType
argument_list|(
name|makeMesg1
argument_list|(
literal|24
argument_list|)
argument_list|)
operator|.
name|addMessageListType
argument_list|(
name|makeMesg1
argument_list|(
literal|29
argument_list|)
argument_list|)
operator|.
name|setEnumType
argument_list|(
name|Enum1
operator|.
name|VAL1
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|writable
operator|.
name|setMessage
argument_list|(
name|proto
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
name|arr
argument_list|(
literal|1.0d
argument_list|,
literal|2.0f
argument_list|,
literal|3
argument_list|,
literal|4L
argument_list|,
literal|5
argument_list|,
literal|6L
argument_list|,
literal|7
argument_list|,
literal|8L
argument_list|,
literal|9
argument_list|,
literal|10L
argument_list|,
literal|11
argument_list|,
literal|12L
argument_list|,
literal|true
argument_list|,
literal|"val13"
argument_list|,
operator|new
name|byte
index|[]
block|{
literal|14
block|,
literal|15
block|}
argument_list|,
name|map
argument_list|(
literal|"key16"
argument_list|,
literal|"val16"
argument_list|,
literal|"key17"
argument_list|,
literal|"val17"
argument_list|)
argument_list|,
name|arr
argument_list|(
literal|"val18"
argument_list|,
literal|"val19"
argument_list|)
argument_list|,
name|arr
argument_list|(
name|map
argument_list|(
literal|"key20"
argument_list|,
literal|"val20"
argument_list|,
literal|"key21"
argument_list|,
literal|"val21"
argument_list|)
argument_list|,
name|arr
argument_list|(
literal|"key22"
argument_list|,
literal|"val22"
argument_list|)
argument_list|,
name|arr
argument_list|(
literal|23
argument_list|,
literal|24
argument_list|)
argument_list|)
argument_list|,
name|arr
argument_list|(
name|arr
argument_list|(
name|map
argument_list|(
literal|"key25"
argument_list|,
literal|"val25"
argument_list|,
literal|"key26"
argument_list|,
literal|"val26"
argument_list|)
argument_list|,
name|arr
argument_list|(
literal|"key27"
argument_list|,
literal|"val27"
argument_list|)
argument_list|,
name|arr
argument_list|(
literal|28
argument_list|,
literal|29
argument_list|)
argument_list|)
argument_list|,
name|arr
argument_list|(
name|map
argument_list|(
literal|"key30"
argument_list|,
literal|"val30"
argument_list|,
literal|"key31"
argument_list|,
literal|"val31"
argument_list|)
argument_list|,
name|arr
argument_list|(
literal|"key32"
argument_list|,
literal|"val32"
argument_list|)
argument_list|,
name|arr
argument_list|(
literal|33
argument_list|,
literal|34
argument_list|)
argument_list|)
argument_list|)
argument_list|,
literal|"VAL1"
argument_list|)
argument_list|,
operator|(
name|Object
index|[]
operator|)
name|serde
operator|.
name|deserialize
argument_list|(
name|writable
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBytesWritable
parameter_list|()
throws|throws
name|Exception
block|{
name|serde
operator|=
operator|new
name|ProtobufBytesWritableSerDe
argument_list|()
expr_stmt|;
name|Properties
name|tbl
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|tbl
operator|.
name|setProperty
argument_list|(
name|ProtobufSerDe
operator|.
name|PROTO_CLASS
argument_list|,
name|MapFieldEntry
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|tbl
operator|.
name|setProperty
argument_list|(
name|ProtobufSerDe
operator|.
name|MAP_TYPES
argument_list|,
literal|"MapFieldEntry"
argument_list|)
expr_stmt|;
name|serde
operator|.
name|initialize
argument_list|(
name|conf
argument_list|,
name|tbl
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mfoi
argument_list|,
name|serde
operator|.
name|getObjectInspector
argument_list|()
argument_list|)
expr_stmt|;
name|BytesWritable
name|writable
init|=
operator|new
name|BytesWritable
argument_list|(
name|MapFieldEntry
operator|.
name|getDefaultInstance
argument_list|()
operator|.
name|toByteArray
argument_list|()
argument_list|)
decl_stmt|;
name|assertArrayEquals
argument_list|(
name|arr
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|(
name|Object
index|[]
operator|)
name|serde
operator|.
name|deserialize
argument_list|(
name|writable
argument_list|)
argument_list|)
expr_stmt|;
name|MapFieldEntry
name|proto
init|=
name|makeMap
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|writable
operator|=
operator|new
name|BytesWritable
argument_list|(
name|proto
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
name|Object
name|obj
init|=
name|serde
operator|.
name|deserialize
argument_list|(
name|writable
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|obj
operator|instanceof
name|Object
index|[]
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
name|arr
argument_list|(
name|proto
operator|.
name|getKey
argument_list|()
argument_list|,
name|proto
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|,
operator|(
name|Object
index|[]
operator|)
name|obj
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|ObjectInspector
name|structoi
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|names
parameter_list|,
name|List
argument_list|<
name|ObjectInspector
argument_list|>
name|ois
parameter_list|)
block|{
return|return
name|ObjectInspectorFactory
operator|.
name|getStandardStructObjectInspector
argument_list|(
name|names
argument_list|,
name|ois
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|ObjectInspector
name|listoi
parameter_list|(
name|ObjectInspector
name|oi
parameter_list|)
block|{
return|return
name|ObjectInspectorFactory
operator|.
name|getStandardListObjectInspector
argument_list|(
name|oi
argument_list|)
return|;
block|}
annotation|@
name|SafeVarargs
specifier|private
specifier|static
parameter_list|<
name|T
parameter_list|>
name|List
argument_list|<
name|T
argument_list|>
name|list
parameter_list|(
name|T
modifier|...
name|ts
parameter_list|)
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|ts
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|map
parameter_list|(
name|String
modifier|...
name|s
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|ret
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|s
operator|.
name|length
condition|;
name|i
operator|+=
literal|2
control|)
block|{
name|ret
operator|.
name|put
argument_list|(
name|s
index|[
name|i
index|]
argument_list|,
name|s
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
return|return
name|ret
return|;
block|}
specifier|private
specifier|static
name|Object
index|[]
name|arr
parameter_list|(
name|Object
modifier|...
name|objs
parameter_list|)
block|{
return|return
name|objs
return|;
block|}
block|}
end_class

end_unit

