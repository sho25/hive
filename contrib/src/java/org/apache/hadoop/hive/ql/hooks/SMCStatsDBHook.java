begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|hooks
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|hooks
operator|.
name|conf
operator|.
name|FBHiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
operator|.
name|ASTNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
operator|.
name|AbstractSemanticAnalyzerHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
operator|.
name|HiveSemanticAnalyzerHookContext
import|;
end_import

begin_class
specifier|public
class|class
name|SMCStatsDBHook
extends|extends
name|AbstractSemanticAnalyzerHook
block|{
annotation|@
name|Override
specifier|public
name|ASTNode
name|preAnalyze
parameter_list|(
name|HiveSemanticAnalyzerHookContext
name|context
parameter_list|,
name|ASTNode
name|ast
parameter_list|)
block|{
name|HiveConf
name|conf
decl_stmt|;
try|try
block|{
name|conf
operator|=
operator|(
name|HiveConf
operator|)
name|context
operator|.
name|getConf
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ClassCastException
name|e
parameter_list|)
block|{
comment|// Statistics won't be collected for this query,
comment|// warning about it will be supplied later, by JDBCStatsPublisher
return|return
name|ast
return|;
block|}
name|ConnectionUrlFactory
name|urlFactory
init|=
name|HookUtils
operator|.
name|getUrlFactory
argument_list|(
name|conf
argument_list|,
name|FBHiveConf
operator|.
name|CONNECTION_FACTORY
argument_list|,
name|FBHiveConf
operator|.
name|STATS_CONNECTION_FACTORY
argument_list|,
name|FBHiveConf
operator|.
name|STATS_MYSQL_TIER_VAR_NAME
argument_list|,
name|FBHiveConf
operator|.
name|STATS_HOST_DATABASE_VAR_NAME
argument_list|)
decl_stmt|;
name|String
name|databaseHostName
decl_stmt|;
try|try
block|{
name|databaseHostName
operator|=
name|urlFactory
operator|.
name|getUrl
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// Statistics won't be collected for this query,
comment|// warning about it will be supplied later, by JDBCStatsPublisher
return|return
name|ast
return|;
block|}
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVESTATSDBCONNECTIONSTRING
argument_list|,
name|getUpdatedConnectionString
argument_list|(
name|conf
operator|.
name|getVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVESTATSDBCONNECTIONSTRING
argument_list|)
argument_list|,
name|databaseHostName
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|ast
return|;
block|}
comment|// default visibility for the sake of TestSMCStatsDBHook
name|String
name|getUpdatedConnectionString
parameter_list|(
name|String
name|initialConnectionString
parameter_list|,
name|String
name|addressFromSMC
parameter_list|)
block|{
return|return
name|initialConnectionString
operator|.
name|replaceAll
argument_list|(
literal|"jdbc.*\\?"
argument_list|,
name|addressFromSMC
argument_list|)
return|;
block|}
block|}
end_class

end_unit

