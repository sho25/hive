begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|hooks
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringEscapeUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|session
operator|.
name|SessionState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|hooks
operator|.
name|ReadEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|hooks
operator|.
name|WriteEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|hooks
operator|.
name|PostExecute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|hooks
operator|.
name|LineageInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_comment
comment|/**  * Implementation of a post execute hook that prints out some more information  * to console to allow regression tests to check correctness.  */
end_comment

begin_class
specifier|public
class|class
name|RegressionTestHook
implements|implements
name|PostExecute
block|{
specifier|static
specifier|final
specifier|private
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
literal|"hive.ql.hooks.RegressionTestHook"
argument_list|)
decl_stmt|;
specifier|final
specifier|static
name|String
name|REGRESSION_TEST_PRINT_SWITCH_VAR_NAME
init|=
literal|"fbhive.regressiontesthook.swtich"
decl_stmt|;
specifier|public
name|RegressionTestHook
parameter_list|()
throws|throws
name|Exception
block|{   }
specifier|public
name|void
name|run
parameter_list|(
name|SessionState
name|sess
parameter_list|,
name|Set
argument_list|<
name|ReadEntity
argument_list|>
name|inputs
parameter_list|,
name|Set
argument_list|<
name|WriteEntity
argument_list|>
name|outputs
parameter_list|,
name|LineageInfo
name|lInfo
parameter_list|,
name|UserGroupInformation
name|ugi
parameter_list|)
throws|throws
name|Exception
block|{
name|HiveConf
name|conf
init|=
name|sess
operator|.
name|getConf
argument_list|()
decl_stmt|;
name|String
name|hookSwitch
init|=
name|conf
operator|.
name|get
argument_list|(
name|REGRESSION_TEST_PRINT_SWITCH_VAR_NAME
argument_list|,
literal|""
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|hookSwitch
operator|.
name|equals
argument_list|(
literal|"1"
argument_list|)
condition|)
block|{
return|return;
block|}
name|String
name|inputStr
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|inputs
operator|!=
literal|null
condition|)
block|{
name|StringBuilder
name|inputsSB
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|boolean
name|first
init|=
literal|true
decl_stmt|;
for|for
control|(
name|ReadEntity
name|inp
range|:
name|inputs
control|)
block|{
if|if
condition|(
operator|!
name|first
condition|)
name|inputsSB
operator|.
name|append
argument_list|(
literal|","
argument_list|)
expr_stmt|;
name|first
operator|=
literal|false
expr_stmt|;
name|inputsSB
operator|.
name|append
argument_list|(
name|inp
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|inputStr
operator|=
name|StringEscapeUtils
operator|.
name|escapeJava
argument_list|(
name|inputsSB
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|outputStr
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|outputs
operator|!=
literal|null
condition|)
block|{
name|StringBuilder
name|outputsSB
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|boolean
name|first
init|=
literal|true
decl_stmt|;
for|for
control|(
name|WriteEntity
name|o
range|:
name|outputs
control|)
block|{
if|if
condition|(
operator|!
name|first
condition|)
name|outputsSB
operator|.
name|append
argument_list|(
literal|","
argument_list|)
expr_stmt|;
name|first
operator|=
literal|false
expr_stmt|;
name|outputsSB
operator|.
name|append
argument_list|(
name|o
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|outputStr
operator|=
name|StringEscapeUtils
operator|.
name|escapeJava
argument_list|(
name|outputsSB
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|queryId
init|=
name|conf
operator|.
name|getVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVEQUERYID
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"++++++++++Regression Test Hook Output Start+++++++++"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"+++queryId:"
operator|+
name|queryId
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"+++input:"
operator|+
name|inputStr
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"+++output:"
operator|+
name|outputStr
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"++++++++++Regression Test Hook Output End+++++++++"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

