begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hooks
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|hooks
operator|.
name|ConnectionUrlFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|hooks
operator|.
name|HookUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|hooks
operator|.
name|conf
operator|.
name|FBHiveConf
import|;
end_import

begin_class
specifier|public
class|class
name|MysqlSmcHook
implements|implements
name|JDOConnectionURLHook
block|{
specifier|static
specifier|final
specifier|private
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
literal|"hive.metastore.hooks.MysqlSmcHook"
argument_list|)
decl_stmt|;
name|ConnectionUrlFactory
name|urlFactory
init|=
literal|null
decl_stmt|;
annotation|@
name|Override
specifier|public
name|String
name|getJdoConnectionUrl
parameter_list|(
name|Configuration
name|conf
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|smcUrl
init|=
name|conf
operator|.
name|get
argument_list|(
name|FBHiveConf
operator|.
name|METASTORE_SMC_URL
argument_list|)
decl_stmt|;
if|if
condition|(
name|smcUrl
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|Exception
argument_list|(
name|FBHiveConf
operator|.
name|METASTORE_SMC_URL
operator|+
literal|" is not defined"
argument_list|)
throw|;
block|}
name|String
name|mysqlTier
init|=
name|conf
operator|.
name|get
argument_list|(
name|FBHiveConf
operator|.
name|METASTORE_MYSQL_TIER_VAR_NAME
argument_list|)
decl_stmt|;
if|if
condition|(
name|mysqlTier
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|Exception
argument_list|(
name|FBHiveConf
operator|.
name|METASTORE_MYSQL_TIER_VAR_NAME
operator|+
literal|" is not defined"
argument_list|)
throw|;
block|}
name|String
name|mysqlProps
init|=
name|conf
operator|.
name|get
argument_list|(
name|FBHiveConf
operator|.
name|METASTORE_MYSQL_PROPS
argument_list|)
decl_stmt|;
if|if
condition|(
name|mysqlProps
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|Exception
argument_list|(
name|FBHiveConf
operator|.
name|METASTORE_MYSQL_PROPS
operator|+
literal|" is not defined"
argument_list|)
throw|;
block|}
if|if
condition|(
name|urlFactory
operator|==
literal|null
condition|)
block|{
name|urlFactory
operator|=
name|HookUtils
operator|.
name|getUrlFactory
argument_list|(
name|conf
argument_list|,
name|FBHiveConf
operator|.
name|CONNECTION_FACTORY
argument_list|,
literal|null
argument_list|,
name|FBHiveConf
operator|.
name|METASTORE_MYSQL_TIER_VAR_NAME
argument_list|,
literal|null
argument_list|,
name|FBHiveConf
operator|.
name|METASTORE_MYSQL_PROPS
argument_list|)
expr_stmt|;
block|}
name|urlFactory
operator|.
name|updateProps
argument_list|(
name|smcUrl
argument_list|,
name|mysqlTier
argument_list|,
name|mysqlProps
argument_list|)
expr_stmt|;
return|return
name|urlFactory
operator|.
name|getUrl
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|notifyBadConnectionUrl
parameter_list|(
name|String
name|url
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Notified of a bad URL: "
operator|+
name|url
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

