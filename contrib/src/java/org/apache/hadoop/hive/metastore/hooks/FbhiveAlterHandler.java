begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hooks
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|HiveAlterHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|RawStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|Warehouse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|AlreadyExistsException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|InvalidObjectException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|InvalidOperationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|MetaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Partition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|hooks
operator|.
name|HookUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|hooks
operator|.
name|conf
operator|.
name|FBHiveConf
import|;
end_import

begin_comment
comment|/*  * Subclass of HiveAlterHandler.  Checks that if the table, or partition's table has a  * creation_cluster set, that cluster matches the current cluster where the metastore is running.  * If so, or if the table or partition's table does not have creation_cluster set, it calls its  * super classes implementation of the alter method, i.e. it behaves normally.  If not, it throws  * a MetaException.  */
end_comment

begin_class
specifier|public
class|class
name|FbhiveAlterHandler
extends|extends
name|HiveAlterHandler
block|{
specifier|public
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|FbhiveAlterHandler
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|public
name|Partition
name|alterPartition
parameter_list|(
name|RawStore
name|ms
parameter_list|,
name|Warehouse
name|wh
parameter_list|,
name|String
name|dbname
parameter_list|,
name|String
name|name
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|part_vals
parameter_list|,
name|Partition
name|new_part
parameter_list|)
throws|throws
name|InvalidOperationException
throws|,
name|InvalidObjectException
throws|,
name|AlreadyExistsException
throws|,
name|MetaException
block|{
name|String
name|exception
init|=
literal|"Partition in table "
operator|+
name|name
operator|+
literal|" cannot be altered."
decl_stmt|;
name|checkTableCluster
argument_list|(
name|ms
argument_list|,
name|dbname
argument_list|,
name|name
argument_list|,
name|exception
argument_list|)
expr_stmt|;
return|return
name|super
operator|.
name|alterPartition
argument_list|(
name|ms
argument_list|,
name|wh
argument_list|,
name|dbname
argument_list|,
name|name
argument_list|,
name|part_vals
argument_list|,
name|new_part
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|alterTable
parameter_list|(
name|RawStore
name|msdb
parameter_list|,
name|Warehouse
name|wh
parameter_list|,
name|String
name|dbname
parameter_list|,
name|String
name|name
parameter_list|,
name|Table
name|newt
parameter_list|)
throws|throws
name|InvalidOperationException
throws|,
name|MetaException
block|{
name|String
name|exception
init|=
literal|"Table "
operator|+
name|name
operator|+
literal|" cannot be altered."
decl_stmt|;
name|checkTableCluster
argument_list|(
name|msdb
argument_list|,
name|dbname
argument_list|,
name|name
argument_list|,
name|exception
argument_list|)
expr_stmt|;
name|super
operator|.
name|alterTable
argument_list|(
name|msdb
argument_list|,
name|wh
argument_list|,
name|dbname
argument_list|,
name|name
argument_list|,
name|newt
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkTableCluster
parameter_list|(
name|RawStore
name|msdb
parameter_list|,
name|String
name|dbName
parameter_list|,
name|String
name|tableName
parameter_list|,
name|String
name|exception
parameter_list|)
throws|throws
name|MetaException
block|{
name|Table
name|oldt
init|=
name|msdb
operator|.
name|getTable
argument_list|(
name|dbName
operator|.
name|toLowerCase
argument_list|()
argument_list|,
name|tableName
operator|.
name|toLowerCase
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|oldt
operator|!=
literal|null
condition|)
block|{
name|String
name|creationCluster
init|=
name|oldt
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
name|HookUtils
operator|.
name|TABLE_CREATION_CLUSTER
argument_list|)
decl_stmt|;
name|String
name|currentCluster
init|=
name|hiveConf
operator|.
name|get
argument_list|(
name|FBHiveConf
operator|.
name|FB_CURRENT_CLUSTER
argument_list|)
decl_stmt|;
if|if
condition|(
name|creationCluster
operator|!=
literal|null
operator|&&
name|currentCluster
operator|!=
literal|null
operator|&&
operator|!
name|creationCluster
operator|.
name|equals
argument_list|(
name|currentCluster
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|MetaException
argument_list|(
name|exception
operator|+
literal|" Table's cluster is "
operator|+
name|creationCluster
operator|+
literal|","
operator|+
literal|" whereas current package is "
operator|+
name|currentCluster
argument_list|)
throw|;
block|}
block|}
block|}
block|}
end_class

end_unit

