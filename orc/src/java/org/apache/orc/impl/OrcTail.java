begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  * http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|impl
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|impl
operator|.
name|ReaderImpl
operator|.
name|extractMetadata
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|CompressionCodec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|CompressionKind
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|OrcFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|OrcProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|StripeInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|StripeStatistics
import|;
end_import

begin_comment
comment|// TODO: Make OrcTail implement FileMetadata or Reader interface
end_comment

begin_class
specifier|public
specifier|final
class|class
name|OrcTail
block|{
comment|// postscript + footer - Serialized in OrcSplit
specifier|private
specifier|final
name|OrcProto
operator|.
name|FileTail
name|fileTail
decl_stmt|;
comment|// serialized representation of metadata, footer and postscript
specifier|private
specifier|final
name|ByteBuffer
name|serializedTail
decl_stmt|;
comment|// used to invalidate cache entries
specifier|private
specifier|final
name|long
name|fileModificationTime
decl_stmt|;
comment|// lazily deserialized
specifier|private
name|OrcProto
operator|.
name|Metadata
name|metadata
decl_stmt|;
specifier|public
name|OrcTail
parameter_list|(
name|OrcProto
operator|.
name|FileTail
name|fileTail
parameter_list|,
name|ByteBuffer
name|serializedTail
parameter_list|)
block|{
name|this
argument_list|(
name|fileTail
argument_list|,
name|serializedTail
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
specifier|public
name|OrcTail
parameter_list|(
name|OrcProto
operator|.
name|FileTail
name|fileTail
parameter_list|,
name|ByteBuffer
name|serializedTail
parameter_list|,
name|long
name|fileModificationTime
parameter_list|)
block|{
name|this
operator|.
name|fileTail
operator|=
name|fileTail
expr_stmt|;
name|this
operator|.
name|serializedTail
operator|=
name|serializedTail
expr_stmt|;
name|this
operator|.
name|fileModificationTime
operator|=
name|fileModificationTime
expr_stmt|;
name|this
operator|.
name|metadata
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|ByteBuffer
name|getSerializedTail
parameter_list|()
block|{
return|return
name|serializedTail
return|;
block|}
specifier|public
name|long
name|getFileModificationTime
parameter_list|()
block|{
return|return
name|fileModificationTime
return|;
block|}
specifier|public
name|OrcProto
operator|.
name|Footer
name|getFooter
parameter_list|()
block|{
return|return
name|fileTail
operator|.
name|getFooter
argument_list|()
return|;
block|}
specifier|public
name|OrcProto
operator|.
name|PostScript
name|getPostScript
parameter_list|()
block|{
return|return
name|fileTail
operator|.
name|getPostscript
argument_list|()
return|;
block|}
specifier|public
name|OrcFile
operator|.
name|WriterVersion
name|getWriterVersion
parameter_list|()
block|{
name|OrcProto
operator|.
name|PostScript
name|ps
init|=
name|fileTail
operator|.
name|getPostscript
argument_list|()
decl_stmt|;
return|return
operator|(
name|ps
operator|.
name|hasWriterVersion
argument_list|()
condition|?
name|OrcFile
operator|.
name|WriterVersion
operator|.
name|from
argument_list|(
name|ps
operator|.
name|getWriterVersion
argument_list|()
argument_list|)
else|:
name|OrcFile
operator|.
name|WriterVersion
operator|.
name|ORIGINAL
operator|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|StripeInformation
argument_list|>
name|getStripes
parameter_list|()
block|{
name|List
argument_list|<
name|StripeInformation
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|fileTail
operator|.
name|getFooter
argument_list|()
operator|.
name|getStripesCount
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|OrcProto
operator|.
name|StripeInformation
name|stripeProto
range|:
name|fileTail
operator|.
name|getFooter
argument_list|()
operator|.
name|getStripesList
argument_list|()
control|)
block|{
name|result
operator|.
name|add
argument_list|(
operator|new
name|ReaderImpl
operator|.
name|StripeInformationImpl
argument_list|(
name|stripeProto
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|CompressionKind
name|getCompressionKind
parameter_list|()
block|{
return|return
name|CompressionKind
operator|.
name|valueOf
argument_list|(
name|fileTail
operator|.
name|getPostscript
argument_list|()
operator|.
name|getCompression
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|CompressionCodec
name|getCompressionCodec
parameter_list|()
block|{
return|return
name|PhysicalFsWriter
operator|.
name|createCodec
argument_list|(
name|getCompressionKind
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|int
name|getCompressionBufferSize
parameter_list|()
block|{
return|return
operator|(
name|int
operator|)
name|fileTail
operator|.
name|getPostscript
argument_list|()
operator|.
name|getCompressionBlockSize
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|StripeStatistics
argument_list|>
name|getStripeStatistics
parameter_list|()
throws|throws
name|IOException
block|{
name|List
argument_list|<
name|StripeStatistics
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|OrcProto
operator|.
name|StripeStatistics
argument_list|>
name|ssProto
init|=
name|getStripeStatisticsProto
argument_list|()
decl_stmt|;
if|if
condition|(
name|ssProto
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|OrcProto
operator|.
name|StripeStatistics
name|ss
range|:
name|ssProto
control|)
block|{
name|result
operator|.
name|add
argument_list|(
operator|new
name|StripeStatistics
argument_list|(
name|ss
operator|.
name|getColStatsList
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|result
return|;
block|}
specifier|public
name|List
argument_list|<
name|OrcProto
operator|.
name|StripeStatistics
argument_list|>
name|getStripeStatisticsProto
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|serializedTail
operator|==
literal|null
condition|)
return|return
literal|null
return|;
if|if
condition|(
name|metadata
operator|==
literal|null
condition|)
block|{
name|metadata
operator|=
name|extractMetadata
argument_list|(
name|serializedTail
argument_list|,
literal|0
argument_list|,
operator|(
name|int
operator|)
name|fileTail
operator|.
name|getPostscript
argument_list|()
operator|.
name|getMetadataLength
argument_list|()
argument_list|,
name|getCompressionCodec
argument_list|()
argument_list|,
name|getCompressionBufferSize
argument_list|()
argument_list|)
expr_stmt|;
comment|// clear does not clear the contents but sets position to 0 and limit = capacity
name|serializedTail
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|metadata
operator|.
name|getStripeStatsList
argument_list|()
return|;
block|}
specifier|public
name|int
name|getMetadataSize
parameter_list|()
block|{
return|return
operator|(
name|int
operator|)
name|getPostScript
argument_list|()
operator|.
name|getMetadataLength
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|OrcProto
operator|.
name|Type
argument_list|>
name|getTypes
parameter_list|()
block|{
return|return
name|getFooter
argument_list|()
operator|.
name|getTypesList
argument_list|()
return|;
block|}
specifier|public
name|OrcProto
operator|.
name|FileTail
name|getFileTail
parameter_list|()
block|{
return|return
name|fileTail
return|;
block|}
specifier|public
name|OrcProto
operator|.
name|FileTail
name|getMinimalFileTail
parameter_list|()
block|{
name|OrcProto
operator|.
name|FileTail
operator|.
name|Builder
name|fileTailBuilder
init|=
name|OrcProto
operator|.
name|FileTail
operator|.
name|newBuilder
argument_list|(
name|fileTail
argument_list|)
decl_stmt|;
name|OrcProto
operator|.
name|Footer
operator|.
name|Builder
name|footerBuilder
init|=
name|OrcProto
operator|.
name|Footer
operator|.
name|newBuilder
argument_list|(
name|fileTail
operator|.
name|getFooter
argument_list|()
argument_list|)
decl_stmt|;
name|footerBuilder
operator|.
name|clearStatistics
argument_list|()
expr_stmt|;
name|fileTailBuilder
operator|.
name|setFooter
argument_list|(
name|footerBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|OrcProto
operator|.
name|FileTail
name|result
init|=
name|fileTailBuilder
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|result
return|;
block|}
block|}
end_class

end_unit

