begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|OrcProto
operator|.
name|BloomFilterIndex
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|OrcProto
operator|.
name|Footer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|OrcProto
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|OrcProto
operator|.
name|PostScript
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|OrcProto
operator|.
name|RowIndex
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|OrcProto
operator|.
name|StripeFooter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|OrcProto
operator|.
name|StripeInformation
import|;
end_import

begin_interface
specifier|public
interface|interface
name|PhysicalWriter
block|{
comment|/**    * Creates all the streams/connections/etc. necessary to write.    */
name|void
name|initialize
parameter_list|()
throws|throws
name|IOException
function_decl|;
comment|/**    * Writes out the file metadata.    * @param builder Metadata builder to finalize and write.    */
name|void
name|writeFileMetadata
parameter_list|(
name|Metadata
operator|.
name|Builder
name|builder
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Writes out the file footer.    * @param builder Footer builder to finalize and write.    */
name|void
name|writeFileFooter
parameter_list|(
name|Footer
operator|.
name|Builder
name|builder
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Writes out the postscript (including the size byte if needed).    * @param builder Postscript builder to finalize and write.    */
name|void
name|writePostScript
parameter_list|(
name|PostScript
operator|.
name|Builder
name|builder
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Creates physical stream to write data to.    * @param name Stream name.    * @return The output stream.    */
name|OutStream
name|getOrCreatePhysicalStream
parameter_list|(
name|StreamName
name|name
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Flushes the data in all the streams, spills them to disk, write out stripe footer.    * @param footer Stripe footer to be updated with relevant data and written out.    * @param dirEntry File metadata entry for the stripe, to be updated with relevant data.    */
name|void
name|finalizeStripe
parameter_list|(
name|StripeFooter
operator|.
name|Builder
name|footer
parameter_list|,
name|StripeInformation
operator|.
name|Builder
name|dirEntry
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Writes out the index for the stripe column.    * @param streamName Stream name.    * @param rowIndex Row index entries to write.    */
name|void
name|writeIndexStream
parameter_list|(
name|StreamName
name|name
parameter_list|,
name|RowIndex
operator|.
name|Builder
name|rowIndex
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Writes out the index for the stripe column.    * @param streamName Stream name.    * @param bloomFilterIndex Bloom filter index to write.    */
name|void
name|writeBloomFilterStream
parameter_list|(
name|StreamName
name|streamName
parameter_list|,
name|BloomFilterIndex
operator|.
name|Builder
name|bloomFilterIndex
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Closes the writer.    */
name|void
name|close
parameter_list|()
throws|throws
name|IOException
function_decl|;
comment|/**    * Force-flushes the writer.    */
name|void
name|flush
parameter_list|()
throws|throws
name|IOException
function_decl|;
comment|/**    * @return the physical writer position (e.g. for updater).    */
name|long
name|getRawWriterPosition
parameter_list|()
throws|throws
name|IOException
function_decl|;
comment|/** @return physical stripe size, taking padding into account. */
name|long
name|getPhysicalStripeSize
parameter_list|()
function_decl|;
comment|/** @return whether the writer is compressed. */
name|boolean
name|isCompressed
parameter_list|()
function_decl|;
comment|/**    * Appends raw stripe data (e.g. for file merger).    * @param stripe Stripe data buffer.    * @param offset Stripe data buffer offset.    * @param length Stripe data buffer length.    * @param dirEntry File metadata entry for the stripe, to be updated with relevant data.    * @throws IOException    */
name|void
name|appendRawStripe
parameter_list|(
name|byte
index|[]
name|stripe
parameter_list|,
name|int
name|offset
parameter_list|,
name|int
name|length
parameter_list|,
name|StripeInformation
operator|.
name|Builder
name|dirEntry
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * @return the estimated memory usage for the stripe.    */
name|long
name|estimateMemory
parameter_list|()
function_decl|;
block|}
end_interface

end_unit

