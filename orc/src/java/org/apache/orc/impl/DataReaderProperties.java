begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|CompressionKind
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|annotation
operator|.
name|Nullable
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|DataReaderProperties
block|{
specifier|private
specifier|final
name|FileSystem
name|fileSystem
decl_stmt|;
specifier|private
specifier|final
name|Path
name|path
decl_stmt|;
specifier|private
specifier|final
name|CompressionKind
name|compression
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|zeroCopy
decl_stmt|;
specifier|private
specifier|final
name|int
name|typeCount
decl_stmt|;
specifier|private
specifier|final
name|int
name|bufferSize
decl_stmt|;
specifier|private
name|DataReaderProperties
parameter_list|(
name|Builder
name|builder
parameter_list|)
block|{
name|this
operator|.
name|fileSystem
operator|=
name|builder
operator|.
name|fileSystem
expr_stmt|;
name|this
operator|.
name|path
operator|=
name|builder
operator|.
name|path
expr_stmt|;
name|this
operator|.
name|compression
operator|=
name|builder
operator|.
name|compression
expr_stmt|;
name|this
operator|.
name|zeroCopy
operator|=
name|builder
operator|.
name|zeroCopy
expr_stmt|;
name|this
operator|.
name|typeCount
operator|=
name|builder
operator|.
name|typeCount
expr_stmt|;
name|this
operator|.
name|bufferSize
operator|=
name|builder
operator|.
name|bufferSize
expr_stmt|;
block|}
specifier|public
name|FileSystem
name|getFileSystem
parameter_list|()
block|{
return|return
name|fileSystem
return|;
block|}
specifier|public
name|Path
name|getPath
parameter_list|()
block|{
return|return
name|path
return|;
block|}
specifier|public
name|CompressionKind
name|getCompression
parameter_list|()
block|{
return|return
name|compression
return|;
block|}
specifier|public
name|boolean
name|getZeroCopy
parameter_list|()
block|{
return|return
name|zeroCopy
return|;
block|}
specifier|public
name|int
name|getTypeCount
parameter_list|()
block|{
return|return
name|typeCount
return|;
block|}
specifier|public
name|int
name|getBufferSize
parameter_list|()
block|{
return|return
name|bufferSize
return|;
block|}
specifier|public
specifier|static
name|Builder
name|builder
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
specifier|static
class|class
name|Builder
block|{
specifier|private
name|FileSystem
name|fileSystem
decl_stmt|;
specifier|private
name|Path
name|path
decl_stmt|;
specifier|private
name|CompressionKind
name|compression
decl_stmt|;
specifier|private
name|boolean
name|zeroCopy
decl_stmt|;
specifier|private
name|int
name|typeCount
decl_stmt|;
specifier|private
name|int
name|bufferSize
decl_stmt|;
specifier|private
name|Builder
parameter_list|()
block|{      }
specifier|public
name|Builder
name|withFileSystem
parameter_list|(
name|FileSystem
name|fileSystem
parameter_list|)
block|{
name|this
operator|.
name|fileSystem
operator|=
name|fileSystem
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|withPath
parameter_list|(
name|Path
name|path
parameter_list|)
block|{
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|withCompression
parameter_list|(
name|CompressionKind
name|value
parameter_list|)
block|{
name|this
operator|.
name|compression
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|withZeroCopy
parameter_list|(
name|boolean
name|zeroCopy
parameter_list|)
block|{
name|this
operator|.
name|zeroCopy
operator|=
name|zeroCopy
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|withTypeCount
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|typeCount
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|withBufferSize
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|bufferSize
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|DataReaderProperties
name|build
parameter_list|()
block|{
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|fileSystem
argument_list|)
expr_stmt|;
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|path
argument_list|)
expr_stmt|;
return|return
operator|new
name|DataReaderProperties
argument_list|(
name|this
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

