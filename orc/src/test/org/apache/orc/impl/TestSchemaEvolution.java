begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|impl
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|vector
operator|.
name|DoubleColumnVector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|vector
operator|.
name|VectorizedRowBatch
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|OrcFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|RecordReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|TypeDescription
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestName
import|;
end_import

begin_class
specifier|public
class|class
name|TestSchemaEvolution
block|{
annotation|@
name|Rule
specifier|public
name|TestName
name|testCaseName
init|=
operator|new
name|TestName
argument_list|()
decl_stmt|;
name|Configuration
name|conf
decl_stmt|;
name|Path
name|testFilePath
decl_stmt|;
name|FileSystem
name|fs
decl_stmt|;
name|Path
name|workDir
init|=
operator|new
name|Path
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"test.tmp.dir"
argument_list|,
literal|"target"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"test"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"tmp"
argument_list|)
argument_list|)
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|fs
operator|=
name|FileSystem
operator|.
name|getLocal
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|testFilePath
operator|=
operator|new
name|Path
argument_list|(
name|workDir
argument_list|,
literal|"TestOrcFile."
operator|+
name|testCaseName
operator|.
name|getMethodName
argument_list|()
operator|+
literal|".orc"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|delete
argument_list|(
name|testFilePath
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDataTypeConversion1
parameter_list|()
throws|throws
name|IOException
block|{
name|TypeDescription
name|fileStruct1
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createInt
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f2"
argument_list|,
name|TypeDescription
operator|.
name|createString
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f3"
argument_list|,
name|TypeDescription
operator|.
name|createDecimal
argument_list|()
operator|.
name|withPrecision
argument_list|(
literal|38
argument_list|)
operator|.
name|withScale
argument_list|(
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|SchemaEvolution
name|same1
init|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileStruct1
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|same1
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|TypeDescription
name|readerStruct1
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createInt
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f2"
argument_list|,
name|TypeDescription
operator|.
name|createString
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f3"
argument_list|,
name|TypeDescription
operator|.
name|createDecimal
argument_list|()
operator|.
name|withPrecision
argument_list|(
literal|38
argument_list|)
operator|.
name|withScale
argument_list|(
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|SchemaEvolution
name|both1
init|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileStruct1
argument_list|,
name|readerStruct1
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|both1
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|TypeDescription
name|readerStruct1diff
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createLong
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f2"
argument_list|,
name|TypeDescription
operator|.
name|createString
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f3"
argument_list|,
name|TypeDescription
operator|.
name|createDecimal
argument_list|()
operator|.
name|withPrecision
argument_list|(
literal|38
argument_list|)
operator|.
name|withScale
argument_list|(
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|SchemaEvolution
name|both1diff
init|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileStruct1
argument_list|,
name|readerStruct1diff
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|both1diff
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|TypeDescription
name|readerStruct1diffPrecision
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createInt
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f2"
argument_list|,
name|TypeDescription
operator|.
name|createString
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f3"
argument_list|,
name|TypeDescription
operator|.
name|createDecimal
argument_list|()
operator|.
name|withPrecision
argument_list|(
literal|12
argument_list|)
operator|.
name|withScale
argument_list|(
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|SchemaEvolution
name|both1diffPrecision
init|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileStruct1
argument_list|,
name|readerStruct1diffPrecision
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|both1diffPrecision
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDataTypeConversion2
parameter_list|()
throws|throws
name|IOException
block|{
name|TypeDescription
name|fileStruct2
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createUnion
argument_list|()
operator|.
name|addUnionChild
argument_list|(
name|TypeDescription
operator|.
name|createByte
argument_list|()
argument_list|)
operator|.
name|addUnionChild
argument_list|(
name|TypeDescription
operator|.
name|createDecimal
argument_list|()
operator|.
name|withPrecision
argument_list|(
literal|20
argument_list|)
operator|.
name|withScale
argument_list|(
literal|10
argument_list|)
argument_list|)
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f2"
argument_list|,
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f3"
argument_list|,
name|TypeDescription
operator|.
name|createDate
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f4"
argument_list|,
name|TypeDescription
operator|.
name|createDouble
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f5"
argument_list|,
name|TypeDescription
operator|.
name|createBoolean
argument_list|()
argument_list|)
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f6"
argument_list|,
name|TypeDescription
operator|.
name|createChar
argument_list|()
operator|.
name|withMaxLength
argument_list|(
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|SchemaEvolution
name|same2
init|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileStruct2
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|same2
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|TypeDescription
name|readerStruct2
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createUnion
argument_list|()
operator|.
name|addUnionChild
argument_list|(
name|TypeDescription
operator|.
name|createByte
argument_list|()
argument_list|)
operator|.
name|addUnionChild
argument_list|(
name|TypeDescription
operator|.
name|createDecimal
argument_list|()
operator|.
name|withPrecision
argument_list|(
literal|20
argument_list|)
operator|.
name|withScale
argument_list|(
literal|10
argument_list|)
argument_list|)
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f2"
argument_list|,
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f3"
argument_list|,
name|TypeDescription
operator|.
name|createDate
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f4"
argument_list|,
name|TypeDescription
operator|.
name|createDouble
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f5"
argument_list|,
name|TypeDescription
operator|.
name|createBoolean
argument_list|()
argument_list|)
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f6"
argument_list|,
name|TypeDescription
operator|.
name|createChar
argument_list|()
operator|.
name|withMaxLength
argument_list|(
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|SchemaEvolution
name|both2
init|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileStruct2
argument_list|,
name|readerStruct2
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|both2
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|TypeDescription
name|readerStruct2diff
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createUnion
argument_list|()
operator|.
name|addUnionChild
argument_list|(
name|TypeDescription
operator|.
name|createByte
argument_list|()
argument_list|)
operator|.
name|addUnionChild
argument_list|(
name|TypeDescription
operator|.
name|createDecimal
argument_list|()
operator|.
name|withPrecision
argument_list|(
literal|20
argument_list|)
operator|.
name|withScale
argument_list|(
literal|10
argument_list|)
argument_list|)
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f2"
argument_list|,
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f3"
argument_list|,
name|TypeDescription
operator|.
name|createDate
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f4"
argument_list|,
name|TypeDescription
operator|.
name|createDouble
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f5"
argument_list|,
name|TypeDescription
operator|.
name|createByte
argument_list|()
argument_list|)
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f6"
argument_list|,
name|TypeDescription
operator|.
name|createChar
argument_list|()
operator|.
name|withMaxLength
argument_list|(
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|SchemaEvolution
name|both2diff
init|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileStruct2
argument_list|,
name|readerStruct2diff
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|both2diff
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|TypeDescription
name|readerStruct2diffChar
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createUnion
argument_list|()
operator|.
name|addUnionChild
argument_list|(
name|TypeDescription
operator|.
name|createByte
argument_list|()
argument_list|)
operator|.
name|addUnionChild
argument_list|(
name|TypeDescription
operator|.
name|createDecimal
argument_list|()
operator|.
name|withPrecision
argument_list|(
literal|20
argument_list|)
operator|.
name|withScale
argument_list|(
literal|10
argument_list|)
argument_list|)
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f2"
argument_list|,
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f3"
argument_list|,
name|TypeDescription
operator|.
name|createDate
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f4"
argument_list|,
name|TypeDescription
operator|.
name|createDouble
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f5"
argument_list|,
name|TypeDescription
operator|.
name|createBoolean
argument_list|()
argument_list|)
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f6"
argument_list|,
name|TypeDescription
operator|.
name|createChar
argument_list|()
operator|.
name|withMaxLength
argument_list|(
literal|80
argument_list|)
argument_list|)
decl_stmt|;
name|SchemaEvolution
name|both2diffChar
init|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileStruct2
argument_list|,
name|readerStruct2diffChar
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|both2diffChar
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFloatToDoubleEvolution
parameter_list|()
throws|throws
name|Exception
block|{
name|testFilePath
operator|=
operator|new
name|Path
argument_list|(
name|workDir
argument_list|,
literal|"TestOrcFile."
operator|+
name|testCaseName
operator|.
name|getMethodName
argument_list|()
operator|+
literal|".orc"
argument_list|)
expr_stmt|;
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createFloat
argument_list|()
decl_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
operator|new
name|VectorizedRowBatch
argument_list|(
literal|1
argument_list|,
literal|1024
argument_list|)
decl_stmt|;
name|DoubleColumnVector
name|dcv
init|=
operator|new
name|DoubleColumnVector
argument_list|(
literal|1024
argument_list|)
decl_stmt|;
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|=
name|dcv
expr_stmt|;
name|batch
operator|.
name|reset
argument_list|()
expr_stmt|;
name|batch
operator|.
name|size
operator|=
literal|1
expr_stmt|;
name|dcv
operator|.
name|vector
index|[
literal|0
index|]
operator|=
literal|74.72f
expr_stmt|;
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|TypeDescription
name|schemaOnRead
init|=
name|TypeDescription
operator|.
name|createDouble
argument_list|()
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|(
operator|new
name|Reader
operator|.
name|Options
argument_list|()
operator|.
name|schema
argument_list|(
name|schemaOnRead
argument_list|)
argument_list|)
decl_stmt|;
name|batch
operator|=
name|schemaOnRead
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|74.72
argument_list|,
operator|(
operator|(
name|DoubleColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
literal|0
index|]
argument_list|,
literal|0.00000000001
argument_list|)
expr_stmt|;
name|rows
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSafePpdEvaluation
parameter_list|()
throws|throws
name|IOException
block|{
name|TypeDescription
name|fileStruct1
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createInt
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f2"
argument_list|,
name|TypeDescription
operator|.
name|createString
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f3"
argument_list|,
name|TypeDescription
operator|.
name|createDecimal
argument_list|()
operator|.
name|withPrecision
argument_list|(
literal|38
argument_list|)
operator|.
name|withScale
argument_list|(
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|SchemaEvolution
name|same1
init|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileStruct1
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|same1
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|same1
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|TypeDescription
name|readerStruct1
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createInt
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f2"
argument_list|,
name|TypeDescription
operator|.
name|createString
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f3"
argument_list|,
name|TypeDescription
operator|.
name|createDecimal
argument_list|()
operator|.
name|withPrecision
argument_list|(
literal|38
argument_list|)
operator|.
name|withScale
argument_list|(
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|SchemaEvolution
name|both1
init|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileStruct1
argument_list|,
name|readerStruct1
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|both1
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|both1
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|both1
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|both1
operator|.
name|isPPDSafeConversion
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|both1
operator|.
name|isPPDSafeConversion
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
comment|// int -> long
name|TypeDescription
name|readerStruct1diff
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createLong
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f2"
argument_list|,
name|TypeDescription
operator|.
name|createString
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f3"
argument_list|,
name|TypeDescription
operator|.
name|createDecimal
argument_list|()
operator|.
name|withPrecision
argument_list|(
literal|38
argument_list|)
operator|.
name|withScale
argument_list|(
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|SchemaEvolution
name|both1diff
init|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileStruct1
argument_list|,
name|readerStruct1diff
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|both1diff
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|both1diff
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|both1diff
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|both1diff
operator|.
name|isPPDSafeConversion
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|both1diff
operator|.
name|isPPDSafeConversion
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
comment|// decimal(38,10) -> decimal(12, 10)
name|TypeDescription
name|readerStruct1diffPrecision
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createInt
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f2"
argument_list|,
name|TypeDescription
operator|.
name|createString
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f3"
argument_list|,
name|TypeDescription
operator|.
name|createDecimal
argument_list|()
operator|.
name|withPrecision
argument_list|(
literal|12
argument_list|)
operator|.
name|withScale
argument_list|(
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|SchemaEvolution
name|both1diffPrecision
init|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileStruct1
argument_list|,
name|readerStruct1diffPrecision
argument_list|,
operator|new
name|boolean
index|[]
block|{
literal|true
block|,
literal|false
block|,
literal|false
block|,
literal|true
block|}
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|both1diffPrecision
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|both1diffPrecision
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|both1diffPrecision
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// column not included
name|assertFalse
argument_list|(
name|both1diffPrecision
operator|.
name|isPPDSafeConversion
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
comment|// column not included
name|assertFalse
argument_list|(
name|both1diffPrecision
operator|.
name|isPPDSafeConversion
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
comment|// add columns
name|readerStruct1
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createInt
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f2"
argument_list|,
name|TypeDescription
operator|.
name|createString
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f3"
argument_list|,
name|TypeDescription
operator|.
name|createDecimal
argument_list|()
operator|.
name|withPrecision
argument_list|(
literal|38
argument_list|)
operator|.
name|withScale
argument_list|(
literal|10
argument_list|)
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f4"
argument_list|,
name|TypeDescription
operator|.
name|createBoolean
argument_list|()
argument_list|)
expr_stmt|;
name|both1
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileStruct1
argument_list|,
name|readerStruct1
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|both1
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|both1
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|both1
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|both1
operator|.
name|isPPDSafeConversion
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|both1
operator|.
name|isPPDSafeConversion
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|both1
operator|.
name|isPPDSafeConversion
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSafePpdEvaluationForInts
parameter_list|()
throws|throws
name|IOException
block|{
comment|// byte -> short -> int -> long
name|TypeDescription
name|fileSchema
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createByte
argument_list|()
argument_list|)
decl_stmt|;
name|SchemaEvolution
name|schemaEvolution
init|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
comment|// byte -> short
name|TypeDescription
name|readerSchema
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createShort
argument_list|()
argument_list|)
decl_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
name|readerSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// byte -> int
name|readerSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createInt
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
name|readerSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// byte -> long
name|readerSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createLong
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
name|readerSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// short -> int -> long
name|fileSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createShort
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
comment|// unsafe conversion short -> byte
name|readerSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createByte
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
name|readerSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// short -> int
name|readerSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createInt
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
name|readerSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// short -> long
name|readerSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createLong
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
name|readerSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// int -> long
name|fileSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createInt
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
comment|// unsafe conversion int -> byte
name|readerSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createByte
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
name|readerSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// unsafe conversion int -> short
name|readerSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createShort
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
name|readerSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// int -> long
name|readerSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createLong
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
name|readerSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// long
name|fileSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createLong
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
comment|// unsafe conversion long -> byte
name|readerSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createByte
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
name|readerSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// unsafe conversion long -> short
name|readerSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createShort
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
name|readerSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// unsafe conversion long -> int
name|readerSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createInt
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
name|readerSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// invalid
name|readerSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createString
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
name|readerSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// invalid
name|readerSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createFloat
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
name|readerSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// invalid
name|readerSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createTimestamp
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
name|readerSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSafePpdEvaluationForStrings
parameter_list|()
throws|throws
name|IOException
block|{
name|TypeDescription
name|fileSchema
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createString
argument_list|()
argument_list|)
decl_stmt|;
name|SchemaEvolution
name|schemaEvolution
init|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
comment|// string -> char
name|TypeDescription
name|readerSchema
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createChar
argument_list|()
argument_list|)
decl_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
name|readerSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// string -> varchar
name|readerSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createVarchar
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
name|readerSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|fileSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createChar
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
comment|// char -> string
name|readerSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createString
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
name|readerSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// char -> varchar
name|readerSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createVarchar
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
name|readerSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|fileSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createVarchar
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
comment|// varchar -> string
name|readerSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createString
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
name|readerSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// varchar -> char
name|readerSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createChar
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
name|readerSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// invalid
name|readerSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createDecimal
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
name|readerSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// invalid
name|readerSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createDate
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
name|readerSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// invalid
name|readerSchema
operator|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createInt
argument_list|()
argument_list|)
expr_stmt|;
name|schemaEvolution
operator|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileSchema
argument_list|,
name|readerSchema
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|schemaEvolution
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|schemaEvolution
operator|.
name|isPPDSafeConversion
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

