begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|impl
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|orc
operator|.
name|TypeDescription
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|TestSchemaEvolution
block|{
annotation|@
name|Test
specifier|public
name|void
name|testDataTypeConversion1
parameter_list|()
throws|throws
name|IOException
block|{
name|TypeDescription
name|fileStruct1
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createInt
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f2"
argument_list|,
name|TypeDescription
operator|.
name|createString
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f3"
argument_list|,
name|TypeDescription
operator|.
name|createDecimal
argument_list|()
operator|.
name|withPrecision
argument_list|(
literal|38
argument_list|)
operator|.
name|withScale
argument_list|(
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|SchemaEvolution
name|same1
init|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileStruct1
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|same1
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|TypeDescription
name|readerStruct1
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createInt
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f2"
argument_list|,
name|TypeDescription
operator|.
name|createString
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f3"
argument_list|,
name|TypeDescription
operator|.
name|createDecimal
argument_list|()
operator|.
name|withPrecision
argument_list|(
literal|38
argument_list|)
operator|.
name|withScale
argument_list|(
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|SchemaEvolution
name|both1
init|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileStruct1
argument_list|,
name|readerStruct1
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|both1
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|TypeDescription
name|readerStruct1diff
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createLong
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f2"
argument_list|,
name|TypeDescription
operator|.
name|createString
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f3"
argument_list|,
name|TypeDescription
operator|.
name|createDecimal
argument_list|()
operator|.
name|withPrecision
argument_list|(
literal|38
argument_list|)
operator|.
name|withScale
argument_list|(
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|SchemaEvolution
name|both1diff
init|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileStruct1
argument_list|,
name|readerStruct1diff
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|both1diff
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|TypeDescription
name|readerStruct1diffPrecision
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createInt
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f2"
argument_list|,
name|TypeDescription
operator|.
name|createString
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f3"
argument_list|,
name|TypeDescription
operator|.
name|createDecimal
argument_list|()
operator|.
name|withPrecision
argument_list|(
literal|12
argument_list|)
operator|.
name|withScale
argument_list|(
literal|10
argument_list|)
argument_list|)
decl_stmt|;
name|SchemaEvolution
name|both1diffPrecision
init|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileStruct1
argument_list|,
name|readerStruct1diffPrecision
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|both1diffPrecision
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDataTypeConversion2
parameter_list|()
throws|throws
name|IOException
block|{
name|TypeDescription
name|fileStruct2
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createUnion
argument_list|()
operator|.
name|addUnionChild
argument_list|(
name|TypeDescription
operator|.
name|createByte
argument_list|()
argument_list|)
operator|.
name|addUnionChild
argument_list|(
name|TypeDescription
operator|.
name|createDecimal
argument_list|()
operator|.
name|withPrecision
argument_list|(
literal|20
argument_list|)
operator|.
name|withScale
argument_list|(
literal|10
argument_list|)
argument_list|)
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f2"
argument_list|,
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f3"
argument_list|,
name|TypeDescription
operator|.
name|createDate
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f4"
argument_list|,
name|TypeDescription
operator|.
name|createDouble
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f5"
argument_list|,
name|TypeDescription
operator|.
name|createBoolean
argument_list|()
argument_list|)
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f6"
argument_list|,
name|TypeDescription
operator|.
name|createChar
argument_list|()
operator|.
name|withMaxLength
argument_list|(
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|SchemaEvolution
name|same2
init|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileStruct2
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|same2
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|TypeDescription
name|readerStruct2
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createUnion
argument_list|()
operator|.
name|addUnionChild
argument_list|(
name|TypeDescription
operator|.
name|createByte
argument_list|()
argument_list|)
operator|.
name|addUnionChild
argument_list|(
name|TypeDescription
operator|.
name|createDecimal
argument_list|()
operator|.
name|withPrecision
argument_list|(
literal|20
argument_list|)
operator|.
name|withScale
argument_list|(
literal|10
argument_list|)
argument_list|)
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f2"
argument_list|,
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f3"
argument_list|,
name|TypeDescription
operator|.
name|createDate
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f4"
argument_list|,
name|TypeDescription
operator|.
name|createDouble
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f5"
argument_list|,
name|TypeDescription
operator|.
name|createBoolean
argument_list|()
argument_list|)
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f6"
argument_list|,
name|TypeDescription
operator|.
name|createChar
argument_list|()
operator|.
name|withMaxLength
argument_list|(
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|SchemaEvolution
name|both2
init|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileStruct2
argument_list|,
name|readerStruct2
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|both2
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|TypeDescription
name|readerStruct2diff
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createUnion
argument_list|()
operator|.
name|addUnionChild
argument_list|(
name|TypeDescription
operator|.
name|createByte
argument_list|()
argument_list|)
operator|.
name|addUnionChild
argument_list|(
name|TypeDescription
operator|.
name|createDecimal
argument_list|()
operator|.
name|withPrecision
argument_list|(
literal|20
argument_list|)
operator|.
name|withScale
argument_list|(
literal|10
argument_list|)
argument_list|)
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f2"
argument_list|,
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f3"
argument_list|,
name|TypeDescription
operator|.
name|createDate
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f4"
argument_list|,
name|TypeDescription
operator|.
name|createDouble
argument_list|()
argument_list|)
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f6"
argument_list|,
name|TypeDescription
operator|.
name|createChar
argument_list|()
operator|.
name|withMaxLength
argument_list|(
literal|100
argument_list|)
argument_list|)
decl_stmt|;
name|SchemaEvolution
name|both2diff
init|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileStruct2
argument_list|,
name|readerStruct2diff
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|both2diff
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
name|TypeDescription
name|readerStruct2diffChar
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f1"
argument_list|,
name|TypeDescription
operator|.
name|createUnion
argument_list|()
operator|.
name|addUnionChild
argument_list|(
name|TypeDescription
operator|.
name|createByte
argument_list|()
argument_list|)
operator|.
name|addUnionChild
argument_list|(
name|TypeDescription
operator|.
name|createDecimal
argument_list|()
operator|.
name|withPrecision
argument_list|(
literal|20
argument_list|)
operator|.
name|withScale
argument_list|(
literal|10
argument_list|)
argument_list|)
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f2"
argument_list|,
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"f3"
argument_list|,
name|TypeDescription
operator|.
name|createDate
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f4"
argument_list|,
name|TypeDescription
operator|.
name|createDouble
argument_list|()
argument_list|)
argument_list|)
operator|.
name|addField
argument_list|(
literal|"f6"
argument_list|,
name|TypeDescription
operator|.
name|createChar
argument_list|()
operator|.
name|withMaxLength
argument_list|(
literal|80
argument_list|)
argument_list|)
decl_stmt|;
name|SchemaEvolution
name|both2diffChar
init|=
operator|new
name|SchemaEvolution
argument_list|(
name|fileStruct2
argument_list|,
name|readerStruct2diffChar
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|both2diffChar
operator|.
name|hasConversion
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

