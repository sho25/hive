begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|orc
package|;
end_package

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Timestamp
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|vector
operator|.
name|LongColumnVector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|vector
operator|.
name|TimestampColumnVector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|vector
operator|.
name|VectorizedRowBatch
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
operator|.
name|Parameters
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|primitives
operator|.
name|Longs
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|value
operator|=
name|Parameterized
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestNewIntegerEncoding
block|{
specifier|private
name|OrcFile
operator|.
name|EncodingStrategy
name|encodingStrategy
decl_stmt|;
specifier|public
name|TestNewIntegerEncoding
parameter_list|(
name|OrcFile
operator|.
name|EncodingStrategy
name|es
parameter_list|)
block|{
name|this
operator|.
name|encodingStrategy
operator|=
name|es
expr_stmt|;
block|}
annotation|@
name|Parameters
specifier|public
specifier|static
name|Collection
argument_list|<
name|Object
index|[]
argument_list|>
name|data
parameter_list|()
block|{
name|Object
index|[]
index|[]
name|data
init|=
operator|new
name|Object
index|[]
index|[]
block|{
block|{
name|OrcFile
operator|.
name|EncodingStrategy
operator|.
name|COMPRESSION
block|}
block|,
block|{
name|OrcFile
operator|.
name|EncodingStrategy
operator|.
name|SPEED
block|}
block|}
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
class|class
name|TSRow
block|{
name|Timestamp
name|ts
decl_stmt|;
specifier|public
name|TSRow
parameter_list|(
name|Timestamp
name|ts
parameter_list|)
block|{
name|this
operator|.
name|ts
operator|=
name|ts
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|TypeDescription
name|getRowSchema
parameter_list|()
block|{
return|return
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"int1"
argument_list|,
name|TypeDescription
operator|.
name|createInt
argument_list|()
argument_list|)
operator|.
name|addField
argument_list|(
literal|"long1"
argument_list|,
name|TypeDescription
operator|.
name|createLong
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|void
name|appendRow
parameter_list|(
name|VectorizedRowBatch
name|batch
parameter_list|,
name|int
name|int1
parameter_list|,
name|long
name|long1
parameter_list|)
block|{
name|int
name|row
init|=
name|batch
operator|.
name|size
operator|++
decl_stmt|;
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|row
index|]
operator|=
name|int1
expr_stmt|;
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|1
index|]
operator|)
operator|.
name|vector
index|[
name|row
index|]
operator|=
name|long1
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|appendLong
parameter_list|(
name|VectorizedRowBatch
name|batch
parameter_list|,
name|long
name|long1
parameter_list|)
block|{
name|int
name|row
init|=
name|batch
operator|.
name|size
operator|++
decl_stmt|;
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|row
index|]
operator|=
name|long1
expr_stmt|;
block|}
name|Path
name|workDir
init|=
operator|new
name|Path
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"test.tmp.dir"
argument_list|,
literal|"target"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"test"
operator|+
name|File
operator|.
name|separator
operator|+
literal|"tmp"
argument_list|)
argument_list|)
decl_stmt|;
name|Configuration
name|conf
decl_stmt|;
name|FileSystem
name|fs
decl_stmt|;
name|Path
name|testFilePath
decl_stmt|;
annotation|@
name|Rule
specifier|public
name|TestName
name|testCaseName
init|=
operator|new
name|TestName
argument_list|()
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|openFileSystem
parameter_list|()
throws|throws
name|Exception
block|{
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|fs
operator|=
name|FileSystem
operator|.
name|getLocal
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|testFilePath
operator|=
operator|new
name|Path
argument_list|(
name|workDir
argument_list|,
literal|"TestOrcFile."
operator|+
name|testCaseName
operator|.
name|getMethodName
argument_list|()
operator|+
literal|".orc"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|delete
argument_list|(
name|testFilePath
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBasicRow
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|getRowSchema
argument_list|()
decl_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|()
decl_stmt|;
name|appendRow
argument_list|(
name|batch
argument_list|,
literal|111
argument_list|,
literal|1111L
argument_list|)
expr_stmt|;
name|appendRow
argument_list|(
name|batch
argument_list|,
literal|111
argument_list|,
literal|1111L
argument_list|)
expr_stmt|;
name|appendRow
argument_list|(
name|batch
argument_list|,
literal|111
argument_list|,
literal|1111L
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
literal|111
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1111
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|1
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBasicOld
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|long
index|[]
name|inp
init|=
operator|new
name|long
index|[]
block|{
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|4
block|,
literal|5
block|,
literal|6
block|,
literal|7
block|,
literal|8
block|,
literal|9
block|,
literal|10
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|10
block|,
literal|9
block|,
literal|7
block|,
literal|6
block|,
literal|5
block|,
literal|4
block|,
literal|3
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|5
block|,
literal|1
block|,
literal|3
block|,
literal|7
block|,
literal|1
block|,
literal|9
block|,
literal|2
block|,
literal|6
block|,
literal|3
block|,
literal|7
block|,
literal|1
block|,
literal|9
block|,
literal|2
block|,
literal|6
block|,
literal|3
block|,
literal|7
block|,
literal|1
block|,
literal|9
block|,
literal|2
block|,
literal|6
block|,
literal|3
block|,
literal|7
block|,
literal|1
block|,
literal|9
block|,
literal|2
block|,
literal|6
block|,
literal|3
block|,
literal|7
block|,
literal|1
block|,
literal|9
block|,
literal|2
block|,
literal|6
block|,
literal|2000
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|3
block|,
literal|7
block|,
literal|1
block|,
literal|9
block|,
literal|2
block|,
literal|6
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|}
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|Longs
operator|.
name|asList
argument_list|(
name|inp
argument_list|)
argument_list|)
decl_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|version
argument_list|(
name|OrcFile
operator|.
name|Version
operator|.
name|V_0_11
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|()
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBasicNew
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|long
index|[]
name|inp
init|=
operator|new
name|long
index|[]
block|{
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|4
block|,
literal|5
block|,
literal|6
block|,
literal|7
block|,
literal|8
block|,
literal|9
block|,
literal|10
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|10
block|,
literal|9
block|,
literal|7
block|,
literal|6
block|,
literal|5
block|,
literal|4
block|,
literal|3
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|5
block|,
literal|1
block|,
literal|3
block|,
literal|7
block|,
literal|1
block|,
literal|9
block|,
literal|2
block|,
literal|6
block|,
literal|3
block|,
literal|7
block|,
literal|1
block|,
literal|9
block|,
literal|2
block|,
literal|6
block|,
literal|3
block|,
literal|7
block|,
literal|1
block|,
literal|9
block|,
literal|2
block|,
literal|6
block|,
literal|3
block|,
literal|7
block|,
literal|1
block|,
literal|9
block|,
literal|2
block|,
literal|6
block|,
literal|3
block|,
literal|7
block|,
literal|1
block|,
literal|9
block|,
literal|2
block|,
literal|6
block|,
literal|2000
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|3
block|,
literal|7
block|,
literal|1
block|,
literal|9
block|,
literal|2
block|,
literal|6
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|}
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|Longs
operator|.
name|asList
argument_list|(
name|inp
argument_list|)
argument_list|)
decl_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|()
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBasicDelta1
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|long
index|[]
name|inp
init|=
operator|new
name|long
index|[]
block|{
operator|-
literal|500
block|,
operator|-
literal|400
block|,
operator|-
literal|350
block|,
operator|-
literal|325
block|,
operator|-
literal|310
block|}
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|Longs
operator|.
name|asList
argument_list|(
name|inp
argument_list|)
argument_list|)
decl_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|()
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBasicDelta2
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|long
index|[]
name|inp
init|=
operator|new
name|long
index|[]
block|{
operator|-
literal|500
block|,
operator|-
literal|600
block|,
operator|-
literal|650
block|,
operator|-
literal|675
block|,
operator|-
literal|710
block|}
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|Longs
operator|.
name|asList
argument_list|(
name|inp
argument_list|)
argument_list|)
decl_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|()
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBasicDelta3
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|long
index|[]
name|inp
init|=
operator|new
name|long
index|[]
block|{
literal|500
block|,
literal|400
block|,
literal|350
block|,
literal|325
block|,
literal|310
block|}
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|Longs
operator|.
name|asList
argument_list|(
name|inp
argument_list|)
argument_list|)
decl_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|()
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBasicDelta4
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|long
index|[]
name|inp
init|=
operator|new
name|long
index|[]
block|{
literal|500
block|,
literal|600
block|,
literal|650
block|,
literal|675
block|,
literal|710
block|}
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|Longs
operator|.
name|asList
argument_list|(
name|inp
argument_list|)
argument_list|)
decl_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|()
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeltaOverflow
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|long
index|[]
name|inp
init|=
operator|new
name|long
index|[]
block|{
literal|4513343538618202719l
block|,
literal|4513343538618202711l
block|,
literal|2911390882471569739l
block|,
operator|-
literal|9181829309989854913l
block|}
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|Longs
operator|.
name|asList
argument_list|(
name|inp
argument_list|)
argument_list|)
decl_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|()
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeltaOverflow2
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|long
index|[]
name|inp
init|=
operator|new
name|long
index|[]
block|{
name|Long
operator|.
name|MAX_VALUE
block|,
literal|4513343538618202711l
block|,
literal|2911390882471569739l
block|,
name|Long
operator|.
name|MIN_VALUE
block|}
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|Longs
operator|.
name|asList
argument_list|(
name|inp
argument_list|)
argument_list|)
decl_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|()
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeltaOverflow3
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|long
index|[]
name|inp
init|=
operator|new
name|long
index|[]
block|{
operator|-
literal|4513343538618202711l
block|,
operator|-
literal|2911390882471569739l
block|,
operator|-
literal|2
block|,
name|Long
operator|.
name|MAX_VALUE
block|}
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|Longs
operator|.
name|asList
argument_list|(
name|inp
argument_list|)
argument_list|)
decl_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|()
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntegerMin
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|input
operator|.
name|add
argument_list|(
operator|(
name|long
operator|)
name|Integer
operator|.
name|MIN_VALUE
argument_list|)
expr_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|()
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIntegerMax
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|input
operator|.
name|add
argument_list|(
operator|(
name|long
operator|)
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
expr_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|()
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLongMin
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|input
operator|.
name|add
argument_list|(
name|Long
operator|.
name|MIN_VALUE
argument_list|)
expr_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|()
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLongMax
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|input
operator|.
name|add
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|)
expr_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|()
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRandomInt
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|Random
name|rand
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100000
condition|;
name|i
operator|++
control|)
block|{
name|input
operator|.
name|add
argument_list|(
operator|(
name|long
operator|)
name|rand
operator|.
name|nextInt
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|(
literal|100000
argument_list|)
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRandomLong
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|Random
name|rand
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100000
condition|;
name|i
operator|++
control|)
block|{
name|input
operator|.
name|add
argument_list|(
name|rand
operator|.
name|nextLong
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|(
literal|100000
argument_list|)
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchedBaseNegativeMin
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|long
index|[]
name|inp
init|=
operator|new
name|long
index|[]
block|{
literal|20
block|,
literal|2
block|,
literal|3
block|,
literal|2
block|,
literal|1
block|,
literal|3
block|,
literal|17
block|,
literal|71
block|,
literal|35
block|,
literal|2
block|,
literal|1
block|,
literal|139
block|,
literal|2
block|,
literal|2
block|,
literal|3
block|,
literal|1783
block|,
literal|475
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|3
block|,
literal|1
block|,
literal|3
block|,
literal|2
block|,
literal|32
block|,
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|1
block|,
literal|8
block|,
literal|30
block|,
literal|1
block|,
literal|3
block|,
literal|414
block|,
literal|1
block|,
literal|1
block|,
literal|135
block|,
literal|3
block|,
literal|3
block|,
literal|1
block|,
literal|414
block|,
literal|2
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|594
block|,
literal|2
block|,
literal|5
block|,
literal|6
block|,
literal|4
block|,
literal|11
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|52
block|,
literal|4
block|,
literal|1
block|,
literal|2
block|,
literal|7
block|,
literal|1
block|,
literal|17
block|,
literal|334
block|,
literal|1
block|,
literal|2
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|6
block|,
literal|1
block|,
literal|266
block|,
literal|1
block|,
literal|2
block|,
literal|217
block|,
literal|2
block|,
literal|6
block|,
literal|2
block|,
literal|13
block|,
literal|2
block|,
literal|2
block|,
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|5
block|,
literal|1
block|,
literal|2
block|,
literal|1
block|,
literal|7244
block|,
literal|11813
block|,
literal|1
block|,
literal|33
block|,
literal|2
block|,
operator|-
literal|13
block|,
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|13
block|,
literal|1
block|,
literal|92
block|,
literal|3
block|,
literal|13
block|,
literal|5
block|,
literal|14
block|,
literal|9
block|,
literal|141
block|,
literal|12
block|,
literal|6
block|,
literal|15
block|,
literal|25
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|46
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|141
block|,
literal|3
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|1
block|,
literal|4
block|,
literal|34
block|,
literal|5
block|,
literal|78
block|,
literal|8
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|1
block|,
literal|9
block|,
literal|10
block|,
literal|2
block|,
literal|1
block|,
literal|4
block|,
literal|13
block|,
literal|1
block|,
literal|5
block|,
literal|4
block|,
literal|4
block|,
literal|19
block|,
literal|5
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|68
block|,
literal|33
block|,
literal|399
block|,
literal|1
block|,
literal|1885
block|,
literal|25
block|,
literal|5
block|,
literal|2
block|,
literal|4
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|16
block|,
literal|1
block|,
literal|2966
block|,
literal|3
block|,
literal|1
block|,
literal|1
block|,
literal|25501
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|66
block|,
literal|1
block|,
literal|3
block|,
literal|8
block|,
literal|131
block|,
literal|14
block|,
literal|5
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|8
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|1
block|,
literal|5
block|,
literal|9
block|,
literal|2
block|,
literal|3
block|,
literal|112
block|,
literal|13
block|,
literal|2
block|,
literal|2
block|,
literal|1
block|,
literal|5
block|,
literal|10
block|,
literal|3
block|,
literal|1
block|,
literal|1
block|,
literal|13
block|,
literal|2
block|,
literal|3
block|,
literal|4
block|,
literal|1
block|,
literal|3
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|4
block|,
literal|2
block|,
literal|207
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|4
block|,
literal|3
block|,
literal|3
block|,
literal|2
block|,
literal|2
block|,
literal|16
block|}
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|Longs
operator|.
name|asList
argument_list|(
name|inp
argument_list|)
argument_list|)
decl_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|()
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchedBaseNegativeMin2
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|long
index|[]
name|inp
init|=
operator|new
name|long
index|[]
block|{
literal|20
block|,
literal|2
block|,
literal|3
block|,
literal|2
block|,
literal|1
block|,
literal|3
block|,
literal|17
block|,
literal|71
block|,
literal|35
block|,
literal|2
block|,
literal|1
block|,
literal|139
block|,
literal|2
block|,
literal|2
block|,
literal|3
block|,
literal|1783
block|,
literal|475
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|3
block|,
literal|1
block|,
literal|3
block|,
literal|2
block|,
literal|32
block|,
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|1
block|,
literal|8
block|,
literal|30
block|,
literal|1
block|,
literal|3
block|,
literal|414
block|,
literal|1
block|,
literal|1
block|,
literal|135
block|,
literal|3
block|,
literal|3
block|,
literal|1
block|,
literal|414
block|,
literal|2
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|594
block|,
literal|2
block|,
literal|5
block|,
literal|6
block|,
literal|4
block|,
literal|11
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|52
block|,
literal|4
block|,
literal|1
block|,
literal|2
block|,
literal|7
block|,
literal|1
block|,
literal|17
block|,
literal|334
block|,
literal|1
block|,
literal|2
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|6
block|,
literal|1
block|,
literal|266
block|,
literal|1
block|,
literal|2
block|,
literal|217
block|,
literal|2
block|,
literal|6
block|,
literal|2
block|,
literal|13
block|,
literal|2
block|,
literal|2
block|,
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|5
block|,
literal|1
block|,
literal|2
block|,
literal|1
block|,
literal|7244
block|,
literal|11813
block|,
literal|1
block|,
literal|33
block|,
literal|2
block|,
operator|-
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|13
block|,
literal|1
block|,
literal|92
block|,
literal|3
block|,
literal|13
block|,
literal|5
block|,
literal|14
block|,
literal|9
block|,
literal|141
block|,
literal|12
block|,
literal|6
block|,
literal|15
block|,
literal|25
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|46
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|141
block|,
literal|3
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|1
block|,
literal|4
block|,
literal|34
block|,
literal|5
block|,
literal|78
block|,
literal|8
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|1
block|,
literal|9
block|,
literal|10
block|,
literal|2
block|,
literal|1
block|,
literal|4
block|,
literal|13
block|,
literal|1
block|,
literal|5
block|,
literal|4
block|,
literal|4
block|,
literal|19
block|,
literal|5
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|68
block|,
literal|33
block|,
literal|399
block|,
literal|1
block|,
literal|1885
block|,
literal|25
block|,
literal|5
block|,
literal|2
block|,
literal|4
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|16
block|,
literal|1
block|,
literal|2966
block|,
literal|3
block|,
literal|1
block|,
literal|1
block|,
literal|25501
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|66
block|,
literal|1
block|,
literal|3
block|,
literal|8
block|,
literal|131
block|,
literal|14
block|,
literal|5
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|8
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|1
block|,
literal|5
block|,
literal|9
block|,
literal|2
block|,
literal|3
block|,
literal|112
block|,
literal|13
block|,
literal|2
block|,
literal|2
block|,
literal|1
block|,
literal|5
block|,
literal|10
block|,
literal|3
block|,
literal|1
block|,
literal|1
block|,
literal|13
block|,
literal|2
block|,
literal|3
block|,
literal|4
block|,
literal|1
block|,
literal|3
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|4
block|,
literal|2
block|,
literal|207
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|4
block|,
literal|3
block|,
literal|3
block|,
literal|2
block|,
literal|2
block|,
literal|16
block|}
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|Longs
operator|.
name|asList
argument_list|(
name|inp
argument_list|)
argument_list|)
decl_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|()
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchedBaseNegativeMin3
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|long
index|[]
name|inp
init|=
operator|new
name|long
index|[]
block|{
literal|20
block|,
literal|2
block|,
literal|3
block|,
literal|2
block|,
literal|1
block|,
literal|3
block|,
literal|17
block|,
literal|71
block|,
literal|35
block|,
literal|2
block|,
literal|1
block|,
literal|139
block|,
literal|2
block|,
literal|2
block|,
literal|3
block|,
literal|1783
block|,
literal|475
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|3
block|,
literal|1
block|,
literal|3
block|,
literal|2
block|,
literal|32
block|,
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|1
block|,
literal|8
block|,
literal|30
block|,
literal|1
block|,
literal|3
block|,
literal|414
block|,
literal|1
block|,
literal|1
block|,
literal|135
block|,
literal|3
block|,
literal|3
block|,
literal|1
block|,
literal|414
block|,
literal|2
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|594
block|,
literal|2
block|,
literal|5
block|,
literal|6
block|,
literal|4
block|,
literal|11
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|52
block|,
literal|4
block|,
literal|1
block|,
literal|2
block|,
literal|7
block|,
literal|1
block|,
literal|17
block|,
literal|334
block|,
literal|1
block|,
literal|2
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|6
block|,
literal|1
block|,
literal|266
block|,
literal|1
block|,
literal|2
block|,
literal|217
block|,
literal|2
block|,
literal|6
block|,
literal|2
block|,
literal|13
block|,
literal|2
block|,
literal|2
block|,
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|5
block|,
literal|1
block|,
literal|2
block|,
literal|1
block|,
literal|7244
block|,
literal|11813
block|,
literal|1
block|,
literal|33
block|,
literal|2
block|,
literal|0
block|,
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|13
block|,
literal|1
block|,
literal|92
block|,
literal|3
block|,
literal|13
block|,
literal|5
block|,
literal|14
block|,
literal|9
block|,
literal|141
block|,
literal|12
block|,
literal|6
block|,
literal|15
block|,
literal|25
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|46
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|141
block|,
literal|3
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|1
block|,
literal|4
block|,
literal|34
block|,
literal|5
block|,
literal|78
block|,
literal|8
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|1
block|,
literal|9
block|,
literal|10
block|,
literal|2
block|,
literal|1
block|,
literal|4
block|,
literal|13
block|,
literal|1
block|,
literal|5
block|,
literal|4
block|,
literal|4
block|,
literal|19
block|,
literal|5
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|68
block|,
literal|33
block|,
literal|399
block|,
literal|1
block|,
literal|1885
block|,
literal|25
block|,
literal|5
block|,
literal|2
block|,
literal|4
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|16
block|,
literal|1
block|,
literal|2966
block|,
literal|3
block|,
literal|1
block|,
literal|1
block|,
literal|25501
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|66
block|,
literal|1
block|,
literal|3
block|,
literal|8
block|,
literal|131
block|,
literal|14
block|,
literal|5
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|8
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|1
block|,
literal|5
block|,
literal|9
block|,
literal|2
block|,
literal|3
block|,
literal|112
block|,
literal|13
block|,
literal|2
block|,
literal|2
block|,
literal|1
block|,
literal|5
block|,
literal|10
block|,
literal|3
block|,
literal|1
block|,
literal|1
block|,
literal|13
block|,
literal|2
block|,
literal|3
block|,
literal|4
block|,
literal|1
block|,
literal|3
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|4
block|,
literal|2
block|,
literal|207
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|4
block|,
literal|3
block|,
literal|3
block|,
literal|2
block|,
literal|2
block|,
literal|16
block|}
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|Longs
operator|.
name|asList
argument_list|(
name|inp
argument_list|)
argument_list|)
decl_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|()
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchedBaseNegativeMin4
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|long
index|[]
name|inp
init|=
operator|new
name|long
index|[]
block|{
literal|13
block|,
literal|13
block|,
literal|11
block|,
literal|8
block|,
literal|13
block|,
literal|10
block|,
literal|10
block|,
literal|11
block|,
literal|11
block|,
literal|14
block|,
literal|11
block|,
literal|7
block|,
literal|13
block|,
literal|12
block|,
literal|12
block|,
literal|11
block|,
literal|15
block|,
literal|12
block|,
literal|12
block|,
literal|9
block|,
literal|8
block|,
literal|10
block|,
literal|13
block|,
literal|11
block|,
literal|8
block|,
literal|6
block|,
literal|5
block|,
literal|6
block|,
literal|11
block|,
literal|7
block|,
literal|15
block|,
literal|10
block|,
literal|7
block|,
literal|6
block|,
literal|8
block|,
literal|7
block|,
literal|9
block|,
literal|9
block|,
literal|11
block|,
literal|33
block|,
literal|11
block|,
literal|3
block|,
literal|7
block|,
literal|4
block|,
literal|6
block|,
literal|10
block|,
literal|14
block|,
literal|12
block|,
literal|5
block|,
literal|14
block|,
literal|7
block|,
literal|6
block|}
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|Longs
operator|.
name|asList
argument_list|(
name|inp
argument_list|)
argument_list|)
decl_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|()
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchedBaseAt0
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|Random
name|rand
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5120
condition|;
name|i
operator|++
control|)
block|{
name|input
operator|.
name|add
argument_list|(
operator|(
name|long
operator|)
name|rand
operator|.
name|nextInt
argument_list|(
literal|100
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|input
operator|.
name|set
argument_list|(
literal|0
argument_list|,
literal|20000L
argument_list|)
expr_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|(
literal|5120
argument_list|)
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchedBaseAt1
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|Random
name|rand
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5120
condition|;
name|i
operator|++
control|)
block|{
name|input
operator|.
name|add
argument_list|(
operator|(
name|long
operator|)
name|rand
operator|.
name|nextInt
argument_list|(
literal|100
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|input
operator|.
name|set
argument_list|(
literal|1
argument_list|,
literal|20000L
argument_list|)
expr_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|(
literal|5120
argument_list|)
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchedBaseAt255
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|Random
name|rand
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5120
condition|;
name|i
operator|++
control|)
block|{
name|input
operator|.
name|add
argument_list|(
operator|(
name|long
operator|)
name|rand
operator|.
name|nextInt
argument_list|(
literal|100
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|input
operator|.
name|set
argument_list|(
literal|255
argument_list|,
literal|20000L
argument_list|)
expr_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|(
literal|5120
argument_list|)
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchedBaseAt256
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|Random
name|rand
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5120
condition|;
name|i
operator|++
control|)
block|{
name|input
operator|.
name|add
argument_list|(
operator|(
name|long
operator|)
name|rand
operator|.
name|nextInt
argument_list|(
literal|100
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|input
operator|.
name|set
argument_list|(
literal|256
argument_list|,
literal|20000L
argument_list|)
expr_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|(
literal|5120
argument_list|)
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchedBase510
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|Random
name|rand
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5120
condition|;
name|i
operator|++
control|)
block|{
name|input
operator|.
name|add
argument_list|(
operator|(
name|long
operator|)
name|rand
operator|.
name|nextInt
argument_list|(
literal|100
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|input
operator|.
name|set
argument_list|(
literal|510
argument_list|,
literal|20000L
argument_list|)
expr_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|(
literal|5120
argument_list|)
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchedBase511
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|Random
name|rand
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5120
condition|;
name|i
operator|++
control|)
block|{
name|input
operator|.
name|add
argument_list|(
operator|(
name|long
operator|)
name|rand
operator|.
name|nextInt
argument_list|(
literal|100
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|input
operator|.
name|set
argument_list|(
literal|511
argument_list|,
literal|20000L
argument_list|)
expr_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|(
literal|5120
argument_list|)
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchedBaseMax1
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|Random
name|rand
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5120
condition|;
name|i
operator|++
control|)
block|{
name|input
operator|.
name|add
argument_list|(
operator|(
name|long
operator|)
name|rand
operator|.
name|nextInt
argument_list|(
literal|60
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|input
operator|.
name|set
argument_list|(
literal|511
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|)
expr_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|(
literal|5120
argument_list|)
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchedBaseMax2
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|Random
name|rand
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5120
condition|;
name|i
operator|++
control|)
block|{
name|input
operator|.
name|add
argument_list|(
operator|(
name|long
operator|)
name|rand
operator|.
name|nextInt
argument_list|(
literal|60
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|input
operator|.
name|set
argument_list|(
literal|128
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|)
expr_stmt|;
name|input
operator|.
name|set
argument_list|(
literal|256
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|)
expr_stmt|;
name|input
operator|.
name|set
argument_list|(
literal|511
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|)
expr_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|(
literal|5120
argument_list|)
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchedBaseMax3
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|371946367L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|11963367L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|68639400007L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|100233367L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|6367L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|10026367L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|3670000L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|3602367L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|4719226367L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|7196367L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|444442L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|210267L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|21033L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|160267L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|400267L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|23634347L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|16027L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|46026367L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|33333L
argument_list|)
expr_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|()
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchedBaseMax4
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|25
condition|;
name|i
operator|++
control|)
block|{
name|input
operator|.
name|add
argument_list|(
literal|371292224226367L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|119622332222267L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|686329400222007L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|100233333222367L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|636272333322222L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|10202633223267L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|36700222022230L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|36023226224227L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|47192226364427L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|71963622222447L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|22244444222222L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|21220263327442L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|21032233332232L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|16026322232227L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|40022262272212L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|23634342227222L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|16022222222227L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|46026362222227L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|46026362222227L
argument_list|)
expr_stmt|;
name|input
operator|.
name|add
argument_list|(
literal|33322222222323L
argument_list|)
expr_stmt|;
block|}
name|input
operator|.
name|add
argument_list|(
name|Long
operator|.
name|MAX_VALUE
argument_list|)
expr_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|()
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPatchedBaseTimestamp
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createStruct
argument_list|()
operator|.
name|addField
argument_list|(
literal|"ts"
argument_list|,
name|TypeDescription
operator|.
name|createTimestamp
argument_list|()
argument_list|)
decl_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Timestamp
argument_list|>
name|tslist
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2099-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2003-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"1999-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"1995-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2002-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2010-03-02 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2005-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2006-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2003-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"1996-08-02 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"1998-11-02 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2008-10-02 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"1993-08-02 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2008-01-02 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2007-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2004-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2008-10-02 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2003-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2004-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2008-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2005-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"1994-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2006-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2004-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2001-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2000-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2000-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2002-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2006-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2011-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2002-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"2005-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|tslist
operator|.
name|add
argument_list|(
name|Timestamp
operator|.
name|valueOf
argument_list|(
literal|"1974-01-01 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Timestamp
name|ts
range|:
name|tslist
control|)
block|{
operator|(
operator|(
name|TimestampColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|set
argument_list|(
name|idx
argument_list|,
name|ts
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|idx
operator|=
literal|0
expr_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|tslist
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
argument_list|,
operator|(
operator|(
name|TimestampColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|asScratchTimestamp
argument_list|(
name|r
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDirectLargeNegatives
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|()
decl_stmt|;
name|appendLong
argument_list|(
name|batch
argument_list|,
operator|-
literal|7486502418706614742L
argument_list|)
expr_stmt|;
name|appendLong
argument_list|(
name|batch
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
name|appendLong
argument_list|(
name|batch
argument_list|,
literal|1L
argument_list|)
expr_stmt|;
name|appendLong
argument_list|(
name|batch
argument_list|,
literal|1L
argument_list|)
expr_stmt|;
name|appendLong
argument_list|(
name|batch
argument_list|,
operator|-
literal|5535739865598783616L
argument_list|)
expr_stmt|;
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|batch
operator|.
name|size
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|7486502418706614742L
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1L
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
literal|3
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|5535739865598783616L
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
literal|4
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSeek
parameter_list|()
throws|throws
name|Exception
block|{
name|TypeDescription
name|schema
init|=
name|TypeDescription
operator|.
name|createLong
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Long
argument_list|>
name|input
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|Random
name|rand
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100000
condition|;
name|i
operator|++
control|)
block|{
name|input
operator|.
name|add
argument_list|(
operator|(
name|long
operator|)
name|rand
operator|.
name|nextInt
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Writer
name|writer
init|=
name|OrcFile
operator|.
name|createWriter
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|writerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|setSchema
argument_list|(
name|schema
argument_list|)
operator|.
name|compress
argument_list|(
name|CompressionKind
operator|.
name|NONE
argument_list|)
operator|.
name|stripeSize
argument_list|(
literal|100000
argument_list|)
operator|.
name|bufferSize
argument_list|(
literal|10000
argument_list|)
operator|.
name|version
argument_list|(
name|OrcFile
operator|.
name|Version
operator|.
name|V_0_11
argument_list|)
operator|.
name|encodingStrategy
argument_list|(
name|encodingStrategy
argument_list|)
argument_list|)
decl_stmt|;
name|VectorizedRowBatch
name|batch
init|=
name|schema
operator|.
name|createRowBatch
argument_list|(
literal|100000
argument_list|)
decl_stmt|;
for|for
control|(
name|Long
name|l
range|:
name|input
control|)
block|{
name|appendLong
argument_list|(
name|batch
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addRowBatch
argument_list|(
name|batch
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|Reader
name|reader
init|=
name|OrcFile
operator|.
name|createReader
argument_list|(
name|testFilePath
argument_list|,
name|OrcFile
operator|.
name|readerOptions
argument_list|(
name|conf
argument_list|)
operator|.
name|filesystem
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
name|RecordReader
name|rows
init|=
name|reader
operator|.
name|rows
argument_list|()
decl_stmt|;
name|batch
operator|=
name|reader
operator|.
name|getSchema
argument_list|()
operator|.
name|createRowBatch
argument_list|()
expr_stmt|;
name|int
name|idx
init|=
literal|55555
decl_stmt|;
name|rows
operator|.
name|seekToRow
argument_list|(
name|idx
argument_list|)
expr_stmt|;
while|while
condition|(
name|rows
operator|.
name|nextBatch
argument_list|(
name|batch
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|r
init|=
literal|0
init|;
name|r
operator|<
name|batch
operator|.
name|size
condition|;
operator|++
name|r
control|)
block|{
name|assertEquals
argument_list|(
name|input
operator|.
name|get
argument_list|(
name|idx
operator|++
argument_list|)
operator|.
name|longValue
argument_list|()
argument_list|,
operator|(
operator|(
name|LongColumnVector
operator|)
name|batch
operator|.
name|cols
index|[
literal|0
index|]
operator|)
operator|.
name|vector
index|[
name|r
index|]
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

