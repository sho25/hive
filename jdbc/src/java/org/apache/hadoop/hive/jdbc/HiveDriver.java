begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|jdbc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|DriverManager
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_class
specifier|public
class|class
name|HiveDriver
implements|implements
name|java
operator|.
name|sql
operator|.
name|Driver
block|{
static|static
block|{
try|try
block|{
name|java
operator|.
name|sql
operator|.
name|DriverManager
operator|.
name|registerDriver
argument_list|(
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|jdbc
operator|.
name|HiveDriver
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SQLException
name|e
parameter_list|)
block|{
comment|// TODO Auto-generated catch block
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**    * Major version number of this driver.    */
specifier|private
specifier|static
specifier|final
name|int
name|MAJOR_VERSION
init|=
literal|0
decl_stmt|;
comment|/**    * Minor version number of this driver.    */
specifier|private
specifier|static
specifier|final
name|int
name|MINOR_VERSION
init|=
literal|0
decl_stmt|;
comment|/**    * Is this driver JDBC compliant?    */
specifier|private
specifier|static
specifier|final
name|boolean
name|JDBC_COMPLIANT
init|=
literal|false
decl_stmt|;
comment|/**    *    */
specifier|public
name|HiveDriver
parameter_list|()
block|{
comment|// TODO Auto-generated constructor stub
name|SecurityManager
name|security
init|=
name|System
operator|.
name|getSecurityManager
argument_list|()
decl_stmt|;
if|if
condition|(
name|security
operator|!=
literal|null
condition|)
block|{
name|security
operator|.
name|checkWrite
argument_list|(
literal|"foobah"
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Checks whether a given url is in a valid format.    *    * The current uri format is:    * jdbc:hive://[host[:port]]    *    * jdbc:hive://                 - run in embedded mode    * jdbc:hive://localhost        - connect to localhost default port (10000)    * jdbc:hive://localhost:5050   - connect to localhost port 5050    *    * TODO: - write a better regex.    *       - decide on uri format    */
specifier|public
name|boolean
name|acceptsURL
parameter_list|(
name|String
name|url
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|Pattern
operator|.
name|matches
argument_list|(
literal|"jdbc:hive://"
argument_list|,
name|url
argument_list|)
return|;
block|}
specifier|public
name|Connection
name|connect
parameter_list|(
name|String
name|url
parameter_list|,
name|Properties
name|info
parameter_list|)
throws|throws
name|SQLException
block|{
try|try
block|{
return|return
operator|new
name|HiveConnection
argument_list|(
name|url
argument_list|,
name|info
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
name|ex
operator|.
name|toString
argument_list|()
argument_list|)
throw|;
block|}
block|}
comment|/**    * Returns the major version of this driver.    */
specifier|public
name|int
name|getMajorVersion
parameter_list|()
block|{
return|return
name|MAJOR_VERSION
return|;
block|}
comment|/**    * Returns the minor version of this driver.    */
specifier|public
name|int
name|getMinorVersion
parameter_list|()
block|{
return|return
name|MINOR_VERSION
return|;
block|}
specifier|public
name|DriverPropertyInfo
index|[]
name|getPropertyInfo
parameter_list|(
name|String
name|url
parameter_list|,
name|Properties
name|info
parameter_list|)
throws|throws
name|SQLException
block|{
comment|// TODO Auto-generated method stub
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
comment|/**    * Returns whether the driver is JDBC compliant.    */
specifier|public
name|boolean
name|jdbcCompliant
parameter_list|()
block|{
return|return
name|JDBC_COMPLIANT
return|;
block|}
block|}
end_class

end_unit

