begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|jdbc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigDecimal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|MathContext
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Array
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Blob
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Clob
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|NClob
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Ref
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|ResultSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|ResultSetMetaData
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|RowId
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLWarning
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLXML
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Statement
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Time
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Timestamp
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|TableSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|thrift
operator|.
name|TBoolValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|thrift
operator|.
name|TByteValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|thrift
operator|.
name|TColumnValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|thrift
operator|.
name|TDoubleValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|thrift
operator|.
name|TI16Value
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|thrift
operator|.
name|TI32Value
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|thrift
operator|.
name|TI64Value
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|thrift
operator|.
name|TRow
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|thrift
operator|.
name|TStringValue
import|;
end_import

begin_comment
comment|/**  * Data independent base class which implements the common part of  * all Hive result sets.  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|HiveBaseResultSet
implements|implements
name|ResultSet
block|{
specifier|protected
name|SQLWarning
name|warningChain
init|=
literal|null
decl_stmt|;
specifier|protected
name|boolean
name|wasNull
init|=
literal|false
decl_stmt|;
specifier|protected
name|TRow
name|row
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|String
argument_list|>
name|columnNames
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|String
argument_list|>
name|columnTypes
decl_stmt|;
specifier|private
name|TableSchema
name|schema
decl_stmt|;
specifier|public
name|boolean
name|absolute
parameter_list|(
name|int
name|row
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|afterLast
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|beforeFirst
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|cancelRowUpdates
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|deleteRow
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|int
name|findColumn
parameter_list|(
name|String
name|columnName
parameter_list|)
throws|throws
name|SQLException
block|{
name|int
name|columnIndex
init|=
name|columnNames
operator|.
name|indexOf
argument_list|(
name|columnName
argument_list|)
decl_stmt|;
if|if
condition|(
name|columnIndex
operator|==
operator|-
literal|1
condition|)
block|{
throw|throw
operator|new
name|SQLException
argument_list|()
throw|;
block|}
else|else
block|{
return|return
operator|++
name|columnIndex
return|;
block|}
block|}
specifier|public
name|boolean
name|first
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|Array
name|getArray
parameter_list|(
name|int
name|i
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|Array
name|getArray
parameter_list|(
name|String
name|colName
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|InputStream
name|getAsciiStream
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|InputStream
name|getAsciiStream
parameter_list|(
name|String
name|columnName
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|BigDecimal
name|getBigDecimal
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
name|Object
name|val
init|=
name|getObject
argument_list|(
name|columnIndex
argument_list|)
decl_stmt|;
if|if
condition|(
name|val
operator|==
literal|null
operator|||
name|val
operator|instanceof
name|BigDecimal
condition|)
block|{
return|return
operator|(
name|BigDecimal
operator|)
name|val
return|;
block|}
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Illegal conversion"
argument_list|)
throw|;
block|}
specifier|public
name|BigDecimal
name|getBigDecimal
parameter_list|(
name|String
name|columnName
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getBigDecimal
argument_list|(
name|findColumn
argument_list|(
name|columnName
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|BigDecimal
name|getBigDecimal
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|int
name|scale
parameter_list|)
throws|throws
name|SQLException
block|{
name|MathContext
name|mc
init|=
operator|new
name|MathContext
argument_list|(
name|scale
argument_list|)
decl_stmt|;
return|return
name|getBigDecimal
argument_list|(
name|columnIndex
argument_list|)
operator|.
name|round
argument_list|(
name|mc
argument_list|)
return|;
block|}
specifier|public
name|BigDecimal
name|getBigDecimal
parameter_list|(
name|String
name|columnName
parameter_list|,
name|int
name|scale
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getBigDecimal
argument_list|(
name|findColumn
argument_list|(
name|columnName
argument_list|)
argument_list|,
name|scale
argument_list|)
return|;
block|}
specifier|public
name|InputStream
name|getBinaryStream
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|InputStream
name|getBinaryStream
parameter_list|(
name|String
name|columnName
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|Blob
name|getBlob
parameter_list|(
name|int
name|i
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|Blob
name|getBlob
parameter_list|(
name|String
name|colName
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|boolean
name|getBoolean
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
name|Object
name|obj
init|=
name|getObject
argument_list|(
name|columnIndex
argument_list|)
decl_stmt|;
if|if
condition|(
name|Boolean
operator|.
name|class
operator|.
name|isInstance
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
operator|(
name|Boolean
operator|)
name|obj
return|;
block|}
elseif|else
if|if
condition|(
name|obj
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
elseif|else
if|if
condition|(
name|Number
operator|.
name|class
operator|.
name|isInstance
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
operator|(
operator|(
name|Number
operator|)
name|obj
operator|)
operator|.
name|intValue
argument_list|()
operator|!=
literal|0
return|;
block|}
elseif|else
if|if
condition|(
name|String
operator|.
name|class
operator|.
name|isInstance
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
operator|!
operator|(
operator|(
name|String
operator|)
name|obj
operator|)
operator|.
name|equals
argument_list|(
literal|"0"
argument_list|)
return|;
block|}
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Cannot convert column "
operator|+
name|columnIndex
operator|+
literal|" to boolean"
argument_list|)
throw|;
block|}
specifier|public
name|boolean
name|getBoolean
parameter_list|(
name|String
name|columnName
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getBoolean
argument_list|(
name|findColumn
argument_list|(
name|columnName
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|byte
name|getByte
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
name|Object
name|obj
init|=
name|getObject
argument_list|(
name|columnIndex
argument_list|)
decl_stmt|;
if|if
condition|(
name|Number
operator|.
name|class
operator|.
name|isInstance
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
operator|(
operator|(
name|Number
operator|)
name|obj
operator|)
operator|.
name|byteValue
argument_list|()
return|;
block|}
elseif|else
if|if
condition|(
name|obj
operator|==
literal|null
condition|)
block|{
return|return
literal|0
return|;
block|}
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Cannot convert column "
operator|+
name|columnIndex
operator|+
literal|" to byte"
argument_list|)
throw|;
block|}
specifier|public
name|byte
name|getByte
parameter_list|(
name|String
name|columnName
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getByte
argument_list|(
name|findColumn
argument_list|(
name|columnName
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|byte
index|[]
name|getBytes
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|byte
index|[]
name|getBytes
parameter_list|(
name|String
name|columnName
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|Reader
name|getCharacterStream
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|Reader
name|getCharacterStream
parameter_list|(
name|String
name|columnName
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|Clob
name|getClob
parameter_list|(
name|int
name|i
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|Clob
name|getClob
parameter_list|(
name|String
name|colName
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|int
name|getConcurrency
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|ResultSet
operator|.
name|CONCUR_READ_ONLY
return|;
block|}
specifier|public
name|String
name|getCursorName
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|Date
name|getDate
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
name|Object
name|obj
init|=
name|getObject
argument_list|(
name|columnIndex
argument_list|)
decl_stmt|;
if|if
condition|(
name|obj
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
try|try
block|{
return|return
name|Date
operator|.
name|valueOf
argument_list|(
operator|(
name|String
operator|)
name|obj
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Cannot convert column "
operator|+
name|columnIndex
operator|+
literal|" to date: "
operator|+
name|e
operator|.
name|toString
argument_list|()
argument_list|)
throw|;
block|}
block|}
specifier|public
name|Date
name|getDate
parameter_list|(
name|String
name|columnName
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getDate
argument_list|(
name|findColumn
argument_list|(
name|columnName
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|Date
name|getDate
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Calendar
name|cal
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|Date
name|getDate
parameter_list|(
name|String
name|columnName
parameter_list|,
name|Calendar
name|cal
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|double
name|getDouble
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
try|try
block|{
name|Object
name|obj
init|=
name|getObject
argument_list|(
name|columnIndex
argument_list|)
decl_stmt|;
if|if
condition|(
name|Number
operator|.
name|class
operator|.
name|isInstance
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
operator|(
operator|(
name|Number
operator|)
name|obj
operator|)
operator|.
name|doubleValue
argument_list|()
return|;
block|}
elseif|else
if|if
condition|(
name|obj
operator|==
literal|null
condition|)
block|{
return|return
literal|0
return|;
block|}
elseif|else
if|if
condition|(
name|String
operator|.
name|class
operator|.
name|isInstance
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
name|Double
operator|.
name|valueOf
argument_list|(
operator|(
name|String
operator|)
name|obj
argument_list|)
return|;
block|}
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Illegal conversion"
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Cannot convert column "
operator|+
name|columnIndex
operator|+
literal|" to double: "
operator|+
name|e
operator|.
name|toString
argument_list|()
argument_list|)
throw|;
block|}
block|}
specifier|public
name|double
name|getDouble
parameter_list|(
name|String
name|columnName
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getDouble
argument_list|(
name|findColumn
argument_list|(
name|columnName
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|int
name|getFetchDirection
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|ResultSet
operator|.
name|FETCH_FORWARD
return|;
block|}
specifier|public
name|int
name|getFetchSize
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|float
name|getFloat
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
try|try
block|{
name|Object
name|obj
init|=
name|getObject
argument_list|(
name|columnIndex
argument_list|)
decl_stmt|;
if|if
condition|(
name|Number
operator|.
name|class
operator|.
name|isInstance
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
operator|(
operator|(
name|Number
operator|)
name|obj
operator|)
operator|.
name|floatValue
argument_list|()
return|;
block|}
elseif|else
if|if
condition|(
name|obj
operator|==
literal|null
condition|)
block|{
return|return
literal|0
return|;
block|}
elseif|else
if|if
condition|(
name|String
operator|.
name|class
operator|.
name|isInstance
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
name|Float
operator|.
name|valueOf
argument_list|(
operator|(
name|String
operator|)
name|obj
argument_list|)
return|;
block|}
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Illegal conversion"
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Cannot convert column "
operator|+
name|columnIndex
operator|+
literal|" to float: "
operator|+
name|e
operator|.
name|toString
argument_list|()
argument_list|)
throw|;
block|}
block|}
specifier|public
name|float
name|getFloat
parameter_list|(
name|String
name|columnName
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getFloat
argument_list|(
name|findColumn
argument_list|(
name|columnName
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|int
name|getHoldability
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|int
name|getInt
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
try|try
block|{
name|Object
name|obj
init|=
name|getObject
argument_list|(
name|columnIndex
argument_list|)
decl_stmt|;
if|if
condition|(
name|Number
operator|.
name|class
operator|.
name|isInstance
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
operator|(
operator|(
name|Number
operator|)
name|obj
operator|)
operator|.
name|intValue
argument_list|()
return|;
block|}
elseif|else
if|if
condition|(
name|obj
operator|==
literal|null
condition|)
block|{
return|return
literal|0
return|;
block|}
elseif|else
if|if
condition|(
name|String
operator|.
name|class
operator|.
name|isInstance
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
name|Integer
operator|.
name|valueOf
argument_list|(
operator|(
name|String
operator|)
name|obj
argument_list|)
return|;
block|}
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Illegal conversion"
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Cannot convert column "
operator|+
name|columnIndex
operator|+
literal|" to integer"
operator|+
name|e
operator|.
name|toString
argument_list|()
argument_list|)
throw|;
block|}
block|}
specifier|public
name|int
name|getInt
parameter_list|(
name|String
name|columnName
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getInt
argument_list|(
name|findColumn
argument_list|(
name|columnName
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|long
name|getLong
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
try|try
block|{
name|Object
name|obj
init|=
name|getObject
argument_list|(
name|columnIndex
argument_list|)
decl_stmt|;
if|if
condition|(
name|Number
operator|.
name|class
operator|.
name|isInstance
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
operator|(
operator|(
name|Number
operator|)
name|obj
operator|)
operator|.
name|longValue
argument_list|()
return|;
block|}
elseif|else
if|if
condition|(
name|obj
operator|==
literal|null
condition|)
block|{
return|return
literal|0
return|;
block|}
elseif|else
if|if
condition|(
name|String
operator|.
name|class
operator|.
name|isInstance
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
name|Long
operator|.
name|valueOf
argument_list|(
operator|(
name|String
operator|)
name|obj
argument_list|)
return|;
block|}
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Illegal conversion"
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Cannot convert column "
operator|+
name|columnIndex
operator|+
literal|" to long: "
operator|+
name|e
operator|.
name|toString
argument_list|()
argument_list|)
throw|;
block|}
block|}
specifier|public
name|long
name|getLong
parameter_list|(
name|String
name|columnName
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getLong
argument_list|(
name|findColumn
argument_list|(
name|columnName
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|ResultSetMetaData
name|getMetaData
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
operator|new
name|HiveResultSetMetaData
argument_list|(
name|columnNames
argument_list|,
name|columnTypes
argument_list|)
return|;
block|}
specifier|public
name|Reader
name|getNCharacterStream
parameter_list|(
name|int
name|arg0
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|Reader
name|getNCharacterStream
parameter_list|(
name|String
name|arg0
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|NClob
name|getNClob
parameter_list|(
name|int
name|arg0
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|NClob
name|getNClob
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|String
name|getNString
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|String
name|getNString
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|private
name|Boolean
name|getBooleanValue
parameter_list|(
name|TBoolValue
name|tBoolValue
parameter_list|)
block|{
if|if
condition|(
name|tBoolValue
operator|.
name|isSetValue
argument_list|()
condition|)
block|{
name|wasNull
operator|=
literal|false
expr_stmt|;
return|return
name|tBoolValue
operator|.
name|isValue
argument_list|()
return|;
block|}
name|wasNull
operator|=
literal|true
expr_stmt|;
return|return
literal|null
return|;
block|}
specifier|private
name|Byte
name|getByteValue
parameter_list|(
name|TByteValue
name|tByteValue
parameter_list|)
block|{
if|if
condition|(
name|tByteValue
operator|.
name|isSetValue
argument_list|()
condition|)
block|{
name|wasNull
operator|=
literal|false
expr_stmt|;
return|return
name|tByteValue
operator|.
name|getValue
argument_list|()
return|;
block|}
name|wasNull
operator|=
literal|true
expr_stmt|;
return|return
literal|null
return|;
block|}
specifier|private
name|Short
name|getShortValue
parameter_list|(
name|TI16Value
name|tI16Value
parameter_list|)
block|{
if|if
condition|(
name|tI16Value
operator|.
name|isSetValue
argument_list|()
condition|)
block|{
name|wasNull
operator|=
literal|false
expr_stmt|;
return|return
name|tI16Value
operator|.
name|getValue
argument_list|()
return|;
block|}
name|wasNull
operator|=
literal|true
expr_stmt|;
return|return
literal|null
return|;
block|}
specifier|private
name|Integer
name|getIntegerValue
parameter_list|(
name|TI32Value
name|tI32Value
parameter_list|)
block|{
if|if
condition|(
name|tI32Value
operator|.
name|isSetValue
argument_list|()
condition|)
block|{
name|wasNull
operator|=
literal|false
expr_stmt|;
return|return
name|tI32Value
operator|.
name|getValue
argument_list|()
return|;
block|}
name|wasNull
operator|=
literal|true
expr_stmt|;
return|return
literal|null
return|;
block|}
specifier|private
name|Long
name|getLongValue
parameter_list|(
name|TI64Value
name|tI64Value
parameter_list|)
block|{
if|if
condition|(
name|tI64Value
operator|.
name|isSetValue
argument_list|()
condition|)
block|{
name|wasNull
operator|=
literal|false
expr_stmt|;
return|return
name|tI64Value
operator|.
name|getValue
argument_list|()
return|;
block|}
name|wasNull
operator|=
literal|true
expr_stmt|;
return|return
literal|null
return|;
block|}
specifier|private
name|Double
name|getDoubleValue
parameter_list|(
name|TDoubleValue
name|tDoubleValue
parameter_list|)
block|{
if|if
condition|(
name|tDoubleValue
operator|.
name|isSetValue
argument_list|()
condition|)
block|{
name|wasNull
operator|=
literal|false
expr_stmt|;
return|return
name|tDoubleValue
operator|.
name|getValue
argument_list|()
return|;
block|}
name|wasNull
operator|=
literal|true
expr_stmt|;
return|return
literal|null
return|;
block|}
specifier|private
name|String
name|getStringValue
parameter_list|(
name|TStringValue
name|tStringValue
parameter_list|)
block|{
if|if
condition|(
name|tStringValue
operator|.
name|isSetValue
argument_list|()
condition|)
block|{
name|wasNull
operator|=
literal|false
expr_stmt|;
return|return
name|tStringValue
operator|.
name|getValue
argument_list|()
return|;
block|}
name|wasNull
operator|=
literal|true
expr_stmt|;
return|return
literal|null
return|;
block|}
specifier|private
name|Timestamp
name|getTimestampValue
parameter_list|(
name|TStringValue
name|tStringValue
parameter_list|)
block|{
if|if
condition|(
name|tStringValue
operator|.
name|isSetValue
argument_list|()
condition|)
block|{
name|wasNull
operator|=
literal|false
expr_stmt|;
return|return
name|Timestamp
operator|.
name|valueOf
argument_list|(
name|tStringValue
operator|.
name|getValue
argument_list|()
argument_list|)
return|;
block|}
name|wasNull
operator|=
literal|true
expr_stmt|;
return|return
literal|null
return|;
block|}
specifier|private
name|byte
index|[]
name|getBinaryValue
parameter_list|(
name|TStringValue
name|tString
parameter_list|)
block|{
if|if
condition|(
name|tString
operator|.
name|isSetValue
argument_list|()
condition|)
block|{
name|wasNull
operator|=
literal|false
expr_stmt|;
return|return
name|tString
operator|.
name|getValue
argument_list|()
operator|.
name|getBytes
argument_list|()
return|;
block|}
name|wasNull
operator|=
literal|true
expr_stmt|;
return|return
literal|null
return|;
block|}
specifier|private
name|BigDecimal
name|getBigDecimalValue
parameter_list|(
name|TStringValue
name|tStringValue
parameter_list|)
block|{
if|if
condition|(
name|tStringValue
operator|.
name|isSetValue
argument_list|()
condition|)
block|{
name|wasNull
operator|=
literal|false
expr_stmt|;
return|return
operator|new
name|BigDecimal
argument_list|(
name|tStringValue
operator|.
name|getValue
argument_list|()
argument_list|)
return|;
block|}
name|wasNull
operator|=
literal|true
expr_stmt|;
return|return
literal|null
return|;
block|}
specifier|private
name|Object
name|getColumnValue
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
if|if
condition|(
name|row
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"No row found."
argument_list|)
throw|;
block|}
name|List
argument_list|<
name|TColumnValue
argument_list|>
name|colVals
init|=
name|row
operator|.
name|getColVals
argument_list|()
decl_stmt|;
if|if
condition|(
name|colVals
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"RowSet does not contain any columns!"
argument_list|)
throw|;
block|}
if|if
condition|(
name|columnIndex
operator|>
name|colVals
operator|.
name|size
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Invalid columnIndex: "
operator|+
name|columnIndex
argument_list|)
throw|;
block|}
name|TColumnValue
name|tColumnValue
init|=
name|colVals
operator|.
name|get
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Type
name|columnType
init|=
name|getSchema
argument_list|()
operator|.
name|getColumnDescriptorAt
argument_list|(
name|columnIndex
operator|-
literal|1
argument_list|)
operator|.
name|getType
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|columnType
condition|)
block|{
case|case
name|BOOLEAN_TYPE
case|:
return|return
name|getBooleanValue
argument_list|(
name|tColumnValue
operator|.
name|getBoolVal
argument_list|()
argument_list|)
return|;
case|case
name|TINYINT_TYPE
case|:
return|return
name|getByteValue
argument_list|(
name|tColumnValue
operator|.
name|getByteVal
argument_list|()
argument_list|)
return|;
case|case
name|SMALLINT_TYPE
case|:
return|return
name|getShortValue
argument_list|(
name|tColumnValue
operator|.
name|getI16Val
argument_list|()
argument_list|)
return|;
case|case
name|INT_TYPE
case|:
return|return
name|getIntegerValue
argument_list|(
name|tColumnValue
operator|.
name|getI32Val
argument_list|()
argument_list|)
return|;
case|case
name|BIGINT_TYPE
case|:
return|return
name|getLongValue
argument_list|(
name|tColumnValue
operator|.
name|getI64Val
argument_list|()
argument_list|)
return|;
case|case
name|FLOAT_TYPE
case|:
return|return
name|getDoubleValue
argument_list|(
name|tColumnValue
operator|.
name|getDoubleVal
argument_list|()
argument_list|)
return|;
case|case
name|DOUBLE_TYPE
case|:
return|return
name|getDoubleValue
argument_list|(
name|tColumnValue
operator|.
name|getDoubleVal
argument_list|()
argument_list|)
return|;
case|case
name|STRING_TYPE
case|:
return|return
name|getStringValue
argument_list|(
name|tColumnValue
operator|.
name|getStringVal
argument_list|()
argument_list|)
return|;
case|case
name|BINARY_TYPE
case|:
return|return
name|getBinaryValue
argument_list|(
name|tColumnValue
operator|.
name|getStringVal
argument_list|()
argument_list|)
return|;
case|case
name|TIMESTAMP_TYPE
case|:
return|return
name|getTimestampValue
argument_list|(
name|tColumnValue
operator|.
name|getStringVal
argument_list|()
argument_list|)
return|;
case|case
name|DECIMAL_TYPE
case|:
return|return
name|getBigDecimalValue
argument_list|(
name|tColumnValue
operator|.
name|getStringVal
argument_list|()
argument_list|)
return|;
default|default:
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Unrecognized column type:"
operator|+
name|columnType
argument_list|)
throw|;
block|}
comment|/*     switch (tColumnValue.getSetField()) {     case BOOL_VAL:       return getBooleanValue(tColumnValue.getBoolVal());     case BYTE_VAL:       return getByteValue(tColumnValue.getByteVal());     case I16_VAL:       return getShortValue(tColumnValue.getI16Val());     case I32_VAL:       return getIntegerValue(tColumnValue.getI32Val());     case I64_VAL:       return getLongValue(tColumnValue.getI64Val());     case DOUBLE_VAL:       return getDoubleValue(tColumnValue.getDoubleVal());     case STRING_VAL:       return getStringValue(tColumnValue.getStringVal());     default:       throw new SQLException("Unrecognized column type:" + tColumnValue.getSetField());     }     */
block|}
specifier|public
name|Object
name|getObject
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getColumnValue
argument_list|(
name|columnIndex
argument_list|)
return|;
block|}
specifier|public
name|Object
name|getObject
parameter_list|(
name|String
name|columnName
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getObject
argument_list|(
name|findColumn
argument_list|(
name|columnName
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|Object
name|getObject
parameter_list|(
name|int
name|i
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|map
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|Object
name|getObject
parameter_list|(
name|String
name|colName
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|map
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|Ref
name|getRef
parameter_list|(
name|int
name|i
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|Ref
name|getRef
parameter_list|(
name|String
name|colName
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|int
name|getRow
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|RowId
name|getRowId
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|RowId
name|getRowId
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|SQLXML
name|getSQLXML
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|SQLXML
name|getSQLXML
parameter_list|(
name|String
name|columnLabel
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|short
name|getShort
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
try|try
block|{
name|Object
name|obj
init|=
name|getObject
argument_list|(
name|columnIndex
argument_list|)
decl_stmt|;
if|if
condition|(
name|Number
operator|.
name|class
operator|.
name|isInstance
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
operator|(
operator|(
name|Number
operator|)
name|obj
operator|)
operator|.
name|shortValue
argument_list|()
return|;
block|}
elseif|else
if|if
condition|(
name|obj
operator|==
literal|null
condition|)
block|{
return|return
literal|0
return|;
block|}
elseif|else
if|if
condition|(
name|String
operator|.
name|class
operator|.
name|isInstance
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
name|Short
operator|.
name|valueOf
argument_list|(
operator|(
name|String
operator|)
name|obj
argument_list|)
return|;
block|}
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Illegal conversion"
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Cannot convert column "
operator|+
name|columnIndex
operator|+
literal|" to short: "
operator|+
name|e
operator|.
name|toString
argument_list|()
argument_list|)
throw|;
block|}
block|}
specifier|public
name|short
name|getShort
parameter_list|(
name|String
name|columnName
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getShort
argument_list|(
name|findColumn
argument_list|(
name|columnName
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|Statement
name|getStatement
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
comment|/**    * @param columnIndex - the first column is 1, the second is 2, ...    * @see java.sql.ResultSet#getString(int)    */
specifier|public
name|String
name|getString
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
name|Object
name|value
init|=
name|getColumnValue
argument_list|(
name|columnIndex
argument_list|)
decl_stmt|;
if|if
condition|(
name|wasNull
condition|)
block|{
return|return
literal|null
return|;
block|}
if|if
condition|(
name|value
operator|instanceof
name|byte
index|[]
condition|)
block|{
return|return
operator|new
name|String
argument_list|(
operator|(
name|byte
index|[]
operator|)
name|value
argument_list|)
return|;
block|}
return|return
name|value
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|String
name|getString
parameter_list|(
name|String
name|columnName
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getString
argument_list|(
name|findColumn
argument_list|(
name|columnName
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|Time
name|getTime
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|Time
name|getTime
parameter_list|(
name|String
name|columnName
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|Time
name|getTime
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Calendar
name|cal
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|Time
name|getTime
parameter_list|(
name|String
name|columnName
parameter_list|,
name|Calendar
name|cal
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|Timestamp
name|getTimestamp
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
name|Object
name|obj
init|=
name|getObject
argument_list|(
name|columnIndex
argument_list|)
decl_stmt|;
if|if
condition|(
name|obj
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
if|if
condition|(
name|obj
operator|instanceof
name|Timestamp
condition|)
block|{
return|return
operator|(
name|Timestamp
operator|)
name|obj
return|;
block|}
if|if
condition|(
name|obj
operator|instanceof
name|String
condition|)
block|{
return|return
name|Timestamp
operator|.
name|valueOf
argument_list|(
operator|(
name|String
operator|)
name|obj
argument_list|)
return|;
block|}
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Illegal conversion"
argument_list|)
throw|;
block|}
specifier|public
name|Timestamp
name|getTimestamp
parameter_list|(
name|String
name|columnName
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|getTimestamp
argument_list|(
name|findColumn
argument_list|(
name|columnName
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|Timestamp
name|getTimestamp
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Calendar
name|cal
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|Timestamp
name|getTimestamp
parameter_list|(
name|String
name|columnName
parameter_list|,
name|Calendar
name|cal
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|int
name|getType
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|ResultSet
operator|.
name|TYPE_FORWARD_ONLY
return|;
block|}
specifier|public
name|URL
name|getURL
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|URL
name|getURL
parameter_list|(
name|String
name|columnName
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|InputStream
name|getUnicodeStream
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|InputStream
name|getUnicodeStream
parameter_list|(
name|String
name|columnName
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|insertRow
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|boolean
name|isAfterLast
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|boolean
name|isBeforeFirst
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|boolean
name|isClosed
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|boolean
name|isFirst
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|boolean
name|isLast
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|boolean
name|last
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|moveToCurrentRow
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|moveToInsertRow
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|boolean
name|previous
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|refreshRow
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|boolean
name|relative
parameter_list|(
name|int
name|rows
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|boolean
name|rowDeleted
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|boolean
name|rowInserted
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|boolean
name|rowUpdated
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|setFetchDirection
parameter_list|(
name|int
name|direction
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|setFetchSize
parameter_list|(
name|int
name|rows
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateArray
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Array
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateArray
parameter_list|(
name|String
name|columnName
parameter_list|,
name|Array
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateAsciiStream
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|InputStream
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateAsciiStream
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|InputStream
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateAsciiStream
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateAsciiStream
parameter_list|(
name|String
name|columnName
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateAsciiStream
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateAsciiStream
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateBigDecimal
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|BigDecimal
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateBigDecimal
parameter_list|(
name|String
name|columnName
parameter_list|,
name|BigDecimal
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateBinaryStream
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|InputStream
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateBinaryStream
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|InputStream
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateBinaryStream
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateBinaryStream
parameter_list|(
name|String
name|columnName
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateBinaryStream
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateBinaryStream
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|InputStream
name|x
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateBlob
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Blob
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateBlob
parameter_list|(
name|String
name|columnName
parameter_list|,
name|Blob
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateBlob
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|InputStream
name|inputStream
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateBlob
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|InputStream
name|inputStream
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateBlob
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|InputStream
name|inputStream
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateBlob
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|InputStream
name|inputStream
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateBoolean
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|boolean
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateBoolean
parameter_list|(
name|String
name|columnName
parameter_list|,
name|boolean
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateByte
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|byte
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateByte
parameter_list|(
name|String
name|columnName
parameter_list|,
name|byte
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateBytes
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|byte
index|[]
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateBytes
parameter_list|(
name|String
name|columnName
parameter_list|,
name|byte
index|[]
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateCharacterStream
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Reader
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateCharacterStream
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Reader
name|reader
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateCharacterStream
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Reader
name|x
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateCharacterStream
parameter_list|(
name|String
name|columnName
parameter_list|,
name|Reader
name|reader
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateCharacterStream
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Reader
name|x
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateCharacterStream
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Reader
name|reader
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateClob
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Clob
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateClob
parameter_list|(
name|String
name|columnName
parameter_list|,
name|Clob
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateClob
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Reader
name|reader
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateClob
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Reader
name|reader
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateClob
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Reader
name|reader
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateClob
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Reader
name|reader
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateDate
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Date
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateDate
parameter_list|(
name|String
name|columnName
parameter_list|,
name|Date
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateDouble
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|double
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateDouble
parameter_list|(
name|String
name|columnName
parameter_list|,
name|double
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateFloat
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|float
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateFloat
parameter_list|(
name|String
name|columnName
parameter_list|,
name|float
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateInt
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|int
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateInt
parameter_list|(
name|String
name|columnName
parameter_list|,
name|int
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateLong
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|long
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateLong
parameter_list|(
name|String
name|columnName
parameter_list|,
name|long
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateNCharacterStream
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Reader
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateNCharacterStream
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Reader
name|reader
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateNCharacterStream
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Reader
name|x
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateNCharacterStream
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Reader
name|reader
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateNClob
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|NClob
name|clob
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateNClob
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|NClob
name|clob
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateNClob
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Reader
name|reader
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateNClob
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Reader
name|reader
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateNClob
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Reader
name|reader
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateNClob
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|Reader
name|reader
parameter_list|,
name|long
name|length
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateNString
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|String
name|string
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateNString
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|String
name|string
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateNull
parameter_list|(
name|int
name|columnIndex
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateNull
parameter_list|(
name|String
name|columnName
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateObject
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Object
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateObject
parameter_list|(
name|String
name|columnName
parameter_list|,
name|Object
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateObject
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Object
name|x
parameter_list|,
name|int
name|scale
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateObject
parameter_list|(
name|String
name|columnName
parameter_list|,
name|Object
name|x
parameter_list|,
name|int
name|scale
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateRef
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Ref
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateRef
parameter_list|(
name|String
name|columnName
parameter_list|,
name|Ref
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateRow
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateRowId
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|RowId
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateRowId
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|RowId
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateSQLXML
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|SQLXML
name|xmlObject
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateSQLXML
parameter_list|(
name|String
name|columnLabel
parameter_list|,
name|SQLXML
name|xmlObject
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateShort
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|short
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateShort
parameter_list|(
name|String
name|columnName
parameter_list|,
name|short
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateString
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|String
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateString
parameter_list|(
name|String
name|columnName
parameter_list|,
name|String
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateTime
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Time
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateTime
parameter_list|(
name|String
name|columnName
parameter_list|,
name|Time
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateTimestamp
parameter_list|(
name|int
name|columnIndex
parameter_list|,
name|Timestamp
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|void
name|updateTimestamp
parameter_list|(
name|String
name|columnName
parameter_list|,
name|Timestamp
name|x
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|SQLWarning
name|getWarnings
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|warningChain
return|;
block|}
specifier|public
name|void
name|clearWarnings
parameter_list|()
throws|throws
name|SQLException
block|{
name|warningChain
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
name|boolean
name|wasNull
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|wasNull
return|;
block|}
specifier|public
name|boolean
name|isWrapperFor
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|iface
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|unwrap
parameter_list|(
name|Class
argument_list|<
name|T
argument_list|>
name|iface
parameter_list|)
throws|throws
name|SQLException
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Method not supported"
argument_list|)
throw|;
block|}
specifier|protected
name|void
name|setSchema
parameter_list|(
name|TableSchema
name|schema
parameter_list|)
block|{
name|this
operator|.
name|schema
operator|=
name|schema
expr_stmt|;
block|}
specifier|protected
name|TableSchema
name|getSchema
parameter_list|()
block|{
return|return
name|schema
return|;
block|}
block|}
end_class

end_unit

