begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|jdbc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TCLIService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|rpc
operator|.
name|thrift
operator|.
name|TCLIService
operator|.
name|Iface
import|;
end_import

begin_class
specifier|public
class|class
name|EmbeddedCLIServicePortal
block|{
specifier|public
specifier|static
name|Iface
name|get
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|hiveConfs
parameter_list|)
block|{
name|TCLIService
operator|.
name|Iface
name|embeddedClient
decl_stmt|;
try|try
block|{
name|Class
argument_list|<
name|TCLIService
operator|.
name|Iface
argument_list|>
name|clazz
init|=
operator|(
name|Class
argument_list|<
name|Iface
argument_list|>
operator|)
name|Class
operator|.
name|forName
argument_list|(
literal|"org.apache.hive.service.cli.thrift.EmbeddedThriftBinaryCLIService"
argument_list|)
decl_stmt|;
name|embeddedClient
operator|=
name|clazz
operator|.
name|newInstance
argument_list|()
expr_stmt|;
operator|(
operator|(
name|Service
operator|)
name|embeddedClient
operator|)
operator|.
name|init
argument_list|(
name|buildOverlayedConf
argument_list|(
name|hiveConfs
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ClassNotFoundException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Please Load hive-service jar to the classpath to enable embedded mode"
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Error initializing embedded mode"
argument_list|,
name|e
argument_list|)
throw|;
block|}
return|return
name|embeddedClient
return|;
block|}
specifier|private
specifier|static
name|HiveConf
name|buildOverlayedConf
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|confOverlay
parameter_list|)
block|{
name|HiveConf
name|conf
init|=
operator|new
name|HiveConf
argument_list|()
decl_stmt|;
if|if
condition|(
name|confOverlay
operator|!=
literal|null
operator|&&
operator|!
name|confOverlay
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
comment|// apply overlay query specific settings, if any
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|confEntry
range|:
name|confOverlay
operator|.
name|entrySet
argument_list|()
control|)
block|{
try|try
block|{
name|conf
operator|.
name|set
argument_list|(
name|confEntry
operator|.
name|getKey
argument_list|()
argument_list|,
name|confEntry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Error applying statement specific settings"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
return|return
name|conf
return|;
block|}
block|}
end_class

end_unit

