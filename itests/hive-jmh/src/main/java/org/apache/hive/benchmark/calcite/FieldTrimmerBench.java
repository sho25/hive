begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|benchmark
operator|.
name|calcite
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|jdbc
operator|.
name|JavaTypeFactoryImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|plan
operator|.
name|RelOptCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|plan
operator|.
name|RelOptPlanner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|plan
operator|.
name|RelTraitSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|AbstractRelNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|BiRel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|RelNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|SingleRel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|type
operator|.
name|RelDataType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rel
operator|.
name|type
operator|.
name|RelRecordType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|rex
operator|.
name|RexBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|tools
operator|.
name|RelBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
operator|.
name|calcite
operator|.
name|HiveRelFactories
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
operator|.
name|calcite
operator|.
name|HiveTypeSystemImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|optimizer
operator|.
name|calcite
operator|.
name|rules
operator|.
name|HiveRelFieldTrimmer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|parse
operator|.
name|CalcitePlanner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|annotations
operator|.
name|Benchmark
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|annotations
operator|.
name|BenchmarkMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|annotations
operator|.
name|Fork
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|annotations
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|annotations
operator|.
name|Measurement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|annotations
operator|.
name|Mode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|annotations
operator|.
name|OutputTimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|annotations
operator|.
name|Scope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|annotations
operator|.
name|Setup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|annotations
operator|.
name|State
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|annotations
operator|.
name|Warmup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|runner
operator|.
name|Runner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|runner
operator|.
name|RunnerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|runner
operator|.
name|options
operator|.
name|Options
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openjdk
operator|.
name|jmh
operator|.
name|runner
operator|.
name|options
operator|.
name|OptionsBuilder
import|;
end_import

begin_comment
comment|/**  * This test measures the performance for field trimmer.  *<p/>  * This test uses JMH framework for benchmarking.  * You may execute this benchmark tool using JMH command line in different ways:  *<p/>  * To use the settings shown in the main() function, use:  * $ java -cp target/benchmarks.jar org.apache.hive.benchmark.calcite.FieldTrimmerBench  *<p/>  * To use the default settings used by JMH, use:  * $ java -jar target/benchmarks.jar org.apache.hive.benchmark.calcite.FieldTrimmerBench  */
end_comment

begin_class
annotation|@
name|State
argument_list|(
name|Scope
operator|.
name|Thread
argument_list|)
annotation|@
name|OutputTimeUnit
argument_list|(
name|TimeUnit
operator|.
name|MICROSECONDS
argument_list|)
annotation|@
name|Fork
argument_list|(
literal|1
argument_list|)
specifier|public
class|class
name|FieldTrimmerBench
block|{
name|RelOptCluster
name|relOptCluster
decl_stmt|;
name|RelBuilder
name|relBuilder
decl_stmt|;
name|RelNode
name|root
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql2rel
operator|.
name|RelFieldTrimmer
name|cft
decl_stmt|;
name|HiveRelFieldTrimmer
name|ft
decl_stmt|;
name|HiveRelFieldTrimmer
name|hft
decl_stmt|;
annotation|@
name|Setup
argument_list|(
name|Level
operator|.
name|Trial
argument_list|)
specifier|public
name|void
name|initTrial
parameter_list|()
block|{
comment|// Init cluster and builder
specifier|final
name|RelOptPlanner
name|planner
init|=
name|CalcitePlanner
operator|.
name|createPlanner
argument_list|(
operator|new
name|HiveConf
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|RexBuilder
name|rexBuilder
init|=
operator|new
name|RexBuilder
argument_list|(
operator|new
name|JavaTypeFactoryImpl
argument_list|(
operator|new
name|HiveTypeSystemImpl
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|relOptCluster
operator|=
name|RelOptCluster
operator|.
name|create
argument_list|(
name|planner
argument_list|,
name|rexBuilder
argument_list|)
expr_stmt|;
name|relBuilder
operator|=
name|HiveRelFactories
operator|.
name|HIVE_BUILDER
operator|.
name|create
argument_list|(
name|relOptCluster
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// Create operator tree
name|DummyNode0
name|d0
init|=
operator|new
name|DummyNode0
argument_list|(
name|relOptCluster
argument_list|,
name|relOptCluster
operator|.
name|traitSet
argument_list|()
argument_list|)
decl_stmt|;
name|DummyNode1
name|d1
init|=
operator|new
name|DummyNode1
argument_list|(
name|relOptCluster
argument_list|,
name|relOptCluster
operator|.
name|traitSet
argument_list|()
argument_list|)
decl_stmt|;
name|DummyNode2
name|d2
init|=
operator|new
name|DummyNode2
argument_list|(
name|relOptCluster
argument_list|,
name|relOptCluster
operator|.
name|traitSet
argument_list|()
argument_list|)
decl_stmt|;
name|DummyNode3
name|d3
init|=
operator|new
name|DummyNode3
argument_list|(
name|relOptCluster
argument_list|,
name|relOptCluster
operator|.
name|traitSet
argument_list|()
argument_list|)
decl_stmt|;
name|DummyNode4
name|d4
init|=
operator|new
name|DummyNode4
argument_list|(
name|relOptCluster
argument_list|,
name|relOptCluster
operator|.
name|traitSet
argument_list|()
argument_list|,
name|d0
argument_list|)
decl_stmt|;
name|DummyNode5
name|d5
init|=
operator|new
name|DummyNode5
argument_list|(
name|relOptCluster
argument_list|,
name|relOptCluster
operator|.
name|traitSet
argument_list|()
argument_list|,
name|d1
argument_list|)
decl_stmt|;
name|DummyNode6
name|d6
init|=
operator|new
name|DummyNode6
argument_list|(
name|relOptCluster
argument_list|,
name|relOptCluster
operator|.
name|traitSet
argument_list|()
argument_list|,
name|d2
argument_list|)
decl_stmt|;
name|DummyNode7
name|d7
init|=
operator|new
name|DummyNode7
argument_list|(
name|relOptCluster
argument_list|,
name|relOptCluster
operator|.
name|traitSet
argument_list|()
argument_list|,
name|d3
argument_list|)
decl_stmt|;
name|DummyNode8
name|d8
init|=
operator|new
name|DummyNode8
argument_list|(
name|relOptCluster
argument_list|,
name|relOptCluster
operator|.
name|traitSet
argument_list|()
argument_list|,
name|d4
argument_list|,
name|d5
argument_list|)
decl_stmt|;
name|DummyNode9
name|d9
init|=
operator|new
name|DummyNode9
argument_list|(
name|relOptCluster
argument_list|,
name|relOptCluster
operator|.
name|traitSet
argument_list|()
argument_list|,
name|d6
argument_list|,
name|d7
argument_list|)
decl_stmt|;
name|root
operator|=
operator|new
name|DummyNode9
argument_list|(
name|relOptCluster
argument_list|,
name|relOptCluster
operator|.
name|traitSet
argument_list|()
argument_list|,
name|d8
argument_list|,
name|d9
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Benchmark
annotation|@
name|BenchmarkMode
argument_list|(
block|{
name|Mode
operator|.
name|Throughput
block|,
name|Mode
operator|.
name|AverageTime
block|}
argument_list|)
annotation|@
name|Warmup
argument_list|(
name|iterations
operator|=
literal|5
argument_list|,
name|time
operator|=
literal|2
argument_list|,
name|timeUnit
operator|=
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
annotation|@
name|Measurement
argument_list|(
name|iterations
operator|=
literal|10
argument_list|,
name|time
operator|=
literal|2
argument_list|,
name|timeUnit
operator|=
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
specifier|public
name|void
name|baseRelFieldTrimmer
parameter_list|()
block|{
comment|// We initialize the field trimmer for every execution of the benchmark
name|cft
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|calcite
operator|.
name|sql2rel
operator|.
name|RelFieldTrimmer
argument_list|(
literal|null
argument_list|,
name|relBuilder
argument_list|)
expr_stmt|;
name|cft
operator|.
name|trim
argument_list|(
name|root
argument_list|)
expr_stmt|;
name|cft
operator|=
literal|null
expr_stmt|;
block|}
annotation|@
name|Benchmark
annotation|@
name|BenchmarkMode
argument_list|(
block|{
name|Mode
operator|.
name|Throughput
block|,
name|Mode
operator|.
name|AverageTime
block|}
argument_list|)
annotation|@
name|Warmup
argument_list|(
name|iterations
operator|=
literal|5
argument_list|,
name|time
operator|=
literal|2
argument_list|,
name|timeUnit
operator|=
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
annotation|@
name|Measurement
argument_list|(
name|iterations
operator|=
literal|10
argument_list|,
name|time
operator|=
literal|2
argument_list|,
name|timeUnit
operator|=
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
specifier|public
name|void
name|modBaseRelFieldTrimmer
parameter_list|()
block|{
comment|// We initialize the field trimmer for every execution of the benchmark
name|ft
operator|=
name|HiveRelFieldTrimmer
operator|.
name|get
argument_list|(
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|ft
operator|.
name|trim
argument_list|(
name|relBuilder
argument_list|,
name|root
argument_list|)
expr_stmt|;
name|ft
operator|=
literal|null
expr_stmt|;
block|}
annotation|@
name|Benchmark
annotation|@
name|BenchmarkMode
argument_list|(
block|{
name|Mode
operator|.
name|Throughput
block|,
name|Mode
operator|.
name|AverageTime
block|}
argument_list|)
annotation|@
name|Warmup
argument_list|(
name|iterations
operator|=
literal|5
argument_list|,
name|time
operator|=
literal|2
argument_list|,
name|timeUnit
operator|=
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
annotation|@
name|Measurement
argument_list|(
name|iterations
operator|=
literal|10
argument_list|,
name|time
operator|=
literal|2
argument_list|,
name|timeUnit
operator|=
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
specifier|public
name|void
name|hiveRelFieldTrimmer
parameter_list|()
block|{
comment|// We initialize the field trimmer for every execution of the benchmark
name|hft
operator|=
name|HiveRelFieldTrimmer
operator|.
name|get
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|hft
operator|.
name|trim
argument_list|(
name|relBuilder
argument_list|,
name|root
argument_list|)
expr_stmt|;
name|hft
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|RunnerException
block|{
name|Options
name|opt
init|=
operator|new
name|OptionsBuilder
argument_list|()
operator|.
name|include
argument_list|(
literal|".*"
operator|+
name|FieldTrimmerBench
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
operator|+
literal|".*"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
operator|new
name|Runner
argument_list|(
name|opt
argument_list|)
operator|.
name|run
argument_list|()
expr_stmt|;
block|}
comment|// ~ 10 rel node classes to use in the benchmark.
specifier|private
class|class
name|DummyNode0
extends|extends
name|AbstractRelNode
block|{
specifier|protected
name|DummyNode0
parameter_list|(
name|RelOptCluster
name|cluster
parameter_list|,
name|RelTraitSet
name|traits
parameter_list|)
block|{
name|super
argument_list|(
name|cluster
argument_list|,
name|cluster
operator|.
name|traitSet
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|RelDataType
name|deriveRowType
parameter_list|()
block|{
return|return
operator|new
name|RelRecordType
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|private
class|class
name|DummyNode1
extends|extends
name|AbstractRelNode
block|{
specifier|protected
name|DummyNode1
parameter_list|(
name|RelOptCluster
name|cluster
parameter_list|,
name|RelTraitSet
name|traits
parameter_list|)
block|{
name|super
argument_list|(
name|cluster
argument_list|,
name|cluster
operator|.
name|traitSet
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|RelDataType
name|deriveRowType
parameter_list|()
block|{
return|return
operator|new
name|RelRecordType
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|private
class|class
name|DummyNode2
extends|extends
name|AbstractRelNode
block|{
specifier|protected
name|DummyNode2
parameter_list|(
name|RelOptCluster
name|cluster
parameter_list|,
name|RelTraitSet
name|traits
parameter_list|)
block|{
name|super
argument_list|(
name|cluster
argument_list|,
name|cluster
operator|.
name|traitSet
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|RelDataType
name|deriveRowType
parameter_list|()
block|{
return|return
operator|new
name|RelRecordType
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|private
class|class
name|DummyNode3
extends|extends
name|AbstractRelNode
block|{
specifier|protected
name|DummyNode3
parameter_list|(
name|RelOptCluster
name|cluster
parameter_list|,
name|RelTraitSet
name|traits
parameter_list|)
block|{
name|super
argument_list|(
name|cluster
argument_list|,
name|cluster
operator|.
name|traitSet
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|RelDataType
name|deriveRowType
parameter_list|()
block|{
return|return
operator|new
name|RelRecordType
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|private
class|class
name|DummyNode4
extends|extends
name|SingleRel
block|{
specifier|protected
name|DummyNode4
parameter_list|(
name|RelOptCluster
name|cluster
parameter_list|,
name|RelTraitSet
name|traits
parameter_list|,
name|RelNode
name|input
parameter_list|)
block|{
name|super
argument_list|(
name|cluster
argument_list|,
name|cluster
operator|.
name|traitSet
argument_list|()
argument_list|,
name|input
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|RelDataType
name|deriveRowType
parameter_list|()
block|{
return|return
operator|new
name|RelRecordType
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|private
class|class
name|DummyNode5
extends|extends
name|SingleRel
block|{
specifier|protected
name|DummyNode5
parameter_list|(
name|RelOptCluster
name|cluster
parameter_list|,
name|RelTraitSet
name|traits
parameter_list|,
name|RelNode
name|input
parameter_list|)
block|{
name|super
argument_list|(
name|cluster
argument_list|,
name|cluster
operator|.
name|traitSet
argument_list|()
argument_list|,
name|input
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|RelDataType
name|deriveRowType
parameter_list|()
block|{
return|return
operator|new
name|RelRecordType
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|private
class|class
name|DummyNode6
extends|extends
name|SingleRel
block|{
specifier|protected
name|DummyNode6
parameter_list|(
name|RelOptCluster
name|cluster
parameter_list|,
name|RelTraitSet
name|traits
parameter_list|,
name|RelNode
name|input
parameter_list|)
block|{
name|super
argument_list|(
name|cluster
argument_list|,
name|cluster
operator|.
name|traitSet
argument_list|()
argument_list|,
name|input
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|RelDataType
name|deriveRowType
parameter_list|()
block|{
return|return
operator|new
name|RelRecordType
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|private
class|class
name|DummyNode7
extends|extends
name|SingleRel
block|{
specifier|protected
name|DummyNode7
parameter_list|(
name|RelOptCluster
name|cluster
parameter_list|,
name|RelTraitSet
name|traits
parameter_list|,
name|RelNode
name|input
parameter_list|)
block|{
name|super
argument_list|(
name|cluster
argument_list|,
name|cluster
operator|.
name|traitSet
argument_list|()
argument_list|,
name|input
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|RelDataType
name|deriveRowType
parameter_list|()
block|{
return|return
operator|new
name|RelRecordType
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|private
class|class
name|DummyNode8
extends|extends
name|BiRel
block|{
specifier|protected
name|DummyNode8
parameter_list|(
name|RelOptCluster
name|cluster
parameter_list|,
name|RelTraitSet
name|traits
parameter_list|,
name|RelNode
name|left
parameter_list|,
name|RelNode
name|right
parameter_list|)
block|{
name|super
argument_list|(
name|cluster
argument_list|,
name|cluster
operator|.
name|traitSet
argument_list|()
argument_list|,
name|left
argument_list|,
name|right
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|RelDataType
name|deriveRowType
parameter_list|()
block|{
return|return
operator|new
name|RelRecordType
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|()
argument_list|)
return|;
block|}
block|}
specifier|private
class|class
name|DummyNode9
extends|extends
name|BiRel
block|{
specifier|protected
name|DummyNode9
parameter_list|(
name|RelOptCluster
name|cluster
parameter_list|,
name|RelTraitSet
name|traits
parameter_list|,
name|RelNode
name|left
parameter_list|,
name|RelNode
name|right
parameter_list|)
block|{
name|super
argument_list|(
name|cluster
argument_list|,
name|cluster
operator|.
name|traitSet
argument_list|()
argument_list|,
name|left
argument_list|,
name|right
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|RelDataType
name|deriveRowType
parameter_list|()
block|{
return|return
operator|new
name|RelRecordType
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|()
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

