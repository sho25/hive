begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|kafka
package|;
end_package

begin_import
import|import
name|kafka
operator|.
name|admin
operator|.
name|AdminUtils
import|;
end_import

begin_import
import|import
name|kafka
operator|.
name|admin
operator|.
name|RackAwareMode
import|;
end_import

begin_import
import|import
name|kafka
operator|.
name|server
operator|.
name|KafkaConfig
import|;
end_import

begin_import
import|import
name|kafka
operator|.
name|server
operator|.
name|KafkaServerStartable
import|;
end_import

begin_import
import|import
name|kafka
operator|.
name|utils
operator|.
name|ZKStringSerializer$
import|;
end_import

begin_import
import|import
name|kafka
operator|.
name|utils
operator|.
name|ZkUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|service
operator|.
name|AbstractService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|kafka
operator|.
name|clients
operator|.
name|producer
operator|.
name|KafkaProducer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|kafka
operator|.
name|clients
operator|.
name|producer
operator|.
name|ProducerRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|kafka
operator|.
name|common
operator|.
name|serialization
operator|.
name|StringSerializer
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Throwables
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|org
operator|.
name|I0Itec
operator|.
name|zkclient
operator|.
name|ZkClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|I0Itec
operator|.
name|zkclient
operator|.
name|ZkConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_comment
comment|/**  * This class has the hooks to start and stop single node kafka cluster.  * The kafka broker is started on port 9092  */
end_comment

begin_class
specifier|public
class|class
name|SingleNodeKafkaCluster
extends|extends
name|AbstractService
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|SingleNodeKafkaCluster
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|KafkaServerStartable
name|serverStartable
decl_stmt|;
specifier|private
specifier|final
name|String
name|zkString
decl_stmt|;
specifier|public
name|SingleNodeKafkaCluster
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|logDir
parameter_list|,
name|Integer
name|zkPort
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|this
operator|.
name|zkString
operator|=
name|String
operator|.
name|format
argument_list|(
literal|"localhost:%d"
argument_list|,
name|zkPort
argument_list|)
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"zookeeper.connect"
argument_list|,
name|zkString
argument_list|)
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"broker.id"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"host.name"
argument_list|,
literal|"localhost"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"port"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
literal|9092
argument_list|)
argument_list|)
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"log.dir"
argument_list|,
name|logDir
argument_list|)
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"log.flush.interval.messages"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"offsets.topic.replication.factor"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"offsets.topic.num.partitions"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"transaction.state.log.replication.factor"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"transaction.state.log.min.isr"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"log.cleaner.dedupe.buffer.size"
argument_list|,
literal|"1048577"
argument_list|)
expr_stmt|;
name|this
operator|.
name|serverStartable
operator|=
operator|new
name|KafkaServerStartable
argument_list|(
name|KafkaConfig
operator|.
name|fromProps
argument_list|(
name|properties
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|serviceStart
parameter_list|()
throws|throws
name|Exception
block|{
name|serverStartable
operator|.
name|startup
argument_list|()
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"Kafka Server Started"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|serviceStop
parameter_list|()
throws|throws
name|Exception
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Stopping Kafka Server"
argument_list|)
expr_stmt|;
name|serverStartable
operator|.
name|shutdown
argument_list|()
expr_stmt|;
name|log
operator|.
name|info
argument_list|(
literal|"Kafka Server Stopped"
argument_list|)
expr_stmt|;
block|}
comment|/**    * Creates a topic and inserts data from the specified datafile.    * Each line in the datafile is sent to kafka as a single message.    * @param topicName    * @param datafile    */
specifier|public
name|void
name|createTopicWithData
parameter_list|(
name|String
name|topicName
parameter_list|,
name|File
name|datafile
parameter_list|)
block|{
name|createTopic
argument_list|(
name|topicName
argument_list|)
expr_stmt|;
comment|// set up kafka producer
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"bootstrap.servers"
argument_list|,
literal|"localhost:9092"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"acks"
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"retries"
argument_list|,
literal|"3"
argument_list|)
expr_stmt|;
try|try
init|(
name|KafkaProducer
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|producer
init|=
operator|new
name|KafkaProducer
argument_list|<>
argument_list|(
name|properties
argument_list|,
operator|new
name|StringSerializer
argument_list|()
argument_list|,
operator|new
name|StringSerializer
argument_list|()
argument_list|)
init|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|events
init|=
name|Files
operator|.
name|readLines
argument_list|(
name|datafile
argument_list|,
name|Charset
operator|.
name|forName
argument_list|(
literal|"UTF-8"
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|event
range|:
name|events
control|)
block|{
name|producer
operator|.
name|send
argument_list|(
operator|new
name|ProducerRecord
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|(
name|topicName
argument_list|,
name|event
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|Throwables
operator|.
name|propagate
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|createTopic
parameter_list|(
name|String
name|topic
parameter_list|)
block|{
name|int
name|sessionTimeoutMs
init|=
literal|1000
decl_stmt|;
name|ZkClient
name|zkClient
init|=
operator|new
name|ZkClient
argument_list|(
name|this
operator|.
name|zkString
argument_list|,
name|sessionTimeoutMs
argument_list|,
name|sessionTimeoutMs
argument_list|,
name|ZKStringSerializer$
operator|.
name|MODULE$
argument_list|)
decl_stmt|;
name|ZkUtils
name|zkUtils
init|=
operator|new
name|ZkUtils
argument_list|(
name|zkClient
argument_list|,
operator|new
name|ZkConnection
argument_list|(
name|zkString
argument_list|,
name|sessionTimeoutMs
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|int
name|numPartitions
init|=
literal|1
decl_stmt|;
name|int
name|replicationFactor
init|=
literal|1
decl_stmt|;
name|Properties
name|topicConfig
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|AdminUtils
operator|.
name|createTopic
argument_list|(
name|zkUtils
argument_list|,
name|topic
argument_list|,
name|numPartitions
argument_list|,
name|replicationFactor
argument_list|,
name|topicConfig
argument_list|,
name|RackAwareMode
operator|.
name|Disabled$
operator|.
name|MODULE$
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

