begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|hooks
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|session
operator|.
name|SessionState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|session
operator|.
name|SessionState
operator|.
name|LogHelper
import|;
end_import

begin_comment
comment|/**  *  * VerifyOverriddenConfigsHook.  *  * This hook is meant to be used for testing.  It prints the keys and values of config variables  * which have been noted by the session state as changed by the user.  It only prints specific  * variables as others may change and that should not affect this test.  */
end_comment

begin_class
specifier|public
class|class
name|VerifyOverriddenConfigsHook
implements|implements
name|ExecuteWithHookContext
block|{
comment|// A config variable set via a System Propery, a config variable set in the CLI,
comment|// a config variable not in the default List of config variables, and a config variable in the
comment|// default list of conifg variables, but which has not been overridden
specifier|private
specifier|static
name|String
index|[]
name|keysArray
init|=
block|{
literal|"mapred.job.tracker"
block|,
literal|"hive.exec.post.hooks"
block|,
literal|"hive.config.doesnt.exit"
block|,
literal|"hive.exec.mode.local.auto"
block|}
decl_stmt|;
specifier|private
specifier|static
name|List
argument_list|<
name|String
argument_list|>
name|keysList
init|=
name|Arrays
operator|.
name|asList
argument_list|(
name|keysArray
argument_list|)
decl_stmt|;
specifier|public
name|void
name|run
parameter_list|(
name|HookContext
name|hookContext
parameter_list|)
block|{
name|LogHelper
name|console
init|=
name|SessionState
operator|.
name|getConsole
argument_list|()
decl_stmt|;
name|SessionState
name|ss
init|=
name|SessionState
operator|.
name|get
argument_list|()
decl_stmt|;
if|if
condition|(
name|console
operator|==
literal|null
operator|||
name|ss
operator|==
literal|null
condition|)
block|{
return|return;
block|}
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
range|:
name|ss
operator|.
name|getOverriddenConfigurations
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
if|if
condition|(
name|keysList
operator|.
name|contains
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
condition|)
block|{
name|console
operator|.
name|printError
argument_list|(
literal|"Key: "
operator|+
name|entry
operator|.
name|getKey
argument_list|()
operator|+
literal|", Value: "
operator|+
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

