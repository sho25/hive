begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|scheduled
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
operator|.
name|ConfVars
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|ScheduledQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|ScheduledQueryKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|ScheduledQueryMaintenanceRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|ScheduledQueryMaintenanceRequestType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|QTestUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|hooks
operator|.
name|ScheduledQueryCreationRegistryHook
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Hive
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|qoption
operator|.
name|QTestOptionHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  * This handler does an aftertest cleanup; and deleters scheduled queries.  */
end_comment

begin_class
specifier|public
class|class
name|QTestScheduledQueryCleaner
implements|implements
name|QTestOptionHandler
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|QTestScheduledQueryCleaner
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|processArguments
parameter_list|(
name|String
name|arguments
parameter_list|)
block|{   }
annotation|@
name|Override
specifier|public
name|void
name|beforeTest
parameter_list|(
name|QTestUtil
name|qt
parameter_list|)
throws|throws
name|Exception
block|{    }
annotation|@
name|Override
specifier|public
name|void
name|afterTest
parameter_list|(
name|QTestUtil
name|qt
parameter_list|)
throws|throws
name|Exception
block|{
name|clearScheduledQueries
argument_list|(
name|qt
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|clearScheduledQueries
parameter_list|(
name|QTestUtil
name|qt
parameter_list|)
block|{
if|if
condition|(
name|System
operator|.
name|getenv
argument_list|(
name|QTestUtil
operator|.
name|QTEST_LEAVE_FILES
argument_list|)
operator|!=
literal|null
condition|)
block|{
return|return;
block|}
name|Set
argument_list|<
name|String
argument_list|>
name|scheduledQueries
init|=
name|ScheduledQueryCreationRegistryHook
operator|.
name|getSchedules
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|name
range|:
name|scheduledQueries
control|)
block|{
name|ScheduledQueryMaintenanceRequest
name|request
init|=
operator|new
name|ScheduledQueryMaintenanceRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setType
argument_list|(
name|ScheduledQueryMaintenanceRequestType
operator|.
name|DROP
argument_list|)
expr_stmt|;
name|ScheduledQuery
name|schq
init|=
operator|new
name|ScheduledQuery
argument_list|()
decl_stmt|;
name|schq
operator|.
name|setScheduleKey
argument_list|(
operator|new
name|ScheduledQueryKey
argument_list|(
name|name
argument_list|,
name|qt
operator|.
name|getConf
argument_list|()
operator|.
name|getVar
argument_list|(
name|ConfVars
operator|.
name|HIVE_SCHEDULED_QUERIES_NAMESPACE
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|request
operator|.
name|setScheduledQuery
argument_list|(
name|schq
argument_list|)
expr_stmt|;
try|try
block|{
name|HiveConf
name|conf
init|=
name|qt
operator|.
name|getConf
argument_list|()
decl_stmt|;
name|Hive
name|db
init|=
name|Hive
operator|.
name|get
argument_list|(
name|conf
argument_list|)
decl_stmt|;
comment|// propagate new conf to meta store
name|db
operator|.
name|getMSC
argument_list|()
operator|.
name|scheduledQueryMaintenance
argument_list|(
name|request
argument_list|)
expr_stmt|;
name|db
operator|.
name|close
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Can't remove scheduled query: "
operator|+
name|name
operator|+
literal|" "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|scheduledQueries
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

