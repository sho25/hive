begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|qoption
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|QTestUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * QTest transactional directive handler  *  * Enables transactional for the test.  * Could also make it for other QOption-s.  *  * Example:  * --! qt:transactional  *  */
end_comment

begin_class
specifier|public
class|class
name|QTestTransactional
implements|implements
name|QTestOptionHandler
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|QTestTransactional
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
name|boolean
name|enabled
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|processArguments
parameter_list|(
name|String
name|arguments
parameter_list|)
block|{
name|enabled
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|beforeTest
parameter_list|(
name|QTestUtil
name|qt
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|enabled
condition|)
block|{
name|qt
operator|.
name|getConf
argument_list|()
operator|.
name|set
argument_list|(
literal|"hive.support.concurrency"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|qt
operator|.
name|getConf
argument_list|()
operator|.
name|set
argument_list|(
literal|"hive.txn.manager"
argument_list|,
literal|"org.apache.hadoop.hive.ql.lockmgr.DbTxnManager"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|afterTest
parameter_list|(
name|QTestUtil
name|qt
parameter_list|)
throws|throws
name|Exception
block|{
name|enabled
operator|=
literal|false
expr_stmt|;
block|}
block|}
end_class

end_unit

