begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FilenameFilter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|BuildException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_class
specifier|public
class|class
name|QFileVersionHandler
block|{
specifier|private
specifier|static
specifier|final
name|Pattern
name|QV_SUFFIX
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"_[0-9]+.qv$"
argument_list|,
name|Pattern
operator|.
name|CASE_INSENSITIVE
argument_list|)
decl_stmt|;
specifier|private
name|String
index|[]
name|cachedQvFileList
init|=
literal|null
decl_stmt|;
specifier|private
name|ImmutableList
argument_list|<
name|String
argument_list|>
name|cachedDefaultQvFileList
init|=
literal|null
decl_stmt|;
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getVersionFiles
parameter_list|(
name|String
name|queryDir
parameter_list|,
name|String
name|tname
parameter_list|)
block|{
name|ensureQvFileList
argument_list|(
name|queryDir
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|result
init|=
name|getVersionFilesInternal
argument_list|(
name|tname
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|==
literal|null
condition|)
block|{
name|result
operator|=
name|cachedDefaultQvFileList
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
specifier|private
name|void
name|ensureQvFileList
parameter_list|(
name|String
name|queryDir
parameter_list|)
block|{
if|if
condition|(
name|cachedQvFileList
operator|!=
literal|null
condition|)
block|{
return|return;
block|}
comment|// Not thread-safe.
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Getting versions from "
operator|+
name|queryDir
argument_list|)
expr_stmt|;
name|cachedQvFileList
operator|=
operator|(
operator|new
name|File
argument_list|(
name|queryDir
argument_list|)
operator|)
operator|.
name|list
argument_list|(
operator|new
name|FilenameFilter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|accept
parameter_list|(
name|File
name|dir
parameter_list|,
name|String
name|name
parameter_list|)
block|{
return|return
name|name
operator|.
name|toLowerCase
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|".qv"
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|cachedQvFileList
operator|==
literal|null
condition|)
block|{
return|return;
comment|// no files at all
block|}
name|Arrays
operator|.
name|sort
argument_list|(
name|cachedQvFileList
argument_list|,
name|String
operator|.
name|CASE_INSENSITIVE_ORDER
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|defaults
init|=
name|getVersionFilesInternal
argument_list|(
literal|"default"
argument_list|)
decl_stmt|;
name|cachedDefaultQvFileList
operator|=
operator|(
name|defaults
operator|!=
literal|null
operator|)
condition|?
name|ImmutableList
operator|.
name|copyOf
argument_list|(
name|defaults
argument_list|)
else|:
name|ImmutableList
operator|.
expr|<
name|String
operator|>
name|of
argument_list|()
expr_stmt|;
block|}
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|getVersionFilesInternal
parameter_list|(
name|String
name|tname
parameter_list|)
block|{
if|if
condition|(
name|cachedQvFileList
operator|==
literal|null
condition|)
block|{
return|return
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
return|;
block|}
name|int
name|pos
init|=
name|Arrays
operator|.
name|binarySearch
argument_list|(
name|cachedQvFileList
argument_list|,
name|tname
argument_list|,
name|String
operator|.
name|CASE_INSENSITIVE_ORDER
argument_list|)
decl_stmt|;
if|if
condition|(
name|pos
operator|>=
literal|0
condition|)
block|{
throw|throw
operator|new
name|BuildException
argument_list|(
literal|"Unexpected file list element: "
operator|+
name|cachedQvFileList
index|[
name|pos
index|]
argument_list|)
throw|;
block|}
name|List
argument_list|<
name|String
argument_list|>
name|result
init|=
literal|null
decl_stmt|;
for|for
control|(
name|pos
operator|=
operator|(
operator|-
name|pos
operator|-
literal|1
operator|)
init|;
name|pos
operator|<
name|cachedQvFileList
operator|.
name|length
condition|;
operator|++
name|pos
control|)
block|{
name|String
name|candidate
init|=
name|cachedQvFileList
index|[
name|pos
index|]
decl_stmt|;
if|if
condition|(
name|candidate
operator|.
name|length
argument_list|()
operator|<=
name|tname
operator|.
name|length
argument_list|()
operator|||
operator|!
name|tname
operator|.
name|equalsIgnoreCase
argument_list|(
name|candidate
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|tname
operator|.
name|length
argument_list|()
argument_list|)
argument_list|)
operator|||
operator|!
name|QV_SUFFIX
operator|.
name|matcher
argument_list|(
name|candidate
operator|.
name|substring
argument_list|(
name|tname
operator|.
name|length
argument_list|()
argument_list|)
argument_list|)
operator|.
name|matches
argument_list|()
condition|)
block|{
break|break;
block|}
if|if
condition|(
name|result
operator|==
literal|null
condition|)
block|{
name|result
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|add
argument_list|(
name|candidate
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
block|}
end_class

end_unit

