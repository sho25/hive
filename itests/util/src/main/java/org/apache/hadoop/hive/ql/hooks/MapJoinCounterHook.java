begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|hooks
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|QueryPlan
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|Task
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|exec
operator|.
name|TaskRunner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|session
operator|.
name|SessionState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|session
operator|.
name|SessionState
operator|.
name|LogHelper
import|;
end_import

begin_class
specifier|public
class|class
name|MapJoinCounterHook
implements|implements
name|ExecuteWithHookContext
block|{
specifier|public
name|void
name|run
parameter_list|(
name|HookContext
name|hookContext
parameter_list|)
block|{
name|HiveConf
name|conf
init|=
name|hookContext
operator|.
name|getConf
argument_list|()
decl_stmt|;
name|boolean
name|enableConvert
init|=
name|HiveConf
operator|.
name|getBoolVar
argument_list|(
name|conf
argument_list|,
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVECONVERTJOIN
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|enableConvert
condition|)
block|{
return|return;
block|}
name|QueryPlan
name|plan
init|=
name|hookContext
operator|.
name|getQueryPlan
argument_list|()
decl_stmt|;
name|String
name|queryID
init|=
name|plan
operator|.
name|getQueryId
argument_list|()
decl_stmt|;
comment|// String query = SessionState.get().getCmd();
name|int
name|convertedMapJoin
init|=
literal|0
decl_stmt|;
name|int
name|commonJoin
init|=
literal|0
decl_stmt|;
name|int
name|backupCommonJoin
init|=
literal|0
decl_stmt|;
name|int
name|convertedLocalMapJoin
init|=
literal|0
decl_stmt|;
name|int
name|localMapJoin
init|=
literal|0
decl_stmt|;
name|List
argument_list|<
name|TaskRunner
argument_list|>
name|list
init|=
name|hookContext
operator|.
name|getCompleteTaskList
argument_list|()
decl_stmt|;
for|for
control|(
name|TaskRunner
name|tskRunner
range|:
name|list
control|)
block|{
name|Task
name|tsk
init|=
name|tskRunner
operator|.
name|getTask
argument_list|()
decl_stmt|;
name|int
name|tag
init|=
name|tsk
operator|.
name|getTaskTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
name|Task
operator|.
name|COMMON_JOIN
case|:
name|commonJoin
operator|++
expr_stmt|;
break|break;
case|case
name|Task
operator|.
name|CONVERTED_LOCAL_MAPJOIN
case|:
name|convertedLocalMapJoin
operator|++
expr_stmt|;
break|break;
case|case
name|Task
operator|.
name|CONVERTED_MAPJOIN
case|:
name|convertedMapJoin
operator|++
expr_stmt|;
break|break;
case|case
name|Task
operator|.
name|BACKUP_COMMON_JOIN
case|:
name|backupCommonJoin
operator|++
expr_stmt|;
break|break;
case|case
name|Task
operator|.
name|LOCAL_MAPJOIN
case|:
name|localMapJoin
operator|++
expr_stmt|;
break|break;
block|}
block|}
name|LogHelper
name|console
init|=
name|SessionState
operator|.
name|getConsole
argument_list|()
decl_stmt|;
name|console
operator|.
name|printError
argument_list|(
literal|"[MapJoinCounter PostHook] CONVERTED_LOCAL_MAPJOIN: "
operator|+
name|convertedLocalMapJoin
operator|+
literal|" CONVERTED_MAPJOIN: "
operator|+
name|convertedMapJoin
operator|+
literal|" LOCAL_MAPJOIN: "
operator|+
name|localMapJoin
operator|+
literal|" COMMON_JOIN: "
operator|+
name|commonJoin
operator|+
literal|" BACKUP_COMMON_JOIN: "
operator|+
name|backupCommonJoin
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

