begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|zookeeper
operator|.
name|MiniZooKeeperCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|configuration
operator|.
name|LlapDaemonConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|daemon
operator|.
name|MiniLlapCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|llap
operator|.
name|daemon
operator|.
name|impl
operator|.
name|LlapDaemon
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
specifier|public
class|class
name|LlapItUtils
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|LlapItUtils
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|MiniLlapCluster
name|startAndGetMiniLlapCluster
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|MiniZooKeeperCluster
name|miniZkCluster
parameter_list|,
name|String
name|confDir
parameter_list|)
throws|throws
name|IOException
block|{
name|MiniLlapCluster
name|llapCluster
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Using conf dir: {}"
argument_list|,
name|confDir
argument_list|)
expr_stmt|;
if|if
condition|(
name|confDir
operator|!=
literal|null
operator|&&
operator|!
name|confDir
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|conf
operator|.
name|addResource
argument_list|(
operator|new
name|URL
argument_list|(
literal|"file://"
operator|+
operator|new
name|File
argument_list|(
name|confDir
argument_list|)
operator|.
name|toURI
argument_list|()
operator|.
name|getPath
argument_list|()
operator|+
literal|"/tez-site.xml"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|Configuration
name|daemonConf
init|=
operator|new
name|LlapDaemonConfiguration
argument_list|(
name|conf
argument_list|)
decl_stmt|;
specifier|final
name|String
name|clusterName
init|=
literal|"llap"
decl_stmt|;
specifier|final
name|long
name|maxMemory
init|=
name|LlapDaemon
operator|.
name|getTotalHeapSize
argument_list|()
decl_stmt|;
comment|// 15% for io cache
specifier|final
name|long
name|memoryForCache
init|=
call|(
name|long
call|)
argument_list|(
literal|0.15f
operator|*
name|maxMemory
argument_list|)
decl_stmt|;
comment|// 75% for 4 executors
specifier|final
name|long
name|totalExecutorMemory
init|=
call|(
name|long
call|)
argument_list|(
literal|0.75f
operator|*
name|maxMemory
argument_list|)
decl_stmt|;
specifier|final
name|int
name|numExecutors
init|=
name|HiveConf
operator|.
name|getIntVar
argument_list|(
name|conf
argument_list|,
name|HiveConf
operator|.
name|ConfVars
operator|.
name|LLAP_DAEMON_NUM_EXECUTORS
argument_list|)
decl_stmt|;
specifier|final
name|boolean
name|asyncIOEnabled
init|=
literal|true
decl_stmt|;
comment|// enabling this will cause test failures in Mac OS X
specifier|final
name|boolean
name|directMemoryEnabled
init|=
literal|false
decl_stmt|;
specifier|final
name|int
name|numLocalDirs
init|=
literal|1
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"MiniLlap Configs -  maxMemory: "
operator|+
name|maxMemory
operator|+
literal|" memoryForCache: "
operator|+
name|memoryForCache
operator|+
literal|" totalExecutorMemory: "
operator|+
name|totalExecutorMemory
operator|+
literal|" numExecutors: "
operator|+
name|numExecutors
operator|+
literal|" asyncIOEnabled: "
operator|+
name|asyncIOEnabled
operator|+
literal|" directMemoryEnabled: "
operator|+
name|directMemoryEnabled
operator|+
literal|" numLocalDirs: "
operator|+
name|numLocalDirs
argument_list|)
expr_stmt|;
name|llapCluster
operator|=
name|MiniLlapCluster
operator|.
name|create
argument_list|(
name|clusterName
argument_list|,
name|miniZkCluster
argument_list|,
literal|1
argument_list|,
name|numExecutors
argument_list|,
name|totalExecutorMemory
argument_list|,
name|asyncIOEnabled
argument_list|,
name|directMemoryEnabled
argument_list|,
name|memoryForCache
argument_list|,
name|numLocalDirs
argument_list|)
expr_stmt|;
name|llapCluster
operator|.
name|init
argument_list|(
name|daemonConf
argument_list|)
expr_stmt|;
name|llapCluster
operator|.
name|start
argument_list|()
expr_stmt|;
comment|// Augment conf with the settings from the started llap configuration.
name|Configuration
name|llapConf
init|=
name|llapCluster
operator|.
name|getClusterSpecificConfiguration
argument_list|()
decl_stmt|;
name|Iterator
argument_list|<
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|confIter
init|=
name|llapConf
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|confIter
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
init|=
name|confIter
operator|.
name|next
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|llapCluster
return|;
block|}
block|}
end_class

end_unit

