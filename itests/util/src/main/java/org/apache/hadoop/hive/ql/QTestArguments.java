begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
package|;
end_package

begin_comment
comment|/**  * QTestArguments composite used as arguments holder for QTestUtil initialization.  */
end_comment

begin_class
specifier|public
class|class
name|QTestArguments
block|{
specifier|private
name|String
name|outDir
decl_stmt|;
specifier|private
name|String
name|logDir
decl_stmt|;
specifier|private
name|String
name|confDir
decl_stmt|;
specifier|private
name|QTestUtil
operator|.
name|MiniClusterType
name|clusterType
decl_stmt|;
specifier|private
name|String
name|hadoopVer
decl_stmt|;
specifier|private
name|String
name|initScript
decl_stmt|;
specifier|private
name|String
name|cleanupScript
decl_stmt|;
specifier|private
name|boolean
name|withLlapIo
decl_stmt|;
specifier|private
name|QTestUtil
operator|.
name|FsType
name|fsType
decl_stmt|;
specifier|private
name|QTestUtil
operator|.
name|QTestSetup
name|qtestSetup
decl_stmt|;
specifier|public
name|void
name|setClusterType
parameter_list|(
name|QTestUtil
operator|.
name|MiniClusterType
name|clusterType
parameter_list|)
block|{
name|this
operator|.
name|clusterType
operator|=
name|clusterType
expr_stmt|;
block|}
specifier|public
name|QTestUtil
operator|.
name|MiniClusterType
name|getClusterType
parameter_list|()
block|{
return|return
name|clusterType
return|;
block|}
specifier|public
name|String
name|getOutDir
parameter_list|()
block|{
return|return
name|outDir
return|;
block|}
specifier|public
name|void
name|setOutDir
parameter_list|(
name|String
name|outDir
parameter_list|)
block|{
name|this
operator|.
name|outDir
operator|=
name|outDir
expr_stmt|;
block|}
specifier|public
name|String
name|getLogDir
parameter_list|()
block|{
return|return
name|logDir
return|;
block|}
specifier|public
name|void
name|setLogDir
parameter_list|(
name|String
name|logDir
parameter_list|)
block|{
name|this
operator|.
name|logDir
operator|=
name|logDir
expr_stmt|;
block|}
specifier|public
name|void
name|setConfDir
parameter_list|(
name|String
name|confDir
parameter_list|)
block|{
name|this
operator|.
name|confDir
operator|=
name|confDir
expr_stmt|;
block|}
specifier|public
name|String
name|getConfDir
parameter_list|()
block|{
return|return
name|confDir
return|;
block|}
specifier|public
name|void
name|setHadoopVer
parameter_list|(
name|String
name|hadoopVer
parameter_list|)
block|{
name|this
operator|.
name|hadoopVer
operator|=
name|hadoopVer
expr_stmt|;
block|}
specifier|public
name|String
name|getHadoopVer
parameter_list|()
block|{
return|return
name|hadoopVer
return|;
block|}
specifier|public
name|void
name|setInitScript
parameter_list|(
name|String
name|initScript
parameter_list|)
block|{
name|this
operator|.
name|initScript
operator|=
name|initScript
expr_stmt|;
block|}
specifier|public
name|String
name|getInitScript
parameter_list|()
block|{
return|return
name|initScript
return|;
block|}
specifier|public
name|void
name|setCleanupScript
parameter_list|(
name|String
name|cleanupScript
parameter_list|)
block|{
name|this
operator|.
name|cleanupScript
operator|=
name|cleanupScript
expr_stmt|;
block|}
specifier|public
name|String
name|getCleanupScript
parameter_list|()
block|{
return|return
name|cleanupScript
return|;
block|}
specifier|public
name|void
name|setWithLlapIo
parameter_list|(
name|boolean
name|withLlapIo
parameter_list|)
block|{
name|this
operator|.
name|withLlapIo
operator|=
name|withLlapIo
expr_stmt|;
block|}
specifier|public
name|boolean
name|isWithLlapIo
parameter_list|()
block|{
return|return
name|withLlapIo
return|;
block|}
specifier|public
name|void
name|setFsType
parameter_list|(
name|QTestUtil
operator|.
name|FsType
name|fsType
parameter_list|)
block|{
name|this
operator|.
name|fsType
operator|=
name|fsType
expr_stmt|;
block|}
specifier|public
name|QTestUtil
operator|.
name|FsType
name|getFsType
parameter_list|()
block|{
return|return
name|fsType
return|;
block|}
specifier|public
name|void
name|setQTestSetup
parameter_list|(
name|QTestUtil
operator|.
name|QTestSetup
name|qtestSetup
parameter_list|)
block|{
name|this
operator|.
name|qtestSetup
operator|=
name|qtestSetup
expr_stmt|;
block|}
specifier|public
name|QTestUtil
operator|.
name|QTestSetup
name|getQTestSetup
parameter_list|()
block|{
return|return
name|qtestSetup
return|;
block|}
comment|/**    * QTestArgumentsBuilder used for QTestArguments construction.    */
specifier|public
specifier|static
specifier|final
class|class
name|QTestArgumentsBuilder
block|{
specifier|private
name|String
name|outDir
decl_stmt|;
specifier|private
name|String
name|logDir
decl_stmt|;
specifier|private
name|String
name|confDir
decl_stmt|;
specifier|private
name|QTestUtil
operator|.
name|MiniClusterType
name|clusterType
decl_stmt|;
specifier|private
name|String
name|hadoopVer
decl_stmt|;
specifier|private
name|String
name|initScript
decl_stmt|;
specifier|private
name|String
name|cleanupScript
decl_stmt|;
specifier|private
name|boolean
name|withLlapIo
decl_stmt|;
specifier|private
name|QTestUtil
operator|.
name|FsType
name|fsType
decl_stmt|;
specifier|private
name|QTestUtil
operator|.
name|QTestSetup
name|qtestSetup
decl_stmt|;
specifier|private
name|QTestArgumentsBuilder
parameter_list|()
block|{     }
specifier|public
specifier|static
name|QTestArgumentsBuilder
name|instance
parameter_list|()
block|{
return|return
operator|new
name|QTestArgumentsBuilder
argument_list|()
return|;
block|}
specifier|public
name|QTestArgumentsBuilder
name|withOutDir
parameter_list|(
name|String
name|outDir
parameter_list|)
block|{
name|this
operator|.
name|outDir
operator|=
name|outDir
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|QTestArgumentsBuilder
name|withLogDir
parameter_list|(
name|String
name|logDir
parameter_list|)
block|{
name|this
operator|.
name|logDir
operator|=
name|logDir
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|QTestArgumentsBuilder
name|withConfDir
parameter_list|(
name|String
name|confDir
parameter_list|)
block|{
name|this
operator|.
name|confDir
operator|=
name|confDir
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|QTestArgumentsBuilder
name|withClusterType
parameter_list|(
name|QTestUtil
operator|.
name|MiniClusterType
name|clusterType
parameter_list|)
block|{
name|this
operator|.
name|clusterType
operator|=
name|clusterType
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|QTestArgumentsBuilder
name|withHadoopVer
parameter_list|(
name|String
name|hadoopVer
parameter_list|)
block|{
name|this
operator|.
name|hadoopVer
operator|=
name|hadoopVer
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|QTestArgumentsBuilder
name|withInitScript
parameter_list|(
name|String
name|initScript
parameter_list|)
block|{
name|this
operator|.
name|initScript
operator|=
name|initScript
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|QTestArgumentsBuilder
name|withCleanupScript
parameter_list|(
name|String
name|cleanupScript
parameter_list|)
block|{
name|this
operator|.
name|cleanupScript
operator|=
name|cleanupScript
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|QTestArgumentsBuilder
name|withLlapIo
parameter_list|(
name|boolean
name|withLlapIo
parameter_list|)
block|{
name|this
operator|.
name|withLlapIo
operator|=
name|withLlapIo
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|QTestArgumentsBuilder
name|withFsType
parameter_list|(
name|QTestUtil
operator|.
name|FsType
name|fsType
parameter_list|)
block|{
name|this
operator|.
name|fsType
operator|=
name|fsType
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|QTestArgumentsBuilder
name|withQTestSetup
parameter_list|(
name|QTestUtil
operator|.
name|QTestSetup
name|qtestSetup
parameter_list|)
block|{
name|this
operator|.
name|qtestSetup
operator|=
name|qtestSetup
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|QTestArguments
name|build
parameter_list|()
block|{
name|QTestArguments
name|testArguments
init|=
operator|new
name|QTestArguments
argument_list|()
decl_stmt|;
name|testArguments
operator|.
name|setOutDir
argument_list|(
name|outDir
argument_list|)
expr_stmt|;
name|testArguments
operator|.
name|setLogDir
argument_list|(
name|logDir
argument_list|)
expr_stmt|;
name|testArguments
operator|.
name|setConfDir
argument_list|(
name|confDir
argument_list|)
expr_stmt|;
name|testArguments
operator|.
name|setClusterType
argument_list|(
name|clusterType
argument_list|)
expr_stmt|;
name|testArguments
operator|.
name|setHadoopVer
argument_list|(
name|hadoopVer
argument_list|)
expr_stmt|;
name|testArguments
operator|.
name|setInitScript
argument_list|(
name|initScript
argument_list|)
expr_stmt|;
name|testArguments
operator|.
name|setCleanupScript
argument_list|(
name|cleanupScript
argument_list|)
expr_stmt|;
name|testArguments
operator|.
name|setWithLlapIo
argument_list|(
name|withLlapIo
argument_list|)
expr_stmt|;
name|testArguments
operator|.
name|setFsType
argument_list|(
name|fsType
operator|!=
literal|null
condition|?
name|fsType
else|:
name|clusterType
operator|.
name|getDefaultFsType
argument_list|()
argument_list|)
expr_stmt|;
name|testArguments
operator|.
name|setQTestSetup
argument_list|(
name|qtestSetup
operator|!=
literal|null
condition|?
name|qtestSetup
else|:
operator|new
name|QTestUtil
operator|.
name|QTestSetup
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|testArguments
return|;
block|}
block|}
block|}
end_class

end_unit

