begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|HiveMetaStore
operator|.
name|HMSHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|AuthorizationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|HiveException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Partition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|HiveMetastoreAuthorizationProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|Privilege
import|;
end_import

begin_comment
comment|/**  * Dummy implementation for use by unit tests. Tracks the context of calls made to  * its authorize functions in {@link AuthCallContext}  */
end_comment

begin_class
specifier|public
class|class
name|DummyHiveMetastoreAuthorizationProvider
implements|implements
name|HiveMetastoreAuthorizationProvider
block|{
specifier|protected
name|HiveAuthenticationProvider
name|authenticator
decl_stmt|;
specifier|public
enum|enum
name|AuthCallContextType
block|{
name|USER
block|,
name|DB
block|,
name|TABLE
block|,
name|PARTITION
block|,
name|TABLE_AND_PARTITION
block|,
name|AUTHORIZATION
block|}
empty_stmt|;
class|class
name|AuthCallContext
block|{
specifier|public
name|AuthCallContextType
name|type
decl_stmt|;
specifier|public
name|List
argument_list|<
name|Object
argument_list|>
name|authObjects
decl_stmt|;
specifier|public
name|Privilege
index|[]
name|readRequiredPriv
decl_stmt|;
specifier|public
name|Privilege
index|[]
name|writeRequiredPriv
decl_stmt|;
name|AuthCallContext
parameter_list|(
name|AuthCallContextType
name|typeOfCall
parameter_list|,
name|Privilege
index|[]
name|readRequiredPriv
parameter_list|,
name|Privilege
index|[]
name|writeRequiredPriv
parameter_list|)
block|{
name|this
operator|.
name|type
operator|=
name|typeOfCall
expr_stmt|;
name|this
operator|.
name|authObjects
operator|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
expr_stmt|;
name|this
operator|.
name|readRequiredPriv
operator|=
name|readRequiredPriv
expr_stmt|;
name|this
operator|.
name|writeRequiredPriv
operator|=
name|writeRequiredPriv
expr_stmt|;
block|}
name|AuthCallContext
parameter_list|(
name|AuthCallContextType
name|typeOfCall
parameter_list|,
name|Object
name|authObject
parameter_list|,
name|Privilege
index|[]
name|readRequiredPriv
parameter_list|,
name|Privilege
index|[]
name|writeRequiredPriv
parameter_list|)
block|{
name|this
argument_list|(
name|typeOfCall
argument_list|,
name|readRequiredPriv
argument_list|,
name|writeRequiredPriv
argument_list|)
expr_stmt|;
name|this
operator|.
name|authObjects
operator|.
name|add
argument_list|(
name|authObject
argument_list|)
expr_stmt|;
block|}
name|AuthCallContext
parameter_list|(
name|AuthCallContextType
name|typeOfCall
parameter_list|,
name|List
argument_list|<
name|?
extends|extends
name|Object
argument_list|>
name|authObjects
parameter_list|,
name|Privilege
index|[]
name|readRequiredPriv
parameter_list|,
name|Privilege
index|[]
name|writeRequiredPriv
parameter_list|)
block|{
name|this
argument_list|(
name|typeOfCall
argument_list|,
name|readRequiredPriv
argument_list|,
name|writeRequiredPriv
argument_list|)
expr_stmt|;
name|this
operator|.
name|authObjects
operator|.
name|addAll
argument_list|(
name|authObjects
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|List
argument_list|<
name|AuthCallContext
argument_list|>
name|authCalls
init|=
operator|new
name|ArrayList
argument_list|<
name|AuthCallContext
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Configuration
name|conf
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|DummyHiveMetastoreAuthorizationProvider
operator|.
name|class
argument_list|)
decl_stmt|;
empty_stmt|;
annotation|@
name|Override
specifier|public
name|Configuration
name|getConf
parameter_list|()
block|{
return|return
name|this
operator|.
name|conf
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setConf
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|this
operator|.
name|conf
operator|=
name|conf
expr_stmt|;
try|try
block|{
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|HiveException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|HiveAuthenticationProvider
name|getAuthenticator
parameter_list|()
block|{
return|return
name|authenticator
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setAuthenticator
parameter_list|(
name|HiveAuthenticationProvider
name|authenticator
parameter_list|)
block|{
name|this
operator|.
name|authenticator
operator|=
name|authenticator
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|init
parameter_list|(
name|Configuration
name|conf
parameter_list|)
throws|throws
name|HiveException
block|{
name|debugLog
argument_list|(
literal|"DHMAP.init"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|authorize
parameter_list|(
name|Privilege
index|[]
name|readRequiredPriv
parameter_list|,
name|Privilege
index|[]
name|writeRequiredPriv
parameter_list|)
throws|throws
name|HiveException
throws|,
name|AuthorizationException
block|{
name|debugLog
argument_list|(
literal|"DHMAP.authorize "
operator|+
literal|"read:"
operator|+
name|debugPrivPrint
argument_list|(
name|readRequiredPriv
argument_list|)
operator|+
literal|" , write:"
operator|+
name|debugPrivPrint
argument_list|(
name|writeRequiredPriv
argument_list|)
argument_list|)
expr_stmt|;
name|authCalls
operator|.
name|add
argument_list|(
operator|new
name|AuthCallContext
argument_list|(
name|AuthCallContextType
operator|.
name|USER
argument_list|,
name|readRequiredPriv
argument_list|,
name|writeRequiredPriv
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|authorize
parameter_list|(
name|Database
name|db
parameter_list|,
name|Privilege
index|[]
name|readRequiredPriv
parameter_list|,
name|Privilege
index|[]
name|writeRequiredPriv
parameter_list|)
throws|throws
name|HiveException
throws|,
name|AuthorizationException
block|{
name|debugLog
argument_list|(
literal|"DHMAP.authorizedb "
operator|+
literal|"db:"
operator|+
name|db
operator|.
name|getName
argument_list|()
operator|+
literal|" , read:"
operator|+
name|debugPrivPrint
argument_list|(
name|readRequiredPriv
argument_list|)
operator|+
literal|" , write:"
operator|+
name|debugPrivPrint
argument_list|(
name|writeRequiredPriv
argument_list|)
argument_list|)
expr_stmt|;
name|authCalls
operator|.
name|add
argument_list|(
operator|new
name|AuthCallContext
argument_list|(
name|AuthCallContextType
operator|.
name|DB
argument_list|,
name|db
argument_list|,
name|readRequiredPriv
argument_list|,
name|writeRequiredPriv
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|authorize
parameter_list|(
name|Table
name|table
parameter_list|,
name|Privilege
index|[]
name|readRequiredPriv
parameter_list|,
name|Privilege
index|[]
name|writeRequiredPriv
parameter_list|)
throws|throws
name|HiveException
throws|,
name|AuthorizationException
block|{
name|debugLog
argument_list|(
literal|"DHMAP.authorizetbl "
operator|+
literal|"tbl:"
operator|+
name|table
operator|.
name|getCompleteName
argument_list|()
operator|+
literal|" , read:"
operator|+
name|debugPrivPrint
argument_list|(
name|readRequiredPriv
argument_list|)
operator|+
literal|" , write:"
operator|+
name|debugPrivPrint
argument_list|(
name|writeRequiredPriv
argument_list|)
argument_list|)
expr_stmt|;
name|authCalls
operator|.
name|add
argument_list|(
operator|new
name|AuthCallContext
argument_list|(
name|AuthCallContextType
operator|.
name|TABLE
argument_list|,
name|table
argument_list|,
name|readRequiredPriv
argument_list|,
name|writeRequiredPriv
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|authorize
parameter_list|(
name|Partition
name|part
parameter_list|,
name|Privilege
index|[]
name|readRequiredPriv
parameter_list|,
name|Privilege
index|[]
name|writeRequiredPriv
parameter_list|)
throws|throws
name|HiveException
throws|,
name|AuthorizationException
block|{
name|debugLog
argument_list|(
literal|"DHMAP.authorizepart "
operator|+
literal|"tbl:"
operator|+
name|part
operator|.
name|getTable
argument_list|()
operator|.
name|getCompleteName
argument_list|()
operator|+
literal|" , part: "
operator|+
name|part
operator|.
name|getName
argument_list|()
operator|+
literal|" , read:"
operator|+
name|debugPrivPrint
argument_list|(
name|readRequiredPriv
argument_list|)
operator|+
literal|" , write:"
operator|+
name|debugPrivPrint
argument_list|(
name|writeRequiredPriv
argument_list|)
argument_list|)
expr_stmt|;
name|authCalls
operator|.
name|add
argument_list|(
operator|new
name|AuthCallContext
argument_list|(
name|AuthCallContextType
operator|.
name|PARTITION
argument_list|,
name|part
argument_list|,
name|readRequiredPriv
argument_list|,
name|writeRequiredPriv
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|authorize
parameter_list|(
name|Table
name|table
parameter_list|,
name|Partition
name|part
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|columns
parameter_list|,
name|Privilege
index|[]
name|readRequiredPriv
parameter_list|,
name|Privilege
index|[]
name|writeRequiredPriv
parameter_list|)
throws|throws
name|HiveException
throws|,
name|AuthorizationException
block|{
name|debugLog
argument_list|(
literal|"DHMAP.authorizecols "
operator|+
literal|"tbl:"
operator|+
name|table
operator|.
name|getCompleteName
argument_list|()
operator|+
literal|" , part: "
operator|+
name|part
operator|.
name|getName
argument_list|()
operator|+
literal|" . cols: "
operator|+
name|columns
operator|.
name|toString
argument_list|()
operator|+
literal|" , read:"
operator|+
name|debugPrivPrint
argument_list|(
name|readRequiredPriv
argument_list|)
operator|+
literal|" , write:"
operator|+
name|debugPrivPrint
argument_list|(
name|writeRequiredPriv
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|authObjects
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|authObjects
operator|.
name|add
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|authObjects
operator|.
name|add
argument_list|(
name|part
argument_list|)
expr_stmt|;
name|authCalls
operator|.
name|add
argument_list|(
operator|new
name|AuthCallContext
argument_list|(
name|AuthCallContextType
operator|.
name|TABLE_AND_PARTITION
argument_list|,
name|authObjects
argument_list|,
name|readRequiredPriv
argument_list|,
name|writeRequiredPriv
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|debugLog
parameter_list|(
name|String
name|s
parameter_list|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
name|debugPrivPrint
parameter_list|(
name|Privilege
index|[]
name|privileges
parameter_list|)
block|{
name|StringBuffer
name|sb
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"Privileges{"
argument_list|)
expr_stmt|;
if|if
condition|(
name|privileges
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Privilege
name|p
range|:
name|privileges
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|p
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|sb
operator|.
name|append
argument_list|(
literal|"null"
argument_list|)
expr_stmt|;
block|}
name|sb
operator|.
name|append
argument_list|(
literal|"}"
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setMetaStoreHandler
parameter_list|(
name|HMSHandler
name|handler
parameter_list|)
block|{
name|debugLog
argument_list|(
literal|"DHMAP.setMetaStoreHandler"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|authorizeAuthorizationApiInvocation
parameter_list|()
throws|throws
name|HiveException
throws|,
name|AuthorizationException
block|{
name|debugLog
argument_list|(
literal|"DHMAP.authorizeauthapi"
argument_list|)
expr_stmt|;
name|authCalls
operator|.
name|add
argument_list|(
operator|new
name|AuthCallContext
argument_list|(
name|AuthCallContextType
operator|.
name|AUTHORIZATION
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

