begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|dataset
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_comment
comment|/**  * DatasetCollection: utility wrapper class for a set of datasets  */
end_comment

begin_class
specifier|public
class|class
name|DatasetCollection
block|{
specifier|private
name|Set
argument_list|<
name|Dataset
argument_list|>
name|coll
init|=
operator|new
name|HashSet
argument_list|<
name|Dataset
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|DatasetCollection
parameter_list|()
block|{   }
specifier|public
name|DatasetCollection
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|datasets
parameter_list|)
block|{
for|for
control|(
name|String
name|datasetName
range|:
name|datasets
control|)
block|{
name|add
argument_list|(
name|datasetName
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|add
parameter_list|(
name|Dataset
name|dataset
parameter_list|)
block|{
name|coll
operator|.
name|add
argument_list|(
name|dataset
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|add
parameter_list|(
name|String
name|table
parameter_list|)
block|{
name|add
argument_list|(
operator|new
name|Dataset
argument_list|(
name|table
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|Dataset
argument_list|>
name|getDatasets
parameter_list|()
block|{
return|return
name|coll
return|;
block|}
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getTables
parameter_list|()
block|{
return|return
name|coll
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|d
lambda|->
name|d
operator|.
name|getTable
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toSet
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

