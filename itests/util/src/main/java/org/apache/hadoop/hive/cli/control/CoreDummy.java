begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|cli
operator|.
name|control
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|QFileVersionHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|QTestUtil
import|;
end_import

begin_class
specifier|public
class|class
name|CoreDummy
extends|extends
name|CliAdapter
block|{
name|QFileVersionHandler
name|qvh
init|=
operator|new
name|QFileVersionHandler
argument_list|()
decl_stmt|;
specifier|public
name|CoreDummy
parameter_list|(
name|AbstractCliConfig
name|cliConfig
parameter_list|)
block|{
name|super
argument_list|(
name|cliConfig
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|beforeClass
parameter_list|()
block|{   }
annotation|@
name|Override
specifier|public
name|void
name|setUp
parameter_list|()
block|{   }
annotation|@
name|Override
specifier|public
name|void
name|tearDown
parameter_list|()
block|{   }
annotation|@
name|Override
specifier|public
name|void
name|shutdown
parameter_list|()
block|{   }
annotation|@
name|Override
specifier|protected
name|QTestUtil
name|getQt
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|runTest
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|name2
parameter_list|,
name|String
name|absolutePath
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|versionFiles
init|=
name|qvh
operator|.
name|getVersionFiles
argument_list|(
name|cliConfig
operator|.
name|getQueryDirectory
argument_list|()
argument_list|,
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|versionFiles
operator|.
name|size
argument_list|()
operator|<
literal|2
condition|)
block|{
name|fail
argument_list|(
literal|"Cannot run "
operator|+
name|name2
operator|+
literal|" with only "
operator|+
name|versionFiles
operator|.
name|size
argument_list|()
operator|+
literal|" versions"
argument_list|)
expr_stmt|;
block|}
name|fail
argument_list|(
literal|"x"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

