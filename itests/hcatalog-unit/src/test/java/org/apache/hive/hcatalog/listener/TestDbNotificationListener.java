begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|listener
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|cli
operator|.
name|CliSessionState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|HiveMetaStoreClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|IMetaStoreClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|FieldSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|FireEventRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|FireEventRequestData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Function
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|FunctionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Index
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|InsertEventRequestData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|NotificationEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|NotificationEventResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Order
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Partition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|PrincipalType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|ResourceType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|ResourceUri
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|SerDeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|StorageDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|messaging
operator|.
name|AlterPartitionMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|messaging
operator|.
name|AlterTableMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|messaging
operator|.
name|EventMessage
operator|.
name|EventType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|messaging
operator|.
name|json
operator|.
name|JSONMessageFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|Driver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|session
operator|.
name|SessionState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|node
operator|.
name|ArrayNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|node
operator|.
name|ObjectNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Tests DbNotificationListener when used as a transactional event listener  * (hive.metastore.transactional.event.listeners)  */
end_comment

begin_class
specifier|public
class|class
name|TestDbNotificationListener
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TestDbNotificationListener
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|int
name|EVENTS_TTL
init|=
literal|30
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|int
name|CLEANUP_SLEEP_TIME
init|=
literal|10
decl_stmt|;
specifier|private
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|emptyParameters
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|static
name|IMetaStoreClient
name|msClient
decl_stmt|;
specifier|private
specifier|static
name|Driver
name|driver
decl_stmt|;
specifier|private
name|int
name|startTime
decl_stmt|;
specifier|private
name|long
name|firstEventId
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|connectToMetastore
parameter_list|()
throws|throws
name|Exception
block|{
name|HiveConf
name|conf
init|=
operator|new
name|HiveConf
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTORE_TRANSACTIONAL_EVENT_LISTENERS
argument_list|,
name|DbNotificationListener
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTORE_EVENT_DB_LISTENER_TTL
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|EVENTS_TTL
argument_list|)
operator|+
literal|"s"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SUPPORT_CONCURRENCY
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|FIRE_EVENTS_FOR_DML
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|DYNAMICPARTITIONINGMODE
argument_list|,
literal|"nonstrict"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTORE_RAW_STORE_IMPL
argument_list|,
name|DummyRawStoreFailEvent
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Class
name|dbNotificationListener
init|=
name|Class
operator|.
name|forName
argument_list|(
literal|"org.apache.hive.hcatalog.listener.DbNotificationListener"
argument_list|)
decl_stmt|;
name|Class
index|[]
name|classes
init|=
name|dbNotificationListener
operator|.
name|getDeclaredClasses
argument_list|()
decl_stmt|;
for|for
control|(
name|Class
name|c
range|:
name|classes
control|)
block|{
if|if
condition|(
name|c
operator|.
name|getName
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|"CleanerThread"
argument_list|)
condition|)
block|{
name|Field
name|sleepTimeField
init|=
name|c
operator|.
name|getDeclaredField
argument_list|(
literal|"sleepTime"
argument_list|)
decl_stmt|;
name|sleepTimeField
operator|.
name|setAccessible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|sleepTimeField
operator|.
name|set
argument_list|(
literal|null
argument_list|,
name|CLEANUP_SLEEP_TIME
operator|*
literal|1000
argument_list|)
expr_stmt|;
block|}
block|}
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_AUTHORIZATION_MANAGER
argument_list|,
literal|"org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.SQLStdHiveAuthorizerFactory"
argument_list|)
expr_stmt|;
name|SessionState
operator|.
name|start
argument_list|(
operator|new
name|CliSessionState
argument_list|(
name|conf
argument_list|)
argument_list|)
expr_stmt|;
name|msClient
operator|=
operator|new
name|HiveMetaStoreClient
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|driver
operator|=
operator|new
name|Driver
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|long
name|now
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|/
literal|1000
decl_stmt|;
name|startTime
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|now
operator|>
name|Integer
operator|.
name|MAX_VALUE
condition|)
block|{
name|fail
argument_list|(
literal|"Bummer, time has fallen over the edge"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|startTime
operator|=
operator|(
name|int
operator|)
name|now
expr_stmt|;
block|}
name|firstEventId
operator|=
name|msClient
operator|.
name|getCurrentNotificationEventId
argument_list|()
operator|.
name|getEventId
argument_list|()
expr_stmt|;
name|DummyRawStoreFailEvent
operator|.
name|setEventSucceed
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|createDatabase
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|dbName
init|=
literal|"createdb"
decl_stmt|;
name|String
name|dbName2
init|=
literal|"createdb2"
decl_stmt|;
name|String
name|dbLocationUri
init|=
literal|"file:/tmp"
decl_stmt|;
name|String
name|dbDescription
init|=
literal|"no description"
decl_stmt|;
name|Database
name|db
init|=
operator|new
name|Database
argument_list|(
name|dbName
argument_list|,
name|dbDescription
argument_list|,
name|dbLocationUri
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|msClient
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
comment|// Read notification from metastore
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
comment|// Read event from notification
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|1
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getEventTime
argument_list|()
operator|>=
name|startTime
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|CREATE_DATABASE
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dbName
argument_list|,
name|event
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|event
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
comment|// Parse the message field
name|ObjectNode
name|jsonTree
init|=
name|JSONMessageFactory
operator|.
name|getJsonTree
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|CREATE_DATABASE
operator|.
name|toString
argument_list|()
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"eventType"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dbName
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"db"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
comment|// When hive.metastore.transactional.event.listeners is set,
comment|// a failed event should not create a new notification
name|DummyRawStoreFailEvent
operator|.
name|setEventSucceed
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|db
operator|=
operator|new
name|Database
argument_list|(
name|dbName2
argument_list|,
name|dbDescription
argument_list|,
name|dbLocationUri
argument_list|,
name|emptyParameters
argument_list|)
expr_stmt|;
try|try
block|{
name|msClient
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Error: create database should've failed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// expected
block|}
name|rsp
operator|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|dropDatabase
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|dbName
init|=
literal|"dropdb"
decl_stmt|;
name|String
name|dbName2
init|=
literal|"dropdb2"
decl_stmt|;
name|String
name|dbLocationUri
init|=
literal|"file:/tmp"
decl_stmt|;
name|String
name|dbDescription
init|=
literal|"no description"
decl_stmt|;
name|Database
name|db
init|=
operator|new
name|Database
argument_list|(
name|dbName
argument_list|,
name|dbDescription
argument_list|,
name|dbLocationUri
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|msClient
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|msClient
operator|.
name|dropDatabase
argument_list|(
name|dbName
argument_list|)
expr_stmt|;
comment|// Read notification from metastore
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
comment|// Two events: one for create db and other for drop db
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
comment|// Read event from notification
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|2
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getEventTime
argument_list|()
operator|>=
name|startTime
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|DROP_DATABASE
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dbName
argument_list|,
name|event
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|event
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
comment|// Parse the message field
name|ObjectNode
name|jsonTree
init|=
name|JSONMessageFactory
operator|.
name|getJsonTree
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|DROP_DATABASE
operator|.
name|toString
argument_list|()
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"eventType"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dbName
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"db"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
comment|// When hive.metastore.transactional.event.listeners is set,
comment|// a failed event should not create a new notification
name|db
operator|=
operator|new
name|Database
argument_list|(
name|dbName2
argument_list|,
name|dbDescription
argument_list|,
name|dbLocationUri
argument_list|,
name|emptyParameters
argument_list|)
expr_stmt|;
name|msClient
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|DummyRawStoreFailEvent
operator|.
name|setEventSucceed
argument_list|(
literal|false
argument_list|)
expr_stmt|;
try|try
block|{
name|msClient
operator|.
name|dropDatabase
argument_list|(
name|dbName2
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Error: drop database should've failed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// expected
block|}
name|rsp
operator|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|createTable
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|defaultDbName
init|=
literal|"default"
decl_stmt|;
name|String
name|tblName
init|=
literal|"createtable"
decl_stmt|;
name|String
name|tblName2
init|=
literal|"createtable2"
decl_stmt|;
name|String
name|tblOwner
init|=
literal|"me"
decl_stmt|;
name|String
name|serdeLocation
init|=
literal|"file:/tmp"
decl_stmt|;
name|FieldSchema
name|col1
init|=
operator|new
name|FieldSchema
argument_list|(
literal|"col1"
argument_list|,
literal|"int"
argument_list|,
literal|"no comment"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
name|col1
argument_list|)
expr_stmt|;
name|SerDeInfo
name|serde
init|=
operator|new
name|SerDeInfo
argument_list|(
literal|"serde"
argument_list|,
literal|"seriallib"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|StorageDescriptor
name|sd
init|=
operator|new
name|StorageDescriptor
argument_list|(
name|cols
argument_list|,
name|serdeLocation
argument_list|,
literal|"input"
argument_list|,
literal|"output"
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|,
name|serde
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
operator|new
name|Table
argument_list|(
name|tblName
argument_list|,
name|defaultDbName
argument_list|,
name|tblOwner
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|msClient
operator|.
name|createTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
comment|// Get notifications from metastore
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|1
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getEventTime
argument_list|()
operator|>=
name|startTime
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|CREATE_TABLE
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|defaultDbName
argument_list|,
name|event
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|tblName
argument_list|,
name|event
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
comment|// Parse the message field
name|ObjectNode
name|jsonTree
init|=
name|JSONMessageFactory
operator|.
name|getJsonTree
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|CREATE_TABLE
operator|.
name|toString
argument_list|()
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"eventType"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|defaultDbName
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"db"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|tblName
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"table"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|Table
name|tableObj
init|=
name|JSONMessageFactory
operator|.
name|getTableObj
argument_list|(
name|jsonTree
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|table
argument_list|,
name|tableObj
argument_list|)
expr_stmt|;
comment|// When hive.metastore.transactional.event.listeners is set,
comment|// a failed event should not create a new notification
name|table
operator|=
operator|new
name|Table
argument_list|(
name|tblName2
argument_list|,
name|defaultDbName
argument_list|,
name|tblOwner
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|DummyRawStoreFailEvent
operator|.
name|setEventSucceed
argument_list|(
literal|false
argument_list|)
expr_stmt|;
try|try
block|{
name|msClient
operator|.
name|createTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Error: create table should've failed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// expected
block|}
name|rsp
operator|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|alterTable
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|defaultDbName
init|=
literal|"default"
decl_stmt|;
name|String
name|tblName
init|=
literal|"altertabletbl"
decl_stmt|;
name|String
name|tblOwner
init|=
literal|"me"
decl_stmt|;
name|String
name|serdeLocation
init|=
literal|"file:/tmp"
decl_stmt|;
name|FieldSchema
name|col1
init|=
operator|new
name|FieldSchema
argument_list|(
literal|"col1"
argument_list|,
literal|"int"
argument_list|,
literal|"no comment"
argument_list|)
decl_stmt|;
name|FieldSchema
name|col2
init|=
operator|new
name|FieldSchema
argument_list|(
literal|"col2"
argument_list|,
literal|"int"
argument_list|,
literal|"no comment"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
name|col1
argument_list|)
expr_stmt|;
name|SerDeInfo
name|serde
init|=
operator|new
name|SerDeInfo
argument_list|(
literal|"serde"
argument_list|,
literal|"seriallib"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|StorageDescriptor
name|sd
init|=
operator|new
name|StorageDescriptor
argument_list|(
name|cols
argument_list|,
name|serdeLocation
argument_list|,
literal|"input"
argument_list|,
literal|"output"
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|,
name|serde
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
operator|new
name|Table
argument_list|(
name|tblName
argument_list|,
name|defaultDbName
argument_list|,
name|tblOwner
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
argument_list|,
name|emptyParameters
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
comment|// Event 1
name|msClient
operator|.
name|createTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|cols
operator|.
name|add
argument_list|(
name|col2
argument_list|)
expr_stmt|;
name|table
operator|=
operator|new
name|Table
argument_list|(
name|tblName
argument_list|,
name|defaultDbName
argument_list|,
name|tblOwner
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
argument_list|,
name|emptyParameters
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// Event 2
name|msClient
operator|.
name|alter_table
argument_list|(
name|defaultDbName
argument_list|,
name|tblName
argument_list|,
name|table
argument_list|)
expr_stmt|;
comment|// Get notifications from metastore
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|2
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getEventTime
argument_list|()
operator|>=
name|startTime
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|ALTER_TABLE
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|defaultDbName
argument_list|,
name|event
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|tblName
argument_list|,
name|event
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|AlterTableMessage
name|alterTableMessage
init|=
name|JSONMessageFactory
operator|.
name|getInstance
argument_list|()
operator|.
name|getDeserializer
argument_list|()
operator|.
name|getAlterTableMessage
argument_list|(
name|event
operator|.
name|getMessage
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|table
argument_list|,
name|alterTableMessage
operator|.
name|getTableObjAfter
argument_list|()
argument_list|)
expr_stmt|;
comment|// When hive.metastore.transactional.event.listeners is set,
comment|// a failed event should not create a new notification
name|DummyRawStoreFailEvent
operator|.
name|setEventSucceed
argument_list|(
literal|false
argument_list|)
expr_stmt|;
try|try
block|{
name|msClient
operator|.
name|alter_table
argument_list|(
name|defaultDbName
argument_list|,
name|tblName
argument_list|,
name|table
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Error: alter table should've failed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// expected
block|}
name|rsp
operator|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|dropTable
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|defaultDbName
init|=
literal|"default"
decl_stmt|;
name|String
name|tblName
init|=
literal|"droptbl"
decl_stmt|;
name|String
name|tblName2
init|=
literal|"droptbl2"
decl_stmt|;
name|String
name|tblOwner
init|=
literal|"me"
decl_stmt|;
name|String
name|serdeLocation
init|=
literal|"file:/tmp"
decl_stmt|;
name|FieldSchema
name|col1
init|=
operator|new
name|FieldSchema
argument_list|(
literal|"col1"
argument_list|,
literal|"int"
argument_list|,
literal|"no comment"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
name|col1
argument_list|)
expr_stmt|;
name|SerDeInfo
name|serde
init|=
operator|new
name|SerDeInfo
argument_list|(
literal|"serde"
argument_list|,
literal|"seriallib"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|StorageDescriptor
name|sd
init|=
operator|new
name|StorageDescriptor
argument_list|(
name|cols
argument_list|,
name|serdeLocation
argument_list|,
literal|"input"
argument_list|,
literal|"output"
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|,
name|serde
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
operator|new
name|Table
argument_list|(
name|tblName
argument_list|,
name|defaultDbName
argument_list|,
name|tblOwner
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
comment|// Event 1
name|msClient
operator|.
name|createTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
comment|// Event 2
name|msClient
operator|.
name|dropTable
argument_list|(
name|defaultDbName
argument_list|,
name|tblName
argument_list|)
expr_stmt|;
comment|// Get notifications from metastore
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|2
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getEventTime
argument_list|()
operator|>=
name|startTime
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|DROP_TABLE
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|defaultDbName
argument_list|,
name|event
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|tblName
argument_list|,
name|event
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
comment|// Parse the message field
name|ObjectNode
name|jsonTree
init|=
name|JSONMessageFactory
operator|.
name|getJsonTree
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|DROP_TABLE
operator|.
name|toString
argument_list|()
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"eventType"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|defaultDbName
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"db"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|tblName
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"table"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
comment|// When hive.metastore.transactional.event.listeners is set,
comment|// a failed event should not create a new notification
name|table
operator|=
operator|new
name|Table
argument_list|(
name|tblName2
argument_list|,
name|defaultDbName
argument_list|,
name|tblOwner
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|msClient
operator|.
name|createTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|DummyRawStoreFailEvent
operator|.
name|setEventSucceed
argument_list|(
literal|false
argument_list|)
expr_stmt|;
try|try
block|{
name|msClient
operator|.
name|dropTable
argument_list|(
name|defaultDbName
argument_list|,
name|tblName2
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Error: drop table should've failed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// expected
block|}
name|rsp
operator|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|addPartition
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|defaultDbName
init|=
literal|"default"
decl_stmt|;
name|String
name|tblName
init|=
literal|"addptn"
decl_stmt|;
name|String
name|tblName2
init|=
literal|"addptn2"
decl_stmt|;
name|String
name|tblOwner
init|=
literal|"me"
decl_stmt|;
name|String
name|serdeLocation
init|=
literal|"file:/tmp"
decl_stmt|;
name|FieldSchema
name|col1
init|=
operator|new
name|FieldSchema
argument_list|(
literal|"col1"
argument_list|,
literal|"int"
argument_list|,
literal|"no comment"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
name|col1
argument_list|)
expr_stmt|;
name|SerDeInfo
name|serde
init|=
operator|new
name|SerDeInfo
argument_list|(
literal|"serde"
argument_list|,
literal|"seriallib"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|StorageDescriptor
name|sd
init|=
operator|new
name|StorageDescriptor
argument_list|(
name|cols
argument_list|,
name|serdeLocation
argument_list|,
literal|"input"
argument_list|,
literal|"output"
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|,
name|serde
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|FieldSchema
name|partCol1
init|=
operator|new
name|FieldSchema
argument_list|(
literal|"ds"
argument_list|,
literal|"string"
argument_list|,
literal|"no comment"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|partCols
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|partCol1Vals
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"today"
argument_list|)
decl_stmt|;
name|partCols
operator|.
name|add
argument_list|(
name|partCol1
argument_list|)
expr_stmt|;
name|Table
name|table
init|=
operator|new
name|Table
argument_list|(
name|tblName
argument_list|,
name|defaultDbName
argument_list|,
name|tblOwner
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
name|partCols
argument_list|,
name|emptyParameters
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
comment|// Event 1
name|msClient
operator|.
name|createTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|Partition
name|partition
init|=
operator|new
name|Partition
argument_list|(
name|partCol1Vals
argument_list|,
name|defaultDbName
argument_list|,
name|tblName
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
name|sd
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
comment|// Event 2
name|msClient
operator|.
name|add_partition
argument_list|(
name|partition
argument_list|)
expr_stmt|;
comment|// Get notifications from metastore
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|2
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getEventTime
argument_list|()
operator|>=
name|startTime
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|ADD_PARTITION
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|defaultDbName
argument_list|,
name|event
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|tblName
argument_list|,
name|event
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
comment|// Parse the message field
name|ObjectNode
name|jsonTree
init|=
name|JSONMessageFactory
operator|.
name|getJsonTree
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|ADD_PARTITION
operator|.
name|toString
argument_list|()
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"eventType"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|defaultDbName
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"db"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|tblName
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"table"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitionObjList
init|=
name|JSONMessageFactory
operator|.
name|getPartitionObjList
argument_list|(
name|jsonTree
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|partition
argument_list|,
name|partitionObjList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// When hive.metastore.transactional.event.listeners is set,
comment|// a failed event should not create a new notification
name|partition
operator|=
operator|new
name|Partition
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"tomorrow"
argument_list|)
argument_list|,
name|defaultDbName
argument_list|,
name|tblName2
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
name|sd
argument_list|,
name|emptyParameters
argument_list|)
expr_stmt|;
name|DummyRawStoreFailEvent
operator|.
name|setEventSucceed
argument_list|(
literal|false
argument_list|)
expr_stmt|;
try|try
block|{
name|msClient
operator|.
name|add_partition
argument_list|(
name|partition
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Error: add partition should've failed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// expected
block|}
name|rsp
operator|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|alterPartition
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|defaultDbName
init|=
literal|"default"
decl_stmt|;
name|String
name|tblName
init|=
literal|"alterptn"
decl_stmt|;
name|String
name|tblOwner
init|=
literal|"me"
decl_stmt|;
name|String
name|serdeLocation
init|=
literal|"file:/tmp"
decl_stmt|;
name|FieldSchema
name|col1
init|=
operator|new
name|FieldSchema
argument_list|(
literal|"col1"
argument_list|,
literal|"int"
argument_list|,
literal|"no comment"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
name|col1
argument_list|)
expr_stmt|;
name|SerDeInfo
name|serde
init|=
operator|new
name|SerDeInfo
argument_list|(
literal|"serde"
argument_list|,
literal|"seriallib"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|StorageDescriptor
name|sd
init|=
operator|new
name|StorageDescriptor
argument_list|(
name|cols
argument_list|,
name|serdeLocation
argument_list|,
literal|"input"
argument_list|,
literal|"output"
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|,
name|serde
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|FieldSchema
name|partCol1
init|=
operator|new
name|FieldSchema
argument_list|(
literal|"ds"
argument_list|,
literal|"string"
argument_list|,
literal|"no comment"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|partCols
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|partCol1Vals
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"today"
argument_list|)
decl_stmt|;
name|partCols
operator|.
name|add
argument_list|(
name|partCol1
argument_list|)
expr_stmt|;
name|Table
name|table
init|=
operator|new
name|Table
argument_list|(
name|tblName
argument_list|,
name|defaultDbName
argument_list|,
name|tblOwner
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
name|partCols
argument_list|,
name|emptyParameters
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
comment|// Event 1
name|msClient
operator|.
name|createTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|Partition
name|partition
init|=
operator|new
name|Partition
argument_list|(
name|partCol1Vals
argument_list|,
name|defaultDbName
argument_list|,
name|tblName
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
name|sd
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
comment|// Event 2
name|msClient
operator|.
name|add_partition
argument_list|(
name|partition
argument_list|)
expr_stmt|;
name|Partition
name|newPart
init|=
operator|new
name|Partition
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"today"
argument_list|)
argument_list|,
name|defaultDbName
argument_list|,
name|tblName
argument_list|,
name|startTime
argument_list|,
name|startTime
operator|+
literal|1
argument_list|,
name|sd
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
comment|// Event 3
name|msClient
operator|.
name|alter_partition
argument_list|(
name|defaultDbName
argument_list|,
name|tblName
argument_list|,
name|newPart
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|// Get notifications from metastore
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|3
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getEventTime
argument_list|()
operator|>=
name|startTime
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|ALTER_PARTITION
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|defaultDbName
argument_list|,
name|event
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|tblName
argument_list|,
name|event
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
comment|// Parse the message field
name|ObjectNode
name|jsonTree
init|=
name|JSONMessageFactory
operator|.
name|getJsonTree
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|ALTER_PARTITION
operator|.
name|toString
argument_list|()
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"eventType"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|defaultDbName
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"db"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|tblName
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"table"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|AlterPartitionMessage
name|alterPartitionMessage
init|=
name|JSONMessageFactory
operator|.
name|getInstance
argument_list|()
operator|.
name|getDeserializer
argument_list|()
operator|.
name|getAlterPartitionMessage
argument_list|(
name|event
operator|.
name|getMessage
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|newPart
argument_list|,
name|alterPartitionMessage
operator|.
name|getPtnObjAfter
argument_list|()
argument_list|)
expr_stmt|;
comment|// When hive.metastore.transactional.event.listeners is set,
comment|// a failed event should not create a new notification
name|DummyRawStoreFailEvent
operator|.
name|setEventSucceed
argument_list|(
literal|false
argument_list|)
expr_stmt|;
try|try
block|{
name|msClient
operator|.
name|alter_partition
argument_list|(
name|defaultDbName
argument_list|,
name|tblName
argument_list|,
name|newPart
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Error: alter partition should've failed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// expected
block|}
name|rsp
operator|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|dropPartition
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|defaultDbName
init|=
literal|"default"
decl_stmt|;
name|String
name|tblName
init|=
literal|"dropptn"
decl_stmt|;
name|String
name|tblOwner
init|=
literal|"me"
decl_stmt|;
name|String
name|serdeLocation
init|=
literal|"file:/tmp"
decl_stmt|;
name|FieldSchema
name|col1
init|=
operator|new
name|FieldSchema
argument_list|(
literal|"col1"
argument_list|,
literal|"int"
argument_list|,
literal|"no comment"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
name|col1
argument_list|)
expr_stmt|;
name|SerDeInfo
name|serde
init|=
operator|new
name|SerDeInfo
argument_list|(
literal|"serde"
argument_list|,
literal|"seriallib"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|StorageDescriptor
name|sd
init|=
operator|new
name|StorageDescriptor
argument_list|(
name|cols
argument_list|,
name|serdeLocation
argument_list|,
literal|"input"
argument_list|,
literal|"output"
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|,
name|serde
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|FieldSchema
name|partCol1
init|=
operator|new
name|FieldSchema
argument_list|(
literal|"ds"
argument_list|,
literal|"string"
argument_list|,
literal|"no comment"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|partCols
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|partCol1Vals
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"today"
argument_list|)
decl_stmt|;
name|partCols
operator|.
name|add
argument_list|(
name|partCol1
argument_list|)
expr_stmt|;
name|Table
name|table
init|=
operator|new
name|Table
argument_list|(
name|tblName
argument_list|,
name|defaultDbName
argument_list|,
name|tblOwner
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
name|partCols
argument_list|,
name|emptyParameters
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
comment|// Event 1
name|msClient
operator|.
name|createTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|Partition
name|partition
init|=
operator|new
name|Partition
argument_list|(
name|partCol1Vals
argument_list|,
name|defaultDbName
argument_list|,
name|tblName
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
name|sd
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
comment|// Event 2
name|msClient
operator|.
name|add_partition
argument_list|(
name|partition
argument_list|)
expr_stmt|;
comment|// Event 3
name|msClient
operator|.
name|dropPartition
argument_list|(
name|defaultDbName
argument_list|,
name|tblName
argument_list|,
name|partCol1Vals
argument_list|,
literal|false
argument_list|)
expr_stmt|;
comment|// Get notifications from metastore
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|3
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getEventTime
argument_list|()
operator|>=
name|startTime
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|DROP_PARTITION
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|defaultDbName
argument_list|,
name|event
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|tblName
argument_list|,
name|event
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
comment|// Parse the message field
name|ObjectNode
name|jsonTree
init|=
name|JSONMessageFactory
operator|.
name|getJsonTree
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|DROP_PARTITION
operator|.
name|toString
argument_list|()
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"eventType"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|defaultDbName
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"db"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|tblName
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"table"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
comment|// When hive.metastore.transactional.event.listeners is set,
comment|// a failed event should not create a new notification
name|List
argument_list|<
name|String
argument_list|>
name|newpartCol1Vals
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"tomorrow"
argument_list|)
decl_stmt|;
name|partition
operator|=
operator|new
name|Partition
argument_list|(
name|newpartCol1Vals
argument_list|,
name|defaultDbName
argument_list|,
name|tblName
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
name|sd
argument_list|,
name|emptyParameters
argument_list|)
expr_stmt|;
name|msClient
operator|.
name|add_partition
argument_list|(
name|partition
argument_list|)
expr_stmt|;
name|DummyRawStoreFailEvent
operator|.
name|setEventSucceed
argument_list|(
literal|false
argument_list|)
expr_stmt|;
try|try
block|{
name|msClient
operator|.
name|dropPartition
argument_list|(
name|defaultDbName
argument_list|,
name|tblName
argument_list|,
name|newpartCol1Vals
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Error: drop partition should've failed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// expected
block|}
name|rsp
operator|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|createFunction
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|defaultDbName
init|=
literal|"default"
decl_stmt|;
name|String
name|funcName
init|=
literal|"createfunction"
decl_stmt|;
name|String
name|funcName2
init|=
literal|"createfunction2"
decl_stmt|;
name|String
name|ownerName
init|=
literal|"me"
decl_stmt|;
name|String
name|funcClass
init|=
literal|"o.a.h.h.createfunc"
decl_stmt|;
name|String
name|funcClass2
init|=
literal|"o.a.h.h.createfunc2"
decl_stmt|;
name|String
name|funcResource
init|=
literal|"file:/tmp/somewhere"
decl_stmt|;
name|String
name|funcResource2
init|=
literal|"file:/tmp/somewhere2"
decl_stmt|;
name|Function
name|func
init|=
operator|new
name|Function
argument_list|(
name|funcName
argument_list|,
name|defaultDbName
argument_list|,
name|funcClass
argument_list|,
name|ownerName
argument_list|,
name|PrincipalType
operator|.
name|USER
argument_list|,
name|startTime
argument_list|,
name|FunctionType
operator|.
name|JAVA
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|ResourceUri
argument_list|(
name|ResourceType
operator|.
name|JAR
argument_list|,
name|funcResource
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
comment|// Event 1
name|msClient
operator|.
name|createFunction
argument_list|(
name|func
argument_list|)
expr_stmt|;
comment|// Get notifications from metastore
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|1
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getEventTime
argument_list|()
operator|>=
name|startTime
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|CREATE_FUNCTION
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|defaultDbName
argument_list|,
name|event
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
comment|// Parse the message field
name|Function
name|funcObj
init|=
name|JSONMessageFactory
operator|.
name|getFunctionObj
argument_list|(
name|JSONMessageFactory
operator|.
name|getJsonTree
argument_list|(
name|event
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|defaultDbName
argument_list|,
name|funcObj
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|funcName
argument_list|,
name|funcObj
operator|.
name|getFunctionName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|funcClass
argument_list|,
name|funcObj
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ownerName
argument_list|,
name|funcObj
operator|.
name|getOwnerName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|FunctionType
operator|.
name|JAVA
argument_list|,
name|funcObj
operator|.
name|getFunctionType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|funcObj
operator|.
name|getResourceUrisSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ResourceType
operator|.
name|JAR
argument_list|,
name|funcObj
operator|.
name|getResourceUris
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getResourceType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|funcResource
argument_list|,
name|funcObj
operator|.
name|getResourceUris
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getUri
argument_list|()
argument_list|)
expr_stmt|;
comment|// When hive.metastore.transactional.event.listeners is set,
comment|// a failed event should not create a new notification
name|DummyRawStoreFailEvent
operator|.
name|setEventSucceed
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|func
operator|=
operator|new
name|Function
argument_list|(
name|funcName2
argument_list|,
name|defaultDbName
argument_list|,
name|funcClass2
argument_list|,
name|ownerName
argument_list|,
name|PrincipalType
operator|.
name|USER
argument_list|,
name|startTime
argument_list|,
name|FunctionType
operator|.
name|JAVA
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|ResourceUri
argument_list|(
name|ResourceType
operator|.
name|JAR
argument_list|,
name|funcResource2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|msClient
operator|.
name|createFunction
argument_list|(
name|func
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Error: create function should've failed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// expected
block|}
name|rsp
operator|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|dropFunction
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|defaultDbName
init|=
literal|"default"
decl_stmt|;
name|String
name|funcName
init|=
literal|"dropfunction"
decl_stmt|;
name|String
name|funcName2
init|=
literal|"dropfunction2"
decl_stmt|;
name|String
name|ownerName
init|=
literal|"me"
decl_stmt|;
name|String
name|funcClass
init|=
literal|"o.a.h.h.dropfunction"
decl_stmt|;
name|String
name|funcClass2
init|=
literal|"o.a.h.h.dropfunction2"
decl_stmt|;
name|String
name|funcResource
init|=
literal|"file:/tmp/somewhere"
decl_stmt|;
name|String
name|funcResource2
init|=
literal|"file:/tmp/somewhere2"
decl_stmt|;
name|Function
name|func
init|=
operator|new
name|Function
argument_list|(
name|funcName
argument_list|,
name|defaultDbName
argument_list|,
name|funcClass
argument_list|,
name|ownerName
argument_list|,
name|PrincipalType
operator|.
name|USER
argument_list|,
name|startTime
argument_list|,
name|FunctionType
operator|.
name|JAVA
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|ResourceUri
argument_list|(
name|ResourceType
operator|.
name|JAR
argument_list|,
name|funcResource
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
comment|// Event 1
name|msClient
operator|.
name|createFunction
argument_list|(
name|func
argument_list|)
expr_stmt|;
comment|// Event 2
name|msClient
operator|.
name|dropFunction
argument_list|(
name|defaultDbName
argument_list|,
name|funcName
argument_list|)
expr_stmt|;
comment|// Get notifications from metastore
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|2
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getEventTime
argument_list|()
operator|>=
name|startTime
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|DROP_FUNCTION
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|defaultDbName
argument_list|,
name|event
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
comment|// Parse the message field
name|Function
name|funcObj
init|=
name|JSONMessageFactory
operator|.
name|getFunctionObj
argument_list|(
name|JSONMessageFactory
operator|.
name|getJsonTree
argument_list|(
name|event
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|defaultDbName
argument_list|,
name|funcObj
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|funcName
argument_list|,
name|funcObj
operator|.
name|getFunctionName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|funcClass
argument_list|,
name|funcObj
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ownerName
argument_list|,
name|funcObj
operator|.
name|getOwnerName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|FunctionType
operator|.
name|JAVA
argument_list|,
name|funcObj
operator|.
name|getFunctionType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|funcObj
operator|.
name|getResourceUrisSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ResourceType
operator|.
name|JAR
argument_list|,
name|funcObj
operator|.
name|getResourceUris
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getResourceType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|funcResource
argument_list|,
name|funcObj
operator|.
name|getResourceUris
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getUri
argument_list|()
argument_list|)
expr_stmt|;
comment|// When hive.metastore.transactional.event.listeners is set,
comment|// a failed event should not create a new notification
name|func
operator|=
operator|new
name|Function
argument_list|(
name|funcName2
argument_list|,
name|defaultDbName
argument_list|,
name|funcClass2
argument_list|,
name|ownerName
argument_list|,
name|PrincipalType
operator|.
name|USER
argument_list|,
name|startTime
argument_list|,
name|FunctionType
operator|.
name|JAVA
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|ResourceUri
argument_list|(
name|ResourceType
operator|.
name|JAR
argument_list|,
name|funcResource2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|msClient
operator|.
name|createFunction
argument_list|(
name|func
argument_list|)
expr_stmt|;
name|DummyRawStoreFailEvent
operator|.
name|setEventSucceed
argument_list|(
literal|false
argument_list|)
expr_stmt|;
try|try
block|{
name|msClient
operator|.
name|dropFunction
argument_list|(
name|defaultDbName
argument_list|,
name|funcName2
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Error: drop function should've failed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// expected
block|}
name|rsp
operator|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|createIndex
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|indexName
init|=
literal|"createIndex"
decl_stmt|;
name|String
name|dbName
init|=
literal|"default"
decl_stmt|;
name|String
name|tableName
init|=
literal|"createIndexTable"
decl_stmt|;
name|String
name|indexTableName
init|=
name|tableName
operator|+
literal|"__"
operator|+
name|indexName
operator|+
literal|"__"
decl_stmt|;
name|int
name|startTime
init|=
call|(
name|int
call|)
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|/
literal|1000
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"col1"
argument_list|,
literal|"int"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|SerDeInfo
name|serde
init|=
operator|new
name|SerDeInfo
argument_list|(
literal|"serde"
argument_list|,
literal|"seriallib"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"key"
argument_list|,
literal|"value"
argument_list|)
expr_stmt|;
name|StorageDescriptor
name|sd
init|=
operator|new
name|StorageDescriptor
argument_list|(
name|cols
argument_list|,
literal|"file:/tmp"
argument_list|,
literal|"input"
argument_list|,
literal|"output"
argument_list|,
literal|false
argument_list|,
literal|17
argument_list|,
name|serde
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"bucketcol"
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|Order
argument_list|(
literal|"sortcol"
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|,
name|params
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
operator|new
name|Table
argument_list|(
name|tableName
argument_list|,
name|dbName
argument_list|,
literal|"me"
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
comment|// Event 1
name|msClient
operator|.
name|createTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|Index
name|index
init|=
operator|new
name|Index
argument_list|(
name|indexName
argument_list|,
literal|null
argument_list|,
literal|"default"
argument_list|,
name|tableName
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
name|indexTableName
argument_list|,
name|sd
argument_list|,
name|emptyParameters
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|Table
name|indexTable
init|=
operator|new
name|Table
argument_list|(
name|indexTableName
argument_list|,
name|dbName
argument_list|,
literal|"me"
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
comment|// Event 2, 3 (index table and index)
name|msClient
operator|.
name|createIndex
argument_list|(
name|index
argument_list|,
name|indexTable
argument_list|)
expr_stmt|;
comment|// Get notifications from metastore
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|3
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getEventTime
argument_list|()
operator|>=
name|startTime
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|CREATE_INDEX
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dbName
argument_list|,
name|event
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
comment|// Parse the message field
name|Index
name|indexObj
init|=
name|JSONMessageFactory
operator|.
name|getIndexObj
argument_list|(
name|JSONMessageFactory
operator|.
name|getJsonTree
argument_list|(
name|event
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|dbName
argument_list|,
name|indexObj
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|indexName
argument_list|,
name|indexObj
operator|.
name|getIndexName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|tableName
argument_list|,
name|indexObj
operator|.
name|getOrigTableName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|indexTableName
argument_list|,
name|indexObj
operator|.
name|getIndexTableName
argument_list|()
argument_list|)
expr_stmt|;
comment|// When hive.metastore.transactional.event.listeners is set,
comment|// a failed event should not create a new notification
name|DummyRawStoreFailEvent
operator|.
name|setEventSucceed
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|index
operator|=
operator|new
name|Index
argument_list|(
literal|"createIndexTable2"
argument_list|,
literal|null
argument_list|,
literal|"default"
argument_list|,
name|tableName
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|"createIndexTable2__createIndexTable2__"
argument_list|,
name|sd
argument_list|,
name|emptyParameters
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|Table
name|indexTable2
init|=
operator|new
name|Table
argument_list|(
literal|"createIndexTable2__createIndexTable2__"
argument_list|,
name|dbName
argument_list|,
literal|"me"
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
try|try
block|{
name|msClient
operator|.
name|createIndex
argument_list|(
name|index
argument_list|,
name|indexTable2
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Error: create index should've failed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// expected
block|}
name|rsp
operator|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|dropIndex
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|indexName
init|=
literal|"dropIndex"
decl_stmt|;
name|String
name|dbName
init|=
literal|"default"
decl_stmt|;
name|String
name|tableName
init|=
literal|"dropIndexTable"
decl_stmt|;
name|String
name|indexTableName
init|=
name|tableName
operator|+
literal|"__"
operator|+
name|indexName
operator|+
literal|"__"
decl_stmt|;
name|int
name|startTime
init|=
call|(
name|int
call|)
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|/
literal|1000
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"col1"
argument_list|,
literal|"int"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|SerDeInfo
name|serde
init|=
operator|new
name|SerDeInfo
argument_list|(
literal|"serde"
argument_list|,
literal|"seriallib"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"key"
argument_list|,
literal|"value"
argument_list|)
expr_stmt|;
name|StorageDescriptor
name|sd
init|=
operator|new
name|StorageDescriptor
argument_list|(
name|cols
argument_list|,
literal|"file:/tmp"
argument_list|,
literal|"input"
argument_list|,
literal|"output"
argument_list|,
literal|false
argument_list|,
literal|17
argument_list|,
name|serde
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"bucketcol"
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|Order
argument_list|(
literal|"sortcol"
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|,
name|params
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
operator|new
name|Table
argument_list|(
name|tableName
argument_list|,
name|dbName
argument_list|,
literal|"me"
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
comment|// Event 1
name|msClient
operator|.
name|createTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|Index
name|index
init|=
operator|new
name|Index
argument_list|(
name|indexName
argument_list|,
literal|null
argument_list|,
literal|"default"
argument_list|,
name|tableName
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
name|indexTableName
argument_list|,
name|sd
argument_list|,
name|emptyParameters
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|Table
name|indexTable
init|=
operator|new
name|Table
argument_list|(
name|indexTableName
argument_list|,
name|dbName
argument_list|,
literal|"me"
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
comment|// Event 2, 3 (index table and index)
name|msClient
operator|.
name|createIndex
argument_list|(
name|index
argument_list|,
name|indexTable
argument_list|)
expr_stmt|;
comment|// Event 4 (drops index and indexTable)
name|msClient
operator|.
name|dropIndex
argument_list|(
name|dbName
argument_list|,
name|tableName
argument_list|,
name|indexName
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// Get notifications from metastore
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|4
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getEventTime
argument_list|()
operator|>=
name|startTime
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|DROP_INDEX
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dbName
argument_list|,
name|event
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
comment|// Parse the message field
name|Index
name|indexObj
init|=
name|JSONMessageFactory
operator|.
name|getIndexObj
argument_list|(
name|JSONMessageFactory
operator|.
name|getJsonTree
argument_list|(
name|event
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|dbName
argument_list|,
name|indexObj
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|indexName
operator|.
name|toLowerCase
argument_list|()
argument_list|,
name|indexObj
operator|.
name|getIndexName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|tableName
operator|.
name|toLowerCase
argument_list|()
argument_list|,
name|indexObj
operator|.
name|getOrigTableName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|indexTableName
operator|.
name|toLowerCase
argument_list|()
argument_list|,
name|indexObj
operator|.
name|getIndexTableName
argument_list|()
argument_list|)
expr_stmt|;
comment|// When hive.metastore.transactional.event.listeners is set,
comment|// a failed event should not create a new notification
name|index
operator|=
operator|new
name|Index
argument_list|(
literal|"dropIndexTable2"
argument_list|,
literal|null
argument_list|,
literal|"default"
argument_list|,
name|tableName
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|"dropIndexTable__dropIndexTable2__"
argument_list|,
name|sd
argument_list|,
name|emptyParameters
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|Table
name|indexTable2
init|=
operator|new
name|Table
argument_list|(
literal|"dropIndexTable__dropIndexTable2__"
argument_list|,
name|dbName
argument_list|,
literal|"me"
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|msClient
operator|.
name|createIndex
argument_list|(
name|index
argument_list|,
name|indexTable2
argument_list|)
expr_stmt|;
name|DummyRawStoreFailEvent
operator|.
name|setEventSucceed
argument_list|(
literal|false
argument_list|)
expr_stmt|;
try|try
block|{
comment|// drops index and indexTable
name|msClient
operator|.
name|dropIndex
argument_list|(
name|dbName
argument_list|,
name|tableName
argument_list|,
literal|"dropIndex2"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Error: drop index should've failed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// expected
block|}
name|rsp
operator|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|alterIndex
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|indexName
init|=
literal|"alterIndex"
decl_stmt|;
name|String
name|dbName
init|=
literal|"default"
decl_stmt|;
name|String
name|tableName
init|=
literal|"alterIndexTable"
decl_stmt|;
name|String
name|indexTableName
init|=
name|tableName
operator|+
literal|"__"
operator|+
name|indexName
operator|+
literal|"__"
decl_stmt|;
name|int
name|startTime
init|=
call|(
name|int
call|)
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|/
literal|1000
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"col1"
argument_list|,
literal|"int"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|SerDeInfo
name|serde
init|=
operator|new
name|SerDeInfo
argument_list|(
literal|"serde"
argument_list|,
literal|"seriallib"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"key"
argument_list|,
literal|"value"
argument_list|)
expr_stmt|;
name|StorageDescriptor
name|sd
init|=
operator|new
name|StorageDescriptor
argument_list|(
name|cols
argument_list|,
literal|"file:/tmp"
argument_list|,
literal|"input"
argument_list|,
literal|"output"
argument_list|,
literal|false
argument_list|,
literal|17
argument_list|,
name|serde
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"bucketcol"
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|Order
argument_list|(
literal|"sortcol"
argument_list|,
literal|1
argument_list|)
argument_list|)
argument_list|,
name|params
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
operator|new
name|Table
argument_list|(
name|tableName
argument_list|,
name|dbName
argument_list|,
literal|"me"
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
comment|// Event 1
name|msClient
operator|.
name|createTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|Index
name|oldIndex
init|=
operator|new
name|Index
argument_list|(
name|indexName
argument_list|,
literal|null
argument_list|,
literal|"default"
argument_list|,
name|tableName
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
name|indexTableName
argument_list|,
name|sd
argument_list|,
name|emptyParameters
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|Table
name|oldIndexTable
init|=
operator|new
name|Table
argument_list|(
name|indexTableName
argument_list|,
name|dbName
argument_list|,
literal|"me"
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
comment|// Event 2, 3
name|msClient
operator|.
name|createIndex
argument_list|(
name|oldIndex
argument_list|,
name|oldIndexTable
argument_list|)
expr_stmt|;
comment|// creates index and index table
name|Index
name|newIndex
init|=
operator|new
name|Index
argument_list|(
name|indexName
argument_list|,
literal|null
argument_list|,
literal|"default"
argument_list|,
name|tableName
argument_list|,
name|startTime
argument_list|,
name|startTime
operator|+
literal|1
argument_list|,
name|indexTableName
argument_list|,
name|sd
argument_list|,
name|emptyParameters
argument_list|,
literal|false
argument_list|)
decl_stmt|;
comment|// Event 4
name|msClient
operator|.
name|alter_index
argument_list|(
name|dbName
argument_list|,
name|tableName
argument_list|,
name|indexName
argument_list|,
name|newIndex
argument_list|)
expr_stmt|;
comment|// Get notifications from metastore
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|4
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getEventTime
argument_list|()
operator|>=
name|startTime
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|ALTER_INDEX
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dbName
argument_list|,
name|event
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
comment|// Parse the message field
name|Index
name|indexObj
init|=
name|JSONMessageFactory
operator|.
name|getIndexObj
argument_list|(
name|JSONMessageFactory
operator|.
name|getJsonTree
argument_list|(
name|event
argument_list|)
argument_list|,
literal|"afterIndexObjJson"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|dbName
argument_list|,
name|indexObj
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|indexName
argument_list|,
name|indexObj
operator|.
name|getIndexName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|tableName
argument_list|,
name|indexObj
operator|.
name|getOrigTableName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|indexTableName
argument_list|,
name|indexObj
operator|.
name|getIndexTableName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|indexObj
operator|.
name|getCreateTime
argument_list|()
operator|<
name|indexObj
operator|.
name|getLastAccessTime
argument_list|()
argument_list|)
expr_stmt|;
comment|// When hive.metastore.transactional.event.listeners is set,
comment|// a failed event should not create a new notification
name|DummyRawStoreFailEvent
operator|.
name|setEventSucceed
argument_list|(
literal|false
argument_list|)
expr_stmt|;
try|try
block|{
name|msClient
operator|.
name|alter_index
argument_list|(
name|dbName
argument_list|,
name|tableName
argument_list|,
name|indexName
argument_list|,
name|newIndex
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Error: alter index should've failed"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
comment|// expected
block|}
name|rsp
operator|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|insertTable
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|defaultDbName
init|=
literal|"default"
decl_stmt|;
name|String
name|tblName
init|=
literal|"inserttbl"
decl_stmt|;
name|String
name|tblOwner
init|=
literal|"me"
decl_stmt|;
name|String
name|serdeLocation
init|=
literal|"file:/tmp"
decl_stmt|;
name|String
name|fileAdded
init|=
literal|"/warehouse/mytable/b1"
decl_stmt|;
name|FieldSchema
name|col1
init|=
operator|new
name|FieldSchema
argument_list|(
literal|"col1"
argument_list|,
literal|"int"
argument_list|,
literal|"no comment"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
name|col1
argument_list|)
expr_stmt|;
name|SerDeInfo
name|serde
init|=
operator|new
name|SerDeInfo
argument_list|(
literal|"serde"
argument_list|,
literal|"seriallib"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|StorageDescriptor
name|sd
init|=
operator|new
name|StorageDescriptor
argument_list|(
name|cols
argument_list|,
name|serdeLocation
argument_list|,
literal|"input"
argument_list|,
literal|"output"
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|,
name|serde
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
operator|new
name|Table
argument_list|(
name|tblName
argument_list|,
name|defaultDbName
argument_list|,
name|tblOwner
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
comment|// Event 1
name|msClient
operator|.
name|createTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|FireEventRequestData
name|data
init|=
operator|new
name|FireEventRequestData
argument_list|()
decl_stmt|;
name|InsertEventRequestData
name|insertData
init|=
operator|new
name|InsertEventRequestData
argument_list|()
decl_stmt|;
name|data
operator|.
name|setInsertData
argument_list|(
name|insertData
argument_list|)
expr_stmt|;
name|insertData
operator|.
name|addToFilesAdded
argument_list|(
name|fileAdded
argument_list|)
expr_stmt|;
name|FireEventRequest
name|rqst
init|=
operator|new
name|FireEventRequest
argument_list|(
literal|true
argument_list|,
name|data
argument_list|)
decl_stmt|;
name|rqst
operator|.
name|setDbName
argument_list|(
name|defaultDbName
argument_list|)
expr_stmt|;
name|rqst
operator|.
name|setTableName
argument_list|(
name|tblName
argument_list|)
expr_stmt|;
comment|// Event 2
name|msClient
operator|.
name|fireListenerEvent
argument_list|(
name|rqst
argument_list|)
expr_stmt|;
comment|// Get notifications from metastore
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|2
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getEventTime
argument_list|()
operator|>=
name|startTime
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|INSERT
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|defaultDbName
argument_list|,
name|event
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|tblName
argument_list|,
name|event
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
comment|// Parse the message field
name|verifyInsertJSON
argument_list|(
name|event
argument_list|,
name|defaultDbName
argument_list|,
name|tblName
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|insertPartition
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|defaultDbName
init|=
literal|"default"
decl_stmt|;
name|String
name|tblName
init|=
literal|"insertptn"
decl_stmt|;
name|String
name|tblOwner
init|=
literal|"me"
decl_stmt|;
name|String
name|serdeLocation
init|=
literal|"file:/tmp"
decl_stmt|;
name|String
name|fileAdded
init|=
literal|"/warehouse/mytable/b1"
decl_stmt|;
name|FieldSchema
name|col1
init|=
operator|new
name|FieldSchema
argument_list|(
literal|"col1"
argument_list|,
literal|"int"
argument_list|,
literal|"no comment"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
name|col1
argument_list|)
expr_stmt|;
name|SerDeInfo
name|serde
init|=
operator|new
name|SerDeInfo
argument_list|(
literal|"serde"
argument_list|,
literal|"seriallib"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|StorageDescriptor
name|sd
init|=
operator|new
name|StorageDescriptor
argument_list|(
name|cols
argument_list|,
name|serdeLocation
argument_list|,
literal|"input"
argument_list|,
literal|"output"
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|,
name|serde
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|FieldSchema
name|partCol1
init|=
operator|new
name|FieldSchema
argument_list|(
literal|"ds"
argument_list|,
literal|"string"
argument_list|,
literal|"no comment"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|partCols
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|partCol1Vals
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"today"
argument_list|)
decl_stmt|;
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partKeyVals
init|=
operator|new
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|partKeyVals
operator|.
name|put
argument_list|(
literal|"ds"
argument_list|,
literal|"today"
argument_list|)
expr_stmt|;
name|partCols
operator|.
name|add
argument_list|(
name|partCol1
argument_list|)
expr_stmt|;
name|Table
name|table
init|=
operator|new
name|Table
argument_list|(
name|tblName
argument_list|,
name|defaultDbName
argument_list|,
name|tblOwner
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
name|partCols
argument_list|,
name|emptyParameters
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
comment|// Event 1
name|msClient
operator|.
name|createTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|Partition
name|partition
init|=
operator|new
name|Partition
argument_list|(
name|partCol1Vals
argument_list|,
name|defaultDbName
argument_list|,
name|tblName
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
name|sd
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
comment|// Event 2
name|msClient
operator|.
name|add_partition
argument_list|(
name|partition
argument_list|)
expr_stmt|;
name|FireEventRequestData
name|data
init|=
operator|new
name|FireEventRequestData
argument_list|()
decl_stmt|;
name|InsertEventRequestData
name|insertData
init|=
operator|new
name|InsertEventRequestData
argument_list|()
decl_stmt|;
name|data
operator|.
name|setInsertData
argument_list|(
name|insertData
argument_list|)
expr_stmt|;
name|insertData
operator|.
name|addToFilesAdded
argument_list|(
name|fileAdded
argument_list|)
expr_stmt|;
name|FireEventRequest
name|rqst
init|=
operator|new
name|FireEventRequest
argument_list|(
literal|true
argument_list|,
name|data
argument_list|)
decl_stmt|;
name|rqst
operator|.
name|setDbName
argument_list|(
name|defaultDbName
argument_list|)
expr_stmt|;
name|rqst
operator|.
name|setTableName
argument_list|(
name|tblName
argument_list|)
expr_stmt|;
name|rqst
operator|.
name|setPartitionVals
argument_list|(
name|partCol1Vals
argument_list|)
expr_stmt|;
comment|// Event 3
name|msClient
operator|.
name|fireListenerEvent
argument_list|(
name|rqst
argument_list|)
expr_stmt|;
comment|// Get notifications from metastore
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|3
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getEventTime
argument_list|()
operator|>=
name|startTime
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|INSERT
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|defaultDbName
argument_list|,
name|event
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|tblName
argument_list|,
name|event
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
comment|// Parse the message field
name|verifyInsertJSON
argument_list|(
name|event
argument_list|,
name|defaultDbName
argument_list|,
name|tblName
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|ObjectNode
name|jsonTree
init|=
name|JSONMessageFactory
operator|.
name|getJsonTree
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partKeyValsFromNotif
init|=
name|JSONMessageFactory
operator|.
name|getAsMap
argument_list|(
operator|(
name|ObjectNode
operator|)
name|jsonTree
operator|.
name|get
argument_list|(
literal|"partKeyVals"
argument_list|)
argument_list|,
operator|new
name|LinkedHashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|partKeyVals
argument_list|,
name|partKeyValsFromNotif
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getOnlyMaxEvents
parameter_list|()
throws|throws
name|Exception
block|{
name|Database
name|db
init|=
operator|new
name|Database
argument_list|(
literal|"db1"
argument_list|,
literal|"no description"
argument_list|,
literal|"file:/tmp"
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|msClient
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|db
operator|=
operator|new
name|Database
argument_list|(
literal|"db2"
argument_list|,
literal|"no description"
argument_list|,
literal|"file:/tmp"
argument_list|,
name|emptyParameters
argument_list|)
expr_stmt|;
name|msClient
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|db
operator|=
operator|new
name|Database
argument_list|(
literal|"db3"
argument_list|,
literal|"no description"
argument_list|,
literal|"file:/tmp"
argument_list|,
name|emptyParameters
argument_list|)
expr_stmt|;
name|msClient
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
comment|// Get notifications from metastore
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|2
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|1
argument_list|,
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|2
argument_list|,
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|filter
parameter_list|()
throws|throws
name|Exception
block|{
name|Database
name|db
init|=
operator|new
name|Database
argument_list|(
literal|"f1"
argument_list|,
literal|"no description"
argument_list|,
literal|"file:/tmp"
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|msClient
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|db
operator|=
operator|new
name|Database
argument_list|(
literal|"f2"
argument_list|,
literal|"no description"
argument_list|,
literal|"file:/tmp"
argument_list|,
name|emptyParameters
argument_list|)
expr_stmt|;
name|msClient
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|msClient
operator|.
name|dropDatabase
argument_list|(
literal|"f2"
argument_list|)
expr_stmt|;
name|IMetaStoreClient
operator|.
name|NotificationFilter
name|filter
init|=
operator|new
name|IMetaStoreClient
operator|.
name|NotificationFilter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|accept
parameter_list|(
name|NotificationEvent
name|event
parameter_list|)
block|{
return|return
name|event
operator|.
name|getEventType
argument_list|()
operator|.
name|equals
argument_list|(
name|EventType
operator|.
name|DROP_DATABASE
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
block|}
decl_stmt|;
comment|// Get notifications from metastore
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
name|filter
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|3
argument_list|,
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|filterWithMax
parameter_list|()
throws|throws
name|Exception
block|{
name|Database
name|db
init|=
operator|new
name|Database
argument_list|(
literal|"f10"
argument_list|,
literal|"no description"
argument_list|,
literal|"file:/tmp"
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|msClient
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|db
operator|=
operator|new
name|Database
argument_list|(
literal|"f11"
argument_list|,
literal|"no description"
argument_list|,
literal|"file:/tmp"
argument_list|,
name|emptyParameters
argument_list|)
expr_stmt|;
name|msClient
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|msClient
operator|.
name|dropDatabase
argument_list|(
literal|"f11"
argument_list|)
expr_stmt|;
name|IMetaStoreClient
operator|.
name|NotificationFilter
name|filter
init|=
operator|new
name|IMetaStoreClient
operator|.
name|NotificationFilter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|accept
parameter_list|(
name|NotificationEvent
name|event
parameter_list|)
block|{
return|return
name|event
operator|.
name|getEventType
argument_list|()
operator|.
name|equals
argument_list|(
name|EventType
operator|.
name|CREATE_DATABASE
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
block|}
decl_stmt|;
comment|// Get notifications from metastore
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|1
argument_list|,
name|filter
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|1
argument_list|,
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|sqlInsertTable
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|defaultDbName
init|=
literal|"default"
decl_stmt|;
name|String
name|tblName
init|=
literal|"sqlins"
decl_stmt|;
comment|// Event 1
name|driver
operator|.
name|run
argument_list|(
literal|"create table "
operator|+
name|tblName
operator|+
literal|" (c int)"
argument_list|)
expr_stmt|;
comment|// Event 2 (alter: marker stats event), 3 (insert), 4 (alter: stats update event)
name|driver
operator|.
name|run
argument_list|(
literal|"insert into table "
operator|+
name|tblName
operator|+
literal|" values (1)"
argument_list|)
expr_stmt|;
comment|// Event 5
name|driver
operator|.
name|run
argument_list|(
literal|"alter table "
operator|+
name|tblName
operator|+
literal|" add columns (c2 int)"
argument_list|)
expr_stmt|;
comment|// Event 6
name|driver
operator|.
name|run
argument_list|(
literal|"drop table "
operator|+
name|tblName
argument_list|)
expr_stmt|;
comment|// Get notifications from metastore
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|1
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|CREATE_TABLE
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|3
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|INSERT
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
comment|// Parse the message field
name|verifyInsertJSON
argument_list|(
name|event
argument_list|,
name|defaultDbName
argument_list|,
name|tblName
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|event
operator|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|5
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|ALTER_TABLE
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|6
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|DROP_TABLE
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|sqlCTAS
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|sourceTblName
init|=
literal|"sqlctasins1"
decl_stmt|;
name|String
name|targetTblName
init|=
literal|"sqlctasins2"
decl_stmt|;
comment|// Event 1
name|driver
operator|.
name|run
argument_list|(
literal|"create table "
operator|+
name|sourceTblName
operator|+
literal|" (c int)"
argument_list|)
expr_stmt|;
comment|// Event 2 (alter: marker stats event), 3 (insert), 4 (alter: stats update event)
name|driver
operator|.
name|run
argument_list|(
literal|"insert into table "
operator|+
name|sourceTblName
operator|+
literal|" values (1)"
argument_list|)
expr_stmt|;
comment|// Event 5, 6 (alter: stats update event)
name|driver
operator|.
name|run
argument_list|(
literal|"create table "
operator|+
name|targetTblName
operator|+
literal|" as select c from "
operator|+
name|sourceTblName
argument_list|)
expr_stmt|;
comment|// Get notifications from metastore
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|1
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|CREATE_TABLE
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|3
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|INSERT
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
comment|// Parse the message field
name|verifyInsertJSON
argument_list|(
name|event
argument_list|,
literal|null
argument_list|,
name|sourceTblName
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|event
operator|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|5
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|CREATE_TABLE
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|sqlTempTable
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|tempTblName
init|=
literal|"sqltemptbl"
decl_stmt|;
name|driver
operator|.
name|run
argument_list|(
literal|"create temporary table "
operator|+
name|tempTblName
operator|+
literal|"  (c int)"
argument_list|)
expr_stmt|;
name|driver
operator|.
name|run
argument_list|(
literal|"insert into table "
operator|+
name|tempTblName
operator|+
literal|" values (1)"
argument_list|)
expr_stmt|;
comment|// Get notifications from metastore
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|sqlDb
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|dbName
init|=
literal|"sqldb"
decl_stmt|;
comment|// Event 1
name|driver
operator|.
name|run
argument_list|(
literal|"create database "
operator|+
name|dbName
argument_list|)
expr_stmt|;
comment|// Event 2
name|driver
operator|.
name|run
argument_list|(
literal|"drop database "
operator|+
name|dbName
argument_list|)
expr_stmt|;
comment|// Get notifications from metastore
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|1
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|CREATE_DATABASE
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|2
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|DROP_DATABASE
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|sqlInsertPartition
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|tblName
init|=
literal|"sqlinsptn"
decl_stmt|;
comment|// Event 1
name|driver
operator|.
name|run
argument_list|(
literal|"create table "
operator|+
name|tblName
operator|+
literal|" (c int) partitioned by (ds string)"
argument_list|)
expr_stmt|;
comment|// Event 2, 3, 4
name|driver
operator|.
name|run
argument_list|(
literal|"insert into table "
operator|+
name|tblName
operator|+
literal|" partition (ds = 'today') values (1)"
argument_list|)
expr_stmt|;
comment|// Event 5, 6, 7
name|driver
operator|.
name|run
argument_list|(
literal|"insert into table "
operator|+
name|tblName
operator|+
literal|" partition (ds = 'today') values (2)"
argument_list|)
expr_stmt|;
comment|// Event 8, 9, 10
name|driver
operator|.
name|run
argument_list|(
literal|"insert into table "
operator|+
name|tblName
operator|+
literal|" partition (ds) values (3, 'today')"
argument_list|)
expr_stmt|;
comment|// Event 9, 10
name|driver
operator|.
name|run
argument_list|(
literal|"alter table "
operator|+
name|tblName
operator|+
literal|" add partition (ds = 'yesterday')"
argument_list|)
expr_stmt|;
comment|// Event 10, 11, 12
name|driver
operator|.
name|run
argument_list|(
literal|"insert into table "
operator|+
name|tblName
operator|+
literal|" partition (ds = 'yesterday') values (2)"
argument_list|)
expr_stmt|;
comment|// Event 12, 13, 14
name|driver
operator|.
name|run
argument_list|(
literal|"insert into table "
operator|+
name|tblName
operator|+
literal|" partition (ds) values (3, 'yesterday')"
argument_list|)
expr_stmt|;
comment|// Event 15, 16, 17
name|driver
operator|.
name|run
argument_list|(
literal|"insert into table "
operator|+
name|tblName
operator|+
literal|" partition (ds) values (3, 'tomorrow')"
argument_list|)
expr_stmt|;
comment|// Event 18
name|driver
operator|.
name|run
argument_list|(
literal|"alter table "
operator|+
name|tblName
operator|+
literal|" drop partition (ds = 'tomorrow')"
argument_list|)
expr_stmt|;
comment|// Event 19, 20, 21
name|driver
operator|.
name|run
argument_list|(
literal|"insert into table "
operator|+
name|tblName
operator|+
literal|" partition (ds) values (42, 'todaytwo')"
argument_list|)
expr_stmt|;
comment|// Event 22, 23, 24
name|driver
operator|.
name|run
argument_list|(
literal|"insert overwrite table "
operator|+
name|tblName
operator|+
literal|" partition(ds='todaytwo') select c from "
operator|+
name|tblName
operator|+
literal|" where 'ds'='today'"
argument_list|)
expr_stmt|;
comment|// Get notifications from metastore
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|24
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|2
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|ADD_PARTITION
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|4
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|INSERT
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
comment|// Parse the message field
name|verifyInsertJSON
argument_list|(
name|event
argument_list|,
literal|null
argument_list|,
name|tblName
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|event
operator|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|7
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|INSERT
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
comment|// Parse the message field
name|verifyInsertJSON
argument_list|(
name|event
argument_list|,
literal|null
argument_list|,
name|tblName
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|event
operator|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|9
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|10
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|ADD_PARTITION
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|11
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|INSERT
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
comment|// Parse the message field
name|verifyInsertJSON
argument_list|(
name|event
argument_list|,
literal|null
argument_list|,
name|tblName
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|event
operator|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|13
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|14
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|INSERT
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
comment|// Parse the message field
name|verifyInsertJSON
argument_list|(
name|event
argument_list|,
literal|null
argument_list|,
name|tblName
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|event
operator|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|16
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|17
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|ADD_PARTITION
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|18
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|19
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|DROP_PARTITION
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|19
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|20
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|ADD_PARTITION
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|event
operator|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|21
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|ALTER_PARTITION
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getMessage
argument_list|()
operator|.
name|matches
argument_list|(
literal|".*\"ds\":\"todaytwo\".*"
argument_list|)
argument_list|)
expr_stmt|;
name|event
operator|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|21
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|22
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|INSERT
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
comment|// replace-overwrite introduces no new files
name|assertTrue
argument_list|(
name|event
operator|.
name|getMessage
argument_list|()
operator|.
name|matches
argument_list|(
literal|".*\"files\":\\[\\].*"
argument_list|)
argument_list|)
expr_stmt|;
name|event
operator|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|22
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|23
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|ALTER_PARTITION
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getMessage
argument_list|()
operator|.
name|matches
argument_list|(
literal|".*\"ds\":\"todaytwo\".*"
argument_list|)
argument_list|)
expr_stmt|;
name|event
operator|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|23
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|24
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|ALTER_PARTITION
operator|.
name|toString
argument_list|()
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getMessage
argument_list|()
operator|.
name|matches
argument_list|(
literal|".*\"ds\":\"todaytwo\".*"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|verifyInsertJSON
parameter_list|(
name|NotificationEvent
name|event
parameter_list|,
name|String
name|dbName
parameter_list|,
name|String
name|tblName
parameter_list|,
name|boolean
name|verifyChecksums
parameter_list|)
throws|throws
name|Exception
block|{
comment|// Parse the message field
name|ObjectNode
name|jsonTree
init|=
name|JSONMessageFactory
operator|.
name|getJsonTree
argument_list|(
name|event
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"JSONInsertMessage: "
operator|+
name|jsonTree
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|EventType
operator|.
name|INSERT
operator|.
name|toString
argument_list|()
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"eventType"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|dbName
operator|!=
literal|null
condition|)
block|{
name|assertEquals
argument_list|(
name|dbName
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"db"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|tblName
operator|!=
literal|null
condition|)
block|{
name|assertEquals
argument_list|(
name|tblName
argument_list|,
name|jsonTree
operator|.
name|get
argument_list|(
literal|"table"
argument_list|)
operator|.
name|asText
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// Should have list of files
name|List
argument_list|<
name|String
argument_list|>
name|files
init|=
name|JSONMessageFactory
operator|.
name|getAsList
argument_list|(
operator|(
name|ArrayNode
operator|)
name|jsonTree
operator|.
name|get
argument_list|(
literal|"files"
argument_list|)
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|files
operator|.
name|size
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|verifyChecksums
condition|)
block|{
comment|// Should have list of file checksums
name|List
argument_list|<
name|String
argument_list|>
name|fileChecksums
init|=
name|JSONMessageFactory
operator|.
name|getAsList
argument_list|(
operator|(
name|ArrayNode
operator|)
name|jsonTree
operator|.
name|get
argument_list|(
literal|"fileChecksums"
argument_list|)
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|fileChecksums
operator|.
name|size
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|cleanupNotifs
parameter_list|()
throws|throws
name|Exception
block|{
name|Database
name|db
init|=
operator|new
name|Database
argument_list|(
literal|"cleanup1"
argument_list|,
literal|"no description"
argument_list|,
literal|"file:/tmp"
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|msClient
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|msClient
operator|.
name|dropDatabase
argument_list|(
literal|"cleanup1"
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Pulling events immediately after createDatabase/dropDatabase"
argument_list|)
expr_stmt|;
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
comment|// sleep for expiry time, and then fetch again
comment|// sleep twice the TTL interval - things should have been cleaned by then.
name|Thread
operator|.
name|sleep
argument_list|(
name|EVENTS_TTL
operator|*
literal|2
operator|*
literal|1000
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Pulling events again after cleanup"
argument_list|)
expr_stmt|;
name|NotificationEventResponse
name|rsp2
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"second trigger done"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|rsp2
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

