begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|listener
package|;
end_package

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|HiveMetaStoreClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|IMetaStoreClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|FieldSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|NotificationEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|NotificationEventResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Partition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|SerDeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|StorageDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|typeinfo
operator|.
name|TypeInfoFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|common
operator|.
name|HCatConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|data
operator|.
name|schema
operator|.
name|HCatFieldSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|listener
operator|.
name|DbNotificationListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|hcatalog
operator|.
name|messaging
operator|.
name|HCatEventMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
specifier|public
class|class
name|TestDbNotificationListener
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|TestDbNotificationListener
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|emptyParameters
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|static
name|IMetaStoreClient
name|msClient
decl_stmt|;
specifier|private
name|int
name|startTime
decl_stmt|;
specifier|private
name|long
name|firstEventId
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|connectToMetastore
parameter_list|()
throws|throws
name|Exception
block|{
name|HiveConf
name|conf
init|=
operator|new
name|HiveConf
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTORE_EVENT_LISTENERS
argument_list|,
name|DbNotificationListener
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|msClient
operator|=
operator|new
name|HiveMetaStoreClient
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|long
name|now
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|/
literal|1000
decl_stmt|;
name|startTime
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|now
operator|>
name|Integer
operator|.
name|MAX_VALUE
condition|)
name|fail
argument_list|(
literal|"Bummer, time has fallen over the edge"
argument_list|)
expr_stmt|;
else|else
name|startTime
operator|=
operator|(
name|int
operator|)
name|now
expr_stmt|;
name|firstEventId
operator|=
name|msClient
operator|.
name|getCurrentNotificationEventId
argument_list|()
operator|.
name|getEventId
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|createDatabase
parameter_list|()
throws|throws
name|Exception
block|{
name|Database
name|db
init|=
operator|new
name|Database
argument_list|(
literal|"mydb"
argument_list|,
literal|"no description"
argument_list|,
literal|"file:/tmp"
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|msClient
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|1
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getEventTime
argument_list|()
operator|>=
name|startTime
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HCatConstants
operator|.
name|HCAT_CREATE_DATABASE_EVENT
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|event
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|event
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getMessage
argument_list|()
operator|.
name|matches
argument_list|(
literal|"\\{\"eventType\":\"CREATE_DATABASE\",\"server\":\"\","
operator|+
literal|"\"servicePrincipal\":\"\",\"db\":\"mydb\",\"timestamp\":[0-9]+}"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|dropDatabase
parameter_list|()
throws|throws
name|Exception
block|{
name|Database
name|db
init|=
operator|new
name|Database
argument_list|(
literal|"dropdb"
argument_list|,
literal|"no description"
argument_list|,
literal|"file:/tmp"
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|msClient
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|msClient
operator|.
name|dropDatabase
argument_list|(
literal|"dropdb"
argument_list|)
expr_stmt|;
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|2
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getEventTime
argument_list|()
operator|>=
name|startTime
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HCatConstants
operator|.
name|HCAT_DROP_DATABASE_EVENT
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"dropdb"
argument_list|,
name|event
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|event
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getMessage
argument_list|()
operator|.
name|matches
argument_list|(
literal|"\\{\"eventType\":\"DROP_DATABASE\",\"server\":\"\","
operator|+
literal|"\"servicePrincipal\":\"\",\"db\":\"dropdb\",\"timestamp\":[0-9]+}"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|createTable
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"col1"
argument_list|,
literal|"int"
argument_list|,
literal|"nocomment"
argument_list|)
argument_list|)
expr_stmt|;
name|SerDeInfo
name|serde
init|=
operator|new
name|SerDeInfo
argument_list|(
literal|"serde"
argument_list|,
literal|"seriallib"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|StorageDescriptor
name|sd
init|=
operator|new
name|StorageDescriptor
argument_list|(
name|cols
argument_list|,
literal|"file:/tmp"
argument_list|,
literal|"input"
argument_list|,
literal|"output"
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|,
name|serde
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
operator|new
name|Table
argument_list|(
literal|"mytable"
argument_list|,
literal|"default"
argument_list|,
literal|"me"
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|msClient
operator|.
name|createTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|1
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getEventTime
argument_list|()
operator|>=
name|startTime
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HCatConstants
operator|.
name|HCAT_CREATE_TABLE_EVENT
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"default"
argument_list|,
name|event
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|event
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getMessage
argument_list|()
operator|.
name|matches
argument_list|(
literal|"\\{\"eventType\":\"CREATE_TABLE\",\"server\":\"\","
operator|+
literal|"\"servicePrincipal\":\"\",\"db\":\"default\",\"table\":\"mytable\",\"timestamp\":[0-9]+}"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// TODO After HIVE-9175 is committed
comment|/*   @Test   public void alterTable() throws Exception {     List<FieldSchema> cols = new ArrayList<FieldSchema>();     cols.add(new FieldSchema("col1", "int", "nocomment"));     SerDeInfo serde = new SerDeInfo("serde", "seriallib", null);     StorageDescriptor sd = new StorageDescriptor(cols, "file:/tmp", "input", "output", false, 0,         serde, null, null, emptyParameters);     Table table = new Table("alttable", "default", "me", startTime, startTime, 0, sd, null,         emptyParameters, null, null, null);     msClient.createTable(table);      table = new Table("alttable", "default", "me", startTime, startTime + 1, 0, sd, null,         emptyParameters, null, null, null);     msClient.alter_table("default", "alttable", table);      NotificationEventResponse rsp = msClient.getNextNotification(firstEventId, 0, null);     assertEquals(2, rsp.getEventsSize());      NotificationEvent event = rsp.getEvents().get(1);     assertEquals(firstEventId + 2, event.getEventId());     assertTrue(event.getEventTime()>= startTime);     assertEquals(HCatConstants.HCAT_ALTER_TABLE_EVENT, event.getEventType());     assertEquals("default", event.getDbName());     assertEquals("alttable", event.getTableName());     assertTrue(event.getMessage().matches("\\{\"eventType\":\"ALTER_TABLE\",\"server\":\"\"," +         "\"servicePrincipal\":\"\",\"db\":\"default\",\"table\":\"alttable\"," +         "\"timestamp\":[0-9]+}"));   }   */
annotation|@
name|Test
specifier|public
name|void
name|dropTable
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"col1"
argument_list|,
literal|"int"
argument_list|,
literal|"nocomment"
argument_list|)
argument_list|)
expr_stmt|;
name|SerDeInfo
name|serde
init|=
operator|new
name|SerDeInfo
argument_list|(
literal|"serde"
argument_list|,
literal|"seriallib"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|StorageDescriptor
name|sd
init|=
operator|new
name|StorageDescriptor
argument_list|(
name|cols
argument_list|,
literal|"file:/tmp"
argument_list|,
literal|"input"
argument_list|,
literal|"output"
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|,
name|serde
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
operator|new
name|Table
argument_list|(
literal|"droptable"
argument_list|,
literal|"default"
argument_list|,
literal|"me"
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|msClient
operator|.
name|createTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|msClient
operator|.
name|dropTable
argument_list|(
literal|"default"
argument_list|,
literal|"droptable"
argument_list|)
expr_stmt|;
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|2
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getEventTime
argument_list|()
operator|>=
name|startTime
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HCatConstants
operator|.
name|HCAT_DROP_TABLE_EVENT
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"default"
argument_list|,
name|event
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"droptable"
argument_list|,
name|event
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getMessage
argument_list|()
operator|.
name|matches
argument_list|(
literal|"\\{\"eventType\":\"DROP_TABLE\",\"server\":\"\","
operator|+
literal|"\"servicePrincipal\":\"\",\"db\":\"default\",\"table\":"
operator|+
literal|"\"droptable\",\"timestamp\":[0-9]+}"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|addPartition
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"col1"
argument_list|,
literal|"int"
argument_list|,
literal|"nocomment"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|partCols
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|partCols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"ds"
argument_list|,
literal|"string"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|SerDeInfo
name|serde
init|=
operator|new
name|SerDeInfo
argument_list|(
literal|"serde"
argument_list|,
literal|"seriallib"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|StorageDescriptor
name|sd
init|=
operator|new
name|StorageDescriptor
argument_list|(
name|cols
argument_list|,
literal|"file:/tmp"
argument_list|,
literal|"input"
argument_list|,
literal|"output"
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|,
name|serde
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
operator|new
name|Table
argument_list|(
literal|"addPartTable"
argument_list|,
literal|"default"
argument_list|,
literal|"me"
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
name|partCols
argument_list|,
name|emptyParameters
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|msClient
operator|.
name|createTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|Partition
name|partition
init|=
operator|new
name|Partition
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"today"
argument_list|)
argument_list|,
literal|"default"
argument_list|,
literal|"addPartTable"
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
name|sd
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|msClient
operator|.
name|add_partition
argument_list|(
name|partition
argument_list|)
expr_stmt|;
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|2
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getEventTime
argument_list|()
operator|>=
name|startTime
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HCatConstants
operator|.
name|HCAT_ADD_PARTITION_EVENT
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"default"
argument_list|,
name|event
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"addparttable"
argument_list|,
name|event
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getMessage
argument_list|()
operator|.
name|matches
argument_list|(
literal|"\\{\"eventType\":\"ADD_PARTITION\",\"server\":\"\","
operator|+
literal|"\"servicePrincipal\":\"\",\"db\":\"default\",\"table\":"
operator|+
literal|"\"addparttable\",\"timestamp\":[0-9]+,\"partitions\":\\[\\{\"ds\":\"today\"}]}"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|dropPartition
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"col1"
argument_list|,
literal|"int"
argument_list|,
literal|"nocomment"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|partCols
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|partCols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"ds"
argument_list|,
literal|"string"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|SerDeInfo
name|serde
init|=
operator|new
name|SerDeInfo
argument_list|(
literal|"serde"
argument_list|,
literal|"seriallib"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|StorageDescriptor
name|sd
init|=
operator|new
name|StorageDescriptor
argument_list|(
name|cols
argument_list|,
literal|"file:/tmp"
argument_list|,
literal|"input"
argument_list|,
literal|"output"
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|,
name|serde
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|Table
name|table
init|=
operator|new
name|Table
argument_list|(
literal|"dropPartTable"
argument_list|,
literal|"default"
argument_list|,
literal|"me"
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
name|partCols
argument_list|,
name|emptyParameters
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|msClient
operator|.
name|createTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|Partition
name|partition
init|=
operator|new
name|Partition
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"today"
argument_list|)
argument_list|,
literal|"default"
argument_list|,
literal|"dropPartTable"
argument_list|,
name|startTime
argument_list|,
name|startTime
argument_list|,
name|sd
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|msClient
operator|.
name|add_partition
argument_list|(
name|partition
argument_list|)
expr_stmt|;
name|msClient
operator|.
name|dropPartition
argument_list|(
literal|"default"
argument_list|,
literal|"dropparttable"
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"today"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|NotificationEvent
name|event
init|=
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|3
argument_list|,
name|event
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getEventTime
argument_list|()
operator|>=
name|startTime
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|HCatConstants
operator|.
name|HCAT_DROP_PARTITION_EVENT
argument_list|,
name|event
operator|.
name|getEventType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"default"
argument_list|,
name|event
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"dropparttable"
argument_list|,
name|event
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|event
operator|.
name|getMessage
argument_list|()
operator|.
name|matches
argument_list|(
literal|"\\{\"eventType\":\"DROP_PARTITION\",\"server\":\"\","
operator|+
literal|"\"servicePrincipal\":\"\",\"db\":\"default\",\"table\":"
operator|+
literal|"\"dropparttable\",\"timestamp\":[0-9]+,\"partitions\":\\[\\{\"ds\":\"today\"}]}"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getOnlyMaxEvents
parameter_list|()
throws|throws
name|Exception
block|{
name|Database
name|db
init|=
operator|new
name|Database
argument_list|(
literal|"db1"
argument_list|,
literal|"no description"
argument_list|,
literal|"file:/tmp"
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|msClient
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|db
operator|=
operator|new
name|Database
argument_list|(
literal|"db2"
argument_list|,
literal|"no description"
argument_list|,
literal|"file:/tmp"
argument_list|,
name|emptyParameters
argument_list|)
expr_stmt|;
name|msClient
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|db
operator|=
operator|new
name|Database
argument_list|(
literal|"db3"
argument_list|,
literal|"no description"
argument_list|,
literal|"file:/tmp"
argument_list|,
name|emptyParameters
argument_list|)
expr_stmt|;
name|msClient
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|2
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|1
argument_list|,
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|2
argument_list|,
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|filter
parameter_list|()
throws|throws
name|Exception
block|{
name|Database
name|db
init|=
operator|new
name|Database
argument_list|(
literal|"f1"
argument_list|,
literal|"no description"
argument_list|,
literal|"file:/tmp"
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|msClient
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|db
operator|=
operator|new
name|Database
argument_list|(
literal|"f2"
argument_list|,
literal|"no description"
argument_list|,
literal|"file:/tmp"
argument_list|,
name|emptyParameters
argument_list|)
expr_stmt|;
name|msClient
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|msClient
operator|.
name|dropDatabase
argument_list|(
literal|"f2"
argument_list|)
expr_stmt|;
name|IMetaStoreClient
operator|.
name|NotificationFilter
name|filter
init|=
operator|new
name|IMetaStoreClient
operator|.
name|NotificationFilter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|accept
parameter_list|(
name|NotificationEvent
name|event
parameter_list|)
block|{
return|return
name|event
operator|.
name|getEventType
argument_list|()
operator|.
name|equals
argument_list|(
name|HCatConstants
operator|.
name|HCAT_DROP_DATABASE_EVENT
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|0
argument_list|,
name|filter
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|3
argument_list|,
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|filterWithMax
parameter_list|()
throws|throws
name|Exception
block|{
name|Database
name|db
init|=
operator|new
name|Database
argument_list|(
literal|"f10"
argument_list|,
literal|"no description"
argument_list|,
literal|"file:/tmp"
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|msClient
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|db
operator|=
operator|new
name|Database
argument_list|(
literal|"f11"
argument_list|,
literal|"no description"
argument_list|,
literal|"file:/tmp"
argument_list|,
name|emptyParameters
argument_list|)
expr_stmt|;
name|msClient
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|msClient
operator|.
name|dropDatabase
argument_list|(
literal|"f11"
argument_list|)
expr_stmt|;
name|IMetaStoreClient
operator|.
name|NotificationFilter
name|filter
init|=
operator|new
name|IMetaStoreClient
operator|.
name|NotificationFilter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|accept
parameter_list|(
name|NotificationEvent
name|event
parameter_list|)
block|{
return|return
name|event
operator|.
name|getEventType
argument_list|()
operator|.
name|equals
argument_list|(
name|HCatConstants
operator|.
name|HCAT_CREATE_DATABASE_EVENT
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|NotificationEventResponse
name|rsp
init|=
name|msClient
operator|.
name|getNextNotification
argument_list|(
name|firstEventId
argument_list|,
literal|1
argument_list|,
name|filter
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|rsp
operator|.
name|getEventsSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|firstEventId
operator|+
literal|1
argument_list|,
name|rsp
operator|.
name|getEvents
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getEventId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

