begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|txn
operator|.
name|compactor
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|MiniDFSCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|HiveMetaStoreClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|CompactionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|CompactionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Partition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|ShowCompactRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|ShowCompactResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|ReplChangeManager
operator|.
name|SOURCE_OF_REPLICATION
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|txn
operator|.
name|CompactionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|txn
operator|.
name|TxnDbUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|txn
operator|.
name|TxnStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|txn
operator|.
name|TxnUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|shims
operator|.
name|Utils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|login
operator|.
name|LoginException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
specifier|public
class|class
name|TestCleanerWithReplication
extends|extends
name|CompactorTest
block|{
specifier|private
name|Path
name|cmRootDirectory
decl_stmt|;
specifier|private
specifier|static
name|FileSystem
name|fs
decl_stmt|;
specifier|private
specifier|static
name|MiniDFSCluster
name|miniDFSCluster
decl_stmt|;
specifier|private
specifier|final
name|String
name|dbName
init|=
literal|"TestCleanerWithReplication"
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|conf
operator|=
operator|new
name|HiveConf
argument_list|()
expr_stmt|;
name|TxnDbUtil
operator|.
name|setConfValues
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|TxnDbUtil
operator|.
name|cleanDb
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"fs.defaultFS"
argument_list|,
name|fs
operator|.
name|getUri
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|REPLCMENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|TxnDbUtil
operator|.
name|prepDb
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|ms
operator|=
operator|new
name|HiveMetaStoreClient
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|txnHandler
operator|=
name|TxnUtils
operator|.
name|getTxnStore
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|cmRootDirectory
operator|=
operator|new
name|Path
argument_list|(
name|conf
operator|.
name|get
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|REPLCMDIR
operator|.
name|varname
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|fs
operator|.
name|exists
argument_list|(
name|cmRootDirectory
argument_list|)
condition|)
block|{
name|fs
operator|.
name|mkdirs
argument_list|(
name|cmRootDirectory
argument_list|)
expr_stmt|;
block|}
name|tmpdir
operator|=
operator|new
name|File
argument_list|(
name|Files
operator|.
name|createTempDirectory
argument_list|(
literal|"compactor_test_table_"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Database
name|db
init|=
operator|new
name|Database
argument_list|()
decl_stmt|;
name|db
operator|.
name|putToParameters
argument_list|(
name|SOURCE_OF_REPLICATION
argument_list|,
literal|"1,2,3"
argument_list|)
expr_stmt|;
name|db
operator|.
name|setName
argument_list|(
name|dbName
argument_list|)
expr_stmt|;
name|ms
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
block|}
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|classLevelSetup
parameter_list|()
throws|throws
name|LoginException
throws|,
name|IOException
block|{
name|Configuration
name|hadoopConf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|hadoopConf
operator|.
name|set
argument_list|(
literal|"dfs.client.use.datanode.hostname"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|hadoopConf
operator|.
name|set
argument_list|(
literal|"hadoop.proxyuser."
operator|+
name|Utils
operator|.
name|getUGI
argument_list|()
operator|.
name|getShortUserName
argument_list|()
operator|+
literal|".hosts"
argument_list|,
literal|"*"
argument_list|)
expr_stmt|;
name|miniDFSCluster
operator|=
operator|new
name|MiniDFSCluster
operator|.
name|Builder
argument_list|(
name|hadoopConf
argument_list|)
operator|.
name|numDataNodes
argument_list|(
literal|1
argument_list|)
operator|.
name|format
argument_list|(
literal|true
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|fs
operator|=
name|miniDFSCluster
operator|.
name|getFileSystem
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|fs
operator|.
name|delete
argument_list|(
name|cmRootDirectory
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|compactorTestCleanup
argument_list|()
expr_stmt|;
name|ms
operator|.
name|dropDatabase
argument_list|(
name|dbName
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|tearDownClass
parameter_list|()
block|{
name|miniDFSCluster
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|cleanupAfterMajorTableCompaction
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
name|dbName
argument_list|,
literal|"camtc"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|20L
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|21L
argument_list|,
literal|22L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|23L
argument_list|,
literal|24L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|25L
argument_list|,
literal|25
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
name|dbName
argument_list|,
literal|"camtc"
argument_list|,
literal|25
argument_list|)
expr_stmt|;
name|CompactionRequest
name|rqst
init|=
operator|new
name|CompactionRequest
argument_list|(
name|dbName
argument_list|,
literal|"camtc"
argument_list|,
name|CompactionType
operator|.
name|MAJOR
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|compact
argument_list|(
name|rqst
argument_list|)
expr_stmt|;
name|CompactionInfo
name|ci
init|=
name|txnHandler
operator|.
name|findNextToCompact
argument_list|(
literal|"fred"
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|markCompacted
argument_list|(
name|ci
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|setRunAs
argument_list|(
name|ci
operator|.
name|id
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.name"
argument_list|)
argument_list|)
expr_stmt|;
name|assertCleanerActions
argument_list|(
literal|6
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|cleanupAfterMajorPartitionCompaction
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
name|dbName
argument_list|,
literal|"campc"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Partition
name|p
init|=
name|newPartition
argument_list|(
name|t
argument_list|,
literal|"today"
argument_list|)
decl_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|20L
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|21L
argument_list|,
literal|22L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|23L
argument_list|,
literal|24L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|25L
argument_list|,
literal|25
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
name|dbName
argument_list|,
literal|"campc"
argument_list|,
literal|25
argument_list|)
expr_stmt|;
name|CompactionRequest
name|rqst
init|=
operator|new
name|CompactionRequest
argument_list|(
name|dbName
argument_list|,
literal|"campc"
argument_list|,
name|CompactionType
operator|.
name|MAJOR
argument_list|)
decl_stmt|;
name|rqst
operator|.
name|setPartitionname
argument_list|(
literal|"ds=today"
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|compact
argument_list|(
name|rqst
argument_list|)
expr_stmt|;
name|CompactionInfo
name|ci
init|=
name|txnHandler
operator|.
name|findNextToCompact
argument_list|(
literal|"fred"
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|markCompacted
argument_list|(
name|ci
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|setRunAs
argument_list|(
name|ci
operator|.
name|id
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.name"
argument_list|)
argument_list|)
expr_stmt|;
name|assertCleanerActions
argument_list|(
literal|6
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|cleanupAfterMinorTableCompaction
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
name|dbName
argument_list|,
literal|"camitc"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|20L
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|21L
argument_list|,
literal|22L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|23L
argument_list|,
literal|24L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
literal|null
argument_list|,
literal|21L
argument_list|,
literal|24L
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
name|dbName
argument_list|,
literal|"camitc"
argument_list|,
literal|25
argument_list|)
expr_stmt|;
name|CompactionRequest
name|rqst
init|=
operator|new
name|CompactionRequest
argument_list|(
name|dbName
argument_list|,
literal|"camitc"
argument_list|,
name|CompactionType
operator|.
name|MINOR
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|compact
argument_list|(
name|rqst
argument_list|)
expr_stmt|;
name|CompactionInfo
name|ci
init|=
name|txnHandler
operator|.
name|findNextToCompact
argument_list|(
literal|"fred"
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|markCompacted
argument_list|(
name|ci
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|setRunAs
argument_list|(
name|ci
operator|.
name|id
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.name"
argument_list|)
argument_list|)
expr_stmt|;
name|assertCleanerActions
argument_list|(
literal|4
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|cleanupAfterMinorPartitionCompaction
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|newTable
argument_list|(
name|dbName
argument_list|,
literal|"camipc"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Partition
name|p
init|=
name|newPartition
argument_list|(
name|t
argument_list|,
literal|"today"
argument_list|)
decl_stmt|;
name|addBaseFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|20L
argument_list|,
literal|20
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|21L
argument_list|,
literal|22L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|23L
argument_list|,
literal|24L
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|addDeltaFile
argument_list|(
name|t
argument_list|,
name|p
argument_list|,
literal|21L
argument_list|,
literal|24L
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|burnThroughTransactions
argument_list|(
name|dbName
argument_list|,
literal|"camipc"
argument_list|,
literal|25
argument_list|)
expr_stmt|;
name|CompactionRequest
name|rqst
init|=
operator|new
name|CompactionRequest
argument_list|(
name|dbName
argument_list|,
literal|"camipc"
argument_list|,
name|CompactionType
operator|.
name|MINOR
argument_list|)
decl_stmt|;
name|rqst
operator|.
name|setPartitionname
argument_list|(
literal|"ds=today"
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|compact
argument_list|(
name|rqst
argument_list|)
expr_stmt|;
name|CompactionInfo
name|ci
init|=
name|txnHandler
operator|.
name|findNextToCompact
argument_list|(
literal|"fred"
argument_list|)
decl_stmt|;
name|txnHandler
operator|.
name|markCompacted
argument_list|(
name|ci
argument_list|)
expr_stmt|;
name|txnHandler
operator|.
name|setRunAs
argument_list|(
name|ci
operator|.
name|id
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.name"
argument_list|)
argument_list|)
expr_stmt|;
name|assertCleanerActions
argument_list|(
literal|4
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertCleanerActions
parameter_list|(
name|int
name|expectedNumOCleanedFiles
parameter_list|)
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|"there should be no deleted files in cm root"
argument_list|,
literal|0
argument_list|,
name|fs
operator|.
name|listStatus
argument_list|(
name|cmRootDirectory
argument_list|)
operator|.
name|length
argument_list|)
expr_stmt|;
name|startCleaner
argument_list|()
expr_stmt|;
name|ShowCompactResponse
name|rsp
init|=
name|txnHandler
operator|.
name|showCompact
argument_list|(
operator|new
name|ShowCompactRequest
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|rsp
operator|.
name|getCompactsSize
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|state
init|=
name|rsp
operator|.
name|getCompacts
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getState
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
literal|"unexpected state "
operator|+
name|state
argument_list|,
name|TxnStore
operator|.
name|SUCCEEDED_RESPONSE
operator|.
name|equals
argument_list|(
name|state
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"there should be "
operator|+
name|String
operator|.
name|valueOf
argument_list|(
name|expectedNumOCleanedFiles
argument_list|)
operator|+
literal|" deleted files in cm root"
argument_list|,
name|expectedNumOCleanedFiles
argument_list|,
name|fs
operator|.
name|listStatus
argument_list|(
name|cmRootDirectory
argument_list|)
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
name|boolean
name|useHive130DeltaDirName
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
block|}
end_class

end_unit

