begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|CommonConfigurationKeysPublic
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FSDataOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|MiniDFSCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|ReplChangeManager
operator|.
name|RecycleType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|FieldSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Partition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|SerDeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|StorageDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|serde2
operator|.
name|columnar
operator|.
name|LazyBinaryColumnarSerDe
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|TestReplChangeManager
block|{
specifier|private
specifier|static
name|HiveMetaStoreClient
name|client
decl_stmt|;
specifier|private
specifier|static
name|HiveConf
name|hiveConf
decl_stmt|;
specifier|private
specifier|static
name|Warehouse
name|warehouse
decl_stmt|;
specifier|private
specifier|static
name|MiniDFSCluster
name|m_dfs
decl_stmt|;
specifier|private
specifier|static
name|String
name|cmroot
decl_stmt|;
specifier|private
specifier|static
name|FileSystem
name|fs
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|m_dfs
operator|=
operator|new
name|MiniDFSCluster
operator|.
name|Builder
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|)
operator|.
name|numDataNodes
argument_list|(
literal|1
argument_list|)
operator|.
name|format
argument_list|(
literal|true
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|hiveConf
operator|=
operator|new
name|HiveConf
argument_list|(
name|TestReplChangeManager
operator|.
name|class
argument_list|)
expr_stmt|;
name|hiveConf
operator|.
name|set
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTOREWAREHOUSE
operator|.
name|varname
argument_list|,
literal|"hdfs://"
operator|+
name|m_dfs
operator|.
name|getNameNode
argument_list|()
operator|.
name|getHostAndPort
argument_list|()
operator|+
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTOREWAREHOUSE
operator|.
name|defaultStrVal
argument_list|)
expr_stmt|;
name|hiveConf
operator|.
name|setBoolean
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|REPLCMENABLED
operator|.
name|varname
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|cmroot
operator|=
literal|"hdfs://"
operator|+
name|m_dfs
operator|.
name|getNameNode
argument_list|()
operator|.
name|getHostAndPort
argument_list|()
operator|+
literal|"/cmroot"
expr_stmt|;
name|hiveConf
operator|.
name|set
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|REPLCMDIR
operator|.
name|varname
argument_list|,
name|cmroot
argument_list|)
expr_stmt|;
name|hiveConf
operator|.
name|setInt
argument_list|(
name|CommonConfigurationKeysPublic
operator|.
name|FS_TRASH_INTERVAL_KEY
argument_list|,
literal|60
argument_list|)
expr_stmt|;
name|warehouse
operator|=
operator|new
name|Warehouse
argument_list|(
name|hiveConf
argument_list|)
expr_stmt|;
name|fs
operator|=
operator|new
name|Path
argument_list|(
name|cmroot
argument_list|)
operator|.
name|getFileSystem
argument_list|(
name|hiveConf
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|=
operator|new
name|HiveMetaStoreClient
argument_list|(
name|hiveConf
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Unable to open the metastore"
argument_list|)
expr_stmt|;
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
name|StringUtils
operator|.
name|stringifyException
argument_list|(
name|e
argument_list|)
argument_list|)
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|m_dfs
operator|.
name|shutdown
argument_list|()
expr_stmt|;
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Unable to close metastore"
argument_list|)
expr_stmt|;
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
name|StringUtils
operator|.
name|stringifyException
argument_list|(
name|e
argument_list|)
argument_list|)
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
specifier|private
name|Partition
name|createPartition
parameter_list|(
name|String
name|dbName
parameter_list|,
name|String
name|tblName
parameter_list|,
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|columns
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|partVals
parameter_list|,
name|SerDeInfo
name|serdeInfo
parameter_list|)
block|{
name|StorageDescriptor
name|sd
init|=
operator|new
name|StorageDescriptor
argument_list|(
name|columns
argument_list|,
literal|null
argument_list|,
literal|"org.apache.hadoop.hive.ql.io.orc.OrcInputFormat"
argument_list|,
literal|"org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat"
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|,
name|serdeInfo
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
return|return
operator|new
name|Partition
argument_list|(
name|partVals
argument_list|,
name|dbName
argument_list|,
name|tblName
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|private
name|void
name|createFile
parameter_list|(
name|Path
name|path
parameter_list|,
name|String
name|content
parameter_list|)
throws|throws
name|IOException
block|{
name|FSDataOutputStream
name|output
init|=
name|path
operator|.
name|getFileSystem
argument_list|(
name|hiveConf
argument_list|)
operator|.
name|create
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|output
operator|.
name|writeChars
argument_list|(
name|content
argument_list|)
expr_stmt|;
name|output
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRecyclePartTable
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Create db1/t1/dt=20160101/part
comment|//              /dt=20160102/part
comment|//              /dt=20160103/part
comment|// Test: recycle single file (dt=20160101/part)
comment|//       recycle single partition (dt=20160102)
comment|//       recycle table t1
name|String
name|dbName
init|=
literal|"db1"
decl_stmt|;
name|client
operator|.
name|dropDatabase
argument_list|(
name|dbName
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Database
name|db
init|=
operator|new
name|Database
argument_list|()
decl_stmt|;
name|db
operator|.
name|setName
argument_list|(
name|dbName
argument_list|)
expr_stmt|;
name|client
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|String
name|tblName
init|=
literal|"t1"
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|columns
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|columns
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"foo"
argument_list|,
literal|"string"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|columns
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"bar"
argument_list|,
literal|"string"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|partColumns
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|partColumns
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"dt"
argument_list|,
literal|"string"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|SerDeInfo
name|serdeInfo
init|=
operator|new
name|SerDeInfo
argument_list|(
literal|"LBCSerDe"
argument_list|,
name|LazyBinaryColumnarSerDe
operator|.
name|class
operator|.
name|getCanonicalName
argument_list|()
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|)
decl_stmt|;
name|StorageDescriptor
name|sd
init|=
operator|new
name|StorageDescriptor
argument_list|(
name|columns
argument_list|,
literal|null
argument_list|,
literal|"org.apache.hadoop.hive.ql.io.orc.OrcInputFormat"
argument_list|,
literal|"org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat"
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|,
name|serdeInfo
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|tableParameters
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|Table
name|tbl
init|=
operator|new
name|Table
argument_list|(
name|tblName
argument_list|,
name|dbName
argument_list|,
literal|""
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
name|partColumns
argument_list|,
name|tableParameters
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|client
operator|.
name|createTable
argument_list|(
name|tbl
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|values
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"20160101"
argument_list|)
decl_stmt|;
name|Partition
name|part1
init|=
name|createPartition
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|,
name|columns
argument_list|,
name|values
argument_list|,
name|serdeInfo
argument_list|)
decl_stmt|;
name|client
operator|.
name|add_partition
argument_list|(
name|part1
argument_list|)
expr_stmt|;
name|values
operator|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"20160102"
argument_list|)
expr_stmt|;
name|Partition
name|part2
init|=
name|createPartition
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|,
name|columns
argument_list|,
name|values
argument_list|,
name|serdeInfo
argument_list|)
decl_stmt|;
name|client
operator|.
name|add_partition
argument_list|(
name|part2
argument_list|)
expr_stmt|;
name|values
operator|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"20160103"
argument_list|)
expr_stmt|;
name|Partition
name|part3
init|=
name|createPartition
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|,
name|columns
argument_list|,
name|values
argument_list|,
name|serdeInfo
argument_list|)
decl_stmt|;
name|client
operator|.
name|add_partition
argument_list|(
name|part3
argument_list|)
expr_stmt|;
name|Path
name|part1Path
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getDefaultPartitionPath
argument_list|(
name|db
argument_list|,
name|tblName
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"dt"
argument_list|,
literal|"20160101"
argument_list|)
argument_list|)
argument_list|,
literal|"part"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part1Path
argument_list|,
literal|"p1"
argument_list|)
expr_stmt|;
name|String
name|path1Chksum
init|=
name|ReplChangeManager
operator|.
name|checksumFor
argument_list|(
name|part1Path
argument_list|,
name|fs
argument_list|)
decl_stmt|;
name|Path
name|part2Path
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getDefaultPartitionPath
argument_list|(
name|db
argument_list|,
name|tblName
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"dt"
argument_list|,
literal|"20160102"
argument_list|)
argument_list|)
argument_list|,
literal|"part"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part2Path
argument_list|,
literal|"p2"
argument_list|)
expr_stmt|;
name|String
name|path2Chksum
init|=
name|ReplChangeManager
operator|.
name|checksumFor
argument_list|(
name|part2Path
argument_list|,
name|fs
argument_list|)
decl_stmt|;
name|Path
name|part3Path
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getDefaultPartitionPath
argument_list|(
name|db
argument_list|,
name|tblName
argument_list|,
name|ImmutableMap
operator|.
name|of
argument_list|(
literal|"dt"
argument_list|,
literal|"20160103"
argument_list|)
argument_list|)
argument_list|,
literal|"part"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part3Path
argument_list|,
literal|"p3"
argument_list|)
expr_stmt|;
name|String
name|path3Chksum
init|=
name|ReplChangeManager
operator|.
name|checksumFor
argument_list|(
name|part3Path
argument_list|,
name|fs
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|part1Path
operator|.
name|getFileSystem
argument_list|(
name|hiveConf
argument_list|)
operator|.
name|exists
argument_list|(
name|part1Path
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|part2Path
operator|.
name|getFileSystem
argument_list|(
name|hiveConf
argument_list|)
operator|.
name|exists
argument_list|(
name|part2Path
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|part3Path
operator|.
name|getFileSystem
argument_list|(
name|hiveConf
argument_list|)
operator|.
name|exists
argument_list|(
name|part3Path
argument_list|)
argument_list|)
expr_stmt|;
name|ReplChangeManager
name|cm
init|=
name|ReplChangeManager
operator|.
name|getInstance
argument_list|(
name|hiveConf
argument_list|)
decl_stmt|;
comment|// verify cm.recycle(db, table, part) api moves file to cmroot dir
name|int
name|ret
init|=
name|cm
operator|.
name|recycle
argument_list|(
name|part1Path
argument_list|,
name|RecycleType
operator|.
name|MOVE
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|ret
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|Path
name|cmPart1Path
init|=
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConf
argument_list|,
name|part1Path
operator|.
name|getName
argument_list|()
argument_list|,
name|path1Chksum
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cmPart1Path
operator|.
name|getFileSystem
argument_list|(
name|hiveConf
argument_list|)
operator|.
name|exists
argument_list|(
name|cmPart1Path
argument_list|)
argument_list|)
expr_stmt|;
comment|// Verify dropPartition recycle part files
name|client
operator|.
name|dropPartition
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"20160102"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|part2Path
operator|.
name|getFileSystem
argument_list|(
name|hiveConf
argument_list|)
operator|.
name|exists
argument_list|(
name|part2Path
argument_list|)
argument_list|)
expr_stmt|;
name|Path
name|cmPart2Path
init|=
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConf
argument_list|,
name|part2Path
operator|.
name|getName
argument_list|()
argument_list|,
name|path2Chksum
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cmPart2Path
operator|.
name|getFileSystem
argument_list|(
name|hiveConf
argument_list|)
operator|.
name|exists
argument_list|(
name|cmPart2Path
argument_list|)
argument_list|)
expr_stmt|;
comment|// Verify dropTable recycle partition files
name|client
operator|.
name|dropTable
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|part3Path
operator|.
name|getFileSystem
argument_list|(
name|hiveConf
argument_list|)
operator|.
name|exists
argument_list|(
name|part3Path
argument_list|)
argument_list|)
expr_stmt|;
name|Path
name|cmPart3Path
init|=
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConf
argument_list|,
name|part3Path
operator|.
name|getName
argument_list|()
argument_list|,
name|path3Chksum
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cmPart3Path
operator|.
name|getFileSystem
argument_list|(
name|hiveConf
argument_list|)
operator|.
name|exists
argument_list|(
name|cmPart3Path
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropDatabase
argument_list|(
name|dbName
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRecycleNonPartTable
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Create db2/t1/part1
comment|//              /part2
comment|//              /part3
comment|// Test: recycle single file (part1)
comment|//       recycle table t1
name|String
name|dbName
init|=
literal|"db2"
decl_stmt|;
name|client
operator|.
name|dropDatabase
argument_list|(
name|dbName
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Database
name|db
init|=
operator|new
name|Database
argument_list|()
decl_stmt|;
name|db
operator|.
name|setName
argument_list|(
name|dbName
argument_list|)
expr_stmt|;
name|client
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|String
name|tblName
init|=
literal|"t1"
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|columns
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|columns
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"foo"
argument_list|,
literal|"string"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|columns
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"bar"
argument_list|,
literal|"string"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|SerDeInfo
name|serdeInfo
init|=
operator|new
name|SerDeInfo
argument_list|(
literal|"LBCSerDe"
argument_list|,
name|LazyBinaryColumnarSerDe
operator|.
name|class
operator|.
name|getCanonicalName
argument_list|()
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|)
decl_stmt|;
name|StorageDescriptor
name|sd
init|=
operator|new
name|StorageDescriptor
argument_list|(
name|columns
argument_list|,
literal|null
argument_list|,
literal|"org.apache.hadoop.hive.ql.io.orc.OrcInputFormat"
argument_list|,
literal|"org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat"
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|,
name|serdeInfo
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|tableParameters
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|Table
name|tbl
init|=
operator|new
name|Table
argument_list|(
name|tblName
argument_list|,
name|dbName
argument_list|,
literal|""
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
literal|null
argument_list|,
name|tableParameters
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|client
operator|.
name|createTable
argument_list|(
name|tbl
argument_list|)
expr_stmt|;
name|Path
name|filePath1
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getDefaultTablePath
argument_list|(
name|db
argument_list|,
name|tblName
argument_list|)
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|filePath1
argument_list|,
literal|"f1"
argument_list|)
expr_stmt|;
name|String
name|fileChksum1
init|=
name|ReplChangeManager
operator|.
name|checksumFor
argument_list|(
name|filePath1
argument_list|,
name|fs
argument_list|)
decl_stmt|;
name|Path
name|filePath2
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getDefaultTablePath
argument_list|(
name|db
argument_list|,
name|tblName
argument_list|)
argument_list|,
literal|"part2"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|filePath2
argument_list|,
literal|"f2"
argument_list|)
expr_stmt|;
name|String
name|fileChksum2
init|=
name|ReplChangeManager
operator|.
name|checksumFor
argument_list|(
name|filePath2
argument_list|,
name|fs
argument_list|)
decl_stmt|;
name|Path
name|filePath3
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getDefaultTablePath
argument_list|(
name|db
argument_list|,
name|tblName
argument_list|)
argument_list|,
literal|"part3"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|filePath3
argument_list|,
literal|"f3"
argument_list|)
expr_stmt|;
name|String
name|fileChksum3
init|=
name|ReplChangeManager
operator|.
name|checksumFor
argument_list|(
name|filePath3
argument_list|,
name|fs
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|filePath1
operator|.
name|getFileSystem
argument_list|(
name|hiveConf
argument_list|)
operator|.
name|exists
argument_list|(
name|filePath1
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|filePath2
operator|.
name|getFileSystem
argument_list|(
name|hiveConf
argument_list|)
operator|.
name|exists
argument_list|(
name|filePath2
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|filePath3
operator|.
name|getFileSystem
argument_list|(
name|hiveConf
argument_list|)
operator|.
name|exists
argument_list|(
name|filePath3
argument_list|)
argument_list|)
expr_stmt|;
name|ReplChangeManager
name|cm
init|=
name|ReplChangeManager
operator|.
name|getInstance
argument_list|(
name|hiveConf
argument_list|)
decl_stmt|;
comment|// verify cm.recycle(Path) api moves file to cmroot dir
name|cm
operator|.
name|recycle
argument_list|(
name|filePath1
argument_list|,
name|RecycleType
operator|.
name|MOVE
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|filePath1
operator|.
name|getFileSystem
argument_list|(
name|hiveConf
argument_list|)
operator|.
name|exists
argument_list|(
name|filePath1
argument_list|)
argument_list|)
expr_stmt|;
name|Path
name|cmPath1
init|=
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConf
argument_list|,
name|filePath1
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum1
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cmPath1
operator|.
name|getFileSystem
argument_list|(
name|hiveConf
argument_list|)
operator|.
name|exists
argument_list|(
name|cmPath1
argument_list|)
argument_list|)
expr_stmt|;
comment|// Verify dropTable recycle table files
name|client
operator|.
name|dropTable
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|)
expr_stmt|;
name|Path
name|cmPath2
init|=
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConf
argument_list|,
name|filePath2
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum2
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|filePath2
operator|.
name|getFileSystem
argument_list|(
name|hiveConf
argument_list|)
operator|.
name|exists
argument_list|(
name|filePath2
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|cmPath2
operator|.
name|getFileSystem
argument_list|(
name|hiveConf
argument_list|)
operator|.
name|exists
argument_list|(
name|cmPath2
argument_list|)
argument_list|)
expr_stmt|;
name|Path
name|cmPath3
init|=
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConf
argument_list|,
name|filePath3
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum3
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|filePath3
operator|.
name|getFileSystem
argument_list|(
name|hiveConf
argument_list|)
operator|.
name|exists
argument_list|(
name|filePath3
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|cmPath3
operator|.
name|getFileSystem
argument_list|(
name|hiveConf
argument_list|)
operator|.
name|exists
argument_list|(
name|cmPath3
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropDatabase
argument_list|(
name|dbName
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testClearer
parameter_list|()
throws|throws
name|Exception
block|{
name|FileSystem
name|fs
init|=
name|warehouse
operator|.
name|getWhRoot
argument_list|()
operator|.
name|getFileSystem
argument_list|(
name|hiveConf
argument_list|)
decl_stmt|;
name|long
name|now
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|Path
name|dirDb
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getWhRoot
argument_list|()
argument_list|,
literal|"db3"
argument_list|)
decl_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|dirDb
argument_list|)
expr_stmt|;
name|Path
name|dirTbl1
init|=
operator|new
name|Path
argument_list|(
name|dirDb
argument_list|,
literal|"tbl1"
argument_list|)
decl_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|dirTbl1
argument_list|)
expr_stmt|;
name|Path
name|part11
init|=
operator|new
name|Path
argument_list|(
name|dirTbl1
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part11
argument_list|,
literal|"testClearer11"
argument_list|)
expr_stmt|;
name|String
name|fileChksum11
init|=
name|ReplChangeManager
operator|.
name|checksumFor
argument_list|(
name|part11
argument_list|,
name|fs
argument_list|)
decl_stmt|;
name|Path
name|part12
init|=
operator|new
name|Path
argument_list|(
name|dirTbl1
argument_list|,
literal|"part2"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part12
argument_list|,
literal|"testClearer12"
argument_list|)
expr_stmt|;
name|String
name|fileChksum12
init|=
name|ReplChangeManager
operator|.
name|checksumFor
argument_list|(
name|part12
argument_list|,
name|fs
argument_list|)
decl_stmt|;
name|Path
name|dirTbl2
init|=
operator|new
name|Path
argument_list|(
name|dirDb
argument_list|,
literal|"tbl2"
argument_list|)
decl_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|dirTbl2
argument_list|)
expr_stmt|;
name|Path
name|part21
init|=
operator|new
name|Path
argument_list|(
name|dirTbl2
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part21
argument_list|,
literal|"testClearer21"
argument_list|)
expr_stmt|;
name|String
name|fileChksum21
init|=
name|ReplChangeManager
operator|.
name|checksumFor
argument_list|(
name|part21
argument_list|,
name|fs
argument_list|)
decl_stmt|;
name|Path
name|part22
init|=
operator|new
name|Path
argument_list|(
name|dirTbl2
argument_list|,
literal|"part2"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part22
argument_list|,
literal|"testClearer22"
argument_list|)
expr_stmt|;
name|String
name|fileChksum22
init|=
name|ReplChangeManager
operator|.
name|checksumFor
argument_list|(
name|part22
argument_list|,
name|fs
argument_list|)
decl_stmt|;
name|Path
name|dirTbl3
init|=
operator|new
name|Path
argument_list|(
name|dirDb
argument_list|,
literal|"tbl3"
argument_list|)
decl_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|dirTbl3
argument_list|)
expr_stmt|;
name|Path
name|part31
init|=
operator|new
name|Path
argument_list|(
name|dirTbl3
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part31
argument_list|,
literal|"testClearer31"
argument_list|)
expr_stmt|;
name|String
name|fileChksum31
init|=
name|ReplChangeManager
operator|.
name|checksumFor
argument_list|(
name|part31
argument_list|,
name|fs
argument_list|)
decl_stmt|;
name|Path
name|part32
init|=
operator|new
name|Path
argument_list|(
name|dirTbl3
argument_list|,
literal|"part2"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part32
argument_list|,
literal|"testClearer32"
argument_list|)
expr_stmt|;
name|String
name|fileChksum32
init|=
name|ReplChangeManager
operator|.
name|checksumFor
argument_list|(
name|part32
argument_list|,
name|fs
argument_list|)
decl_stmt|;
name|ReplChangeManager
operator|.
name|getInstance
argument_list|(
name|hiveConf
argument_list|)
operator|.
name|recycle
argument_list|(
name|dirTbl1
argument_list|,
name|RecycleType
operator|.
name|MOVE
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|ReplChangeManager
operator|.
name|getInstance
argument_list|(
name|hiveConf
argument_list|)
operator|.
name|recycle
argument_list|(
name|dirTbl2
argument_list|,
name|RecycleType
operator|.
name|MOVE
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|ReplChangeManager
operator|.
name|getInstance
argument_list|(
name|hiveConf
argument_list|)
operator|.
name|recycle
argument_list|(
name|dirTbl3
argument_list|,
name|RecycleType
operator|.
name|MOVE
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConf
argument_list|,
name|part11
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum11
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConf
argument_list|,
name|part12
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum12
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConf
argument_list|,
name|part21
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum21
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConf
argument_list|,
name|part22
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum22
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConf
argument_list|,
name|part31
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum31
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConf
argument_list|,
name|part32
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum32
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConf
argument_list|,
name|part11
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum11
argument_list|)
argument_list|,
name|now
operator|-
literal|86400
operator|*
literal|1000
operator|*
literal|2
argument_list|,
name|now
operator|-
literal|86400
operator|*
literal|1000
operator|*
literal|2
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConf
argument_list|,
name|part21
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum21
argument_list|)
argument_list|,
name|now
operator|-
literal|86400
operator|*
literal|1000
operator|*
literal|2
argument_list|,
name|now
operator|-
literal|86400
operator|*
literal|1000
operator|*
literal|2
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConf
argument_list|,
name|part31
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum31
argument_list|)
argument_list|,
name|now
operator|-
literal|86400
operator|*
literal|1000
operator|*
literal|2
argument_list|,
name|now
operator|-
literal|86400
operator|*
literal|1000
operator|*
literal|2
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setTimes
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConf
argument_list|,
name|part32
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum32
argument_list|)
argument_list|,
name|now
operator|-
literal|86400
operator|*
literal|1000
operator|*
literal|2
argument_list|,
name|now
operator|-
literal|86400
operator|*
literal|1000
operator|*
literal|2
argument_list|)
expr_stmt|;
name|ReplChangeManager
operator|.
name|scheduleCMClearer
argument_list|(
name|hiveConf
argument_list|)
expr_stmt|;
name|long
name|start
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|long
name|end
decl_stmt|;
name|boolean
name|cleared
init|=
literal|false
decl_stmt|;
do|do
block|{
name|Thread
operator|.
name|sleep
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|end
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
if|if
condition|(
name|end
operator|-
name|start
operator|>
literal|5000
condition|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"timeout, cmroot has not been cleared"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|fs
operator|.
name|exists
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConf
argument_list|,
name|part11
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum11
argument_list|)
argument_list|)
operator|&&
name|fs
operator|.
name|exists
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConf
argument_list|,
name|part12
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum12
argument_list|)
argument_list|)
operator|&&
operator|!
name|fs
operator|.
name|exists
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConf
argument_list|,
name|part21
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum21
argument_list|)
argument_list|)
operator|&&
name|fs
operator|.
name|exists
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConf
argument_list|,
name|part22
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum22
argument_list|)
argument_list|)
operator|&&
operator|!
name|fs
operator|.
name|exists
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConf
argument_list|,
name|part31
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum31
argument_list|)
argument_list|)
operator|&&
operator|!
name|fs
operator|.
name|exists
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConf
argument_list|,
name|part32
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum32
argument_list|)
argument_list|)
condition|)
block|{
name|cleared
operator|=
literal|true
expr_stmt|;
block|}
block|}
do|while
condition|(
operator|!
name|cleared
condition|)
do|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|shouldIdentifyCMURIs
parameter_list|()
block|{
name|assertTrue
argument_list|(
name|ReplChangeManager
operator|.
name|isCMFileUri
argument_list|(
operator|new
name|Path
argument_list|(
literal|"hdfs://localhost:90000/somepath/adir/"
argument_list|,
literal|"ab.jar#e239s2233"
argument_list|)
argument_list|,
name|fs
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|ReplChangeManager
operator|.
name|isCMFileUri
argument_list|(
operator|new
name|Path
argument_list|(
literal|"/somepath/adir/"
argument_list|,
literal|"ab.jar"
argument_list|)
argument_list|,
name|fs
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

