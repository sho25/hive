begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|jdo
operator|.
name|JDOException
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_class
specifier|public
class|class
name|TestRawStoreTxn
extends|extends
name|TestCase
block|{
specifier|public
specifier|static
class|class
name|DummyRawStoreWithCommitError
extends|extends
name|DummyRawStoreForJdoConnection
block|{
specifier|private
specifier|static
name|int
name|callCount
init|=
literal|0
decl_stmt|;
annotation|@
name|Override
comment|/***      * Throw exception on first try      */
specifier|public
name|boolean
name|commitTransaction
parameter_list|()
block|{
name|callCount
operator|++
expr_stmt|;
if|if
condition|(
name|callCount
operator|==
literal|1
condition|)
block|{
throw|throw
operator|new
name|JDOException
argument_list|(
literal|"Failed for call count "
operator|+
name|callCount
argument_list|)
throw|;
block|}
else|else
block|{
return|return
literal|true
return|;
block|}
block|}
block|}
specifier|private
name|ObjectStore
name|objStore
decl_stmt|;
specifier|private
name|HiveConf
name|hiveConf
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|hiveConf
operator|=
operator|new
name|HiveConf
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
comment|/***    * Check annotations of the restricted methods    * @throws Exception    */
specifier|public
name|void
name|testCheckNoRetryMethods
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|nonExecMethods
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"commitTransaction"
argument_list|,
literal|"commitTransaction"
argument_list|)
decl_stmt|;
name|RawStore
name|rawStore
init|=
name|RetryingRawStore
operator|.
name|getProxy
argument_list|(
name|hiveConf
argument_list|,
operator|new
name|Configuration
argument_list|(
name|hiveConf
argument_list|)
argument_list|,
name|hiveConf
operator|.
name|getVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTORE_RAW_STORE_IMPL
argument_list|)
argument_list|,
literal|1
argument_list|)
decl_stmt|;
for|for
control|(
name|Method
name|rawStoreMethod
range|:
name|RawStore
operator|.
name|class
operator|.
name|getMethods
argument_list|()
control|)
block|{
if|if
condition|(
name|nonExecMethods
operator|.
name|contains
argument_list|(
name|rawStoreMethod
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|assertNotNull
argument_list|(
name|rawStoreMethod
operator|.
name|getAnnotation
argument_list|(
name|RawStore
operator|.
name|CanNotRetry
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|/***    * Invoke commit and verify it doesn't get retried    * @throws Exception    */
specifier|public
name|void
name|testVerifyNoRetryMethods
parameter_list|()
throws|throws
name|Exception
block|{
name|hiveConf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTORECONNECTURLKEY
argument_list|,
name|DummyJdoConnectionUrlHook
operator|.
name|newUrl
argument_list|)
expr_stmt|;
empty_stmt|;
name|hiveConf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTORE_RAW_STORE_IMPL
argument_list|,
name|DummyRawStoreWithCommitError
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|RawStore
name|rawStore
init|=
name|RetryingRawStore
operator|.
name|getProxy
argument_list|(
name|hiveConf
argument_list|,
operator|new
name|Configuration
argument_list|(
name|hiveConf
argument_list|)
argument_list|,
name|DummyRawStoreWithCommitError
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|1
argument_list|)
decl_stmt|;
try|try
block|{
name|rawStore
operator|.
name|commitTransaction
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Commit should fail due to no retry"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JDOException
name|e
parameter_list|)
block|{
comment|// Excepted JDOException
block|}
block|}
block|}
end_class

end_unit

