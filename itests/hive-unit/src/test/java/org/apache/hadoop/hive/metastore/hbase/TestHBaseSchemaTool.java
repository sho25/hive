begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|ColumnStatistics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|ColumnStatisticsData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|ColumnStatisticsDesc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|ColumnStatisticsObj
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|FieldSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Function
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|FunctionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|HiveObjectPrivilege
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|HiveObjectRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|HiveObjectType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|LongColumnStatsData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Partition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|PrincipalType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|PrivilegeBag
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|PrivilegeGrantInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Role
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|StorageDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|StringColumnStatsData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
specifier|public
class|class
name|TestHBaseSchemaTool
extends|extends
name|HBaseIntegrationTests
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|TestHBaseSchemaTool
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
name|String
name|lsep
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"line.separator"
argument_list|)
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startup
parameter_list|()
throws|throws
name|Exception
block|{
name|HBaseIntegrationTests
operator|.
name|startMiniCluster
argument_list|()
expr_stmt|;
block|}
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|shutdown
parameter_list|()
throws|throws
name|Exception
block|{
name|HBaseIntegrationTests
operator|.
name|shutdownMiniCluster
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|IOException
block|{
name|setupHBaseStore
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listTables
parameter_list|()
throws|throws
name|Exception
block|{
name|ByteArrayOutputStream
name|outStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|out
init|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|errStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|err
init|=
operator|new
name|PrintStream
argument_list|(
name|errStr
argument_list|)
decl_stmt|;
operator|new
name|HBaseSchemaTool
argument_list|()
operator|.
name|go
argument_list|(
literal|true
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|StringUtils
operator|.
name|join
argument_list|(
name|HBaseReadWrite
operator|.
name|tableNames
argument_list|,
name|lsep
argument_list|)
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|bogusTable
parameter_list|()
throws|throws
name|Exception
block|{
name|ByteArrayOutputStream
name|outStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|out
init|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|errStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|err
init|=
operator|new
name|PrintStream
argument_list|(
name|errStr
argument_list|)
decl_stmt|;
operator|new
name|HBaseSchemaTool
argument_list|()
operator|.
name|go
argument_list|(
literal|false
argument_list|,
literal|"nosuch"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Unknown table: nosuch"
operator|+
name|lsep
argument_list|,
name|errStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|noSuchDb
parameter_list|()
throws|throws
name|Exception
block|{
name|ByteArrayOutputStream
name|outStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|out
init|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|errStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|err
init|=
operator|new
name|PrintStream
argument_list|(
name|errStr
argument_list|)
decl_stmt|;
operator|new
name|HBaseSchemaTool
argument_list|()
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|DB_TABLE
argument_list|,
literal|"nosuch"
argument_list|,
literal|null
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"No such database: nosuch"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|noMatchingDb
parameter_list|()
throws|throws
name|Exception
block|{
name|ByteArrayOutputStream
name|outStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|out
init|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|errStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|err
init|=
operator|new
name|PrintStream
argument_list|(
name|errStr
argument_list|)
decl_stmt|;
operator|new
name|HBaseSchemaTool
argument_list|()
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|DB_TABLE
argument_list|,
literal|null
argument_list|,
literal|"nomatch"
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"No matching database: nomatch"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|noSuchRole
parameter_list|()
throws|throws
name|Exception
block|{
name|ByteArrayOutputStream
name|outStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|out
init|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|errStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|err
init|=
operator|new
name|PrintStream
argument_list|(
name|errStr
argument_list|)
decl_stmt|;
operator|new
name|HBaseSchemaTool
argument_list|()
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|ROLE_TABLE
argument_list|,
literal|"nosuch"
argument_list|,
literal|null
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"No such role: nosuch"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|noMatchingRole
parameter_list|()
throws|throws
name|Exception
block|{
name|ByteArrayOutputStream
name|outStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|out
init|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|errStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|err
init|=
operator|new
name|PrintStream
argument_list|(
name|errStr
argument_list|)
decl_stmt|;
operator|new
name|HBaseSchemaTool
argument_list|()
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|ROLE_TABLE
argument_list|,
literal|null
argument_list|,
literal|"nomatch"
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"No matching role: nomatch"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|noSuchUser
parameter_list|()
throws|throws
name|Exception
block|{
name|ByteArrayOutputStream
name|outStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|out
init|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|errStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|err
init|=
operator|new
name|PrintStream
argument_list|(
name|errStr
argument_list|)
decl_stmt|;
operator|new
name|HBaseSchemaTool
argument_list|()
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|USER_TO_ROLE_TABLE
argument_list|,
literal|"nosuch"
argument_list|,
literal|null
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"No such user: nosuch"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|noMatchingUser
parameter_list|()
throws|throws
name|Exception
block|{
name|ByteArrayOutputStream
name|outStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|out
init|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|errStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|err
init|=
operator|new
name|PrintStream
argument_list|(
name|errStr
argument_list|)
decl_stmt|;
operator|new
name|HBaseSchemaTool
argument_list|()
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|USER_TO_ROLE_TABLE
argument_list|,
literal|null
argument_list|,
literal|"nomatch"
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"No matching user: nomatch"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|noSuchFunction
parameter_list|()
throws|throws
name|Exception
block|{
name|ByteArrayOutputStream
name|outStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|out
init|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|errStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|err
init|=
operator|new
name|PrintStream
argument_list|(
name|errStr
argument_list|)
decl_stmt|;
operator|new
name|HBaseSchemaTool
argument_list|()
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|FUNC_TABLE
argument_list|,
literal|"nosuch"
argument_list|,
literal|null
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"No such function: nosuch"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|noMatchingFunction
parameter_list|()
throws|throws
name|Exception
block|{
name|ByteArrayOutputStream
name|outStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|out
init|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|errStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|err
init|=
operator|new
name|PrintStream
argument_list|(
name|errStr
argument_list|)
decl_stmt|;
operator|new
name|HBaseSchemaTool
argument_list|()
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|FUNC_TABLE
argument_list|,
literal|null
argument_list|,
literal|"nomatch"
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"No matching function: nomatch"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|noSuchTable
parameter_list|()
throws|throws
name|Exception
block|{
name|ByteArrayOutputStream
name|outStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|out
init|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|errStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|err
init|=
operator|new
name|PrintStream
argument_list|(
name|errStr
argument_list|)
decl_stmt|;
operator|new
name|HBaseSchemaTool
argument_list|()
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|TABLE_TABLE
argument_list|,
literal|"nosuch"
argument_list|,
literal|null
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"No such table: nosuch"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|noMatchingTable
parameter_list|()
throws|throws
name|Exception
block|{
name|ByteArrayOutputStream
name|outStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|out
init|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|errStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|err
init|=
operator|new
name|PrintStream
argument_list|(
name|errStr
argument_list|)
decl_stmt|;
operator|new
name|HBaseSchemaTool
argument_list|()
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|TABLE_TABLE
argument_list|,
literal|null
argument_list|,
literal|"nomatch"
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"No matching table: nomatch"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|noSuchPart
parameter_list|()
throws|throws
name|Exception
block|{
name|ByteArrayOutputStream
name|outStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|out
init|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|errStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|err
init|=
operator|new
name|PrintStream
argument_list|(
name|errStr
argument_list|)
decl_stmt|;
operator|new
name|HBaseSchemaTool
argument_list|()
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|PART_TABLE
argument_list|,
literal|"nosuch"
argument_list|,
literal|null
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"No such partition: nosuch"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|noSuchPartValidFormat
parameter_list|()
throws|throws
name|Exception
block|{
name|ByteArrayOutputStream
name|outStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|out
init|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|errStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|err
init|=
operator|new
name|PrintStream
argument_list|(
name|errStr
argument_list|)
decl_stmt|;
comment|// Test with something that looks like a valid entry
operator|new
name|HBaseSchemaTool
argument_list|()
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|PART_TABLE
argument_list|,
literal|"default.nosuch.nosuch"
argument_list|,
literal|null
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"No such partition: default.nosuch.nosuch"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|noMatchingPart
parameter_list|()
throws|throws
name|Exception
block|{
name|ByteArrayOutputStream
name|outStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|out
init|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|errStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|err
init|=
operator|new
name|PrintStream
argument_list|(
name|errStr
argument_list|)
decl_stmt|;
operator|new
name|HBaseSchemaTool
argument_list|()
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|PART_TABLE
argument_list|,
literal|null
argument_list|,
literal|"nomatch"
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"No matching partition: nomatch"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|noMatchingPartValidFormat
parameter_list|()
throws|throws
name|Exception
block|{
name|ByteArrayOutputStream
name|outStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|out
init|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|errStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|err
init|=
operator|new
name|PrintStream
argument_list|(
name|errStr
argument_list|)
decl_stmt|;
operator|new
name|HBaseSchemaTool
argument_list|()
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|PART_TABLE
argument_list|,
literal|null
argument_list|,
literal|"nomatch.a.b"
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"No matching partition: nomatch.a.b"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|noSuchStorageDescriptor
parameter_list|()
throws|throws
name|Exception
block|{
name|ByteArrayOutputStream
name|outStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|out
init|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|errStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|err
init|=
operator|new
name|PrintStream
argument_list|(
name|errStr
argument_list|)
decl_stmt|;
comment|// Strangly enough things don't come back quite the same when going through the Base64
comment|// encode/decode.
operator|new
name|HBaseSchemaTool
argument_list|()
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|SD_TABLE
argument_list|,
literal|"nosuch"
argument_list|,
literal|null
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"No such storage descriptor: nosucg"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|oneMondoTest
parameter_list|()
throws|throws
name|Exception
block|{
comment|// This is a pain to do in one big test, but we have to control the order so that we have tests
comment|// without dbs, etc.
name|HBaseSchemaTool
name|tool
init|=
operator|new
name|HBaseSchemaTool
argument_list|()
decl_stmt|;
name|ByteArrayOutputStream
name|outStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|out
init|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|errStr
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|err
init|=
operator|new
name|PrintStream
argument_list|(
name|errStr
argument_list|)
decl_stmt|;
comment|// This needs to be up front before we create any tables or partitions
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|SD_TABLE
argument_list|,
literal|null
argument_list|,
literal|"whatever"
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"No storage descriptors"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|// This one needs to be up front too
name|outStr
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
expr_stmt|;
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|SEQUENCES_TABLE
argument_list|,
literal|null
argument_list|,
literal|"whatever"
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"No sequences"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|// Create some databases
name|String
index|[]
name|dbNames
init|=
operator|new
name|String
index|[
literal|3
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|dbNames
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|dbNames
index|[
name|i
index|]
operator|=
literal|"db"
operator|+
name|i
expr_stmt|;
name|Database
name|db
init|=
operator|new
name|Database
argument_list|(
name|dbNames
index|[
name|i
index|]
argument_list|,
literal|"no description"
argument_list|,
literal|"file:///tmp"
argument_list|,
name|emptyParameters
argument_list|)
decl_stmt|;
name|store
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
block|}
name|outStr
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
expr_stmt|;
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|DB_TABLE
argument_list|,
literal|"db0"
argument_list|,
literal|null
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"{\"name\":\"db0\",\"description\":\"no description\","
operator|+
literal|"\"locationUri\":\"file:///tmp\",\"parameters\":{}}"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|outStr
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
expr_stmt|;
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|DB_TABLE
argument_list|,
literal|null
argument_list|,
literal|".*"
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"{\"name\":\"db0\",\"description\":\"no description\","
operator|+
literal|"\"locationUri\":\"file:///tmp\",\"parameters\":{}}"
operator|+
name|lsep
operator|+
literal|"{\"name\":\"db1\",\"description\":\"no description\","
operator|+
literal|"\"locationUri\":\"file:///tmp\",\"parameters\":{}}"
operator|+
name|lsep
operator|+
literal|"{\"name\":\"db2\",\"description\":\"no description\","
operator|+
literal|"\"locationUri\":\"file:///tmp\",\"parameters\":{}}"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|outStr
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
expr_stmt|;
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|DB_TABLE
argument_list|,
literal|null
argument_list|,
literal|"db[12]"
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"{\"name\":\"db1\",\"description\":\"no description\","
operator|+
literal|"\"locationUri\":\"file:///tmp\",\"parameters\":{}}"
operator|+
name|lsep
operator|+
literal|"{\"name\":\"db2\",\"description\":\"no description\","
operator|+
literal|"\"locationUri\":\"file:///tmp\",\"parameters\":{}}"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|String
index|[]
name|roleNames
init|=
operator|new
name|String
index|[
literal|2
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|roleNames
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|roleNames
index|[
name|i
index|]
operator|=
literal|"role"
operator|+
name|i
expr_stmt|;
name|store
operator|.
name|addRole
argument_list|(
name|roleNames
index|[
name|i
index|]
argument_list|,
literal|"me"
argument_list|)
expr_stmt|;
block|}
name|outStr
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
expr_stmt|;
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|ROLE_TABLE
argument_list|,
literal|null
argument_list|,
literal|"role."
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"{\"roleName\":\"role0\",\"createTime\":now,\"ownerName\":\"me\"}"
operator|+
name|lsep
operator|+
literal|"{\"roleName\":\"role1\",\"createTime\":now,\"ownerName\":\"me\"}"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
operator|.
name|replaceAll
argument_list|(
literal|"createTime\":[0-9]+"
argument_list|,
literal|"createTime\":now"
argument_list|)
argument_list|)
expr_stmt|;
name|outStr
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
expr_stmt|;
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|ROLE_TABLE
argument_list|,
literal|"role1"
argument_list|,
literal|null
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"{\"roleName\":\"role1\",\"createTime\":now,\"ownerName\":\"me\"}"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
operator|.
name|replaceAll
argument_list|(
literal|"createTime\":[0-9]+"
argument_list|,
literal|"createTime\":now"
argument_list|)
argument_list|)
expr_stmt|;
name|Role
name|role1
init|=
name|store
operator|.
name|getRole
argument_list|(
literal|"role1"
argument_list|)
decl_stmt|;
name|store
operator|.
name|grantRole
argument_list|(
name|role1
argument_list|,
literal|"fred"
argument_list|,
name|PrincipalType
operator|.
name|USER
argument_list|,
literal|"me"
argument_list|,
name|PrincipalType
operator|.
name|USER
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|store
operator|.
name|grantRole
argument_list|(
name|role1
argument_list|,
literal|"joanne"
argument_list|,
name|PrincipalType
operator|.
name|USER
argument_list|,
literal|"me"
argument_list|,
name|PrincipalType
operator|.
name|USER
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|outStr
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
expr_stmt|;
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|USER_TO_ROLE_TABLE
argument_list|,
literal|null
argument_list|,
literal|".*"
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"fred: role1"
operator|+
name|lsep
operator|+
literal|"joanne: role1"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|outStr
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
expr_stmt|;
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|USER_TO_ROLE_TABLE
argument_list|,
literal|"joanne"
argument_list|,
literal|null
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"role1"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|String
index|[]
name|funcNames
init|=
operator|new
name|String
index|[
literal|3
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|funcNames
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|funcNames
index|[
name|i
index|]
operator|=
literal|"func"
operator|+
name|i
expr_stmt|;
name|Function
name|function
init|=
operator|new
name|Function
argument_list|(
name|funcNames
index|[
name|i
index|]
argument_list|,
literal|"db1"
argument_list|,
literal|"Function"
argument_list|,
literal|"me"
argument_list|,
name|PrincipalType
operator|.
name|USER
argument_list|,
literal|0
argument_list|,
name|FunctionType
operator|.
name|JAVA
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|store
operator|.
name|createFunction
argument_list|(
name|function
argument_list|)
expr_stmt|;
block|}
name|outStr
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
expr_stmt|;
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|FUNC_TABLE
argument_list|,
literal|"db1.func0"
argument_list|,
literal|null
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"{\"functionName\":\"func0\",\"dbName\":\"db1\","
operator|+
literal|"\"className\":\"Function\",\"ownerName\":\"me\",\"ownerType\":1,\"createTime\":0,"
operator|+
literal|"\"functionType\":1}"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|outStr
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
expr_stmt|;
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|FUNC_TABLE
argument_list|,
literal|null
argument_list|,
literal|".*"
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"{\"functionName\":\"func0\",\"dbName\":\"db1\","
operator|+
literal|"\"className\":\"Function\",\"ownerName\":\"me\",\"ownerType\":1,\"createTime\":0,"
operator|+
literal|"\"functionType\":1}"
operator|+
name|lsep
operator|+
literal|"{\"functionName\":\"func1\",\"dbName\":\"db1\","
operator|+
literal|"\"className\":\"Function\",\"ownerName\":\"me\",\"ownerType\":1,\"createTime\":0,"
operator|+
literal|"\"functionType\":1}"
operator|+
name|lsep
operator|+
literal|"{\"functionName\":\"func2\",\"dbName\":\"db1\","
operator|+
literal|"\"className\":\"Function\",\"ownerName\":\"me\",\"ownerType\":1,\"createTime\":0,"
operator|+
literal|"\"functionType\":1}"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|outStr
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
expr_stmt|;
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|FUNC_TABLE
argument_list|,
literal|null
argument_list|,
literal|"db1.func[12]"
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"{\"functionName\":\"func1\",\"dbName\":\"db1\","
operator|+
literal|"\"className\":\"Function\",\"ownerName\":\"me\",\"ownerType\":1,\"createTime\":0,"
operator|+
literal|"\"functionType\":1}"
operator|+
name|lsep
operator|+
literal|"{\"functionName\":\"func2\",\"dbName\":\"db1\","
operator|+
literal|"\"className\":\"Function\",\"ownerName\":\"me\",\"ownerType\":1,\"createTime\":0,"
operator|+
literal|"\"functionType\":1}"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|outStr
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
expr_stmt|;
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|GLOBAL_PRIVS_TABLE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"No global privileges"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|HiveObjectPrivilege
argument_list|>
name|privileges
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|HiveObjectRef
name|hiveObjRef
init|=
operator|new
name|HiveObjectRef
argument_list|(
name|HiveObjectType
operator|.
name|GLOBAL
argument_list|,
literal|"db0"
argument_list|,
literal|"tab0"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|PrivilegeGrantInfo
name|grantInfo
init|=
operator|new
name|PrivilegeGrantInfo
argument_list|(
literal|"read"
argument_list|,
literal|0
argument_list|,
literal|"me"
argument_list|,
name|PrincipalType
operator|.
name|USER
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|HiveObjectPrivilege
name|hop
init|=
operator|new
name|HiveObjectPrivilege
argument_list|(
name|hiveObjRef
argument_list|,
literal|"user"
argument_list|,
name|PrincipalType
operator|.
name|USER
argument_list|,
name|grantInfo
argument_list|)
decl_stmt|;
name|privileges
operator|.
name|add
argument_list|(
name|hop
argument_list|)
expr_stmt|;
name|grantInfo
operator|=
operator|new
name|PrivilegeGrantInfo
argument_list|(
literal|"create"
argument_list|,
literal|0
argument_list|,
literal|"me"
argument_list|,
name|PrincipalType
operator|.
name|USER
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|hop
operator|=
operator|new
name|HiveObjectPrivilege
argument_list|(
name|hiveObjRef
argument_list|,
literal|"user"
argument_list|,
name|PrincipalType
operator|.
name|USER
argument_list|,
name|grantInfo
argument_list|)
expr_stmt|;
name|privileges
operator|.
name|add
argument_list|(
name|hop
argument_list|)
expr_stmt|;
name|PrivilegeBag
name|pBag
init|=
operator|new
name|PrivilegeBag
argument_list|(
name|privileges
argument_list|)
decl_stmt|;
name|store
operator|.
name|grantPrivileges
argument_list|(
name|pBag
argument_list|)
expr_stmt|;
name|outStr
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
expr_stmt|;
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|GLOBAL_PRIVS_TABLE
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"{\"userPrivileges\":{\"user\":[{\"privilege\":\"read\",\"createTime\":0,"
operator|+
literal|"\"grantor\":\"me\",\"grantorType\":1,\"grantOption\":0},{\"privilege\":\"create\","
operator|+
literal|"\"createTime\":0,\"grantor\":\"me\",\"grantorType\":1,\"grantOption\":1}]}}"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|String
index|[]
name|tableNames
init|=
operator|new
name|String
index|[
literal|3
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|tableNames
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|tableNames
index|[
name|i
index|]
operator|=
literal|"tab"
operator|+
name|i
expr_stmt|;
name|StorageDescriptor
name|sd
init|=
operator|new
name|StorageDescriptor
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"col1"
argument_list|,
literal|"int"
argument_list|,
literal|""
argument_list|)
argument_list|,
operator|new
name|FieldSchema
argument_list|(
literal|"col2"
argument_list|,
literal|"varchar(32)"
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|,
literal|"/tmp"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|Collections
operator|.
expr|<
name|String
argument_list|,
name|String
operator|>
name|emptyMap
argument_list|()
argument_list|)
decl_stmt|;
name|Table
name|tab
init|=
operator|new
name|Table
argument_list|(
name|tableNames
index|[
name|i
index|]
argument_list|,
name|dbNames
index|[
literal|0
index|]
argument_list|,
literal|"me"
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"pcol1"
argument_list|,
literal|"string"
argument_list|,
literal|""
argument_list|)
argument_list|,
operator|new
name|FieldSchema
argument_list|(
literal|"pcol2"
argument_list|,
literal|"string"
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|,
name|Collections
operator|.
expr|<
name|String
argument_list|,
name|String
operator|>
name|emptyMap
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|store
operator|.
name|createTable
argument_list|(
name|tab
argument_list|)
expr_stmt|;
block|}
name|ColumnStatisticsDesc
name|tableStatsDesc
init|=
operator|new
name|ColumnStatisticsDesc
argument_list|(
literal|false
argument_list|,
literal|"db0"
argument_list|,
literal|"tab0"
argument_list|)
decl_stmt|;
name|ColumnStatisticsData
name|tcsd
init|=
operator|new
name|ColumnStatisticsData
argument_list|()
decl_stmt|;
name|LongColumnStatsData
name|tlcsd
init|=
operator|new
name|LongColumnStatsData
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|tlcsd
operator|.
name|setLowValue
argument_list|(
operator|-
literal|95
argument_list|)
expr_stmt|;
name|tlcsd
operator|.
name|setHighValue
argument_list|(
literal|95
argument_list|)
expr_stmt|;
name|tcsd
operator|.
name|setLongStats
argument_list|(
name|tlcsd
argument_list|)
expr_stmt|;
name|ColumnStatisticsData
name|tcsd2
init|=
operator|new
name|ColumnStatisticsData
argument_list|()
decl_stmt|;
name|tcsd2
operator|.
name|setStringStats
argument_list|(
operator|new
name|StringColumnStatsData
argument_list|(
literal|97
argument_list|,
literal|18.78
argument_list|,
literal|29
argument_list|,
literal|397
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ColumnStatisticsObj
argument_list|>
name|tcsos
init|=
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|ColumnStatisticsObj
argument_list|(
literal|"col1"
argument_list|,
literal|"int"
argument_list|,
name|tcsd
argument_list|)
argument_list|,
operator|new
name|ColumnStatisticsObj
argument_list|(
literal|"col2"
argument_list|,
literal|"varchar(32)"
argument_list|,
name|tcsd2
argument_list|)
argument_list|)
decl_stmt|;
name|ColumnStatistics
name|tStatObj
init|=
operator|new
name|ColumnStatistics
argument_list|(
name|tableStatsDesc
argument_list|,
name|tcsos
argument_list|)
decl_stmt|;
name|store
operator|.
name|updateTableColumnStatistics
argument_list|(
name|tStatObj
argument_list|)
expr_stmt|;
name|outStr
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
expr_stmt|;
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|TABLE_TABLE
argument_list|,
literal|"db0.tab1"
argument_list|,
literal|null
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"{\"tableName\":\"tab1\",\"dbName\":\"db0\",\"owner\":\"me\","
operator|+
literal|"\"createTime\":0,\"lastAccessTime\":0,\"retention\":0,"
operator|+
literal|"\"partitionKeys\":[{\"name\":\"pcol1\",\"type\":\"string\",\"comment\":\"\"},"
operator|+
literal|"{\"name\":\"pcol2\",\"type\":\"string\",\"comment\":\"\"}],\"parameters\":{},"
operator|+
literal|"\"tableType\":\"\"} sdHash: qQTgZAi5VzgpozzFGmIVTQ stats:"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|outStr
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
expr_stmt|;
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|TABLE_TABLE
argument_list|,
literal|null
argument_list|,
literal|"db0.*"
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"{\"tableName\":\"tab0\",\"dbName\":\"db0\",\"owner\":\"me\","
operator|+
literal|"\"createTime\":0,\"lastAccessTime\":0,\"retention\":0,"
operator|+
literal|"\"partitionKeys\":[{\"name\":\"pcol1\",\"type\":\"string\",\"comment\":\"\"},"
operator|+
literal|"{\"name\":\"pcol2\",\"type\":\"string\",\"comment\":\"\"}],\"parameters\":{},"
operator|+
literal|"\"tableType\":\"\"} sdHash: qQTgZAi5VzgpozzFGmIVTQ stats: column "
operator|+
literal|"col1: {\"colName\":\"col1\",\"colType\":\"int\","
operator|+
literal|"\"statsData\":{\"longStats\":{\"lowValue\":-95,\"highValue\":95,\"numNulls\":1,"
operator|+
literal|"\"numDVs\":2}}} column col2: {\"colName\":\"col2\",\"colType\":\"varchar(32)\","
operator|+
literal|"\"statsData\":{\"stringStats\":{\"maxColLen\":97,\"avgColLen\":18.78,"
operator|+
literal|"\"numNulls\":29,\"numDVs\":397}}}"
operator|+
name|lsep
operator|+
literal|"{\"tableName\":\"tab1\",\"dbName\":\"db0\",\"owner\":\"me\",\"createTime\":0,"
operator|+
literal|"\"lastAccessTime\":0,\"retention\":0,\"partitionKeys\":[{\"name\":\"pcol1\","
operator|+
literal|"\"type\":\"string\",\"comment\":\"\"},{\"name\":\"pcol2\",\"type\":\"string\","
operator|+
literal|"\"comment\":\"\"}],\"parameters\":{},\"tableType\":\"\"} sdHash: "
operator|+
literal|"qQTgZAi5VzgpozzFGmIVTQ stats:"
operator|+
name|lsep
operator|+
literal|"{\"tableName\":\"tab2\",\"dbName\":\"db0\",\"owner\":\"me\",\"createTime\":0,"
operator|+
literal|"\"lastAccessTime\":0,\"retention\":0,\"partitionKeys\":[{\"name\":\"pcol1\","
operator|+
literal|"\"type\":\"string\",\"comment\":\"\"},{\"name\":\"pcol2\",\"type\":\"string\","
operator|+
literal|"\"comment\":\"\"}],\"parameters\":{},\"tableType\":\"\"} sdHash: "
operator|+
literal|"qQTgZAi5VzgpozzFGmIVTQ stats:"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|partVals
init|=
name|Arrays
operator|.
name|asList
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"c"
argument_list|,
literal|"d"
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|List
argument_list|<
name|String
argument_list|>
name|pv
range|:
name|partVals
control|)
block|{
name|StorageDescriptor
name|sd
init|=
operator|new
name|StorageDescriptor
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"col1"
argument_list|,
literal|"int"
argument_list|,
literal|""
argument_list|)
argument_list|,
operator|new
name|FieldSchema
argument_list|(
literal|"col2"
argument_list|,
literal|"varchar(32)"
argument_list|,
literal|""
argument_list|)
argument_list|)
argument_list|,
literal|"/tmp"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|Collections
operator|.
expr|<
name|String
argument_list|,
name|String
operator|>
name|emptyMap
argument_list|()
argument_list|)
decl_stmt|;
name|Partition
name|p
init|=
operator|new
name|Partition
argument_list|(
name|pv
argument_list|,
literal|"db0"
argument_list|,
literal|"tab1"
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
name|Collections
operator|.
expr|<
name|String
argument_list|,
name|String
operator|>
name|emptyMap
argument_list|()
argument_list|)
decl_stmt|;
name|store
operator|.
name|addPartition
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
name|outStr
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
expr_stmt|;
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|PART_TABLE
argument_list|,
literal|"db0.tab1.a.b"
argument_list|,
literal|null
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"{\"values\":[\"a\",\"b\"],\"dbName\":\"db0\",\"tableName\":\"tab1\","
operator|+
literal|"\"createTime\":0,\"lastAccessTime\":0,\"parameters\":{}} sdHash: "
operator|+
literal|"qQTgZAi5VzgpozzFGmIVTQ stats:"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|ColumnStatisticsDesc
name|statsDesc
init|=
operator|new
name|ColumnStatisticsDesc
argument_list|(
literal|false
argument_list|,
literal|"db0"
argument_list|,
literal|"tab1"
argument_list|)
decl_stmt|;
name|statsDesc
operator|.
name|setPartName
argument_list|(
literal|"pcol1=c/pcol2=d"
argument_list|)
expr_stmt|;
name|ColumnStatisticsData
name|csd1
init|=
operator|new
name|ColumnStatisticsData
argument_list|()
decl_stmt|;
name|LongColumnStatsData
name|lcsd
init|=
operator|new
name|LongColumnStatsData
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|lcsd
operator|.
name|setLowValue
argument_list|(
operator|-
literal|95
argument_list|)
expr_stmt|;
name|lcsd
operator|.
name|setHighValue
argument_list|(
literal|95
argument_list|)
expr_stmt|;
name|csd1
operator|.
name|setLongStats
argument_list|(
name|lcsd
argument_list|)
expr_stmt|;
name|ColumnStatisticsData
name|csd2
init|=
operator|new
name|ColumnStatisticsData
argument_list|()
decl_stmt|;
name|csd2
operator|.
name|setStringStats
argument_list|(
operator|new
name|StringColumnStatsData
argument_list|(
literal|97
argument_list|,
literal|18.78
argument_list|,
literal|29
argument_list|,
literal|397
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ColumnStatisticsObj
argument_list|>
name|csos
init|=
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|ColumnStatisticsObj
argument_list|(
literal|"col1"
argument_list|,
literal|"int"
argument_list|,
name|csd1
argument_list|)
argument_list|,
operator|new
name|ColumnStatisticsObj
argument_list|(
literal|"col2"
argument_list|,
literal|"varchar(32)"
argument_list|,
name|csd2
argument_list|)
argument_list|)
decl_stmt|;
name|ColumnStatistics
name|statsObj
init|=
operator|new
name|ColumnStatistics
argument_list|(
name|statsDesc
argument_list|,
name|csos
argument_list|)
decl_stmt|;
name|store
operator|.
name|updatePartitionColumnStatistics
argument_list|(
name|statsObj
argument_list|,
name|partVals
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|outStr
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
expr_stmt|;
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|PART_TABLE
argument_list|,
literal|"db0.tab1.c.d"
argument_list|,
literal|null
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"{\"values\":[\"c\",\"d\"],\"dbName\":\"db0\",\"tableName\":\"tab1\","
operator|+
literal|"\"createTime\":0,\"lastAccessTime\":0,\"parameters\":{}} sdHash: qQTgZAi5VzgpozzFGmIVTQ "
operator|+
literal|"stats: column col1: {\"colName\":\"col1\",\"colType\":\"int\","
operator|+
literal|"\"statsData\":{\"longStats\":{\"lowValue\":-95,\"highValue\":95,\"numNulls\":1,"
operator|+
literal|"\"numDVs\":2}}} column col2: {\"colName\":\"col2\",\"colType\":\"varchar(32)\","
operator|+
literal|"\"statsData\":{\"stringStats\":{\"maxColLen\":97,\"avgColLen\":18.78,\"numNulls\":29,"
operator|+
literal|"\"numDVs\":397}}}"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|outStr
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
expr_stmt|;
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|PART_TABLE
argument_list|,
literal|null
argument_list|,
literal|"db0.tab1"
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"{\"values\":[\"a\",\"b\"],\"dbName\":\"db0\",\"tableName\":\"tab1\","
operator|+
literal|"\"createTime\":0,\"lastAccessTime\":0,\"parameters\":{}} sdHash: qQTgZAi5VzgpozzFGmIVTQ "
operator|+
literal|"stats:"
operator|+
name|lsep
operator|+
literal|"{\"values\":[\"c\",\"d\"],\"dbName\":\"db0\",\"tableName\":\"tab1\",\"createTime\":0,"
operator|+
literal|"\"lastAccessTime\":0,\"parameters\":{}} sdHash: qQTgZAi5VzgpozzFGmIVTQ stats: column "
operator|+
literal|"col1: {\"colName\":\"col1\",\"colType\":\"int\","
operator|+
literal|"\"statsData\":{\"longStats\":{\"lowValue\":-95,\"highValue\":95,\"numNulls\":1,"
operator|+
literal|"\"numDVs\":2}}} column col2: {\"colName\":\"col2\",\"colType\":\"varchar(32)\","
operator|+
literal|"\"statsData\":{\"stringStats\":{\"maxColLen\":97,\"avgColLen\":18.78,\"numNulls\":29,"
operator|+
literal|"\"numDVs\":397}}}"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|outStr
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
expr_stmt|;
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|PART_TABLE
argument_list|,
literal|null
argument_list|,
literal|"db0.tab1.a"
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"{\"values\":[\"a\",\"b\"],\"dbName\":\"db0\",\"tableName\":\"tab1\","
operator|+
literal|"\"createTime\":0,\"lastAccessTime\":0,\"parameters\":{}} sdHash: qQTgZAi5VzgpozzFGmIVTQ "
operator|+
literal|"stats:"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|outStr
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
expr_stmt|;
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|SD_TABLE
argument_list|,
literal|"qQTgZAi5VzgpozzFGmIVTQ"
argument_list|,
literal|null
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"{\"cols\":[{\"name\":\"col1\",\"type\":\"int\",\"comment\":\"\"},"
operator|+
literal|"{\"name\":\"col2\",\"type\":\"varchar(32)\",\"comment\":\"\"}],\"compressed\":0,"
operator|+
literal|"\"numBuckets\":0,\"bucketCols\":[],\"sortCols\":[],\"storedAsSubDirectories\":0}"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|outStr
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
expr_stmt|;
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|SD_TABLE
argument_list|,
literal|null
argument_list|,
literal|"whatever"
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"qQTgZAi5VzgpozzFGmIVTQ: {\"cols\":[{\"name\":\"col1\",\"type\":\"int\","
operator|+
literal|"\"comment\":\"\"},"
operator|+
literal|"{\"name\":\"col2\",\"type\":\"varchar(32)\",\"comment\":\"\"}],\"compressed\":0,"
operator|+
literal|"\"numBuckets\":0,\"bucketCols\":[],\"sortCols\":[],\"storedAsSubDirectories\":0}"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|outStr
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
expr_stmt|;
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|SECURITY_TABLE
argument_list|,
literal|null
argument_list|,
literal|"whatever"
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"No security related entries"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|store
operator|.
name|addMasterKey
argument_list|(
literal|"this be a key"
argument_list|)
expr_stmt|;
name|store
operator|.
name|addToken
argument_list|(
literal|"tokenid"
argument_list|,
literal|"delegation token"
argument_list|)
expr_stmt|;
name|outStr
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
expr_stmt|;
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|SECURITY_TABLE
argument_list|,
literal|null
argument_list|,
literal|"whatever"
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Master key 0: this be a key"
operator|+
name|lsep
operator|+
literal|"Delegation token tokenid: delegation token"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|outStr
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|out
operator|=
operator|new
name|PrintStream
argument_list|(
name|outStr
argument_list|)
expr_stmt|;
name|tool
operator|.
name|go
argument_list|(
literal|false
argument_list|,
name|HBaseReadWrite
operator|.
name|SEQUENCES_TABLE
argument_list|,
literal|null
argument_list|,
literal|"whatever"
argument_list|,
name|conf
argument_list|,
name|out
argument_list|,
name|err
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"mk: 1"
operator|+
name|lsep
argument_list|,
name|outStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

