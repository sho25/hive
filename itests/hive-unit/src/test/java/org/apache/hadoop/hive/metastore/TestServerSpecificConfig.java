begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
operator|.
name|ConfVars
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|server
operator|.
name|HiveServer2
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|TestServerSpecificConfig
block|{
specifier|private
specifier|static
name|URL
name|oldDefaultHiveSite
init|=
name|HiveConf
operator|.
name|getHiveSiteLocation
argument_list|()
decl_stmt|;
comment|/**    * Verify if appropriate server configuration (metastore, hiveserver2) get    * loaded when the embedded clients are loaded    *    * Checks values used in the configs used for testing.    *    * @throws IOException    * @throws Throwable    */
annotation|@
name|Test
specifier|public
name|void
name|testServerConfigsEmbeddedMetastore
parameter_list|()
throws|throws
name|IOException
throws|,
name|Throwable
block|{
comment|// set hive-site.xml to default hive-site.xml that has embedded metastore
name|HiveConf
operator|.
name|setHiveSiteLocation
argument_list|(
name|oldDefaultHiveSite
argument_list|)
expr_stmt|;
name|HiveConf
name|conf
init|=
operator|new
name|HiveConf
argument_list|()
decl_stmt|;
comment|// check config properties expected with embedded metastore client
name|assertTrue
argument_list|(
name|HiveConf
operator|.
name|isLoadMetastoreConfig
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"from.hivemetastore-site.xml"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"hive.dummyparam.test.server.specific.config.override"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"from.hivemetastore-site.xml"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"hive.dummyparam.test.server.specific.config.metastoresite"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"from.hive-site.xml"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"hive.dummyparam.test.server.specific.config.hivesite"
argument_list|)
argument_list|)
expr_stmt|;
comment|// verify that hiveserver2 config is not loaded
name|assertFalse
argument_list|(
name|HiveConf
operator|.
name|isLoadHiveServer2Config
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|conf
operator|.
name|get
argument_list|(
literal|"hive.dummyparam.test.server.specific.config.hiveserver2site"
argument_list|)
argument_list|)
expr_stmt|;
comment|// check if hiveserver2 config gets loaded when HS2 is started
operator|new
name|HiveServer2
argument_list|()
expr_stmt|;
name|conf
operator|=
operator|new
name|HiveConf
argument_list|()
expr_stmt|;
name|verifyHS2ConfParams
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"from.hivemetastore-site.xml"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"hive.dummyparam.test.server.specific.config.metastoresite"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|verifyHS2ConfParams
parameter_list|(
name|HiveConf
name|conf
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|HiveConf
operator|.
name|isLoadHiveServer2Config
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"from.hiveserver2-site.xml"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"hive.dummyparam.test.server.specific.config.override"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"from.hiveserver2-site.xml"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"hive.dummyparam.test.server.specific.config.hiveserver2site"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"from.hive-site.xml"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"hive.dummyparam.test.server.specific.config.hivesite"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Ensure that system properties still get precedence. Config params set as    * -hiveconf on commandline get set as system properties They should have the    * final say    */
annotation|@
name|Test
specifier|public
name|void
name|testSystemPropertyPrecedence
parameter_list|()
block|{
comment|// Using property defined in HiveConf.ConfVars to test System property
comment|// overriding
specifier|final
name|String
name|OVERRIDE_KEY
init|=
literal|"hive.conf.restricted.list"
decl_stmt|;
try|try
block|{
name|HiveConf
operator|.
name|setHiveSiteLocation
argument_list|(
name|oldDefaultHiveSite
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
name|OVERRIDE_KEY
argument_list|,
literal|"from.sysprop"
argument_list|)
expr_stmt|;
name|HiveConf
name|conf
init|=
operator|new
name|HiveConf
argument_list|()
decl_stmt|;
comment|// ensure metatore site.xml does not get to override this
name|assertEquals
argument_list|(
literal|"from.sysprop"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
name|OVERRIDE_KEY
argument_list|)
argument_list|)
expr_stmt|;
comment|// get HS2 site.xml loaded
operator|new
name|HiveServer2
argument_list|()
expr_stmt|;
name|conf
operator|=
operator|new
name|HiveConf
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|HiveConf
operator|.
name|isLoadHiveServer2Config
argument_list|()
argument_list|)
expr_stmt|;
comment|// ensure hiveserver2 site.xml does not get to override this
name|assertEquals
argument_list|(
literal|"from.sysprop"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
name|OVERRIDE_KEY
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|System
operator|.
name|getProperties
argument_list|()
operator|.
name|remove
argument_list|(
name|OVERRIDE_KEY
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Before
specifier|public
name|void
name|resetDefaults
parameter_list|()
throws|throws
name|SecurityException
throws|,
name|IllegalArgumentException
throws|,
name|NoSuchFieldException
throws|,
name|IllegalAccessException
block|{
comment|// re-set the static variables in HiveConf to default values
comment|// set load server conf booleans to false
name|HiveConf
operator|.
name|setLoadMetastoreConfig
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|HiveConf
operator|.
name|setLoadHiveServer2Config
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test to ensure that HiveConf does not try to load hivemetastore-site.xml,    * when remote metastore is used.    *    * @throws IOException    * @throws Throwable    */
annotation|@
name|Test
specifier|public
name|void
name|testHiveMetastoreRemoteConfig
parameter_list|()
throws|throws
name|IOException
throws|,
name|Throwable
block|{
comment|// switch to hive-site.xml with remote metastore
name|setHiveSiteWithRemoteMetastore
argument_list|()
expr_stmt|;
comment|// Set HiveConf statics to default values
name|resetDefaults
argument_list|()
expr_stmt|;
comment|// create hiveconf again to run initialization code, to see if value changes
name|HiveConf
name|conf
init|=
operator|new
name|HiveConf
argument_list|()
decl_stmt|;
comment|// check the properties expected in hive client without metastore
name|verifyMetastoreConfNotLoaded
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"from.hive-site.xml"
argument_list|,
name|conf
operator|.
name|get
argument_list|(
literal|"hive.dummyparam.test.server.specific.config.override"
argument_list|)
argument_list|)
expr_stmt|;
comment|// get HS2 site.xml loaded
operator|new
name|HiveServer2
argument_list|()
expr_stmt|;
name|conf
operator|=
operator|new
name|HiveConf
argument_list|()
expr_stmt|;
name|verifyHS2ConfParams
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|verifyMetastoreConfNotLoaded
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|verifyMetastoreConfNotLoaded
parameter_list|(
name|HiveConf
name|conf
parameter_list|)
block|{
name|assertFalse
argument_list|(
name|HiveConf
operator|.
name|isLoadMetastoreConfig
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|conf
operator|.
name|get
argument_list|(
literal|"hive.dummyparam.test.server.specific.config.metastoresite"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Set new hive-site.xml file location that has remote metastore config    *    * @throws IOException    */
specifier|private
name|void
name|setHiveSiteWithRemoteMetastore
parameter_list|()
throws|throws
name|IOException
block|{
comment|// new *hive-site.xml file
name|String
name|newConfFile
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"test.tmp.dir"
argument_list|)
operator|+
name|File
operator|.
name|separator
operator|+
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
operator|+
literal|"hive-site.xml"
decl_stmt|;
comment|// create a new conf file, using contents from current one
comment|// modifying the meastore.uri property
name|File
name|hiveSite
init|=
operator|new
name|File
argument_list|(
name|newConfFile
argument_list|)
decl_stmt|;
name|FileOutputStream
name|out
init|=
operator|new
name|FileOutputStream
argument_list|(
name|hiveSite
argument_list|)
decl_stmt|;
name|HiveConf
operator|.
name|setHiveSiteLocation
argument_list|(
name|oldDefaultHiveSite
argument_list|)
expr_stmt|;
name|HiveConf
name|defaultHiveConf
init|=
operator|new
name|HiveConf
argument_list|()
decl_stmt|;
name|defaultHiveConf
operator|.
name|setVar
argument_list|(
name|ConfVars
operator|.
name|METASTOREURIS
argument_list|,
literal|"dummyvalue"
argument_list|)
expr_stmt|;
comment|// reset to the hive-site.xml values for following param
name|defaultHiveConf
operator|.
name|set
argument_list|(
literal|"hive.dummyparam.test.server.specific.config.override"
argument_list|,
literal|"from.hive-site.xml"
argument_list|)
expr_stmt|;
name|defaultHiveConf
operator|.
name|unset
argument_list|(
literal|"hive.dummyparam.test.server.specific.config.metastoresite"
argument_list|)
expr_stmt|;
name|defaultHiveConf
operator|.
name|writeXml
argument_list|(
name|out
argument_list|)
expr_stmt|;
comment|// set the new hive-site.xml
name|HiveConf
operator|.
name|setHiveSiteLocation
argument_list|(
name|hiveSite
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

