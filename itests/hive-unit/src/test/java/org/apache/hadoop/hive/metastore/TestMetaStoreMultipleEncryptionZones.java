begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|CommonConfigurationKeysPublic
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FSDataOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|MiniDFSCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|ReplChangeManager
operator|.
name|RecycleType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|FieldSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|shims
operator|.
name|HadoopShims
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DFSTestUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|shims
operator|.
name|ShimLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
operator|.
name|RemoteException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
operator|.
name|builder
operator|.
name|DatabaseBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
operator|.
name|builder
operator|.
name|TableBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|NoSuchObjectException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|InvalidOperationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|MetaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|TException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_comment
comment|/**  * TestMetaStoreAuthorization.  */
end_comment

begin_class
specifier|public
class|class
name|TestMetaStoreMultipleEncryptionZones
block|{
specifier|private
specifier|static
name|HiveMetaStoreClient
name|client
decl_stmt|;
specifier|private
specifier|static
name|HiveConf
name|hiveConf
decl_stmt|;
specifier|private
specifier|static
name|Configuration
name|conf
decl_stmt|;
specifier|private
specifier|static
name|Warehouse
name|warehouse
decl_stmt|;
specifier|private
specifier|static
name|FileSystem
name|warehouseFs
decl_stmt|;
specifier|private
specifier|static
name|MiniDFSCluster
name|miniDFSCluster
decl_stmt|;
specifier|private
specifier|static
name|String
name|cmroot
decl_stmt|;
specifier|private
specifier|static
name|FileSystem
name|fs
decl_stmt|;
specifier|private
specifier|static
name|HadoopShims
operator|.
name|HdfsEncryptionShim
name|shimCm
decl_stmt|;
specifier|private
specifier|static
name|String
name|cmrootEncrypted
decl_stmt|;
specifier|private
specifier|static
name|String
name|jksFile
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.io.tmpdir"
argument_list|)
operator|+
literal|"/test.jks"
decl_stmt|;
specifier|private
specifier|static
name|String
name|cmrootFallBack
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
comment|//Create secure cluster
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"hadoop.security.key.provider.path"
argument_list|,
literal|"jceks://file"
operator|+
name|jksFile
argument_list|)
expr_stmt|;
name|miniDFSCluster
operator|=
operator|new
name|MiniDFSCluster
operator|.
name|Builder
argument_list|(
name|conf
argument_list|)
operator|.
name|numDataNodes
argument_list|(
literal|1
argument_list|)
operator|.
name|format
argument_list|(
literal|true
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|DFSTestUtil
operator|.
name|createKey
argument_list|(
literal|"test_key_cm"
argument_list|,
name|miniDFSCluster
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|DFSTestUtil
operator|.
name|createKey
argument_list|(
literal|"test_key_db"
argument_list|,
name|miniDFSCluster
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|hiveConf
operator|=
operator|new
name|HiveConf
argument_list|(
name|TestReplChangeManager
operator|.
name|class
argument_list|)
expr_stmt|;
name|hiveConf
operator|.
name|setBoolean
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|REPLCMENABLED
operator|.
name|varname
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|hiveConf
operator|.
name|setInt
argument_list|(
name|CommonConfigurationKeysPublic
operator|.
name|FS_TRASH_INTERVAL_KEY
argument_list|,
literal|60
argument_list|)
expr_stmt|;
name|hiveConf
operator|.
name|set
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTOREWAREHOUSE
operator|.
name|varname
argument_list|,
literal|"hdfs://"
operator|+
name|miniDFSCluster
operator|.
name|getNameNode
argument_list|()
operator|.
name|getHostAndPort
argument_list|()
operator|+
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTOREWAREHOUSE
operator|.
name|defaultStrVal
argument_list|)
expr_stmt|;
name|cmroot
operator|=
literal|"hdfs://"
operator|+
name|miniDFSCluster
operator|.
name|getNameNode
argument_list|()
operator|.
name|getHostAndPort
argument_list|()
operator|+
literal|"/cmroot"
expr_stmt|;
name|cmrootFallBack
operator|=
literal|"hdfs://"
operator|+
name|miniDFSCluster
operator|.
name|getNameNode
argument_list|()
operator|.
name|getHostAndPort
argument_list|()
operator|+
literal|"/cmrootFallback"
expr_stmt|;
name|cmrootEncrypted
operator|=
literal|"cmrootEncrypted"
expr_stmt|;
name|hiveConf
operator|.
name|set
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|REPLCMDIR
operator|.
name|varname
argument_list|,
name|cmroot
argument_list|)
expr_stmt|;
name|hiveConf
operator|.
name|set
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|REPLCMENCRYPTEDDIR
operator|.
name|varname
argument_list|,
name|cmrootEncrypted
argument_list|)
expr_stmt|;
name|hiveConf
operator|.
name|set
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|REPLCMFALLBACKNONENCRYPTEDDIR
operator|.
name|varname
argument_list|,
name|cmrootFallBack
argument_list|)
expr_stmt|;
name|initReplChangeManager
argument_list|()
expr_stmt|;
comment|//Create cm in encrypted zone
name|shimCm
operator|=
name|ShimLoader
operator|.
name|getHadoopShims
argument_list|()
operator|.
name|createHdfsEncryptionShim
argument_list|(
name|fs
argument_list|,
name|conf
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|=
operator|new
name|HiveMetaStoreClient
argument_list|(
name|hiveConf
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Unable to open the metastore"
argument_list|)
expr_stmt|;
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
name|StringUtils
operator|.
name|stringifyException
argument_list|(
name|e
argument_list|)
argument_list|)
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
specifier|private
specifier|static
name|void
name|initReplChangeManager
parameter_list|()
throws|throws
name|Exception
block|{
name|warehouse
operator|=
operator|new
name|Warehouse
argument_list|(
name|hiveConf
argument_list|)
expr_stmt|;
name|warehouseFs
operator|=
name|warehouse
operator|.
name|getWhRoot
argument_list|()
operator|.
name|getFileSystem
argument_list|(
name|hiveConf
argument_list|)
expr_stmt|;
name|fs
operator|=
operator|new
name|Path
argument_list|(
name|cmroot
argument_list|)
operator|.
name|getFileSystem
argument_list|(
name|hiveConf
argument_list|)
expr_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|warehouse
operator|.
name|getWhRoot
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|miniDFSCluster
operator|.
name|shutdown
argument_list|()
expr_stmt|;
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Unable to close metastore"
argument_list|)
expr_stmt|;
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
name|StringUtils
operator|.
name|stringifyException
argument_list|(
name|e
argument_list|)
argument_list|)
expr_stmt|;
throw|throw
name|e
throw|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|dropTableWithDifferentEncryptionZonesDifferentKey
parameter_list|()
throws|throws
name|Throwable
block|{
name|String
name|dbName1
init|=
literal|"encrdbdiffkey1"
decl_stmt|;
name|String
name|dbName2
init|=
literal|"encrdbdiffkey2"
decl_stmt|;
name|String
name|tblName1
init|=
literal|"encrtbl1"
decl_stmt|;
name|String
name|tblName2
init|=
literal|"encrtbl2"
decl_stmt|;
name|String
name|typeName
init|=
literal|"Person"
decl_stmt|;
name|silentDropDatabase
argument_list|(
name|dbName1
argument_list|)
expr_stmt|;
name|silentDropDatabase
argument_list|(
name|dbName2
argument_list|)
expr_stmt|;
operator|new
name|DatabaseBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|dbName1
argument_list|)
operator|.
name|addParam
argument_list|(
literal|"repl.source.for"
argument_list|,
literal|"1, 2, 3"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
operator|new
name|DatabaseBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|dbName2
argument_list|)
operator|.
name|addParam
argument_list|(
literal|"repl.source.for"
argument_list|,
literal|"1, 2, 3"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropType
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|Type
name|typ1
init|=
operator|new
name|Type
argument_list|()
decl_stmt|;
name|typ1
operator|.
name|setName
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|setFields
argument_list|(
operator|new
name|ArrayList
argument_list|<>
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"name"
argument_list|,
name|ColumnType
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"income"
argument_list|,
name|ColumnType
operator|.
name|INT_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|createType
argument_list|(
name|typ1
argument_list|)
expr_stmt|;
name|Path
name|dirDb1
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getWhRoot
argument_list|()
argument_list|,
name|dbName1
operator|+
literal|".db"
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|delete
argument_list|(
name|dirDb1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirDb1
argument_list|)
expr_stmt|;
name|shimCm
operator|.
name|createEncryptionZone
argument_list|(
name|dirDb1
argument_list|,
literal|"test_key_db"
argument_list|)
expr_stmt|;
name|Path
name|dirTbl1
init|=
operator|new
name|Path
argument_list|(
name|dirDb1
argument_list|,
name|tblName1
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirTbl1
argument_list|)
expr_stmt|;
name|Path
name|part11
init|=
operator|new
name|Path
argument_list|(
name|dirTbl1
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part11
argument_list|,
literal|"testClearer11"
argument_list|)
expr_stmt|;
name|Path
name|dirDb2
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getWhRoot
argument_list|()
argument_list|,
name|dbName2
operator|+
literal|".db"
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|delete
argument_list|(
name|dirDb2
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirDb2
argument_list|)
expr_stmt|;
name|shimCm
operator|.
name|createEncryptionZone
argument_list|(
name|dirDb2
argument_list|,
literal|"test_key_cm"
argument_list|)
expr_stmt|;
name|Path
name|dirTbl2
init|=
operator|new
name|Path
argument_list|(
name|dirDb2
argument_list|,
name|tblName2
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirTbl2
argument_list|)
expr_stmt|;
name|Path
name|part12
init|=
operator|new
name|Path
argument_list|(
name|dirTbl2
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part12
argument_list|,
literal|"testClearer12"
argument_list|)
expr_stmt|;
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName1
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tblName1
argument_list|)
operator|.
name|setCols
argument_list|(
name|typ1
operator|.
name|getFields
argument_list|()
argument_list|)
operator|.
name|setNumBuckets
argument_list|(
literal|1
argument_list|)
operator|.
name|addBucketCol
argument_list|(
literal|"name"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"test_param_1"
argument_list|,
literal|"Use this for comments etc"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|Table
name|tbl
init|=
name|client
operator|.
name|getTable
argument_list|(
name|dbName1
argument_list|,
name|tblName1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|tbl
argument_list|)
expr_stmt|;
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName2
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tblName2
argument_list|)
operator|.
name|setCols
argument_list|(
name|typ1
operator|.
name|getFields
argument_list|()
argument_list|)
operator|.
name|setNumBuckets
argument_list|(
literal|1
argument_list|)
operator|.
name|addBucketCol
argument_list|(
literal|"name"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"test_param_1"
argument_list|,
literal|"Use this for comments etc"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|boolean
name|exceptionThrown
init|=
literal|false
decl_stmt|;
try|try
block|{
name|client
operator|.
name|dropTable
argument_list|(
name|dbName1
argument_list|,
name|tblName1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"can't be moved from encryption zone"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
name|part11
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|getTable
argument_list|(
name|dbName1
argument_list|,
name|tblName1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchObjectException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|exceptionThrown
operator|=
literal|false
expr_stmt|;
try|try
block|{
name|client
operator|.
name|dropTable
argument_list|(
name|dbName2
argument_list|,
name|tblName2
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"can't be moved from encryption zone"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
name|part12
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|getTable
argument_list|(
name|dbName2
argument_list|,
name|tblName2
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchObjectException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|dropTableWithTableAtEncryptionZoneRoot
parameter_list|()
throws|throws
name|Throwable
block|{
name|String
name|dbName
init|=
literal|"encrdbroot"
decl_stmt|;
name|String
name|tblName1
init|=
literal|"encrtbl1"
decl_stmt|;
name|String
name|tblName2
init|=
literal|"encrtbl2"
decl_stmt|;
name|String
name|typeName
init|=
literal|"Person"
decl_stmt|;
name|silentDropDatabase
argument_list|(
name|dbName
argument_list|)
expr_stmt|;
operator|new
name|DatabaseBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|dbName
argument_list|)
operator|.
name|addParam
argument_list|(
literal|"repl.source.for"
argument_list|,
literal|"1, 2, 3"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropType
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|Type
name|typ1
init|=
operator|new
name|Type
argument_list|()
decl_stmt|;
name|typ1
operator|.
name|setName
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|setFields
argument_list|(
operator|new
name|ArrayList
argument_list|<>
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"name"
argument_list|,
name|ColumnType
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"income"
argument_list|,
name|ColumnType
operator|.
name|INT_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|createType
argument_list|(
name|typ1
argument_list|)
expr_stmt|;
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tblName1
argument_list|)
operator|.
name|setCols
argument_list|(
name|typ1
operator|.
name|getFields
argument_list|()
argument_list|)
operator|.
name|setNumBuckets
argument_list|(
literal|1
argument_list|)
operator|.
name|addBucketCol
argument_list|(
literal|"name"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"test_param_1"
argument_list|,
literal|"Use this for comments etc"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|Table
name|tbl
init|=
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|tbl
argument_list|)
expr_stmt|;
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tblName2
argument_list|)
operator|.
name|setCols
argument_list|(
name|typ1
operator|.
name|getFields
argument_list|()
argument_list|)
operator|.
name|setNumBuckets
argument_list|(
literal|1
argument_list|)
operator|.
name|addBucketCol
argument_list|(
literal|"name"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"test_param_1"
argument_list|,
literal|"Use this for comments etc"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|Path
name|dirDb
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getWhRoot
argument_list|()
argument_list|,
name|dbName
operator|+
literal|".db"
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirDb
argument_list|)
expr_stmt|;
name|Path
name|dirTbl1
init|=
operator|new
name|Path
argument_list|(
name|dirDb
argument_list|,
name|tblName1
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirTbl1
argument_list|)
expr_stmt|;
name|shimCm
operator|.
name|createEncryptionZone
argument_list|(
name|dirTbl1
argument_list|,
literal|"test_key_db"
argument_list|)
expr_stmt|;
name|Path
name|part11
init|=
operator|new
name|Path
argument_list|(
name|dirTbl1
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part11
argument_list|,
literal|"testClearer11"
argument_list|)
expr_stmt|;
name|Path
name|dirTbl2
init|=
operator|new
name|Path
argument_list|(
name|dirDb
argument_list|,
name|tblName2
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirTbl2
argument_list|)
expr_stmt|;
name|shimCm
operator|.
name|createEncryptionZone
argument_list|(
name|dirTbl2
argument_list|,
literal|"test_key_cm"
argument_list|)
expr_stmt|;
name|Path
name|part12
init|=
operator|new
name|Path
argument_list|(
name|dirTbl2
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part12
argument_list|,
literal|"testClearer12"
argument_list|)
expr_stmt|;
name|boolean
name|exceptionThrown
init|=
literal|false
decl_stmt|;
try|try
block|{
name|client
operator|.
name|dropTable
argument_list|(
name|dbName
argument_list|,
name|tblName1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"can't be moved from encryption zone"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
name|part11
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchObjectException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|exceptionThrown
operator|=
literal|false
expr_stmt|;
try|try
block|{
name|client
operator|.
name|dropTable
argument_list|(
name|dbName
argument_list|,
name|tblName2
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"can't be moved from encryption zone"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
name|part12
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName2
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchObjectException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
operator|new
name|Path
argument_list|(
name|dirTbl1
argument_list|,
name|cmrootEncrypted
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
operator|new
name|Path
argument_list|(
name|dirTbl2
argument_list|,
name|cmrootEncrypted
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|dropTableWithDifferentEncryptionZonesSameKey
parameter_list|()
throws|throws
name|Throwable
block|{
name|String
name|dbName1
init|=
literal|"encrdbsamekey1"
decl_stmt|;
name|String
name|dbName2
init|=
literal|"encrdbsamekey2"
decl_stmt|;
name|String
name|tblName1
init|=
literal|"encrtbl1"
decl_stmt|;
name|String
name|tblName2
init|=
literal|"encrtbl2"
decl_stmt|;
name|String
name|typeName
init|=
literal|"Person"
decl_stmt|;
name|silentDropDatabase
argument_list|(
name|dbName1
argument_list|)
expr_stmt|;
name|silentDropDatabase
argument_list|(
name|dbName2
argument_list|)
expr_stmt|;
operator|new
name|DatabaseBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|dbName1
argument_list|)
operator|.
name|addParam
argument_list|(
literal|"repl.source.for"
argument_list|,
literal|"1, 2, 3"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
operator|new
name|DatabaseBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|dbName2
argument_list|)
operator|.
name|addParam
argument_list|(
literal|"repl.source.for"
argument_list|,
literal|"1, 2, 3"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropType
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|Type
name|typ1
init|=
operator|new
name|Type
argument_list|()
decl_stmt|;
name|typ1
operator|.
name|setName
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|setFields
argument_list|(
operator|new
name|ArrayList
argument_list|<>
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"name"
argument_list|,
name|ColumnType
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"income"
argument_list|,
name|ColumnType
operator|.
name|INT_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|createType
argument_list|(
name|typ1
argument_list|)
expr_stmt|;
name|Path
name|dirDb1
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getWhRoot
argument_list|()
argument_list|,
name|dbName1
operator|+
literal|".db"
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirDb1
argument_list|)
expr_stmt|;
name|shimCm
operator|.
name|createEncryptionZone
argument_list|(
name|dirDb1
argument_list|,
literal|"test_key_db"
argument_list|)
expr_stmt|;
name|Path
name|dirTbl1
init|=
operator|new
name|Path
argument_list|(
name|dirDb1
argument_list|,
name|tblName1
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirTbl1
argument_list|)
expr_stmt|;
name|Path
name|part11
init|=
operator|new
name|Path
argument_list|(
name|dirTbl1
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part11
argument_list|,
literal|"testClearer11"
argument_list|)
expr_stmt|;
name|Path
name|dirDb2
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getWhRoot
argument_list|()
argument_list|,
name|dbName2
operator|+
literal|".db"
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirDb2
argument_list|)
expr_stmt|;
name|shimCm
operator|.
name|createEncryptionZone
argument_list|(
name|dirDb2
argument_list|,
literal|"test_key_db"
argument_list|)
expr_stmt|;
name|Path
name|dirTbl2
init|=
operator|new
name|Path
argument_list|(
name|dirDb2
argument_list|,
name|tblName2
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirTbl2
argument_list|)
expr_stmt|;
name|Path
name|part12
init|=
operator|new
name|Path
argument_list|(
name|dirTbl2
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part12
argument_list|,
literal|"testClearer12"
argument_list|)
expr_stmt|;
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName1
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tblName1
argument_list|)
operator|.
name|setCols
argument_list|(
name|typ1
operator|.
name|getFields
argument_list|()
argument_list|)
operator|.
name|setNumBuckets
argument_list|(
literal|1
argument_list|)
operator|.
name|addBucketCol
argument_list|(
literal|"name"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"test_param_1"
argument_list|,
literal|"Use this for comments etc"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|Table
name|tbl
init|=
name|client
operator|.
name|getTable
argument_list|(
name|dbName1
argument_list|,
name|tblName1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|tbl
argument_list|)
expr_stmt|;
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName2
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tblName2
argument_list|)
operator|.
name|setCols
argument_list|(
name|typ1
operator|.
name|getFields
argument_list|()
argument_list|)
operator|.
name|setNumBuckets
argument_list|(
literal|1
argument_list|)
operator|.
name|addBucketCol
argument_list|(
literal|"name"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"test_param_1"
argument_list|,
literal|"Use this for comments etc"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|boolean
name|exceptionThrown
init|=
literal|false
decl_stmt|;
try|try
block|{
name|client
operator|.
name|dropTable
argument_list|(
name|dbName1
argument_list|,
name|tblName1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"can't be moved from encryption zone"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
name|part11
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|getTable
argument_list|(
name|dbName1
argument_list|,
name|tblName1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchObjectException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|exceptionThrown
operator|=
literal|false
expr_stmt|;
try|try
block|{
name|client
operator|.
name|dropTable
argument_list|(
name|dbName2
argument_list|,
name|tblName2
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"can't be moved from encryption zone"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
name|part12
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|getTable
argument_list|(
name|dbName2
argument_list|,
name|tblName2
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchObjectException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|dropTableWithSameEncryptionZones
parameter_list|()
throws|throws
name|Throwable
block|{
name|String
name|dbName
init|=
literal|"encrdb3"
decl_stmt|;
name|String
name|tblName1
init|=
literal|"encrtbl1"
decl_stmt|;
name|String
name|tblName2
init|=
literal|"encrtbl2"
decl_stmt|;
name|String
name|typeName
init|=
literal|"Person"
decl_stmt|;
name|silentDropDatabase
argument_list|(
name|dbName
argument_list|)
expr_stmt|;
operator|new
name|DatabaseBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|dbName
argument_list|)
operator|.
name|addParam
argument_list|(
literal|"repl.source.for"
argument_list|,
literal|"1, 2, 3"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropType
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|Type
name|typ1
init|=
operator|new
name|Type
argument_list|()
decl_stmt|;
name|typ1
operator|.
name|setName
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|setFields
argument_list|(
operator|new
name|ArrayList
argument_list|<>
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"name"
argument_list|,
name|ColumnType
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"income"
argument_list|,
name|ColumnType
operator|.
name|INT_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|createType
argument_list|(
name|typ1
argument_list|)
expr_stmt|;
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tblName1
argument_list|)
operator|.
name|setCols
argument_list|(
name|typ1
operator|.
name|getFields
argument_list|()
argument_list|)
operator|.
name|setNumBuckets
argument_list|(
literal|1
argument_list|)
operator|.
name|addBucketCol
argument_list|(
literal|"name"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"test_param_1"
argument_list|,
literal|"Use this for comments etc"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|Table
name|tbl
init|=
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|tbl
argument_list|)
expr_stmt|;
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tblName2
argument_list|)
operator|.
name|setCols
argument_list|(
name|typ1
operator|.
name|getFields
argument_list|()
argument_list|)
operator|.
name|setNumBuckets
argument_list|(
literal|1
argument_list|)
operator|.
name|addBucketCol
argument_list|(
literal|"name"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"test_param_1"
argument_list|,
literal|"Use this for comments etc"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|Path
name|dirDb
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getWhRoot
argument_list|()
argument_list|,
name|dbName
operator|+
literal|".db"
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|delete
argument_list|(
name|dirDb
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirDb
argument_list|)
expr_stmt|;
name|shimCm
operator|.
name|createEncryptionZone
argument_list|(
name|dirDb
argument_list|,
literal|"test_key_db"
argument_list|)
expr_stmt|;
name|Path
name|dirTbl1
init|=
operator|new
name|Path
argument_list|(
name|dirDb
argument_list|,
name|tblName1
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirTbl1
argument_list|)
expr_stmt|;
name|Path
name|part11
init|=
operator|new
name|Path
argument_list|(
name|dirTbl1
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part11
argument_list|,
literal|"testClearer11"
argument_list|)
expr_stmt|;
name|Path
name|dirTbl2
init|=
operator|new
name|Path
argument_list|(
name|dirDb
argument_list|,
name|tblName2
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirTbl2
argument_list|)
expr_stmt|;
name|Path
name|part12
init|=
operator|new
name|Path
argument_list|(
name|dirTbl2
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part12
argument_list|,
literal|"testClearer12"
argument_list|)
expr_stmt|;
name|boolean
name|exceptionThrown
init|=
literal|false
decl_stmt|;
try|try
block|{
name|client
operator|.
name|dropTable
argument_list|(
name|dbName
argument_list|,
name|tblName1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"can't be moved from encryption zone"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
name|part11
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchObjectException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|exceptionThrown
operator|=
literal|false
expr_stmt|;
try|try
block|{
name|client
operator|.
name|dropTable
argument_list|(
name|dbName
argument_list|,
name|tblName2
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"can't be moved from encryption zone"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
name|part12
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName2
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchObjectException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|dropTableWithoutEncryptionZonesForCm
parameter_list|()
throws|throws
name|Throwable
block|{
name|String
name|dbName
init|=
literal|"simpdb1"
decl_stmt|;
name|String
name|tblName
init|=
literal|"simptbl"
decl_stmt|;
name|String
name|typeName
init|=
literal|"Person"
decl_stmt|;
name|silentDropDatabase
argument_list|(
name|dbName
argument_list|)
expr_stmt|;
operator|new
name|DatabaseBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|dbName
argument_list|)
operator|.
name|addParam
argument_list|(
literal|"repl.source.for"
argument_list|,
literal|"1, 2, 3"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropType
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|Type
name|typ1
init|=
operator|new
name|Type
argument_list|()
decl_stmt|;
name|typ1
operator|.
name|setName
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|setFields
argument_list|(
operator|new
name|ArrayList
argument_list|<>
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"name"
argument_list|,
name|ColumnType
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"income"
argument_list|,
name|ColumnType
operator|.
name|INT_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|createType
argument_list|(
name|typ1
argument_list|)
expr_stmt|;
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tblName
argument_list|)
operator|.
name|setCols
argument_list|(
name|typ1
operator|.
name|getFields
argument_list|()
argument_list|)
operator|.
name|setNumBuckets
argument_list|(
literal|1
argument_list|)
operator|.
name|addBucketCol
argument_list|(
literal|"name"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"test_param_1"
argument_list|,
literal|"Use this for comments etc"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|Table
name|tbl
init|=
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|tbl
argument_list|)
expr_stmt|;
name|Path
name|dirDb
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getWhRoot
argument_list|()
argument_list|,
name|dbName
operator|+
literal|".db"
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirDb
argument_list|)
expr_stmt|;
name|Path
name|dirTbl1
init|=
operator|new
name|Path
argument_list|(
name|dirDb
argument_list|,
name|tblName
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirTbl1
argument_list|)
expr_stmt|;
name|Path
name|part11
init|=
operator|new
name|Path
argument_list|(
name|dirTbl1
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part11
argument_list|,
literal|"testClearer11"
argument_list|)
expr_stmt|;
name|boolean
name|exceptionThrown
init|=
literal|false
decl_stmt|;
try|try
block|{
name|client
operator|.
name|dropTable
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
name|part11
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchObjectException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|dropExternalTableWithSameEncryptionZonesForCm
parameter_list|()
throws|throws
name|Throwable
block|{
name|String
name|dbName
init|=
literal|"encrdb4"
decl_stmt|;
name|String
name|tblName1
init|=
literal|"encrtbl1"
decl_stmt|;
name|String
name|tblName2
init|=
literal|"encrtbl2"
decl_stmt|;
name|String
name|typeName
init|=
literal|"Person"
decl_stmt|;
name|silentDropDatabase
argument_list|(
name|dbName
argument_list|)
expr_stmt|;
operator|new
name|DatabaseBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|dbName
argument_list|)
operator|.
name|addParam
argument_list|(
literal|"repl.source.for"
argument_list|,
literal|"1, 2, 3"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropType
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|Type
name|typ1
init|=
operator|new
name|Type
argument_list|()
decl_stmt|;
name|typ1
operator|.
name|setName
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|setFields
argument_list|(
operator|new
name|ArrayList
argument_list|<>
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"name"
argument_list|,
name|ColumnType
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"income"
argument_list|,
name|ColumnType
operator|.
name|INT_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|createType
argument_list|(
name|typ1
argument_list|)
expr_stmt|;
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tblName1
argument_list|)
operator|.
name|setCols
argument_list|(
name|typ1
operator|.
name|getFields
argument_list|()
argument_list|)
operator|.
name|setNumBuckets
argument_list|(
literal|1
argument_list|)
operator|.
name|addBucketCol
argument_list|(
literal|"name"
argument_list|)
operator|.
name|addTableParam
argument_list|(
literal|"EXTERNAL"
argument_list|,
literal|"true"
argument_list|)
operator|.
name|addTableParam
argument_list|(
literal|"external.table.purge"
argument_list|,
literal|"true"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"test_param_1"
argument_list|,
literal|"Use this for comments etc"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|Table
name|tbl
init|=
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|tbl
argument_list|)
expr_stmt|;
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tblName2
argument_list|)
operator|.
name|setCols
argument_list|(
name|typ1
operator|.
name|getFields
argument_list|()
argument_list|)
operator|.
name|setNumBuckets
argument_list|(
literal|1
argument_list|)
operator|.
name|addBucketCol
argument_list|(
literal|"name"
argument_list|)
operator|.
name|addTableParam
argument_list|(
literal|"EXTERNAL"
argument_list|,
literal|"true"
argument_list|)
operator|.
name|addTableParam
argument_list|(
literal|"external.table.purge"
argument_list|,
literal|"true"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"test_param_1"
argument_list|,
literal|"Use this for comments etc"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|Path
name|dirDb
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getWhRoot
argument_list|()
argument_list|,
name|dbName
operator|+
literal|".db"
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|delete
argument_list|(
name|dirDb
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirDb
argument_list|)
expr_stmt|;
name|shimCm
operator|.
name|createEncryptionZone
argument_list|(
name|dirDb
argument_list|,
literal|"test_key_db"
argument_list|)
expr_stmt|;
name|Path
name|dirTbl1
init|=
operator|new
name|Path
argument_list|(
name|dirDb
argument_list|,
name|tblName1
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirTbl1
argument_list|)
expr_stmt|;
name|Path
name|part11
init|=
operator|new
name|Path
argument_list|(
name|dirTbl1
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part11
argument_list|,
literal|"testClearer11"
argument_list|)
expr_stmt|;
name|Path
name|dirTbl2
init|=
operator|new
name|Path
argument_list|(
name|dirDb
argument_list|,
name|tblName2
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirTbl2
argument_list|)
expr_stmt|;
name|Path
name|part12
init|=
operator|new
name|Path
argument_list|(
name|dirTbl2
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part12
argument_list|,
literal|"testClearer12"
argument_list|)
expr_stmt|;
name|boolean
name|exceptionThrown
init|=
literal|false
decl_stmt|;
try|try
block|{
name|client
operator|.
name|dropTable
argument_list|(
name|dbName
argument_list|,
name|tblName1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
name|part11
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchObjectException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|exceptionThrown
operator|=
literal|false
expr_stmt|;
try|try
block|{
name|client
operator|.
name|dropTable
argument_list|(
name|dbName
argument_list|,
name|tblName2
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
name|part11
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName2
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchObjectException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|dropExternalTableWithDifferentEncryptionZones
parameter_list|()
throws|throws
name|Throwable
block|{
name|String
name|dbName
init|=
literal|"encrdb5"
decl_stmt|;
name|String
name|tblName1
init|=
literal|"encrtbl1"
decl_stmt|;
name|String
name|tblName2
init|=
literal|"encrtbl2"
decl_stmt|;
name|String
name|typeName
init|=
literal|"Person"
decl_stmt|;
name|silentDropDatabase
argument_list|(
name|dbName
argument_list|)
expr_stmt|;
operator|new
name|DatabaseBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|dbName
argument_list|)
operator|.
name|addParam
argument_list|(
literal|"repl.source.for"
argument_list|,
literal|"1, 2, 3"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropType
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|Type
name|typ1
init|=
operator|new
name|Type
argument_list|()
decl_stmt|;
name|typ1
operator|.
name|setName
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|setFields
argument_list|(
operator|new
name|ArrayList
argument_list|<>
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"name"
argument_list|,
name|ColumnType
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"income"
argument_list|,
name|ColumnType
operator|.
name|INT_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|createType
argument_list|(
name|typ1
argument_list|)
expr_stmt|;
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tblName1
argument_list|)
operator|.
name|setCols
argument_list|(
name|typ1
operator|.
name|getFields
argument_list|()
argument_list|)
operator|.
name|setNumBuckets
argument_list|(
literal|1
argument_list|)
operator|.
name|addBucketCol
argument_list|(
literal|"name"
argument_list|)
operator|.
name|addTableParam
argument_list|(
literal|"EXTERNAL"
argument_list|,
literal|"true"
argument_list|)
operator|.
name|addTableParam
argument_list|(
literal|"external.table.purge"
argument_list|,
literal|"true"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"test_param_1"
argument_list|,
literal|"Use this for comments etc"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|Table
name|tbl
init|=
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|tbl
argument_list|)
expr_stmt|;
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tblName2
argument_list|)
operator|.
name|setCols
argument_list|(
name|typ1
operator|.
name|getFields
argument_list|()
argument_list|)
operator|.
name|setNumBuckets
argument_list|(
literal|1
argument_list|)
operator|.
name|addBucketCol
argument_list|(
literal|"name"
argument_list|)
operator|.
name|addTableParam
argument_list|(
literal|"EXTERNAL"
argument_list|,
literal|"true"
argument_list|)
operator|.
name|addTableParam
argument_list|(
literal|"external.table.purge"
argument_list|,
literal|"true"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"test_param_1"
argument_list|,
literal|"Use this for comments etc"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|Path
name|dirDb
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getWhRoot
argument_list|()
argument_list|,
name|dbName
operator|+
literal|".db"
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirDb
argument_list|)
expr_stmt|;
name|Path
name|dirTbl1
init|=
operator|new
name|Path
argument_list|(
name|dirDb
argument_list|,
name|tblName1
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirTbl1
argument_list|)
expr_stmt|;
name|shimCm
operator|.
name|createEncryptionZone
argument_list|(
name|dirTbl1
argument_list|,
literal|"test_key_db"
argument_list|)
expr_stmt|;
name|Path
name|part11
init|=
operator|new
name|Path
argument_list|(
name|dirTbl1
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part11
argument_list|,
literal|"testClearer11"
argument_list|)
expr_stmt|;
name|Path
name|dirTbl2
init|=
operator|new
name|Path
argument_list|(
name|dirDb
argument_list|,
name|tblName2
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirTbl2
argument_list|)
expr_stmt|;
name|shimCm
operator|.
name|createEncryptionZone
argument_list|(
name|dirTbl2
argument_list|,
literal|"test_key_db"
argument_list|)
expr_stmt|;
name|Path
name|part12
init|=
operator|new
name|Path
argument_list|(
name|dirTbl2
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part12
argument_list|,
literal|"testClearer12"
argument_list|)
expr_stmt|;
name|boolean
name|exceptionThrown
init|=
literal|false
decl_stmt|;
try|try
block|{
name|client
operator|.
name|dropTable
argument_list|(
name|dbName
argument_list|,
name|tblName1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
name|part11
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchObjectException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|exceptionThrown
operator|=
literal|false
expr_stmt|;
try|try
block|{
name|client
operator|.
name|dropTable
argument_list|(
name|dbName
argument_list|,
name|tblName2
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
name|part12
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName2
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchObjectException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|dropExternalTableWithDifferentEncryptionZonesDifferentKey
parameter_list|()
throws|throws
name|Throwable
block|{
name|String
name|dbName
init|=
literal|"encrdb6"
decl_stmt|;
name|String
name|tblName1
init|=
literal|"encrtbl1"
decl_stmt|;
name|String
name|tblName2
init|=
literal|"encrtbl2"
decl_stmt|;
name|String
name|typeName
init|=
literal|"Person"
decl_stmt|;
name|silentDropDatabase
argument_list|(
name|dbName
argument_list|)
expr_stmt|;
operator|new
name|DatabaseBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|dbName
argument_list|)
operator|.
name|addParam
argument_list|(
literal|"repl.source.for"
argument_list|,
literal|"1, 2, 3"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropType
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|Type
name|typ1
init|=
operator|new
name|Type
argument_list|()
decl_stmt|;
name|typ1
operator|.
name|setName
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|setFields
argument_list|(
operator|new
name|ArrayList
argument_list|<>
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"name"
argument_list|,
name|ColumnType
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"income"
argument_list|,
name|ColumnType
operator|.
name|INT_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|createType
argument_list|(
name|typ1
argument_list|)
expr_stmt|;
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tblName1
argument_list|)
operator|.
name|setCols
argument_list|(
name|typ1
operator|.
name|getFields
argument_list|()
argument_list|)
operator|.
name|setNumBuckets
argument_list|(
literal|1
argument_list|)
operator|.
name|addBucketCol
argument_list|(
literal|"name"
argument_list|)
operator|.
name|addTableParam
argument_list|(
literal|"EXTERNAL"
argument_list|,
literal|"true"
argument_list|)
operator|.
name|addTableParam
argument_list|(
literal|"external.table.purge"
argument_list|,
literal|"true"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"test_param_1"
argument_list|,
literal|"Use this for comments etc"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|Table
name|tbl
init|=
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|tbl
argument_list|)
expr_stmt|;
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tblName2
argument_list|)
operator|.
name|setCols
argument_list|(
name|typ1
operator|.
name|getFields
argument_list|()
argument_list|)
operator|.
name|setNumBuckets
argument_list|(
literal|1
argument_list|)
operator|.
name|addBucketCol
argument_list|(
literal|"name"
argument_list|)
operator|.
name|addTableParam
argument_list|(
literal|"EXTERNAL"
argument_list|,
literal|"true"
argument_list|)
operator|.
name|addTableParam
argument_list|(
literal|"external.table.purge"
argument_list|,
literal|"true"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"test_param_1"
argument_list|,
literal|"Use this for comments etc"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|Path
name|dirDb
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getWhRoot
argument_list|()
argument_list|,
name|dbName
operator|+
literal|".db"
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirDb
argument_list|)
expr_stmt|;
name|Path
name|dirTbl1
init|=
operator|new
name|Path
argument_list|(
name|dirDb
argument_list|,
name|tblName1
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirTbl1
argument_list|)
expr_stmt|;
name|shimCm
operator|.
name|createEncryptionZone
argument_list|(
name|dirTbl1
argument_list|,
literal|"test_key_db"
argument_list|)
expr_stmt|;
name|Path
name|part11
init|=
operator|new
name|Path
argument_list|(
name|dirTbl1
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part11
argument_list|,
literal|"testClearer11"
argument_list|)
expr_stmt|;
name|Path
name|dirTbl2
init|=
operator|new
name|Path
argument_list|(
name|dirDb
argument_list|,
name|tblName2
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirTbl2
argument_list|)
expr_stmt|;
name|shimCm
operator|.
name|createEncryptionZone
argument_list|(
name|dirTbl2
argument_list|,
literal|"test_key_cm"
argument_list|)
expr_stmt|;
name|Path
name|part12
init|=
operator|new
name|Path
argument_list|(
name|dirTbl2
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part12
argument_list|,
literal|"testClearer12"
argument_list|)
expr_stmt|;
name|boolean
name|exceptionThrown
init|=
literal|false
decl_stmt|;
try|try
block|{
name|client
operator|.
name|dropTable
argument_list|(
name|dbName
argument_list|,
name|tblName1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
name|part11
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchObjectException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|exceptionThrown
operator|=
literal|false
expr_stmt|;
try|try
block|{
name|client
operator|.
name|dropTable
argument_list|(
name|dbName
argument_list|,
name|tblName2
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
name|part12
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName2
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchObjectException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|dropExternalTableWithoutEncryptionZonesForCm
parameter_list|()
throws|throws
name|Throwable
block|{
name|String
name|dbName
init|=
literal|"simpdb2"
decl_stmt|;
name|String
name|tblName
init|=
literal|"simptbl"
decl_stmt|;
name|String
name|typeName
init|=
literal|"Person"
decl_stmt|;
name|silentDropDatabase
argument_list|(
name|dbName
argument_list|)
expr_stmt|;
operator|new
name|DatabaseBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|dbName
argument_list|)
operator|.
name|addParam
argument_list|(
literal|"repl.source.for"
argument_list|,
literal|"1, 2, 3"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropType
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|Type
name|typ1
init|=
operator|new
name|Type
argument_list|()
decl_stmt|;
name|typ1
operator|.
name|setName
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|setFields
argument_list|(
operator|new
name|ArrayList
argument_list|<>
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"name"
argument_list|,
name|ColumnType
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"income"
argument_list|,
name|ColumnType
operator|.
name|INT_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|createType
argument_list|(
name|typ1
argument_list|)
expr_stmt|;
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tblName
argument_list|)
operator|.
name|setCols
argument_list|(
name|typ1
operator|.
name|getFields
argument_list|()
argument_list|)
operator|.
name|setNumBuckets
argument_list|(
literal|1
argument_list|)
operator|.
name|addBucketCol
argument_list|(
literal|"name"
argument_list|)
operator|.
name|addTableParam
argument_list|(
literal|"EXTERNAL"
argument_list|,
literal|"true"
argument_list|)
operator|.
name|addTableParam
argument_list|(
literal|"external.table.purge"
argument_list|,
literal|"true"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"test_param_1"
argument_list|,
literal|"Use this for comments etc"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|Table
name|tbl
init|=
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|tbl
argument_list|)
expr_stmt|;
name|Path
name|dirDb
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getWhRoot
argument_list|()
argument_list|,
name|dbName
operator|+
literal|".db"
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirDb
argument_list|)
expr_stmt|;
name|Path
name|dirTbl1
init|=
operator|new
name|Path
argument_list|(
name|dirDb
argument_list|,
name|tblName
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirTbl1
argument_list|)
expr_stmt|;
name|Path
name|part11
init|=
operator|new
name|Path
argument_list|(
name|dirTbl1
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part11
argument_list|,
literal|"testClearer11"
argument_list|)
expr_stmt|;
name|boolean
name|exceptionThrown
init|=
literal|false
decl_stmt|;
try|try
block|{
name|client
operator|.
name|dropTable
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
name|part11
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchObjectException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|truncateTableWithDifferentEncryptionZones
parameter_list|()
throws|throws
name|Throwable
block|{
name|String
name|dbName1
init|=
literal|"encrdbtrunc1"
decl_stmt|;
name|String
name|dbName2
init|=
literal|"encrdbtrunc2"
decl_stmt|;
name|String
name|tblName1
init|=
literal|"encrtbl1"
decl_stmt|;
name|String
name|tblName2
init|=
literal|"encrtbl2"
decl_stmt|;
name|String
name|typeName
init|=
literal|"Person"
decl_stmt|;
name|silentDropDatabase
argument_list|(
name|dbName1
argument_list|)
expr_stmt|;
name|silentDropDatabase
argument_list|(
name|dbName2
argument_list|)
expr_stmt|;
operator|new
name|DatabaseBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|dbName1
argument_list|)
operator|.
name|addParam
argument_list|(
literal|"repl.source.for"
argument_list|,
literal|"1, 2, 3"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
operator|new
name|DatabaseBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|dbName2
argument_list|)
operator|.
name|addParam
argument_list|(
literal|"repl.source.for"
argument_list|,
literal|"1, 2, 3"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropType
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|Type
name|typ1
init|=
operator|new
name|Type
argument_list|()
decl_stmt|;
name|typ1
operator|.
name|setName
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|setFields
argument_list|(
operator|new
name|ArrayList
argument_list|<>
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"name"
argument_list|,
name|ColumnType
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"income"
argument_list|,
name|ColumnType
operator|.
name|INT_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|createType
argument_list|(
name|typ1
argument_list|)
expr_stmt|;
name|Path
name|dirDb1
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getWhRoot
argument_list|()
argument_list|,
name|dbName1
operator|+
literal|".db"
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|delete
argument_list|(
name|dirDb1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirDb1
argument_list|)
expr_stmt|;
name|shimCm
operator|.
name|createEncryptionZone
argument_list|(
name|dirDb1
argument_list|,
literal|"test_key_db"
argument_list|)
expr_stmt|;
name|Path
name|dirTbl1
init|=
operator|new
name|Path
argument_list|(
name|dirDb1
argument_list|,
name|tblName1
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirTbl1
argument_list|)
expr_stmt|;
name|Path
name|part11
init|=
operator|new
name|Path
argument_list|(
name|dirTbl1
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part11
argument_list|,
literal|"testClearer11"
argument_list|)
expr_stmt|;
name|Path
name|dirDb2
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getWhRoot
argument_list|()
argument_list|,
name|dbName2
operator|+
literal|".db"
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|delete
argument_list|(
name|dirDb2
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirDb2
argument_list|)
expr_stmt|;
name|shimCm
operator|.
name|createEncryptionZone
argument_list|(
name|dirDb2
argument_list|,
literal|"test_key_db"
argument_list|)
expr_stmt|;
name|Path
name|dirTbl2
init|=
operator|new
name|Path
argument_list|(
name|dirDb2
argument_list|,
name|tblName2
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirTbl2
argument_list|)
expr_stmt|;
name|Path
name|part12
init|=
operator|new
name|Path
argument_list|(
name|dirTbl2
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part12
argument_list|,
literal|"testClearer12"
argument_list|)
expr_stmt|;
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName1
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tblName1
argument_list|)
operator|.
name|setCols
argument_list|(
name|typ1
operator|.
name|getFields
argument_list|()
argument_list|)
operator|.
name|setNumBuckets
argument_list|(
literal|1
argument_list|)
operator|.
name|addBucketCol
argument_list|(
literal|"name"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"test_param_1"
argument_list|,
literal|"Use this for comments etc"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|Table
name|tbl
init|=
name|client
operator|.
name|getTable
argument_list|(
name|dbName1
argument_list|,
name|tblName1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|tbl
argument_list|)
expr_stmt|;
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName2
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tblName2
argument_list|)
operator|.
name|setCols
argument_list|(
name|typ1
operator|.
name|getFields
argument_list|()
argument_list|)
operator|.
name|setNumBuckets
argument_list|(
literal|1
argument_list|)
operator|.
name|addBucketCol
argument_list|(
literal|"name"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"test_param_1"
argument_list|,
literal|"Use this for comments etc"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|boolean
name|exceptionThrown
init|=
literal|false
decl_stmt|;
try|try
block|{
name|client
operator|.
name|truncateTable
argument_list|(
name|dbName1
argument_list|,
name|tblName1
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"can't be moved from encryption zone"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
name|part11
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|client
operator|.
name|getTable
argument_list|(
name|dbName1
argument_list|,
name|tblName1
argument_list|)
argument_list|)
expr_stmt|;
name|exceptionThrown
operator|=
literal|false
expr_stmt|;
try|try
block|{
name|client
operator|.
name|truncateTable
argument_list|(
name|dbName2
argument_list|,
name|tblName2
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"can't be moved from encryption zone"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
name|part12
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|client
operator|.
name|getTable
argument_list|(
name|dbName2
argument_list|,
name|tblName2
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|truncateTableWithDifferentEncryptionZonesDifferentKey
parameter_list|()
throws|throws
name|Throwable
block|{
name|String
name|dbName1
init|=
literal|"encrdb1"
decl_stmt|;
name|String
name|dbName2
init|=
literal|"encrdb2"
decl_stmt|;
name|String
name|tblName1
init|=
literal|"encrtbl1"
decl_stmt|;
name|String
name|tblName2
init|=
literal|"encrtbl2"
decl_stmt|;
name|String
name|typeName
init|=
literal|"Person"
decl_stmt|;
name|silentDropDatabase
argument_list|(
name|dbName1
argument_list|)
expr_stmt|;
name|silentDropDatabase
argument_list|(
name|dbName2
argument_list|)
expr_stmt|;
operator|new
name|DatabaseBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|dbName1
argument_list|)
operator|.
name|addParam
argument_list|(
literal|"repl.source.for"
argument_list|,
literal|"1, 2, 3"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
operator|new
name|DatabaseBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|dbName2
argument_list|)
operator|.
name|addParam
argument_list|(
literal|"repl.source.for"
argument_list|,
literal|"1, 2, 3"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropType
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|Type
name|typ1
init|=
operator|new
name|Type
argument_list|()
decl_stmt|;
name|typ1
operator|.
name|setName
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|setFields
argument_list|(
operator|new
name|ArrayList
argument_list|<>
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"name"
argument_list|,
name|ColumnType
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"income"
argument_list|,
name|ColumnType
operator|.
name|INT_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|createType
argument_list|(
name|typ1
argument_list|)
expr_stmt|;
name|Path
name|dirDb1
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getWhRoot
argument_list|()
argument_list|,
name|dbName1
operator|+
literal|".db"
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirDb1
argument_list|)
expr_stmt|;
name|shimCm
operator|.
name|createEncryptionZone
argument_list|(
name|dirDb1
argument_list|,
literal|"test_key_db"
argument_list|)
expr_stmt|;
name|Path
name|dirTbl1
init|=
operator|new
name|Path
argument_list|(
name|dirDb1
argument_list|,
name|tblName1
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirTbl1
argument_list|)
expr_stmt|;
name|Path
name|part11
init|=
operator|new
name|Path
argument_list|(
name|dirTbl1
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part11
argument_list|,
literal|"testClearer11"
argument_list|)
expr_stmt|;
name|Path
name|dirDb2
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getWhRoot
argument_list|()
argument_list|,
name|dbName2
operator|+
literal|".db"
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirDb2
argument_list|)
expr_stmt|;
name|shimCm
operator|.
name|createEncryptionZone
argument_list|(
name|dirDb2
argument_list|,
literal|"test_key_db"
argument_list|)
expr_stmt|;
name|Path
name|dirTbl2
init|=
operator|new
name|Path
argument_list|(
name|dirDb2
argument_list|,
name|tblName2
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirTbl2
argument_list|)
expr_stmt|;
name|Path
name|part12
init|=
operator|new
name|Path
argument_list|(
name|dirTbl2
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part12
argument_list|,
literal|"testClearer12"
argument_list|)
expr_stmt|;
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName1
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tblName1
argument_list|)
operator|.
name|setCols
argument_list|(
name|typ1
operator|.
name|getFields
argument_list|()
argument_list|)
operator|.
name|setNumBuckets
argument_list|(
literal|1
argument_list|)
operator|.
name|addBucketCol
argument_list|(
literal|"name"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"test_param_1"
argument_list|,
literal|"Use this for comments etc"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|Table
name|tbl
init|=
name|client
operator|.
name|getTable
argument_list|(
name|dbName1
argument_list|,
name|tblName1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|tbl
argument_list|)
expr_stmt|;
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName2
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tblName2
argument_list|)
operator|.
name|setCols
argument_list|(
name|typ1
operator|.
name|getFields
argument_list|()
argument_list|)
operator|.
name|setNumBuckets
argument_list|(
literal|1
argument_list|)
operator|.
name|addBucketCol
argument_list|(
literal|"name"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"test_param_1"
argument_list|,
literal|"Use this for comments etc"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|boolean
name|exceptionThrown
init|=
literal|false
decl_stmt|;
try|try
block|{
name|client
operator|.
name|truncateTable
argument_list|(
name|dbName1
argument_list|,
name|tblName1
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"can't be moved from encryption zone"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
name|part11
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|client
operator|.
name|getTable
argument_list|(
name|dbName1
argument_list|,
name|tblName1
argument_list|)
argument_list|)
expr_stmt|;
name|exceptionThrown
operator|=
literal|false
expr_stmt|;
try|try
block|{
name|client
operator|.
name|truncateTable
argument_list|(
name|dbName2
argument_list|,
name|tblName2
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"can't be moved from encryption zone"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
name|part12
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|client
operator|.
name|getTable
argument_list|(
name|dbName2
argument_list|,
name|tblName2
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|truncateTableWithSameEncryptionZones
parameter_list|()
throws|throws
name|Throwable
block|{
name|String
name|dbName
init|=
literal|"encrdb9"
decl_stmt|;
name|String
name|tblName1
init|=
literal|"encrtbl1"
decl_stmt|;
name|String
name|tblName2
init|=
literal|"encrtbl2"
decl_stmt|;
name|String
name|typeName
init|=
literal|"Person"
decl_stmt|;
name|client
operator|.
name|dropTable
argument_list|(
name|dbName
argument_list|,
name|tblName1
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropTable
argument_list|(
name|dbName
argument_list|,
name|tblName2
argument_list|)
expr_stmt|;
name|silentDropDatabase
argument_list|(
name|dbName
argument_list|)
expr_stmt|;
operator|new
name|DatabaseBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|dbName
argument_list|)
operator|.
name|addParam
argument_list|(
literal|"repl.source.for"
argument_list|,
literal|"1, 2, 3"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropType
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|Type
name|typ1
init|=
operator|new
name|Type
argument_list|()
decl_stmt|;
name|typ1
operator|.
name|setName
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|setFields
argument_list|(
operator|new
name|ArrayList
argument_list|<>
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"name"
argument_list|,
name|ColumnType
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"income"
argument_list|,
name|ColumnType
operator|.
name|INT_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|createType
argument_list|(
name|typ1
argument_list|)
expr_stmt|;
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tblName1
argument_list|)
operator|.
name|setCols
argument_list|(
name|typ1
operator|.
name|getFields
argument_list|()
argument_list|)
operator|.
name|setNumBuckets
argument_list|(
literal|1
argument_list|)
operator|.
name|addBucketCol
argument_list|(
literal|"name"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"test_param_1"
argument_list|,
literal|"Use this for comments etc"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|Table
name|tbl
init|=
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|tbl
argument_list|)
expr_stmt|;
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tblName2
argument_list|)
operator|.
name|setCols
argument_list|(
name|typ1
operator|.
name|getFields
argument_list|()
argument_list|)
operator|.
name|setNumBuckets
argument_list|(
literal|1
argument_list|)
operator|.
name|addBucketCol
argument_list|(
literal|"name"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"test_param_1"
argument_list|,
literal|"Use this for comments etc"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|Path
name|dirDb
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getWhRoot
argument_list|()
argument_list|,
name|dbName
operator|+
literal|".db"
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|delete
argument_list|(
name|dirDb
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirDb
argument_list|)
expr_stmt|;
name|shimCm
operator|.
name|createEncryptionZone
argument_list|(
name|dirDb
argument_list|,
literal|"test_key_db"
argument_list|)
expr_stmt|;
name|Path
name|dirTbl1
init|=
operator|new
name|Path
argument_list|(
name|dirDb
argument_list|,
name|tblName1
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirTbl1
argument_list|)
expr_stmt|;
name|Path
name|part11
init|=
operator|new
name|Path
argument_list|(
name|dirTbl1
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part11
argument_list|,
literal|"testClearer11"
argument_list|)
expr_stmt|;
name|Path
name|dirTbl2
init|=
operator|new
name|Path
argument_list|(
name|dirDb
argument_list|,
name|tblName2
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirTbl2
argument_list|)
expr_stmt|;
name|Path
name|part12
init|=
operator|new
name|Path
argument_list|(
name|dirTbl2
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part12
argument_list|,
literal|"testClearer12"
argument_list|)
expr_stmt|;
name|boolean
name|exceptionThrown
init|=
literal|false
decl_stmt|;
try|try
block|{
name|client
operator|.
name|truncateTable
argument_list|(
name|dbName
argument_list|,
name|tblName1
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"can't be moved from encryption zone"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
name|part11
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchObjectException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|truncateTable
argument_list|(
name|dbName
argument_list|,
name|tblName2
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"can't be moved from encryption zone"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
name|part12
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName2
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchObjectException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|truncateTableWithoutEncryptionZonesForCm
parameter_list|()
throws|throws
name|Throwable
block|{
name|String
name|dbName
init|=
literal|"simpdb3"
decl_stmt|;
name|String
name|tblName
init|=
literal|"simptbl"
decl_stmt|;
name|String
name|typeName
init|=
literal|"Person"
decl_stmt|;
name|client
operator|.
name|dropTable
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|)
expr_stmt|;
name|silentDropDatabase
argument_list|(
name|dbName
argument_list|)
expr_stmt|;
operator|new
name|DatabaseBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|dbName
argument_list|)
operator|.
name|addParam
argument_list|(
literal|"repl.source.for"
argument_list|,
literal|"1, 2, 3"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropType
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|Type
name|typ1
init|=
operator|new
name|Type
argument_list|()
decl_stmt|;
name|typ1
operator|.
name|setName
argument_list|(
name|typeName
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|setFields
argument_list|(
operator|new
name|ArrayList
argument_list|<>
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"name"
argument_list|,
name|ColumnType
operator|.
name|STRING_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|typ1
operator|.
name|getFields
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"income"
argument_list|,
name|ColumnType
operator|.
name|INT_TYPE_NAME
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|createType
argument_list|(
name|typ1
argument_list|)
expr_stmt|;
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tblName
argument_list|)
operator|.
name|setCols
argument_list|(
name|typ1
operator|.
name|getFields
argument_list|()
argument_list|)
operator|.
name|setNumBuckets
argument_list|(
literal|1
argument_list|)
operator|.
name|addBucketCol
argument_list|(
literal|"name"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"test_param_1"
argument_list|,
literal|"Use this for comments etc"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|hiveConf
argument_list|)
expr_stmt|;
name|Table
name|tbl2
init|=
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|tbl2
argument_list|)
expr_stmt|;
name|Path
name|dirDb
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getWhRoot
argument_list|()
argument_list|,
name|dbName
operator|+
literal|".db"
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirDb
argument_list|)
expr_stmt|;
name|Path
name|dirTbl1
init|=
operator|new
name|Path
argument_list|(
name|dirDb
argument_list|,
name|tblName
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirTbl1
argument_list|)
expr_stmt|;
name|Path
name|part11
init|=
operator|new
name|Path
argument_list|(
name|dirTbl1
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part11
argument_list|,
literal|"testClearer11"
argument_list|)
expr_stmt|;
name|boolean
name|exceptionThrown
init|=
literal|false
decl_stmt|;
try|try
block|{
name|client
operator|.
name|truncateTable
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|warehouseFs
operator|.
name|exists
argument_list|(
name|part11
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchObjectException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|recycleFailureWithDifferentEncryptionZonesForCm
parameter_list|()
throws|throws
name|Throwable
block|{
name|Path
name|dirDb
init|=
operator|new
name|Path
argument_list|(
name|warehouse
operator|.
name|getWhRoot
argument_list|()
argument_list|,
literal|"db2"
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|delete
argument_list|(
name|dirDb
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirDb
argument_list|)
expr_stmt|;
name|Path
name|dirTbl1
init|=
operator|new
name|Path
argument_list|(
name|dirDb
argument_list|,
literal|"tbl1"
argument_list|)
decl_stmt|;
name|warehouseFs
operator|.
name|mkdirs
argument_list|(
name|dirTbl1
argument_list|)
expr_stmt|;
name|shimCm
operator|.
name|createEncryptionZone
argument_list|(
name|dirTbl1
argument_list|,
literal|"test_key_db"
argument_list|)
expr_stmt|;
name|Path
name|part11
init|=
operator|new
name|Path
argument_list|(
name|dirTbl1
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part11
argument_list|,
literal|"testClearer11"
argument_list|)
expr_stmt|;
name|boolean
name|exceptionThrown
init|=
literal|false
decl_stmt|;
try|try
block|{
name|ReplChangeManager
operator|.
name|getInstance
argument_list|(
name|hiveConf
argument_list|)
operator|.
name|recycle
argument_list|(
name|dirTbl1
argument_list|,
name|RecycleType
operator|.
name|MOVE
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RemoteException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"can't be moved from encryption zone"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testClearerEncrypted
parameter_list|()
throws|throws
name|Exception
block|{
name|HiveConf
name|hiveConfCmClearer
init|=
operator|new
name|HiveConf
argument_list|(
name|TestReplChangeManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|hiveConfCmClearer
operator|.
name|setBoolean
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|REPLCMENABLED
operator|.
name|varname
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|hiveConfCmClearer
operator|.
name|setInt
argument_list|(
name|CommonConfigurationKeysPublic
operator|.
name|FS_TRASH_INTERVAL_KEY
argument_list|,
literal|60
argument_list|)
expr_stmt|;
name|hiveConfCmClearer
operator|.
name|set
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTOREWAREHOUSE
operator|.
name|varname
argument_list|,
literal|"hdfs://"
operator|+
name|miniDFSCluster
operator|.
name|getNameNode
argument_list|()
operator|.
name|getHostAndPort
argument_list|()
operator|+
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTOREWAREHOUSE
operator|.
name|defaultStrVal
argument_list|)
expr_stmt|;
name|String
name|cmrootCmClearer
init|=
literal|"hdfs://"
operator|+
name|miniDFSCluster
operator|.
name|getNameNode
argument_list|()
operator|.
name|getHostAndPort
argument_list|()
operator|+
literal|"/cmrootClearer"
decl_stmt|;
name|hiveConfCmClearer
operator|.
name|set
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|REPLCMDIR
operator|.
name|varname
argument_list|,
name|cmrootCmClearer
argument_list|)
expr_stmt|;
name|Warehouse
name|warehouseCmClearer
init|=
operator|new
name|Warehouse
argument_list|(
name|hiveConfCmClearer
argument_list|)
decl_stmt|;
name|FileSystem
name|cmfs
init|=
operator|new
name|Path
argument_list|(
name|cmrootCmClearer
argument_list|)
operator|.
name|getFileSystem
argument_list|(
name|hiveConfCmClearer
argument_list|)
decl_stmt|;
name|cmfs
operator|.
name|mkdirs
argument_list|(
name|warehouseCmClearer
operator|.
name|getWhRoot
argument_list|()
argument_list|)
expr_stmt|;
name|HadoopShims
operator|.
name|HdfsEncryptionShim
name|shimCmEncrypted
init|=
name|ShimLoader
operator|.
name|getHadoopShims
argument_list|()
operator|.
name|createHdfsEncryptionShim
argument_list|(
name|cmfs
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|FileSystem
name|fsWarehouse
init|=
name|warehouseCmClearer
operator|.
name|getWhRoot
argument_list|()
operator|.
name|getFileSystem
argument_list|(
name|hiveConfCmClearer
argument_list|)
decl_stmt|;
name|long
name|now
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|Path
name|dirDb
init|=
operator|new
name|Path
argument_list|(
name|warehouseCmClearer
operator|.
name|getWhRoot
argument_list|()
argument_list|,
literal|"db1"
argument_list|)
decl_stmt|;
name|fsWarehouse
operator|.
name|delete
argument_list|(
name|dirDb
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|fsWarehouse
operator|.
name|mkdirs
argument_list|(
name|dirDb
argument_list|)
expr_stmt|;
name|Path
name|dirTbl1
init|=
operator|new
name|Path
argument_list|(
name|dirDb
argument_list|,
literal|"tbl1"
argument_list|)
decl_stmt|;
name|fsWarehouse
operator|.
name|mkdirs
argument_list|(
name|dirTbl1
argument_list|)
expr_stmt|;
name|shimCmEncrypted
operator|.
name|createEncryptionZone
argument_list|(
name|dirTbl1
argument_list|,
literal|"test_key_db"
argument_list|)
expr_stmt|;
name|Path
name|part11
init|=
operator|new
name|Path
argument_list|(
name|dirTbl1
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part11
argument_list|,
literal|"testClearer11"
argument_list|)
expr_stmt|;
name|String
name|fileChksum11
init|=
name|ReplChangeManager
operator|.
name|checksumFor
argument_list|(
name|part11
argument_list|,
name|fsWarehouse
argument_list|)
decl_stmt|;
name|Path
name|part12
init|=
operator|new
name|Path
argument_list|(
name|dirTbl1
argument_list|,
literal|"part2"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part12
argument_list|,
literal|"testClearer12"
argument_list|)
expr_stmt|;
name|String
name|fileChksum12
init|=
name|ReplChangeManager
operator|.
name|checksumFor
argument_list|(
name|part12
argument_list|,
name|fsWarehouse
argument_list|)
decl_stmt|;
name|Path
name|dirTbl2
init|=
operator|new
name|Path
argument_list|(
name|dirDb
argument_list|,
literal|"tbl2"
argument_list|)
decl_stmt|;
name|fsWarehouse
operator|.
name|mkdirs
argument_list|(
name|dirTbl2
argument_list|)
expr_stmt|;
name|shimCmEncrypted
operator|.
name|createEncryptionZone
argument_list|(
name|dirTbl2
argument_list|,
literal|"test_key_db"
argument_list|)
expr_stmt|;
name|Path
name|part21
init|=
operator|new
name|Path
argument_list|(
name|dirTbl2
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part21
argument_list|,
literal|"testClearer21"
argument_list|)
expr_stmt|;
name|String
name|fileChksum21
init|=
name|ReplChangeManager
operator|.
name|checksumFor
argument_list|(
name|part21
argument_list|,
name|fsWarehouse
argument_list|)
decl_stmt|;
name|Path
name|part22
init|=
operator|new
name|Path
argument_list|(
name|dirTbl2
argument_list|,
literal|"part2"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part22
argument_list|,
literal|"testClearer22"
argument_list|)
expr_stmt|;
name|String
name|fileChksum22
init|=
name|ReplChangeManager
operator|.
name|checksumFor
argument_list|(
name|part22
argument_list|,
name|fsWarehouse
argument_list|)
decl_stmt|;
name|Path
name|dirTbl3
init|=
operator|new
name|Path
argument_list|(
name|dirDb
argument_list|,
literal|"tbl3"
argument_list|)
decl_stmt|;
name|fsWarehouse
operator|.
name|mkdirs
argument_list|(
name|dirTbl3
argument_list|)
expr_stmt|;
name|shimCmEncrypted
operator|.
name|createEncryptionZone
argument_list|(
name|dirTbl3
argument_list|,
literal|"test_key_cm"
argument_list|)
expr_stmt|;
name|Path
name|part31
init|=
operator|new
name|Path
argument_list|(
name|dirTbl3
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part31
argument_list|,
literal|"testClearer31"
argument_list|)
expr_stmt|;
name|String
name|fileChksum31
init|=
name|ReplChangeManager
operator|.
name|checksumFor
argument_list|(
name|part31
argument_list|,
name|fsWarehouse
argument_list|)
decl_stmt|;
name|Path
name|part32
init|=
operator|new
name|Path
argument_list|(
name|dirTbl3
argument_list|,
literal|"part2"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part32
argument_list|,
literal|"testClearer32"
argument_list|)
expr_stmt|;
name|String
name|fileChksum32
init|=
name|ReplChangeManager
operator|.
name|checksumFor
argument_list|(
name|part32
argument_list|,
name|fsWarehouse
argument_list|)
decl_stmt|;
name|ReplChangeManager
operator|.
name|getInstance
argument_list|(
name|hiveConfCmClearer
argument_list|)
operator|.
name|recycle
argument_list|(
name|dirTbl1
argument_list|,
name|RecycleType
operator|.
name|MOVE
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|ReplChangeManager
operator|.
name|getInstance
argument_list|(
name|hiveConfCmClearer
argument_list|)
operator|.
name|recycle
argument_list|(
name|dirTbl2
argument_list|,
name|RecycleType
operator|.
name|MOVE
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|ReplChangeManager
operator|.
name|getInstance
argument_list|(
name|hiveConfCmClearer
argument_list|)
operator|.
name|recycle
argument_list|(
name|dirTbl3
argument_list|,
name|RecycleType
operator|.
name|MOVE
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|fsWarehouse
operator|.
name|exists
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConfCmClearer
argument_list|,
name|part11
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum11
argument_list|,
name|ReplChangeManager
operator|.
name|getCmRoot
argument_list|(
name|part11
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|fsWarehouse
operator|.
name|exists
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConfCmClearer
argument_list|,
name|part12
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum12
argument_list|,
name|ReplChangeManager
operator|.
name|getCmRoot
argument_list|(
name|part12
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|fsWarehouse
operator|.
name|exists
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConfCmClearer
argument_list|,
name|part21
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum21
argument_list|,
name|ReplChangeManager
operator|.
name|getCmRoot
argument_list|(
name|part21
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|fsWarehouse
operator|.
name|exists
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConfCmClearer
argument_list|,
name|part22
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum22
argument_list|,
name|ReplChangeManager
operator|.
name|getCmRoot
argument_list|(
name|part22
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|fsWarehouse
operator|.
name|exists
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConfCmClearer
argument_list|,
name|part31
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum31
argument_list|,
name|ReplChangeManager
operator|.
name|getCmRoot
argument_list|(
name|part31
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|fsWarehouse
operator|.
name|exists
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConfCmClearer
argument_list|,
name|part32
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum32
argument_list|,
name|ReplChangeManager
operator|.
name|getCmRoot
argument_list|(
name|part32
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|fsWarehouse
operator|.
name|setTimes
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConfCmClearer
argument_list|,
name|part11
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum11
argument_list|,
name|ReplChangeManager
operator|.
name|getCmRoot
argument_list|(
name|part11
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|now
operator|-
literal|86400
operator|*
literal|1000
operator|*
literal|2
argument_list|,
name|now
operator|-
literal|86400
operator|*
literal|1000
operator|*
literal|2
argument_list|)
expr_stmt|;
name|fsWarehouse
operator|.
name|setTimes
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConfCmClearer
argument_list|,
name|part21
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum21
argument_list|,
name|ReplChangeManager
operator|.
name|getCmRoot
argument_list|(
name|part21
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|now
operator|-
literal|86400
operator|*
literal|1000
operator|*
literal|2
argument_list|,
name|now
operator|-
literal|86400
operator|*
literal|1000
operator|*
literal|2
argument_list|)
expr_stmt|;
name|fsWarehouse
operator|.
name|setTimes
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConfCmClearer
argument_list|,
name|part31
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum31
argument_list|,
name|ReplChangeManager
operator|.
name|getCmRoot
argument_list|(
name|part31
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|now
operator|-
literal|86400
operator|*
literal|1000
operator|*
literal|2
argument_list|,
name|now
operator|-
literal|86400
operator|*
literal|1000
operator|*
literal|2
argument_list|)
expr_stmt|;
name|fsWarehouse
operator|.
name|setTimes
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConfCmClearer
argument_list|,
name|part32
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum32
argument_list|,
name|ReplChangeManager
operator|.
name|getCmRoot
argument_list|(
name|part32
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|now
operator|-
literal|86400
operator|*
literal|1000
operator|*
literal|2
argument_list|,
name|now
operator|-
literal|86400
operator|*
literal|1000
operator|*
literal|2
argument_list|)
expr_stmt|;
name|ReplChangeManager
operator|.
name|scheduleCMClearer
argument_list|(
name|hiveConfCmClearer
argument_list|)
expr_stmt|;
name|long
name|start
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|long
name|end
decl_stmt|;
name|boolean
name|cleared
init|=
literal|false
decl_stmt|;
do|do
block|{
name|Thread
operator|.
name|sleep
argument_list|(
literal|200
argument_list|)
expr_stmt|;
name|end
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
if|if
condition|(
name|end
operator|-
name|start
operator|>
literal|5000
condition|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"timeout, cmroot has not been cleared"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|fsWarehouse
operator|.
name|exists
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConfCmClearer
argument_list|,
name|part11
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum11
argument_list|,
name|ReplChangeManager
operator|.
name|getCmRoot
argument_list|(
name|part11
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
operator|&&
name|fsWarehouse
operator|.
name|exists
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConfCmClearer
argument_list|,
name|part12
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum12
argument_list|,
name|ReplChangeManager
operator|.
name|getCmRoot
argument_list|(
name|part12
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
operator|&&
operator|!
name|fsWarehouse
operator|.
name|exists
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConfCmClearer
argument_list|,
name|part21
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum21
argument_list|,
name|ReplChangeManager
operator|.
name|getCmRoot
argument_list|(
name|part21
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
operator|&&
name|fsWarehouse
operator|.
name|exists
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConfCmClearer
argument_list|,
name|part22
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum22
argument_list|,
name|ReplChangeManager
operator|.
name|getCmRoot
argument_list|(
name|part22
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
operator|&&
operator|!
name|fsWarehouse
operator|.
name|exists
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConfCmClearer
argument_list|,
name|part31
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum31
argument_list|,
name|ReplChangeManager
operator|.
name|getCmRoot
argument_list|(
name|part31
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
operator|&&
operator|!
name|fsWarehouse
operator|.
name|exists
argument_list|(
name|ReplChangeManager
operator|.
name|getCMPath
argument_list|(
name|hiveConfCmClearer
argument_list|,
name|part32
operator|.
name|getName
argument_list|()
argument_list|,
name|fileChksum32
argument_list|,
name|ReplChangeManager
operator|.
name|getCmRoot
argument_list|(
name|part32
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
condition|)
block|{
name|cleared
operator|=
literal|true
expr_stmt|;
block|}
block|}
do|while
condition|(
operator|!
name|cleared
condition|)
do|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCmrootEncrypted
parameter_list|()
throws|throws
name|Exception
block|{
name|HiveConf
name|encryptedHiveConf
init|=
operator|new
name|HiveConf
argument_list|(
name|TestReplChangeManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|encryptedHiveConf
operator|.
name|setBoolean
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|REPLCMENABLED
operator|.
name|varname
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|encryptedHiveConf
operator|.
name|setInt
argument_list|(
name|CommonConfigurationKeysPublic
operator|.
name|FS_TRASH_INTERVAL_KEY
argument_list|,
literal|60
argument_list|)
expr_stmt|;
name|encryptedHiveConf
operator|.
name|set
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTOREWAREHOUSE
operator|.
name|varname
argument_list|,
literal|"hdfs://"
operator|+
name|miniDFSCluster
operator|.
name|getNameNode
argument_list|()
operator|.
name|getHostAndPort
argument_list|()
operator|+
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTOREWAREHOUSE
operator|.
name|defaultStrVal
argument_list|)
expr_stmt|;
name|String
name|cmrootdirEncrypted
init|=
literal|"hdfs://"
operator|+
name|miniDFSCluster
operator|.
name|getNameNode
argument_list|()
operator|.
name|getHostAndPort
argument_list|()
operator|+
literal|"/cmrootDirEncrypted"
decl_stmt|;
name|encryptedHiveConf
operator|.
name|set
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|REPLCMDIR
operator|.
name|varname
argument_list|,
name|cmrootdirEncrypted
argument_list|)
expr_stmt|;
name|FileSystem
name|cmrootdirEncryptedFs
init|=
operator|new
name|Path
argument_list|(
name|cmrootdirEncrypted
argument_list|)
operator|.
name|getFileSystem
argument_list|(
name|hiveConf
argument_list|)
decl_stmt|;
name|cmrootdirEncryptedFs
operator|.
name|mkdirs
argument_list|(
operator|new
name|Path
argument_list|(
name|cmrootdirEncrypted
argument_list|)
argument_list|)
expr_stmt|;
name|encryptedHiveConf
operator|.
name|set
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|REPLCMFALLBACKNONENCRYPTEDDIR
operator|.
name|varname
argument_list|,
name|cmrootFallBack
argument_list|)
expr_stmt|;
comment|//Create cm in encrypted zone
name|HadoopShims
operator|.
name|HdfsEncryptionShim
name|shimCmEncrypted
init|=
name|ShimLoader
operator|.
name|getHadoopShims
argument_list|()
operator|.
name|createHdfsEncryptionShim
argument_list|(
name|fs
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|shimCmEncrypted
operator|.
name|createEncryptionZone
argument_list|(
operator|new
name|Path
argument_list|(
name|cmrootdirEncrypted
argument_list|)
argument_list|,
literal|"test_key_db"
argument_list|)
expr_stmt|;
name|ReplChangeManager
operator|.
name|resetReplChangeManagerInstance
argument_list|()
expr_stmt|;
name|Warehouse
name|warehouseEncrypted
init|=
operator|new
name|Warehouse
argument_list|(
name|encryptedHiveConf
argument_list|)
decl_stmt|;
name|FileSystem
name|warehouseFsEncrypted
init|=
name|warehouseEncrypted
operator|.
name|getWhRoot
argument_list|()
operator|.
name|getFileSystem
argument_list|(
name|encryptedHiveConf
argument_list|)
decl_stmt|;
name|FileSystem
name|fsCmEncrypted
init|=
operator|new
name|Path
argument_list|(
name|cmrootdirEncrypted
argument_list|)
operator|.
name|getFileSystem
argument_list|(
name|encryptedHiveConf
argument_list|)
decl_stmt|;
name|fsCmEncrypted
operator|.
name|mkdirs
argument_list|(
name|warehouseEncrypted
operator|.
name|getWhRoot
argument_list|()
argument_list|)
expr_stmt|;
name|Path
name|dirDb
init|=
operator|new
name|Path
argument_list|(
name|warehouseEncrypted
operator|.
name|getWhRoot
argument_list|()
argument_list|,
literal|"db3"
argument_list|)
decl_stmt|;
name|warehouseFsEncrypted
operator|.
name|delete
argument_list|(
name|dirDb
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|warehouseFsEncrypted
operator|.
name|mkdirs
argument_list|(
name|dirDb
argument_list|)
expr_stmt|;
name|Path
name|dirTbl1
init|=
operator|new
name|Path
argument_list|(
name|dirDb
argument_list|,
literal|"tbl1"
argument_list|)
decl_stmt|;
name|warehouseFsEncrypted
operator|.
name|mkdirs
argument_list|(
name|dirTbl1
argument_list|)
expr_stmt|;
name|shimCmEncrypted
operator|.
name|createEncryptionZone
argument_list|(
name|dirTbl1
argument_list|,
literal|"test_key_db"
argument_list|)
expr_stmt|;
name|Path
name|part11
init|=
operator|new
name|Path
argument_list|(
name|dirTbl1
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|part11
argument_list|,
literal|"testClearer11"
argument_list|)
expr_stmt|;
name|boolean
name|exceptionThrown
init|=
literal|false
decl_stmt|;
try|try
block|{
name|ReplChangeManager
operator|.
name|getInstance
argument_list|(
name|encryptedHiveConf
argument_list|)
operator|.
name|recycle
argument_list|(
name|dirTbl1
argument_list|,
name|RecycleType
operator|.
name|MOVE
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|RemoteException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"can't be moved from encryption zone"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|Path
name|dirDbUnEncrypted
init|=
operator|new
name|Path
argument_list|(
name|warehouseEncrypted
operator|.
name|getWhRoot
argument_list|()
argument_list|,
literal|"db3en"
argument_list|)
decl_stmt|;
name|warehouseFsEncrypted
operator|.
name|delete
argument_list|(
name|dirDbUnEncrypted
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|warehouseFsEncrypted
operator|.
name|mkdirs
argument_list|(
name|dirDbUnEncrypted
argument_list|)
expr_stmt|;
name|Path
name|dirTblun1
init|=
operator|new
name|Path
argument_list|(
name|dirDbUnEncrypted
argument_list|,
literal|"tbl1"
argument_list|)
decl_stmt|;
name|warehouseFsEncrypted
operator|.
name|mkdirs
argument_list|(
name|dirTblun1
argument_list|)
expr_stmt|;
name|Path
name|partun11
init|=
operator|new
name|Path
argument_list|(
name|dirTblun1
argument_list|,
literal|"part1"
argument_list|)
decl_stmt|;
name|createFile
argument_list|(
name|partun11
argument_list|,
literal|"testClearer11"
argument_list|)
expr_stmt|;
name|exceptionThrown
operator|=
literal|false
expr_stmt|;
try|try
block|{
name|ReplChangeManager
operator|.
name|getInstance
argument_list|(
name|encryptedHiveConf
argument_list|)
operator|.
name|recycle
argument_list|(
name|dirDbUnEncrypted
argument_list|,
name|RecycleType
operator|.
name|MOVE
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
name|cmrootdirEncryptedFs
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
name|cmrootdirEncrypted
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|ReplChangeManager
operator|.
name|resetReplChangeManagerInstance
argument_list|()
expr_stmt|;
name|initReplChangeManager
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCmrootFallbackEncrypted
parameter_list|()
throws|throws
name|Exception
block|{
name|HiveConf
name|encryptedHiveConf
init|=
operator|new
name|HiveConf
argument_list|(
name|TestReplChangeManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|encryptedHiveConf
operator|.
name|setBoolean
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|REPLCMENABLED
operator|.
name|varname
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|encryptedHiveConf
operator|.
name|setInt
argument_list|(
name|CommonConfigurationKeysPublic
operator|.
name|FS_TRASH_INTERVAL_KEY
argument_list|,
literal|60
argument_list|)
expr_stmt|;
name|encryptedHiveConf
operator|.
name|set
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTOREWAREHOUSE
operator|.
name|varname
argument_list|,
literal|"hdfs://"
operator|+
name|miniDFSCluster
operator|.
name|getNameNode
argument_list|()
operator|.
name|getHostAndPort
argument_list|()
operator|+
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTOREWAREHOUSE
operator|.
name|defaultStrVal
argument_list|)
expr_stmt|;
name|String
name|cmrootdirEncrypted
init|=
literal|"hdfs://"
operator|+
name|miniDFSCluster
operator|.
name|getNameNode
argument_list|()
operator|.
name|getHostAndPort
argument_list|()
operator|+
literal|"/cmrootIsEncrypted"
decl_stmt|;
name|String
name|cmRootFallbackEncrypted
init|=
literal|"hdfs://"
operator|+
name|miniDFSCluster
operator|.
name|getNameNode
argument_list|()
operator|.
name|getHostAndPort
argument_list|()
operator|+
literal|"/cmrootFallbackEncrypted"
decl_stmt|;
name|FileSystem
name|cmrootdirEncryptedFs
init|=
operator|new
name|Path
argument_list|(
name|cmrootdirEncrypted
argument_list|)
operator|.
name|getFileSystem
argument_list|(
name|encryptedHiveConf
argument_list|)
decl_stmt|;
try|try
block|{
name|cmrootdirEncryptedFs
operator|.
name|mkdirs
argument_list|(
operator|new
name|Path
argument_list|(
name|cmrootdirEncrypted
argument_list|)
argument_list|)
expr_stmt|;
name|cmrootdirEncryptedFs
operator|.
name|mkdirs
argument_list|(
operator|new
name|Path
argument_list|(
name|cmRootFallbackEncrypted
argument_list|)
argument_list|)
expr_stmt|;
name|encryptedHiveConf
operator|.
name|set
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|REPLCMDIR
operator|.
name|varname
argument_list|,
name|cmrootdirEncrypted
argument_list|)
expr_stmt|;
name|encryptedHiveConf
operator|.
name|set
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|REPLCMFALLBACKNONENCRYPTEDDIR
operator|.
name|varname
argument_list|,
name|cmRootFallbackEncrypted
argument_list|)
expr_stmt|;
comment|//Create cm in encrypted zone
name|HadoopShims
operator|.
name|HdfsEncryptionShim
name|shimCmEncrypted
init|=
name|ShimLoader
operator|.
name|getHadoopShims
argument_list|()
operator|.
name|createHdfsEncryptionShim
argument_list|(
name|fs
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|shimCmEncrypted
operator|.
name|createEncryptionZone
argument_list|(
operator|new
name|Path
argument_list|(
name|cmrootdirEncrypted
argument_list|)
argument_list|,
literal|"test_key_db"
argument_list|)
expr_stmt|;
name|shimCmEncrypted
operator|.
name|createEncryptionZone
argument_list|(
operator|new
name|Path
argument_list|(
name|cmRootFallbackEncrypted
argument_list|)
argument_list|,
literal|"test_key_db"
argument_list|)
expr_stmt|;
name|ReplChangeManager
operator|.
name|resetReplChangeManagerInstance
argument_list|()
expr_stmt|;
name|boolean
name|exceptionThrown
init|=
literal|false
decl_stmt|;
try|try
block|{
operator|new
name|Warehouse
argument_list|(
name|encryptedHiveConf
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"should not be encrypted"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|cmrootdirEncryptedFs
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
name|cmrootdirEncrypted
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|cmrootdirEncryptedFs
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
name|cmRootFallbackEncrypted
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|ReplChangeManager
operator|.
name|resetReplChangeManagerInstance
argument_list|()
expr_stmt|;
name|initReplChangeManager
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCmrootFallbackRelative
parameter_list|()
throws|throws
name|Exception
block|{
name|HiveConf
name|encryptedHiveConf
init|=
operator|new
name|HiveConf
argument_list|(
name|TestReplChangeManager
operator|.
name|class
argument_list|)
decl_stmt|;
name|encryptedHiveConf
operator|.
name|setBoolean
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|REPLCMENABLED
operator|.
name|varname
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|encryptedHiveConf
operator|.
name|setInt
argument_list|(
name|CommonConfigurationKeysPublic
operator|.
name|FS_TRASH_INTERVAL_KEY
argument_list|,
literal|60
argument_list|)
expr_stmt|;
name|encryptedHiveConf
operator|.
name|set
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTOREWAREHOUSE
operator|.
name|varname
argument_list|,
literal|"hdfs://"
operator|+
name|miniDFSCluster
operator|.
name|getNameNode
argument_list|()
operator|.
name|getHostAndPort
argument_list|()
operator|+
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTOREWAREHOUSE
operator|.
name|defaultStrVal
argument_list|)
expr_stmt|;
name|String
name|cmrootdirEncrypted
init|=
literal|"hdfs://"
operator|+
name|miniDFSCluster
operator|.
name|getNameNode
argument_list|()
operator|.
name|getHostAndPort
argument_list|()
operator|+
literal|"/cmrootIsEncrypted"
decl_stmt|;
name|String
name|cmRootFallbackEncrypted
init|=
literal|"cmrootFallbackEncrypted"
decl_stmt|;
name|FileSystem
name|cmrootdirEncryptedFs
init|=
operator|new
name|Path
argument_list|(
name|cmrootdirEncrypted
argument_list|)
operator|.
name|getFileSystem
argument_list|(
name|encryptedHiveConf
argument_list|)
decl_stmt|;
try|try
block|{
name|cmrootdirEncryptedFs
operator|.
name|mkdirs
argument_list|(
operator|new
name|Path
argument_list|(
name|cmrootdirEncrypted
argument_list|)
argument_list|)
expr_stmt|;
name|cmrootdirEncryptedFs
operator|.
name|mkdirs
argument_list|(
operator|new
name|Path
argument_list|(
name|cmRootFallbackEncrypted
argument_list|)
argument_list|)
expr_stmt|;
name|encryptedHiveConf
operator|.
name|set
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|REPLCMDIR
operator|.
name|varname
argument_list|,
name|cmrootdirEncrypted
argument_list|)
expr_stmt|;
name|encryptedHiveConf
operator|.
name|set
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|REPLCMFALLBACKNONENCRYPTEDDIR
operator|.
name|varname
argument_list|,
name|cmRootFallbackEncrypted
argument_list|)
expr_stmt|;
comment|//Create cm in encrypted zone
name|HadoopShims
operator|.
name|HdfsEncryptionShim
name|shimCmEncrypted
init|=
name|ShimLoader
operator|.
name|getHadoopShims
argument_list|()
operator|.
name|createHdfsEncryptionShim
argument_list|(
name|fs
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|shimCmEncrypted
operator|.
name|createEncryptionZone
argument_list|(
operator|new
name|Path
argument_list|(
name|cmrootdirEncrypted
argument_list|)
argument_list|,
literal|"test_key_db"
argument_list|)
expr_stmt|;
name|ReplChangeManager
operator|.
name|resetReplChangeManagerInstance
argument_list|()
expr_stmt|;
name|boolean
name|exceptionThrown
init|=
literal|false
decl_stmt|;
try|try
block|{
operator|new
name|Warehouse
argument_list|(
name|encryptedHiveConf
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
name|exceptionThrown
operator|=
literal|true
expr_stmt|;
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|contains
argument_list|(
literal|"should be absolute"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|exceptionThrown
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|cmrootdirEncryptedFs
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
name|cmrootdirEncrypted
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|cmrootdirEncryptedFs
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
name|cmRootFallbackEncrypted
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|ReplChangeManager
operator|.
name|resetReplChangeManagerInstance
argument_list|()
expr_stmt|;
name|initReplChangeManager
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|createFile
parameter_list|(
name|Path
name|path
parameter_list|,
name|String
name|content
parameter_list|)
throws|throws
name|IOException
block|{
name|FSDataOutputStream
name|output
init|=
name|path
operator|.
name|getFileSystem
argument_list|(
name|hiveConf
argument_list|)
operator|.
name|create
argument_list|(
name|path
argument_list|)
decl_stmt|;
name|output
operator|.
name|writeChars
argument_list|(
name|content
argument_list|)
expr_stmt|;
name|output
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|silentDropDatabase
parameter_list|(
name|String
name|dbName
parameter_list|)
throws|throws
name|TException
block|{
try|try
block|{
for|for
control|(
name|String
name|tableName
range|:
name|client
operator|.
name|getTables
argument_list|(
name|dbName
argument_list|,
literal|"*"
argument_list|)
control|)
block|{
name|client
operator|.
name|dropTable
argument_list|(
name|dbName
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
name|client
operator|.
name|dropDatabase
argument_list|(
name|dbName
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchObjectException
decl||
name|InvalidOperationException
name|e
parameter_list|)
block|{
comment|// NOP
block|}
block|}
block|}
end_class

end_unit

