begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|io
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntryScope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntryType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|DistributedFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|io
operator|.
name|HdfsUtils
operator|.
name|HadoopFileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Predicate
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Iterables
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_class
specifier|public
class|class
name|TestHadoopFileStatus
block|{
specifier|private
specifier|static
name|HiveConf
name|hiveConf
decl_stmt|;
specifier|private
specifier|static
name|HadoopFileStatus
name|sourceStatus
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|setUp
parameter_list|()
throws|throws
name|IOException
block|{
name|hiveConf
operator|=
operator|new
name|HiveConf
argument_list|(
name|TestHadoopFileStatus
operator|.
name|class
argument_list|)
expr_stmt|;
name|hiveConf
operator|.
name|set
argument_list|(
literal|"dfs.namenode.acls.enabled"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|AclEntry
name|newAclEntry
parameter_list|(
name|AclEntryScope
name|scope
parameter_list|,
name|AclEntryType
name|type
parameter_list|,
name|FsAction
name|permission
parameter_list|)
block|{
return|return
operator|new
name|AclEntry
operator|.
name|Builder
argument_list|()
operator|.
name|setScope
argument_list|(
name|scope
argument_list|)
operator|.
name|setType
argument_list|(
name|type
argument_list|)
operator|.
name|setPermission
argument_list|(
name|permission
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|/*    * HdfsUtils.setFullFileStatus(..) is called from multiple parallel threads. If AclEntries    * is modifiable the method will not be thread safe and could cause random concurrency issues    * This test case checks if the aclEntries returned from HadoopFileStatus is thread-safe or not    */
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|UnsupportedOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testHadoopFileStatusAclEntries
parameter_list|()
throws|throws
name|IOException
block|{
name|FileSystem
name|mockDfs
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|DistributedFileSystem
operator|.
name|class
argument_list|)
decl_stmt|;
name|Path
name|mockPath
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Path
operator|.
name|class
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|AclEntry
argument_list|>
name|aclEntries
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|aclEntries
operator|.
name|add
argument_list|(
name|newAclEntry
argument_list|(
name|AclEntryScope
operator|.
name|ACCESS
argument_list|,
name|AclEntryType
operator|.
name|USER
argument_list|,
name|FsAction
operator|.
name|ALL
argument_list|)
argument_list|)
expr_stmt|;
name|aclEntries
operator|.
name|add
argument_list|(
name|newAclEntry
argument_list|(
name|AclEntryScope
operator|.
name|ACCESS
argument_list|,
name|AclEntryType
operator|.
name|GROUP
argument_list|,
name|FsAction
operator|.
name|READ_EXECUTE
argument_list|)
argument_list|)
expr_stmt|;
name|aclEntries
operator|.
name|add
argument_list|(
name|newAclEntry
argument_list|(
name|AclEntryScope
operator|.
name|ACCESS
argument_list|,
name|AclEntryType
operator|.
name|OTHER
argument_list|,
name|FsAction
operator|.
name|NONE
argument_list|)
argument_list|)
expr_stmt|;
name|AclStatus
name|aclStatus
init|=
operator|new
name|AclStatus
operator|.
name|Builder
argument_list|()
operator|.
name|owner
argument_list|(
literal|"dummyOwner"
argument_list|)
operator|.
name|group
argument_list|(
literal|"dummyGroup"
argument_list|)
operator|.
name|stickyBit
argument_list|(
literal|true
argument_list|)
operator|.
name|addEntries
argument_list|(
name|aclEntries
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|FileStatus
name|mockFileStatus
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|FileStatus
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockDfs
operator|.
name|getAclStatus
argument_list|(
name|mockPath
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|aclStatus
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockDfs
operator|.
name|getFileStatus
argument_list|(
name|mockPath
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockFileStatus
argument_list|)
expr_stmt|;
name|sourceStatus
operator|=
operator|new
name|HadoopFileStatus
argument_list|(
name|hiveConf
argument_list|,
name|mockDfs
argument_list|,
name|mockPath
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|sourceStatus
operator|.
name|getAclEntries
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|sourceStatus
operator|.
name|getAclEntries
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|3
argument_list|)
expr_stmt|;
name|Iterables
operator|.
name|removeIf
argument_list|(
name|sourceStatus
operator|.
name|getAclEntries
argument_list|()
argument_list|,
operator|new
name|Predicate
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|apply
parameter_list|(
name|AclEntry
name|input
parameter_list|)
block|{
if|if
condition|(
name|input
operator|.
name|getName
argument_list|()
operator|==
literal|null
condition|)
block|{
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

