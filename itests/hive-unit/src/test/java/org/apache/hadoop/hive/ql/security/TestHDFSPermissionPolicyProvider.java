begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsPermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hdfs
operator|.
name|MiniDFSCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|IMetaStoreClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|TableType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|FieldSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|SerDeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|StorageDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|conf
operator|.
name|MetastoreConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Hive
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|HDFSPermissionPolicyProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HivePrivilegeObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HivePrivilegeObject
operator|.
name|HivePrivilegeObjectType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|plugin
operator|.
name|HiveResourceACLs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test cases for privilege synchronizer for storage based authorizer  */
end_comment

begin_class
specifier|public
class|class
name|TestHDFSPermissionPolicyProvider
block|{
specifier|private
specifier|static
name|MiniDFSCluster
name|mDfs
decl_stmt|;
specifier|private
specifier|static
name|IMetaStoreClient
name|client
decl_stmt|;
specifier|private
specifier|static
name|Configuration
name|conf
decl_stmt|;
specifier|private
specifier|static
name|String
name|defaultTbl1Loc
decl_stmt|,
name|defaultTbl2Loc
decl_stmt|,
name|db1Loc
decl_stmt|,
name|db1Tbl1Loc
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|mDfs
operator|=
operator|new
name|MiniDFSCluster
operator|.
name|Builder
argument_list|(
operator|new
name|Configuration
argument_list|()
argument_list|)
operator|.
name|numDataNodes
argument_list|(
literal|1
argument_list|)
operator|.
name|format
argument_list|(
literal|true
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"fs.defaultFS"
argument_list|,
literal|"hdfs://"
operator|+
name|mDfs
operator|.
name|getNameNode
argument_list|()
operator|.
name|getHostAndPort
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|warehouseLocation
init|=
literal|"hdfs://"
operator|+
name|mDfs
operator|.
name|getNameNode
argument_list|()
operator|.
name|getHostAndPort
argument_list|()
operator|+
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|WAREHOUSE
operator|.
name|getDefaultVal
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|WAREHOUSE
operator|.
name|getVarname
argument_list|()
argument_list|,
name|warehouseLocation
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|AUTO_CREATE_ALL
operator|.
name|getVarname
argument_list|()
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|SCHEMA_VERIFICATION
operator|.
name|getVarname
argument_list|()
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|client
operator|=
name|Hive
operator|.
name|get
argument_list|(
name|conf
argument_list|,
name|TestHDFSPermissionPolicyProvider
operator|.
name|class
argument_list|)
operator|.
name|getMSC
argument_list|()
expr_stmt|;
try|try
block|{
name|client
operator|.
name|dropTable
argument_list|(
literal|"default"
argument_list|,
literal|"tbl1"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{     }
try|try
block|{
name|client
operator|.
name|dropTable
argument_list|(
literal|"default"
argument_list|,
literal|"tbl2"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{     }
try|try
block|{
name|client
operator|.
name|dropTable
argument_list|(
literal|"db1"
argument_list|,
literal|"tbl1"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{     }
try|try
block|{
name|client
operator|.
name|dropDatabase
argument_list|(
literal|"db1"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{     }
name|defaultTbl1Loc
operator|=
name|warehouseLocation
operator|+
literal|"/tbl1"
expr_stmt|;
name|defaultTbl2Loc
operator|=
name|warehouseLocation
operator|+
literal|"/tbl2"
expr_stmt|;
name|db1Loc
operator|=
name|warehouseLocation
operator|+
literal|"/db1"
expr_stmt|;
name|db1Tbl1Loc
operator|=
name|warehouseLocation
operator|+
literal|"/db1/tbl1"
expr_stmt|;
name|int
name|now
init|=
operator|(
name|int
operator|)
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|/
literal|1000
decl_stmt|;
name|FieldSchema
name|col1
init|=
operator|new
name|FieldSchema
argument_list|(
literal|"col1"
argument_list|,
literal|"int"
argument_list|,
literal|"no comment"
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
name|col1
argument_list|)
expr_stmt|;
name|SerDeInfo
name|serde
init|=
operator|new
name|SerDeInfo
argument_list|(
literal|"serde"
argument_list|,
literal|"seriallib"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|StorageDescriptor
name|sd
init|=
operator|new
name|StorageDescriptor
argument_list|(
name|cols
argument_list|,
name|defaultTbl1Loc
argument_list|,
literal|"input"
argument_list|,
literal|"output"
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|,
name|serde
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|)
decl_stmt|;
name|Table
name|tbl
init|=
operator|new
name|Table
argument_list|(
literal|"tbl1"
argument_list|,
literal|"default"
argument_list|,
literal|"foo"
argument_list|,
name|now
argument_list|,
name|now
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
literal|null
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|TableType
operator|.
name|MANAGED_TABLE
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|createTable
argument_list|(
name|tbl
argument_list|)
expr_stmt|;
name|sd
operator|=
operator|new
name|StorageDescriptor
argument_list|(
name|cols
argument_list|,
name|defaultTbl2Loc
argument_list|,
literal|"input"
argument_list|,
literal|"output"
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|,
name|serde
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|tbl
operator|=
operator|new
name|Table
argument_list|(
literal|"tbl2"
argument_list|,
literal|"default"
argument_list|,
literal|"foo"
argument_list|,
name|now
argument_list|,
name|now
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
literal|null
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|TableType
operator|.
name|MANAGED_TABLE
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|client
operator|.
name|createTable
argument_list|(
name|tbl
argument_list|)
expr_stmt|;
name|Database
name|db
init|=
operator|new
name|Database
argument_list|(
literal|"db1"
argument_list|,
literal|"no description"
argument_list|,
name|db1Loc
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|sd
operator|=
operator|new
name|StorageDescriptor
argument_list|(
name|cols
argument_list|,
name|db1Tbl1Loc
argument_list|,
literal|"input"
argument_list|,
literal|"output"
argument_list|,
literal|false
argument_list|,
literal|0
argument_list|,
name|serde
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|tbl
operator|=
operator|new
name|Table
argument_list|(
literal|"tbl1"
argument_list|,
literal|"db1"
argument_list|,
literal|"foo"
argument_list|,
name|now
argument_list|,
name|now
argument_list|,
literal|0
argument_list|,
name|sd
argument_list|,
literal|null
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|TableType
operator|.
name|MANAGED_TABLE
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|client
operator|.
name|createTable
argument_list|(
name|tbl
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPolicyProvider
parameter_list|()
throws|throws
name|Exception
block|{
name|HDFSPermissionPolicyProvider
name|policyProvider
init|=
operator|new
name|HDFSPermissionPolicyProvider
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|FileSystem
name|fs
init|=
name|FileSystem
operator|.
name|get
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
operator|new
name|Path
argument_list|(
name|defaultTbl1Loc
argument_list|)
argument_list|,
literal|"user1"
argument_list|,
literal|"group1"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
operator|new
name|Path
argument_list|(
name|defaultTbl2Loc
argument_list|)
argument_list|,
literal|"user1"
argument_list|,
literal|"group1"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
operator|new
name|Path
argument_list|(
name|db1Loc
argument_list|)
argument_list|,
literal|"user1"
argument_list|,
literal|"group1"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setOwner
argument_list|(
operator|new
name|Path
argument_list|(
name|db1Tbl1Loc
argument_list|)
argument_list|,
literal|"user1"
argument_list|,
literal|"group1"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
operator|new
name|Path
argument_list|(
name|defaultTbl1Loc
argument_list|)
argument_list|,
operator|new
name|FsPermission
argument_list|(
literal|"444"
argument_list|)
argument_list|)
expr_stmt|;
comment|// r--r--r--
name|HiveResourceACLs
name|acls
init|=
name|policyProvider
operator|.
name|getResourceACLs
argument_list|(
operator|new
name|HivePrivilegeObject
argument_list|(
name|HivePrivilegeObjectType
operator|.
name|TABLE_OR_VIEW
argument_list|,
literal|"default"
argument_list|,
literal|"tbl1"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|acls
operator|.
name|getUserPermissions
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|acls
operator|.
name|getUserPermissions
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|contains
argument_list|(
literal|"user1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|acls
operator|.
name|getGroupPermissions
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|acls
operator|.
name|getGroupPermissions
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|contains
argument_list|(
literal|"group1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|acls
operator|.
name|getGroupPermissions
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|contains
argument_list|(
literal|"public"
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
operator|new
name|Path
argument_list|(
name|defaultTbl1Loc
argument_list|)
argument_list|,
operator|new
name|FsPermission
argument_list|(
literal|"440"
argument_list|)
argument_list|)
expr_stmt|;
comment|// r--r-----
name|acls
operator|=
name|policyProvider
operator|.
name|getResourceACLs
argument_list|(
operator|new
name|HivePrivilegeObject
argument_list|(
name|HivePrivilegeObjectType
operator|.
name|TABLE_OR_VIEW
argument_list|,
literal|"default"
argument_list|,
literal|"tbl1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|acls
operator|.
name|getUserPermissions
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|acls
operator|.
name|getUserPermissions
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|,
literal|"user1"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|acls
operator|.
name|getGroupPermissions
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|acls
operator|.
name|getGroupPermissions
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|contains
argument_list|(
literal|"group1"
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
operator|new
name|Path
argument_list|(
name|defaultTbl1Loc
argument_list|)
argument_list|,
operator|new
name|FsPermission
argument_list|(
literal|"404"
argument_list|)
argument_list|)
expr_stmt|;
comment|// r-----r--
name|acls
operator|=
name|policyProvider
operator|.
name|getResourceACLs
argument_list|(
operator|new
name|HivePrivilegeObject
argument_list|(
name|HivePrivilegeObjectType
operator|.
name|TABLE_OR_VIEW
argument_list|,
literal|"default"
argument_list|,
literal|"tbl1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|acls
operator|.
name|getUserPermissions
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|acls
operator|.
name|getUserPermissions
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|contains
argument_list|(
literal|"user1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|acls
operator|.
name|getGroupPermissions
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|acls
operator|.
name|getGroupPermissions
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|contains
argument_list|(
literal|"public"
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
operator|new
name|Path
argument_list|(
name|defaultTbl1Loc
argument_list|)
argument_list|,
operator|new
name|FsPermission
argument_list|(
literal|"400"
argument_list|)
argument_list|)
expr_stmt|;
comment|// r--------
name|acls
operator|=
name|policyProvider
operator|.
name|getResourceACLs
argument_list|(
operator|new
name|HivePrivilegeObject
argument_list|(
name|HivePrivilegeObjectType
operator|.
name|TABLE_OR_VIEW
argument_list|,
literal|"default"
argument_list|,
literal|"tbl1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|acls
operator|.
name|getUserPermissions
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|acls
operator|.
name|getUserPermissions
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|contains
argument_list|(
literal|"user1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|acls
operator|.
name|getGroupPermissions
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
operator|new
name|Path
argument_list|(
name|defaultTbl1Loc
argument_list|)
argument_list|,
operator|new
name|FsPermission
argument_list|(
literal|"004"
argument_list|)
argument_list|)
expr_stmt|;
comment|// ------r--
name|fs
operator|.
name|setPermission
argument_list|(
operator|new
name|Path
argument_list|(
name|defaultTbl2Loc
argument_list|)
argument_list|,
operator|new
name|FsPermission
argument_list|(
literal|"777"
argument_list|)
argument_list|)
expr_stmt|;
comment|// rwxrwxrwx
name|acls
operator|=
name|policyProvider
operator|.
name|getResourceACLs
argument_list|(
operator|new
name|HivePrivilegeObject
argument_list|(
name|HivePrivilegeObjectType
operator|.
name|TABLE_OR_VIEW
argument_list|,
literal|"default"
argument_list|,
literal|"tbl1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|acls
operator|.
name|getUserPermissions
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|acls
operator|.
name|getGroupPermissions
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|acls
operator|.
name|getGroupPermissions
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|contains
argument_list|(
literal|"public"
argument_list|)
argument_list|)
expr_stmt|;
name|acls
operator|=
name|policyProvider
operator|.
name|getResourceACLs
argument_list|(
operator|new
name|HivePrivilegeObject
argument_list|(
name|HivePrivilegeObjectType
operator|.
name|TABLE_OR_VIEW
argument_list|,
literal|"default"
argument_list|,
literal|"tbl2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|acls
operator|.
name|getUserPermissions
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|acls
operator|.
name|getUserPermissions
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|contains
argument_list|(
literal|"user1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|acls
operator|.
name|getGroupPermissions
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|acls
operator|.
name|getGroupPermissions
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|contains
argument_list|(
literal|"group1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|acls
operator|.
name|getGroupPermissions
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|contains
argument_list|(
literal|"public"
argument_list|)
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
operator|new
name|Path
argument_list|(
name|db1Loc
argument_list|)
argument_list|,
operator|new
name|FsPermission
argument_list|(
literal|"400"
argument_list|)
argument_list|)
expr_stmt|;
comment|// ------r--
name|fs
operator|.
name|delete
argument_list|(
operator|new
name|Path
argument_list|(
name|db1Tbl1Loc
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|acls
operator|=
name|policyProvider
operator|.
name|getResourceACLs
argument_list|(
operator|new
name|HivePrivilegeObject
argument_list|(
name|HivePrivilegeObjectType
operator|.
name|DATABASE
argument_list|,
literal|"db1"
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|acls
operator|.
name|getUserPermissions
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|acls
operator|.
name|getUserPermissions
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|contains
argument_list|(
literal|"user1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|acls
operator|.
name|getGroupPermissions
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|acls
operator|=
name|policyProvider
operator|.
name|getResourceACLs
argument_list|(
operator|new
name|HivePrivilegeObject
argument_list|(
name|HivePrivilegeObjectType
operator|.
name|TABLE_OR_VIEW
argument_list|,
literal|"db1"
argument_list|,
literal|"tbl1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|acls
operator|.
name|getUserPermissions
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|acls
operator|.
name|getUserPermissions
argument_list|()
operator|.
name|keySet
argument_list|()
operator|.
name|contains
argument_list|(
literal|"user1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|acls
operator|.
name|getGroupPermissions
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

