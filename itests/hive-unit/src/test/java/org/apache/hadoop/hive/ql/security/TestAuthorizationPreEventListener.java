begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|cli
operator|.
name|CliSessionState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|HiveMetaStoreClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|MetaStoreTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Partition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|SerDeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|security
operator|.
name|HadoopThriftAuthBridge
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|DriverFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|IDriver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|DummyHiveMetastoreAuthorizationProvider
operator|.
name|AuthCallContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|security
operator|.
name|authorization
operator|.
name|AuthorizationPreEventListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|session
operator|.
name|SessionState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_comment
comment|/**  * TestAuthorizationPreEventListener. Test case for  * {@link org.apache.hadoop.hive.ql.security.authorization.AuthorizationPreEventListener} and  * {@link org.apache.hadoop.hive.metastore.MetaStorePreEventListener}  */
end_comment

begin_class
specifier|public
class|class
name|TestAuthorizationPreEventListener
extends|extends
name|TestCase
block|{
specifier|private
name|HiveConf
name|clientHiveConf
decl_stmt|;
specifier|private
name|HiveMetaStoreClient
name|msc
decl_stmt|;
specifier|private
name|IDriver
name|driver
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTORE_PRE_EVENT_LISTENERS
operator|.
name|varname
argument_list|,
name|AuthorizationPreEventListener
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_METASTORE_AUTHORIZATION_MANAGER
operator|.
name|varname
argument_list|,
name|DummyHiveMetastoreAuthorizationProvider
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_METASTORE_AUTHENTICATOR_MANAGER
operator|.
name|varname
argument_list|,
name|HadoopDefaultMetastoreAuthenticator
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|port
init|=
name|MetaStoreTestUtils
operator|.
name|startMetaStoreWithRetry
argument_list|()
decl_stmt|;
name|clientHiveConf
operator|=
operator|new
name|HiveConf
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|clientHiveConf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTOREURIS
argument_list|,
literal|"thrift://localhost:"
operator|+
name|port
argument_list|)
expr_stmt|;
name|clientHiveConf
operator|.
name|setIntVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTORETHRIFTCONNECTIONRETRIES
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|clientHiveConf
operator|.
name|set
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_SUPPORT_CONCURRENCY
operator|.
name|varname
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|clientHiveConf
operator|.
name|set
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|PREEXECHOOKS
operator|.
name|varname
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|clientHiveConf
operator|.
name|set
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|POSTEXECHOOKS
operator|.
name|varname
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|SessionState
operator|.
name|start
argument_list|(
operator|new
name|CliSessionState
argument_list|(
name|clientHiveConf
argument_list|)
argument_list|)
expr_stmt|;
name|msc
operator|=
operator|new
name|HiveMetaStoreClient
argument_list|(
name|clientHiveConf
argument_list|)
expr_stmt|;
name|driver
operator|=
name|DriverFactory
operator|.
name|newDriver
argument_list|(
name|clientHiveConf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|tearDown
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|validateCreateDb
parameter_list|(
name|Database
name|expectedDb
parameter_list|,
name|Database
name|actualDb
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|expectedDb
operator|.
name|getName
argument_list|()
argument_list|,
name|actualDb
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedDb
operator|.
name|getLocationUri
argument_list|()
argument_list|,
name|actualDb
operator|.
name|getLocationUri
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateTable
parameter_list|(
name|Table
name|expectedTable
parameter_list|,
name|Table
name|actualTable
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|expectedTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|actualTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|actualTable
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
comment|// We won't try to be too strict in checking this because we're comparing
comment|// table create intents with observed tables created.
comment|// If it does have a location though, we will compare, as with external tables
if|if
condition|(
operator|(
name|actualTable
operator|.
name|getSd
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|actualTable
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|!=
literal|null
operator|)
condition|)
block|{
name|assertEquals
argument_list|(
name|expectedTable
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
argument_list|,
name|actualTable
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|validateCreateTable
parameter_list|(
name|Table
name|expectedTable
parameter_list|,
name|Table
name|actualTable
parameter_list|)
block|{
name|validateTable
argument_list|(
name|expectedTable
argument_list|,
name|actualTable
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateAddPartition
parameter_list|(
name|Partition
name|expectedPartition
parameter_list|,
name|Partition
name|actualPartition
parameter_list|)
block|{
name|validatePartition
argument_list|(
name|expectedPartition
argument_list|,
name|actualPartition
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validatePartition
parameter_list|(
name|Partition
name|expectedPartition
parameter_list|,
name|Partition
name|actualPartition
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|expectedPartition
operator|.
name|getValues
argument_list|()
argument_list|,
name|actualPartition
operator|.
name|getValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedPartition
operator|.
name|getDbName
argument_list|()
argument_list|,
name|actualPartition
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedPartition
operator|.
name|getTableName
argument_list|()
argument_list|,
name|actualPartition
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
comment|// assertEquals(expectedPartition.getSd().getLocation(),
comment|//     actualPartition.getSd().getLocation());
comment|// we don't compare locations, because the location can still be empty in
comment|// the pre-event listener before it is created.
name|assertEquals
argument_list|(
name|expectedPartition
operator|.
name|getSd
argument_list|()
operator|.
name|getInputFormat
argument_list|()
argument_list|,
name|actualPartition
operator|.
name|getSd
argument_list|()
operator|.
name|getInputFormat
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedPartition
operator|.
name|getSd
argument_list|()
operator|.
name|getOutputFormat
argument_list|()
argument_list|,
name|actualPartition
operator|.
name|getSd
argument_list|()
operator|.
name|getOutputFormat
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedPartition
operator|.
name|getSd
argument_list|()
operator|.
name|getSerdeInfo
argument_list|()
argument_list|,
name|actualPartition
operator|.
name|getSd
argument_list|()
operator|.
name|getSerdeInfo
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateAlterPartition
parameter_list|(
name|Partition
name|expectedOldPartition
parameter_list|,
name|Partition
name|expectedNewPartition
parameter_list|,
name|String
name|actualOldPartitionDbName
parameter_list|,
name|String
name|actualOldPartitionTblName
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|actualOldPartitionValues
parameter_list|,
name|Partition
name|actualNewPartition
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|expectedOldPartition
operator|.
name|getValues
argument_list|()
argument_list|,
name|actualOldPartitionValues
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedOldPartition
operator|.
name|getDbName
argument_list|()
argument_list|,
name|actualOldPartitionDbName
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedOldPartition
operator|.
name|getTableName
argument_list|()
argument_list|,
name|actualOldPartitionTblName
argument_list|)
expr_stmt|;
name|validatePartition
argument_list|(
name|expectedNewPartition
argument_list|,
name|actualNewPartition
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateAlterTable
parameter_list|(
name|Table
name|expectedOldTable
parameter_list|,
name|Table
name|expectedNewTable
parameter_list|,
name|Table
name|actualOldTable
parameter_list|,
name|Table
name|actualNewTable
parameter_list|)
block|{
name|validateTable
argument_list|(
name|expectedOldTable
argument_list|,
name|actualOldTable
argument_list|)
expr_stmt|;
name|validateTable
argument_list|(
name|expectedNewTable
argument_list|,
name|actualNewTable
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateDropPartition
parameter_list|(
name|Partition
name|expectedPartition
parameter_list|,
name|Partition
name|actualPartition
parameter_list|)
block|{
name|validatePartition
argument_list|(
name|expectedPartition
argument_list|,
name|actualPartition
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateDropTable
parameter_list|(
name|Table
name|expectedTable
parameter_list|,
name|Table
name|actualTable
parameter_list|)
block|{
name|validateTable
argument_list|(
name|expectedTable
argument_list|,
name|actualTable
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateDropDb
parameter_list|(
name|Database
name|expectedDb
parameter_list|,
name|Database
name|actualDb
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|expectedDb
argument_list|,
name|actualDb
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateAlterDb
parameter_list|(
name|Database
name|expectedDb
parameter_list|,
name|Database
name|actualDb
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|expectedDb
argument_list|,
name|actualDb
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testListener
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|dbName
init|=
literal|"hive3705"
decl_stmt|;
name|String
name|tblName
init|=
literal|"tmptbl"
decl_stmt|;
name|String
name|renamed
init|=
literal|"tmptbl2"
decl_stmt|;
name|int
name|listSize
init|=
literal|0
decl_stmt|;
name|List
argument_list|<
name|AuthCallContext
argument_list|>
name|authCalls
init|=
name|DummyHiveMetastoreAuthorizationProvider
operator|.
name|authCalls
decl_stmt|;
name|assertEquals
argument_list|(
name|authCalls
operator|.
name|size
argument_list|()
argument_list|,
name|listSize
argument_list|)
expr_stmt|;
name|driver
operator|.
name|run
argument_list|(
literal|"create database "
operator|+
name|dbName
argument_list|)
expr_stmt|;
name|listSize
operator|++
expr_stmt|;
name|Database
name|dbFromEvent
init|=
operator|(
name|Database
operator|)
name|assertAndExtractSingleObjectFromEvent
argument_list|(
name|listSize
argument_list|,
name|authCalls
argument_list|,
name|DummyHiveMetastoreAuthorizationProvider
operator|.
name|AuthCallContextType
operator|.
name|DB
argument_list|)
decl_stmt|;
name|Database
name|db
init|=
name|msc
operator|.
name|getDatabase
argument_list|(
name|dbName
argument_list|)
decl_stmt|;
name|validateCreateDb
argument_list|(
name|db
argument_list|,
name|dbFromEvent
argument_list|)
expr_stmt|;
name|driver
operator|.
name|run
argument_list|(
literal|"use "
operator|+
name|dbName
argument_list|)
expr_stmt|;
name|driver
operator|.
name|run
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"create table %s (a string) partitioned by (b string)"
argument_list|,
name|tblName
argument_list|)
argument_list|)
expr_stmt|;
name|listSize
operator|=
name|authCalls
operator|.
name|size
argument_list|()
expr_stmt|;
name|Table
name|tblFromEvent
init|=
operator|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Table
operator|)
name|assertAndExtractSingleObjectFromEvent
argument_list|(
name|listSize
argument_list|,
name|authCalls
argument_list|,
name|DummyHiveMetastoreAuthorizationProvider
operator|.
name|AuthCallContextType
operator|.
name|TABLE
argument_list|)
operator|)
operator|.
name|getTTable
argument_list|()
decl_stmt|;
name|Table
name|tbl
init|=
name|msc
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|tbl
operator|.
name|isSetId
argument_list|()
argument_list|)
expr_stmt|;
name|tbl
operator|.
name|unsetId
argument_list|()
expr_stmt|;
name|validateCreateTable
argument_list|(
name|tbl
argument_list|,
name|tblFromEvent
argument_list|)
expr_stmt|;
name|driver
operator|.
name|run
argument_list|(
literal|"alter table tmptbl add partition (b='2011')"
argument_list|)
expr_stmt|;
name|listSize
operator|=
name|authCalls
operator|.
name|size
argument_list|()
expr_stmt|;
name|Partition
name|ptnFromEvent
init|=
operator|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Partition
operator|)
name|assertAndExtractSingleObjectFromEvent
argument_list|(
name|listSize
argument_list|,
name|authCalls
argument_list|,
name|DummyHiveMetastoreAuthorizationProvider
operator|.
name|AuthCallContextType
operator|.
name|PARTITION
argument_list|)
operator|)
operator|.
name|getTPartition
argument_list|()
decl_stmt|;
name|Partition
name|part
init|=
name|msc
operator|.
name|getPartition
argument_list|(
literal|"hive3705"
argument_list|,
literal|"tmptbl"
argument_list|,
literal|"b=2011"
argument_list|)
decl_stmt|;
name|validateAddPartition
argument_list|(
name|part
argument_list|,
name|ptnFromEvent
argument_list|)
expr_stmt|;
name|driver
operator|.
name|run
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"alter table %s touch partition (%s)"
argument_list|,
name|tblName
argument_list|,
literal|"b='2011'"
argument_list|)
argument_list|)
expr_stmt|;
name|listSize
operator|=
name|authCalls
operator|.
name|size
argument_list|()
expr_stmt|;
name|Partition
name|ptnFromEventAfterAlter
init|=
operator|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Partition
operator|)
name|assertAndExtractSingleObjectFromEvent
argument_list|(
name|listSize
argument_list|,
name|authCalls
argument_list|,
name|DummyHiveMetastoreAuthorizationProvider
operator|.
name|AuthCallContextType
operator|.
name|PARTITION
argument_list|)
operator|)
operator|.
name|getTPartition
argument_list|()
decl_stmt|;
comment|//the partition did not change,
comment|// so the new partition should be similar to the original partition
name|Partition
name|modifiedP
init|=
name|msc
operator|.
name|getPartition
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|,
literal|"b=2011"
argument_list|)
decl_stmt|;
name|validateAlterPartition
argument_list|(
name|part
argument_list|,
name|modifiedP
argument_list|,
name|ptnFromEventAfterAlter
operator|.
name|getDbName
argument_list|()
argument_list|,
name|ptnFromEventAfterAlter
operator|.
name|getTableName
argument_list|()
argument_list|,
name|ptnFromEventAfterAlter
operator|.
name|getValues
argument_list|()
argument_list|,
name|ptnFromEventAfterAlter
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|part_vals
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|part_vals
operator|.
name|add
argument_list|(
literal|"c=2012"
argument_list|)
expr_stmt|;
name|listSize
operator|=
name|authCalls
operator|.
name|size
argument_list|()
expr_stmt|;
name|Partition
name|newPart
init|=
name|msc
operator|.
name|appendPartition
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|,
name|part_vals
argument_list|)
decl_stmt|;
name|listSize
operator|++
expr_stmt|;
name|Partition
name|newPtnFromEvent
init|=
operator|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Partition
operator|)
name|assertAndExtractSingleObjectFromEvent
argument_list|(
name|listSize
argument_list|,
name|authCalls
argument_list|,
name|DummyHiveMetastoreAuthorizationProvider
operator|.
name|AuthCallContextType
operator|.
name|PARTITION
argument_list|)
operator|)
operator|.
name|getTPartition
argument_list|()
decl_stmt|;
name|validateAddPartition
argument_list|(
name|newPart
argument_list|,
name|newPtnFromEvent
argument_list|)
expr_stmt|;
name|driver
operator|.
name|run
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"alter table %s rename to %s"
argument_list|,
name|tblName
argument_list|,
name|renamed
argument_list|)
argument_list|)
expr_stmt|;
name|listSize
operator|=
name|authCalls
operator|.
name|size
argument_list|()
expr_stmt|;
name|Table
name|renamedTableFromEvent
init|=
operator|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Table
operator|)
name|assertAndExtractSingleObjectFromEvent
argument_list|(
name|listSize
argument_list|,
name|authCalls
argument_list|,
name|DummyHiveMetastoreAuthorizationProvider
operator|.
name|AuthCallContextType
operator|.
name|TABLE
argument_list|)
operator|)
operator|.
name|getTTable
argument_list|()
decl_stmt|;
name|Table
name|renamedTable
init|=
name|msc
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|renamed
argument_list|)
decl_stmt|;
name|validateAlterTable
argument_list|(
name|tbl
argument_list|,
name|renamedTable
argument_list|,
name|renamedTableFromEvent
argument_list|,
name|renamedTable
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|tbl
operator|.
name|getTableName
argument_list|()
operator|.
name|equals
argument_list|(
name|renamedTable
operator|.
name|getTableName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|//change the table name back
name|driver
operator|.
name|run
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"alter table %s rename to %s"
argument_list|,
name|renamed
argument_list|,
name|tblName
argument_list|)
argument_list|)
expr_stmt|;
name|driver
operator|.
name|run
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"alter table %s drop partition (b='2011')"
argument_list|,
name|tblName
argument_list|)
argument_list|)
expr_stmt|;
name|listSize
operator|=
name|authCalls
operator|.
name|size
argument_list|()
expr_stmt|;
name|Partition
name|ptnFromDropPartition
init|=
operator|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Partition
operator|)
name|assertAndExtractSingleObjectFromEvent
argument_list|(
name|listSize
argument_list|,
name|authCalls
argument_list|,
name|DummyHiveMetastoreAuthorizationProvider
operator|.
name|AuthCallContextType
operator|.
name|PARTITION
argument_list|)
operator|)
operator|.
name|getTPartition
argument_list|()
decl_stmt|;
name|validateDropPartition
argument_list|(
name|modifiedP
argument_list|,
name|ptnFromDropPartition
argument_list|)
expr_stmt|;
name|driver
operator|.
name|run
argument_list|(
literal|"drop table "
operator|+
name|tblName
argument_list|)
expr_stmt|;
name|listSize
operator|=
name|authCalls
operator|.
name|size
argument_list|()
expr_stmt|;
name|Table
name|tableFromDropTableEvent
init|=
operator|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Table
operator|)
name|assertAndExtractSingleObjectFromEvent
argument_list|(
name|listSize
argument_list|,
name|authCalls
argument_list|,
name|DummyHiveMetastoreAuthorizationProvider
operator|.
name|AuthCallContextType
operator|.
name|TABLE
argument_list|)
operator|)
operator|.
name|getTTable
argument_list|()
decl_stmt|;
name|validateDropTable
argument_list|(
name|tbl
argument_list|,
name|tableFromDropTableEvent
argument_list|)
expr_stmt|;
comment|// verify that we can create a table with IF/OF to some custom non-existent format
name|Table
name|tCustom
init|=
name|tbl
operator|.
name|deepCopy
argument_list|()
decl_stmt|;
name|tCustom
operator|.
name|getSd
argument_list|()
operator|.
name|setInputFormat
argument_list|(
literal|"org.apache.hive.dummy.DoesNotExistInputFormat"
argument_list|)
expr_stmt|;
name|tCustom
operator|.
name|getSd
argument_list|()
operator|.
name|setOutputFormat
argument_list|(
literal|"org.apache.hive.dummy.DoesNotExistOutputFormat"
argument_list|)
expr_stmt|;
if|if
condition|(
name|tCustom
operator|.
name|getSd
argument_list|()
operator|.
name|getSerdeInfo
argument_list|()
operator|==
literal|null
condition|)
block|{
name|tCustom
operator|.
name|getSd
argument_list|()
operator|.
name|setSerdeInfo
argument_list|(
operator|new
name|SerDeInfo
argument_list|(
literal|"dummy"
argument_list|,
literal|"org.apache.hive.dummy.DoesNotExistSerDe"
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|tCustom
operator|.
name|getSd
argument_list|()
operator|.
name|getSerdeInfo
argument_list|()
operator|.
name|setSerializationLib
argument_list|(
literal|"org.apache.hive.dummy.DoesNotExistSerDe"
argument_list|)
expr_stmt|;
block|}
name|tCustom
operator|.
name|setTableName
argument_list|(
name|tbl
operator|.
name|getTableName
argument_list|()
operator|+
literal|"_custom"
argument_list|)
expr_stmt|;
name|listSize
operator|=
name|authCalls
operator|.
name|size
argument_list|()
expr_stmt|;
name|msc
operator|.
name|createTable
argument_list|(
name|tCustom
argument_list|)
expr_stmt|;
name|listSize
operator|++
expr_stmt|;
name|Table
name|customCreatedTableFromEvent
init|=
operator|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Table
operator|)
name|assertAndExtractSingleObjectFromEvent
argument_list|(
name|listSize
argument_list|,
name|authCalls
argument_list|,
name|DummyHiveMetastoreAuthorizationProvider
operator|.
name|AuthCallContextType
operator|.
name|TABLE
argument_list|)
operator|)
operator|.
name|getTTable
argument_list|()
decl_stmt|;
name|Table
name|customCreatedTable
init|=
name|msc
operator|.
name|getTable
argument_list|(
name|tCustom
operator|.
name|getDbName
argument_list|()
argument_list|,
name|tCustom
operator|.
name|getTableName
argument_list|()
argument_list|)
decl_stmt|;
name|validateCreateTable
argument_list|(
name|tCustom
argument_list|,
name|customCreatedTable
argument_list|)
expr_stmt|;
name|validateCreateTable
argument_list|(
name|tCustom
argument_list|,
name|customCreatedTableFromEvent
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|tCustom
operator|.
name|getSd
argument_list|()
operator|.
name|getInputFormat
argument_list|()
argument_list|,
name|customCreatedTable
operator|.
name|getSd
argument_list|()
operator|.
name|getInputFormat
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|tCustom
operator|.
name|getSd
argument_list|()
operator|.
name|getOutputFormat
argument_list|()
argument_list|,
name|customCreatedTable
operator|.
name|getSd
argument_list|()
operator|.
name|getOutputFormat
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|tCustom
operator|.
name|getSd
argument_list|()
operator|.
name|getSerdeInfo
argument_list|()
operator|.
name|getSerializationLib
argument_list|()
argument_list|,
name|customCreatedTable
operator|.
name|getSd
argument_list|()
operator|.
name|getSerdeInfo
argument_list|()
operator|.
name|getSerializationLib
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|tCustom
operator|.
name|getSd
argument_list|()
operator|.
name|getInputFormat
argument_list|()
argument_list|,
name|customCreatedTableFromEvent
operator|.
name|getSd
argument_list|()
operator|.
name|getInputFormat
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|tCustom
operator|.
name|getSd
argument_list|()
operator|.
name|getOutputFormat
argument_list|()
argument_list|,
name|customCreatedTableFromEvent
operator|.
name|getSd
argument_list|()
operator|.
name|getOutputFormat
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|tCustom
operator|.
name|getSd
argument_list|()
operator|.
name|getSerdeInfo
argument_list|()
operator|.
name|getSerializationLib
argument_list|()
argument_list|,
name|customCreatedTableFromEvent
operator|.
name|getSd
argument_list|()
operator|.
name|getSerdeInfo
argument_list|()
operator|.
name|getSerializationLib
argument_list|()
argument_list|)
expr_stmt|;
name|listSize
operator|=
name|authCalls
operator|.
name|size
argument_list|()
expr_stmt|;
name|msc
operator|.
name|dropTable
argument_list|(
name|tCustom
operator|.
name|getDbName
argument_list|()
argument_list|,
name|tCustom
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|listSize
operator|+=
literal|2
expr_stmt|;
name|Table
name|table2FromDropTableEvent
init|=
operator|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|ql
operator|.
name|metadata
operator|.
name|Table
operator|)
name|assertAndExtractSingleObjectFromEvent
argument_list|(
name|listSize
argument_list|,
name|authCalls
argument_list|,
name|DummyHiveMetastoreAuthorizationProvider
operator|.
name|AuthCallContextType
operator|.
name|TABLE
argument_list|)
operator|)
operator|.
name|getTTable
argument_list|()
decl_stmt|;
name|validateDropTable
argument_list|(
name|tCustom
argument_list|,
name|table2FromDropTableEvent
argument_list|)
expr_stmt|;
comment|// Test ALTER DATABASE SET LOCATION.
name|String
name|oldDatabaseLocation
init|=
name|db
operator|.
name|getLocationUri
argument_list|()
decl_stmt|;
name|String
name|newDatabaseLocation
init|=
name|oldDatabaseLocation
operator|.
name|replace
argument_list|(
name|db
operator|.
name|getName
argument_list|()
argument_list|,
literal|"new."
operator|+
name|db
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|driver
operator|.
name|run
argument_list|(
literal|"ALTER DATABASE "
operator|+
name|dbName
operator|+
literal|" SET LOCATION \""
operator|+
name|newDatabaseLocation
operator|+
literal|"\""
argument_list|)
expr_stmt|;
name|listSize
operator|=
name|authCalls
operator|.
name|size
argument_list|()
expr_stmt|;
name|Database
name|dbFromAlterDatabaseEvent
init|=
operator|(
name|Database
operator|)
name|assertAndExtractSingleObjectFromEvent
argument_list|(
name|listSize
argument_list|,
name|authCalls
argument_list|,
name|DummyHiveMetastoreAuthorizationProvider
operator|.
name|AuthCallContextType
operator|.
name|DB
argument_list|)
decl_stmt|;
name|validateAlterDb
argument_list|(
name|db
argument_list|,
name|dbFromAlterDatabaseEvent
argument_list|)
expr_stmt|;
comment|// Reset database location.
name|driver
operator|.
name|run
argument_list|(
literal|"ALTER DATABASE "
operator|+
name|dbName
operator|+
literal|" SET LOCATION \""
operator|+
name|oldDatabaseLocation
operator|+
literal|"\""
argument_list|)
expr_stmt|;
comment|// Test DROP DATABASE.
name|driver
operator|.
name|run
argument_list|(
literal|"drop database "
operator|+
name|dbName
argument_list|)
expr_stmt|;
name|listSize
operator|=
name|authCalls
operator|.
name|size
argument_list|()
expr_stmt|;
name|Database
name|dbFromDropDatabaseEvent
init|=
operator|(
name|Database
operator|)
name|assertAndExtractSingleObjectFromEvent
argument_list|(
name|listSize
argument_list|,
name|authCalls
argument_list|,
name|DummyHiveMetastoreAuthorizationProvider
operator|.
name|AuthCallContextType
operator|.
name|DB
argument_list|)
decl_stmt|;
name|validateDropDb
argument_list|(
name|db
argument_list|,
name|dbFromDropDatabaseEvent
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Object
name|assertAndExtractSingleObjectFromEvent
parameter_list|(
name|int
name|listSize
parameter_list|,
name|List
argument_list|<
name|AuthCallContext
argument_list|>
name|authCalls
parameter_list|,
name|DummyHiveMetastoreAuthorizationProvider
operator|.
name|AuthCallContextType
name|callType
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|listSize
argument_list|,
name|authCalls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|authCalls
operator|.
name|get
argument_list|(
name|listSize
operator|-
literal|1
argument_list|)
operator|.
name|authObjects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|callType
argument_list|,
name|authCalls
operator|.
name|get
argument_list|(
name|listSize
operator|-
literal|1
argument_list|)
operator|.
name|type
argument_list|)
expr_stmt|;
return|return
operator|(
name|authCalls
operator|.
name|get
argument_list|(
name|listSize
operator|-
literal|1
argument_list|)
operator|.
name|authObjects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
return|;
block|}
block|}
end_class

end_unit

