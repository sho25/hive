begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|security
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|HiveMetaStore
operator|.
name|HMSHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|MetaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|NoSuchObjectException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|security
operator|.
name|DBTokenStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|security
operator|.
name|DelegationTokenStore
operator|.
name|TokenStoreException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
operator|.
name|AbstractDelegationTokenSecretManager
operator|.
name|DelegationTokenInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
operator|.
name|HiveDelegationTokenSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotSame
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * TestDBTokenStore.  */
end_comment

begin_class
specifier|public
class|class
name|TestDBTokenStore
block|{
annotation|@
name|Test
specifier|public
name|void
name|testDBTokenStore
parameter_list|()
throws|throws
name|TokenStoreException
throws|,
name|MetaException
throws|,
name|IOException
block|{
name|DelegationTokenStore
name|ts
init|=
operator|new
name|DBTokenStore
argument_list|()
decl_stmt|;
name|ts
operator|.
name|init
argument_list|(
operator|new
name|HMSHandler
argument_list|(
literal|"Test handler"
argument_list|)
argument_list|,
name|HadoopThriftAuthBridge
operator|.
name|Server
operator|.
name|ServerMode
operator|.
name|METASTORE
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ts
operator|.
name|getMasterKeys
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|ts
operator|.
name|removeMasterKey
argument_list|(
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|ts
operator|.
name|updateMasterKey
argument_list|(
operator|-
literal|1
argument_list|,
literal|"non-existent-key"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Updated non-existent key."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TokenStoreException
name|e
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|NoSuchObjectException
argument_list|)
expr_stmt|;
block|}
name|int
name|keySeq
init|=
name|ts
operator|.
name|addMasterKey
argument_list|(
literal|"key1Data"
argument_list|)
decl_stmt|;
name|int
name|keySeq2
init|=
name|ts
operator|.
name|addMasterKey
argument_list|(
literal|"key2Data"
argument_list|)
decl_stmt|;
name|int
name|keySeq2same
init|=
name|ts
operator|.
name|addMasterKey
argument_list|(
literal|"key2Data"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"keys sequential"
argument_list|,
name|keySeq
operator|+
literal|1
argument_list|,
name|keySeq2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"keys sequential"
argument_list|,
name|keySeq
operator|+
literal|2
argument_list|,
name|keySeq2same
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"expected number of keys"
argument_list|,
literal|3
argument_list|,
name|ts
operator|.
name|getMasterKeys
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ts
operator|.
name|removeMasterKey
argument_list|(
name|keySeq
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ts
operator|.
name|removeMasterKey
argument_list|(
name|keySeq2same
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"expected number of keys"
argument_list|,
literal|1
argument_list|,
name|ts
operator|.
name|getMasterKeys
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"key2Data"
argument_list|,
name|ts
operator|.
name|getMasterKeys
argument_list|()
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|ts
operator|.
name|updateMasterKey
argument_list|(
name|keySeq2
argument_list|,
literal|"updatedData"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"updatedData"
argument_list|,
name|ts
operator|.
name|getMasterKeys
argument_list|()
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ts
operator|.
name|removeMasterKey
argument_list|(
name|keySeq2
argument_list|)
argument_list|)
expr_stmt|;
comment|// tokens
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ts
operator|.
name|getAllDelegationTokenIdentifiers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|DelegationTokenIdentifier
name|tokenId
init|=
operator|new
name|DelegationTokenIdentifier
argument_list|(
operator|new
name|Text
argument_list|(
literal|"owner"
argument_list|)
argument_list|,
operator|new
name|Text
argument_list|(
literal|"renewer"
argument_list|)
argument_list|,
operator|new
name|Text
argument_list|(
literal|"realUser"
argument_list|)
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|ts
operator|.
name|getToken
argument_list|(
name|tokenId
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|ts
operator|.
name|removeToken
argument_list|(
name|tokenId
argument_list|)
argument_list|)
expr_stmt|;
name|DelegationTokenInformation
name|tokenInfo
init|=
operator|new
name|DelegationTokenInformation
argument_list|(
literal|99
argument_list|,
literal|"password"
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|ts
operator|.
name|addToken
argument_list|(
name|tokenId
argument_list|,
name|tokenInfo
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|ts
operator|.
name|addToken
argument_list|(
name|tokenId
argument_list|,
name|tokenInfo
argument_list|)
argument_list|)
expr_stmt|;
name|DelegationTokenInformation
name|tokenInfoRead
init|=
name|ts
operator|.
name|getToken
argument_list|(
name|tokenId
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|tokenInfo
operator|.
name|getRenewDate
argument_list|()
argument_list|,
name|tokenInfoRead
operator|.
name|getRenewDate
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|tokenInfo
argument_list|,
name|tokenInfoRead
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
name|HiveDelegationTokenSupport
operator|.
name|encodeDelegationTokenInformation
argument_list|(
name|tokenInfo
argument_list|)
argument_list|,
name|HiveDelegationTokenSupport
operator|.
name|encodeDelegationTokenInformation
argument_list|(
name|tokenInfoRead
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
name|allIds
init|=
name|ts
operator|.
name|getAllDelegationTokenIdentifiers
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|allIds
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TokenStoreDelegationTokenSecretManager
operator|.
name|encodeWritable
argument_list|(
name|tokenId
argument_list|)
argument_list|,
name|TokenStoreDelegationTokenSecretManager
operator|.
name|encodeWritable
argument_list|(
name|allIds
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ts
operator|.
name|removeToken
argument_list|(
name|tokenId
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|ts
operator|.
name|getAllDelegationTokenIdentifiers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|ts
operator|.
name|getToken
argument_list|(
name|tokenId
argument_list|)
argument_list|)
expr_stmt|;
name|ts
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

