begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|jdbc
operator|.
name|miniHS2
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeoutException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicLong
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
operator|.
name|ConfVars
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|HiveMetaStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|MetaStoreUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|CLIServiceClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|SessionHandle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|thrift
operator|.
name|ThriftBinaryCLIService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|thrift
operator|.
name|ThriftCLIServiceClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|cli
operator|.
name|thrift
operator|.
name|ThriftHttpCLIService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|service
operator|.
name|server
operator|.
name|HiveServer2
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|Files
import|;
end_import

begin_class
specifier|public
class|class
name|MiniHS2
extends|extends
name|AbstractHiveService
block|{
specifier|private
specifier|static
specifier|final
name|String
name|driverName
init|=
literal|"org.apache.hive.jdbc.HiveDriver"
decl_stmt|;
specifier|private
name|HiveServer2
name|hiveServer2
init|=
literal|null
decl_stmt|;
specifier|private
specifier|final
name|File
name|baseDir
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|AtomicLong
name|hs2Counter
init|=
operator|new
name|AtomicLong
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|HS2_BINARY_MODE
init|=
literal|"binary"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|HS2_HTTP_MODE
init|=
literal|"http"
decl_stmt|;
specifier|public
name|MiniHS2
parameter_list|(
name|HiveConf
name|hiveConf
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|hiveConf
argument_list|,
literal|"localhost"
argument_list|,
name|MetaStoreUtils
operator|.
name|findFreePort
argument_list|()
argument_list|,
name|MetaStoreUtils
operator|.
name|findFreePort
argument_list|()
argument_list|)
expr_stmt|;
name|baseDir
operator|=
name|Files
operator|.
name|createTempDir
argument_list|()
expr_stmt|;
name|setWareHouseDir
argument_list|(
literal|"file://"
operator|+
name|baseDir
operator|.
name|getPath
argument_list|()
operator|+
name|File
operator|.
name|separator
operator|+
literal|"warehouse"
argument_list|)
expr_stmt|;
name|String
name|metaStoreURL
init|=
literal|"jdbc:derby:"
operator|+
name|baseDir
operator|.
name|getAbsolutePath
argument_list|()
operator|+
name|File
operator|.
name|separator
operator|+
literal|"test_metastore-"
operator|+
name|hs2Counter
operator|.
name|incrementAndGet
argument_list|()
operator|+
literal|";create=true"
decl_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTORECONNECTURLKEY
operator|.
name|varname
argument_list|,
name|metaStoreURL
argument_list|)
expr_stmt|;
name|hiveConf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTORECONNECTURLKEY
argument_list|,
name|metaStoreURL
argument_list|)
expr_stmt|;
name|hiveConf
operator|.
name|setVar
argument_list|(
name|ConfVars
operator|.
name|HIVE_SERVER2_TRANSPORT_MODE
argument_list|,
name|HS2_BINARY_MODE
argument_list|)
expr_stmt|;
name|hiveConf
operator|.
name|setVar
argument_list|(
name|ConfVars
operator|.
name|HIVE_SERVER2_THRIFT_BIND_HOST
argument_list|,
name|getHost
argument_list|()
argument_list|)
expr_stmt|;
name|hiveConf
operator|.
name|setIntVar
argument_list|(
name|ConfVars
operator|.
name|HIVE_SERVER2_THRIFT_PORT
argument_list|,
name|getBinaryPort
argument_list|()
argument_list|)
expr_stmt|;
name|hiveConf
operator|.
name|setIntVar
argument_list|(
name|ConfVars
operator|.
name|HIVE_SERVER2_THRIFT_HTTP_PORT
argument_list|,
name|getHttpPort
argument_list|()
argument_list|)
expr_stmt|;
name|HiveMetaStore
operator|.
name|HMSHandler
operator|.
name|resetDefaultDBFlag
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|start
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|confOverlay
parameter_list|)
throws|throws
name|Exception
block|{
name|hiveServer2
operator|=
operator|new
name|HiveServer2
argument_list|()
expr_stmt|;
comment|// Set confOverlay parameters
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
range|:
name|confOverlay
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|setConfProperty
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|hiveServer2
operator|.
name|init
argument_list|(
name|getHiveConf
argument_list|()
argument_list|)
expr_stmt|;
name|hiveServer2
operator|.
name|start
argument_list|()
expr_stmt|;
name|waitForStartup
argument_list|()
expr_stmt|;
name|setStarted
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|stop
parameter_list|()
block|{
name|verifyStarted
argument_list|()
expr_stmt|;
name|hiveServer2
operator|.
name|stop
argument_list|()
expr_stmt|;
name|setStarted
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|FileUtils
operator|.
name|deleteQuietly
argument_list|(
name|baseDir
argument_list|)
expr_stmt|;
block|}
specifier|public
name|CLIServiceClient
name|getServiceClient
parameter_list|()
block|{
name|verifyStarted
argument_list|()
expr_stmt|;
return|return
name|getServiceClientInternal
argument_list|()
return|;
block|}
specifier|public
name|CLIServiceClient
name|getServiceClientInternal
parameter_list|()
block|{
for|for
control|(
name|Service
name|service
range|:
name|hiveServer2
operator|.
name|getServices
argument_list|()
control|)
block|{
if|if
condition|(
name|service
operator|instanceof
name|ThriftBinaryCLIService
condition|)
block|{
return|return
operator|new
name|ThriftCLIServiceClient
argument_list|(
operator|(
name|ThriftBinaryCLIService
operator|)
name|service
argument_list|)
return|;
block|}
if|if
condition|(
name|service
operator|instanceof
name|ThriftHttpCLIService
condition|)
block|{
return|return
operator|new
name|ThriftCLIServiceClient
argument_list|(
operator|(
name|ThriftHttpCLIService
operator|)
name|service
argument_list|)
return|;
block|}
block|}
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"HiveServer2 not running Thrift service"
argument_list|)
throw|;
block|}
specifier|public
name|String
name|getJdbcURL
parameter_list|()
block|{
name|String
name|transportMode
init|=
name|getConfProperty
argument_list|(
name|ConfVars
operator|.
name|HIVE_SERVER2_TRANSPORT_MODE
operator|.
name|varname
argument_list|)
decl_stmt|;
if|if
condition|(
name|transportMode
operator|!=
literal|null
operator|&&
operator|(
name|transportMode
operator|.
name|equalsIgnoreCase
argument_list|(
name|HS2_HTTP_MODE
argument_list|)
operator|)
condition|)
block|{
return|return
literal|"jdbc:hive2://"
operator|+
name|getHost
argument_list|()
operator|+
literal|":"
operator|+
name|getHttpPort
argument_list|()
operator|+
literal|"/default"
return|;
block|}
else|else
block|{
return|return
literal|"jdbc:hive2://"
operator|+
name|getHost
argument_list|()
operator|+
literal|":"
operator|+
name|getBinaryPort
argument_list|()
operator|+
literal|"/default"
return|;
block|}
block|}
specifier|public
specifier|static
name|String
name|getJdbcDriverName
parameter_list|()
block|{
return|return
name|driverName
return|;
block|}
specifier|private
name|void
name|waitForStartup
parameter_list|()
throws|throws
name|Exception
block|{
name|int
name|waitTime
init|=
literal|0
decl_stmt|;
name|long
name|startupTimeout
init|=
literal|1000L
operator|*
literal|1000000000L
decl_stmt|;
name|CLIServiceClient
name|hs2Client
init|=
name|getServiceClientInternal
argument_list|()
decl_stmt|;
name|SessionHandle
name|sessionHandle
init|=
literal|null
decl_stmt|;
do|do
block|{
name|Thread
operator|.
name|sleep
argument_list|(
literal|500L
argument_list|)
expr_stmt|;
name|waitTime
operator|+=
literal|500L
expr_stmt|;
if|if
condition|(
name|waitTime
operator|>
name|startupTimeout
condition|)
block|{
throw|throw
operator|new
name|TimeoutException
argument_list|(
literal|"Couldn't access new HiveServer2: "
operator|+
name|getJdbcURL
argument_list|()
argument_list|)
throw|;
block|}
try|try
block|{
name|sessionHandle
operator|=
name|hs2Client
operator|.
name|openSession
argument_list|(
literal|"foo"
argument_list|,
literal|"bar"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// service not started yet
continue|continue;
block|}
name|hs2Client
operator|.
name|closeSession
argument_list|(
name|sessionHandle
argument_list|)
expr_stmt|;
break|break;
block|}
do|while
condition|(
literal|true
condition|)
do|;
block|}
block|}
end_class

end_unit

