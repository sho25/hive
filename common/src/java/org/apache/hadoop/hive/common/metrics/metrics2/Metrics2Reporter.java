begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|metrics
operator|.
name|metrics2
package|;
end_package

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|MetricRegistry
import|;
end_import

begin_import
import|import
name|com
operator|.
name|github
operator|.
name|joshelser
operator|.
name|dropwizard
operator|.
name|metrics
operator|.
name|hadoop
operator|.
name|HadoopMetrics2Reporter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Closeable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|DefaultMetricsSystem
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|Reporter
import|;
end_import

begin_comment
comment|/**  * A wrapper around Codahale HadoopMetrics2Reporter to make it a pluggable/configurable Hive Metrics reporter.  */
end_comment

begin_class
specifier|public
class|class
name|Metrics2Reporter
implements|implements
name|CodahaleReporter
block|{
specifier|private
specifier|final
name|MetricRegistry
name|metricRegistry
decl_stmt|;
specifier|private
specifier|final
name|HiveConf
name|conf
decl_stmt|;
specifier|private
specifier|final
name|HadoopMetrics2Reporter
name|reporter
decl_stmt|;
specifier|public
name|Metrics2Reporter
parameter_list|(
name|MetricRegistry
name|registry
parameter_list|,
name|HiveConf
name|conf
parameter_list|)
block|{
name|this
operator|.
name|metricRegistry
operator|=
name|registry
expr_stmt|;
name|this
operator|.
name|conf
operator|=
name|conf
expr_stmt|;
name|String
name|applicationName
init|=
name|conf
operator|.
name|get
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_METRICS_HADOOP2_COMPONENT_NAME
operator|.
name|varname
argument_list|)
decl_stmt|;
name|reporter
operator|=
name|HadoopMetrics2Reporter
operator|.
name|forRegistry
argument_list|(
name|metricRegistry
argument_list|)
operator|.
name|convertRatesTo
argument_list|(
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
operator|.
name|convertDurationsTo
argument_list|(
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
operator|.
name|build
argument_list|(
name|DefaultMetricsSystem
operator|.
name|initialize
argument_list|(
name|applicationName
argument_list|)
argument_list|,
comment|// The application-level name
name|applicationName
argument_list|,
comment|// Component name
name|applicationName
argument_list|,
comment|// Component description
literal|"General"
argument_list|)
expr_stmt|;
comment|// Name for each metric record
block|}
annotation|@
name|Override
specifier|public
name|void
name|start
parameter_list|()
block|{
name|long
name|reportingInterval
init|=
name|HiveConf
operator|.
name|toTime
argument_list|(
name|conf
operator|.
name|get
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_METRICS_HADOOP2_INTERVAL
operator|.
name|varname
argument_list|)
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
decl_stmt|;
name|reporter
operator|.
name|start
argument_list|(
name|reportingInterval
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
block|{
name|reporter
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

