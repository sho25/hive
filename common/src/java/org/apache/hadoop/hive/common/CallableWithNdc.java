begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Stack
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Callable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|NDC
import|;
end_import

begin_comment
comment|// TODO: cloned from TEZ-2003; replace when that's in a release.
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|CallableWithNdc
parameter_list|<
name|T
parameter_list|>
implements|implements
name|Callable
argument_list|<
name|T
argument_list|>
block|{
specifier|private
specifier|final
name|Stack
name|ndcStack
decl_stmt|;
specifier|public
name|CallableWithNdc
parameter_list|()
block|{
name|ndcStack
operator|=
name|NDC
operator|.
name|cloneStack
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
specifier|final
name|T
name|call
parameter_list|()
throws|throws
name|Exception
block|{
name|NDC
operator|.
name|inherit
argument_list|(
name|ndcStack
argument_list|)
expr_stmt|;
try|try
block|{
return|return
name|callInternal
argument_list|()
return|;
block|}
finally|finally
block|{
name|NDC
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
specifier|protected
specifier|abstract
name|T
name|callInternal
parameter_list|()
throws|throws
name|Exception
function_decl|;
block|}
end_class

end_unit

