begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|LogManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|PropertyConfigurator
import|;
end_import

begin_comment
comment|/**  * Utilities common to logging operations.  */
end_comment

begin_class
specifier|public
class|class
name|LogUtils
block|{
specifier|public
specifier|static
specifier|final
name|String
name|HIVE_L4J
init|=
literal|"hive-log4j.properties"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|HIVE_EXEC_L4J
init|=
literal|"hive-exec-log4j.properties"
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"serial"
argument_list|)
specifier|public
specifier|static
class|class
name|LogInitializationException
extends|extends
name|Exception
block|{
specifier|public
name|LogInitializationException
parameter_list|(
name|String
name|msg
parameter_list|)
block|{
name|super
argument_list|(
name|msg
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Initialize log4j based on hive-log4j.properties.    *    * @return an message suitable for display to the user    * @throws LogInitializationException if log4j fails to initialize correctly    */
specifier|public
specifier|static
name|String
name|initHiveLog4j
parameter_list|()
throws|throws
name|LogInitializationException
block|{
comment|// allow hive log4j to override any normal initialized one
name|URL
name|hive_l4j
init|=
name|LogUtils
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResource
argument_list|(
name|HIVE_L4J
argument_list|)
decl_stmt|;
if|if
condition|(
name|hive_l4j
operator|!=
literal|null
condition|)
block|{
name|LogManager
operator|.
name|resetConfiguration
argument_list|()
expr_stmt|;
name|PropertyConfigurator
operator|.
name|configure
argument_list|(
name|hive_l4j
argument_list|)
expr_stmt|;
return|return
literal|"Logging initialized using configuration in "
operator|+
name|hive_l4j
return|;
block|}
else|else
block|{
throw|throw
operator|new
name|LogInitializationException
argument_list|(
literal|"Unable to initialize logging using "
operator|+
name|LogUtils
operator|.
name|HIVE_L4J
operator|+
literal|", not found on CLASSPATH!"
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

