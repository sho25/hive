begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|valcoersion
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|LocalFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * Enforces absolute paths to be used for the java.io.tmpdir system variable.  * @see VariableCoercion  * @see org.apache.hadoop.hive.conf.SystemVariables  */
end_comment

begin_class
specifier|public
class|class
name|JavaIOTmpdirVariableCoercion
extends|extends
name|VariableCoercion
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|JavaIOTmpdirVariableCoercion
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|NAME
init|=
literal|"system:java.io.tmpdir"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|FileSystem
name|LOCAL_FILE_SYSTEM
init|=
operator|new
name|LocalFileSystem
argument_list|()
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|JavaIOTmpdirVariableCoercion
name|INSTANCE
init|=
operator|new
name|JavaIOTmpdirVariableCoercion
argument_list|()
decl_stmt|;
specifier|private
name|JavaIOTmpdirVariableCoercion
parameter_list|()
block|{
name|super
argument_list|(
name|NAME
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
name|coerce
parameter_list|(
name|String
name|originalValue
parameter_list|)
block|{
if|if
condition|(
name|originalValue
operator|==
literal|null
operator|||
name|originalValue
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
name|originalValue
return|;
try|try
block|{
name|Path
name|originalPath
init|=
operator|new
name|Path
argument_list|(
name|originalValue
argument_list|)
decl_stmt|;
name|Path
name|absolutePath
init|=
name|FileUtils
operator|.
name|makeAbsolute
argument_list|(
name|LOCAL_FILE_SYSTEM
argument_list|,
name|originalPath
argument_list|)
decl_stmt|;
return|return
name|absolutePath
operator|.
name|toString
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|exception
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"Unable to resolve 'java.io.tmpdir' for absolute path '%s'"
argument_list|,
name|originalValue
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|originalValue
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|String
name|getCoerced
parameter_list|(
name|String
name|originalValue
parameter_list|)
block|{
return|return
name|coerce
argument_list|(
name|originalValue
argument_list|)
return|;
block|}
block|}
end_class

end_unit

