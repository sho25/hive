begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|http
operator|.
name|security
package|;
end_package

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|security
operator|.
name|auth
operator|.
name|UserPrincipal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|security
operator|.
name|DefaultUserIdentity
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|Subject
import|;
end_import

begin_class
specifier|public
class|class
name|PamUserIdentity
extends|extends
name|DefaultUserIdentity
block|{
specifier|public
name|PamUserIdentity
parameter_list|(
name|String
name|username
parameter_list|)
block|{
name|super
argument_list|(
operator|new
name|Subject
argument_list|()
argument_list|,
operator|new
name|UserPrincipal
argument_list|(
name|username
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"pam"
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isUserInRole
parameter_list|(
name|String
name|role
parameter_list|,
name|Scope
name|scope
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|PamUserIdentity
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
return|;
block|}
block|}
end_class

end_unit

