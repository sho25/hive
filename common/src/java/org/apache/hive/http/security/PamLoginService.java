begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|http
operator|.
name|security
package|;
end_package

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|security
operator|.
name|DefaultIdentityService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|security
operator|.
name|IdentityService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|security
operator|.
name|LoginService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|UserIdentity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|util
operator|.
name|component
operator|.
name|AbstractLifeCycle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|util
operator|.
name|log
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|util
operator|.
name|log
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletRequest
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentMap
import|;
end_import

begin_class
specifier|public
class|class
name|PamLoginService
extends|extends
name|AbstractLifeCycle
implements|implements
name|LoginService
block|{
specifier|private
specifier|final
name|ConcurrentMap
argument_list|<
name|String
argument_list|,
name|UserIdentity
argument_list|>
name|users
init|=
operator|new
name|ConcurrentHashMap
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
name|IdentityService
name|identityService
init|=
operator|new
name|DefaultIdentityService
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|Log
operator|.
name|getLogger
argument_list|(
name|PamLoginService
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
literal|"pam"
return|;
block|}
annotation|@
name|Override
specifier|public
name|UserIdentity
name|login
parameter_list|(
name|String
name|username
parameter_list|,
name|Object
name|credentials
parameter_list|,
name|ServletRequest
name|request
parameter_list|)
block|{
name|UserIdentity
name|user
init|=
name|users
operator|.
name|get
argument_list|(
name|username
argument_list|)
decl_stmt|;
if|if
condition|(
name|user
operator|!=
literal|null
condition|)
block|{
return|return
name|user
return|;
block|}
name|user
operator|=
operator|new
name|PamUserIdentity
argument_list|(
name|username
argument_list|)
expr_stmt|;
name|users
operator|.
name|put
argument_list|(
name|username
argument_list|,
name|user
argument_list|)
expr_stmt|;
return|return
name|user
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|validate
parameter_list|(
name|UserIdentity
name|user
parameter_list|)
block|{
return|return
name|users
operator|.
name|containsKey
argument_list|(
name|user
operator|.
name|getUserPrincipal
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|IdentityService
name|getIdentityService
parameter_list|()
block|{
return|return
name|identityService
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setIdentityService
parameter_list|(
name|IdentityService
name|identityService
parameter_list|)
block|{
if|if
condition|(
name|isRunning
argument_list|()
condition|)
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Running"
argument_list|)
throw|;
name|this
operator|.
name|identityService
operator|=
name|identityService
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|logout
parameter_list|(
name|UserIdentity
name|user
parameter_list|)
block|{
name|users
operator|.
name|remove
argument_list|(
name|user
operator|.
name|getUserPrincipal
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"logout {}"
argument_list|,
name|user
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

