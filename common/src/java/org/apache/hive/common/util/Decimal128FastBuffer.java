begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|common
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteOrder
import|;
end_import

begin_comment
comment|/**  * A helper class for fast serialization of decimal128 in the BigDecimal byte[] representation  *  */
end_comment

begin_class
specifier|public
class|class
name|Decimal128FastBuffer
block|{
comment|/**    * Preallocated byte[] for each Decimal128 size (0-4)    */
specifier|private
specifier|final
name|byte
index|[]
index|[]
name|sumBytes
decl_stmt|;
comment|/**    * Preallocated ByteBuffer wrappers around each sumBytes    */
specifier|private
specifier|final
name|ByteBuffer
index|[]
name|sumBuffer
decl_stmt|;
specifier|public
name|Decimal128FastBuffer
parameter_list|()
block|{
name|sumBytes
operator|=
operator|new
name|byte
index|[
literal|5
index|]
index|[]
expr_stmt|;
name|sumBuffer
operator|=
operator|new
name|ByteBuffer
index|[
literal|5
index|]
expr_stmt|;
name|sumBytes
index|[
literal|0
index|]
operator|=
operator|new
name|byte
index|[
literal|1
index|]
expr_stmt|;
name|sumBuffer
index|[
literal|0
index|]
operator|=
name|ByteBuffer
operator|.
name|wrap
argument_list|(
name|sumBytes
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|sumBytes
index|[
literal|1
index|]
operator|=
operator|new
name|byte
index|[
literal|5
index|]
expr_stmt|;
name|sumBuffer
index|[
literal|1
index|]
operator|=
name|ByteBuffer
operator|.
name|wrap
argument_list|(
name|sumBytes
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|sumBuffer
index|[
literal|1
index|]
operator|.
name|order
argument_list|(
name|ByteOrder
operator|.
name|BIG_ENDIAN
argument_list|)
expr_stmt|;
name|sumBytes
index|[
literal|2
index|]
operator|=
operator|new
name|byte
index|[
literal|9
index|]
expr_stmt|;
name|sumBuffer
index|[
literal|2
index|]
operator|=
name|ByteBuffer
operator|.
name|wrap
argument_list|(
name|sumBytes
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|sumBuffer
index|[
literal|2
index|]
operator|.
name|order
argument_list|(
name|ByteOrder
operator|.
name|BIG_ENDIAN
argument_list|)
expr_stmt|;
name|sumBytes
index|[
literal|3
index|]
operator|=
operator|new
name|byte
index|[
literal|13
index|]
expr_stmt|;
name|sumBuffer
index|[
literal|3
index|]
operator|=
name|ByteBuffer
operator|.
name|wrap
argument_list|(
name|sumBytes
index|[
literal|3
index|]
argument_list|)
expr_stmt|;
name|sumBuffer
index|[
literal|3
index|]
operator|.
name|order
argument_list|(
name|ByteOrder
operator|.
name|BIG_ENDIAN
argument_list|)
expr_stmt|;
name|sumBytes
index|[
literal|4
index|]
operator|=
operator|new
name|byte
index|[
literal|17
index|]
expr_stmt|;
name|sumBuffer
index|[
literal|4
index|]
operator|=
name|ByteBuffer
operator|.
name|wrap
argument_list|(
name|sumBytes
index|[
literal|4
index|]
argument_list|)
expr_stmt|;
name|sumBuffer
index|[
literal|4
index|]
operator|.
name|order
argument_list|(
name|ByteOrder
operator|.
name|BIG_ENDIAN
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ByteBuffer
name|getByteBuffer
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|sumBuffer
index|[
name|index
index|]
return|;
block|}
specifier|public
name|byte
index|[]
name|getBytes
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|sumBytes
index|[
name|index
index|]
return|;
block|}
block|}
end_class

end_unit

