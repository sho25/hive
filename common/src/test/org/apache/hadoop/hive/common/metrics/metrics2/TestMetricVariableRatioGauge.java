begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|metrics
operator|.
name|metrics2
package|;
end_package

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|MetricRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|metrics
operator|.
name|MetricsTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|metrics
operator|.
name|common
operator|.
name|MetricsFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|metrics
operator|.
name|common
operator|.
name|MetricsVariable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Unit test for the RatioGauge implementation.  */
end_comment

begin_class
specifier|public
class|class
name|TestMetricVariableRatioGauge
block|{
specifier|public
specifier|static
name|MetricRegistry
name|metricRegistry
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|HiveConf
name|conf
init|=
operator|new
name|HiveConf
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_METRICS_CLASS
argument_list|,
name|CodahaleMetrics
operator|.
name|class
operator|.
name|getCanonicalName
argument_list|()
argument_list|)
expr_stmt|;
comment|// disable json file writing
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|HIVE_METRICS_JSON_FILE_INTERVAL
argument_list|,
literal|"60000m"
argument_list|)
expr_stmt|;
name|MetricsFactory
operator|.
name|init
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|metricRegistry
operator|=
operator|(
operator|(
name|CodahaleMetrics
operator|)
name|MetricsFactory
operator|.
name|getInstance
argument_list|()
operator|)
operator|.
name|getMetricRegistry
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|after
parameter_list|()
throws|throws
name|Exception
block|{
name|MetricsFactory
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRatioIsCalculated
parameter_list|()
throws|throws
name|Exception
block|{
name|NumericVariable
name|num
init|=
operator|new
name|NumericVariable
argument_list|(
literal|10
argument_list|)
decl_stmt|;
name|NumericVariable
name|ord
init|=
operator|new
name|NumericVariable
argument_list|(
literal|5
argument_list|)
decl_stmt|;
name|MetricsFactory
operator|.
name|getInstance
argument_list|()
operator|.
name|addRatio
argument_list|(
literal|"rat"
argument_list|,
name|num
argument_list|,
name|ord
argument_list|)
expr_stmt|;
name|String
name|json
init|=
operator|(
operator|(
name|CodahaleMetrics
operator|)
name|MetricsFactory
operator|.
name|getInstance
argument_list|()
operator|)
operator|.
name|dumpJson
argument_list|()
decl_stmt|;
name|MetricsTestUtils
operator|.
name|verifyMetricsJson
argument_list|(
name|json
argument_list|,
name|MetricsTestUtils
operator|.
name|GAUGE
argument_list|,
literal|"rat"
argument_list|,
literal|2d
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRatioIsCalculatedNonExact
parameter_list|()
throws|throws
name|Exception
block|{
name|NumericVariable
name|num
init|=
operator|new
name|NumericVariable
argument_list|(
literal|20
argument_list|)
decl_stmt|;
name|NumericVariable
name|ord
init|=
operator|new
name|NumericVariable
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|MetricsFactory
operator|.
name|getInstance
argument_list|()
operator|.
name|addRatio
argument_list|(
literal|"rat"
argument_list|,
name|num
argument_list|,
name|ord
argument_list|)
expr_stmt|;
name|String
name|json
init|=
operator|(
operator|(
name|CodahaleMetrics
operator|)
name|MetricsFactory
operator|.
name|getInstance
argument_list|()
operator|)
operator|.
name|dumpJson
argument_list|()
decl_stmt|;
name|MetricsTestUtils
operator|.
name|verifyMetricsJson
argument_list|(
name|json
argument_list|,
name|MetricsTestUtils
operator|.
name|GAUGE
argument_list|,
literal|"rat"
argument_list|,
literal|6.6666d
argument_list|,
literal|1e-4
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testMissingNumeratorRatio
parameter_list|()
throws|throws
name|Exception
block|{
name|MetricsFactory
operator|.
name|getInstance
argument_list|()
operator|.
name|addRatio
argument_list|(
literal|"rat"
argument_list|,
literal|null
argument_list|,
operator|new
name|NumericVariable
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testMissingDenominatorRatio
parameter_list|()
throws|throws
name|Exception
block|{
name|MetricsFactory
operator|.
name|getInstance
argument_list|()
operator|.
name|addRatio
argument_list|(
literal|"rat"
argument_list|,
operator|new
name|NumericVariable
argument_list|(
literal|5
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEmptyRatio
parameter_list|()
throws|throws
name|Exception
block|{
name|NumericVariable
name|num
init|=
operator|new
name|NumericVariable
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|NumericVariable
name|ord
init|=
operator|new
name|NumericVariable
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|MetricsFactory
operator|.
name|getInstance
argument_list|()
operator|.
name|addRatio
argument_list|(
literal|"rat"
argument_list|,
name|num
argument_list|,
name|ord
argument_list|)
expr_stmt|;
name|String
name|json
init|=
operator|(
operator|(
name|CodahaleMetrics
operator|)
name|MetricsFactory
operator|.
name|getInstance
argument_list|()
operator|)
operator|.
name|dumpJson
argument_list|()
decl_stmt|;
name|MetricsTestUtils
operator|.
name|verifyMetricsJson
argument_list|(
name|json
argument_list|,
name|MetricsTestUtils
operator|.
name|GAUGE
argument_list|,
literal|"rat"
argument_list|,
literal|"NaN"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testZeroRatio
parameter_list|()
throws|throws
name|Exception
block|{
name|NumericVariable
name|num
init|=
operator|new
name|NumericVariable
argument_list|(
literal|10
argument_list|)
decl_stmt|;
name|NumericVariable
name|ord
init|=
operator|new
name|NumericVariable
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|MetricsFactory
operator|.
name|getInstance
argument_list|()
operator|.
name|addRatio
argument_list|(
literal|"rat"
argument_list|,
name|num
argument_list|,
name|ord
argument_list|)
expr_stmt|;
name|String
name|json
init|=
operator|(
operator|(
name|CodahaleMetrics
operator|)
name|MetricsFactory
operator|.
name|getInstance
argument_list|()
operator|)
operator|.
name|dumpJson
argument_list|()
decl_stmt|;
name|MetricsTestUtils
operator|.
name|verifyMetricsJson
argument_list|(
name|json
argument_list|,
name|MetricsTestUtils
operator|.
name|GAUGE
argument_list|,
literal|"rat"
argument_list|,
literal|"NaN"
argument_list|)
expr_stmt|;
block|}
specifier|private
class|class
name|NumericVariable
implements|implements
name|MetricsVariable
argument_list|<
name|Integer
argument_list|>
block|{
specifier|private
specifier|final
name|Integer
name|value
decl_stmt|;
specifier|public
name|NumericVariable
parameter_list|(
name|Integer
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Integer
name|getValue
parameter_list|()
block|{
return|return
name|value
return|;
block|}
block|}
block|}
end_class

end_unit

