begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|ndv
operator|.
name|hll
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
operator|.
name|Parameters
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|value
operator|=
name|Parameterized
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestSparseEncodeHash
block|{
specifier|private
name|long
name|input
decl_stmt|;
specifier|private
name|int
name|expected
decl_stmt|;
specifier|public
name|TestSparseEncodeHash
parameter_list|(
name|long
name|i
parameter_list|,
name|int
name|e
parameter_list|)
block|{
name|this
operator|.
name|input
operator|=
name|i
expr_stmt|;
name|this
operator|.
name|expected
operator|=
name|e
expr_stmt|;
block|}
annotation|@
name|Parameters
specifier|public
specifier|static
name|Collection
argument_list|<
name|Object
index|[]
argument_list|>
name|data
parameter_list|()
block|{
name|Object
index|[]
index|[]
name|data
init|=
operator|new
name|Object
index|[]
index|[]
block|{
block|{
literal|11111111111L
block|,
literal|373692871
block|}
block|,
block|{
literal|4314495982023L
block|,
operator|-
literal|1711269433
block|}
block|,
block|{
literal|4314529536455L
block|,
operator|-
literal|1744823865
block|}
block|,
block|{
literal|4314563074503L
block|,
literal|268425671
block|}
block|,
block|{
literal|17257983908295L
block|,
operator|-
literal|1644160569
block|}
block|,
block|{
literal|536861127L
block|,
literal|536861127
block|}
block|,
block|{
literal|536844743L
block|,
literal|536844743
block|}
block|,
block|{
literal|144115188075862471L
block|,
operator|-
literal|671082041
block|}
block|}
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|data
argument_list|)
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEncodeHash
parameter_list|()
block|{
name|HLLSparseRegister
name|reg
init|=
operator|new
name|HLLSparseRegister
argument_list|(
literal|14
argument_list|,
literal|25
argument_list|,
literal|6
argument_list|)
decl_stmt|;
name|int
name|got
init|=
name|reg
operator|.
name|encodeHash
argument_list|(
name|input
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|got
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

