begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_comment
comment|/**  * Tests for {@link org.apache.hadoop.hive.common.ValidTxnListImpl}  */
end_comment

begin_class
specifier|public
class|class
name|TestValidTxnImpl
block|{
annotation|@
name|Test
specifier|public
name|void
name|noExceptions
parameter_list|()
throws|throws
name|Exception
block|{
name|ValidTxnList
name|txnList
init|=
operator|new
name|ValidTxnListImpl
argument_list|(
operator|new
name|long
index|[
literal|0
index|]
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|String
name|str
init|=
name|txnList
operator|.
name|writeToString
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"1:"
argument_list|,
name|str
argument_list|)
expr_stmt|;
name|ValidTxnList
name|newList
init|=
operator|new
name|ValidTxnListImpl
argument_list|()
decl_stmt|;
name|newList
operator|.
name|readFromString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|newList
operator|.
name|isTxnCommitted
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|newList
operator|.
name|isTxnCommitted
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|exceptions
parameter_list|()
throws|throws
name|Exception
block|{
name|ValidTxnList
name|txnList
init|=
operator|new
name|ValidTxnListImpl
argument_list|(
operator|new
name|long
index|[]
block|{
literal|2L
block|,
literal|4L
block|}
argument_list|,
literal|5
argument_list|)
decl_stmt|;
name|String
name|str
init|=
name|txnList
operator|.
name|writeToString
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"5:2:4"
argument_list|,
name|str
argument_list|)
expr_stmt|;
name|ValidTxnList
name|newList
init|=
operator|new
name|ValidTxnListImpl
argument_list|()
decl_stmt|;
name|newList
operator|.
name|readFromString
argument_list|(
name|str
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|newList
operator|.
name|isTxnCommitted
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|newList
operator|.
name|isTxnCommitted
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|newList
operator|.
name|isTxnCommitted
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|newList
operator|.
name|isTxnCommitted
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|newList
operator|.
name|isTxnCommitted
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|newList
operator|.
name|isTxnCommitted
argument_list|(
literal|6
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|longEnoughToCompress
parameter_list|()
throws|throws
name|Exception
block|{
name|long
index|[]
name|exceptions
init|=
operator|new
name|long
index|[
literal|1000
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
name|exceptions
index|[
name|i
index|]
operator|=
name|i
operator|+
literal|100
expr_stmt|;
name|ValidTxnList
name|txnList
init|=
operator|new
name|ValidTxnListImpl
argument_list|(
name|exceptions
argument_list|,
literal|2000
argument_list|)
decl_stmt|;
name|String
name|str
init|=
name|txnList
operator|.
name|writeToString
argument_list|()
decl_stmt|;
name|ValidTxnList
name|newList
init|=
operator|new
name|ValidTxnListImpl
argument_list|()
decl_stmt|;
name|newList
operator|.
name|readFromString
argument_list|(
name|str
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|100
condition|;
name|i
operator|++
control|)
name|Assert
operator|.
name|assertTrue
argument_list|(
name|newList
operator|.
name|isTxnCommitted
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|100
init|;
name|i
operator|<
literal|1100
condition|;
name|i
operator|++
control|)
name|Assert
operator|.
name|assertFalse
argument_list|(
name|newList
operator|.
name|isTxnCommitted
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1100
init|;
name|i
operator|<
literal|2001
condition|;
name|i
operator|++
control|)
name|Assert
operator|.
name|assertTrue
argument_list|(
name|newList
operator|.
name|isTxnCommitted
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|newList
operator|.
name|isTxnCommitted
argument_list|(
literal|2001
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|readWriteConfig
parameter_list|()
throws|throws
name|Exception
block|{
name|long
index|[]
name|exceptions
init|=
operator|new
name|long
index|[
literal|1000
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|1000
condition|;
name|i
operator|++
control|)
name|exceptions
index|[
name|i
index|]
operator|=
name|i
operator|+
literal|100
expr_stmt|;
name|ValidTxnList
name|txnList
init|=
operator|new
name|ValidTxnListImpl
argument_list|(
name|exceptions
argument_list|,
literal|2000
argument_list|)
decl_stmt|;
name|String
name|str
init|=
name|txnList
operator|.
name|writeToString
argument_list|()
decl_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|ValidTxnList
operator|.
name|VALID_TXNS_KEY
argument_list|,
name|str
argument_list|)
expr_stmt|;
name|File
name|tmpFile
init|=
name|File
operator|.
name|createTempFile
argument_list|(
literal|"TestValidTxnImpl"
argument_list|,
literal|"readWriteConfig"
argument_list|)
decl_stmt|;
name|DataOutputStream
name|out
init|=
operator|new
name|DataOutputStream
argument_list|(
operator|new
name|FileOutputStream
argument_list|(
name|tmpFile
argument_list|)
argument_list|)
decl_stmt|;
name|conf
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
name|DataInputStream
name|in
init|=
operator|new
name|DataInputStream
argument_list|(
operator|new
name|FileInputStream
argument_list|(
name|tmpFile
argument_list|)
argument_list|)
decl_stmt|;
name|Configuration
name|newConf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|newConf
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|str
argument_list|,
name|newConf
operator|.
name|get
argument_list|(
name|ValidTxnList
operator|.
name|VALID_TXNS_KEY
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

