begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|LogUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
operator|.
name|ConfVars
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|LogManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|core
operator|.
name|async
operator|.
name|AsyncLoggerContextSelector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|core
operator|.
name|impl
operator|.
name|Log4jContextFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|core
operator|.
name|selector
operator|.
name|ClassLoaderContextSelector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|core
operator|.
name|selector
operator|.
name|ContextSelector
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * HiveAsyncLogging Test.  */
end_comment

begin_class
specifier|public
class|class
name|TestHiveAsyncLogging
block|{
comment|// this test requires disruptor jar in classpath
annotation|@
name|Test
specifier|public
name|void
name|testAsyncLoggingInitialization
parameter_list|()
throws|throws
name|Exception
block|{
name|HiveConf
name|conf
init|=
operator|new
name|HiveConf
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setBoolVar
argument_list|(
name|ConfVars
operator|.
name|HIVE_ASYNC_LOG_ENABLED
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|LogUtils
operator|.
name|initHiveLog4jCommon
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|HIVE_LOG4J_FILE
argument_list|)
expr_stmt|;
name|Log4jContextFactory
name|log4jContextFactory
init|=
operator|(
name|Log4jContextFactory
operator|)
name|LogManager
operator|.
name|getFactory
argument_list|()
decl_stmt|;
name|ContextSelector
name|contextSelector
init|=
name|log4jContextFactory
operator|.
name|getSelector
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|contextSelector
operator|instanceof
name|ClassLoaderContextSelector
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolVar
argument_list|(
name|ConfVars
operator|.
name|HIVE_ASYNC_LOG_ENABLED
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|LogUtils
operator|.
name|initHiveLog4jCommon
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|HIVE_LOG4J_FILE
argument_list|)
expr_stmt|;
name|log4jContextFactory
operator|=
operator|(
name|Log4jContextFactory
operator|)
name|LogManager
operator|.
name|getFactory
argument_list|()
expr_stmt|;
name|contextSelector
operator|=
name|log4jContextFactory
operator|.
name|getSelector
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|contextSelector
operator|instanceof
name|AsyncLoggerContextSelector
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

