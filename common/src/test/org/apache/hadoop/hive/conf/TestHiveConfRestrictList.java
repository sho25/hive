begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
operator|.
name|ConfVars
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|TestHiveConfRestrictList
extends|extends
name|TestCase
block|{
specifier|private
name|HiveConf
name|conf
init|=
literal|null
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
name|ConfVars
operator|.
name|HIVE_CONF_RESTRICTED_LIST
operator|.
name|varname
argument_list|,
name|ConfVars
operator|.
name|HIVETESTMODEPREFIX
operator|.
name|varname
argument_list|)
expr_stmt|;
name|conf
operator|=
operator|new
name|HiveConf
argument_list|()
expr_stmt|;
block|}
comment|/**    * Test that configs in restrict list can't be changed    * @throws Exception    */
annotation|@
name|Test
specifier|public
name|void
name|testRestriction
parameter_list|()
throws|throws
name|Exception
block|{
name|verifyRestriction
argument_list|(
name|ConfVars
operator|.
name|HIVETESTMODEPREFIX
operator|.
name|varname
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|verifyAndSet
argument_list|(
name|ConfVars
operator|.
name|HIVE_AM_SPLIT_GENERATION
operator|.
name|varname
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test that configs in restrict list can't be changed    * @throws Exception    */
annotation|@
name|Test
specifier|public
name|void
name|testMultipleRestrictions
parameter_list|()
throws|throws
name|Exception
block|{
name|verifyRestriction
argument_list|(
name|ConfVars
operator|.
name|HIVETESTMODEPREFIX
operator|.
name|varname
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|verifyRestriction
argument_list|(
name|ConfVars
operator|.
name|HIVETESTMODE
operator|.
name|varname
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test that restrict list config itselft can't be changed    * @throws Exception    */
annotation|@
name|Test
specifier|public
name|void
name|testRestrictList
parameter_list|()
throws|throws
name|Exception
block|{
name|verifyRestriction
argument_list|(
name|ConfVars
operator|.
name|HIVE_CONF_RESTRICTED_LIST
operator|.
name|varname
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test appending new configs vars added to restrict list    * @throws Exception    */
annotation|@
name|Test
specifier|public
name|void
name|testAppendRestriction
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|appendListStr
init|=
name|ConfVars
operator|.
name|SCRATCHDIR
operator|.
name|varname
operator|+
literal|","
operator|+
name|ConfVars
operator|.
name|LOCALSCRATCHDIR
operator|.
name|varname
operator|+
literal|","
operator|+
name|ConfVars
operator|.
name|METASTOREURIS
operator|.
name|varname
decl_stmt|;
name|conf
operator|.
name|addToRestrictList
argument_list|(
name|appendListStr
argument_list|)
expr_stmt|;
comment|// check if the new configs are added to HIVE_CONF_RESTRICTED_LIST
name|String
name|newRestrictList
init|=
name|conf
operator|.
name|getVar
argument_list|(
name|ConfVars
operator|.
name|HIVE_CONF_RESTRICTED_LIST
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|newRestrictList
operator|.
name|contains
argument_list|(
name|ConfVars
operator|.
name|SCRATCHDIR
operator|.
name|varname
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|newRestrictList
operator|.
name|contains
argument_list|(
name|ConfVars
operator|.
name|LOCALSCRATCHDIR
operator|.
name|varname
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|newRestrictList
operator|.
name|contains
argument_list|(
name|ConfVars
operator|.
name|METASTOREURIS
operator|.
name|varname
argument_list|)
argument_list|)
expr_stmt|;
comment|// check if the old values are still there in HIVE_CONF_RESTRICTED_LIST
name|assertTrue
argument_list|(
name|newRestrictList
operator|.
name|contains
argument_list|(
name|ConfVars
operator|.
name|HIVETESTMODEPREFIX
operator|.
name|varname
argument_list|)
argument_list|)
expr_stmt|;
comment|// verify that the new configs are in effect
name|verifyRestriction
argument_list|(
name|ConfVars
operator|.
name|HIVETESTMODEPREFIX
operator|.
name|varname
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|verifyRestriction
argument_list|(
name|ConfVars
operator|.
name|HIVE_CONF_RESTRICTED_LIST
operator|.
name|varname
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|verifyRestriction
argument_list|(
name|ConfVars
operator|.
name|LOCALSCRATCHDIR
operator|.
name|varname
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
name|verifyRestriction
argument_list|(
name|ConfVars
operator|.
name|METASTOREURIS
operator|.
name|varname
argument_list|,
literal|"foo"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|verifyRestriction
parameter_list|(
name|String
name|varName
parameter_list|,
name|String
name|newVal
parameter_list|)
block|{
try|try
block|{
name|conf
operator|.
name|verifyAndSet
argument_list|(
name|varName
argument_list|,
name|newVal
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Setting config property "
operator|+
name|varName
operator|+
literal|" should fail"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
comment|// the verifyAndSet in this case is expected to fail with the IllegalArgumentException
block|}
block|}
block|}
end_class

end_unit

