begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|common
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|FileUtils
import|;
end_import

begin_comment
comment|/**  * TestShutdownHookManager.  *  * Originally taken from o.a.hadoop.util.TestShutdownHookManager  */
end_comment

begin_class
specifier|public
class|class
name|TestShutdownHookManager
block|{
annotation|@
name|Test
specifier|public
name|void
name|shutdownHookManager
parameter_list|()
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|ShutdownHookManager
operator|.
name|getShutdownHooksInOrder
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Runnable
name|hook1
init|=
operator|new
name|Runnable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{       }
block|}
decl_stmt|;
name|Runnable
name|hook2
init|=
operator|new
name|Runnable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{       }
block|}
decl_stmt|;
name|ShutdownHookManager
operator|.
name|addShutdownHook
argument_list|(
name|hook1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|ShutdownHookManager
operator|.
name|hasShutdownHook
argument_list|(
name|hook1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|ShutdownHookManager
operator|.
name|getShutdownHooksInOrder
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|hook1
argument_list|,
name|ShutdownHookManager
operator|.
name|getShutdownHooksInOrder
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|ShutdownHookManager
operator|.
name|removeShutdownHook
argument_list|(
name|hook1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|ShutdownHookManager
operator|.
name|hasShutdownHook
argument_list|(
name|hook1
argument_list|)
argument_list|)
expr_stmt|;
name|ShutdownHookManager
operator|.
name|addShutdownHook
argument_list|(
name|hook1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|ShutdownHookManager
operator|.
name|hasShutdownHook
argument_list|(
name|hook1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|ShutdownHookManager
operator|.
name|getShutdownHooksInOrder
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|ShutdownHookManager
operator|.
name|hasShutdownHook
argument_list|(
name|hook1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|ShutdownHookManager
operator|.
name|getShutdownHooksInOrder
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|ShutdownHookManager
operator|.
name|addShutdownHook
argument_list|(
name|hook2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|ShutdownHookManager
operator|.
name|hasShutdownHook
argument_list|(
name|hook1
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|ShutdownHookManager
operator|.
name|hasShutdownHook
argument_list|(
name|hook2
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|ShutdownHookManager
operator|.
name|getShutdownHooksInOrder
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|hook2
argument_list|,
name|ShutdownHookManager
operator|.
name|getShutdownHooksInOrder
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|hook1
argument_list|,
name|ShutdownHookManager
operator|.
name|getShutdownHooksInOrder
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|deleteOnExit
parameter_list|()
throws|throws
name|IOException
block|{
name|File
name|file
init|=
name|FileUtils
operator|.
name|createTempFile
argument_list|(
literal|null
argument_list|,
literal|"tmp"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|ShutdownHookManager
operator|.
name|isRegisteredToDeleteOnExit
argument_list|(
name|file
argument_list|)
argument_list|)
expr_stmt|;
name|FileUtils
operator|.
name|deleteTmpFile
argument_list|(
name|file
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|ShutdownHookManager
operator|.
name|isRegisteredToDeleteOnExit
argument_list|(
name|file
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

