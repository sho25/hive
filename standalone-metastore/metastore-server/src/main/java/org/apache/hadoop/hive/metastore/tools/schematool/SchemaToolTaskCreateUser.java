begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|tools
operator|.
name|schematool
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|HiveMetaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Statement
import|;
end_import

begin_class
specifier|public
class|class
name|SchemaToolTaskCreateUser
extends|extends
name|SchemaToolTask
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|SchemaToolTaskCreateUser
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Override
name|void
name|setCommandLineArguments
parameter_list|(
name|SchemaToolCommandLine
name|cl
parameter_list|)
block|{    }
annotation|@
name|Override
name|void
name|execute
parameter_list|()
throws|throws
name|HiveMetaException
block|{
name|schemaTool
operator|.
name|testConnectionToMetastore
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Starting user creation"
argument_list|)
expr_stmt|;
name|String
name|scriptDir
init|=
name|schemaTool
operator|.
name|getMetaStoreSchemaInfo
argument_list|()
operator|.
name|getMetaStoreScriptDir
argument_list|()
decl_stmt|;
name|String
name|protoCreateFile
init|=
name|schemaTool
operator|.
name|getMetaStoreSchemaInfo
argument_list|()
operator|.
name|getCreateUserScript
argument_list|()
decl_stmt|;
try|try
block|{
name|File
name|createFile
init|=
name|subUserAndPassword
argument_list|(
name|scriptDir
argument_list|,
name|protoCreateFile
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Creation script "
operator|+
name|createFile
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|schemaTool
operator|.
name|isDryRun
argument_list|()
condition|)
block|{
if|if
condition|(
literal|"oracle"
operator|.
name|equals
argument_list|(
name|schemaTool
operator|.
name|getDbType
argument_list|()
argument_list|)
condition|)
name|oracleCreateUserHack
argument_list|(
name|createFile
argument_list|)
expr_stmt|;
else|else
name|schemaTool
operator|.
name|execSql
argument_list|(
name|createFile
operator|.
name|getParent
argument_list|()
argument_list|,
name|createFile
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"User creation completed"
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HiveMetaException
argument_list|(
literal|"User creation FAILED!"
operator|+
literal|" Metastore unusable !!"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|private
name|File
name|subUserAndPassword
parameter_list|(
name|String
name|parent
parameter_list|,
name|String
name|filename
parameter_list|)
throws|throws
name|IOException
block|{
name|File
name|createFile
init|=
name|File
operator|.
name|createTempFile
argument_list|(
literal|"create-hive-user-"
operator|+
name|schemaTool
operator|.
name|getDbType
argument_list|()
argument_list|,
literal|".sql"
argument_list|)
decl_stmt|;
name|BufferedWriter
name|writer
init|=
operator|new
name|BufferedWriter
argument_list|(
operator|new
name|FileWriter
argument_list|(
name|createFile
argument_list|)
argument_list|)
decl_stmt|;
name|File
name|proto
init|=
operator|new
name|File
argument_list|(
name|parent
argument_list|,
name|filename
argument_list|)
decl_stmt|;
name|BufferedReader
name|reader
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|FileReader
argument_list|(
name|proto
argument_list|)
argument_list|)
decl_stmt|;
name|reader
operator|.
name|lines
argument_list|()
operator|.
name|map
argument_list|(
name|s
lambda|->
name|s
operator|.
name|replace
argument_list|(
literal|"_REPLACE_WITH_USER_"
argument_list|,
name|schemaTool
operator|.
name|getHiveUser
argument_list|()
argument_list|)
operator|.
name|replace
argument_list|(
literal|"_REPLACE_WITH_PASSWD_"
argument_list|,
name|schemaTool
operator|.
name|getHivePasswd
argument_list|()
argument_list|)
operator|.
name|replace
argument_list|(
literal|"_REPLACE_WITH_DB_"
argument_list|,
name|schemaTool
operator|.
name|getHiveDb
argument_list|()
argument_list|)
argument_list|)
operator|.
name|forEach
argument_list|(
name|s
lambda|->
block|{
lambda|try
block|{
name|writer
operator|.
name|write
argument_list|(
name|s
argument_list|)
expr_stmt|;
name|writer
operator|.
name|newLine
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Unable to write to tmp file "
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|)
class|;
end_class

begin_expr_stmt
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
end_expr_stmt

begin_expr_stmt
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
end_expr_stmt

begin_return
return|return
name|createFile
return|;
end_return

begin_function
unit|}    private
name|void
name|oracleCreateUserHack
parameter_list|(
name|File
name|createFile
parameter_list|)
throws|throws
name|HiveMetaException
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Found oracle, hacking our way through it rather than using SqlLine"
argument_list|)
expr_stmt|;
try|try
init|(
name|BufferedReader
name|reader
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|FileReader
argument_list|(
name|createFile
argument_list|)
argument_list|)
init|)
block|{
try|try
init|(
name|Connection
name|conn
init|=
name|schemaTool
operator|.
name|getConnectionToMetastore
argument_list|(
literal|false
argument_list|)
init|)
block|{
try|try
init|(
name|Statement
name|stmt
init|=
name|conn
operator|.
name|createStatement
argument_list|()
init|)
block|{
name|reader
operator|.
name|lines
argument_list|()
operator|.
name|forEach
argument_list|(
name|s
lambda|->
block|{
assert|assert
name|s
operator|.
name|charAt
argument_list|(
name|s
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
operator|==
literal|';'
assert|;
try|try
block|{
name|stmt
operator|.
name|execute
argument_list|(
name|s
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|s
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SQLException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"statement<"
operator|+
name|s
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|s
operator|.
name|length
argument_list|()
operator|-
literal|2
argument_list|)
operator|+
literal|"> failed"
argument_list|,
name|e
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Caught IOException trying to read modified create user script "
operator|+
name|createFile
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|HiveMetaException
argument_list|(
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|HiveMetaException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Failed to connect to RDBMS"
argument_list|,
name|e
argument_list|)
expr_stmt|;
throw|throw
name|e
throw|;
block|}
catch|catch
parameter_list|(
name|SQLException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Got SQLException"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
end_function

unit|}
end_unit

