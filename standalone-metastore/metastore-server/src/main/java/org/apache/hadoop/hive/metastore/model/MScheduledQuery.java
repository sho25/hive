begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|ScheduledQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|ScheduledQueryKey
import|;
end_import

begin_comment
comment|/**  * Describes a scheduled query.  */
end_comment

begin_class
specifier|public
class|class
name|MScheduledQuery
block|{
specifier|private
name|String
name|clusterNamespace
decl_stmt|;
specifier|private
name|String
name|scheduleName
decl_stmt|;
specifier|private
name|boolean
name|enabled
decl_stmt|;
specifier|private
name|String
name|schedule
decl_stmt|;
specifier|private
name|String
name|user
decl_stmt|;
specifier|private
name|String
name|query
decl_stmt|;
specifier|private
name|Integer
name|nextExecution
decl_stmt|;
specifier|private
name|MScheduledExecution
name|activeExecution
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|MScheduledExecution
argument_list|>
name|executions
decl_stmt|;
specifier|public
name|MScheduledQuery
parameter_list|(
name|ScheduledQuery
name|s
parameter_list|)
block|{
name|clusterNamespace
operator|=
name|s
operator|.
name|getScheduleKey
argument_list|()
operator|.
name|getClusterNamespace
argument_list|()
expr_stmt|;
name|scheduleName
operator|=
name|s
operator|.
name|getScheduleKey
argument_list|()
operator|.
name|getScheduleName
argument_list|()
expr_stmt|;
name|enabled
operator|=
name|s
operator|.
name|isEnabled
argument_list|()
expr_stmt|;
name|schedule
operator|=
name|s
operator|.
name|getSchedule
argument_list|()
expr_stmt|;
name|user
operator|=
name|s
operator|.
name|getUser
argument_list|()
expr_stmt|;
name|query
operator|=
name|s
operator|.
name|getQuery
argument_list|()
expr_stmt|;
name|nextExecution
operator|=
name|s
operator|.
name|getNextExecution
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|MScheduledQuery
name|fromThrift
parameter_list|(
name|ScheduledQuery
name|s
parameter_list|)
block|{
return|return
operator|new
name|MScheduledQuery
argument_list|(
name|s
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|ScheduledQuery
name|toThrift
parameter_list|(
name|MScheduledQuery
name|s
parameter_list|)
block|{
name|ScheduledQuery
name|ret
init|=
operator|new
name|ScheduledQuery
argument_list|()
decl_stmt|;
name|ret
operator|.
name|setScheduleKey
argument_list|(
operator|new
name|ScheduledQueryKey
argument_list|(
name|s
operator|.
name|scheduleName
argument_list|,
name|s
operator|.
name|clusterNamespace
argument_list|)
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setEnabled
argument_list|(
name|s
operator|.
name|enabled
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setSchedule
argument_list|(
name|s
operator|.
name|schedule
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setUser
argument_list|(
name|s
operator|.
name|user
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setQuery
argument_list|(
name|s
operator|.
name|query
argument_list|)
expr_stmt|;
name|ret
operator|.
name|setNextExecution
argument_list|(
name|s
operator|.
name|nextExecution
argument_list|)
expr_stmt|;
return|return
name|ret
return|;
block|}
specifier|public
name|ScheduledQuery
name|toThrift
parameter_list|()
block|{
return|return
name|toThrift
argument_list|(
name|this
argument_list|)
return|;
block|}
specifier|public
name|void
name|doUpdate
parameter_list|(
name|MScheduledQuery
name|schq
parameter_list|)
block|{
comment|// may not change scheduleName
name|enabled
operator|=
name|schq
operator|.
name|enabled
expr_stmt|;
name|clusterNamespace
operator|=
name|schq
operator|.
name|clusterNamespace
expr_stmt|;
name|schedule
operator|=
name|schq
operator|.
name|schedule
expr_stmt|;
name|user
operator|=
name|schq
operator|.
name|user
expr_stmt|;
name|query
operator|=
name|schq
operator|.
name|query
expr_stmt|;
comment|// may not change nextExecution
block|}
specifier|public
name|String
name|getSchedule
parameter_list|()
block|{
return|return
name|schedule
return|;
block|}
specifier|public
name|Integer
name|getNextExecution
parameter_list|()
block|{
return|return
name|nextExecution
return|;
block|}
specifier|public
name|void
name|setNextExecution
parameter_list|(
name|Integer
name|nextExec
parameter_list|)
block|{
name|nextExecution
operator|=
name|nextExec
expr_stmt|;
block|}
specifier|public
name|String
name|getQuery
parameter_list|()
block|{
return|return
name|query
return|;
block|}
specifier|public
name|String
name|getScheduleName
parameter_list|()
block|{
return|return
name|scheduleName
return|;
block|}
specifier|public
name|ScheduledQueryKey
name|getScheduleKey
parameter_list|()
block|{
return|return
operator|new
name|ScheduledQueryKey
argument_list|(
name|scheduleName
argument_list|,
name|clusterNamespace
argument_list|)
return|;
block|}
specifier|public
name|Set
argument_list|<
name|MScheduledExecution
argument_list|>
name|getExecutions
parameter_list|()
block|{
return|return
name|executions
return|;
block|}
specifier|public
name|void
name|setExecutions
parameter_list|(
name|Set
argument_list|<
name|MScheduledExecution
argument_list|>
name|e
parameter_list|)
block|{
name|executions
operator|=
name|e
expr_stmt|;
block|}
specifier|public
name|String
name|getUser
parameter_list|()
block|{
return|return
name|user
return|;
block|}
specifier|public
name|void
name|setActiveExecution
parameter_list|(
name|MScheduledExecution
name|execution
parameter_list|)
block|{
name|activeExecution
operator|=
name|execution
expr_stmt|;
block|}
specifier|public
name|MScheduledExecution
name|getActiveExecution
parameter_list|()
block|{
return|return
name|activeExecution
return|;
block|}
block|}
end_class

end_unit

