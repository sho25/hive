begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|tools
operator|.
name|schematool
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|HiveMetaException
import|;
end_import

begin_comment
comment|/**  * Initialize the metastore schema.  */
end_comment

begin_class
class|class
name|SchemaToolTaskInit
extends|extends
name|SchemaToolTask
block|{
specifier|private
name|boolean
name|validate
init|=
literal|true
decl_stmt|;
specifier|private
name|String
name|toVersion
decl_stmt|;
annotation|@
name|Override
name|void
name|setCommandLineArguments
parameter_list|(
name|SchemaToolCommandLine
name|cl
parameter_list|)
block|{
if|if
condition|(
name|cl
operator|.
name|hasOption
argument_list|(
literal|"initSchemaTo"
argument_list|)
condition|)
block|{
name|this
operator|.
name|toVersion
operator|=
name|cl
operator|.
name|getOptionValue
argument_list|(
literal|"initSchemaTo"
argument_list|)
expr_stmt|;
name|this
operator|.
name|validate
operator|=
literal|false
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|ensureToVersion
parameter_list|()
throws|throws
name|HiveMetaException
block|{
if|if
condition|(
name|toVersion
operator|!=
literal|null
condition|)
block|{
return|return;
block|}
comment|// If null then current hive version is used
name|toVersion
operator|=
name|schemaTool
operator|.
name|getMetaStoreSchemaInfo
argument_list|()
operator|.
name|getHiveSchemaVersion
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Initializing the schema to: "
operator|+
name|toVersion
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
name|void
name|execute
parameter_list|()
throws|throws
name|HiveMetaException
block|{
name|ensureToVersion
argument_list|()
expr_stmt|;
name|schemaTool
operator|.
name|testConnectionToMetastore
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Starting metastore schema initialization to "
operator|+
name|toVersion
argument_list|)
expr_stmt|;
name|String
name|initScriptDir
init|=
name|schemaTool
operator|.
name|getMetaStoreSchemaInfo
argument_list|()
operator|.
name|getMetaStoreScriptDir
argument_list|()
decl_stmt|;
name|String
name|initScriptFile
init|=
name|schemaTool
operator|.
name|getMetaStoreSchemaInfo
argument_list|()
operator|.
name|generateInitFileName
argument_list|(
name|toVersion
argument_list|)
decl_stmt|;
try|try
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Initialization script "
operator|+
name|initScriptFile
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|schemaTool
operator|.
name|isDryRun
argument_list|()
condition|)
block|{
name|schemaTool
operator|.
name|execSql
argument_list|(
name|initScriptDir
argument_list|,
name|initScriptFile
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Initialization script completed"
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HiveMetaException
argument_list|(
literal|"Schema initialization FAILED! Metastore state would be inconsistent!"
argument_list|,
name|e
argument_list|)
throw|;
block|}
if|if
condition|(
name|validate
condition|)
block|{
name|schemaTool
operator|.
name|verifySchemaVersion
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

