begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|datasource
package|;
end_package

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|MetricRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|dbcp
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|dbcp
operator|.
name|DriverManagerConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|dbcp
operator|.
name|PoolableConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|dbcp
operator|.
name|PoolingDataSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|pool
operator|.
name|impl
operator|.
name|GenericObjectPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|conf
operator|.
name|MetastoreConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|sql
operator|.
name|DataSource
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLException
import|;
end_import

begin_comment
comment|/**  * DataSourceProvider for the dbcp connection pool.  */
end_comment

begin_class
specifier|public
class|class
name|DbCPDataSourceProvider
implements|implements
name|DataSourceProvider
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|DbCPDataSourceProvider
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|static
specifier|final
name|String
name|DBCP
init|=
literal|"dbcp"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CONNECTION_TIMEOUT_PROPERTY
init|=
name|DBCP
operator|+
literal|".maxWait"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CONNECTION_MAX_IDLE_PROPERTY
init|=
name|DBCP
operator|+
literal|".maxIdle"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CONNECTION_MIN_IDLE_PROPERTY
init|=
name|DBCP
operator|+
literal|".minIdle"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CONNECTION_TEST_BORROW_PROPERTY
init|=
name|DBCP
operator|+
literal|".testOnBorrow"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CONNECTION_MIN_EVICT_MILLIS_PROPERTY
init|=
name|DBCP
operator|+
literal|".minEvictableIdleTimeMillis"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CONNECTION_TEST_IDLEPROPERTY
init|=
name|DBCP
operator|+
literal|".testWhileIdle"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CONNECTION_TIME_BETWEEN_EVICTION_RUNS_MILLIS
init|=
name|DBCP
operator|+
literal|".timeBetweenEvictionRunsMillis"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CONNECTION_NUM_TESTS_PER_EVICTION_RUN
init|=
name|DBCP
operator|+
literal|".numTestsPerEvictionRun"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CONNECTION_TEST_ON_RETURN
init|=
name|DBCP
operator|+
literal|".testOnReturn"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CONNECTION_SOFT_MIN_EVICTABLE_IDLE_TIME
init|=
name|DBCP
operator|+
literal|".softMinEvictableIdleTimeMillis"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CONNECTION_LIFO
init|=
name|DBCP
operator|+
literal|".lifo"
decl_stmt|;
annotation|@
name|Override
specifier|public
name|DataSource
name|create
parameter_list|(
name|Configuration
name|hdpConfig
parameter_list|)
throws|throws
name|SQLException
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Creating dbcp connection pool for the MetaStore"
argument_list|)
expr_stmt|;
name|String
name|driverUrl
init|=
name|DataSourceProvider
operator|.
name|getMetastoreJdbcDriverUrl
argument_list|(
name|hdpConfig
argument_list|)
decl_stmt|;
name|String
name|user
init|=
name|DataSourceProvider
operator|.
name|getMetastoreJdbcUser
argument_list|(
name|hdpConfig
argument_list|)
decl_stmt|;
name|String
name|passwd
init|=
name|DataSourceProvider
operator|.
name|getMetastoreJdbcPasswd
argument_list|(
name|hdpConfig
argument_list|)
decl_stmt|;
name|int
name|maxPoolSize
init|=
name|hdpConfig
operator|.
name|getInt
argument_list|(
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|CONNECTION_POOLING_MAX_CONNECTIONS
operator|.
name|getVarname
argument_list|()
argument_list|,
operator|(
operator|(
name|Long
operator|)
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|CONNECTION_POOLING_MAX_CONNECTIONS
operator|.
name|getDefaultVal
argument_list|()
operator|)
operator|.
name|intValue
argument_list|()
argument_list|)
decl_stmt|;
name|long
name|connectionTimeout
init|=
name|hdpConfig
operator|.
name|getLong
argument_list|(
name|CONNECTION_TIMEOUT_PROPERTY
argument_list|,
literal|30000L
argument_list|)
decl_stmt|;
name|int
name|connectionMaxIlde
init|=
name|hdpConfig
operator|.
name|getInt
argument_list|(
name|CONNECTION_MAX_IDLE_PROPERTY
argument_list|,
name|GenericObjectPool
operator|.
name|DEFAULT_MAX_IDLE
argument_list|)
decl_stmt|;
name|int
name|connectionMinIlde
init|=
name|hdpConfig
operator|.
name|getInt
argument_list|(
name|CONNECTION_MIN_IDLE_PROPERTY
argument_list|,
name|GenericObjectPool
operator|.
name|DEFAULT_MIN_IDLE
argument_list|)
decl_stmt|;
name|boolean
name|testOnBorrow
init|=
name|hdpConfig
operator|.
name|getBoolean
argument_list|(
name|CONNECTION_TEST_BORROW_PROPERTY
argument_list|,
name|GenericObjectPool
operator|.
name|DEFAULT_TEST_ON_BORROW
argument_list|)
decl_stmt|;
name|long
name|evictionTimeMillis
init|=
name|hdpConfig
operator|.
name|getLong
argument_list|(
name|CONNECTION_MIN_EVICT_MILLIS_PROPERTY
argument_list|,
name|GenericObjectPool
operator|.
name|DEFAULT_MIN_EVICTABLE_IDLE_TIME_MILLIS
argument_list|)
decl_stmt|;
name|boolean
name|testWhileIdle
init|=
name|hdpConfig
operator|.
name|getBoolean
argument_list|(
name|CONNECTION_TEST_IDLEPROPERTY
argument_list|,
name|GenericObjectPool
operator|.
name|DEFAULT_TEST_WHILE_IDLE
argument_list|)
decl_stmt|;
name|long
name|timeBetweenEvictionRuns
init|=
name|hdpConfig
operator|.
name|getLong
argument_list|(
name|CONNECTION_TIME_BETWEEN_EVICTION_RUNS_MILLIS
argument_list|,
name|GenericObjectPool
operator|.
name|DEFAULT_TIME_BETWEEN_EVICTION_RUNS_MILLIS
argument_list|)
decl_stmt|;
name|int
name|numTestsPerEvictionRun
init|=
name|hdpConfig
operator|.
name|getInt
argument_list|(
name|CONNECTION_NUM_TESTS_PER_EVICTION_RUN
argument_list|,
name|GenericObjectPool
operator|.
name|DEFAULT_NUM_TESTS_PER_EVICTION_RUN
argument_list|)
decl_stmt|;
name|boolean
name|testOnReturn
init|=
name|hdpConfig
operator|.
name|getBoolean
argument_list|(
name|CONNECTION_TEST_ON_RETURN
argument_list|,
name|GenericObjectPool
operator|.
name|DEFAULT_TEST_ON_RETURN
argument_list|)
decl_stmt|;
name|long
name|softMinEvictableIdleTimeMillis
init|=
name|hdpConfig
operator|.
name|getLong
argument_list|(
name|CONNECTION_SOFT_MIN_EVICTABLE_IDLE_TIME
argument_list|,
name|GenericObjectPool
operator|.
name|DEFAULT_SOFT_MIN_EVICTABLE_IDLE_TIME_MILLIS
argument_list|)
decl_stmt|;
name|boolean
name|lifo
init|=
name|hdpConfig
operator|.
name|getBoolean
argument_list|(
name|CONNECTION_LIFO
argument_list|,
name|GenericObjectPool
operator|.
name|DEFAULT_LIFO
argument_list|)
decl_stmt|;
name|GenericObjectPool
name|objectPool
init|=
operator|new
name|GenericObjectPool
argument_list|()
decl_stmt|;
name|objectPool
operator|.
name|setMaxActive
argument_list|(
name|maxPoolSize
argument_list|)
expr_stmt|;
name|objectPool
operator|.
name|setMaxWait
argument_list|(
name|connectionTimeout
argument_list|)
expr_stmt|;
name|objectPool
operator|.
name|setMaxIdle
argument_list|(
name|connectionMaxIlde
argument_list|)
expr_stmt|;
name|objectPool
operator|.
name|setMinIdle
argument_list|(
name|connectionMinIlde
argument_list|)
expr_stmt|;
name|objectPool
operator|.
name|setTestOnBorrow
argument_list|(
name|testOnBorrow
argument_list|)
expr_stmt|;
name|objectPool
operator|.
name|setTestWhileIdle
argument_list|(
name|testWhileIdle
argument_list|)
expr_stmt|;
name|objectPool
operator|.
name|setMinEvictableIdleTimeMillis
argument_list|(
name|evictionTimeMillis
argument_list|)
expr_stmt|;
name|objectPool
operator|.
name|setTimeBetweenEvictionRunsMillis
argument_list|(
name|timeBetweenEvictionRuns
argument_list|)
expr_stmt|;
name|objectPool
operator|.
name|setNumTestsPerEvictionRun
argument_list|(
name|numTestsPerEvictionRun
argument_list|)
expr_stmt|;
name|objectPool
operator|.
name|setTestOnReturn
argument_list|(
name|testOnReturn
argument_list|)
expr_stmt|;
name|objectPool
operator|.
name|setSoftMinEvictableIdleTimeMillis
argument_list|(
name|softMinEvictableIdleTimeMillis
argument_list|)
expr_stmt|;
name|objectPool
operator|.
name|setLifo
argument_list|(
name|lifo
argument_list|)
expr_stmt|;
name|ConnectionFactory
name|connFactory
init|=
operator|new
name|DriverManagerConnectionFactory
argument_list|(
name|driverUrl
argument_list|,
name|user
argument_list|,
name|passwd
argument_list|)
decl_stmt|;
comment|// This doesn't get used, but it's still necessary, see
comment|// https://git1-us-west.apache.org/repos/asf?p=commons-dbcp.git;a=blob;f=doc/ManualPoolingDataSourceExample.java;
comment|// h=f45af2b8481f030b27364e505984c0eef4f35cdb;hb=refs/heads/DBCP_1_5_x_BRANCH
operator|new
name|PoolableConnectionFactory
argument_list|(
name|connFactory
argument_list|,
name|objectPool
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
operator|new
name|PoolingDataSource
argument_list|(
name|objectPool
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|mayReturnClosedConnection
parameter_list|()
block|{
comment|// Only BoneCP should return true
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getPoolingType
parameter_list|()
block|{
return|return
name|DBCP
return|;
block|}
block|}
end_class

end_unit

