begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|tools
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|HiveMetaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Perform metastore schema init or upgrade based on schema version  */
end_comment

begin_class
specifier|public
class|class
name|SchemaToolTaskInitOrUpgrade
extends|extends
name|SchemaToolTask
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|SchemaToolTaskInitOrUpgrade
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|SchemaToolCommandLine
name|cl
decl_stmt|;
annotation|@
name|Override
name|void
name|setCommandLineArguments
parameter_list|(
name|SchemaToolCommandLine
name|cl
parameter_list|)
block|{
name|this
operator|.
name|cl
operator|=
name|cl
expr_stmt|;
block|}
annotation|@
name|Override
name|void
name|execute
parameter_list|()
throws|throws
name|HiveMetaException
block|{
name|HiveSchemaHelper
operator|.
name|MetaStoreConnectionInfo
name|connectionInfo
init|=
name|schemaTool
operator|.
name|getConnectionInfo
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|String
name|dbVersion
init|=
literal|null
decl_stmt|;
try|try
block|{
name|dbVersion
operator|=
name|schemaTool
operator|.
name|getMetaStoreSchemaInfo
argument_list|()
operator|.
name|getMetaStoreSchemaVersion
argument_list|(
name|connectionInfo
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|HiveMetaException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Exception getting db version:"
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Try to initialize db schema"
argument_list|)
expr_stmt|;
block|}
name|SchemaToolTask
name|task
decl_stmt|;
if|if
condition|(
name|dbVersion
operator|==
literal|null
condition|)
block|{
name|task
operator|=
operator|new
name|SchemaToolTaskInit
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|task
operator|=
operator|new
name|SchemaToolTaskUpgrade
argument_list|()
expr_stmt|;
block|}
name|task
operator|.
name|setHiveSchemaTool
argument_list|(
name|schemaTool
argument_list|)
expr_stmt|;
name|task
operator|.
name|setCommandLineArguments
argument_list|(
name|cl
argument_list|)
expr_stmt|;
name|task
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

