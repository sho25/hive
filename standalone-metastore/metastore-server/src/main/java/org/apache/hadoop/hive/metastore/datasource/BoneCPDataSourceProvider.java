begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|datasource
package|;
end_package

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|sql
operator|.
name|DataSource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|Gauge
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|Metric
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|MetricRegistry
import|;
end_import

begin_import
import|import
name|com
operator|.
name|codahale
operator|.
name|metrics
operator|.
name|MetricSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jolbox
operator|.
name|bonecp
operator|.
name|BoneCPConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jolbox
operator|.
name|bonecp
operator|.
name|BoneCPDataSource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jolbox
operator|.
name|bonecp
operator|.
name|StatisticsMBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|conf
operator|.
name|MetastoreConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|metrics
operator|.
name|Metrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * DataSourceProvider for the BoneCP connection pool.  */
end_comment

begin_class
specifier|public
class|class
name|BoneCPDataSourceProvider
implements|implements
name|DataSourceProvider
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|BoneCPDataSourceProvider
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|BONECP
init|=
literal|"bonecp"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CONNECTION_TIMEOUT_PROPERTY
init|=
name|BONECP
operator|+
literal|".connectionTimeoutInMs"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PARTITION_COUNT_PROPERTY
init|=
name|BONECP
operator|+
literal|".partitionCount"
decl_stmt|;
annotation|@
name|Override
specifier|public
name|DataSource
name|create
parameter_list|(
name|Configuration
name|hdpConfig
parameter_list|)
throws|throws
name|SQLException
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Creating BoneCP connection pool for the MetaStore"
argument_list|)
expr_stmt|;
name|String
name|driverUrl
init|=
name|DataSourceProvider
operator|.
name|getMetastoreJdbcDriverUrl
argument_list|(
name|hdpConfig
argument_list|)
decl_stmt|;
name|String
name|user
init|=
name|DataSourceProvider
operator|.
name|getMetastoreJdbcUser
argument_list|(
name|hdpConfig
argument_list|)
decl_stmt|;
name|String
name|passwd
init|=
name|DataSourceProvider
operator|.
name|getMetastoreJdbcPasswd
argument_list|(
name|hdpConfig
argument_list|)
decl_stmt|;
name|int
name|maxPoolSize
init|=
name|MetastoreConf
operator|.
name|getIntVar
argument_list|(
name|hdpConfig
argument_list|,
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|CONNECTION_POOLING_MAX_CONNECTIONS
argument_list|)
decl_stmt|;
name|Properties
name|properties
init|=
name|DataSourceProvider
operator|.
name|getPrefixedProperties
argument_list|(
name|hdpConfig
argument_list|,
name|BONECP
argument_list|)
decl_stmt|;
name|long
name|connectionTimeout
init|=
name|hdpConfig
operator|.
name|getLong
argument_list|(
name|CONNECTION_TIMEOUT_PROPERTY
argument_list|,
literal|30000L
argument_list|)
decl_stmt|;
name|String
name|partitionCount
init|=
name|properties
operator|.
name|getProperty
argument_list|(
name|PARTITION_COUNT_PROPERTY
argument_list|,
literal|"1"
argument_list|)
decl_stmt|;
name|BoneCPConfig
name|config
init|=
literal|null
decl_stmt|;
try|try
block|{
name|config
operator|=
operator|new
name|BoneCPConfig
argument_list|(
name|properties
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Cannot create BoneCP configuration: "
argument_list|,
name|e
argument_list|)
throw|;
block|}
name|config
operator|.
name|setJdbcUrl
argument_list|(
name|driverUrl
argument_list|)
expr_stmt|;
comment|// if we are waiting for connection for a long time, something is really wrong
comment|// better raise an error than hang forever
comment|// see DefaultConnectionStrategy.getConnectionInternal()
name|config
operator|.
name|setConnectionTimeoutInMs
argument_list|(
name|connectionTimeout
argument_list|)
expr_stmt|;
name|config
operator|.
name|setMaxConnectionsPerPartition
argument_list|(
name|maxPoolSize
argument_list|)
expr_stmt|;
name|config
operator|.
name|setPartitionCount
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|partitionCount
argument_list|)
argument_list|)
expr_stmt|;
name|config
operator|.
name|setUser
argument_list|(
name|user
argument_list|)
expr_stmt|;
name|config
operator|.
name|setPassword
argument_list|(
name|passwd
argument_list|)
expr_stmt|;
return|return
name|initMetrics
argument_list|(
operator|new
name|BoneCPDataSource
argument_list|(
name|config
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|mayReturnClosedConnection
parameter_list|()
block|{
comment|// See HIVE-11915 for details
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getPoolingType
parameter_list|()
block|{
return|return
name|BONECP
return|;
block|}
specifier|private
name|BoneCPDataSource
name|initMetrics
parameter_list|(
name|BoneCPDataSource
name|ds
parameter_list|)
block|{
specifier|final
name|MetricRegistry
name|registry
init|=
name|Metrics
operator|.
name|getRegistry
argument_list|()
decl_stmt|;
if|if
condition|(
name|registry
operator|!=
literal|null
condition|)
block|{
name|registry
operator|.
name|registerAll
argument_list|(
operator|new
name|BoneCPMetrics
argument_list|(
name|ds
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|ds
return|;
block|}
specifier|private
specifier|static
class|class
name|BoneCPMetrics
implements|implements
name|MetricSet
block|{
specifier|private
name|BoneCPDataSource
name|ds
decl_stmt|;
specifier|private
name|Optional
argument_list|<
name|String
argument_list|>
name|poolName
decl_stmt|;
specifier|private
name|BoneCPMetrics
parameter_list|(
specifier|final
name|BoneCPDataSource
name|ds
parameter_list|)
block|{
name|this
operator|.
name|ds
operator|=
name|ds
expr_stmt|;
name|this
operator|.
name|poolName
operator|=
name|Optional
operator|.
name|ofNullable
argument_list|(
name|ds
operator|.
name|getPoolName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
name|name
parameter_list|(
specifier|final
name|String
name|gaugeName
parameter_list|)
block|{
return|return
name|poolName
operator|.
name|orElse
argument_list|(
literal|"BoneCP"
argument_list|)
operator|+
literal|".pool."
operator|+
name|gaugeName
return|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Metric
argument_list|>
name|getMetrics
parameter_list|()
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Metric
argument_list|>
name|gauges
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|gauges
operator|.
name|put
argument_list|(
name|name
argument_list|(
literal|"TotalConnections"
argument_list|)
argument_list|,
operator|new
name|Gauge
argument_list|<
name|Integer
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Integer
name|getValue
parameter_list|()
block|{
if|if
condition|(
name|ds
operator|.
name|getPool
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
name|ds
operator|.
name|getPool
argument_list|()
operator|.
name|getStatistics
argument_list|()
operator|.
name|getTotalCreatedConnections
argument_list|()
return|;
block|}
else|else
block|{
return|return
literal|0
return|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|gauges
operator|.
name|put
argument_list|(
name|name
argument_list|(
literal|"IdleConnections"
argument_list|)
argument_list|,
operator|new
name|Gauge
argument_list|<
name|Integer
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Integer
name|getValue
parameter_list|()
block|{
if|if
condition|(
name|ds
operator|.
name|getPool
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
name|ds
operator|.
name|getPool
argument_list|()
operator|.
name|getStatistics
argument_list|()
operator|.
name|getTotalFree
argument_list|()
return|;
block|}
else|else
block|{
return|return
literal|0
return|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|gauges
operator|.
name|put
argument_list|(
name|name
argument_list|(
literal|"ActiveConnections"
argument_list|)
argument_list|,
operator|new
name|Gauge
argument_list|<
name|Integer
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Integer
name|getValue
parameter_list|()
block|{
if|if
condition|(
name|ds
operator|.
name|getPool
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
name|ds
operator|.
name|getPool
argument_list|()
operator|.
name|getStatistics
argument_list|()
operator|.
name|getTotalLeased
argument_list|()
return|;
block|}
else|else
block|{
return|return
literal|0
return|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|gauges
operator|.
name|put
argument_list|(
name|name
argument_list|(
literal|"WaitTimeAvg"
argument_list|)
argument_list|,
operator|new
name|Gauge
argument_list|<
name|Double
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Double
name|getValue
parameter_list|()
block|{
if|if
condition|(
name|ds
operator|.
name|getPool
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
name|ds
operator|.
name|getPool
argument_list|()
operator|.
name|getStatistics
argument_list|()
operator|.
name|getConnectionWaitTimeAvg
argument_list|()
return|;
block|}
else|else
block|{
return|return
literal|0.0
return|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
return|return
name|Collections
operator|.
name|unmodifiableMap
argument_list|(
name|gauges
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

