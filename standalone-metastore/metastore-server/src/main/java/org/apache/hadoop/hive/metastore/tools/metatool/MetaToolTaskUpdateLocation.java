begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|tools
operator|.
name|metatool
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|ObjectStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
class|class
name|MetaToolTaskUpdateLocation
extends|extends
name|MetaToolTask
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MetaToolTaskUpdateLocation
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
annotation|@
name|Override
name|void
name|execute
parameter_list|()
block|{
name|String
index|[]
name|loc
init|=
name|getCl
argument_list|()
operator|.
name|getUpddateLocationParams
argument_list|()
decl_stmt|;
name|Path
name|newPath
init|=
operator|new
name|Path
argument_list|(
name|loc
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|Path
name|oldPath
init|=
operator|new
name|Path
argument_list|(
name|loc
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|URI
name|oldURI
init|=
name|oldPath
operator|.
name|toUri
argument_list|()
decl_stmt|;
name|URI
name|newURI
init|=
name|newPath
operator|.
name|toUri
argument_list|()
decl_stmt|;
comment|/*      * validate input - Both new and old URI should contain valid host names and valid schemes.      * port is optional in both the URIs since HDFS HA NN URI doesn't have a port.      */
if|if
condition|(
name|oldURI
operator|.
name|getHost
argument_list|()
operator|==
literal|null
operator|||
name|newURI
operator|.
name|getHost
argument_list|()
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"HiveMetaTool:A valid host is required in both old-loc and new-loc"
argument_list|)
throw|;
block|}
elseif|else
if|if
condition|(
name|oldURI
operator|.
name|getScheme
argument_list|()
operator|==
literal|null
operator|||
name|newURI
operator|.
name|getScheme
argument_list|()
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"HiveMetaTool:A valid scheme is required in both old-loc and new-loc"
argument_list|)
throw|;
block|}
name|updateFSRootLocation
argument_list|(
name|oldURI
argument_list|,
name|newURI
argument_list|,
name|getCl
argument_list|()
operator|.
name|getSerdePropKey
argument_list|()
argument_list|,
name|getCl
argument_list|()
operator|.
name|getTablePropKey
argument_list|()
argument_list|,
name|getCl
argument_list|()
operator|.
name|isDryRun
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|updateFSRootLocation
parameter_list|(
name|URI
name|oldURI
parameter_list|,
name|URI
name|newURI
parameter_list|,
name|String
name|serdePropKey
parameter_list|,
name|String
name|tablePropKey
parameter_list|,
name|boolean
name|isDryRun
parameter_list|)
block|{
name|updateMDatabaseURI
argument_list|(
name|oldURI
argument_list|,
name|newURI
argument_list|,
name|isDryRun
argument_list|)
expr_stmt|;
name|updateMStorageDescriptorTblURI
argument_list|(
name|oldURI
argument_list|,
name|newURI
argument_list|,
name|isDryRun
argument_list|)
expr_stmt|;
name|updateTablePropURI
argument_list|(
name|oldURI
argument_list|,
name|newURI
argument_list|,
name|tablePropKey
argument_list|,
name|isDryRun
argument_list|)
expr_stmt|;
name|upateSerdeURI
argument_list|(
name|oldURI
argument_list|,
name|newURI
argument_list|,
name|serdePropKey
argument_list|,
name|isDryRun
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|updateMDatabaseURI
parameter_list|(
name|URI
name|oldURI
parameter_list|,
name|URI
name|newURI
parameter_list|,
name|boolean
name|isDryRun
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Looking for LOCATION_URI field in DBS table to update.."
argument_list|)
expr_stmt|;
name|ObjectStore
operator|.
name|UpdateMDatabaseURIRetVal
name|retVal
init|=
name|getObjectStore
argument_list|()
operator|.
name|updateMDatabaseURI
argument_list|(
name|oldURI
argument_list|,
name|newURI
argument_list|,
name|isDryRun
argument_list|)
decl_stmt|;
if|if
condition|(
name|retVal
operator|==
literal|null
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Encountered error while executing updateMDatabaseURI - commit of JDO transaction failed. "
operator|+
literal|"Failed to update FSRoot locations in LOCATION_URI field in DBS table."
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|printUpdateLocations
argument_list|(
name|retVal
operator|.
name|getUpdateLocations
argument_list|()
argument_list|,
name|isDryRun
argument_list|,
literal|"DBS"
argument_list|)
expr_stmt|;
name|printBadRecords
argument_list|(
name|retVal
operator|.
name|getBadRecords
argument_list|()
argument_list|,
literal|"DBS"
argument_list|,
literal|"LOCATION_URI"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|updateMStorageDescriptorTblURI
parameter_list|(
name|URI
name|oldURI
parameter_list|,
name|URI
name|newURI
parameter_list|,
name|boolean
name|isDryRun
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Looking for LOCATION field in SDS table to update.."
argument_list|)
expr_stmt|;
name|ObjectStore
operator|.
name|UpdateMStorageDescriptorTblURIRetVal
name|retVal
init|=
name|getObjectStore
argument_list|()
operator|.
name|updateMStorageDescriptorTblURI
argument_list|(
name|oldURI
argument_list|,
name|newURI
argument_list|,
name|isDryRun
argument_list|)
decl_stmt|;
if|if
condition|(
name|retVal
operator|==
literal|null
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Encountered error while executing updateMStorageDescriptorTblURI - commit of JDO "
operator|+
literal|"transaction failed. Failed to update FSRoot locations in LOCATION field in SDS table."
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|printUpdateLocations
argument_list|(
name|retVal
operator|.
name|getUpdateLocations
argument_list|()
argument_list|,
name|isDryRun
argument_list|,
literal|"SDS"
argument_list|)
expr_stmt|;
name|printBadRecords
argument_list|(
name|retVal
operator|.
name|getBadRecords
argument_list|()
argument_list|,
literal|"SDS"
argument_list|,
literal|"LOCATION"
argument_list|)
expr_stmt|;
name|int
name|numNullRecords
init|=
name|retVal
operator|.
name|getNumNullRecords
argument_list|()
decl_stmt|;
if|if
condition|(
name|numNullRecords
operator|!=
literal|0
condition|)
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Number of NULL location URI: "
operator|+
name|numNullRecords
operator|+
literal|". This can happen for View or Index."
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|updateTablePropURI
parameter_list|(
name|URI
name|oldURI
parameter_list|,
name|URI
name|newURI
parameter_list|,
name|String
name|tablePropKey
parameter_list|,
name|boolean
name|isDryRun
parameter_list|)
block|{
if|if
condition|(
name|tablePropKey
operator|!=
literal|null
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Looking for value of "
operator|+
name|tablePropKey
operator|+
literal|" key in TABLE_PARAMS table to update.."
argument_list|)
expr_stmt|;
name|ObjectStore
operator|.
name|UpdatePropURIRetVal
name|updateTblPropURIRetVal
init|=
name|getObjectStore
argument_list|()
operator|.
name|updateTblPropURI
argument_list|(
name|oldURI
argument_list|,
name|newURI
argument_list|,
name|tablePropKey
argument_list|,
name|isDryRun
argument_list|)
decl_stmt|;
name|printPropURIUpdateSummary
argument_list|(
name|updateTblPropURIRetVal
argument_list|,
name|tablePropKey
argument_list|,
name|isDryRun
argument_list|,
literal|"TABLE_PARAMS"
argument_list|,
literal|"updateTblPropURI"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Looking for value of "
operator|+
name|tablePropKey
operator|+
literal|" key in SD_PARAMS table to update.."
argument_list|)
expr_stmt|;
name|ObjectStore
operator|.
name|UpdatePropURIRetVal
name|updatePropURIRetVal
init|=
name|getObjectStore
argument_list|()
operator|.
name|updateMStorageDescriptorTblPropURI
argument_list|(
name|oldURI
argument_list|,
name|newURI
argument_list|,
name|tablePropKey
argument_list|,
name|isDryRun
argument_list|)
decl_stmt|;
name|printPropURIUpdateSummary
argument_list|(
name|updatePropURIRetVal
argument_list|,
name|tablePropKey
argument_list|,
name|isDryRun
argument_list|,
literal|"SD_PARAMS"
argument_list|,
literal|"updateMStorageDescriptorTblPropURI"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|printPropURIUpdateSummary
parameter_list|(
name|ObjectStore
operator|.
name|UpdatePropURIRetVal
name|retVal
parameter_list|,
name|String
name|tablePropKey
parameter_list|,
name|boolean
name|isDryRun
parameter_list|,
name|String
name|tblName
parameter_list|,
name|String
name|methodName
parameter_list|)
block|{
if|if
condition|(
name|retVal
operator|==
literal|null
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Encountered error while executing "
operator|+
name|methodName
operator|+
literal|" - commit of JDO transaction failed. "
operator|+
literal|"Failed to update FSRoot locations in value field corresponding to"
operator|+
name|tablePropKey
operator|+
literal|" in "
operator|+
name|tblName
operator|+
literal|" table."
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|printUpdateLocations
argument_list|(
name|retVal
operator|.
name|getUpdateLocations
argument_list|()
argument_list|,
name|isDryRun
argument_list|,
name|tblName
argument_list|)
expr_stmt|;
name|printBadRecords
argument_list|(
name|retVal
operator|.
name|getBadRecords
argument_list|()
argument_list|,
name|tblName
argument_list|,
name|tablePropKey
operator|+
literal|" key"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|upateSerdeURI
parameter_list|(
name|URI
name|oldURI
parameter_list|,
name|URI
name|newURI
parameter_list|,
name|String
name|serdePropKey
parameter_list|,
name|boolean
name|isDryRun
parameter_list|)
block|{
if|if
condition|(
name|serdePropKey
operator|!=
literal|null
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Looking for value of "
operator|+
name|serdePropKey
operator|+
literal|" key in SERDE_PARAMS table to update.."
argument_list|)
expr_stmt|;
name|ObjectStore
operator|.
name|UpdateSerdeURIRetVal
name|retVal
init|=
name|getObjectStore
argument_list|()
operator|.
name|updateSerdeURI
argument_list|(
name|oldURI
argument_list|,
name|newURI
argument_list|,
name|serdePropKey
argument_list|,
name|isDryRun
argument_list|)
decl_stmt|;
if|if
condition|(
name|retVal
operator|==
literal|null
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Encountered error while executing updateSerdeURI - commit of JDO transaction failed. "
operator|+
literal|"Failed to update FSRoot locations in value field corresponding to "
operator|+
name|serdePropKey
operator|+
literal|" in "
operator|+
literal|"SERDE_PARAMS table."
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|printUpdateLocations
argument_list|(
name|retVal
operator|.
name|getUpdateLocations
argument_list|()
argument_list|,
name|isDryRun
argument_list|,
literal|"SERDE_PARAMS"
argument_list|)
expr_stmt|;
name|printBadRecords
argument_list|(
name|retVal
operator|.
name|getBadRecords
argument_list|()
argument_list|,
literal|"SERDE_PARAMS"
argument_list|,
name|serdePropKey
operator|+
literal|" key"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|printUpdateLocations
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|updateLocations
parameter_list|,
name|boolean
name|isDryRun
parameter_list|,
name|String
name|tableName
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|isDryRun
condition|?
literal|"Dry Run of updateLocation on table "
operator|+
name|tableName
operator|+
literal|".."
else|:
literal|"Successfully updated the following locations.."
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|e
range|:
name|updateLocations
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"old location: "
operator|+
name|e
operator|.
name|getKey
argument_list|()
operator|+
literal|" new location: "
operator|+
name|e
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|isDryRun
condition|?
literal|"Found "
operator|+
name|updateLocations
operator|.
name|size
argument_list|()
operator|+
literal|" records in "
operator|+
name|tableName
operator|+
literal|" table to update"
else|:
literal|"Updated "
operator|+
name|updateLocations
operator|.
name|size
argument_list|()
operator|+
literal|" records in "
operator|+
name|tableName
operator|+
literal|" table"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|printBadRecords
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|badRecords
parameter_list|,
name|String
name|tableName
parameter_list|,
name|String
name|field
parameter_list|)
block|{
if|if
condition|(
operator|!
name|badRecords
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Warning: Found records with bad "
operator|+
name|field
operator|+
literal|" in "
operator|+
name|tableName
operator|+
literal|" table.. "
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|badRecord
range|:
name|badRecords
control|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"bad location URI: "
operator|+
name|badRecord
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

