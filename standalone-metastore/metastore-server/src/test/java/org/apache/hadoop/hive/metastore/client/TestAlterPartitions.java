begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|ProtocolException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|IMetaStoreClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|MetaStoreTestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|annotation
operator|.
name|MetastoreCheckinTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Catalog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|EnvironmentContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|FieldSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|InvalidOperationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|MetaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Partition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
operator|.
name|builder
operator|.
name|CatalogBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
operator|.
name|builder
operator|.
name|DatabaseBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
operator|.
name|builder
operator|.
name|PartitionBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
operator|.
name|builder
operator|.
name|TableBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|minihms
operator|.
name|AbstractMetaStoreService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|TException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|protocol
operator|.
name|TProtocolException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|transport
operator|.
name|TTransportException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
operator|.
name|joining
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|Warehouse
operator|.
name|DEFAULT_DATABASE_NAME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_comment
comment|/**  * API tests for HMS client's  alterPartitions methods.  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|Parameterized
operator|.
name|class
argument_list|)
annotation|@
name|Category
argument_list|(
name|MetastoreCheckinTest
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestAlterPartitions
extends|extends
name|MetaStoreClientTest
block|{
specifier|private
specifier|static
specifier|final
name|int
name|NEW_CREATE_TIME
init|=
literal|123456789
decl_stmt|;
specifier|private
name|AbstractMetaStoreService
name|metaStore
decl_stmt|;
specifier|private
name|IMetaStoreClient
name|client
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DB_NAME
init|=
literal|"testpartdb"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TABLE_NAME
init|=
literal|"testparttable"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|PARTCOL_SCHEMA
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"yyyy"
argument_list|,
literal|"mm"
argument_list|,
literal|"dd"
argument_list|)
decl_stmt|;
specifier|public
name|TestAlterPartitions
parameter_list|(
name|String
name|name
parameter_list|,
name|AbstractMetaStoreService
name|metaStore
parameter_list|)
block|{
name|this
operator|.
name|metaStore
operator|=
name|metaStore
expr_stmt|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Get new client
name|client
operator|=
name|metaStore
operator|.
name|getClient
argument_list|()
expr_stmt|;
comment|// Clean up the database
name|client
operator|.
name|dropDatabase
argument_list|(
name|DB_NAME
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|metaStore
operator|.
name|cleanWarehouseDirs
argument_list|()
expr_stmt|;
name|createDB
argument_list|(
name|DB_NAME
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
if|if
condition|(
name|client
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// HIVE-19729: Shallow the exceptions based on the discussion in the Jira
block|}
block|}
block|}
finally|finally
block|{
name|client
operator|=
literal|null
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|createDB
parameter_list|(
name|String
name|dbName
parameter_list|)
throws|throws
name|TException
block|{
operator|new
name|DatabaseBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|dbName
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|metaStore
operator|.
name|getConf
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Table
name|createTestTable
parameter_list|(
name|IMetaStoreClient
name|client
parameter_list|,
name|String
name|dbName
parameter_list|,
name|String
name|tableName
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|partCols
parameter_list|,
name|boolean
name|setPartitionLevelPrivilages
parameter_list|)
throws|throws
name|Exception
block|{
name|TableBuilder
name|builder
init|=
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tableName
argument_list|)
operator|.
name|addCol
argument_list|(
literal|"id"
argument_list|,
literal|"int"
argument_list|)
operator|.
name|addCol
argument_list|(
literal|"name"
argument_list|,
literal|"string"
argument_list|)
decl_stmt|;
name|partCols
operator|.
name|forEach
argument_list|(
name|col
lambda|->
name|builder
operator|.
name|addPartCol
argument_list|(
name|col
argument_list|,
literal|"string"
argument_list|)
argument_list|)
expr_stmt|;
name|Table
name|table
init|=
name|builder
operator|.
name|build
argument_list|(
name|metaStore
operator|.
name|getConf
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|setPartitionLevelPrivilages
condition|)
block|{
name|table
operator|.
name|putToParameters
argument_list|(
literal|"PARTITION_LEVEL_PRIVILEGE"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
block|}
name|client
operator|.
name|createTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
return|return
name|table
return|;
block|}
specifier|private
name|void
name|addPartition
parameter_list|(
name|IMetaStoreClient
name|client
parameter_list|,
name|Table
name|table
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|values
parameter_list|)
throws|throws
name|TException
block|{
name|PartitionBuilder
name|partitionBuilder
init|=
operator|new
name|PartitionBuilder
argument_list|()
operator|.
name|inTable
argument_list|(
name|table
argument_list|)
decl_stmt|;
name|values
operator|.
name|forEach
argument_list|(
name|val
lambda|->
name|partitionBuilder
operator|.
name|addValue
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|add_partition
argument_list|(
name|partitionBuilder
operator|.
name|build
argument_list|(
name|metaStore
operator|.
name|getConf
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|createTable4PartColsParts
parameter_list|(
name|IMetaStoreClient
name|client
parameter_list|)
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|createTestTable
argument_list|(
name|client
argument_list|,
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|PARTCOL_SCHEMA
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|testValues
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1999"
argument_list|,
literal|"01"
argument_list|,
literal|"02"
argument_list|)
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2009"
argument_list|,
literal|"02"
argument_list|,
literal|"10"
argument_list|)
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|"10"
argument_list|,
literal|"26"
argument_list|)
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|"11"
argument_list|,
literal|"27"
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|List
argument_list|<
name|String
argument_list|>
name|vals
range|:
name|testValues
control|)
block|{
name|addPartition
argument_list|(
name|client
argument_list|,
name|t
argument_list|,
name|vals
argument_list|)
expr_stmt|;
block|}
return|return
name|testValues
return|;
block|}
specifier|private
specifier|static
name|void
name|assertPartitionsHaveCorrectValues
parameter_list|(
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
parameter_list|,
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|testValues
parameter_list|)
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
name|testValues
operator|.
name|size
argument_list|()
argument_list|,
name|partitions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|partitions
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|assertEquals
argument_list|(
name|testValues
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|,
name|partitions
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getValues
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|void
name|makeTestChangesOnPartition
parameter_list|(
name|Partition
name|partition
parameter_list|)
block|{
name|partition
operator|.
name|getParameters
argument_list|()
operator|.
name|put
argument_list|(
literal|"hmsTestParam001"
argument_list|,
literal|"testValue001"
argument_list|)
expr_stmt|;
name|partition
operator|.
name|setCreateTime
argument_list|(
name|NEW_CREATE_TIME
argument_list|)
expr_stmt|;
name|partition
operator|.
name|setLastAccessTime
argument_list|(
name|NEW_CREATE_TIME
argument_list|)
expr_stmt|;
name|partition
operator|.
name|getSd
argument_list|()
operator|.
name|setLocation
argument_list|(
name|partition
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|+
literal|"/hh=01"
argument_list|)
expr_stmt|;
name|partition
operator|.
name|getSd
argument_list|()
operator|.
name|getCols
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"newcol"
argument_list|,
literal|"string"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertPartitionUnchanged
parameter_list|(
name|Partition
name|partition
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|testValues
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|partCols
parameter_list|)
throws|throws
name|MetaException
block|{
name|assertFalse
argument_list|(
name|partition
operator|.
name|getParameters
argument_list|()
operator|.
name|containsKey
argument_list|(
literal|"hmsTestParam001"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|expectedKVPairs
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|partCols
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|expectedKVPairs
operator|.
name|add
argument_list|(
name|partCols
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|+
literal|"="
operator|+
name|testValues
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|String
name|partPath
init|=
name|expectedKVPairs
operator|.
name|stream
argument_list|()
operator|.
name|collect
argument_list|(
name|joining
argument_list|(
literal|"/"
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|partition
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|.
name|equals
argument_list|(
name|metaStore
operator|.
name|getWarehouseRoot
argument_list|()
operator|+
literal|"/testpartdb.db/testparttable/"
operator|+
name|partPath
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
name|NEW_CREATE_TIME
argument_list|,
name|partition
operator|.
name|getCreateTime
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
name|NEW_CREATE_TIME
argument_list|,
name|partition
operator|.
name|getLastAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|partition
operator|.
name|getSd
argument_list|()
operator|.
name|getCols
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertPartitionChanged
parameter_list|(
name|Partition
name|partition
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|testValues
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|partCols
parameter_list|)
throws|throws
name|MetaException
block|{
name|assertEquals
argument_list|(
literal|"testValue001"
argument_list|,
name|partition
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
literal|"hmsTestParam001"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|expectedKVPairs
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|partCols
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|expectedKVPairs
operator|.
name|add
argument_list|(
name|partCols
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|+
literal|"="
operator|+
name|testValues
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|String
name|partPath
init|=
name|expectedKVPairs
operator|.
name|stream
argument_list|()
operator|.
name|collect
argument_list|(
name|joining
argument_list|(
literal|"/"
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|partition
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|.
name|equals
argument_list|(
name|metaStore
operator|.
name|getWarehouseRoot
argument_list|()
operator|+
literal|"/testpartdb.db/testparttable/"
operator|+
name|partPath
operator|+
literal|"/hh=01"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|NEW_CREATE_TIME
argument_list|,
name|partition
operator|.
name|getCreateTime
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|NEW_CREATE_TIME
argument_list|,
name|partition
operator|.
name|getLastAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|partition
operator|.
name|getSd
argument_list|()
operator|.
name|getCols
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * Testing alter_partition(String,String,Partition) ->    *         alter_partition_with_environment_context(String,String,Partition,null).    */
annotation|@
name|Test
specifier|public
name|void
name|testAlterPartition
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|testValues
init|=
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|oldParts
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|oldPart
init|=
name|oldParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|assertPartitionUnchanged
argument_list|(
name|oldPart
argument_list|,
name|testValues
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
name|PARTCOL_SCHEMA
argument_list|)
expr_stmt|;
name|makeTestChangesOnPartition
argument_list|(
name|oldPart
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|oldPart
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|newParts
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|newPart
init|=
name|newParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|assertPartitionChanged
argument_list|(
name|newPart
argument_list|,
name|testValues
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
name|PARTCOL_SCHEMA
argument_list|)
expr_stmt|;
name|assertPartitionsHaveCorrectValues
argument_list|(
name|newParts
argument_list|,
name|testValues
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|otherCatalog
parameter_list|()
throws|throws
name|TException
block|{
name|String
name|catName
init|=
literal|"alter_partition_catalog"
decl_stmt|;
name|Catalog
name|cat
init|=
operator|new
name|CatalogBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|catName
argument_list|)
operator|.
name|setLocation
argument_list|(
name|MetaStoreTestUtils
operator|.
name|getTestWarehouseDir
argument_list|(
name|catName
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|createCatalog
argument_list|(
name|cat
argument_list|)
expr_stmt|;
name|String
name|dbName
init|=
literal|"alter_partition_database_in_other_catalog"
decl_stmt|;
name|Database
name|db
init|=
operator|new
name|DatabaseBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|dbName
argument_list|)
operator|.
name|setCatalogName
argument_list|(
name|catName
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|metaStore
operator|.
name|getConf
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|tableName
init|=
literal|"table_in_other_catalog"
decl_stmt|;
name|Table
name|table
init|=
operator|new
name|TableBuilder
argument_list|()
operator|.
name|inDb
argument_list|(
name|db
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tableName
argument_list|)
operator|.
name|addCol
argument_list|(
literal|"id"
argument_list|,
literal|"int"
argument_list|)
operator|.
name|addCol
argument_list|(
literal|"name"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|addPartCol
argument_list|(
literal|"partcol"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|metaStore
operator|.
name|getConf
argument_list|()
argument_list|)
decl_stmt|;
name|Partition
index|[]
name|parts
init|=
operator|new
name|Partition
index|[
literal|5
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
name|i
operator|++
control|)
block|{
name|parts
index|[
name|i
index|]
operator|=
operator|new
name|PartitionBuilder
argument_list|()
operator|.
name|inTable
argument_list|(
name|table
argument_list|)
operator|.
name|addValue
argument_list|(
literal|"a"
operator|+
name|i
argument_list|)
operator|.
name|setLocation
argument_list|(
name|MetaStoreTestUtils
operator|.
name|getTestWarehouseDir
argument_list|(
literal|"b"
operator|+
name|i
argument_list|)
argument_list|)
operator|.
name|build
argument_list|(
name|metaStore
operator|.
name|getConf
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|client
operator|.
name|add_partitions
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|parts
argument_list|)
argument_list|)
expr_stmt|;
name|Partition
name|newPart
init|=
name|client
operator|.
name|getPartition
argument_list|(
name|catName
argument_list|,
name|dbName
argument_list|,
name|tableName
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"a0"
argument_list|)
argument_list|)
decl_stmt|;
name|newPart
operator|.
name|getParameters
argument_list|()
operator|.
name|put
argument_list|(
literal|"test_key"
argument_list|,
literal|"test_value"
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
name|catName
argument_list|,
name|dbName
argument_list|,
name|tableName
argument_list|,
name|newPart
argument_list|)
expr_stmt|;
name|Partition
name|fetched
init|=
name|client
operator|.
name|getPartition
argument_list|(
name|catName
argument_list|,
name|dbName
argument_list|,
name|tableName
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"a0"
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|catName
argument_list|,
name|fetched
operator|.
name|getCatName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"test_value"
argument_list|,
name|fetched
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
literal|"test_key"
argument_list|)
argument_list|)
expr_stmt|;
name|newPart
operator|=
name|client
operator|.
name|getPartition
argument_list|(
name|catName
argument_list|,
name|dbName
argument_list|,
name|tableName
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"a1"
argument_list|)
argument_list|)
expr_stmt|;
name|newPart
operator|.
name|setLastAccessTime
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|Partition
name|newPart1
init|=
name|client
operator|.
name|getPartition
argument_list|(
name|catName
argument_list|,
name|dbName
argument_list|,
name|tableName
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"a2"
argument_list|)
argument_list|)
decl_stmt|;
name|newPart1
operator|.
name|getSd
argument_list|()
operator|.
name|setLocation
argument_list|(
name|MetaStoreTestUtils
operator|.
name|getTestWarehouseDir
argument_list|(
literal|"somewhere"
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|catName
argument_list|,
name|dbName
argument_list|,
name|tableName
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|newPart
argument_list|,
name|newPart1
argument_list|)
argument_list|)
expr_stmt|;
name|fetched
operator|=
name|client
operator|.
name|getPartition
argument_list|(
name|catName
argument_list|,
name|dbName
argument_list|,
name|tableName
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"a1"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|catName
argument_list|,
name|fetched
operator|.
name|getCatName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3L
argument_list|,
name|fetched
operator|.
name|getLastAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|fetched
operator|=
name|client
operator|.
name|getPartition
argument_list|(
name|catName
argument_list|,
name|dbName
argument_list|,
name|tableName
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"a2"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|catName
argument_list|,
name|fetched
operator|.
name|getCatName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|fetched
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|.
name|contains
argument_list|(
literal|"somewhere"
argument_list|)
argument_list|)
expr_stmt|;
name|newPart
operator|=
name|client
operator|.
name|getPartition
argument_list|(
name|catName
argument_list|,
name|dbName
argument_list|,
name|tableName
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"a4"
argument_list|)
argument_list|)
expr_stmt|;
name|newPart
operator|.
name|getParameters
argument_list|()
operator|.
name|put
argument_list|(
literal|"test_key"
argument_list|,
literal|"test_value"
argument_list|)
expr_stmt|;
name|EnvironmentContext
name|ec
init|=
operator|new
name|EnvironmentContext
argument_list|()
decl_stmt|;
name|ec
operator|.
name|setProperties
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
name|catName
argument_list|,
name|dbName
argument_list|,
name|tableName
argument_list|,
name|newPart
argument_list|,
name|ec
argument_list|)
expr_stmt|;
name|fetched
operator|=
name|client
operator|.
name|getPartition
argument_list|(
name|catName
argument_list|,
name|dbName
argument_list|,
name|tableName
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"a4"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|catName
argument_list|,
name|fetched
operator|.
name|getCatName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"test_value"
argument_list|,
name|fetched
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
literal|"test_key"
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropDatabase
argument_list|(
name|catName
argument_list|,
name|dbName
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropCatalog
argument_list|(
name|catName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
annotation|@
name|Test
specifier|public
name|void
name|deprecatedCalls
parameter_list|()
throws|throws
name|TException
block|{
name|String
name|tableName
init|=
literal|"deprecated_table"
decl_stmt|;
name|Table
name|table
init|=
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setTableName
argument_list|(
name|tableName
argument_list|)
operator|.
name|addCol
argument_list|(
literal|"id"
argument_list|,
literal|"int"
argument_list|)
operator|.
name|addCol
argument_list|(
literal|"name"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|addPartCol
argument_list|(
literal|"partcol"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|metaStore
operator|.
name|getConf
argument_list|()
argument_list|)
decl_stmt|;
name|Partition
index|[]
name|parts
init|=
operator|new
name|Partition
index|[
literal|5
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
name|i
operator|++
control|)
block|{
name|parts
index|[
name|i
index|]
operator|=
operator|new
name|PartitionBuilder
argument_list|()
operator|.
name|inTable
argument_list|(
name|table
argument_list|)
operator|.
name|addValue
argument_list|(
literal|"a"
operator|+
name|i
argument_list|)
operator|.
name|setLocation
argument_list|(
name|MetaStoreTestUtils
operator|.
name|getTestWarehouseDir
argument_list|(
literal|"a"
operator|+
name|i
argument_list|)
argument_list|)
operator|.
name|build
argument_list|(
name|metaStore
operator|.
name|getConf
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|client
operator|.
name|add_partitions
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|parts
argument_list|)
argument_list|)
expr_stmt|;
name|Partition
name|newPart
init|=
name|client
operator|.
name|getPartition
argument_list|(
name|DEFAULT_DATABASE_NAME
argument_list|,
name|tableName
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"a0"
argument_list|)
argument_list|)
decl_stmt|;
name|newPart
operator|.
name|getParameters
argument_list|()
operator|.
name|put
argument_list|(
literal|"test_key"
argument_list|,
literal|"test_value"
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
name|DEFAULT_DATABASE_NAME
argument_list|,
name|tableName
argument_list|,
name|newPart
argument_list|)
expr_stmt|;
name|Partition
name|fetched
init|=
name|client
operator|.
name|getPartition
argument_list|(
name|DEFAULT_DATABASE_NAME
argument_list|,
name|tableName
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"a0"
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"test_value"
argument_list|,
name|fetched
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
literal|"test_key"
argument_list|)
argument_list|)
expr_stmt|;
name|newPart
operator|=
name|client
operator|.
name|getPartition
argument_list|(
name|DEFAULT_DATABASE_NAME
argument_list|,
name|tableName
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"a1"
argument_list|)
argument_list|)
expr_stmt|;
name|newPart
operator|.
name|setLastAccessTime
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|Partition
name|newPart1
init|=
name|client
operator|.
name|getPartition
argument_list|(
name|DEFAULT_DATABASE_NAME
argument_list|,
name|tableName
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"a2"
argument_list|)
argument_list|)
decl_stmt|;
name|newPart1
operator|.
name|getSd
argument_list|()
operator|.
name|setLocation
argument_list|(
literal|"somewhere"
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DEFAULT_DATABASE_NAME
argument_list|,
name|tableName
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|newPart
argument_list|,
name|newPart1
argument_list|)
argument_list|)
expr_stmt|;
name|fetched
operator|=
name|client
operator|.
name|getPartition
argument_list|(
name|DEFAULT_DATABASE_NAME
argument_list|,
name|tableName
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"a1"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3L
argument_list|,
name|fetched
operator|.
name|getLastAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|fetched
operator|=
name|client
operator|.
name|getPartition
argument_list|(
name|DEFAULT_DATABASE_NAME
argument_list|,
name|tableName
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"a2"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|fetched
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|.
name|contains
argument_list|(
literal|"somewhere"
argument_list|)
argument_list|)
expr_stmt|;
name|newPart
operator|=
name|client
operator|.
name|getPartition
argument_list|(
name|DEFAULT_DATABASE_NAME
argument_list|,
name|tableName
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"a3"
argument_list|)
argument_list|)
expr_stmt|;
name|newPart
operator|.
name|setValues
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"b3"
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|renamePartition
argument_list|(
name|DEFAULT_DATABASE_NAME
argument_list|,
name|tableName
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"a3"
argument_list|)
argument_list|,
name|newPart
argument_list|)
expr_stmt|;
name|fetched
operator|=
name|client
operator|.
name|getPartition
argument_list|(
name|DEFAULT_DATABASE_NAME
argument_list|,
name|tableName
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"b3"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|fetched
operator|.
name|getValuesSize
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"b3"
argument_list|,
name|fetched
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|newPart
operator|=
name|client
operator|.
name|getPartition
argument_list|(
name|DEFAULT_DATABASE_NAME
argument_list|,
name|tableName
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"a4"
argument_list|)
argument_list|)
expr_stmt|;
name|newPart
operator|.
name|getParameters
argument_list|()
operator|.
name|put
argument_list|(
literal|"test_key"
argument_list|,
literal|"test_value"
argument_list|)
expr_stmt|;
name|EnvironmentContext
name|ec
init|=
operator|new
name|EnvironmentContext
argument_list|()
decl_stmt|;
name|ec
operator|.
name|setProperties
argument_list|(
name|Collections
operator|.
name|singletonMap
argument_list|(
literal|"a"
argument_list|,
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
name|DEFAULT_DATABASE_NAME
argument_list|,
name|tableName
argument_list|,
name|newPart
argument_list|,
name|ec
argument_list|)
expr_stmt|;
name|fetched
operator|=
name|client
operator|.
name|getPartition
argument_list|(
name|DEFAULT_DATABASE_NAME
argument_list|,
name|tableName
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"a4"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"test_value"
argument_list|,
name|fetched
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
literal|"test_key"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionUnknownPartition
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Table
name|t
init|=
name|client
operator|.
name|getTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
decl_stmt|;
name|PartitionBuilder
name|builder
init|=
operator|new
name|PartitionBuilder
argument_list|()
decl_stmt|;
name|Partition
name|part
init|=
name|builder
operator|.
name|inTable
argument_list|(
name|t
argument_list|)
operator|.
name|addValue
argument_list|(
literal|"1111"
argument_list|)
operator|.
name|addValue
argument_list|(
literal|"11"
argument_list|)
operator|.
name|addValue
argument_list|(
literal|"11"
argument_list|)
operator|.
name|build
argument_list|(
name|metaStore
operator|.
name|getConf
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|part
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionIncompletePartitionVals
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Table
name|t
init|=
name|client
operator|.
name|getTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
decl_stmt|;
name|PartitionBuilder
name|builder
init|=
operator|new
name|PartitionBuilder
argument_list|()
decl_stmt|;
name|Partition
name|part
init|=
name|builder
operator|.
name|inTable
argument_list|(
name|t
argument_list|)
operator|.
name|addValue
argument_list|(
literal|"2017"
argument_list|)
operator|.
name|build
argument_list|(
name|metaStore
operator|.
name|getConf
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|part
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionMissingPartitionVals
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Table
name|t
init|=
name|client
operator|.
name|getTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
decl_stmt|;
name|PartitionBuilder
name|builder
init|=
operator|new
name|PartitionBuilder
argument_list|()
decl_stmt|;
name|Partition
name|part
init|=
name|builder
operator|.
name|inTable
argument_list|(
name|t
argument_list|)
operator|.
name|build
argument_list|(
name|metaStore
operator|.
name|getConf
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|part
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionBogusCatalogName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
literal|"nosuch"
argument_list|,
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|partitions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionNoDbName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
literal|""
argument_list|,
name|TABLE_NAME
argument_list|,
name|partitions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAlterPartitionNullDbName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|alter_partition
argument_list|(
literal|null
argument_list|,
name|TABLE_NAME
argument_list|,
name|partitions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Expected exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
decl||
name|TProtocolException
name|ex
parameter_list|)
block|{     }
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionNoTblName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
name|DB_NAME
argument_list|,
literal|""
argument_list|,
name|partitions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAlterPartitionNullTblName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|alter_partition
argument_list|(
name|DB_NAME
argument_list|,
literal|null
argument_list|,
name|partitions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Expected exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
decl||
name|TProtocolException
name|ex
parameter_list|)
block|{     }
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAlterPartitionNullPartition
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NullPointerException
decl||
name|TTransportException
name|e
parameter_list|)
block|{
comment|//TODO: should not throw different exceptions for different HMS deployment types
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionChangeDbName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|partition
init|=
name|partitions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|partition
operator|.
name|setDbName
argument_list|(
name|DB_NAME
operator|+
literal|"_changed"
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|partition
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionChangeTableName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|partition
init|=
name|partitions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|partition
operator|.
name|setTableName
argument_list|(
name|TABLE_NAME
operator|+
literal|"_changed"
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|partition
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionChangeValues
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|partition
init|=
name|partitions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|partition
operator|.
name|setValues
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1"
argument_list|,
literal|"2"
argument_list|,
literal|"3"
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|partition
argument_list|)
expr_stmt|;
block|}
comment|/**    * Testing alter_partition(String,String,Partition,EnvironmentContext) ->    *         alter_partition_with_environment_context(String,String,Partition,EnvironmentContext).    */
annotation|@
name|Test
specifier|public
name|void
name|testAlterPartitionWithEnvironmentCtx
parameter_list|()
throws|throws
name|Exception
block|{
name|EnvironmentContext
name|context
init|=
operator|new
name|EnvironmentContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|setProperties
argument_list|(
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
block|{
block|{
name|put
argument_list|(
literal|"TestKey"
argument_list|,
literal|"TestValue"
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|testValues
init|=
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|oldParts
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|partition
init|=
name|oldParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|assertPartitionUnchanged
argument_list|(
name|partition
argument_list|,
name|testValues
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
name|PARTCOL_SCHEMA
argument_list|)
expr_stmt|;
name|makeTestChangesOnPartition
argument_list|(
name|partition
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|partition
argument_list|,
name|context
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|newParts
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|partition
operator|=
name|newParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertPartitionChanged
argument_list|(
name|partition
argument_list|,
name|testValues
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
name|PARTCOL_SCHEMA
argument_list|)
expr_stmt|;
name|assertPartitionsHaveCorrectValues
argument_list|(
name|newParts
argument_list|,
name|testValues
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|partition
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|partition
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionWithEnvironmentCtxUnknownPartition
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Table
name|t
init|=
name|client
operator|.
name|getTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
decl_stmt|;
name|PartitionBuilder
name|builder
init|=
operator|new
name|PartitionBuilder
argument_list|()
decl_stmt|;
name|Partition
name|part
init|=
name|builder
operator|.
name|inTable
argument_list|(
name|t
argument_list|)
operator|.
name|addValue
argument_list|(
literal|"1111"
argument_list|)
operator|.
name|addValue
argument_list|(
literal|"11"
argument_list|)
operator|.
name|addValue
argument_list|(
literal|"11"
argument_list|)
operator|.
name|build
argument_list|(
name|metaStore
operator|.
name|getConf
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|part
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionWithEnvironmentCtxIncompletePartitionVals
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Table
name|t
init|=
name|client
operator|.
name|getTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
decl_stmt|;
name|PartitionBuilder
name|builder
init|=
operator|new
name|PartitionBuilder
argument_list|()
decl_stmt|;
name|Partition
name|part
init|=
name|builder
operator|.
name|inTable
argument_list|(
name|t
argument_list|)
operator|.
name|addValue
argument_list|(
literal|"2017"
argument_list|)
operator|.
name|build
argument_list|(
name|metaStore
operator|.
name|getConf
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|part
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionWithEnvironmentCtxMissingPartitionVals
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Table
name|t
init|=
name|client
operator|.
name|getTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
decl_stmt|;
name|PartitionBuilder
name|builder
init|=
operator|new
name|PartitionBuilder
argument_list|()
decl_stmt|;
name|Partition
name|part
init|=
name|builder
operator|.
name|inTable
argument_list|(
name|t
argument_list|)
operator|.
name|build
argument_list|(
name|metaStore
operator|.
name|getConf
argument_list|()
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|part
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionWithEnvironmentCtxNoDbName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
literal|""
argument_list|,
name|TABLE_NAME
argument_list|,
name|partitions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAlterPartitionWithEnvironmentCtxNullDbName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|alter_partition
argument_list|(
literal|null
argument_list|,
name|TABLE_NAME
argument_list|,
name|partitions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Expected exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
decl||
name|TProtocolException
name|ex
parameter_list|)
block|{     }
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionWithEnvironmentCtxNoTblName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
name|DB_NAME
argument_list|,
literal|""
argument_list|,
name|partitions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAlterPartitionWithEnvironmentCtxNullTblName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|alter_partition
argument_list|(
name|DB_NAME
argument_list|,
literal|null
argument_list|,
name|partitions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Expected exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
decl||
name|TProtocolException
name|ex
parameter_list|)
block|{     }
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAlterPartitionWithEnvironmentCtxNullPartition
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
literal|null
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NullPointerException
decl||
name|TTransportException
name|e
parameter_list|)
block|{
comment|//TODO: should not throw different exceptions for different HMS deployment types
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionWithEnvironmentCtxChangeDbName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|partition
init|=
name|partitions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|partition
operator|.
name|setDbName
argument_list|(
name|DB_NAME
operator|+
literal|"_changed"
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|partition
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionWithEnvironmentCtxChangeTableName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|partition
init|=
name|partitions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|partition
operator|.
name|setTableName
argument_list|(
name|TABLE_NAME
operator|+
literal|"_changed"
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|partition
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionWithEnvironmentCtxChangeValues
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|partition
init|=
name|partitions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|partition
operator|.
name|setValues
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1"
argument_list|,
literal|"2"
argument_list|,
literal|"3"
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|partition
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * Testing    *    alter_partitions(String,String,List(Partition)) ->    *    alter_partitions_with_environment_context(String,String,List(Partition),null).    */
annotation|@
name|Test
specifier|public
name|void
name|testAlterPartitions
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|testValues
init|=
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|oldParts
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testValues
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|assertPartitionUnchanged
argument_list|(
name|oldParts
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|,
name|testValues
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|,
name|PARTCOL_SCHEMA
argument_list|)
expr_stmt|;
block|}
name|oldParts
operator|.
name|forEach
argument_list|(
name|p
lambda|->
name|makeTestChangesOnPartition
argument_list|(
name|p
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|oldParts
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|newParts
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testValues
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|assertPartitionChanged
argument_list|(
name|oldParts
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|,
name|testValues
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|,
name|PARTCOL_SCHEMA
argument_list|)
expr_stmt|;
block|}
name|assertPartitionsHaveCorrectValues
argument_list|(
name|newParts
argument_list|,
name|testValues
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionsEmptyPartitionList
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAlterPartitionsUnknownPartition
parameter_list|()
throws|throws
name|Exception
block|{
name|Partition
name|part1
init|=
literal|null
decl_stmt|;
try|try
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Table
name|t
init|=
name|client
operator|.
name|getTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
decl_stmt|;
name|PartitionBuilder
name|builder
init|=
operator|new
name|PartitionBuilder
argument_list|()
decl_stmt|;
name|Partition
name|part
init|=
name|builder
operator|.
name|inTable
argument_list|(
name|t
argument_list|)
operator|.
name|addValue
argument_list|(
literal|"1111"
argument_list|)
operator|.
name|addValue
argument_list|(
literal|"11"
argument_list|)
operator|.
name|addValue
argument_list|(
literal|"11"
argument_list|)
operator|.
name|build
argument_list|(
name|metaStore
operator|.
name|getConf
argument_list|()
argument_list|)
decl_stmt|;
name|part1
operator|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|makeTestChangesOnPartition
argument_list|(
name|part1
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|part
argument_list|,
name|part1
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown InvalidOperationException"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InvalidOperationException
name|e
parameter_list|)
block|{
name|part1
operator|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertPartitionUnchanged
argument_list|(
name|part1
argument_list|,
name|part1
operator|.
name|getValues
argument_list|()
argument_list|,
name|PARTCOL_SCHEMA
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionsIncompletePartitionVals
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Table
name|t
init|=
name|client
operator|.
name|getTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
decl_stmt|;
name|PartitionBuilder
name|builder
init|=
operator|new
name|PartitionBuilder
argument_list|()
decl_stmt|;
name|Partition
name|part
init|=
name|builder
operator|.
name|inTable
argument_list|(
name|t
argument_list|)
operator|.
name|addValue
argument_list|(
literal|"2017"
argument_list|)
operator|.
name|build
argument_list|(
name|metaStore
operator|.
name|getConf
argument_list|()
argument_list|)
decl_stmt|;
name|Partition
name|part1
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|part
argument_list|,
name|part1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionsMissingPartitionVals
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Table
name|t
init|=
name|client
operator|.
name|getTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
decl_stmt|;
name|PartitionBuilder
name|builder
init|=
operator|new
name|PartitionBuilder
argument_list|()
decl_stmt|;
name|Partition
name|part
init|=
name|builder
operator|.
name|inTable
argument_list|(
name|t
argument_list|)
operator|.
name|build
argument_list|(
name|metaStore
operator|.
name|getConf
argument_list|()
argument_list|)
decl_stmt|;
name|Partition
name|part1
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|part
argument_list|,
name|part1
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionsBogusCatalogName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Partition
name|part
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
literal|"nosuch"
argument_list|,
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|part
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionsNoDbName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Partition
name|part
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
literal|""
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|part
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAlterPartitionsNullDbName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Partition
name|part
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|alter_partitions
argument_list|(
literal|null
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|part
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Expected exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
decl||
name|TProtocolException
name|ex
parameter_list|)
block|{     }
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionsNoTblName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Partition
name|part
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
literal|""
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|part
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAlterPartitionsNullTblName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Partition
name|part
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
literal|null
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|part
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"didn't throw"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TProtocolException
decl||
name|MetaException
name|e
parameter_list|)
block|{
comment|// By design
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NullPointerException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionsNullPartition
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Partition
name|part
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|part
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NullPointerException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionsNullPartitions
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Partition
name|part
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAlterPartitionsNullPartitionList
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Partition
name|part
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NullPointerException
decl||
name|TTransportException
decl||
name|TProtocolException
name|e
parameter_list|)
block|{
comment|//TODO: should not throw different exceptions for different HMS deployment types
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionsChangeDbName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|p
init|=
name|partitions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|p
operator|.
name|setDbName
argument_list|(
name|DB_NAME
operator|+
literal|"_changed"
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|p
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionsChangeTableName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|p
init|=
name|partitions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|p
operator|.
name|setTableName
argument_list|(
name|TABLE_NAME
operator|+
literal|"_changed"
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|p
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionsChangeValues
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|p
init|=
name|partitions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|p
operator|.
name|setValues
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1"
argument_list|,
literal|"2"
argument_list|,
literal|"3"
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|p
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Testing    *    alter_partitions(String,String,List(Partition),EnvironmentContext) ->    *    alter_partitions_with_environment_context(String,String,List(Partition),EnvironmentContext).    */
annotation|@
name|Test
specifier|public
name|void
name|testAlterPartitionsWithEnvironmentCtx
parameter_list|()
throws|throws
name|Exception
block|{
name|EnvironmentContext
name|context
init|=
operator|new
name|EnvironmentContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|setProperties
argument_list|(
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
block|{
block|{
name|put
argument_list|(
literal|"TestKey"
argument_list|,
literal|"TestValue"
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|testValues
init|=
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|oldParts
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testValues
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|assertPartitionUnchanged
argument_list|(
name|oldParts
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|,
name|testValues
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|,
name|PARTCOL_SCHEMA
argument_list|)
expr_stmt|;
block|}
name|oldParts
operator|.
name|forEach
argument_list|(
name|p
lambda|->
name|makeTestChangesOnPartition
argument_list|(
name|p
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|oldParts
argument_list|,
name|context
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|newParts
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testValues
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|assertPartitionChanged
argument_list|(
name|oldParts
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|,
name|testValues
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|,
name|PARTCOL_SCHEMA
argument_list|)
expr_stmt|;
block|}
name|assertPartitionsHaveCorrectValues
argument_list|(
name|newParts
argument_list|,
name|testValues
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|newParts
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|newParts
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|testValues
operator|.
name|size
argument_list|()
condition|;
operator|++
name|i
control|)
block|{
name|assertPartitionChanged
argument_list|(
name|oldParts
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|,
name|testValues
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|,
name|PARTCOL_SCHEMA
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionsWithEnvironmentCtxEmptyPartitionList
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|()
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionsWithEnvironmentCtxUnknownPartition
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Table
name|t
init|=
name|client
operator|.
name|getTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
decl_stmt|;
name|PartitionBuilder
name|builder
init|=
operator|new
name|PartitionBuilder
argument_list|()
decl_stmt|;
name|Partition
name|part
init|=
name|builder
operator|.
name|inTable
argument_list|(
name|t
argument_list|)
operator|.
name|addValue
argument_list|(
literal|"1111"
argument_list|)
operator|.
name|addValue
argument_list|(
literal|"11"
argument_list|)
operator|.
name|addValue
argument_list|(
literal|"11"
argument_list|)
operator|.
name|build
argument_list|(
name|metaStore
operator|.
name|getConf
argument_list|()
argument_list|)
decl_stmt|;
name|Partition
name|part1
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|part
argument_list|,
name|part1
argument_list|)
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionsWithEnvironmentCtxIncompletePartitionVals
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Table
name|t
init|=
name|client
operator|.
name|getTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
decl_stmt|;
name|PartitionBuilder
name|builder
init|=
operator|new
name|PartitionBuilder
argument_list|()
decl_stmt|;
name|Partition
name|part
init|=
name|builder
operator|.
name|inTable
argument_list|(
name|t
argument_list|)
operator|.
name|addValue
argument_list|(
literal|"2017"
argument_list|)
operator|.
name|build
argument_list|(
name|metaStore
operator|.
name|getConf
argument_list|()
argument_list|)
decl_stmt|;
name|Partition
name|part1
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|part
argument_list|,
name|part1
argument_list|)
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionsWithEnvironmentCtxMissingPartitionVals
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Table
name|t
init|=
name|client
operator|.
name|getTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
decl_stmt|;
name|PartitionBuilder
name|builder
init|=
operator|new
name|PartitionBuilder
argument_list|()
decl_stmt|;
name|Partition
name|part
init|=
name|builder
operator|.
name|inTable
argument_list|(
name|t
argument_list|)
operator|.
name|build
argument_list|(
name|metaStore
operator|.
name|getConf
argument_list|()
argument_list|)
decl_stmt|;
name|Partition
name|part1
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|part
argument_list|,
name|part1
argument_list|)
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionsWithEnvironmentCtxBogusCatalogName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Partition
name|part
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
literal|"nosuch"
argument_list|,
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|part
argument_list|)
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionsWithEnvironmentCtxNoDbName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Partition
name|part
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
literal|""
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|part
argument_list|)
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAlterPartitionsWithEnvironmentCtxNullDbName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Partition
name|part
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|alter_partitions
argument_list|(
literal|null
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|part
argument_list|)
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Expected exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
decl||
name|TProtocolException
name|ex
parameter_list|)
block|{     }
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionsWithEnvironmentCtxNoTblName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Partition
name|part
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
literal|""
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|part
argument_list|)
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAlterPartitionsWithEnvironmentCtxNullTblName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Partition
name|part
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
literal|null
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|part
argument_list|)
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"didn't throw"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
decl||
name|TProtocolException
name|ex
parameter_list|)
block|{
comment|// By design.
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NullPointerException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionsWithEnvironmentCtxNullPartition
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Partition
name|part
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|part
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NullPointerException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionsWithEnvironmentCtxNullPartitions
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Partition
name|part
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAlterPartitionsWithEnvironmentCtxNullPartitionList
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Partition
name|part
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
literal|null
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NullPointerException
decl||
name|TTransportException
decl||
name|TProtocolException
name|e
parameter_list|)
block|{
comment|//TODO: should not throw different exceptions for different HMS deployment types
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionsWithEnvironmentCtxChangeDbName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|p
init|=
name|partitions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|p
operator|.
name|setDbName
argument_list|(
name|DB_NAME
operator|+
literal|"_changed"
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|p
argument_list|)
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionsWithEnvironmentCtxChangeTableName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|p
init|=
name|partitions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|p
operator|.
name|setTableName
argument_list|(
name|TABLE_NAME
operator|+
literal|"_changed"
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|p
argument_list|)
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterPartitionsWithEnvironmentCtxChangeValues
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|p
init|=
name|partitions
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|p
operator|.
name|setValues
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1"
argument_list|,
literal|"2"
argument_list|,
literal|"3"
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_partitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|p
argument_list|)
argument_list|,
operator|new
name|EnvironmentContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * Testing    *    renamePartition(String,String,List(String),Partition) ->    *    renamePartition(String,String,List(String),Partition).    */
annotation|@
name|Test
specifier|public
name|void
name|testRenamePartition
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|oldValues
init|=
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|newValues
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|newVal
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2018"
argument_list|,
literal|"01"
argument_list|,
literal|"16"
argument_list|)
decl_stmt|;
name|newValues
operator|.
name|addAll
argument_list|(
name|oldValues
operator|.
name|subList
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|newValues
operator|.
name|add
argument_list|(
name|newVal
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|oldParts
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|partToRename
init|=
name|oldParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|partToRename
operator|.
name|setValues
argument_list|(
name|newVal
argument_list|)
expr_stmt|;
name|makeTestChangesOnPartition
argument_list|(
name|partToRename
argument_list|)
expr_stmt|;
name|client
operator|.
name|renamePartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|oldValues
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
name|partToRename
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|newParts
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|assertPartitionsHaveCorrectValues
argument_list|(
name|newParts
argument_list|,
name|newValues
argument_list|)
expr_stmt|;
comment|//Asserting other partition parameters can also be changed, but not the location
name|assertFalse
argument_list|(
name|newParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|"hh=01"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|newParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getSd
argument_list|()
operator|.
name|getCols
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"testValue001"
argument_list|,
name|newParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
literal|"hmsTestParam001"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|NEW_CREATE_TIME
argument_list|,
name|newParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getCreateTime
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|NEW_CREATE_TIME
argument_list|,
name|newParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|.
name|getLastAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|oldValues
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testRenamePartitionTargetAlreadyExisting
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|oldValues
init|=
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|oldParts
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|partToRename
init|=
name|oldParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|partToRename
operator|.
name|setValues
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2018"
argument_list|,
literal|"01"
argument_list|,
literal|"16"
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|renamePartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|oldValues
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
name|oldParts
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testRenamePartitionNoSuchOldPartition
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|oldValues
init|=
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|oldParts
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|partToRename
init|=
name|oldParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|partToRename
operator|.
name|setValues
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2018"
argument_list|,
literal|"01"
argument_list|,
literal|"16"
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|renamePartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1"
argument_list|,
literal|"2"
argument_list|,
literal|""
argument_list|)
argument_list|,
name|partToRename
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testRenamePartitionNullTableInPartition
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|oldValues
init|=
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|oldParts
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|partToRename
init|=
name|oldParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|partToRename
operator|.
name|setValues
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2018"
argument_list|,
literal|"01"
argument_list|,
literal|"16"
argument_list|)
argument_list|)
expr_stmt|;
name|partToRename
operator|.
name|setTableName
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|client
operator|.
name|renamePartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|"11"
argument_list|,
literal|"27"
argument_list|)
argument_list|,
name|partToRename
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testRenamePartitionNullDbInPartition
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|oldValues
init|=
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|oldParts
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|partToRename
init|=
name|oldParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|partToRename
operator|.
name|setValues
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2018"
argument_list|,
literal|"01"
argument_list|,
literal|"16"
argument_list|)
argument_list|)
expr_stmt|;
name|partToRename
operator|.
name|setDbName
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|client
operator|.
name|renamePartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|"11"
argument_list|,
literal|"27"
argument_list|)
argument_list|,
name|partToRename
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testRenamePartitionEmptyOldPartList
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|oldParts
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|partToRename
init|=
name|oldParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|partToRename
operator|.
name|setValues
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2018"
argument_list|,
literal|"01"
argument_list|,
literal|"16"
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|renamePartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|()
argument_list|,
name|partToRename
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRenamePartitionNullOldPartList
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|oldParts
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|partToRename
init|=
name|oldParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|partToRename
operator|.
name|setValues
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2018"
argument_list|,
literal|"01"
argument_list|,
literal|"16"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|renamePartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
literal|null
argument_list|,
name|partToRename
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"should throw"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InvalidOperationException
decl||
name|TProtocolException
name|ex
parameter_list|)
block|{     }
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRenamePartitionNullNewPart
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|oldValues
init|=
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|oldParts
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|partToRename
init|=
name|oldParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|partToRename
operator|.
name|setValues
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2018"
argument_list|,
literal|"01"
argument_list|,
literal|"16"
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|renamePartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|oldValues
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NullPointerException
decl||
name|TProtocolException
name|e
parameter_list|)
block|{     }
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testRenamePartitionBogusCatalogName
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|oldValues
init|=
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|oldParts
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|partToRename
init|=
name|oldParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|partToRename
operator|.
name|setValues
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2018"
argument_list|,
literal|"01"
argument_list|,
literal|"16"
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|renamePartition
argument_list|(
literal|"nosuch"
argument_list|,
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|oldValues
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
name|partToRename
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testRenamePartitionNoDbName
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|oldValues
init|=
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|oldParts
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|partToRename
init|=
name|oldParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|partToRename
operator|.
name|setValues
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2018"
argument_list|,
literal|"01"
argument_list|,
literal|"16"
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|renamePartition
argument_list|(
literal|""
argument_list|,
name|TABLE_NAME
argument_list|,
name|oldValues
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
name|partToRename
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testRenamePartitionNoTblName
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|oldValues
init|=
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|oldParts
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|partToRename
init|=
name|oldParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|partToRename
operator|.
name|setValues
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2018"
argument_list|,
literal|"01"
argument_list|,
literal|"16"
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|renamePartition
argument_list|(
name|DB_NAME
argument_list|,
literal|""
argument_list|,
name|oldValues
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
name|partToRename
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRenamePartitionNullDbName
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|oldValues
init|=
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|oldParts
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|partToRename
init|=
name|oldParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|partToRename
operator|.
name|setValues
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2018"
argument_list|,
literal|"01"
argument_list|,
literal|"16"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|renamePartition
argument_list|(
literal|null
argument_list|,
name|TABLE_NAME
argument_list|,
name|oldValues
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
name|partToRename
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"should throw"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
decl||
name|TProtocolException
name|ex
parameter_list|)
block|{     }
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRenamePartitionNullTblName
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|oldValues
init|=
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|oldParts
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|partToRename
init|=
name|oldParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|partToRename
operator|.
name|setValues
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2018"
argument_list|,
literal|"01"
argument_list|,
literal|"16"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|renamePartition
argument_list|(
name|DB_NAME
argument_list|,
literal|null
argument_list|,
name|oldValues
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
name|partToRename
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"should throw"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
decl||
name|TProtocolException
name|ex
parameter_list|)
block|{     }
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testRenamePartitionChangeTblName
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|oldValues
init|=
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|oldParts
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|partToRename
init|=
name|oldParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|partToRename
operator|.
name|setValues
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2018"
argument_list|,
literal|"01"
argument_list|,
literal|"16"
argument_list|)
argument_list|)
expr_stmt|;
name|partToRename
operator|.
name|setTableName
argument_list|(
name|TABLE_NAME
operator|+
literal|"_2"
argument_list|)
expr_stmt|;
name|client
operator|.
name|renamePartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|oldValues
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
name|partToRename
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testRenamePartitionChangeDbName
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|oldValues
init|=
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|oldParts
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Partition
name|partToRename
init|=
name|oldParts
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|partToRename
operator|.
name|setValues
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2018"
argument_list|,
literal|"01"
argument_list|,
literal|"16"
argument_list|)
argument_list|)
expr_stmt|;
name|partToRename
operator|.
name|setDbName
argument_list|(
name|DB_NAME
operator|+
literal|"_2"
argument_list|)
expr_stmt|;
name|client
operator|.
name|renamePartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|oldValues
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
name|partToRename
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testRenamePartitionNoTable
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|renamePartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2018"
argument_list|,
literal|"01"
argument_list|,
literal|"16"
argument_list|)
argument_list|,
operator|new
name|Partition
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

