begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|annotation
operator|.
name|MetastoreCheckinTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|conf
operator|.
name|MetastoreConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|minihms
operator|.
name|AbstractMetaStoreService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_comment
comment|/**  * Tests abstract class for running MetaStoreClient API tests.  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|Parameterized
operator|.
name|class
argument_list|)
annotation|@
name|Category
argument_list|(
name|MetastoreCheckinTest
operator|.
name|class
argument_list|)
specifier|public
specifier|abstract
class|class
name|MetaStoreClientTest
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TestDatabases
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// Needed until there is no junit release with @BeforeParam, @AfterParam (junit 4.13)
comment|// https://github.com/junit-team/junit4/commit/1bf8438b65858565dbb64736bfe13aae9cfc1b5a
comment|// Then we should remove our own copy
specifier|private
specifier|static
name|Set
argument_list|<
name|AbstractMetaStoreService
argument_list|>
name|metaStoreServices
init|=
literal|null
decl_stmt|;
annotation|@
name|Rule
specifier|public
name|TestRule
name|ignoreRule
decl_stmt|;
annotation|@
name|Parameterized
operator|.
name|Parameters
argument_list|(
name|name
operator|=
literal|"{0}"
argument_list|)
specifier|public
specifier|static
name|List
argument_list|<
name|Object
index|[]
argument_list|>
name|getMetaStoreToTest
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Object
index|[]
argument_list|>
name|result
init|=
name|MetaStoreFactoryForTests
operator|.
name|getMetaStores
argument_list|()
decl_stmt|;
name|metaStoreServices
operator|=
name|result
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|test
lambda|->
operator|(
name|AbstractMetaStoreService
operator|)
name|test
index|[
literal|1
index|]
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toSet
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|startMetaStores
parameter_list|()
block|{
name|startMetaStores
argument_list|(
operator|new
name|HashMap
argument_list|<
name|MetastoreConf
operator|.
name|ConfVars
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * Utility method, which can be used to start MetaStore instances with specific configurations    * different from the default.    * @param msConf Specific MetaStore configuration values    * @param extraConf Specific other configuration values    */
specifier|public
specifier|static
name|void
name|startMetaStores
parameter_list|(
name|Map
argument_list|<
name|MetastoreConf
operator|.
name|ConfVars
argument_list|,
name|String
argument_list|>
name|msConf
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|extraConf
parameter_list|)
block|{
for|for
control|(
name|AbstractMetaStoreService
name|metaStoreService
range|:
name|metaStoreServices
control|)
block|{
try|try
block|{
name|metaStoreService
operator|.
name|start
argument_list|(
name|msConf
argument_list|,
name|extraConf
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// Catch the exceptions, so every other metastore could be stopped as well
comment|// Log it, so at least there is a slight possibility we find out about this :)
name|LOG
operator|.
name|error
argument_list|(
literal|"Error starting MetaStoreService"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|stopMetaStores
parameter_list|()
block|{
for|for
control|(
name|AbstractMetaStoreService
name|metaStoreService
range|:
name|metaStoreServices
control|)
block|{
try|try
block|{
name|metaStoreService
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// Catch the exceptions, so every other metastore could be stopped as well
comment|// Log it, so at least there is a slight possibility we find out about this :)
name|LOG
operator|.
name|error
argument_list|(
literal|"Error stopping MetaStoreService"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

