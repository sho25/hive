begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|IMetaStoreClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|Warehouse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|annotation
operator|.
name|MetastoreCheckinTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|FieldSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|MetaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|NoSuchObjectException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Partition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
operator|.
name|builder
operator|.
name|DatabaseBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
operator|.
name|builder
operator|.
name|PartitionBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
operator|.
name|builder
operator|.
name|TableBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|minihms
operator|.
name|AbstractMetaStoreService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|TException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_comment
comment|/**  * Tests for exchanging partitions.  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|Parameterized
operator|.
name|class
argument_list|)
annotation|@
name|Category
argument_list|(
name|MetastoreCheckinTest
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestExchangePartitions
extends|extends
name|MetaStoreClientTest
block|{
specifier|private
name|AbstractMetaStoreService
name|metaStore
decl_stmt|;
specifier|private
name|IMetaStoreClient
name|client
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DB_NAME
init|=
literal|"test_partition_db"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|STRING_COL_TYPE
init|=
literal|"string"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|INT_COL_TYPE
init|=
literal|"int"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|YEAR_COL_NAME
init|=
literal|"year"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|MONTH_COL_NAME
init|=
literal|"month"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DAY_COL_NAME
init|=
literal|"day"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|short
name|MAX
init|=
operator|-
literal|1
decl_stmt|;
specifier|private
specifier|static
name|Table
name|sourceTable
decl_stmt|;
specifier|private
specifier|static
name|Table
name|destTable
decl_stmt|;
specifier|private
specifier|static
name|Partition
index|[]
name|partitions
decl_stmt|;
specifier|public
name|TestExchangePartitions
parameter_list|(
name|String
name|name
parameter_list|,
name|AbstractMetaStoreService
name|metaStore
parameter_list|)
block|{
name|this
operator|.
name|metaStore
operator|=
name|metaStore
expr_stmt|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Get new client
name|client
operator|=
name|metaStore
operator|.
name|getClient
argument_list|()
expr_stmt|;
comment|// Clean up the database
name|client
operator|.
name|dropDatabase
argument_list|(
name|DB_NAME
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|metaStore
operator|.
name|cleanWarehouseDirs
argument_list|()
expr_stmt|;
name|createDB
argument_list|(
name|DB_NAME
argument_list|)
expr_stmt|;
name|sourceTable
operator|=
name|createSourceTable
argument_list|()
expr_stmt|;
name|destTable
operator|=
name|createDestTable
argument_list|()
expr_stmt|;
name|partitions
operator|=
name|createTestPartitions
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
if|if
condition|(
name|client
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// HIVE-19729: Shallow the exceptions based on the discussion in the Jira
block|}
block|}
block|}
finally|finally
block|{
name|client
operator|=
literal|null
expr_stmt|;
block|}
block|}
comment|// Tests for the List<Partition> exchange_partitions(Map<String, String> partitionSpecs, String
comment|// sourceDb, String sourceTable, String destdb, String destTableName) method
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitions
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|exchangedPartitions
init|=
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|exchangedPartitions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|partitionName
init|=
name|Warehouse
operator|.
name|makePartName
argument_list|(
name|sourceTable
operator|.
name|getPartitionKeys
argument_list|()
argument_list|,
name|partitions
index|[
literal|1
index|]
operator|.
name|getValues
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|exchangedPartitionName
init|=
name|Warehouse
operator|.
name|makePartName
argument_list|(
name|sourceTable
operator|.
name|getPartitionKeys
argument_list|()
argument_list|,
name|exchangedPartitions
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getValues
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|partitionName
argument_list|,
name|exchangedPartitionName
argument_list|)
expr_stmt|;
name|checkExchangedPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|checkRemainingPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|0
index|]
argument_list|,
name|partitions
index|[
literal|2
index|]
argument_list|,
name|partitions
index|[
literal|3
index|]
argument_list|,
name|partitions
index|[
literal|4
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionsDestTableHasPartitions
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Create dest table partitions with custom locations
name|createPartition
argument_list|(
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2019"
argument_list|,
literal|"march"
argument_list|,
literal|"15"
argument_list|)
argument_list|,
name|destTable
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|+
literal|"/destPart1"
argument_list|)
expr_stmt|;
name|createPartition
argument_list|(
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2019"
argument_list|,
literal|"march"
argument_list|,
literal|"22"
argument_list|)
argument_list|,
name|destTable
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|+
literal|"/destPart2"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|DB_NAME
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|DB_NAME
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|checkExchangedPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|checkRemainingPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|0
index|]
argument_list|,
name|partitions
index|[
literal|2
index|]
argument_list|,
name|partitions
index|[
literal|3
index|]
argument_list|,
name|partitions
index|[
literal|4
index|]
argument_list|)
argument_list|)
expr_stmt|;
comment|// Check the original partitions of the dest table
name|List
argument_list|<
name|String
argument_list|>
name|partitionNames
init|=
name|client
operator|.
name|listPartitionNames
argument_list|(
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|MAX
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|partitionNames
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|partitionNames
operator|.
name|containsAll
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"year=2019/month=march/day=15"
argument_list|,
literal|"year=2019/month=march/day=22"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|metaStore
operator|.
name|isPathExists
argument_list|(
operator|new
name|Path
argument_list|(
name|destTable
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|+
literal|"/destPart1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|metaStore
operator|.
name|isPathExists
argument_list|(
operator|new
name|Path
argument_list|(
name|destTable
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|+
literal|"/destPart2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionsYearSet
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|exchangedPartitions
init|=
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|exchangedPartitions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|exchangedPartNames
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|Partition
name|exchangedPartition
range|:
name|exchangedPartitions
control|)
block|{
name|String
name|partName
init|=
name|Warehouse
operator|.
name|makePartName
argument_list|(
name|sourceTable
operator|.
name|getPartitionKeys
argument_list|()
argument_list|,
name|exchangedPartition
operator|.
name|getValues
argument_list|()
argument_list|)
decl_stmt|;
name|exchangedPartNames
operator|.
name|add
argument_list|(
name|partName
argument_list|)
expr_stmt|;
block|}
name|Assert
operator|.
name|assertTrue
argument_list|(
name|exchangedPartNames
operator|.
name|contains
argument_list|(
literal|"year=2017/month=march/day=15"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|exchangedPartNames
operator|.
name|contains
argument_list|(
literal|"year=2017/month=march/day=22"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|exchangedPartNames
operator|.
name|contains
argument_list|(
literal|"year=2017/month=april/day=23"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|exchangedPartNames
operator|.
name|contains
argument_list|(
literal|"year=2017/month=may/day=23"
argument_list|)
argument_list|)
expr_stmt|;
name|checkExchangedPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|0
index|]
argument_list|,
name|partitions
index|[
literal|1
index|]
argument_list|,
name|partitions
index|[
literal|2
index|]
argument_list|,
name|partitions
index|[
literal|3
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|checkRemainingPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|4
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionsYearAndMonthSet
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|"march"
argument_list|,
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|checkExchangedPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|0
index|]
argument_list|,
name|partitions
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|checkRemainingPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|2
index|]
argument_list|,
name|partitions
index|[
literal|3
index|]
argument_list|,
name|partitions
index|[
literal|4
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionsBetweenDBs
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|dbName
init|=
literal|"newDatabase"
decl_stmt|;
name|createDB
argument_list|(
name|dbName
argument_list|)
expr_stmt|;
name|Table
name|dest
init|=
name|createTable
argument_list|(
name|dbName
argument_list|,
literal|"test_dest_table_diff_db"
argument_list|,
name|getYearMonthAndDayPartCols
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|"march"
argument_list|,
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|dest
operator|.
name|getDbName
argument_list|()
argument_list|,
name|dest
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|checkExchangedPartitions
argument_list|(
name|sourceTable
argument_list|,
name|dest
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|0
index|]
argument_list|,
name|partitions
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|checkRemainingPartitions
argument_list|(
name|sourceTable
argument_list|,
name|dest
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|2
index|]
argument_list|,
name|partitions
index|[
literal|3
index|]
argument_list|,
name|partitions
index|[
literal|4
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropDatabase
argument_list|(
name|dbName
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionsCustomTableLocations
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|source
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_source_table_cust_loc"
argument_list|,
name|getYearMonthAndDayPartCols
argument_list|()
argument_list|,
name|metaStore
operator|.
name|getWarehouseRoot
argument_list|()
operator|+
literal|"/sourceTable"
argument_list|)
decl_stmt|;
name|Table
name|dest
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_dest_table_cust_loc"
argument_list|,
name|getYearMonthAndDayPartCols
argument_list|()
argument_list|,
name|metaStore
operator|.
name|getWarehouseRoot
argument_list|()
operator|+
literal|"/destTable"
argument_list|)
decl_stmt|;
name|Partition
index|[]
name|parts
init|=
operator|new
name|Partition
index|[
literal|2
index|]
decl_stmt|;
name|parts
index|[
literal|0
index|]
operator|=
name|createPartition
argument_list|(
name|source
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2019"
argument_list|,
literal|"may"
argument_list|,
literal|"15"
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|parts
index|[
literal|1
index|]
operator|=
name|createPartition
argument_list|(
name|source
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2019"
argument_list|,
literal|"june"
argument_list|,
literal|"14"
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|parts
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|source
operator|.
name|getDbName
argument_list|()
argument_list|,
name|source
operator|.
name|getTableName
argument_list|()
argument_list|,
name|dest
operator|.
name|getDbName
argument_list|()
argument_list|,
name|dest
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|checkExchangedPartitions
argument_list|(
name|source
argument_list|,
name|dest
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|parts
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|checkRemainingPartitions
argument_list|(
name|source
argument_list|,
name|dest
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|parts
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionsCustomTableAndPartLocation
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|source
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_source_table_cust_loc"
argument_list|,
name|getYearMonthAndDayPartCols
argument_list|()
argument_list|,
name|metaStore
operator|.
name|getWarehouseRoot
argument_list|()
operator|+
literal|"/sourceTable"
argument_list|)
decl_stmt|;
name|Table
name|dest
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_dest_table_cust_loc"
argument_list|,
name|getYearMonthAndDayPartCols
argument_list|()
argument_list|,
name|metaStore
operator|.
name|getWarehouseRoot
argument_list|()
operator|+
literal|"/destTable"
argument_list|)
decl_stmt|;
name|Partition
index|[]
name|parts
init|=
operator|new
name|Partition
index|[
literal|2
index|]
decl_stmt|;
name|parts
index|[
literal|0
index|]
operator|=
name|createPartition
argument_list|(
name|source
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2019"
argument_list|,
literal|"may"
argument_list|,
literal|"11"
argument_list|)
argument_list|,
name|source
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|+
literal|"/2019m11"
argument_list|)
expr_stmt|;
name|parts
index|[
literal|1
index|]
operator|=
name|createPartition
argument_list|(
name|source
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2019"
argument_list|,
literal|"july"
argument_list|,
literal|"23"
argument_list|)
argument_list|,
name|source
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|+
literal|"/2019j23"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|parts
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|source
operator|.
name|getDbName
argument_list|()
argument_list|,
name|source
operator|.
name|getTableName
argument_list|()
argument_list|,
name|dest
operator|.
name|getDbName
argument_list|()
argument_list|,
name|dest
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"MetaException should have been thrown."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
comment|// Expected exception as FileNotFoundException will occur if the partitions have custom
comment|// location
block|}
name|checkRemainingPartitions
argument_list|(
name|source
argument_list|,
name|dest
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|parts
index|[
literal|0
index|]
argument_list|,
name|parts
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|destTablePartitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|dest
operator|.
name|getDbName
argument_list|()
argument_list|,
name|dest
operator|.
name|getTableName
argument_list|()
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|destTablePartitions
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionsCustomPartLocation
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|source
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_source_table"
argument_list|,
name|getYearMonthAndDayPartCols
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Table
name|dest
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_dest_table"
argument_list|,
name|getYearMonthAndDayPartCols
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Partition
index|[]
name|parts
init|=
operator|new
name|Partition
index|[
literal|2
index|]
decl_stmt|;
name|parts
index|[
literal|0
index|]
operator|=
name|createPartition
argument_list|(
name|source
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2019"
argument_list|,
literal|"march"
argument_list|,
literal|"15"
argument_list|)
argument_list|,
name|source
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|+
literal|"/2019m15"
argument_list|)
expr_stmt|;
name|parts
index|[
literal|1
index|]
operator|=
name|createPartition
argument_list|(
name|source
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2019"
argument_list|,
literal|"march"
argument_list|,
literal|"22"
argument_list|)
argument_list|,
name|source
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|+
literal|"/2019m22"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|parts
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|source
operator|.
name|getDbName
argument_list|()
argument_list|,
name|source
operator|.
name|getTableName
argument_list|()
argument_list|,
name|dest
operator|.
name|getDbName
argument_list|()
argument_list|,
name|dest
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"MetaException should have been thrown."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
comment|// Expected exception as FileNotFoundException will occur if the partitions have custom
comment|// location
block|}
name|checkRemainingPartitions
argument_list|(
name|source
argument_list|,
name|dest
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|parts
index|[
literal|0
index|]
argument_list|,
name|parts
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|destTablePartitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|dest
operator|.
name|getDbName
argument_list|()
argument_list|,
name|dest
operator|.
name|getTableName
argument_list|()
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|destTablePartitions
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsNonExistingPartLocation
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|metaStore
operator|.
name|cleanWarehouseDirs
argument_list|()
expr_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsNonExistingSourceTable
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|DB_NAME
argument_list|,
literal|"nonexistingtable"
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsNonExistingSourceDB
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
literal|"nonexistingdb"
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsNonExistingDestTable
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|DB_NAME
argument_list|,
literal|"nonexistingtable"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsNonExistingDestDB
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
literal|"nonexistingdb"
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsEmptySourceTable
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|DB_NAME
argument_list|,
literal|""
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsEmptySourceDB
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
literal|""
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsEmptyDestTable
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|DB_NAME
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsEmptyDestDB
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
literal|""
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsNullSourceTable
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|DB_NAME
argument_list|,
literal|null
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsNullSourceDB
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
literal|null
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsNullDestTable
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|DB_NAME
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsNullDestDB
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
literal|null
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsEmptyPartSpec
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsNullPartSpec
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|exchange_partitions
argument_list|(
literal|null
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
literal|null
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsPartAlreadyExists
parameter_list|()
throws|throws
name|Exception
block|{
name|Partition
name|partition
init|=
name|buildPartition
argument_list|(
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|"march"
argument_list|,
literal|"22"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|client
operator|.
name|add_partition
argument_list|(
name|partition
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|DB_NAME
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|DB_NAME
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionsOneFail
parameter_list|()
throws|throws
name|Exception
block|{
name|Partition
name|partition
init|=
name|buildPartition
argument_list|(
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|"march"
argument_list|,
literal|"22"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|client
operator|.
name|add_partition
argument_list|(
name|partition
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|DB_NAME
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|DB_NAME
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Exception should have been thrown as one of the partitions already exists in the dest table."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
comment|// Expected exception
block|}
name|checkRemainingPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|0
index|]
argument_list|,
name|partitions
index|[
literal|2
index|]
argument_list|,
name|partitions
index|[
literal|3
index|]
argument_list|,
name|partitions
index|[
literal|4
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitionsInDestTable
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|MAX
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|partitionsInDestTable
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|partitions
index|[
literal|1
index|]
operator|.
name|getValues
argument_list|()
argument_list|,
name|partitionsInDestTable
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getValues
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|metaStore
operator|.
name|isPathExists
argument_list|(
operator|new
name|Path
argument_list|(
name|partitionsInDestTable
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Partition
name|resultPart
init|=
name|client
operator|.
name|getPartition
argument_list|(
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|partitions
index|[
literal|1
index|]
operator|.
name|getValues
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|resultPart
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|metaStore
operator|.
name|isPathExists
argument_list|(
operator|new
name|Path
argument_list|(
name|partitions
index|[
literal|1
index|]
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsDifferentColsInTables
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"test_id"
argument_list|,
name|INT_COL_TYPE
argument_list|,
literal|"test col id"
argument_list|)
argument_list|)
expr_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"test_value"
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"test col value"
argument_list|)
argument_list|)
expr_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"test_name"
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"test col name"
argument_list|)
argument_list|)
expr_stmt|;
name|Table
name|dest
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_dest_table"
argument_list|,
name|getYearMonthAndDayPartCols
argument_list|()
argument_list|,
name|cols
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|dest
operator|.
name|getDbName
argument_list|()
argument_list|,
name|dest
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsDifferentColNameInTables
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"id"
argument_list|,
name|INT_COL_TYPE
argument_list|,
literal|"test col id"
argument_list|)
argument_list|)
expr_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"test_value"
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"test col value"
argument_list|)
argument_list|)
expr_stmt|;
name|Table
name|dest
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_dest_table"
argument_list|,
name|getYearMonthAndDayPartCols
argument_list|()
argument_list|,
name|cols
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|dest
operator|.
name|getDbName
argument_list|()
argument_list|,
name|dest
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsDifferentColTypesInTables
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"test_id"
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"test col id"
argument_list|)
argument_list|)
expr_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"test_value"
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"test col value"
argument_list|)
argument_list|)
expr_stmt|;
name|Table
name|dest
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_dest_table"
argument_list|,
name|getYearMonthAndDayPartCols
argument_list|()
argument_list|,
name|cols
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|dest
operator|.
name|getDbName
argument_list|()
argument_list|,
name|dest
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsDifferentPartColsInTables
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
name|YEAR_COL_NAME
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"year part col"
argument_list|)
argument_list|)
expr_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
name|MONTH_COL_NAME
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"month part col"
argument_list|)
argument_list|)
expr_stmt|;
name|Table
name|dest
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_dest_table"
argument_list|,
name|cols
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|dest
operator|.
name|getDbName
argument_list|()
argument_list|,
name|dest
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsDifferentPartColNameInTables
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
name|YEAR_COL_NAME
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"year part col"
argument_list|)
argument_list|)
expr_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
name|MONTH_COL_NAME
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"month part col"
argument_list|)
argument_list|)
expr_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"nap"
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"day part col"
argument_list|)
argument_list|)
expr_stmt|;
name|Table
name|dest
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_dest_table"
argument_list|,
name|cols
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|dest
operator|.
name|getDbName
argument_list|()
argument_list|,
name|dest
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsDifferentPartColTypesInTables
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
name|YEAR_COL_NAME
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"year part col"
argument_list|)
argument_list|)
expr_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
name|MONTH_COL_NAME
argument_list|,
name|INT_COL_TYPE
argument_list|,
literal|"month part col"
argument_list|)
argument_list|)
expr_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
name|DAY_COL_NAME
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"day part col"
argument_list|)
argument_list|)
expr_stmt|;
name|Table
name|dest
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_dest_table"
argument_list|,
name|cols
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|dest
operator|.
name|getDbName
argument_list|()
argument_list|,
name|dest
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionsLessValueInPartSpec
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|YEAR_COL_NAME
argument_list|,
literal|"2017"
argument_list|)
expr_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|MONTH_COL_NAME
argument_list|,
literal|"march"
argument_list|)
expr_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|checkExchangedPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|0
index|]
argument_list|,
name|partitions
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|checkRemainingPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|2
index|]
argument_list|,
name|partitions
index|[
literal|3
index|]
argument_list|,
name|partitions
index|[
literal|4
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionsMoreValueInPartSpec
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|YEAR_COL_NAME
argument_list|,
literal|"2017"
argument_list|)
expr_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|MONTH_COL_NAME
argument_list|,
literal|"march"
argument_list|)
expr_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|DAY_COL_NAME
argument_list|,
literal|"22"
argument_list|)
expr_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
literal|"hour"
argument_list|,
literal|"18"
argument_list|)
expr_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|checkExchangedPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|checkRemainingPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|0
index|]
argument_list|,
name|partitions
index|[
literal|2
index|]
argument_list|,
name|partitions
index|[
literal|3
index|]
argument_list|,
name|partitions
index|[
literal|4
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionsDifferentValuesInPartSpec
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|YEAR_COL_NAME
argument_list|,
literal|"2017"
argument_list|)
expr_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
literal|"honap"
argument_list|,
literal|"march"
argument_list|)
expr_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
literal|"nap"
argument_list|,
literal|"22"
argument_list|)
expr_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|checkExchangedPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|0
index|]
argument_list|,
name|partitions
index|[
literal|1
index|]
argument_list|,
name|partitions
index|[
literal|2
index|]
argument_list|,
name|partitions
index|[
literal|3
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|checkRemainingPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|4
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsNonExistingValuesInPartSpec
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
literal|"ev"
argument_list|,
literal|"2017"
argument_list|)
expr_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
literal|"honap"
argument_list|,
literal|"march"
argument_list|)
expr_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
literal|"nap"
argument_list|,
literal|"22"
argument_list|)
expr_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionsOnlyMonthSetInPartSpec
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|YEAR_COL_NAME
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|MONTH_COL_NAME
argument_list|,
literal|"march"
argument_list|)
expr_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|DAY_COL_NAME
argument_list|,
literal|""
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"MetaException should have been thrown."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
comment|// Expected exception
block|}
name|checkRemainingPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|0
index|]
argument_list|,
name|partitions
index|[
literal|1
index|]
argument_list|,
name|partitions
index|[
literal|2
index|]
argument_list|,
name|partitions
index|[
literal|3
index|]
argument_list|,
name|partitions
index|[
literal|4
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partsInDestTable
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|MAX
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|partsInDestTable
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionsYearAndDaySetInPartSpec
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|YEAR_COL_NAME
argument_list|,
literal|"2017"
argument_list|)
expr_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|MONTH_COL_NAME
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|DAY_COL_NAME
argument_list|,
literal|"22"
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"MetaException should have been thrown."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
comment|// Expected exception
block|}
name|checkRemainingPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|0
index|]
argument_list|,
name|partitions
index|[
literal|1
index|]
argument_list|,
name|partitions
index|[
literal|2
index|]
argument_list|,
name|partitions
index|[
literal|3
index|]
argument_list|,
name|partitions
index|[
literal|4
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partsInDestTable
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|MAX
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|partsInDestTable
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsNoPartExists
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|"march"
argument_list|,
literal|"25"
argument_list|)
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionsNoPartExistsYearAndMonthSet
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|"august"
argument_list|,
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partitions
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// Tests for the Partition exchange_partition(Map<String, String> partitionSpecs, String
comment|// sourceDb, String sourceTable, String destdb, String destTableName) method
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartition
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|Partition
name|exchangedPartition
init|=
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|Partition
argument_list|()
argument_list|,
name|exchangedPartition
argument_list|)
expr_stmt|;
name|checkExchangedPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|checkRemainingPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|0
index|]
argument_list|,
name|partitions
index|[
literal|2
index|]
argument_list|,
name|partitions
index|[
literal|3
index|]
argument_list|,
name|partitions
index|[
literal|4
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionDestTableHasPartitions
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Create dest table partitions with custom locations
name|createPartition
argument_list|(
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2019"
argument_list|,
literal|"march"
argument_list|,
literal|"15"
argument_list|)
argument_list|,
name|destTable
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|+
literal|"/destPart1"
argument_list|)
expr_stmt|;
name|createPartition
argument_list|(
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2019"
argument_list|,
literal|"march"
argument_list|,
literal|"22"
argument_list|)
argument_list|,
name|destTable
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|+
literal|"/destPart2"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|DB_NAME
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|DB_NAME
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|checkExchangedPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|checkRemainingPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|0
index|]
argument_list|,
name|partitions
index|[
literal|2
index|]
argument_list|,
name|partitions
index|[
literal|3
index|]
argument_list|,
name|partitions
index|[
literal|4
index|]
argument_list|)
argument_list|)
expr_stmt|;
comment|// Check the original partitions of the dest table
name|List
argument_list|<
name|String
argument_list|>
name|partitionNames
init|=
name|client
operator|.
name|listPartitionNames
argument_list|(
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|MAX
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|partitionNames
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|partitionNames
operator|.
name|containsAll
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"year=2019/month=march/day=15"
argument_list|,
literal|"year=2019/month=march/day=22"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|metaStore
operator|.
name|isPathExists
argument_list|(
operator|new
name|Path
argument_list|(
name|destTable
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|+
literal|"/destPart1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|metaStore
operator|.
name|isPathExists
argument_list|(
operator|new
name|Path
argument_list|(
name|destTable
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|+
literal|"/destPart2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionYearSet
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|Partition
name|exchangedPartition
init|=
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
operator|new
name|Partition
argument_list|()
argument_list|,
name|exchangedPartition
argument_list|)
expr_stmt|;
name|checkExchangedPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|0
index|]
argument_list|,
name|partitions
index|[
literal|1
index|]
argument_list|,
name|partitions
index|[
literal|2
index|]
argument_list|,
name|partitions
index|[
literal|3
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|checkRemainingPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|4
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionYearAndMonthSet
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|"march"
argument_list|,
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|checkExchangedPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|0
index|]
argument_list|,
name|partitions
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|checkRemainingPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|2
index|]
argument_list|,
name|partitions
index|[
literal|3
index|]
argument_list|,
name|partitions
index|[
literal|4
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionBetweenDBs
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|dbName
init|=
literal|"newDatabase"
decl_stmt|;
name|createDB
argument_list|(
name|dbName
argument_list|)
expr_stmt|;
name|Table
name|dest
init|=
name|createTable
argument_list|(
name|dbName
argument_list|,
literal|"test_dest_table_diff_db"
argument_list|,
name|getYearMonthAndDayPartCols
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|"march"
argument_list|,
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|dest
operator|.
name|getDbName
argument_list|()
argument_list|,
name|dest
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|checkExchangedPartitions
argument_list|(
name|sourceTable
argument_list|,
name|dest
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|0
index|]
argument_list|,
name|partitions
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|checkRemainingPartitions
argument_list|(
name|sourceTable
argument_list|,
name|dest
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|2
index|]
argument_list|,
name|partitions
index|[
literal|3
index|]
argument_list|,
name|partitions
index|[
literal|4
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropDatabase
argument_list|(
name|dbName
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionCustomTableLocations
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|source
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_source_table_cust_loc"
argument_list|,
name|getYearMonthAndDayPartCols
argument_list|()
argument_list|,
name|metaStore
operator|.
name|getWarehouseRoot
argument_list|()
operator|+
literal|"/sourceTable"
argument_list|)
decl_stmt|;
name|Table
name|dest
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_dest_table_cust_loc"
argument_list|,
name|getYearMonthAndDayPartCols
argument_list|()
argument_list|,
name|metaStore
operator|.
name|getWarehouseRoot
argument_list|()
operator|+
literal|"/destTable"
argument_list|)
decl_stmt|;
name|Partition
index|[]
name|parts
init|=
operator|new
name|Partition
index|[
literal|2
index|]
decl_stmt|;
name|parts
index|[
literal|0
index|]
operator|=
name|createPartition
argument_list|(
name|source
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2019"
argument_list|,
literal|"may"
argument_list|,
literal|"15"
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|parts
index|[
literal|1
index|]
operator|=
name|createPartition
argument_list|(
name|source
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2019"
argument_list|,
literal|"june"
argument_list|,
literal|"14"
argument_list|)
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|parts
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|source
operator|.
name|getDbName
argument_list|()
argument_list|,
name|source
operator|.
name|getTableName
argument_list|()
argument_list|,
name|dest
operator|.
name|getDbName
argument_list|()
argument_list|,
name|dest
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|checkExchangedPartitions
argument_list|(
name|source
argument_list|,
name|dest
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|parts
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|checkRemainingPartitions
argument_list|(
name|source
argument_list|,
name|dest
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|parts
index|[
literal|0
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionCustomTableAndPartLocation
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|source
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_source_table_cust_loc"
argument_list|,
name|getYearMonthAndDayPartCols
argument_list|()
argument_list|,
name|metaStore
operator|.
name|getWarehouseRoot
argument_list|()
operator|+
literal|"/sourceTable"
argument_list|)
decl_stmt|;
name|Table
name|dest
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_dest_table_cust_loc"
argument_list|,
name|getYearMonthAndDayPartCols
argument_list|()
argument_list|,
name|metaStore
operator|.
name|getWarehouseRoot
argument_list|()
operator|+
literal|"/destTable"
argument_list|)
decl_stmt|;
name|Partition
index|[]
name|parts
init|=
operator|new
name|Partition
index|[
literal|2
index|]
decl_stmt|;
name|parts
index|[
literal|0
index|]
operator|=
name|createPartition
argument_list|(
name|source
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2019"
argument_list|,
literal|"may"
argument_list|,
literal|"11"
argument_list|)
argument_list|,
name|source
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|+
literal|"/2019m11"
argument_list|)
expr_stmt|;
name|parts
index|[
literal|1
index|]
operator|=
name|createPartition
argument_list|(
name|source
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2019"
argument_list|,
literal|"july"
argument_list|,
literal|"23"
argument_list|)
argument_list|,
name|source
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|+
literal|"/2019j23"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|parts
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|source
operator|.
name|getDbName
argument_list|()
argument_list|,
name|source
operator|.
name|getTableName
argument_list|()
argument_list|,
name|dest
operator|.
name|getDbName
argument_list|()
argument_list|,
name|dest
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"MetaException should have been thrown."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
comment|// Expected exception as FileNotFoundException will occur if the partitions have custom
comment|// location
block|}
name|checkRemainingPartitions
argument_list|(
name|source
argument_list|,
name|dest
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|parts
index|[
literal|0
index|]
argument_list|,
name|parts
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|destTablePartitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|dest
operator|.
name|getDbName
argument_list|()
argument_list|,
name|dest
operator|.
name|getTableName
argument_list|()
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|destTablePartitions
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionCustomPartLocation
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|source
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_source_table"
argument_list|,
name|getYearMonthAndDayPartCols
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Table
name|dest
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_dest_table"
argument_list|,
name|getYearMonthAndDayPartCols
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Partition
index|[]
name|parts
init|=
operator|new
name|Partition
index|[
literal|2
index|]
decl_stmt|;
name|parts
index|[
literal|0
index|]
operator|=
name|createPartition
argument_list|(
name|source
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2019"
argument_list|,
literal|"march"
argument_list|,
literal|"15"
argument_list|)
argument_list|,
name|source
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|+
literal|"/2019m15"
argument_list|)
expr_stmt|;
name|parts
index|[
literal|1
index|]
operator|=
name|createPartition
argument_list|(
name|source
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2019"
argument_list|,
literal|"march"
argument_list|,
literal|"22"
argument_list|)
argument_list|,
name|source
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|+
literal|"/2019m22"
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|parts
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|source
operator|.
name|getDbName
argument_list|()
argument_list|,
name|source
operator|.
name|getTableName
argument_list|()
argument_list|,
name|dest
operator|.
name|getDbName
argument_list|()
argument_list|,
name|dest
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"MetaException should have been thrown."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
comment|// Expected exception as FileNotFoundException will occur if the partitions have custom
comment|// location
block|}
name|checkRemainingPartitions
argument_list|(
name|source
argument_list|,
name|dest
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|parts
index|[
literal|0
index|]
argument_list|,
name|parts
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|destTablePartitions
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|dest
operator|.
name|getDbName
argument_list|()
argument_list|,
name|dest
operator|.
name|getTableName
argument_list|()
argument_list|,
operator|(
name|short
operator|)
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|destTablePartitions
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionNonExistingPartLocation
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|metaStore
operator|.
name|cleanWarehouseDirs
argument_list|()
expr_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionNonExistingSourceTable
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|DB_NAME
argument_list|,
literal|"nonexistingtable"
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionNonExistingSourceDB
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
literal|"nonexistingdb"
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionNonExistingDestTable
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|DB_NAME
argument_list|,
literal|"nonexistingtable"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionNonExistingDestDB
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
literal|"nonexistingdb"
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionEmptySourceTable
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|DB_NAME
argument_list|,
literal|""
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionEmptySourceDB
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
literal|""
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionEmptyDestTable
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|DB_NAME
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionEmptyDestDB
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
literal|""
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionNullSourceTable
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|DB_NAME
argument_list|,
literal|null
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionNullSourceDB
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
literal|null
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionNullDestTable
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|DB_NAME
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionNullDestDB
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
literal|null
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionEmptyPartSpec
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionNullPartSpec
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|exchange_partition
argument_list|(
literal|null
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
literal|null
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionPartAlreadyExists
parameter_list|()
throws|throws
name|Exception
block|{
name|Partition
name|partition
init|=
name|buildPartition
argument_list|(
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|"march"
argument_list|,
literal|"22"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|client
operator|.
name|add_partition
argument_list|(
name|partition
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|DB_NAME
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|DB_NAME
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionOneFail
parameter_list|()
throws|throws
name|Exception
block|{
name|Partition
name|partition
init|=
name|buildPartition
argument_list|(
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|"march"
argument_list|,
literal|"22"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|client
operator|.
name|add_partition
argument_list|(
name|partition
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|DB_NAME
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|DB_NAME
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Exception should have been thrown as one of the partitions already exists in the dest table."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
comment|// Expected exception
block|}
name|checkRemainingPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|0
index|]
argument_list|,
name|partitions
index|[
literal|2
index|]
argument_list|,
name|partitions
index|[
literal|3
index|]
argument_list|,
name|partitions
index|[
literal|4
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitionsInDestTable
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|MAX
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|partitionsInDestTable
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|partitions
index|[
literal|1
index|]
operator|.
name|getValues
argument_list|()
argument_list|,
name|partitionsInDestTable
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getValues
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|metaStore
operator|.
name|isPathExists
argument_list|(
operator|new
name|Path
argument_list|(
name|partitionsInDestTable
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Partition
name|resultPart
init|=
name|client
operator|.
name|getPartition
argument_list|(
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|partitions
index|[
literal|1
index|]
operator|.
name|getValues
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|resultPart
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|metaStore
operator|.
name|isPathExists
argument_list|(
operator|new
name|Path
argument_list|(
name|partitions
index|[
literal|1
index|]
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionDifferentColsInTables
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"test_id"
argument_list|,
name|INT_COL_TYPE
argument_list|,
literal|"test col id"
argument_list|)
argument_list|)
expr_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"test_value"
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"test col value"
argument_list|)
argument_list|)
expr_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"test_name"
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"test col name"
argument_list|)
argument_list|)
expr_stmt|;
name|Table
name|dest
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_dest_table"
argument_list|,
name|getYearMonthAndDayPartCols
argument_list|()
argument_list|,
name|cols
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|dest
operator|.
name|getDbName
argument_list|()
argument_list|,
name|dest
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionDifferentColNameInTables
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"id"
argument_list|,
name|INT_COL_TYPE
argument_list|,
literal|"test col id"
argument_list|)
argument_list|)
expr_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"test_value"
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"test col value"
argument_list|)
argument_list|)
expr_stmt|;
name|Table
name|dest
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_dest_table"
argument_list|,
name|getYearMonthAndDayPartCols
argument_list|()
argument_list|,
name|cols
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|dest
operator|.
name|getDbName
argument_list|()
argument_list|,
name|dest
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionDifferentColTypesInTables
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"test_id"
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"test col id"
argument_list|)
argument_list|)
expr_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"test_value"
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"test col value"
argument_list|)
argument_list|)
expr_stmt|;
name|Table
name|dest
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_dest_table"
argument_list|,
name|getYearMonthAndDayPartCols
argument_list|()
argument_list|,
name|cols
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|dest
operator|.
name|getDbName
argument_list|()
argument_list|,
name|dest
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionDifferentPartColsInTables
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
name|YEAR_COL_NAME
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"year part col"
argument_list|)
argument_list|)
expr_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
name|MONTH_COL_NAME
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"month part col"
argument_list|)
argument_list|)
expr_stmt|;
name|Table
name|dest
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_dest_table"
argument_list|,
name|cols
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|dest
operator|.
name|getDbName
argument_list|()
argument_list|,
name|dest
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionDifferentPartColNameInTables
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
name|YEAR_COL_NAME
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"year part col"
argument_list|)
argument_list|)
expr_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
name|MONTH_COL_NAME
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"month part col"
argument_list|)
argument_list|)
expr_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"nap"
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"day part col"
argument_list|)
argument_list|)
expr_stmt|;
name|Table
name|dest
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_dest_table"
argument_list|,
name|cols
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|dest
operator|.
name|getDbName
argument_list|()
argument_list|,
name|dest
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionDifferentPartColTypesInTables
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
name|YEAR_COL_NAME
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"year part col"
argument_list|)
argument_list|)
expr_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
name|MONTH_COL_NAME
argument_list|,
name|INT_COL_TYPE
argument_list|,
literal|"month part col"
argument_list|)
argument_list|)
expr_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
name|DAY_COL_NAME
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"day part col"
argument_list|)
argument_list|)
expr_stmt|;
name|Table
name|dest
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_dest_table"
argument_list|,
name|cols
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|dest
operator|.
name|getDbName
argument_list|()
argument_list|,
name|dest
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionLessValueInPartSpec
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|YEAR_COL_NAME
argument_list|,
literal|"2017"
argument_list|)
expr_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|MONTH_COL_NAME
argument_list|,
literal|"march"
argument_list|)
expr_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|checkExchangedPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|0
index|]
argument_list|,
name|partitions
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|checkRemainingPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|2
index|]
argument_list|,
name|partitions
index|[
literal|3
index|]
argument_list|,
name|partitions
index|[
literal|4
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionMoreValueInPartSpec
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|YEAR_COL_NAME
argument_list|,
literal|"2017"
argument_list|)
expr_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|MONTH_COL_NAME
argument_list|,
literal|"march"
argument_list|)
expr_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|DAY_COL_NAME
argument_list|,
literal|"22"
argument_list|)
expr_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
literal|"hour"
argument_list|,
literal|"18"
argument_list|)
expr_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|checkExchangedPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|1
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|checkRemainingPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|0
index|]
argument_list|,
name|partitions
index|[
literal|2
index|]
argument_list|,
name|partitions
index|[
literal|3
index|]
argument_list|,
name|partitions
index|[
literal|4
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionDifferentValuesInPartSpec
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|YEAR_COL_NAME
argument_list|,
literal|"2017"
argument_list|)
expr_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
literal|"honap"
argument_list|,
literal|"march"
argument_list|)
expr_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
literal|"nap"
argument_list|,
literal|"22"
argument_list|)
expr_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|checkExchangedPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|0
index|]
argument_list|,
name|partitions
index|[
literal|1
index|]
argument_list|,
name|partitions
index|[
literal|2
index|]
argument_list|,
name|partitions
index|[
literal|3
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|checkRemainingPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|4
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionNonExistingValuesInPartSpec
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
literal|"ev"
argument_list|,
literal|"2017"
argument_list|)
expr_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
literal|"honap"
argument_list|,
literal|"march"
argument_list|)
expr_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
literal|"nap"
argument_list|,
literal|"22"
argument_list|)
expr_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionOnlyMonthSetInPartSpec
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|YEAR_COL_NAME
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|MONTH_COL_NAME
argument_list|,
literal|"march"
argument_list|)
expr_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|DAY_COL_NAME
argument_list|,
literal|""
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"MetaException should have been thrown."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
comment|// Expected exception
block|}
name|checkRemainingPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|0
index|]
argument_list|,
name|partitions
index|[
literal|1
index|]
argument_list|,
name|partitions
index|[
literal|2
index|]
argument_list|,
name|partitions
index|[
literal|3
index|]
argument_list|,
name|partitions
index|[
literal|4
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partsInDestTable
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|MAX
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|partsInDestTable
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testExchangePartitionYearAndDaySetInPartSpec
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|YEAR_COL_NAME
argument_list|,
literal|"2017"
argument_list|)
expr_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|MONTH_COL_NAME
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|DAY_COL_NAME
argument_list|,
literal|"22"
argument_list|)
expr_stmt|;
try|try
block|{
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"MetaException should have been thrown."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|e
parameter_list|)
block|{
comment|// Expected exception
block|}
name|checkRemainingPartitions
argument_list|(
name|sourceTable
argument_list|,
name|destTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partitions
index|[
literal|0
index|]
argument_list|,
name|partitions
index|[
literal|1
index|]
argument_list|,
name|partitions
index|[
literal|2
index|]
argument_list|,
name|partitions
index|[
literal|3
index|]
argument_list|,
name|partitions
index|[
literal|4
index|]
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partsInDestTable
init|=
name|client
operator|.
name|listPartitions
argument_list|(
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|MAX
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|partsInDestTable
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionNoPartExists
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|"march"
argument_list|,
literal|"25"
argument_list|)
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testExchangePartitionNoPartExistsYearAndMonthSet
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
name|getPartitionSpec
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|"august"
argument_list|,
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|client
operator|.
name|exchange_partition
argument_list|(
name|partitionSpecs
argument_list|,
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// Helper methods
specifier|private
name|void
name|createDB
parameter_list|(
name|String
name|dbName
parameter_list|)
throws|throws
name|TException
block|{
operator|new
name|DatabaseBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|dbName
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|metaStore
operator|.
name|getConf
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Table
name|createSourceTable
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_part_exch_table_source"
argument_list|,
name|getYearMonthAndDayPartCols
argument_list|()
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|private
name|Table
name|createDestTable
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
literal|"test_part_exch_table_dest"
argument_list|,
name|getYearMonthAndDayPartCols
argument_list|()
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|private
name|Table
name|createTable
parameter_list|(
name|String
name|dbName
parameter_list|,
name|String
name|tableName
parameter_list|,
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|partCols
parameter_list|,
name|String
name|location
parameter_list|)
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"test_id"
argument_list|,
name|INT_COL_TYPE
argument_list|,
literal|"test col id"
argument_list|)
argument_list|)
expr_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"test_value"
argument_list|,
literal|"string"
argument_list|,
literal|"test col value"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|createTable
argument_list|(
name|dbName
argument_list|,
name|tableName
argument_list|,
name|partCols
argument_list|,
name|cols
argument_list|,
name|location
argument_list|)
return|;
block|}
specifier|private
name|Table
name|createTable
parameter_list|(
name|String
name|dbName
parameter_list|,
name|String
name|tableName
parameter_list|,
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|partCols
parameter_list|,
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
parameter_list|,
name|String
name|location
parameter_list|)
throws|throws
name|Exception
block|{
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tableName
argument_list|)
operator|.
name|setCols
argument_list|(
name|cols
argument_list|)
operator|.
name|setPartCols
argument_list|(
name|partCols
argument_list|)
operator|.
name|setLocation
argument_list|(
name|location
argument_list|)
operator|.
name|create
argument_list|(
name|client
argument_list|,
name|metaStore
operator|.
name|getConf
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|client
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tableName
argument_list|)
return|;
block|}
specifier|private
name|Partition
index|[]
name|createTestPartitions
parameter_list|()
throws|throws
name|Exception
block|{
name|Partition
name|partition1
init|=
name|buildPartition
argument_list|(
name|sourceTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|"march"
argument_list|,
literal|"15"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Partition
name|partition2
init|=
name|buildPartition
argument_list|(
name|sourceTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|"march"
argument_list|,
literal|"22"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Partition
name|partition3
init|=
name|buildPartition
argument_list|(
name|sourceTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|"april"
argument_list|,
literal|"23"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Partition
name|partition4
init|=
name|buildPartition
argument_list|(
name|sourceTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|"may"
argument_list|,
literal|"23"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|Partition
name|partition5
init|=
name|buildPartition
argument_list|(
name|sourceTable
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2018"
argument_list|,
literal|"april"
argument_list|,
literal|"23"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|client
operator|.
name|add_partitions
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
name|partition1
argument_list|,
name|partition2
argument_list|,
name|partition3
argument_list|,
name|partition4
argument_list|,
name|partition5
argument_list|)
argument_list|)
expr_stmt|;
name|Partition
index|[]
name|parts
init|=
operator|new
name|Partition
index|[
literal|5
index|]
decl_stmt|;
name|parts
index|[
literal|0
index|]
operator|=
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|partition1
operator|.
name|getValues
argument_list|()
argument_list|)
expr_stmt|;
name|parts
index|[
literal|1
index|]
operator|=
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|partition2
operator|.
name|getValues
argument_list|()
argument_list|)
expr_stmt|;
name|parts
index|[
literal|2
index|]
operator|=
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|partition3
operator|.
name|getValues
argument_list|()
argument_list|)
expr_stmt|;
name|parts
index|[
literal|3
index|]
operator|=
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|partition4
operator|.
name|getValues
argument_list|()
argument_list|)
expr_stmt|;
name|parts
index|[
literal|4
index|]
operator|=
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|partition5
operator|.
name|getValues
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|parts
return|;
block|}
specifier|private
name|Partition
name|createPartition
parameter_list|(
name|Table
name|table
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|values
parameter_list|,
name|String
name|location
parameter_list|)
throws|throws
name|Exception
block|{
name|Partition
name|partition
init|=
name|buildPartition
argument_list|(
name|table
argument_list|,
name|values
argument_list|,
name|location
argument_list|)
decl_stmt|;
name|client
operator|.
name|add_partition
argument_list|(
name|partition
argument_list|)
expr_stmt|;
return|return
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
name|table
operator|.
name|getTableName
argument_list|()
argument_list|,
name|partition
operator|.
name|getValues
argument_list|()
argument_list|)
return|;
block|}
specifier|private
name|Partition
name|buildPartition
parameter_list|(
name|Table
name|table
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|values
parameter_list|,
name|String
name|location
parameter_list|)
throws|throws
name|MetaException
block|{
name|Partition
name|partition
init|=
operator|new
name|PartitionBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|table
operator|.
name|getDbName
argument_list|()
argument_list|)
operator|.
name|setTableName
argument_list|(
name|table
operator|.
name|getTableName
argument_list|()
argument_list|)
operator|.
name|setValues
argument_list|(
name|values
argument_list|)
operator|.
name|addPartParam
argument_list|(
literal|"test_exch_param_key"
argument_list|,
literal|"test_exch_param_value"
argument_list|)
operator|.
name|setInputFormat
argument_list|(
literal|"TestInputFormat"
argument_list|)
operator|.
name|setOutputFormat
argument_list|(
literal|"TestOutputFormat"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"test_exch_sd_param_key"
argument_list|,
literal|"test_exch_sd_param_value"
argument_list|)
operator|.
name|setCols
argument_list|(
name|getYearMonthAndDayPartCols
argument_list|()
argument_list|)
operator|.
name|setLocation
argument_list|(
name|location
argument_list|)
operator|.
name|build
argument_list|(
name|metaStore
operator|.
name|getConf
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|partition
return|;
block|}
specifier|private
name|void
name|checkExchangedPartitions
parameter_list|(
name|Table
name|sourceTable
parameter_list|,
name|Table
name|destTable
parameter_list|,
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
parameter_list|)
throws|throws
name|Exception
block|{
for|for
control|(
name|Partition
name|partition
range|:
name|partitions
control|)
block|{
comment|// Check if the partitions exist in the destTable
name|Partition
name|resultPart
init|=
name|client
operator|.
name|getPartition
argument_list|(
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|partition
operator|.
name|getValues
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|resultPart
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|resultPart
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|resultPart
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check the location of the result partition. It should be located in the destination table
comment|// folder.
name|String
name|partName
init|=
name|Warehouse
operator|.
name|makePartName
argument_list|(
name|sourceTable
operator|.
name|getPartitionKeys
argument_list|()
argument_list|,
name|partition
operator|.
name|getValues
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|destTable
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|+
literal|"/"
operator|+
name|partName
argument_list|,
name|resultPart
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|metaStore
operator|.
name|isPathExists
argument_list|(
operator|new
name|Path
argument_list|(
name|resultPart
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Check if the partitions don't exist in the sourceTable
try|try
block|{
name|client
operator|.
name|getPartition
argument_list|(
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|partition
operator|.
name|getValues
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"The partition ' "
operator|+
name|partition
operator|.
name|getValues
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
literal|" ' should not exists, therefore NoSuchObjectException should have been thrown."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchObjectException
name|e
parameter_list|)
block|{
comment|// Expected exception
block|}
name|Assert
operator|.
name|assertFalse
argument_list|(
name|metaStore
operator|.
name|isPathExists
argument_list|(
operator|new
name|Path
argument_list|(
name|partition
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Reset the location, db and table name and compare the partitions
name|partition
operator|.
name|getSd
argument_list|()
operator|.
name|setLocation
argument_list|(
name|resultPart
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
name|partition
operator|.
name|setDbName
argument_list|(
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|partition
operator|.
name|setTableName
argument_list|(
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|partition
argument_list|,
name|resultPart
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|checkRemainingPartitions
parameter_list|(
name|Table
name|sourceTable
parameter_list|,
name|Table
name|destTable
parameter_list|,
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
parameter_list|)
throws|throws
name|Exception
block|{
for|for
control|(
name|Partition
name|partition
range|:
name|partitions
control|)
block|{
comment|// Check if the partitions exist in the sourceTable
name|Partition
name|resultPart
init|=
name|client
operator|.
name|getPartition
argument_list|(
name|sourceTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|sourceTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|partition
operator|.
name|getValues
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|resultPart
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|partition
argument_list|,
name|resultPart
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|metaStore
operator|.
name|isPathExists
argument_list|(
operator|new
name|Path
argument_list|(
name|partition
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// Check if the partitions don't exist in the destTable
try|try
block|{
name|client
operator|.
name|getPartition
argument_list|(
name|destTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|destTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|partition
operator|.
name|getValues
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"The partition '"
operator|+
name|partition
operator|.
name|getValues
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
literal|"'should not exists, therefore NoSuchObjectException should have been thrown."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchObjectException
name|e
parameter_list|)
block|{
comment|// Expected exception
block|}
name|String
name|partName
init|=
name|Warehouse
operator|.
name|makePartName
argument_list|(
name|sourceTable
operator|.
name|getPartitionKeys
argument_list|()
argument_list|,
name|partition
operator|.
name|getValues
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|metaStore
operator|.
name|isPathExists
argument_list|(
operator|new
name|Path
argument_list|(
name|destTable
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
operator|+
literal|"/"
operator|+
name|partName
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getPartitionSpec
parameter_list|(
name|Partition
name|partition
parameter_list|)
block|{
return|return
name|getPartitionSpec
argument_list|(
name|partition
operator|.
name|getValues
argument_list|()
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getPartitionSpec
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|partitionSpecs
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|partCols
init|=
name|getYearMonthAndDayPartCols
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|partCols
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|FieldSchema
name|partCol
init|=
name|partCols
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|String
name|value
init|=
name|values
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|partitionSpecs
operator|.
name|put
argument_list|(
name|partCol
operator|.
name|getName
argument_list|()
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|partitionSpecs
return|;
block|}
specifier|private
specifier|static
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|getYearMonthAndDayPartCols
parameter_list|()
block|{
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
name|YEAR_COL_NAME
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"year part col"
argument_list|)
argument_list|)
expr_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
name|MONTH_COL_NAME
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"month part col"
argument_list|)
argument_list|)
expr_stmt|;
name|cols
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
name|DAY_COL_NAME
argument_list|,
name|STRING_COL_TYPE
argument_list|,
literal|"day part col"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|cols
return|;
block|}
block|}
end_class

end_unit

