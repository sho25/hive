begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configurable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|MetaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|AddForeignKeyEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|AddNotNullConstraintEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|AddPrimaryKeyEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|AddSchemaVersionEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|AddUniqueConstraintEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|AlterCatalogEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|AlterDatabaseEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|AlterISchemaEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|AddPartitionEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|AlterPartitionEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|AlterSchemaVersionEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|AlterTableEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|ConfigChangeEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|CreateCatalogEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|CreateDatabaseEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|CreateFunctionEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|CreateISchemaEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|CreateTableEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|DropCatalogEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|DropConstraintEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|DropDatabaseEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|DropFunctionEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|DropISchemaEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|DropPartitionEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|DropSchemaVersionEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|DropTableEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|InsertEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|LoadPartitionDoneEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|OpenTxnEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|CommitTxnEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|AbortTxnEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|AllocWriteIdEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|tools
operator|.
name|SQLGenerator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Connection
import|;
end_import

begin_comment
comment|/**  * This abstract class needs to be extended to  provide implementation of actions that needs  * to be performed when a particular event occurs on a metastore. These methods  * are called whenever an event occurs on metastore. Status of the event whether  * it was successful or not is contained in container event object.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Stable
specifier|public
specifier|abstract
class|class
name|MetaStoreEventListener
implements|implements
name|Configurable
block|{
specifier|private
name|Configuration
name|conf
decl_stmt|;
specifier|public
name|MetaStoreEventListener
parameter_list|(
name|Configuration
name|config
parameter_list|)
block|{
name|this
operator|.
name|conf
operator|=
name|config
expr_stmt|;
block|}
comment|/**    * @param tableEvent table event.    * @throws MetaException    */
specifier|public
name|void
name|onConfigChange
parameter_list|(
name|ConfigChangeEvent
name|tableEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
comment|/**    * @param tableEvent table event.    * @throws MetaException    */
specifier|public
name|void
name|onCreateTable
parameter_list|(
name|CreateTableEvent
name|tableEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
comment|/**    * @param tableEvent table event.    * @throws MetaException    */
specifier|public
name|void
name|onDropTable
parameter_list|(
name|DropTableEvent
name|tableEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
comment|/**    * @param tableEvent alter table event    * @throws MetaException    */
specifier|public
name|void
name|onAlterTable
parameter_list|(
name|AlterTableEvent
name|tableEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
comment|/**    * @param partitionEvent add partition event    * @throws MetaException    */
specifier|public
name|void
name|onAddPartition
parameter_list|(
name|AddPartitionEvent
name|partitionEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
comment|/**    * @param partitionEvent partition event    * @throws MetaException    */
specifier|public
name|void
name|onDropPartition
parameter_list|(
name|DropPartitionEvent
name|partitionEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
comment|/**    * @param partitionEvent partition event    * @throws MetaException    */
specifier|public
name|void
name|onAlterPartition
parameter_list|(
name|AlterPartitionEvent
name|partitionEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
comment|/**    * @param dbEvent database event    * @throws MetaException    */
specifier|public
name|void
name|onCreateDatabase
parameter_list|(
name|CreateDatabaseEvent
name|dbEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
comment|/**    * @param dbEvent database event    * @throws MetaException    */
specifier|public
name|void
name|onDropDatabase
parameter_list|(
name|DropDatabaseEvent
name|dbEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
comment|/**    * @param dbEvent alter database event    * @throws MetaException    */
specifier|public
name|void
name|onAlterDatabase
parameter_list|(
name|AlterDatabaseEvent
name|dbEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
comment|/**    * @param partSetDoneEvent    * @throws MetaException    */
specifier|public
name|void
name|onLoadPartitionDone
parameter_list|(
name|LoadPartitionDoneEvent
name|partSetDoneEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
comment|/**    * @param fnEvent function event    * @throws MetaException    */
specifier|public
name|void
name|onCreateFunction
parameter_list|(
name|CreateFunctionEvent
name|fnEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
comment|/**    * @param fnEvent function event    * @throws MetaException    */
specifier|public
name|void
name|onDropFunction
parameter_list|(
name|DropFunctionEvent
name|fnEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
comment|/**    * This will be called when an insert is executed that does not cause a partition to be added.    * If an insert causes a partition to be added it will cause {@link #onAddPartition} to be    * called instead.    * @param insertEvent    * @throws MetaException    */
specifier|public
name|void
name|onInsert
parameter_list|(
name|InsertEvent
name|insertEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
comment|/**    * @param addPrimaryKeyEvent add primary key event    * @throws MetaException    */
specifier|public
name|void
name|onAddPrimaryKey
parameter_list|(
name|AddPrimaryKeyEvent
name|addPrimaryKeyEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
comment|/**    * @param addForeignKeyEvent add foreign key event    * @throws MetaException    */
specifier|public
name|void
name|onAddForeignKey
parameter_list|(
name|AddForeignKeyEvent
name|addForeignKeyEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
comment|/**    * @param addUniqueConstraintEvent add unique constraint event    * @throws MetaException    */
specifier|public
name|void
name|onAddUniqueConstraint
parameter_list|(
name|AddUniqueConstraintEvent
name|addUniqueConstraintEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
comment|/**    * @param addNotNullConstraintEvent add not null constraint event    * @throws MetaException    */
specifier|public
name|void
name|onAddNotNullConstraint
parameter_list|(
name|AddNotNullConstraintEvent
name|addNotNullConstraintEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
comment|/**    * @param dropConstraintEvent drop constraint event    * @throws MetaException    */
specifier|public
name|void
name|onDropConstraint
parameter_list|(
name|DropConstraintEvent
name|dropConstraintEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
specifier|public
name|void
name|onCreateISchema
parameter_list|(
name|CreateISchemaEvent
name|createISchemaEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
specifier|public
name|void
name|onAlterISchema
parameter_list|(
name|AlterISchemaEvent
name|alterISchemaEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
specifier|public
name|void
name|onDropISchema
parameter_list|(
name|DropISchemaEvent
name|dropISchemaEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
specifier|public
name|void
name|onAddSchemaVersion
parameter_list|(
name|AddSchemaVersionEvent
name|addSchemaVersionEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
specifier|public
name|void
name|onAlterSchemaVersion
parameter_list|(
name|AlterSchemaVersionEvent
name|alterSchemaVersionEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
specifier|public
name|void
name|onDropSchemaVersion
parameter_list|(
name|DropSchemaVersionEvent
name|dropSchemaVersionEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
specifier|public
name|void
name|onCreateCatalog
parameter_list|(
name|CreateCatalogEvent
name|createCatalogEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
specifier|public
name|void
name|onAlterCatalog
parameter_list|(
name|AlterCatalogEvent
name|alterCatalogEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
specifier|public
name|void
name|onDropCatalog
parameter_list|(
name|DropCatalogEvent
name|dropCatalogEvent
parameter_list|)
throws|throws
name|MetaException
block|{   }
comment|/**    * This will be called when a new transaction is started.    * @param openTxnEvent event to be processed    * @param dbConn jdbc connection to remote meta store db.    * @param sqlGenerator helper class to generate db specific sql string.    * @throws MetaException    */
specifier|public
name|void
name|onOpenTxn
parameter_list|(
name|OpenTxnEvent
name|openTxnEvent
parameter_list|,
name|Connection
name|dbConn
parameter_list|,
name|SQLGenerator
name|sqlGenerator
parameter_list|)
throws|throws
name|MetaException
block|{   }
comment|/**    * This will be called to commit a transaction.    * @param commitTxnEvent event to be processed    * @param dbConn jdbc connection to remote meta store db.    * @param sqlGenerator helper class to generate db specific sql string.    * @throws MetaException    */
specifier|public
name|void
name|onCommitTxn
parameter_list|(
name|CommitTxnEvent
name|commitTxnEvent
parameter_list|,
name|Connection
name|dbConn
parameter_list|,
name|SQLGenerator
name|sqlGenerator
parameter_list|)
throws|throws
name|MetaException
block|{   }
comment|/**    * This will be called to abort a transaction.    * @param abortTxnEvent event to be processed    * @param dbConn jdbc connection to remote meta store db.    * @param sqlGenerator helper class to generate db specific sql string.    * @throws MetaException    */
specifier|public
name|void
name|onAbortTxn
parameter_list|(
name|AbortTxnEvent
name|abortTxnEvent
parameter_list|,
name|Connection
name|dbConn
parameter_list|,
name|SQLGenerator
name|sqlGenerator
parameter_list|)
throws|throws
name|MetaException
block|{   }
comment|/**    * This will be called to alloc a new write id.    * @param allocWriteIdEvent event to be processed    * @param dbConn jdbc connection to remote meta store db.    * @param sqlGenerator helper class to generate db specific sql string.    * @throws MetaException    */
specifier|public
name|void
name|onAllocWriteId
parameter_list|(
name|AllocWriteIdEvent
name|allocWriteIdEvent
parameter_list|,
name|Connection
name|dbConn
parameter_list|,
name|SQLGenerator
name|sqlGenerator
parameter_list|)
throws|throws
name|MetaException
block|{   }
annotation|@
name|Override
specifier|public
name|Configuration
name|getConf
parameter_list|()
block|{
return|return
name|this
operator|.
name|conf
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setConf
parameter_list|(
name|Configuration
name|config
parameter_list|)
block|{
name|this
operator|.
name|conf
operator|=
name|config
expr_stmt|;
block|}
block|}
end_class

end_unit

