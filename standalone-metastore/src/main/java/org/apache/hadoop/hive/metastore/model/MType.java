begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_comment
comment|/**  *   */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Represents a Hive type  *  */
end_comment

begin_class
specifier|public
class|class
name|MType
block|{
specifier|private
name|String
name|name
decl_stmt|;
specifier|private
name|String
name|type1
decl_stmt|;
specifier|private
name|String
name|type2
decl_stmt|;
specifier|private
name|List
argument_list|<
name|MFieldSchema
argument_list|>
name|fields
decl_stmt|;
comment|/**    * @param name    * @param type1    * @param type2    * @param fields    */
specifier|public
name|MType
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|type1
parameter_list|,
name|String
name|type2
parameter_list|,
name|List
argument_list|<
name|MFieldSchema
argument_list|>
name|fields
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|type1
operator|=
name|type1
expr_stmt|;
name|this
operator|.
name|type2
operator|=
name|type2
expr_stmt|;
name|this
operator|.
name|fields
operator|=
name|fields
expr_stmt|;
block|}
specifier|public
name|MType
parameter_list|()
block|{}
comment|/**    * @return the name    */
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
comment|/**    * @param name the name to set    */
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
comment|/**    * @return the type1    */
specifier|public
name|String
name|getType1
parameter_list|()
block|{
return|return
name|type1
return|;
block|}
comment|/**    * @param type1 the type1 to set    */
specifier|public
name|void
name|setType1
parameter_list|(
name|String
name|type1
parameter_list|)
block|{
name|this
operator|.
name|type1
operator|=
name|type1
expr_stmt|;
block|}
comment|/**    * @return the type2    */
specifier|public
name|String
name|getType2
parameter_list|()
block|{
return|return
name|type2
return|;
block|}
comment|/**    * @param type2 the type2 to set    */
specifier|public
name|void
name|setType2
parameter_list|(
name|String
name|type2
parameter_list|)
block|{
name|this
operator|.
name|type2
operator|=
name|type2
expr_stmt|;
block|}
comment|/**    * @return the fields    */
specifier|public
name|List
argument_list|<
name|MFieldSchema
argument_list|>
name|getFields
parameter_list|()
block|{
return|return
name|fields
return|;
block|}
comment|/**    * @param fields the fields to set    */
specifier|public
name|void
name|setFields
parameter_list|(
name|List
argument_list|<
name|MFieldSchema
argument_list|>
name|fields
parameter_list|)
block|{
name|this
operator|.
name|fields
operator|=
name|fields
expr_stmt|;
block|}
block|}
end_class

end_unit

