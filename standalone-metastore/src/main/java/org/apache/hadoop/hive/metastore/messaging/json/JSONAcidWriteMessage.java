begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|messaging
operator|.
name|json
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Partition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|AcidWriteEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|messaging
operator|.
name|AcidWriteMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|TException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|annotate
operator|.
name|JsonProperty
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * JSON implementation of AcidWriteMessage  */
end_comment

begin_class
specifier|public
class|class
name|JSONAcidWriteMessage
extends|extends
name|AcidWriteMessage
block|{
annotation|@
name|JsonProperty
specifier|private
name|Long
name|txnid
decl_stmt|,
name|writeId
decl_stmt|,
name|timestamp
decl_stmt|;
annotation|@
name|JsonProperty
specifier|private
name|String
name|server
decl_stmt|,
name|servicePrincipal
decl_stmt|,
name|database
decl_stmt|,
name|table
decl_stmt|,
name|partition
decl_stmt|,
name|tableObjJson
decl_stmt|,
name|partitionObjJson
decl_stmt|;
annotation|@
name|JsonProperty
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|files
decl_stmt|;
comment|/**    * Default constructor, needed for Jackson.    */
specifier|public
name|JSONAcidWriteMessage
parameter_list|()
block|{   }
specifier|public
name|JSONAcidWriteMessage
parameter_list|(
name|String
name|server
parameter_list|,
name|String
name|servicePrincipal
parameter_list|,
name|Long
name|timestamp
parameter_list|,
name|AcidWriteEvent
name|acidWriteEvent
parameter_list|,
name|Iterator
argument_list|<
name|String
argument_list|>
name|files
parameter_list|)
block|{
name|this
operator|.
name|timestamp
operator|=
name|timestamp
expr_stmt|;
name|this
operator|.
name|txnid
operator|=
name|acidWriteEvent
operator|.
name|getTxnId
argument_list|()
expr_stmt|;
name|this
operator|.
name|server
operator|=
name|server
expr_stmt|;
name|this
operator|.
name|servicePrincipal
operator|=
name|servicePrincipal
expr_stmt|;
name|this
operator|.
name|database
operator|=
name|acidWriteEvent
operator|.
name|getDatabase
argument_list|()
expr_stmt|;
name|this
operator|.
name|table
operator|=
name|acidWriteEvent
operator|.
name|getTable
argument_list|()
expr_stmt|;
name|this
operator|.
name|writeId
operator|=
name|acidWriteEvent
operator|.
name|getWriteId
argument_list|()
expr_stmt|;
name|this
operator|.
name|partition
operator|=
name|acidWriteEvent
operator|.
name|getPartition
argument_list|()
expr_stmt|;
try|try
block|{
name|this
operator|.
name|tableObjJson
operator|=
name|JSONMessageFactory
operator|.
name|createTableObjJson
argument_list|(
name|acidWriteEvent
operator|.
name|getTableObj
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|acidWriteEvent
operator|.
name|getPartitionObj
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|partitionObjJson
operator|=
name|JSONMessageFactory
operator|.
name|createPartitionObjJson
argument_list|(
name|acidWriteEvent
operator|.
name|getPartitionObj
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|partitionObjJson
operator|=
literal|null
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Could not serialize JSONAcidWriteMessage : "
argument_list|,
name|e
argument_list|)
throw|;
block|}
name|this
operator|.
name|files
operator|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|files
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Long
name|getTxnId
parameter_list|()
block|{
return|return
name|txnid
return|;
block|}
annotation|@
name|Override
specifier|public
name|Long
name|getTimestamp
parameter_list|()
block|{
return|return
name|timestamp
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getDB
parameter_list|()
block|{
return|return
name|database
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getServicePrincipal
parameter_list|()
block|{
return|return
name|servicePrincipal
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getServer
parameter_list|()
block|{
return|return
name|server
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getTable
parameter_list|()
block|{
return|return
name|table
return|;
block|}
annotation|@
name|Override
specifier|public
name|Long
name|getWriteId
parameter_list|()
block|{
return|return
name|writeId
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getPartition
parameter_list|()
block|{
return|return
name|partition
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getFiles
parameter_list|()
block|{
return|return
name|files
return|;
block|}
annotation|@
name|Override
specifier|public
name|Table
name|getTableObj
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|(
name|tableObjJson
operator|==
literal|null
operator|)
condition|?
literal|null
else|:
operator|(
name|Table
operator|)
name|JSONMessageFactory
operator|.
name|getTObj
argument_list|(
name|tableObjJson
argument_list|,
name|Table
operator|.
name|class
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Partition
name|getPartitionObj
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|(
operator|(
name|partitionObjJson
operator|==
literal|null
operator|)
condition|?
literal|null
else|:
operator|(
name|Partition
operator|)
name|JSONMessageFactory
operator|.
name|getTObj
argument_list|(
name|partitionObjJson
argument_list|,
name|Partition
operator|.
name|class
argument_list|)
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getTableObjStr
parameter_list|()
block|{
return|return
name|tableObjJson
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getPartitionObjStr
parameter_list|()
block|{
return|return
name|partitionObjJson
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
try|try
block|{
return|return
name|JSONMessageDeserializer
operator|.
name|mapper
operator|.
name|writeValueAsString
argument_list|(
name|this
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|exception
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Could not serialize: "
argument_list|,
name|exception
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

