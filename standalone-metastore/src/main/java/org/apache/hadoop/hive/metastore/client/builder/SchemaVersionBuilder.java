begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
operator|.
name|builder
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|ISchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|ISchemaName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|MetaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|SchemaVersion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|SchemaVersionState
import|;
end_import

begin_class
specifier|public
class|class
name|SchemaVersionBuilder
extends|extends
name|SerdeAndColsBuilder
argument_list|<
name|SchemaVersionBuilder
argument_list|>
block|{
specifier|private
name|String
name|schemaName
decl_stmt|,
name|dbName
decl_stmt|;
comment|// required
specifier|private
name|int
name|version
decl_stmt|;
comment|// required
specifier|private
name|long
name|createdAt
decl_stmt|;
comment|// required
specifier|private
name|SchemaVersionState
name|state
decl_stmt|;
comment|// optional
specifier|private
name|String
name|description
decl_stmt|;
comment|// optional
specifier|private
name|String
name|schemaText
decl_stmt|;
comment|// optional
specifier|private
name|String
name|fingerprint
decl_stmt|;
comment|// optional
specifier|private
name|String
name|name
decl_stmt|;
comment|// optional
specifier|public
name|SchemaVersionBuilder
parameter_list|()
block|{
name|createdAt
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|/
literal|1000
expr_stmt|;
name|version
operator|=
operator|-
literal|1
expr_stmt|;
name|super
operator|.
name|setChild
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
specifier|public
name|SchemaVersionBuilder
name|setSchemaName
parameter_list|(
name|String
name|schemaName
parameter_list|)
block|{
name|this
operator|.
name|schemaName
operator|=
name|schemaName
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|SchemaVersionBuilder
name|setDbName
parameter_list|(
name|String
name|dbName
parameter_list|)
block|{
name|this
operator|.
name|dbName
operator|=
name|dbName
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|SchemaVersionBuilder
name|versionOf
parameter_list|(
name|ISchema
name|schema
parameter_list|)
block|{
name|this
operator|.
name|dbName
operator|=
name|schema
operator|.
name|getDbName
argument_list|()
expr_stmt|;
name|this
operator|.
name|schemaName
operator|=
name|schema
operator|.
name|getName
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|SchemaVersionBuilder
name|setVersion
parameter_list|(
name|int
name|version
parameter_list|)
block|{
name|this
operator|.
name|version
operator|=
name|version
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|SchemaVersionBuilder
name|setCreatedAt
parameter_list|(
name|long
name|createdAt
parameter_list|)
block|{
name|this
operator|.
name|createdAt
operator|=
name|createdAt
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|SchemaVersionBuilder
name|setState
parameter_list|(
name|SchemaVersionState
name|state
parameter_list|)
block|{
name|this
operator|.
name|state
operator|=
name|state
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|SchemaVersionBuilder
name|setDescription
parameter_list|(
name|String
name|description
parameter_list|)
block|{
name|this
operator|.
name|description
operator|=
name|description
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|SchemaVersionBuilder
name|setSchemaText
parameter_list|(
name|String
name|schemaText
parameter_list|)
block|{
name|this
operator|.
name|schemaText
operator|=
name|schemaText
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|SchemaVersionBuilder
name|setFingerprint
parameter_list|(
name|String
name|fingerprint
parameter_list|)
block|{
name|this
operator|.
name|fingerprint
operator|=
name|fingerprint
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|SchemaVersionBuilder
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|SchemaVersion
name|build
parameter_list|()
throws|throws
name|MetaException
block|{
if|if
condition|(
name|schemaName
operator|==
literal|null
operator|||
name|dbName
operator|==
literal|null
operator|||
name|version
operator|<
literal|0
condition|)
block|{
throw|throw
operator|new
name|MetaException
argument_list|(
literal|"You must provide the database name, schema name, and schema version"
argument_list|)
throw|;
block|}
name|SchemaVersion
name|schemaVersion
init|=
operator|new
name|SchemaVersion
argument_list|(
operator|new
name|ISchemaName
argument_list|(
name|dbName
argument_list|,
name|schemaName
argument_list|)
argument_list|,
name|version
argument_list|,
name|createdAt
argument_list|,
name|getCols
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|state
operator|!=
literal|null
condition|)
name|schemaVersion
operator|.
name|setState
argument_list|(
name|state
argument_list|)
expr_stmt|;
if|if
condition|(
name|description
operator|!=
literal|null
condition|)
name|schemaVersion
operator|.
name|setDescription
argument_list|(
name|description
argument_list|)
expr_stmt|;
if|if
condition|(
name|schemaText
operator|!=
literal|null
condition|)
name|schemaVersion
operator|.
name|setSchemaText
argument_list|(
name|schemaText
argument_list|)
expr_stmt|;
if|if
condition|(
name|fingerprint
operator|!=
literal|null
condition|)
name|schemaVersion
operator|.
name|setFingerprint
argument_list|(
name|fingerprint
argument_list|)
expr_stmt|;
if|if
condition|(
name|name
operator|!=
literal|null
condition|)
name|schemaVersion
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|schemaVersion
operator|.
name|setSerDe
argument_list|(
name|buildSerde
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|schemaVersion
return|;
block|}
block|}
end_class

end_unit

