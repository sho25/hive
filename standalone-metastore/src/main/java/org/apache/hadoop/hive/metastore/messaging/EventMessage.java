begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|messaging
package|;
end_package

begin_comment
comment|/**  * Class representing messages emitted when Metastore operations are done.  * (E.g. Creation and deletion of databases, tables and partitions.)  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|EventMessage
block|{
comment|/**    * Enumeration of all supported types of Metastore operations.    */
specifier|public
enum|enum
name|EventType
block|{
name|CREATE_DATABASE
parameter_list|(
name|MessageFactory
operator|.
name|CREATE_DATABASE_EVENT
parameter_list|)
operator|,
constructor|DROP_DATABASE(MessageFactory.DROP_DATABASE_EVENT
block|)
enum|,
name|CREATE_TABLE
parameter_list|(
name|MessageFactory
operator|.
name|CREATE_TABLE_EVENT
parameter_list|)
operator|,
constructor|DROP_TABLE(MessageFactory.DROP_TABLE_EVENT
block|)
operator|,
name|ADD_PARTITION
argument_list|(
name|MessageFactory
operator|.
name|ADD_PARTITION_EVENT
argument_list|)
operator|,
name|DROP_PARTITION
argument_list|(
name|MessageFactory
operator|.
name|DROP_PARTITION_EVENT
argument_list|)
operator|,
name|ALTER_DATABASE
argument_list|(
name|MessageFactory
operator|.
name|ALTER_DATABASE_EVENT
argument_list|)
operator|,
name|ALTER_TABLE
argument_list|(
name|MessageFactory
operator|.
name|ALTER_TABLE_EVENT
argument_list|)
operator|,
name|ALTER_PARTITION
argument_list|(
name|MessageFactory
operator|.
name|ALTER_PARTITION_EVENT
argument_list|)
operator|,
name|INSERT
argument_list|(
name|MessageFactory
operator|.
name|INSERT_EVENT
argument_list|)
operator|,
name|CREATE_FUNCTION
argument_list|(
name|MessageFactory
operator|.
name|CREATE_FUNCTION_EVENT
argument_list|)
operator|,
name|DROP_FUNCTION
argument_list|(
name|MessageFactory
operator|.
name|DROP_FUNCTION_EVENT
argument_list|)
operator|,
name|ADD_PRIMARYKEY
argument_list|(
name|MessageFactory
operator|.
name|ADD_PRIMARYKEY_EVENT
argument_list|)
operator|,
name|ADD_FOREIGNKEY
argument_list|(
name|MessageFactory
operator|.
name|ADD_FOREIGNKEY_EVENT
argument_list|)
operator|,
name|ADD_UNIQUECONSTRAINT
argument_list|(
name|MessageFactory
operator|.
name|ADD_UNIQUECONSTRAINT_EVENT
argument_list|)
operator|,
name|ADD_NOTNULLCONSTRAINT
argument_list|(
name|MessageFactory
operator|.
name|ADD_NOTNULLCONSTRAINT_EVENT
argument_list|)
operator|,
name|DROP_CONSTRAINT
argument_list|(
name|MessageFactory
operator|.
name|DROP_CONSTRAINT_EVENT
argument_list|)
operator|,
name|CREATE_ISCHEMA
argument_list|(
name|MessageFactory
operator|.
name|CREATE_ISCHEMA_EVENT
argument_list|)
operator|,
name|ALTER_ISCHEMA
argument_list|(
name|MessageFactory
operator|.
name|ALTER_ISCHEMA_EVENT
argument_list|)
operator|,
name|DROP_ISCHEMA
argument_list|(
name|MessageFactory
operator|.
name|DROP_ISCHEMA_EVENT
argument_list|)
operator|,
name|ADD_SCHEMA_VERSION
argument_list|(
name|MessageFactory
operator|.
name|ADD_SCHEMA_VERSION_EVENT
argument_list|)
operator|,
name|ALTER_SCHEMA_VERSION
argument_list|(
name|MessageFactory
operator|.
name|ALTER_SCHEMA_VERSION_EVENT
argument_list|)
operator|,
name|DROP_SCHEMA_VERSION
argument_list|(
name|MessageFactory
operator|.
name|DROP_SCHEMA_VERSION_EVENT
argument_list|)
operator|,
name|CREATE_CATALOG
argument_list|(
name|MessageFactory
operator|.
name|CREATE_CATALOG_EVENT
argument_list|)
operator|,
name|DROP_CATALOG
argument_list|(
name|MessageFactory
operator|.
name|DROP_CATALOG_EVENT
argument_list|)
expr_stmt|;
end_class

begin_decl_stmt
specifier|private
name|String
name|typeString
decl_stmt|;
end_decl_stmt

begin_expr_stmt
name|EventType
argument_list|(
name|String
name|typeString
argument_list|)
block|{
name|this
operator|.
name|typeString
operator|=
name|typeString
block|;     }
expr|@
name|Override
specifier|public
name|String
name|toString
argument_list|()
block|{
return|return
name|typeString
return|;
block|}
end_expr_stmt

begin_decl_stmt
unit|}    protected
name|EventType
name|eventType
decl_stmt|;
end_decl_stmt

begin_constructor
specifier|protected
name|EventMessage
parameter_list|(
name|EventType
name|eventType
parameter_list|)
block|{
name|this
operator|.
name|eventType
operator|=
name|eventType
expr_stmt|;
block|}
end_constructor

begin_function
specifier|public
name|EventType
name|getEventType
parameter_list|()
block|{
return|return
name|eventType
return|;
block|}
end_function

begin_comment
comment|/**    * Getter for HCatalog Server's URL.    * (This is where the event originates from.)    * @return HCatalog Server's URL (String).    */
end_comment

begin_function_decl
specifier|public
specifier|abstract
name|String
name|getServer
parameter_list|()
function_decl|;
end_function_decl

begin_comment
comment|/**    * Getter for the Kerberos principal of the HCatalog service.    * @return HCatalog Service Principal (String).    */
end_comment

begin_function_decl
specifier|public
specifier|abstract
name|String
name|getServicePrincipal
parameter_list|()
function_decl|;
end_function_decl

begin_comment
comment|/**    * Getter for the name of the Database on which the Metastore operation is done.    * @return Database-name (String).    */
end_comment

begin_function_decl
specifier|public
specifier|abstract
name|String
name|getDB
parameter_list|()
function_decl|;
end_function_decl

begin_comment
comment|/**    * Getter for the timestamp associated with the operation.    * @return Timestamp (Long - seconds since epoch).    */
end_comment

begin_function_decl
specifier|public
specifier|abstract
name|Long
name|getTimestamp
parameter_list|()
function_decl|;
end_function_decl

begin_comment
comment|/**    * Class invariant. Checked after construction or deserialization.    */
end_comment

begin_function
specifier|public
name|EventMessage
name|checkValid
parameter_list|()
block|{
if|if
condition|(
name|getServer
argument_list|()
operator|==
literal|null
operator|||
name|getServicePrincipal
argument_list|()
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Server-URL/Service-Principal shouldn't be null."
argument_list|)
throw|;
block|}
if|if
condition|(
name|getEventType
argument_list|()
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Event-type unset."
argument_list|)
throw|;
block|}
if|if
condition|(
name|getDB
argument_list|()
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"DB-name unset."
argument_list|)
throw|;
block|}
return|return
name|this
return|;
block|}
end_function

unit|}
end_unit

