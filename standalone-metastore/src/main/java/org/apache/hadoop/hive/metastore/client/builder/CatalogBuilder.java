begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
operator|.
name|builder
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|IMetaStoreClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Catalog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|MetaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|TException
import|;
end_import

begin_class
specifier|public
class|class
name|CatalogBuilder
block|{
specifier|private
name|String
name|name
decl_stmt|,
name|description
decl_stmt|,
name|location
decl_stmt|;
specifier|public
name|CatalogBuilder
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|CatalogBuilder
name|setDescription
parameter_list|(
name|String
name|description
parameter_list|)
block|{
name|this
operator|.
name|description
operator|=
name|description
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|CatalogBuilder
name|setLocation
parameter_list|(
name|String
name|location
parameter_list|)
block|{
name|this
operator|.
name|location
operator|=
name|location
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Catalog
name|build
parameter_list|()
throws|throws
name|MetaException
block|{
if|if
condition|(
name|name
operator|==
literal|null
condition|)
throw|throw
operator|new
name|MetaException
argument_list|(
literal|"You must name the catalog"
argument_list|)
throw|;
if|if
condition|(
name|location
operator|==
literal|null
condition|)
throw|throw
operator|new
name|MetaException
argument_list|(
literal|"You must give the catalog a location"
argument_list|)
throw|;
name|Catalog
name|catalog
init|=
operator|new
name|Catalog
argument_list|(
name|name
argument_list|,
name|location
argument_list|)
decl_stmt|;
if|if
condition|(
name|description
operator|!=
literal|null
condition|)
name|catalog
operator|.
name|setDescription
argument_list|(
name|description
argument_list|)
expr_stmt|;
return|return
name|catalog
return|;
block|}
comment|/**    * Build the catalog object and create it in the metastore.    * @param client metastore client    * @return new catalog object    * @throws TException thrown from the client    */
specifier|public
name|Catalog
name|create
parameter_list|(
name|IMetaStoreClient
name|client
parameter_list|)
throws|throws
name|TException
block|{
name|Catalog
name|cat
init|=
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|createCatalog
argument_list|(
name|cat
argument_list|)
expr_stmt|;
return|return
name|cat
return|;
block|}
block|}
end_class

end_unit

