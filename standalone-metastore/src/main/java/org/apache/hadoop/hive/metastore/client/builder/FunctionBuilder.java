begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
operator|.
name|builder
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Function
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|FunctionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|MetaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|PrincipalType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|ResourceUri
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|utils
operator|.
name|MetaStoreUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|utils
operator|.
name|SecurityUtils
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Class for creating Thrift Function objects for tests, and API usage.  */
end_comment

begin_class
specifier|public
class|class
name|FunctionBuilder
block|{
specifier|private
name|String
name|dbName
init|=
literal|"default"
decl_stmt|;
specifier|private
name|String
name|funcName
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|className
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|owner
init|=
literal|null
decl_stmt|;
specifier|private
name|PrincipalType
name|ownerType
decl_stmt|;
specifier|private
name|int
name|createTime
decl_stmt|;
specifier|private
name|FunctionType
name|funcType
decl_stmt|;
specifier|private
name|List
argument_list|<
name|ResourceUri
argument_list|>
name|resourceUris
decl_stmt|;
specifier|public
name|FunctionBuilder
parameter_list|()
block|{
comment|// Set some reasonable defaults
name|ownerType
operator|=
name|PrincipalType
operator|.
name|USER
expr_stmt|;
name|createTime
operator|=
call|(
name|int
call|)
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|/
literal|1000
argument_list|)
expr_stmt|;
name|funcType
operator|=
name|FunctionType
operator|.
name|JAVA
expr_stmt|;
name|resourceUris
operator|=
operator|new
name|ArrayList
argument_list|<
name|ResourceUri
argument_list|>
argument_list|()
expr_stmt|;
block|}
specifier|public
name|FunctionBuilder
name|setDbName
parameter_list|(
name|String
name|dbName
parameter_list|)
block|{
name|this
operator|.
name|dbName
operator|=
name|dbName
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|FunctionBuilder
name|setDbName
parameter_list|(
name|Database
name|db
parameter_list|)
block|{
name|this
operator|.
name|dbName
operator|=
name|db
operator|.
name|getName
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|FunctionBuilder
name|setName
parameter_list|(
name|String
name|funcName
parameter_list|)
block|{
name|this
operator|.
name|funcName
operator|=
name|funcName
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|FunctionBuilder
name|setClass
parameter_list|(
name|String
name|className
parameter_list|)
block|{
name|this
operator|.
name|className
operator|=
name|className
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|FunctionBuilder
name|setOwner
parameter_list|(
name|String
name|owner
parameter_list|)
block|{
name|this
operator|.
name|owner
operator|=
name|owner
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|FunctionBuilder
name|setOwnerType
parameter_list|(
name|PrincipalType
name|ownerType
parameter_list|)
block|{
name|this
operator|.
name|ownerType
operator|=
name|ownerType
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|FunctionBuilder
name|setCreateTime
parameter_list|(
name|int
name|createTime
parameter_list|)
block|{
name|this
operator|.
name|createTime
operator|=
name|createTime
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|FunctionBuilder
name|setFunctionType
parameter_list|(
name|FunctionType
name|funcType
parameter_list|)
block|{
name|this
operator|.
name|funcType
operator|=
name|funcType
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|FunctionBuilder
name|setResourceUris
parameter_list|(
name|List
argument_list|<
name|ResourceUri
argument_list|>
name|resourceUris
parameter_list|)
block|{
name|this
operator|.
name|resourceUris
operator|=
name|resourceUris
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|FunctionBuilder
name|addResourceUri
parameter_list|(
name|ResourceUri
name|resourceUri
parameter_list|)
block|{
name|this
operator|.
name|resourceUris
operator|.
name|add
argument_list|(
name|resourceUri
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Function
name|build
parameter_list|()
throws|throws
name|MetaException
block|{
try|try
block|{
if|if
condition|(
name|owner
operator|!=
literal|null
condition|)
block|{
name|owner
operator|=
name|SecurityUtils
operator|.
name|getUser
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
name|MetaStoreUtils
operator|.
name|newMetaException
argument_list|(
name|e
argument_list|)
throw|;
block|}
return|return
operator|new
name|Function
argument_list|(
name|funcName
argument_list|,
name|dbName
argument_list|,
name|className
argument_list|,
name|owner
argument_list|,
name|ownerType
argument_list|,
name|createTime
argument_list|,
name|funcType
argument_list|,
name|resourceUris
argument_list|)
return|;
block|}
block|}
end_class

end_unit

