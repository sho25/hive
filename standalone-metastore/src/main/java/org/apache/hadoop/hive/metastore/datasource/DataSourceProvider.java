begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|datasource
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Iterables
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|conf
operator|.
name|MetastoreConf
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|sql
operator|.
name|DataSource
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_interface
specifier|public
interface|interface
name|DataSourceProvider
block|{
comment|/**    * @param hdpConfig    * @return the new connection pool    */
name|DataSource
name|create
parameter_list|(
name|Configuration
name|hdpConfig
parameter_list|)
throws|throws
name|SQLException
function_decl|;
comment|/**    * BoneCp has a bug which causes closed connections to be returned to the pool    * under certain conditions. (HIVE-11915)    * @return true if the factory creates BoneCp pools which need "special attention"    */
name|boolean
name|mayReturnClosedConnection
parameter_list|()
function_decl|;
comment|/**    * @param configuration Hadoop configuration object    * @return factory able to create a connection pool for the implementation    * specified in the configuration    */
name|boolean
name|supports
parameter_list|(
name|Configuration
name|configuration
parameter_list|)
function_decl|;
comment|/**    * @param hdpConfig    * @return subset of properties prefixed by a connection pool specific substring    */
specifier|static
name|Properties
name|getPrefixedProperties
parameter_list|(
name|Configuration
name|hdpConfig
parameter_list|,
name|String
name|factoryPrefix
parameter_list|)
block|{
name|Properties
name|dataSourceProps
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|Iterables
operator|.
name|filter
argument_list|(
name|hdpConfig
argument_list|,
operator|(
name|entry
lambda|->
name|entry
operator|.
name|getKey
argument_list|()
operator|!=
literal|null
operator|&&
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|startsWith
argument_list|(
name|factoryPrefix
argument_list|)
operator|)
argument_list|)
operator|.
name|forEach
argument_list|(
name|entry
lambda|->
name|dataSourceProps
operator|.
name|put
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|dataSourceProps
return|;
block|}
specifier|static
name|String
name|getMetastoreJdbcUser
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
return|return
name|MetastoreConf
operator|.
name|getVar
argument_list|(
name|conf
argument_list|,
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|CONNECTION_USER_NAME
argument_list|)
return|;
block|}
specifier|static
name|String
name|getMetastoreJdbcPasswd
parameter_list|(
name|Configuration
name|conf
parameter_list|)
throws|throws
name|SQLException
block|{
try|try
block|{
return|return
name|MetastoreConf
operator|.
name|getPassword
argument_list|(
name|conf
argument_list|,
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|PWD
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|err
parameter_list|)
block|{
throw|throw
operator|new
name|SQLException
argument_list|(
literal|"Error getting metastore password"
argument_list|,
name|err
argument_list|)
throw|;
block|}
block|}
specifier|static
name|String
name|getMetastoreJdbcDriverUrl
parameter_list|(
name|Configuration
name|conf
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
name|MetastoreConf
operator|.
name|getVar
argument_list|(
name|conf
argument_list|,
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|CONNECT_URL_KEY
argument_list|)
return|;
block|}
block|}
end_interface

end_unit

