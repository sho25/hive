begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|utils
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|login
operator|.
name|LoginException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_class
specifier|public
class|class
name|SecurityUtils
block|{
specifier|public
specifier|static
name|UserGroupInformation
name|getUGI
parameter_list|()
throws|throws
name|LoginException
throws|,
name|IOException
block|{
name|String
name|doAs
init|=
name|System
operator|.
name|getenv
argument_list|(
literal|"HADOOP_USER_NAME"
argument_list|)
decl_stmt|;
if|if
condition|(
name|doAs
operator|!=
literal|null
operator|&&
name|doAs
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
comment|/*       * this allows doAs (proxy user) to be passed along across process boundary where       * delegation tokens are not supported.  For example, a DDL stmt via WebHCat with       * a doAs parameter, forks to 'hcat' which needs to start a Session that       * proxies the end user       */
return|return
name|UserGroupInformation
operator|.
name|createProxyUser
argument_list|(
name|doAs
argument_list|,
name|UserGroupInformation
operator|.
name|getLoginUser
argument_list|()
argument_list|)
return|;
block|}
return|return
name|UserGroupInformation
operator|.
name|getCurrentUser
argument_list|()
return|;
block|}
block|}
end_class

end_unit

