begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicLong
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Materialization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_comment
comment|/**  * Contains information about the invalidation of a materialization,  * including the materialization name, the tables that it uses, and  * the invalidation time, i.e., the first moment t0 after the  * materialization was created at which one of the tables that it uses  * was modified.  */
end_comment

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
literal|"serial"
argument_list|)
specifier|public
class|class
name|MaterializationInvalidationInfo
extends|extends
name|Materialization
block|{
specifier|private
name|AtomicLong
name|invalidationTime
decl_stmt|;
specifier|public
name|MaterializationInvalidationInfo
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|tablesUsed
parameter_list|,
name|String
name|validTxnList
parameter_list|)
block|{
name|super
argument_list|(
name|tablesUsed
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|this
operator|.
name|setValidTxnList
argument_list|(
name|validTxnList
argument_list|)
expr_stmt|;
name|this
operator|.
name|invalidationTime
operator|=
operator|new
name|AtomicLong
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|compareAndSetInvalidationTime
parameter_list|(
name|long
name|expect
parameter_list|,
name|long
name|update
parameter_list|)
block|{
name|boolean
name|success
init|=
name|invalidationTime
operator|.
name|compareAndSet
argument_list|(
name|expect
argument_list|,
name|update
argument_list|)
decl_stmt|;
if|if
condition|(
name|success
condition|)
block|{
name|super
operator|.
name|setInvalidationTime
argument_list|(
name|update
argument_list|)
expr_stmt|;
block|}
return|return
name|success
return|;
block|}
specifier|public
name|long
name|getInvalidationTime
parameter_list|()
block|{
return|return
name|invalidationTime
operator|.
name|get
argument_list|()
return|;
block|}
specifier|public
name|void
name|setInvalidationTime
parameter_list|(
name|long
name|invalidationTime
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"You should call compareAndSetInvalidationTime instead"
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

