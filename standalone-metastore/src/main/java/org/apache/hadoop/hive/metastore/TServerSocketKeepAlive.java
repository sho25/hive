begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|SocketException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|transport
operator|.
name|TServerSocket
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|transport
operator|.
name|TSocket
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|transport
operator|.
name|TTransportException
import|;
end_import

begin_comment
comment|/**  * TServerSocketKeepAlive - like TServerSocket, but will enable keepalive for  * accepted sockets.  *  */
end_comment

begin_class
specifier|public
class|class
name|TServerSocketKeepAlive
extends|extends
name|TServerSocket
block|{
specifier|public
name|TServerSocketKeepAlive
parameter_list|(
name|TServerSocket
name|serverSocket
parameter_list|)
throws|throws
name|TTransportException
block|{
name|super
argument_list|(
name|serverSocket
operator|.
name|getServerSocket
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|TSocket
name|acceptImpl
parameter_list|()
throws|throws
name|TTransportException
block|{
name|TSocket
name|ts
init|=
name|super
operator|.
name|acceptImpl
argument_list|()
decl_stmt|;
try|try
block|{
name|ts
operator|.
name|getSocket
argument_list|()
operator|.
name|setKeepAlive
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SocketException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|TTransportException
argument_list|(
name|e
argument_list|)
throw|;
block|}
return|return
name|ts
return|;
block|}
block|}
end_class

end_unit

