begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configurable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|MetaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|NoSuchObjectException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|ThriftHiveMetastore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|txn
operator|.
name|TxnStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|utils
operator|.
name|MetaStoreUtils
import|;
end_import

begin_comment
comment|/**  * An interface wrapper for HMSHandler.  This interface contains methods that need to be  * called by internal classes but that are not part of the thrift interface.  */
end_comment

begin_interface
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
interface|interface
name|IHMSHandler
extends|extends
name|ThriftHiveMetastore
operator|.
name|Iface
extends|,
name|Configurable
block|{
name|void
name|init
parameter_list|()
throws|throws
name|MetaException
function_decl|;
comment|/**    * Get the id of the thread of this handler.    * @return thread id    */
name|int
name|getThreadId
parameter_list|()
function_decl|;
comment|/**    * Get a reference to the underlying RawStore.    * @return the RawStore instance.    * @throws MetaException if the creation of a new RawStore object is necessary but fails.    */
name|RawStore
name|getMS
parameter_list|()
throws|throws
name|MetaException
function_decl|;
comment|/**    * Get a reference to the underlying TxnStore.    * @return the TxnStore instance.    */
name|TxnStore
name|getTxnHandler
parameter_list|()
function_decl|;
comment|/**    * Get a reference to Hive's warehouse object (the class that does all the physical operations).    * @return Warehouse instance.    */
name|Warehouse
name|getWh
parameter_list|()
function_decl|;
comment|/**    * Equivalent to get_database, but does not write to audit logs, or fire pre-event listeners.    * Meant to be used for internal hive classes that don't use the thrift interface.    * @param catName catalog name    * @param name database name    * @return database object    * @throws NoSuchObjectException If the database does not exist.    * @throws MetaException If another error occurs.    */
name|Database
name|get_database_core
parameter_list|(
specifier|final
name|String
name|catName
parameter_list|,
specifier|final
name|String
name|name
parameter_list|)
throws|throws
name|NoSuchObjectException
throws|,
name|MetaException
function_decl|;
comment|/**    * Equivalent of get_table, but does not log audits and fire pre-event listener.    * Meant to be used for calls made by other hive classes, that are not using the    * thrift interface.    * @param catName catalog name    * @param dbname database name    * @param name table name    * @return Table object    * @throws NoSuchObjectException If the table does not exist.    * @throws MetaException  If another error occurs.    */
name|Table
name|get_table_core
parameter_list|(
specifier|final
name|String
name|catName
parameter_list|,
specifier|final
name|String
name|dbname
parameter_list|,
specifier|final
name|String
name|name
parameter_list|)
throws|throws
name|MetaException
throws|,
name|NoSuchObjectException
function_decl|;
comment|/**    * Equivalent of get_table, but does not log audits and fire pre-event listener.    * Meant to be used for calls made by other hive classes, that are not using the    * thrift interface.  Uses the configured catalog.    * @param dbName database name    * @param name table name    * @return Table object    * @throws NoSuchObjectException If the table does not exist.    * @throws MetaException  If another error occurs.    */
specifier|default
name|Table
name|get_table_core
parameter_list|(
specifier|final
name|String
name|dbName
parameter_list|,
specifier|final
name|String
name|name
parameter_list|)
throws|throws
name|MetaException
throws|,
name|NoSuchObjectException
block|{
return|return
name|get_table_core
argument_list|(
name|MetaStoreUtils
operator|.
name|getDefaultCatalog
argument_list|(
name|getConf
argument_list|()
argument_list|)
argument_list|,
name|dbName
argument_list|,
name|name
argument_list|)
return|;
block|}
comment|/**    * Get a list of all transactional listeners.    * @return list of listeners.    */
name|List
argument_list|<
name|TransactionalMetaStoreEventListener
argument_list|>
name|getTransactionalListeners
parameter_list|()
function_decl|;
block|}
end_interface

end_unit

