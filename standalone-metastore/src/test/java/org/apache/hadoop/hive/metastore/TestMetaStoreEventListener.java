begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|annotation
operator|.
name|MetastoreUnitTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|FieldSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Index
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Partition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|PartitionEventType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
operator|.
name|builder
operator|.
name|DatabaseBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
operator|.
name|builder
operator|.
name|IndexBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
operator|.
name|builder
operator|.
name|PartitionBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
operator|.
name|builder
operator|.
name|TableBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|conf
operator|.
name|MetastoreConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|conf
operator|.
name|MetastoreConf
operator|.
name|ConfVars
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|AddIndexEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|AddPartitionEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|AlterIndexEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|AlterPartitionEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|AlterTableEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|ConfigChangeEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|CreateDatabaseEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|CreateTableEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|DropDatabaseEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|DropIndexEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|DropPartitionEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|DropTableEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|ListenerEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|LoadPartitionDoneEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|PreAddIndexEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|PreAddPartitionEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|PreAlterIndexEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|PreAlterPartitionEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|PreAlterTableEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|PreCreateDatabaseEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|PreCreateTableEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|PreDropDatabaseEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|PreDropIndexEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|PreDropPartitionEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|PreDropTableEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|PreEventContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|events
operator|.
name|PreLoadPartitionDoneEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|security
operator|.
name|HadoopThriftAuthBridge
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotSame
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_comment
comment|/**  * TestMetaStoreEventListener. Test case for  * {@link org.apache.hadoop.hive.metastore.MetaStoreEventListener} and  * {@link org.apache.hadoop.hive.metastore.MetaStorePreEventListener}  */
end_comment

begin_class
annotation|@
name|Category
argument_list|(
name|MetastoreUnitTest
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestMetaStoreEventListener
block|{
specifier|private
name|Configuration
name|conf
decl_stmt|;
specifier|private
name|HiveMetaStoreClient
name|msc
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|dbName
init|=
literal|"hive2038"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|tblName
init|=
literal|"tmptbl"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|renamed
init|=
literal|"tmptbl2"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|metaConfKey
init|=
literal|"metastore.partition.name.whitelist.pattern"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|metaConfVal
init|=
literal|""
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"hive.metastore.event.listeners"
argument_list|,
name|DummyListener
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"hive.metastore.pre.event.listeners"
argument_list|,
name|DummyPreListener
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|conf
operator|=
name|MetastoreConf
operator|.
name|newMetastoreConf
argument_list|()
expr_stmt|;
name|MetastoreConf
operator|.
name|setVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|PARTITION_NAME_WHITELIST_PATTERN
argument_list|,
name|metaConfVal
argument_list|)
expr_stmt|;
name|MetastoreConf
operator|.
name|setLongVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|THRIFT_CONNECTION_RETRIES
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|MetastoreConf
operator|.
name|setBoolVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|HIVE_SUPPORT_CONCURRENCY
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|MetaStoreTestUtils
operator|.
name|setConfForStandloneMode
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|int
name|port
init|=
name|MetaStoreTestUtils
operator|.
name|startMetaStoreWithRetry
argument_list|(
name|HadoopThriftAuthBridge
operator|.
name|getBridge
argument_list|()
argument_list|,
name|conf
argument_list|)
decl_stmt|;
name|MetastoreConf
operator|.
name|setVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|THRIFT_URIS
argument_list|,
literal|"thrift://localhost:"
operator|+
name|port
argument_list|)
expr_stmt|;
name|msc
operator|=
operator|new
name|HiveMetaStoreClient
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|msc
operator|.
name|dropDatabase
argument_list|(
name|dbName
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|DummyListener
operator|.
name|notifyList
operator|.
name|clear
argument_list|()
expr_stmt|;
name|DummyPreListener
operator|.
name|notifyList
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|validateCreateDb
parameter_list|(
name|Database
name|expectedDb
parameter_list|,
name|Database
name|actualDb
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|expectedDb
operator|.
name|getName
argument_list|()
argument_list|,
name|actualDb
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedDb
operator|.
name|getLocationUri
argument_list|()
argument_list|,
name|actualDb
operator|.
name|getLocationUri
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateTable
parameter_list|(
name|Table
name|expectedTable
parameter_list|,
name|Table
name|actualTable
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|expectedTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|actualTable
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedTable
operator|.
name|getDbName
argument_list|()
argument_list|,
name|actualTable
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedTable
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
argument_list|,
name|actualTable
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateCreateTable
parameter_list|(
name|Table
name|expectedTable
parameter_list|,
name|Table
name|actualTable
parameter_list|)
block|{
name|validateTable
argument_list|(
name|expectedTable
argument_list|,
name|actualTable
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateAddPartition
parameter_list|(
name|Partition
name|expectedPartition
parameter_list|,
name|Partition
name|actualPartition
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|expectedPartition
argument_list|,
name|actualPartition
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateTableInAddPartition
parameter_list|(
name|Table
name|expectedTable
parameter_list|,
name|Table
name|actualTable
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|expectedTable
argument_list|,
name|actualTable
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validatePartition
parameter_list|(
name|Partition
name|expectedPartition
parameter_list|,
name|Partition
name|actualPartition
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|expectedPartition
operator|.
name|getValues
argument_list|()
argument_list|,
name|actualPartition
operator|.
name|getValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedPartition
operator|.
name|getDbName
argument_list|()
argument_list|,
name|actualPartition
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedPartition
operator|.
name|getTableName
argument_list|()
argument_list|,
name|actualPartition
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateAlterPartition
parameter_list|(
name|Partition
name|expectedOldPartition
parameter_list|,
name|Partition
name|expectedNewPartition
parameter_list|,
name|String
name|actualOldPartitionDbName
parameter_list|,
name|String
name|actualOldPartitionTblName
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|actualOldPartitionValues
parameter_list|,
name|Partition
name|actualNewPartition
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|expectedOldPartition
operator|.
name|getValues
argument_list|()
argument_list|,
name|actualOldPartitionValues
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedOldPartition
operator|.
name|getDbName
argument_list|()
argument_list|,
name|actualOldPartitionDbName
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedOldPartition
operator|.
name|getTableName
argument_list|()
argument_list|,
name|actualOldPartitionTblName
argument_list|)
expr_stmt|;
name|validatePartition
argument_list|(
name|expectedNewPartition
argument_list|,
name|actualNewPartition
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateAlterTable
parameter_list|(
name|Table
name|expectedOldTable
parameter_list|,
name|Table
name|expectedNewTable
parameter_list|,
name|Table
name|actualOldTable
parameter_list|,
name|Table
name|actualNewTable
parameter_list|)
block|{
name|validateTable
argument_list|(
name|expectedOldTable
argument_list|,
name|actualOldTable
argument_list|)
expr_stmt|;
name|validateTable
argument_list|(
name|expectedNewTable
argument_list|,
name|actualNewTable
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateAlterTableColumns
parameter_list|(
name|Table
name|expectedOldTable
parameter_list|,
name|Table
name|expectedNewTable
parameter_list|,
name|Table
name|actualOldTable
parameter_list|,
name|Table
name|actualNewTable
parameter_list|)
block|{
name|validateAlterTable
argument_list|(
name|expectedOldTable
argument_list|,
name|expectedNewTable
argument_list|,
name|actualOldTable
argument_list|,
name|actualNewTable
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedOldTable
operator|.
name|getSd
argument_list|()
operator|.
name|getCols
argument_list|()
argument_list|,
name|actualOldTable
operator|.
name|getSd
argument_list|()
operator|.
name|getCols
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedNewTable
operator|.
name|getSd
argument_list|()
operator|.
name|getCols
argument_list|()
argument_list|,
name|actualNewTable
operator|.
name|getSd
argument_list|()
operator|.
name|getCols
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateLoadPartitionDone
parameter_list|(
name|String
name|expectedTableName
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|expectedPartitionName
parameter_list|,
name|String
name|actualTableName
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|actualPartitionName
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|expectedPartitionName
argument_list|,
name|actualPartitionName
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedTableName
argument_list|,
name|actualTableName
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateDropPartition
parameter_list|(
name|Iterator
argument_list|<
name|Partition
argument_list|>
name|expectedPartitions
parameter_list|,
name|Iterator
argument_list|<
name|Partition
argument_list|>
name|actualPartitions
parameter_list|)
block|{
while|while
condition|(
name|expectedPartitions
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|assertTrue
argument_list|(
name|actualPartitions
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
name|validatePartition
argument_list|(
name|expectedPartitions
operator|.
name|next
argument_list|()
argument_list|,
name|actualPartitions
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertFalse
argument_list|(
name|actualPartitions
operator|.
name|hasNext
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateTableInDropPartition
parameter_list|(
name|Table
name|expectedTable
parameter_list|,
name|Table
name|actualTable
parameter_list|)
block|{
name|validateTable
argument_list|(
name|expectedTable
argument_list|,
name|actualTable
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateDropTable
parameter_list|(
name|Table
name|expectedTable
parameter_list|,
name|Table
name|actualTable
parameter_list|)
block|{
name|validateTable
argument_list|(
name|expectedTable
argument_list|,
name|actualTable
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateDropDb
parameter_list|(
name|Database
name|expectedDb
parameter_list|,
name|Database
name|actualDb
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|expectedDb
argument_list|,
name|actualDb
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateIndex
parameter_list|(
name|Index
name|expectedIndex
parameter_list|,
name|Index
name|actualIndex
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|expectedIndex
operator|.
name|getDbName
argument_list|()
argument_list|,
name|actualIndex
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedIndex
operator|.
name|getIndexName
argument_list|()
argument_list|,
name|actualIndex
operator|.
name|getIndexName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedIndex
operator|.
name|getIndexHandlerClass
argument_list|()
argument_list|,
name|actualIndex
operator|.
name|getIndexHandlerClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedIndex
operator|.
name|getOrigTableName
argument_list|()
argument_list|,
name|actualIndex
operator|.
name|getOrigTableName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedIndex
operator|.
name|getIndexTableName
argument_list|()
argument_list|,
name|actualIndex
operator|.
name|getIndexTableName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedIndex
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
argument_list|,
name|actualIndex
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateAddIndex
parameter_list|(
name|Index
name|expectedIndex
parameter_list|,
name|Index
name|actualIndex
parameter_list|)
block|{
name|validateIndex
argument_list|(
name|expectedIndex
argument_list|,
name|actualIndex
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateAlterIndex
parameter_list|(
name|Index
name|expectedOldIndex
parameter_list|,
name|Index
name|actualOldIndex
parameter_list|,
name|Index
name|expectedNewIndex
parameter_list|,
name|Index
name|actualNewIndex
parameter_list|)
block|{
name|validateIndex
argument_list|(
name|expectedOldIndex
argument_list|,
name|actualOldIndex
argument_list|)
expr_stmt|;
name|validateIndex
argument_list|(
name|expectedNewIndex
argument_list|,
name|actualNewIndex
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|validateDropIndex
parameter_list|(
name|Index
name|expectedIndex
parameter_list|,
name|Index
name|actualIndex
parameter_list|)
block|{
name|validateIndex
argument_list|(
name|expectedIndex
argument_list|,
name|actualIndex
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testListener
parameter_list|()
throws|throws
name|Exception
block|{
name|int
name|listSize
init|=
literal|0
decl_stmt|;
name|List
argument_list|<
name|ListenerEvent
argument_list|>
name|notifyList
init|=
name|DummyListener
operator|.
name|notifyList
decl_stmt|;
name|List
argument_list|<
name|PreEventContext
argument_list|>
name|preNotifyList
init|=
name|DummyPreListener
operator|.
name|notifyList
decl_stmt|;
name|assertEquals
argument_list|(
name|notifyList
operator|.
name|size
argument_list|()
argument_list|,
name|listSize
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|preNotifyList
operator|.
name|size
argument_list|()
argument_list|,
name|listSize
argument_list|)
expr_stmt|;
name|Database
name|db
init|=
operator|new
name|DatabaseBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|dbName
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|msc
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
name|listSize
operator|++
expr_stmt|;
name|PreCreateDatabaseEvent
name|preDbEvent
init|=
call|(
name|PreCreateDatabaseEvent
call|)
argument_list|(
name|preNotifyList
operator|.
name|get
argument_list|(
name|preNotifyList
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|db
operator|=
name|msc
operator|.
name|getDatabase
argument_list|(
name|dbName
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|listSize
argument_list|,
name|notifyList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|listSize
operator|+
literal|1
argument_list|,
name|preNotifyList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|validateCreateDb
argument_list|(
name|db
argument_list|,
name|preDbEvent
operator|.
name|getDatabase
argument_list|()
argument_list|)
expr_stmt|;
name|CreateDatabaseEvent
name|dbEvent
init|=
call|(
name|CreateDatabaseEvent
call|)
argument_list|(
name|notifyList
operator|.
name|get
argument_list|(
name|listSize
operator|-
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|dbEvent
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|validateCreateDb
argument_list|(
name|db
argument_list|,
name|dbEvent
operator|.
name|getDatabase
argument_list|()
argument_list|)
expr_stmt|;
name|Table
name|table
init|=
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|db
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tblName
argument_list|)
operator|.
name|addCol
argument_list|(
literal|"a"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|addPartCol
argument_list|(
literal|"b"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|msc
operator|.
name|createTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|PreCreateTableEvent
name|preTblEvent
init|=
call|(
name|PreCreateTableEvent
call|)
argument_list|(
name|preNotifyList
operator|.
name|get
argument_list|(
name|preNotifyList
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|listSize
operator|++
expr_stmt|;
name|Table
name|tbl
init|=
name|msc
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|)
decl_stmt|;
name|validateCreateTable
argument_list|(
name|tbl
argument_list|,
name|preTblEvent
operator|.
name|getTable
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|notifyList
operator|.
name|size
argument_list|()
argument_list|,
name|listSize
argument_list|)
expr_stmt|;
name|CreateTableEvent
name|tblEvent
init|=
call|(
name|CreateTableEvent
call|)
argument_list|(
name|notifyList
operator|.
name|get
argument_list|(
name|listSize
operator|-
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|tblEvent
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|validateCreateTable
argument_list|(
name|tbl
argument_list|,
name|tblEvent
operator|.
name|getTable
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|indexName
init|=
literal|"tmptbl_i"
decl_stmt|;
name|Index
name|index
init|=
operator|new
name|IndexBuilder
argument_list|()
operator|.
name|setDbAndTableName
argument_list|(
name|table
argument_list|)
operator|.
name|setIndexName
argument_list|(
name|indexName
argument_list|)
operator|.
name|addCol
argument_list|(
literal|"a"
argument_list|,
literal|"string"
argument_list|)
operator|.
name|setDeferredRebuild
argument_list|(
literal|true
argument_list|)
operator|.
name|addIndexParam
argument_list|(
literal|"prop1"
argument_list|,
literal|"val1"
argument_list|)
operator|.
name|addIndexParam
argument_list|(
literal|"prop2"
argument_list|,
literal|"val2"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Table
name|indexTable
init|=
operator|new
name|TableBuilder
argument_list|()
operator|.
name|fromIndex
argument_list|(
name|index
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|msc
operator|.
name|createIndex
argument_list|(
name|index
argument_list|,
name|indexTable
argument_list|)
expr_stmt|;
name|listSize
operator|+=
literal|2
expr_stmt|;
comment|// creates index table internally
name|assertEquals
argument_list|(
name|notifyList
operator|.
name|size
argument_list|()
argument_list|,
name|listSize
argument_list|)
expr_stmt|;
name|AddIndexEvent
name|addIndexEvent
init|=
operator|(
name|AddIndexEvent
operator|)
name|notifyList
operator|.
name|get
argument_list|(
name|listSize
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|addIndexEvent
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|PreAddIndexEvent
name|preAddIndexEvent
init|=
call|(
name|PreAddIndexEvent
call|)
argument_list|(
name|preNotifyList
operator|.
name|get
argument_list|(
name|preNotifyList
operator|.
name|size
argument_list|()
operator|-
literal|2
argument_list|)
argument_list|)
decl_stmt|;
name|Index
name|oldIndex
init|=
name|msc
operator|.
name|getIndex
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|,
name|indexName
argument_list|)
decl_stmt|;
name|validateAddIndex
argument_list|(
name|oldIndex
argument_list|,
name|addIndexEvent
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|validateAddIndex
argument_list|(
name|oldIndex
argument_list|,
name|preAddIndexEvent
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|Index
name|alteredIndex
init|=
operator|new
name|Index
argument_list|(
name|oldIndex
argument_list|)
decl_stmt|;
name|alteredIndex
operator|.
name|getParameters
argument_list|()
operator|.
name|put
argument_list|(
literal|"prop3"
argument_list|,
literal|"val3"
argument_list|)
expr_stmt|;
name|msc
operator|.
name|alter_index
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|,
name|indexName
argument_list|,
name|alteredIndex
argument_list|)
expr_stmt|;
name|listSize
operator|++
expr_stmt|;
name|assertEquals
argument_list|(
name|notifyList
operator|.
name|size
argument_list|()
argument_list|,
name|listSize
argument_list|)
expr_stmt|;
name|Index
name|newIndex
init|=
name|msc
operator|.
name|getIndex
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|,
name|indexName
argument_list|)
decl_stmt|;
name|AlterIndexEvent
name|alterIndexEvent
init|=
operator|(
name|AlterIndexEvent
operator|)
name|notifyList
operator|.
name|get
argument_list|(
name|listSize
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|alterIndexEvent
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|validateAlterIndex
argument_list|(
name|oldIndex
argument_list|,
name|alterIndexEvent
operator|.
name|getOldIndex
argument_list|()
argument_list|,
name|newIndex
argument_list|,
name|alterIndexEvent
operator|.
name|getNewIndex
argument_list|()
argument_list|)
expr_stmt|;
name|PreAlterIndexEvent
name|preAlterIndexEvent
init|=
call|(
name|PreAlterIndexEvent
call|)
argument_list|(
name|preNotifyList
operator|.
name|get
argument_list|(
name|preNotifyList
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|validateAlterIndex
argument_list|(
name|oldIndex
argument_list|,
name|preAlterIndexEvent
operator|.
name|getOldIndex
argument_list|()
argument_list|,
name|newIndex
argument_list|,
name|preAlterIndexEvent
operator|.
name|getNewIndex
argument_list|()
argument_list|)
expr_stmt|;
name|msc
operator|.
name|dropIndex
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|,
name|indexName
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|listSize
operator|++
expr_stmt|;
name|assertEquals
argument_list|(
name|notifyList
operator|.
name|size
argument_list|()
argument_list|,
name|listSize
argument_list|)
expr_stmt|;
name|DropIndexEvent
name|dropIndexEvent
init|=
operator|(
name|DropIndexEvent
operator|)
name|notifyList
operator|.
name|get
argument_list|(
name|listSize
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|dropIndexEvent
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|validateDropIndex
argument_list|(
name|newIndex
argument_list|,
name|dropIndexEvent
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|PreDropIndexEvent
name|preDropIndexEvent
init|=
call|(
name|PreDropIndexEvent
call|)
argument_list|(
name|preNotifyList
operator|.
name|get
argument_list|(
name|preNotifyList
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|validateDropIndex
argument_list|(
name|newIndex
argument_list|,
name|preDropIndexEvent
operator|.
name|getIndex
argument_list|()
argument_list|)
expr_stmt|;
name|Partition
name|part
init|=
operator|new
name|PartitionBuilder
argument_list|()
operator|.
name|fromTable
argument_list|(
name|table
argument_list|)
operator|.
name|addValue
argument_list|(
literal|"2011"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|msc
operator|.
name|add_partition
argument_list|(
name|part
argument_list|)
expr_stmt|;
name|listSize
operator|++
expr_stmt|;
name|assertEquals
argument_list|(
name|notifyList
operator|.
name|size
argument_list|()
argument_list|,
name|listSize
argument_list|)
expr_stmt|;
name|PreAddPartitionEvent
name|prePartEvent
init|=
call|(
name|PreAddPartitionEvent
call|)
argument_list|(
name|preNotifyList
operator|.
name|get
argument_list|(
name|preNotifyList
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|AddPartitionEvent
name|partEvent
init|=
call|(
name|AddPartitionEvent
call|)
argument_list|(
name|notifyList
operator|.
name|get
argument_list|(
name|listSize
operator|-
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|partEvent
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|part
operator|=
name|msc
operator|.
name|getPartition
argument_list|(
literal|"hive2038"
argument_list|,
literal|"tmptbl"
argument_list|,
literal|"b=2011"
argument_list|)
expr_stmt|;
name|Partition
name|partAdded
init|=
name|partEvent
operator|.
name|getPartitionIterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|validateAddPartition
argument_list|(
name|part
argument_list|,
name|partAdded
argument_list|)
expr_stmt|;
name|validateTableInAddPartition
argument_list|(
name|tbl
argument_list|,
name|partEvent
operator|.
name|getTable
argument_list|()
argument_list|)
expr_stmt|;
name|validateAddPartition
argument_list|(
name|part
argument_list|,
name|prePartEvent
operator|.
name|getPartitions
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// Test adding multiple partitions in a single partition-set, atomically.
name|int
name|currentTime
init|=
operator|(
name|int
operator|)
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|HiveMetaStoreClient
name|hmsClient
init|=
operator|new
name|HiveMetaStoreClient
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|table
operator|=
name|hmsClient
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
literal|"tmptbl"
argument_list|)
expr_stmt|;
name|Partition
name|partition1
init|=
operator|new
name|Partition
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"20110101"
argument_list|)
argument_list|,
name|dbName
argument_list|,
literal|"tmptbl"
argument_list|,
name|currentTime
argument_list|,
name|currentTime
argument_list|,
name|table
operator|.
name|getSd
argument_list|()
argument_list|,
name|table
operator|.
name|getParameters
argument_list|()
argument_list|)
decl_stmt|;
name|Partition
name|partition2
init|=
operator|new
name|Partition
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"20110102"
argument_list|)
argument_list|,
name|dbName
argument_list|,
literal|"tmptbl"
argument_list|,
name|currentTime
argument_list|,
name|currentTime
argument_list|,
name|table
operator|.
name|getSd
argument_list|()
argument_list|,
name|table
operator|.
name|getParameters
argument_list|()
argument_list|)
decl_stmt|;
name|Partition
name|partition3
init|=
operator|new
name|Partition
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"20110103"
argument_list|)
argument_list|,
name|dbName
argument_list|,
literal|"tmptbl"
argument_list|,
name|currentTime
argument_list|,
name|currentTime
argument_list|,
name|table
operator|.
name|getSd
argument_list|()
argument_list|,
name|table
operator|.
name|getParameters
argument_list|()
argument_list|)
decl_stmt|;
name|hmsClient
operator|.
name|add_partitions
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|partition1
argument_list|,
name|partition2
argument_list|,
name|partition3
argument_list|)
argument_list|)
expr_stmt|;
operator|++
name|listSize
expr_stmt|;
name|AddPartitionEvent
name|multiplePartitionEvent
init|=
call|(
name|AddPartitionEvent
call|)
argument_list|(
name|notifyList
operator|.
name|get
argument_list|(
name|listSize
operator|-
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Unexpected table value."
argument_list|,
name|table
argument_list|,
name|multiplePartitionEvent
operator|.
name|getTable
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|multiParts
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|multiplePartitionEvent
operator|.
name|getPartitionIterator
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Unexpected number of partitions in event!"
argument_list|,
literal|3
argument_list|,
name|multiParts
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Unexpected partition value."
argument_list|,
name|partition1
operator|.
name|getValues
argument_list|()
argument_list|,
name|multiParts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Unexpected partition value."
argument_list|,
name|partition2
operator|.
name|getValues
argument_list|()
argument_list|,
name|multiParts
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Unexpected partition value."
argument_list|,
name|partition3
operator|.
name|getValues
argument_list|()
argument_list|,
name|multiParts
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getValues
argument_list|()
argument_list|)
expr_stmt|;
name|part
operator|.
name|setLastAccessTime
argument_list|(
call|(
name|int
call|)
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|/
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
name|msc
operator|.
name|alter_partition
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|,
name|part
argument_list|)
expr_stmt|;
name|listSize
operator|++
expr_stmt|;
name|assertEquals
argument_list|(
name|notifyList
operator|.
name|size
argument_list|()
argument_list|,
name|listSize
argument_list|)
expr_stmt|;
name|PreAlterPartitionEvent
name|preAlterPartEvent
init|=
operator|(
name|PreAlterPartitionEvent
operator|)
name|preNotifyList
operator|.
name|get
argument_list|(
name|preNotifyList
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
comment|//the partition did not change,
comment|// so the new partition should be similar to the original partition
name|Partition
name|origP
init|=
name|msc
operator|.
name|getPartition
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|,
literal|"b=2011"
argument_list|)
decl_stmt|;
name|AlterPartitionEvent
name|alterPartEvent
init|=
operator|(
name|AlterPartitionEvent
operator|)
name|notifyList
operator|.
name|get
argument_list|(
name|listSize
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|alterPartEvent
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|validateAlterPartition
argument_list|(
name|origP
argument_list|,
name|origP
argument_list|,
name|alterPartEvent
operator|.
name|getOldPartition
argument_list|()
operator|.
name|getDbName
argument_list|()
argument_list|,
name|alterPartEvent
operator|.
name|getOldPartition
argument_list|()
operator|.
name|getTableName
argument_list|()
argument_list|,
name|alterPartEvent
operator|.
name|getOldPartition
argument_list|()
operator|.
name|getValues
argument_list|()
argument_list|,
name|alterPartEvent
operator|.
name|getNewPartition
argument_list|()
argument_list|)
expr_stmt|;
name|validateAlterPartition
argument_list|(
name|origP
argument_list|,
name|origP
argument_list|,
name|preAlterPartEvent
operator|.
name|getDbName
argument_list|()
argument_list|,
name|preAlterPartEvent
operator|.
name|getTableName
argument_list|()
argument_list|,
name|preAlterPartEvent
operator|.
name|getNewPartition
argument_list|()
operator|.
name|getValues
argument_list|()
argument_list|,
name|preAlterPartEvent
operator|.
name|getNewPartition
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|part_vals
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|part_vals
operator|.
name|add
argument_list|(
literal|"c=2012"
argument_list|)
expr_stmt|;
name|int
name|preEventListSize
decl_stmt|;
name|preEventListSize
operator|=
name|preNotifyList
operator|.
name|size
argument_list|()
operator|+
literal|1
expr_stmt|;
name|Partition
name|newPart
init|=
name|msc
operator|.
name|appendPartition
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|,
name|part_vals
argument_list|)
decl_stmt|;
name|listSize
operator|++
expr_stmt|;
name|assertEquals
argument_list|(
name|notifyList
operator|.
name|size
argument_list|()
argument_list|,
name|listSize
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|preNotifyList
operator|.
name|size
argument_list|()
argument_list|,
name|preEventListSize
argument_list|)
expr_stmt|;
name|AddPartitionEvent
name|appendPartEvent
init|=
call|(
name|AddPartitionEvent
call|)
argument_list|(
name|notifyList
operator|.
name|get
argument_list|(
name|listSize
operator|-
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|Partition
name|partAppended
init|=
name|appendPartEvent
operator|.
name|getPartitionIterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|validateAddPartition
argument_list|(
name|newPart
argument_list|,
name|partAppended
argument_list|)
expr_stmt|;
name|PreAddPartitionEvent
name|preAppendPartEvent
init|=
call|(
name|PreAddPartitionEvent
call|)
argument_list|(
name|preNotifyList
operator|.
name|get
argument_list|(
name|preNotifyList
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|validateAddPartition
argument_list|(
name|newPart
argument_list|,
name|preAppendPartEvent
operator|.
name|getPartitions
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|Table
name|renamedTable
init|=
operator|new
name|Table
argument_list|(
name|table
argument_list|)
decl_stmt|;
name|renamedTable
operator|.
name|setTableName
argument_list|(
name|renamed
argument_list|)
expr_stmt|;
name|msc
operator|.
name|alter_table
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|,
name|renamedTable
argument_list|)
expr_stmt|;
name|listSize
operator|++
expr_stmt|;
name|assertEquals
argument_list|(
name|notifyList
operator|.
name|size
argument_list|()
argument_list|,
name|listSize
argument_list|)
expr_stmt|;
name|PreAlterTableEvent
name|preAlterTableE
init|=
operator|(
name|PreAlterTableEvent
operator|)
name|preNotifyList
operator|.
name|get
argument_list|(
name|preNotifyList
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
name|renamedTable
operator|=
name|msc
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|renamed
argument_list|)
expr_stmt|;
name|AlterTableEvent
name|alterTableE
init|=
operator|(
name|AlterTableEvent
operator|)
name|notifyList
operator|.
name|get
argument_list|(
name|listSize
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|alterTableE
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|validateAlterTable
argument_list|(
name|tbl
argument_list|,
name|renamedTable
argument_list|,
name|alterTableE
operator|.
name|getOldTable
argument_list|()
argument_list|,
name|alterTableE
operator|.
name|getNewTable
argument_list|()
argument_list|)
expr_stmt|;
name|validateAlterTable
argument_list|(
name|tbl
argument_list|,
name|renamedTable
argument_list|,
name|preAlterTableE
operator|.
name|getOldTable
argument_list|()
argument_list|,
name|preAlterTableE
operator|.
name|getNewTable
argument_list|()
argument_list|)
expr_stmt|;
comment|//change the table name back
name|table
operator|=
operator|new
name|Table
argument_list|(
name|renamedTable
argument_list|)
expr_stmt|;
name|table
operator|.
name|setTableName
argument_list|(
name|tblName
argument_list|)
expr_stmt|;
name|msc
operator|.
name|alter_table
argument_list|(
name|dbName
argument_list|,
name|renamed
argument_list|,
name|table
argument_list|)
expr_stmt|;
name|listSize
operator|++
expr_stmt|;
name|assertEquals
argument_list|(
name|notifyList
operator|.
name|size
argument_list|()
argument_list|,
name|listSize
argument_list|)
expr_stmt|;
name|table
operator|=
name|msc
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|)
expr_stmt|;
name|table
operator|.
name|getSd
argument_list|()
operator|.
name|addToCols
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"c"
argument_list|,
literal|"int"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|msc
operator|.
name|alter_table
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|,
name|table
argument_list|)
expr_stmt|;
name|listSize
operator|++
expr_stmt|;
name|assertEquals
argument_list|(
name|notifyList
operator|.
name|size
argument_list|()
argument_list|,
name|listSize
argument_list|)
expr_stmt|;
name|preAlterTableE
operator|=
operator|(
name|PreAlterTableEvent
operator|)
name|preNotifyList
operator|.
name|get
argument_list|(
name|preNotifyList
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|Table
name|altTable
init|=
name|msc
operator|.
name|getTable
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|)
decl_stmt|;
name|alterTableE
operator|=
operator|(
name|AlterTableEvent
operator|)
name|notifyList
operator|.
name|get
argument_list|(
name|listSize
operator|-
literal|1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|alterTableE
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|validateAlterTableColumns
argument_list|(
name|tbl
argument_list|,
name|altTable
argument_list|,
name|alterTableE
operator|.
name|getOldTable
argument_list|()
argument_list|,
name|alterTableE
operator|.
name|getNewTable
argument_list|()
argument_list|)
expr_stmt|;
name|validateAlterTableColumns
argument_list|(
name|tbl
argument_list|,
name|altTable
argument_list|,
name|preAlterTableE
operator|.
name|getOldTable
argument_list|()
argument_list|,
name|preAlterTableE
operator|.
name|getNewTable
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|kvs
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|kvs
operator|.
name|put
argument_list|(
literal|"b"
argument_list|,
literal|"2011"
argument_list|)
expr_stmt|;
name|msc
operator|.
name|markPartitionForEvent
argument_list|(
literal|"hive2038"
argument_list|,
literal|"tmptbl"
argument_list|,
name|kvs
argument_list|,
name|PartitionEventType
operator|.
name|LOAD_DONE
argument_list|)
expr_stmt|;
name|listSize
operator|++
expr_stmt|;
name|assertEquals
argument_list|(
name|notifyList
operator|.
name|size
argument_list|()
argument_list|,
name|listSize
argument_list|)
expr_stmt|;
name|LoadPartitionDoneEvent
name|partMarkEvent
init|=
operator|(
name|LoadPartitionDoneEvent
operator|)
name|notifyList
operator|.
name|get
argument_list|(
name|listSize
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|partMarkEvent
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|validateLoadPartitionDone
argument_list|(
literal|"tmptbl"
argument_list|,
name|kvs
argument_list|,
name|partMarkEvent
operator|.
name|getTable
argument_list|()
operator|.
name|getTableName
argument_list|()
argument_list|,
name|partMarkEvent
operator|.
name|getPartitionName
argument_list|()
argument_list|)
expr_stmt|;
name|PreLoadPartitionDoneEvent
name|prePartMarkEvent
init|=
operator|(
name|PreLoadPartitionDoneEvent
operator|)
name|preNotifyList
operator|.
name|get
argument_list|(
name|preNotifyList
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
name|validateLoadPartitionDone
argument_list|(
literal|"tmptbl"
argument_list|,
name|kvs
argument_list|,
name|prePartMarkEvent
operator|.
name|getTableName
argument_list|()
argument_list|,
name|prePartMarkEvent
operator|.
name|getPartitionName
argument_list|()
argument_list|)
expr_stmt|;
name|msc
operator|.
name|dropPartition
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"2011"
argument_list|)
argument_list|)
expr_stmt|;
name|listSize
operator|++
expr_stmt|;
name|assertEquals
argument_list|(
name|notifyList
operator|.
name|size
argument_list|()
argument_list|,
name|listSize
argument_list|)
expr_stmt|;
name|PreDropPartitionEvent
name|preDropPart
init|=
operator|(
name|PreDropPartitionEvent
operator|)
name|preNotifyList
operator|.
name|get
argument_list|(
name|preNotifyList
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
name|DropPartitionEvent
name|dropPart
init|=
operator|(
name|DropPartitionEvent
operator|)
name|notifyList
operator|.
name|get
argument_list|(
name|listSize
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|dropPart
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|validateDropPartition
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|part
argument_list|)
operator|.
name|iterator
argument_list|()
argument_list|,
name|dropPart
operator|.
name|getPartitionIterator
argument_list|()
argument_list|)
expr_stmt|;
name|validateTableInDropPartition
argument_list|(
name|tbl
argument_list|,
name|dropPart
operator|.
name|getTable
argument_list|()
argument_list|)
expr_stmt|;
name|validateDropPartition
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|part
argument_list|)
operator|.
name|iterator
argument_list|()
argument_list|,
name|preDropPart
operator|.
name|getPartitionIterator
argument_list|()
argument_list|)
expr_stmt|;
name|validateTableInDropPartition
argument_list|(
name|tbl
argument_list|,
name|preDropPart
operator|.
name|getTable
argument_list|()
argument_list|)
expr_stmt|;
name|msc
operator|.
name|dropTable
argument_list|(
name|dbName
argument_list|,
name|tblName
argument_list|)
expr_stmt|;
name|listSize
operator|++
expr_stmt|;
name|assertEquals
argument_list|(
name|notifyList
operator|.
name|size
argument_list|()
argument_list|,
name|listSize
argument_list|)
expr_stmt|;
name|PreDropTableEvent
name|preDropTbl
init|=
operator|(
name|PreDropTableEvent
operator|)
name|preNotifyList
operator|.
name|get
argument_list|(
name|preNotifyList
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
name|DropTableEvent
name|dropTbl
init|=
operator|(
name|DropTableEvent
operator|)
name|notifyList
operator|.
name|get
argument_list|(
name|listSize
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|dropTbl
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|validateDropTable
argument_list|(
name|tbl
argument_list|,
name|dropTbl
operator|.
name|getTable
argument_list|()
argument_list|)
expr_stmt|;
name|validateDropTable
argument_list|(
name|tbl
argument_list|,
name|preDropTbl
operator|.
name|getTable
argument_list|()
argument_list|)
expr_stmt|;
name|msc
operator|.
name|dropDatabase
argument_list|(
name|dbName
argument_list|)
expr_stmt|;
name|listSize
operator|++
expr_stmt|;
name|assertEquals
argument_list|(
name|notifyList
operator|.
name|size
argument_list|()
argument_list|,
name|listSize
argument_list|)
expr_stmt|;
name|PreDropDatabaseEvent
name|preDropDB
init|=
operator|(
name|PreDropDatabaseEvent
operator|)
name|preNotifyList
operator|.
name|get
argument_list|(
name|preNotifyList
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
name|DropDatabaseEvent
name|dropDB
init|=
operator|(
name|DropDatabaseEvent
operator|)
name|notifyList
operator|.
name|get
argument_list|(
name|listSize
operator|-
literal|1
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|dropDB
operator|.
name|getStatus
argument_list|()
argument_list|)
expr_stmt|;
name|validateDropDb
argument_list|(
name|db
argument_list|,
name|dropDB
operator|.
name|getDatabase
argument_list|()
argument_list|)
expr_stmt|;
name|validateDropDb
argument_list|(
name|db
argument_list|,
name|preDropDB
operator|.
name|getDatabase
argument_list|()
argument_list|)
expr_stmt|;
name|msc
operator|.
name|setMetaConf
argument_list|(
literal|"metastore.try.direct.sql"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|ConfigChangeEvent
name|event
init|=
operator|(
name|ConfigChangeEvent
operator|)
name|notifyList
operator|.
name|get
argument_list|(
name|notifyList
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"metastore.try.direct.sql"
argument_list|,
name|event
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"true"
argument_list|,
name|event
operator|.
name|getOldValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"false"
argument_list|,
name|event
operator|.
name|getNewValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMetaConfNotifyListenersClosingClient
parameter_list|()
throws|throws
name|Exception
block|{
name|HiveMetaStoreClient
name|closingClient
init|=
operator|new
name|HiveMetaStoreClient
argument_list|(
name|conf
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|closingClient
operator|.
name|setMetaConf
argument_list|(
name|metaConfKey
argument_list|,
literal|"[test pattern modified]"
argument_list|)
expr_stmt|;
name|ConfigChangeEvent
name|event
init|=
operator|(
name|ConfigChangeEvent
operator|)
name|DummyListener
operator|.
name|getLastEvent
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|event
operator|.
name|getOldValue
argument_list|()
argument_list|,
name|metaConfVal
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|event
operator|.
name|getNewValue
argument_list|()
argument_list|,
literal|"[test pattern modified]"
argument_list|)
expr_stmt|;
name|closingClient
operator|.
name|close
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|2
operator|*
literal|1000
argument_list|)
expr_stmt|;
name|event
operator|=
operator|(
name|ConfigChangeEvent
operator|)
name|DummyListener
operator|.
name|getLastEvent
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|event
operator|.
name|getOldValue
argument_list|()
argument_list|,
literal|"[test pattern modified]"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|event
operator|.
name|getNewValue
argument_list|()
argument_list|,
name|metaConfVal
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMetaConfNotifyListenersNonClosingClient
parameter_list|()
throws|throws
name|Exception
block|{
name|HiveMetaStoreClient
name|nonClosingClient
init|=
operator|new
name|HiveMetaStoreClient
argument_list|(
name|conf
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|nonClosingClient
operator|.
name|setMetaConf
argument_list|(
name|metaConfKey
argument_list|,
literal|"[test pattern modified]"
argument_list|)
expr_stmt|;
name|ConfigChangeEvent
name|event
init|=
operator|(
name|ConfigChangeEvent
operator|)
name|DummyListener
operator|.
name|getLastEvent
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|event
operator|.
name|getOldValue
argument_list|()
argument_list|,
name|metaConfVal
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|event
operator|.
name|getNewValue
argument_list|()
argument_list|,
literal|"[test pattern modified]"
argument_list|)
expr_stmt|;
comment|// This should also trigger meta listener notification via TServerEventHandler#deleteContext
name|nonClosingClient
operator|.
name|getTTransport
argument_list|()
operator|.
name|close
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|2
operator|*
literal|1000
argument_list|)
expr_stmt|;
name|event
operator|=
operator|(
name|ConfigChangeEvent
operator|)
name|DummyListener
operator|.
name|getLastEvent
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|event
operator|.
name|getOldValue
argument_list|()
argument_list|,
literal|"[test pattern modified]"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|event
operator|.
name|getNewValue
argument_list|()
argument_list|,
name|metaConfVal
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMetaConfDuplicateNotification
parameter_list|()
throws|throws
name|Exception
block|{
name|HiveMetaStoreClient
name|closingClient
init|=
operator|new
name|HiveMetaStoreClient
argument_list|(
name|conf
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|closingClient
operator|.
name|setMetaConf
argument_list|(
name|metaConfKey
argument_list|,
name|metaConfVal
argument_list|)
expr_stmt|;
name|int
name|beforeCloseNotificationEventCounts
init|=
name|DummyListener
operator|.
name|notifyList
operator|.
name|size
argument_list|()
decl_stmt|;
name|closingClient
operator|.
name|close
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|2
operator|*
literal|1000
argument_list|)
expr_stmt|;
name|int
name|afterCloseNotificationEventCounts
init|=
name|DummyListener
operator|.
name|notifyList
operator|.
name|size
argument_list|()
decl_stmt|;
comment|// Setting key to same value, should not trigger configChange event during shutdown
name|assertEquals
argument_list|(
name|beforeCloseNotificationEventCounts
argument_list|,
name|afterCloseNotificationEventCounts
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMetaConfSameHandler
parameter_list|()
throws|throws
name|Exception
block|{
name|HiveMetaStoreClient
name|closingClient
init|=
operator|new
name|HiveMetaStoreClient
argument_list|(
name|conf
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|closingClient
operator|.
name|setMetaConf
argument_list|(
name|metaConfKey
argument_list|,
literal|"[test pattern modified]"
argument_list|)
expr_stmt|;
name|ConfigChangeEvent
name|event
init|=
operator|(
name|ConfigChangeEvent
operator|)
name|DummyListener
operator|.
name|getLastEvent
argument_list|()
decl_stmt|;
name|int
name|beforeCloseNotificationEventCounts
init|=
name|DummyListener
operator|.
name|notifyList
operator|.
name|size
argument_list|()
decl_stmt|;
name|IHMSHandler
name|beforeHandler
init|=
name|event
operator|.
name|getIHMSHandler
argument_list|()
decl_stmt|;
name|closingClient
operator|.
name|close
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|2
operator|*
literal|1000
argument_list|)
expr_stmt|;
name|event
operator|=
operator|(
name|ConfigChangeEvent
operator|)
name|DummyListener
operator|.
name|getLastEvent
argument_list|()
expr_stmt|;
name|int
name|afterCloseNotificationEventCounts
init|=
name|DummyListener
operator|.
name|notifyList
operator|.
name|size
argument_list|()
decl_stmt|;
name|IHMSHandler
name|afterHandler
init|=
name|event
operator|.
name|getIHMSHandler
argument_list|()
decl_stmt|;
comment|// Meta-conf cleanup should trigger an event to listener
name|assertNotSame
argument_list|(
name|beforeCloseNotificationEventCounts
argument_list|,
name|afterCloseNotificationEventCounts
argument_list|)
expr_stmt|;
comment|// Both the handlers should be same
name|assertEquals
argument_list|(
name|beforeHandler
argument_list|,
name|afterHandler
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

