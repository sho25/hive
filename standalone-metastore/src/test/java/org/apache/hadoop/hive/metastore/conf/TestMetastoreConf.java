begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|conf
operator|.
name|MetastoreConf
operator|.
name|ConfVars
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hamcrest
operator|.
name|core
operator|.
name|StringContains
import|;
end_import

begin_import
import|import
name|org
operator|.
name|hamcrest
operator|.
name|core
operator|.
name|StringEndsWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assume
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_class
specifier|public
class|class
name|TestMetastoreConf
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TestMetastoreConf
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|Configuration
name|conf
decl_stmt|;
specifier|private
name|Random
name|rand
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
annotation|@
name|After
specifier|public
name|void
name|unsetProperties
parameter_list|()
block|{
for|for
control|(
name|MetastoreConf
operator|.
name|ConfVars
name|var
range|:
name|MetastoreConf
operator|.
name|dataNucleusAndJdoConfs
control|)
block|{
name|System
operator|.
name|getProperties
argument_list|()
operator|.
name|remove
argument_list|(
name|var
operator|.
name|getVarname
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
class|class
name|TestClass1
implements|implements
name|Runnable
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{      }
block|}
specifier|static
class|class
name|TestClass2
implements|implements
name|Runnable
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{      }
block|}
specifier|private
name|void
name|createConfFile
parameter_list|(
name|String
name|fileName
parameter_list|,
name|boolean
name|inConf
parameter_list|,
name|String
name|envVar
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|properties
parameter_list|)
throws|throws
name|IOException
block|{
name|File
name|tmpDir
init|=
operator|new
name|File
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.io.tmpdir"
argument_list|)
argument_list|)
decl_stmt|;
name|File
name|dir
init|=
operator|new
name|File
argument_list|(
name|tmpDir
argument_list|,
name|randomFileName
argument_list|()
argument_list|)
decl_stmt|;
name|Assume
operator|.
name|assumeTrue
argument_list|(
name|dir
operator|.
name|mkdir
argument_list|()
argument_list|)
expr_stmt|;
name|dir
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
name|MetastoreConf
operator|.
name|TEST_ENV_WORKAROUND
operator|+
name|envVar
argument_list|,
name|dir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|inConf
condition|)
block|{
name|dir
operator|=
operator|new
name|File
argument_list|(
name|dir
argument_list|,
literal|"conf"
argument_list|)
expr_stmt|;
name|Assume
operator|.
name|assumeTrue
argument_list|(
name|dir
operator|.
name|mkdir
argument_list|()
argument_list|)
expr_stmt|;
name|dir
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
block|}
name|File
name|confFile
init|=
operator|new
name|File
argument_list|(
name|dir
argument_list|,
name|fileName
argument_list|)
decl_stmt|;
name|confFile
operator|.
name|deleteOnExit
argument_list|()
expr_stmt|;
name|FileWriter
name|writer
init|=
operator|new
name|FileWriter
argument_list|(
name|confFile
argument_list|)
decl_stmt|;
name|writer
operator|.
name|write
argument_list|(
literal|"<configuration>\n"
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
range|:
name|properties
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|writer
operator|.
name|write
argument_list|(
literal|"<property>\n"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|write
argument_list|(
literal|"<name>"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|write
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|write
argument_list|(
literal|"</name>\n"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|write
argument_list|(
literal|"<value>"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|write
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|write
argument_list|(
literal|"</value>\n"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|write
argument_list|(
literal|"</property>\n"
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|write
argument_list|(
literal|"</configuration>\n"
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|private
name|String
name|randomFileName
parameter_list|()
block|{
name|StringBuilder
name|buf
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|buf
operator|.
name|append
argument_list|(
call|(
name|char
call|)
argument_list|(
name|rand
operator|.
name|nextInt
argument_list|(
literal|26
argument_list|)
operator|+
literal|'a'
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|buf
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|instaMap
parameter_list|(
name|String
modifier|...
name|vals
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|properties
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|(
name|vals
operator|.
name|length
operator|/
literal|2
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|vals
operator|.
name|length
condition|;
name|i
operator|+=
literal|2
control|)
block|{
name|properties
operator|.
name|put
argument_list|(
name|vals
index|[
name|i
index|]
argument_list|,
name|vals
index|[
name|i
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
return|return
name|properties
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|defaults
parameter_list|()
block|{
name|conf
operator|=
name|MetastoreConf
operator|.
name|newMetastoreConf
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"defaultval"
argument_list|,
name|MetastoreConf
operator|.
name|getVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|STR_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|42
argument_list|,
name|MetastoreConf
operator|.
name|getLongVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|LONG_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3.141592654
argument_list|,
name|MetastoreConf
operator|.
name|getDoubleVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|DOUBLE_TEST_ENTRY
argument_list|)
argument_list|,
literal|0.0000001
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|MetastoreConf
operator|.
name|getBoolVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|BOOLEAN_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|MetastoreConf
operator|.
name|getTimeVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1000
argument_list|,
name|MetastoreConf
operator|.
name|getTimeVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|String
argument_list|>
name|list
init|=
name|MetastoreConf
operator|.
name|getStringCollection
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|STR_LIST_ENTRY
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|list
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|list
operator|.
name|contains
argument_list|(
literal|"a"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|list
operator|.
name|contains
argument_list|(
literal|"b"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|list
operator|.
name|contains
argument_list|(
literal|"c"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertSame
argument_list|(
name|TestClass1
operator|.
name|class
argument_list|,
name|MetastoreConf
operator|.
name|getClass
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|CLASS_TEST_ENTRY
argument_list|,
name|TestClass1
operator|.
name|class
argument_list|,
name|Runnable
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"defaultval"
argument_list|,
name|MetastoreConf
operator|.
name|get
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|STR_TEST_ENTRY
operator|.
name|getVarname
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"defaultval"
argument_list|,
name|MetastoreConf
operator|.
name|get
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|STR_TEST_ENTRY
operator|.
name|getHiveName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"defaultval"
argument_list|,
name|MetastoreConf
operator|.
name|getAsString
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|STR_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"42"
argument_list|,
name|MetastoreConf
operator|.
name|getAsString
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|LONG_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"3.141592654"
argument_list|,
name|MetastoreConf
operator|.
name|getAsString
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|DOUBLE_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"true"
argument_list|,
name|MetastoreConf
operator|.
name|getAsString
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|BOOLEAN_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|readMetastoreSiteWithMetastoreConfDir
parameter_list|()
throws|throws
name|IOException
block|{
name|createConfFile
argument_list|(
literal|"metastore-site.xml"
argument_list|,
literal|false
argument_list|,
literal|"METASTORE_CONF_DIR"
argument_list|,
name|instaMap
argument_list|(
literal|"test.str"
argument_list|,
literal|"notthedefault"
argument_list|,
literal|"test.long"
argument_list|,
literal|"37"
argument_list|,
literal|"test.double"
argument_list|,
literal|"1.8"
argument_list|,
literal|"test.bool"
argument_list|,
literal|"false"
argument_list|,
literal|"test.time"
argument_list|,
literal|"30s"
argument_list|,
literal|"test.str.list"
argument_list|,
literal|"d"
argument_list|,
literal|"test.class"
argument_list|,
name|TestClass2
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|=
name|MetastoreConf
operator|.
name|newMetastoreConf
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"notthedefault"
argument_list|,
name|MetastoreConf
operator|.
name|getVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|STR_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|37L
argument_list|,
name|MetastoreConf
operator|.
name|getLongVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|LONG_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|37
argument_list|,
name|MetastoreConf
operator|.
name|getIntVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|LONG_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1.8
argument_list|,
name|MetastoreConf
operator|.
name|getDoubleVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|DOUBLE_TEST_ENTRY
argument_list|)
argument_list|,
literal|0.01
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|30
argument_list|,
name|MetastoreConf
operator|.
name|getTimeVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|30000
argument_list|,
name|MetastoreConf
operator|.
name|getTimeVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|String
argument_list|>
name|list
init|=
name|MetastoreConf
operator|.
name|getStringCollection
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|STR_LIST_ENTRY
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|list
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|list
operator|.
name|contains
argument_list|(
literal|"d"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertSame
argument_list|(
name|TestClass2
operator|.
name|class
argument_list|,
name|MetastoreConf
operator|.
name|getClass
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|CLASS_TEST_ENTRY
argument_list|,
name|TestClass1
operator|.
name|class
argument_list|,
name|Runnable
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"1.8"
argument_list|,
name|MetastoreConf
operator|.
name|get
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|DOUBLE_TEST_ENTRY
operator|.
name|getVarname
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"1.8"
argument_list|,
name|MetastoreConf
operator|.
name|get
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|DOUBLE_TEST_ENTRY
operator|.
name|getHiveName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"notthedefault"
argument_list|,
name|MetastoreConf
operator|.
name|getAsString
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|STR_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"37"
argument_list|,
name|MetastoreConf
operator|.
name|getAsString
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|LONG_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"1.8"
argument_list|,
name|MetastoreConf
operator|.
name|getAsString
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|DOUBLE_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"false"
argument_list|,
name|MetastoreConf
operator|.
name|getAsString
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|BOOLEAN_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|readMetastoreSiteWithMetastoreHomeDir
parameter_list|()
throws|throws
name|IOException
block|{
name|createConfFile
argument_list|(
literal|"metastore-site.xml"
argument_list|,
literal|true
argument_list|,
literal|"METASTORE_HOME"
argument_list|,
name|instaMap
argument_list|(
literal|"test.long"
argument_list|,
literal|"24"
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|=
name|MetastoreConf
operator|.
name|newMetastoreConf
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|24
argument_list|,
name|MetastoreConf
operator|.
name|getLongVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|LONG_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|readHiveSiteWithHiveConfDir
parameter_list|()
throws|throws
name|IOException
block|{
name|createConfFile
argument_list|(
literal|"hive-site.xml"
argument_list|,
literal|false
argument_list|,
literal|"HIVE_CONF_DIR"
argument_list|,
name|instaMap
argument_list|(
literal|"test.double"
argument_list|,
literal|"1.8"
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|=
name|MetastoreConf
operator|.
name|newMetastoreConf
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1.8
argument_list|,
name|MetastoreConf
operator|.
name|getDoubleVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|DOUBLE_TEST_ENTRY
argument_list|)
argument_list|,
literal|0.01
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|readHiveSiteWithHiveHomeDir
parameter_list|()
throws|throws
name|IOException
block|{
name|createConfFile
argument_list|(
literal|"hive-site.xml"
argument_list|,
literal|true
argument_list|,
literal|"HIVE_HOME"
argument_list|,
name|instaMap
argument_list|(
literal|"test.bool"
argument_list|,
literal|"false"
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|=
name|MetastoreConf
operator|.
name|newMetastoreConf
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|MetastoreConf
operator|.
name|getBoolVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|BOOLEAN_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|readHiveMetastoreSiteWithHiveConfDir
parameter_list|()
throws|throws
name|IOException
block|{
name|createConfFile
argument_list|(
literal|"hivemetastore-site.xml"
argument_list|,
literal|false
argument_list|,
literal|"HIVE_CONF_DIR"
argument_list|,
name|instaMap
argument_list|(
literal|"test.double"
argument_list|,
literal|"1.8"
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|=
name|MetastoreConf
operator|.
name|newMetastoreConf
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1.8
argument_list|,
name|MetastoreConf
operator|.
name|getDoubleVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|DOUBLE_TEST_ENTRY
argument_list|)
argument_list|,
literal|0.01
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|readHiveMetastoreSiteWithHiveHomeDir
parameter_list|()
throws|throws
name|IOException
block|{
name|createConfFile
argument_list|(
literal|"hivemetastore-site.xml"
argument_list|,
literal|true
argument_list|,
literal|"HIVE_HOME"
argument_list|,
name|instaMap
argument_list|(
literal|"test.bool"
argument_list|,
literal|"false"
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|=
name|MetastoreConf
operator|.
name|newMetastoreConf
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|MetastoreConf
operator|.
name|getBoolVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|BOOLEAN_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|setAndRead
parameter_list|()
throws|throws
name|IOException
block|{
name|conf
operator|=
name|MetastoreConf
operator|.
name|newMetastoreConf
argument_list|()
expr_stmt|;
name|MetastoreConf
operator|.
name|setVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|STR_TEST_ENTRY
argument_list|,
literal|"notthedefault"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"notthedefault"
argument_list|,
name|MetastoreConf
operator|.
name|getVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|STR_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
name|MetastoreConf
operator|.
name|setDoubleVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|DOUBLE_TEST_ENTRY
argument_list|,
literal|1.8
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1.8
argument_list|,
name|MetastoreConf
operator|.
name|getDoubleVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|DOUBLE_TEST_ENTRY
argument_list|)
argument_list|,
literal|0.01
argument_list|)
expr_stmt|;
name|MetastoreConf
operator|.
name|setLongVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|LONG_TEST_ENTRY
argument_list|,
literal|24
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|24
argument_list|,
name|MetastoreConf
operator|.
name|getLongVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|LONG_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
name|MetastoreConf
operator|.
name|setTimeVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
argument_list|,
literal|5
argument_list|,
name|TimeUnit
operator|.
name|MINUTES
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|300
argument_list|,
name|MetastoreConf
operator|.
name|getTimeVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|300000
argument_list|,
name|MetastoreConf
operator|.
name|getTimeVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|valuesSetFromProperties
parameter_list|()
block|{
try|try
block|{
name|System
operator|.
name|setProperty
argument_list|(
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|STR_TEST_ENTRY
operator|.
name|getVarname
argument_list|()
argument_list|,
literal|"from-properties"
argument_list|)
expr_stmt|;
name|conf
operator|=
name|MetastoreConf
operator|.
name|newMetastoreConf
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"from-properties"
argument_list|,
name|MetastoreConf
operator|.
name|getVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|STR_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|System
operator|.
name|getProperties
argument_list|()
operator|.
name|remove
argument_list|(
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|STR_TEST_ENTRY
operator|.
name|getVarname
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|After
specifier|public
name|void
name|unsetEnvWorkAround
parameter_list|()
block|{
comment|// We have to unset the env workarounds so they don't confuse each other between tests.
name|System
operator|.
name|getProperties
argument_list|()
operator|.
name|remove
argument_list|(
name|MetastoreConf
operator|.
name|TEST_ENV_WORKAROUND
operator|+
literal|"METASTORE_CONF_DIR"
argument_list|)
expr_stmt|;
name|System
operator|.
name|getProperties
argument_list|()
operator|.
name|remove
argument_list|(
name|MetastoreConf
operator|.
name|TEST_ENV_WORKAROUND
operator|+
literal|"METASTORE_HOME"
argument_list|)
expr_stmt|;
name|System
operator|.
name|getProperties
argument_list|()
operator|.
name|remove
argument_list|(
name|MetastoreConf
operator|.
name|TEST_ENV_WORKAROUND
operator|+
literal|"HIVE_CONF_DIR"
argument_list|)
expr_stmt|;
name|System
operator|.
name|getProperties
argument_list|()
operator|.
name|remove
argument_list|(
name|MetastoreConf
operator|.
name|TEST_ENV_WORKAROUND
operator|+
literal|"HIVE_HOME"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|hiveNames
parameter_list|()
throws|throws
name|IOException
block|{
name|createConfFile
argument_list|(
literal|"metastore-site.xml"
argument_list|,
literal|false
argument_list|,
literal|"METASTORE_CONF_DIR"
argument_list|,
name|instaMap
argument_list|(
literal|"hive.test.str"
argument_list|,
literal|"hivedefault"
argument_list|,
literal|"hive.test.double"
argument_list|,
literal|"1.9"
argument_list|,
literal|"hive.test.long"
argument_list|,
literal|"89"
argument_list|,
literal|"hive.test.bool"
argument_list|,
literal|"false"
argument_list|,
literal|"hive.test.time"
argument_list|,
literal|"3s"
argument_list|,
literal|"hive.test.str.list"
argument_list|,
literal|"g,h,i,j"
argument_list|,
literal|"hive.test.class"
argument_list|,
name|TestClass2
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|=
name|MetastoreConf
operator|.
name|newMetastoreConf
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"hivedefault"
argument_list|,
name|MetastoreConf
operator|.
name|getVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|STR_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1.9
argument_list|,
name|MetastoreConf
operator|.
name|getDoubleVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|DOUBLE_TEST_ENTRY
argument_list|)
argument_list|,
literal|0.01
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|89L
argument_list|,
name|MetastoreConf
operator|.
name|getLongVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|LONG_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|89
argument_list|,
name|MetastoreConf
operator|.
name|getIntVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|LONG_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|MetastoreConf
operator|.
name|getTimeVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3000
argument_list|,
name|MetastoreConf
operator|.
name|getTimeVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|String
argument_list|>
name|list
init|=
name|MetastoreConf
operator|.
name|getStringCollection
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|STR_LIST_ENTRY
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|list
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|list
operator|.
name|contains
argument_list|(
literal|"g"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|list
operator|.
name|contains
argument_list|(
literal|"h"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|list
operator|.
name|contains
argument_list|(
literal|"i"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|list
operator|.
name|contains
argument_list|(
literal|"j"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertSame
argument_list|(
name|TestClass2
operator|.
name|class
argument_list|,
name|MetastoreConf
operator|.
name|getClass
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|CLASS_TEST_ENTRY
argument_list|,
name|TestClass1
operator|.
name|class
argument_list|,
name|Runnable
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"3s"
argument_list|,
name|MetastoreConf
operator|.
name|get
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
operator|.
name|getVarname
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"3s"
argument_list|,
name|MetastoreConf
operator|.
name|get
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
operator|.
name|getHiveName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"hivedefault"
argument_list|,
name|MetastoreConf
operator|.
name|getAsString
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|STR_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"89"
argument_list|,
name|MetastoreConf
operator|.
name|getAsString
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|LONG_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"1.9"
argument_list|,
name|MetastoreConf
operator|.
name|getAsString
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|DOUBLE_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"false"
argument_list|,
name|MetastoreConf
operator|.
name|getAsString
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|BOOLEAN_TEST_ENTRY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|timeUnits
parameter_list|()
throws|throws
name|IOException
block|{
name|conf
operator|=
name|MetastoreConf
operator|.
name|newMetastoreConf
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
operator|.
name|getVarname
argument_list|()
argument_list|,
literal|"30s"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|30
argument_list|,
name|MetastoreConf
operator|.
name|getTimeVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
operator|.
name|getVarname
argument_list|()
argument_list|,
literal|"30seconds"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|30
argument_list|,
name|MetastoreConf
operator|.
name|getTimeVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
operator|.
name|getVarname
argument_list|()
argument_list|,
literal|"30ms"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|30
argument_list|,
name|MetastoreConf
operator|.
name|getTimeVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
operator|.
name|getVarname
argument_list|()
argument_list|,
literal|"30msec"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|30
argument_list|,
name|MetastoreConf
operator|.
name|getTimeVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
argument_list|,
name|TimeUnit
operator|.
name|MILLISECONDS
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
operator|.
name|getVarname
argument_list|()
argument_list|,
literal|"30us"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|30
argument_list|,
name|MetastoreConf
operator|.
name|getTimeVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
argument_list|,
name|TimeUnit
operator|.
name|MICROSECONDS
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
operator|.
name|getVarname
argument_list|()
argument_list|,
literal|"30usec"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|30
argument_list|,
name|MetastoreConf
operator|.
name|getTimeVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
argument_list|,
name|TimeUnit
operator|.
name|MICROSECONDS
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
operator|.
name|getVarname
argument_list|()
argument_list|,
literal|"30m"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|30
argument_list|,
name|MetastoreConf
operator|.
name|getTimeVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
argument_list|,
name|TimeUnit
operator|.
name|MINUTES
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
operator|.
name|getVarname
argument_list|()
argument_list|,
literal|"30minutes"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|30
argument_list|,
name|MetastoreConf
operator|.
name|getTimeVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
argument_list|,
name|TimeUnit
operator|.
name|MINUTES
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
operator|.
name|getVarname
argument_list|()
argument_list|,
literal|"30ns"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|30
argument_list|,
name|MetastoreConf
operator|.
name|getTimeVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
argument_list|,
name|TimeUnit
operator|.
name|NANOSECONDS
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
operator|.
name|getVarname
argument_list|()
argument_list|,
literal|"30nsec"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|30
argument_list|,
name|MetastoreConf
operator|.
name|getTimeVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
argument_list|,
name|TimeUnit
operator|.
name|NANOSECONDS
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
operator|.
name|getVarname
argument_list|()
argument_list|,
literal|"30h"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|30
argument_list|,
name|MetastoreConf
operator|.
name|getTimeVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
argument_list|,
name|TimeUnit
operator|.
name|HOURS
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
operator|.
name|getVarname
argument_list|()
argument_list|,
literal|"30hours"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|30
argument_list|,
name|MetastoreConf
operator|.
name|getTimeVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
argument_list|,
name|TimeUnit
operator|.
name|HOURS
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
operator|.
name|getVarname
argument_list|()
argument_list|,
literal|"30d"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|30
argument_list|,
name|MetastoreConf
operator|.
name|getTimeVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
argument_list|,
name|TimeUnit
operator|.
name|DAYS
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
operator|.
name|getVarname
argument_list|()
argument_list|,
literal|"30days"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|30
argument_list|,
name|MetastoreConf
operator|.
name|getTimeVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
argument_list|,
name|TimeUnit
operator|.
name|DAYS
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|passedInDefaults
parameter_list|()
block|{
name|conf
operator|=
name|MetastoreConf
operator|.
name|newMetastoreConf
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"passed-in-defaultval"
argument_list|,
name|MetastoreConf
operator|.
name|getVar
argument_list|(
name|conf
argument_list|,
name|ConfVars
operator|.
name|STR_TEST_ENTRY
argument_list|,
literal|"passed-in-defaultval"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|validValidations
parameter_list|()
block|{
name|ConfVars
operator|.
name|STR_SET_ENTRY
operator|.
name|validate
argument_list|(
literal|"a"
argument_list|)
expr_stmt|;
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
operator|.
name|validate
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|ConfVars
operator|.
name|TIME_VALIDATOR_ENTRY_INCLUSIVE
operator|.
name|validate
argument_list|(
literal|"500ms"
argument_list|)
expr_stmt|;
name|ConfVars
operator|.
name|TIME_VALIDATOR_ENTRY_INCLUSIVE
operator|.
name|validate
argument_list|(
literal|"1500ms"
argument_list|)
expr_stmt|;
name|ConfVars
operator|.
name|TIME_VALIDATOR_ENTRY_INCLUSIVE
operator|.
name|validate
argument_list|(
literal|"1000ms"
argument_list|)
expr_stmt|;
name|ConfVars
operator|.
name|TIME_VALIDATOR_ENTRY_EXCLUSIVE
operator|.
name|validate
argument_list|(
literal|"1000ms"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|badSetEntry
parameter_list|()
block|{
name|ConfVars
operator|.
name|STR_SET_ENTRY
operator|.
name|validate
argument_list|(
literal|"d"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|badTimeEntry
parameter_list|()
block|{
name|ConfVars
operator|.
name|TIME_TEST_ENTRY
operator|.
name|validate
argument_list|(
literal|"1x"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|timeOutsideInclusive
parameter_list|()
block|{
name|ConfVars
operator|.
name|TIME_VALIDATOR_ENTRY_INCLUSIVE
operator|.
name|validate
argument_list|(
literal|"1day"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|timeMinExclusive
parameter_list|()
block|{
name|ConfVars
operator|.
name|TIME_VALIDATOR_ENTRY_EXCLUSIVE
operator|.
name|validate
argument_list|(
literal|"500ms"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|timeMaxExclusive
parameter_list|()
block|{
name|ConfVars
operator|.
name|TIME_VALIDATOR_ENTRY_EXCLUSIVE
operator|.
name|validate
argument_list|(
literal|"1500ms"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|timeOutsideExclusive
parameter_list|()
block|{
name|ConfVars
operator|.
name|TIME_VALIDATOR_ENTRY_EXCLUSIVE
operator|.
name|validate
argument_list|(
literal|"1min"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|unprintable
parameter_list|()
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|MetastoreConf
operator|.
name|isPrintable
argument_list|(
name|ConfVars
operator|.
name|STR_TEST_ENTRY
operator|.
name|getVarname
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|MetastoreConf
operator|.
name|isPrintable
argument_list|(
name|ConfVars
operator|.
name|PWD
operator|.
name|getVarname
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|MetastoreConf
operator|.
name|isPrintable
argument_list|(
name|ConfVars
operator|.
name|PWD
operator|.
name|getHiveName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|unsetValues
parameter_list|()
block|{
name|conf
operator|=
name|MetastoreConf
operator|.
name|newMetastoreConf
argument_list|()
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"a.random.key"
argument_list|,
literal|"abc"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|MetastoreConf
operator|.
name|get
argument_list|(
name|conf
argument_list|,
literal|"no.such.key.ever"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"abc"
argument_list|,
name|MetastoreConf
operator|.
name|get
argument_list|(
name|conf
argument_list|,
literal|"a.random.key"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|dumpConfig
parameter_list|()
throws|throws
name|IOException
block|{
name|createConfFile
argument_list|(
literal|"metastore-site.xml"
argument_list|,
literal|true
argument_list|,
literal|"METASTORE_HOME"
argument_list|,
name|instaMap
argument_list|(
literal|"test.long"
argument_list|,
literal|"23"
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|=
name|MetastoreConf
operator|.
name|newMetastoreConf
argument_list|()
expr_stmt|;
name|String
name|dump
init|=
name|MetastoreConf
operator|.
name|dumpConfig
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertThat
argument_list|(
name|dump
argument_list|,
operator|new
name|StringContains
argument_list|(
literal|"Used metastore-site file: file:/"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertThat
argument_list|(
name|dump
argument_list|,
operator|new
name|StringContains
argument_list|(
literal|"Key:<test.long> old hive key:<hive.test.long>  value:<23>"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertThat
argument_list|(
name|dump
argument_list|,
operator|new
name|StringContains
argument_list|(
literal|"Key:<test.str> old hive key:<hive.test.str>  value:<defaultval>"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertThat
argument_list|(
name|dump
argument_list|,
operator|new
name|StringEndsWith
argument_list|(
literal|"Finished MetastoreConf object.\n"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Make sure the hidden keys didn't get published
name|Assert
operator|.
name|assertThat
argument_list|(
name|dump
argument_list|,
name|CoreMatchers
operator|.
name|not
argument_list|(
operator|new
name|StringContains
argument_list|(
name|ConfVars
operator|.
name|PWD
operator|.
name|getVarname
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

