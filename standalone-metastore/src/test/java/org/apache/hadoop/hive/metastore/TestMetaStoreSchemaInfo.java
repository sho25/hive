begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|conf
operator|.
name|MetastoreConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test MetaStoreSchemaInfo  */
end_comment

begin_class
specifier|public
class|class
name|TestMetaStoreSchemaInfo
block|{
annotation|@
name|Test
specifier|public
name|void
name|testIsVersionCompatible
parameter_list|()
throws|throws
name|Exception
block|{
comment|// first argument is hiveVersion, it is compatible if 2nd argument - dbVersion is
comment|// greater than or equal to it
comment|// check the compatible case
name|IMetaStoreSchemaInfo
name|metastoreSchemaInfo
init|=
name|MetaStoreSchemaInfoFactory
operator|.
name|get
argument_list|(
name|MetastoreConf
operator|.
name|newMetastoreConf
argument_list|()
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|metastoreSchemaInfo
operator|.
name|isVersionCompatible
argument_list|(
literal|"0.0.1"
argument_list|,
literal|"0.0.1"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|metastoreSchemaInfo
operator|.
name|isVersionCompatible
argument_list|(
literal|"0.0.1"
argument_list|,
literal|"0.0.2"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|metastoreSchemaInfo
operator|.
name|isVersionCompatible
argument_list|(
literal|"1.0.2"
argument_list|,
literal|"2.0.1"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|metastoreSchemaInfo
operator|.
name|isVersionCompatible
argument_list|(
literal|"0.0.9"
argument_list|,
literal|"9.0.0"
argument_list|)
argument_list|)
expr_stmt|;
comment|// check equivalent versions, should be compatible
name|Assert
operator|.
name|assertTrue
argument_list|(
name|metastoreSchemaInfo
operator|.
name|isVersionCompatible
argument_list|(
literal|"0.13.0"
argument_list|,
literal|"0.13.1"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|metastoreSchemaInfo
operator|.
name|isVersionCompatible
argument_list|(
literal|"0.13.1"
argument_list|,
literal|"0.13.0"
argument_list|)
argument_list|)
expr_stmt|;
comment|// check incompatible versions
name|Assert
operator|.
name|assertFalse
argument_list|(
name|metastoreSchemaInfo
operator|.
name|isVersionCompatible
argument_list|(
literal|"0.1.1"
argument_list|,
literal|"0.1.0"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|metastoreSchemaInfo
operator|.
name|isVersionCompatible
argument_list|(
literal|"4.0.1"
argument_list|,
literal|"0.1.0"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

