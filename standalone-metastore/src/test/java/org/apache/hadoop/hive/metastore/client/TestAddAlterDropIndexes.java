begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|IMetaStoreClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|AlreadyExistsException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|FieldSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Index
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|InvalidObjectException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|InvalidOperationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|MetaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|NoSuchObjectException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|StorageDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|UnknownTableException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
operator|.
name|builder
operator|.
name|DatabaseBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
operator|.
name|builder
operator|.
name|IndexBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
operator|.
name|builder
operator|.
name|TableBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|minihms
operator|.
name|AbstractMetaStoreService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|TException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|transport
operator|.
name|TTransportException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_comment
comment|/**  * Tests for creating, altering and dropping indexes.  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|Parameterized
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestAddAlterDropIndexes
block|{
comment|// Needed until there is no junit release with @BeforeParam, @AfterParam (junit 4.13)
comment|// https://github.com/junit-team/junit4/commit/1bf8438b65858565dbb64736bfe13aae9cfc1b5a
comment|// Then we should remove our own copy
specifier|private
specifier|static
name|Set
argument_list|<
name|AbstractMetaStoreService
argument_list|>
name|metaStoreServices
init|=
literal|null
decl_stmt|;
specifier|private
name|AbstractMetaStoreService
name|metaStore
decl_stmt|;
specifier|private
name|IMetaStoreClient
name|client
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DB_NAME
init|=
literal|"testindexdb"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TABLE_NAME
init|=
literal|"testindextable"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|INDEX_NAME
init|=
literal|"testcreateindex"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|INDEX_TABLE_NAME
init|=
name|TABLE_NAME
operator|+
literal|"__"
operator|+
name|INDEX_NAME
operator|+
literal|"__"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|short
name|MAX
init|=
operator|-
literal|1
decl_stmt|;
annotation|@
name|Parameterized
operator|.
name|Parameters
argument_list|(
name|name
operator|=
literal|"{0}"
argument_list|)
specifier|public
specifier|static
name|List
argument_list|<
name|Object
index|[]
argument_list|>
name|getMetaStoreToTest
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Object
index|[]
argument_list|>
name|result
init|=
name|MetaStoreFactoryForTests
operator|.
name|getMetaStores
argument_list|()
decl_stmt|;
name|metaStoreServices
operator|=
name|result
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|test
lambda|->
operator|(
name|AbstractMetaStoreService
operator|)
name|test
index|[
literal|1
index|]
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toSet
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|TestAddAlterDropIndexes
parameter_list|(
name|String
name|name
parameter_list|,
name|AbstractMetaStoreService
name|metaStore
parameter_list|)
throws|throws
name|Exception
block|{
name|this
operator|.
name|metaStore
operator|=
name|metaStore
expr_stmt|;
name|this
operator|.
name|metaStore
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
comment|// Needed until there is no junit release with @BeforeParam, @AfterParam (junit 4.13)
comment|// https://github.com/junit-team/junit4/commit/1bf8438b65858565dbb64736bfe13aae9cfc1b5a
comment|// Then we should move this to @AfterParam
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|stopMetaStores
parameter_list|()
throws|throws
name|Exception
block|{
for|for
control|(
name|AbstractMetaStoreService
name|metaStoreService
range|:
name|metaStoreServices
control|)
block|{
name|metaStoreService
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Get new client
name|client
operator|=
name|metaStore
operator|.
name|getClient
argument_list|()
expr_stmt|;
comment|// Clean up the database
name|client
operator|.
name|dropDatabase
argument_list|(
name|DB_NAME
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|metaStore
operator|.
name|cleanWarehouseDirs
argument_list|()
expr_stmt|;
name|createDB
argument_list|(
name|DB_NAME
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
if|if
condition|(
name|client
operator|!=
literal|null
condition|)
block|{
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|client
operator|=
literal|null
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateGetAndDropIndex
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|indexHandlerName
init|=
literal|"TestIndexHandlerClass"
decl_stmt|;
name|String
name|inputFormatName
init|=
literal|"TestInputFormat"
decl_stmt|;
name|String
name|outputFormatName
init|=
literal|"TestOutputFormat"
decl_stmt|;
name|String
name|indexParamKey
init|=
literal|"indexParamKey"
decl_stmt|;
name|String
name|indexParamValue
init|=
literal|"indexParamValue"
decl_stmt|;
name|String
name|sdParamKey
init|=
literal|"indexSdParamKey"
decl_stmt|;
name|String
name|sdParamValue
init|=
literal|"indexSdParamValue"
decl_stmt|;
name|int
name|createTime
init|=
call|(
name|int
call|)
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|/
literal|1000
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
name|indexParamKey
argument_list|,
name|indexParamValue
argument_list|)
expr_stmt|;
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
expr_stmt|;
name|Index
name|index
init|=
operator|new
name|IndexBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|DB_NAME
argument_list|)
operator|.
name|setTableName
argument_list|(
name|TABLE_NAME
argument_list|)
operator|.
name|setIndexName
argument_list|(
name|INDEX_NAME
argument_list|)
operator|.
name|setIndexTableName
argument_list|(
name|INDEX_TABLE_NAME
argument_list|)
operator|.
name|setCreateTime
argument_list|(
name|createTime
argument_list|)
operator|.
name|setLastAccessTime
argument_list|(
name|createTime
argument_list|)
operator|.
name|addCol
argument_list|(
literal|"id"
argument_list|,
literal|"int"
argument_list|,
literal|"test col id"
argument_list|)
operator|.
name|addCol
argument_list|(
literal|"value"
argument_list|,
literal|"string"
argument_list|,
literal|"test col value"
argument_list|)
operator|.
name|setDeferredRebuild
argument_list|(
literal|false
argument_list|)
operator|.
name|setIndexParams
argument_list|(
name|params
argument_list|)
operator|.
name|setHandlerClass
argument_list|(
name|indexHandlerName
argument_list|)
operator|.
name|setInputFormat
argument_list|(
name|inputFormatName
argument_list|)
operator|.
name|setOutputFormat
argument_list|(
name|outputFormatName
argument_list|)
operator|.
name|setSerdeName
argument_list|(
name|INDEX_TABLE_NAME
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
name|sdParamKey
argument_list|,
name|sdParamValue
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|createIndex
argument_list|(
name|index
argument_list|,
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
name|INDEX_TABLE_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|Index
name|resultIndex
init|=
name|client
operator|.
name|getIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|resultIndex
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|DB_NAME
argument_list|,
name|resultIndex
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TABLE_NAME
argument_list|,
name|resultIndex
operator|.
name|getOrigTableName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|INDEX_NAME
argument_list|,
name|resultIndex
operator|.
name|getIndexName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|INDEX_TABLE_NAME
argument_list|,
name|resultIndex
operator|.
name|getIndexTableName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|createTime
argument_list|,
name|resultIndex
operator|.
name|getLastAccessTime
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|resultIndex
operator|.
name|getParameters
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|indexParamValue
argument_list|,
name|resultIndex
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
name|indexParamKey
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|indexHandlerName
argument_list|,
name|resultIndex
operator|.
name|getIndexHandlerClass
argument_list|()
argument_list|)
expr_stmt|;
name|StorageDescriptor
name|sd
init|=
name|resultIndex
operator|.
name|getSd
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|sd
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|FieldSchema
argument_list|>
name|cols
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|FieldSchema
name|col
range|:
name|sd
operator|.
name|getCols
argument_list|()
control|)
block|{
name|cols
operator|.
name|put
argument_list|(
name|col
operator|.
name|getName
argument_list|()
argument_list|,
name|col
argument_list|)
expr_stmt|;
block|}
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|cols
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|cols
operator|.
name|get
argument_list|(
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|cols
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"int"
argument_list|,
name|cols
operator|.
name|get
argument_list|(
literal|"id"
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"string"
argument_list|,
name|cols
operator|.
name|get
argument_list|(
literal|"value"
argument_list|)
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|inputFormatName
argument_list|,
name|sd
operator|.
name|getInputFormat
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|outputFormatName
argument_list|,
name|sd
operator|.
name|getOutputFormat
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|INDEX_TABLE_NAME
argument_list|,
name|sd
operator|.
name|getSerdeInfo
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|sd
operator|.
name|getParameters
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|sdParamValue
argument_list|,
name|sd
operator|.
name|getParameters
argument_list|()
operator|.
name|get
argument_list|(
name|sdParamKey
argument_list|)
argument_list|)
expr_stmt|;
name|Table
name|indexTable
init|=
name|client
operator|.
name|getTable
argument_list|(
name|DB_NAME
argument_list|,
name|INDEX_TABLE_NAME
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|indexTable
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|metaStore
operator|.
name|isPathExists
argument_list|(
operator|new
name|Path
argument_list|(
name|indexTable
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|indexNames
init|=
name|client
operator|.
name|listIndexNames
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|MAX
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|indexNames
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|indexNames
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|tableNames
init|=
name|client
operator|.
name|listTableNamesByFilter
argument_list|(
name|DB_NAME
argument_list|,
literal|""
argument_list|,
name|MAX
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|tableNames
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|tableNames
operator|.
name|contains
argument_list|(
name|INDEX_TABLE_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|metaStore
operator|.
name|isPathExists
argument_list|(
operator|new
name|Path
argument_list|(
name|indexTable
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Create index tests
annotation|@
name|Test
specifier|public
name|void
name|testCreateIndexesSameNameDifferentOrigAndIndexTables
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|origTableName1
init|=
name|TABLE_NAME
operator|+
literal|"1"
decl_stmt|;
name|String
name|origTableName2
init|=
name|TABLE_NAME
operator|+
literal|"2"
decl_stmt|;
name|String
name|indexNameTableName1
init|=
name|origTableName1
operator|+
literal|"__"
operator|+
name|INDEX_NAME
decl_stmt|;
name|String
name|indexNameTableName2
init|=
name|origTableName2
operator|+
literal|"__"
operator|+
name|INDEX_NAME
decl_stmt|;
name|Table
name|origTable1
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|origTableName1
argument_list|)
decl_stmt|;
name|Table
name|origTable2
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|origTableName2
argument_list|)
decl_stmt|;
name|createIndex
argument_list|(
name|DB_NAME
argument_list|,
name|origTable1
argument_list|,
name|INDEX_NAME
argument_list|,
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
name|indexNameTableName1
argument_list|)
argument_list|)
expr_stmt|;
name|createIndex
argument_list|(
name|DB_NAME
argument_list|,
name|origTable2
argument_list|,
name|INDEX_NAME
argument_list|,
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
name|indexNameTableName2
argument_list|)
argument_list|)
expr_stmt|;
name|verifyIndex
argument_list|(
name|DB_NAME
argument_list|,
name|origTableName1
argument_list|,
name|INDEX_NAME
argument_list|,
name|indexNameTableName1
argument_list|)
expr_stmt|;
name|verifyIndex
argument_list|(
name|DB_NAME
argument_list|,
name|origTableName2
argument_list|,
name|INDEX_NAME
argument_list|,
name|indexNameTableName2
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropIndex
argument_list|(
name|DB_NAME
argument_list|,
name|origTableName1
argument_list|,
name|INDEX_NAME
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropIndex
argument_list|(
name|DB_NAME
argument_list|,
name|origTableName2
argument_list|,
name|INDEX_NAME
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateIndexStrangeCharsInName
parameter_list|()
throws|throws
name|Exception
block|{
comment|// TODO: Special character should not be allowed in index name.
name|Table
name|origTable
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
decl_stmt|;
name|Table
name|indexTable
init|=
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
name|INDEX_TABLE_NAME
argument_list|)
decl_stmt|;
name|String
name|indexName
init|=
literal|"§±!;@#$%^&*()_+}{|-=[]\':|?><"
decl_stmt|;
name|createIndex
argument_list|(
name|DB_NAME
argument_list|,
name|origTable
argument_list|,
name|indexName
argument_list|,
name|indexTable
argument_list|)
expr_stmt|;
name|verifyIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|indexName
argument_list|,
name|INDEX_TABLE_NAME
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|indexName
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateIndexWithUpperCaseName
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|origTable
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
decl_stmt|;
name|String
name|indexName
init|=
literal|"UPPERCASE_INDEX_NAME"
decl_stmt|;
name|String
name|indexTableName
init|=
literal|"UPPERCASE_INDEX_TABLE_NAME"
decl_stmt|;
name|Table
name|indexTable
init|=
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
name|indexTableName
argument_list|)
decl_stmt|;
name|createIndex
argument_list|(
name|DB_NAME
argument_list|,
name|origTable
argument_list|,
name|indexName
argument_list|,
name|indexTable
argument_list|)
expr_stmt|;
name|verifyIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|indexName
operator|.
name|toLowerCase
argument_list|()
argument_list|,
name|indexTableName
operator|.
name|toLowerCase
argument_list|()
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|indexName
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AlreadyExistsException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateIndexesWithSameOrigAndIndexTable
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|origTable
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
decl_stmt|;
name|Table
name|indexTable
init|=
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
name|INDEX_TABLE_NAME
argument_list|)
decl_stmt|;
name|createIndex
argument_list|(
name|DB_NAME
argument_list|,
name|origTable
argument_list|,
name|INDEX_NAME
argument_list|,
name|indexTable
argument_list|)
expr_stmt|;
name|createIndex
argument_list|(
name|DB_NAME
argument_list|,
name|origTable
argument_list|,
name|INDEX_NAME
argument_list|,
name|indexTable
argument_list|)
expr_stmt|;
name|checkIfIndexExists
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|AlreadyExistsException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateIndexesWithSameNameAndOrigTableDifferentIndexTable
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|origTable
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
decl_stmt|;
name|String
name|indexTableName1
init|=
name|origTable
operator|.
name|getTableName
argument_list|()
operator|+
literal|"__"
operator|+
name|INDEX_NAME
operator|+
literal|"_1"
decl_stmt|;
name|String
name|indexTableName2
init|=
name|origTable
operator|.
name|getTableName
argument_list|()
operator|+
literal|"__"
operator|+
name|INDEX_NAME
operator|+
literal|"_2"
decl_stmt|;
name|createIndex
argument_list|(
name|DB_NAME
argument_list|,
name|origTable
argument_list|,
name|INDEX_NAME
argument_list|,
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
name|indexTableName1
argument_list|)
argument_list|)
expr_stmt|;
name|createIndex
argument_list|(
name|DB_NAME
argument_list|,
name|origTable
argument_list|,
name|INDEX_NAME
argument_list|,
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
name|indexTableName2
argument_list|)
argument_list|)
expr_stmt|;
name|checkIfIndexExists
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateIndexWithExistingIndexTable
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|origTable
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
decl_stmt|;
name|Table
name|indexTable
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|INDEX_TABLE_NAME
argument_list|)
decl_stmt|;
name|createIndex
argument_list|(
name|DB_NAME
argument_list|,
name|origTable
argument_list|,
name|INDEX_NAME
argument_list|,
name|indexTable
argument_list|)
expr_stmt|;
name|checkIfIndexListEmpty
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateIndexNullIndexTableName
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|origTable
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
decl_stmt|;
name|Table
name|indexTable
init|=
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|createIndex
argument_list|(
name|DB_NAME
argument_list|,
name|origTable
argument_list|,
name|INDEX_NAME
argument_list|,
name|indexTable
argument_list|)
expr_stmt|;
name|checkIfIndexExists
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateIndexEmptyIndexTableName
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|origTable
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
decl_stmt|;
name|Table
name|indexTable
init|=
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|createIndex
argument_list|(
name|DB_NAME
argument_list|,
name|origTable
argument_list|,
name|INDEX_NAME
argument_list|,
name|indexTable
argument_list|)
expr_stmt|;
name|checkIfIndexListEmpty
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateIndexesWithSameIndexTable
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|origTableName1
init|=
literal|"testindextable1"
decl_stmt|;
name|String
name|origTableName2
init|=
literal|"testindextable2"
decl_stmt|;
name|String
name|indexName1
init|=
literal|"testindex1"
decl_stmt|;
name|String
name|indexName2
init|=
literal|"testindex2"
decl_stmt|;
name|String
name|indexTableName
init|=
name|origTableName1
operator|+
literal|"__"
operator|+
name|indexName1
decl_stmt|;
name|Table
name|origTable1
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|origTableName1
argument_list|)
decl_stmt|;
name|Table
name|origTable2
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|origTableName2
argument_list|)
decl_stmt|;
name|Table
name|indexTable
init|=
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
name|indexTableName
argument_list|)
decl_stmt|;
name|createIndex
argument_list|(
name|DB_NAME
argument_list|,
name|origTable1
argument_list|,
name|indexName1
argument_list|,
name|indexTable
argument_list|)
expr_stmt|;
name|createIndex
argument_list|(
name|DB_NAME
argument_list|,
name|origTable2
argument_list|,
name|indexName2
argument_list|,
name|indexTable
argument_list|)
expr_stmt|;
name|checkIfIndexExists
argument_list|(
name|DB_NAME
argument_list|,
name|origTableName1
argument_list|,
name|indexName1
argument_list|)
expr_stmt|;
name|checkIfIndexListEmpty
argument_list|(
name|DB_NAME
argument_list|,
name|origTableName2
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropIndex
argument_list|(
name|DB_NAME
argument_list|,
name|origTableName1
argument_list|,
name|indexName1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateIndexWithNonExistingDB
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|origTable
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
decl_stmt|;
name|Table
name|indexTable
init|=
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
name|INDEX_TABLE_NAME
argument_list|)
decl_stmt|;
name|createIndex
argument_list|(
literal|"nonexistingdb"
argument_list|,
name|origTable
argument_list|,
name|INDEX_NAME
argument_list|,
name|indexTable
argument_list|)
expr_stmt|;
name|checkIfIndexListEmpty
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateIndexWithNullDBName
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|origTable
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
decl_stmt|;
name|Table
name|indexTable
init|=
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
name|INDEX_TABLE_NAME
argument_list|)
decl_stmt|;
name|createIndex
argument_list|(
literal|null
argument_list|,
name|origTable
argument_list|,
name|INDEX_NAME
argument_list|,
name|indexTable
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateIndexNonExistingOrigTable
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|indexTable
init|=
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
name|INDEX_TABLE_NAME
argument_list|)
decl_stmt|;
name|Index
name|index
init|=
name|buildIndexWithDefaultValues
argument_list|()
decl_stmt|;
name|index
operator|.
name|setOrigTableName
argument_list|(
literal|"nonexistingtable"
argument_list|)
expr_stmt|;
name|client
operator|.
name|createIndex
argument_list|(
name|index
argument_list|,
name|indexTable
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateIndexNullOrigTable
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|indexTable
init|=
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
name|INDEX_TABLE_NAME
argument_list|)
decl_stmt|;
name|Index
name|index
init|=
name|buildIndexWithDefaultValues
argument_list|()
decl_stmt|;
name|index
operator|.
name|setOrigTableName
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|client
operator|.
name|createIndex
argument_list|(
name|index
argument_list|,
name|indexTable
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateIndexNullIndex
parameter_list|()
throws|throws
name|Exception
block|{
comment|// TODO: NPE should not be thrown.
name|Table
name|indexTable
init|=
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
name|INDEX_TABLE_NAME
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|createIndex
argument_list|(
literal|null
argument_list|,
name|indexTable
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"TTransportException or NullPointerException should have happened"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TTransportException
decl||
name|NullPointerException
name|e
parameter_list|)
block|{
comment|// Expected exception
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateIndexNullIndexTable
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
expr_stmt|;
name|Index
name|index
init|=
operator|new
name|IndexBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|DB_NAME
argument_list|)
operator|.
name|setTableName
argument_list|(
name|TABLE_NAME
argument_list|)
operator|.
name|setIndexName
argument_list|(
name|INDEX_NAME
argument_list|)
operator|.
name|setIndexTableName
argument_list|(
literal|null
argument_list|)
operator|.
name|addCol
argument_list|(
literal|"id"
argument_list|,
literal|"int"
argument_list|,
literal|"test col id"
argument_list|)
operator|.
name|addCol
argument_list|(
literal|"value"
argument_list|,
literal|"string"
argument_list|,
literal|"test col value"
argument_list|)
operator|.
name|setDeferredRebuild
argument_list|(
literal|false
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|createIndex
argument_list|(
name|index
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateIndexWithEmptyOrigTable
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|indexTable
init|=
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
name|INDEX_TABLE_NAME
argument_list|)
decl_stmt|;
name|Index
name|index
init|=
name|buildIndexWithDefaultValues
argument_list|()
decl_stmt|;
name|index
operator|.
name|setOrigTableName
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|client
operator|.
name|createIndex
argument_list|(
name|index
argument_list|,
name|indexTable
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateIndexWithEmptyDBName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
expr_stmt|;
name|Index
name|index
init|=
name|buildIndexWithDefaultValues
argument_list|()
decl_stmt|;
name|index
operator|.
name|setDbName
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|client
operator|.
name|createIndex
argument_list|(
name|index
argument_list|,
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
name|INDEX_TABLE_NAME
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testCreateIndexNullIndexName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
expr_stmt|;
name|Index
name|index
init|=
name|buildIndexWithDefaultValues
argument_list|()
decl_stmt|;
name|index
operator|.
name|setIndexTableName
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|client
operator|.
name|createIndex
argument_list|(
name|index
argument_list|,
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
name|INDEX_TABLE_NAME
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateIndexEmptyIndexName
parameter_list|()
throws|throws
name|Exception
block|{
name|Table
name|origTable
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
decl_stmt|;
name|Table
name|indexTable
init|=
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
name|INDEX_TABLE_NAME
argument_list|)
decl_stmt|;
name|createIndex
argument_list|(
name|DB_NAME
argument_list|,
name|origTable
argument_list|,
literal|""
argument_list|,
name|indexTable
argument_list|)
expr_stmt|;
name|checkIfIndexExists
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
literal|""
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateIndexWithDifferentIndexTableName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
expr_stmt|;
name|Index
name|index
init|=
name|buildIndexWithDefaultValues
argument_list|()
decl_stmt|;
name|index
operator|.
name|setIndexTableName
argument_list|(
literal|"differentindextablename"
argument_list|)
expr_stmt|;
name|Table
name|indexTable
init|=
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
name|INDEX_TABLE_NAME
argument_list|)
decl_stmt|;
name|client
operator|.
name|createIndex
argument_list|(
name|index
argument_list|,
name|indexTable
argument_list|)
expr_stmt|;
name|checkIfIndexListEmpty
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|tableNames
init|=
name|client
operator|.
name|listTableNamesByFilter
argument_list|(
name|DB_NAME
argument_list|,
literal|""
argument_list|,
name|MAX
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|tableNames
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|tableNames
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TABLE_NAME
argument_list|,
name|tableNames
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|metaStore
operator|.
name|isPathExists
argument_list|(
operator|new
name|Path
argument_list|(
name|indexTable
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateIndexWithDifferentDBInIndexTableAndIndex
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
expr_stmt|;
name|String
name|dbName
init|=
literal|"second_index_db"
decl_stmt|;
name|createDB
argument_list|(
name|dbName
argument_list|)
expr_stmt|;
name|Index
name|index
init|=
name|buildIndexWithDefaultValues
argument_list|()
decl_stmt|;
name|Table
name|indexTable
init|=
name|buildTable
argument_list|(
name|dbName
argument_list|,
name|INDEX_TABLE_NAME
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|metaStore
operator|.
name|isPathExists
argument_list|(
operator|new
name|Path
argument_list|(
name|indexTable
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|createIndex
argument_list|(
name|index
argument_list|,
name|indexTable
argument_list|)
expr_stmt|;
name|checkIfIndexListEmpty
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
expr_stmt|;
name|checkIfIndexListEmpty
argument_list|(
name|dbName
argument_list|,
name|TABLE_NAME
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|tableNames
init|=
name|client
operator|.
name|listTableNamesByFilter
argument_list|(
name|DB_NAME
argument_list|,
literal|""
argument_list|,
name|MAX
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|tableNames
operator|.
name|contains
argument_list|(
name|INDEX_TABLE_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|tableNames
operator|=
name|client
operator|.
name|listTableNamesByFilter
argument_list|(
name|dbName
argument_list|,
literal|""
argument_list|,
name|MAX
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|tableNames
operator|.
name|contains
argument_list|(
name|INDEX_TABLE_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|metaStore
operator|.
name|isPathExists
argument_list|(
operator|new
name|Path
argument_list|(
name|indexTable
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropDatabase
argument_list|(
name|dbName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateIndexDifferentColsInIndexAndIndexTable
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
expr_stmt|;
name|Table
name|indexTable
init|=
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
name|INDEX_TABLE_NAME
argument_list|)
decl_stmt|;
name|Index
name|index
init|=
operator|new
name|IndexBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|DB_NAME
argument_list|)
operator|.
name|setTableName
argument_list|(
name|TABLE_NAME
argument_list|)
operator|.
name|setIndexName
argument_list|(
name|INDEX_NAME
argument_list|)
operator|.
name|setIndexTableName
argument_list|(
name|INDEX_TABLE_NAME
argument_list|)
operator|.
name|addCol
argument_list|(
literal|"test_name"
argument_list|,
literal|"string"
argument_list|,
literal|"test col name"
argument_list|)
operator|.
name|setDeferredRebuild
argument_list|(
literal|false
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|createIndex
argument_list|(
name|index
argument_list|,
name|indexTable
argument_list|)
expr_stmt|;
name|Index
name|resultIndex
init|=
name|client
operator|.
name|getIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|resultIndex
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|INDEX_NAME
argument_list|,
name|resultIndex
operator|.
name|getIndexName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TABLE_NAME
argument_list|,
name|resultIndex
operator|.
name|getOrigTableName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|INDEX_TABLE_NAME
argument_list|,
name|resultIndex
operator|.
name|getIndexTableName
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|colsInIndex
init|=
name|resultIndex
operator|.
name|getSd
argument_list|()
operator|.
name|getCols
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|colsInIndex
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"test_name"
argument_list|,
name|colsInIndex
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Table
name|indexTableResult
init|=
name|client
operator|.
name|getTable
argument_list|(
name|DB_NAME
argument_list|,
name|INDEX_TABLE_NAME
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|indexTableResult
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|colsInIndexTable
init|=
name|indexTableResult
operator|.
name|getSd
argument_list|()
operator|.
name|getCols
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|colsInIndexTable
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|colsInIndexTable
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"id"
argument_list|,
name|colsInIndexTable
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"value"
argument_list|,
name|colsInIndexTable
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateIndexWithNullSd
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
expr_stmt|;
name|Index
name|index
init|=
name|buildIndexWithDefaultValues
argument_list|()
decl_stmt|;
name|index
operator|.
name|setSd
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|client
operator|.
name|createIndex
argument_list|(
name|index
argument_list|,
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
name|INDEX_TABLE_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|checkIfIndexListEmpty
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
expr_stmt|;
block|}
comment|// Drop index tests
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testDropIndexInvalidDB
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
name|INDEX_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropIndex
argument_list|(
literal|"nonexistingdb"
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verifyIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
name|INDEX_TABLE_NAME
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testDropIndexInvalidTable
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
name|INDEX_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropIndex
argument_list|(
name|DB_NAME
argument_list|,
literal|"wrongtablename"
argument_list|,
name|INDEX_NAME
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verifyIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
name|INDEX_TABLE_NAME
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testDropIndexInvalidIndex
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
name|INDEX_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
literal|"invalidindexname"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|verifyIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
name|INDEX_TABLE_NAME
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testDropIndexNullDBName
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|dropIndex
argument_list|(
literal|null
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testDropIndexNullTableName
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|dropIndex
argument_list|(
name|DB_NAME
argument_list|,
literal|null
argument_list|,
name|INDEX_NAME
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testDropIndexNullIndexName
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|dropIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testDropIndexEmptyDBName
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|dropIndex
argument_list|(
literal|""
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testDropIndexEmptyTableName
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|dropIndex
argument_list|(
name|DB_NAME
argument_list|,
literal|""
argument_list|,
name|INDEX_NAME
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testDropIndexEmptyIndexName
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|dropIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
literal|""
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
comment|// Alter index tests
annotation|@
name|Test
specifier|public
name|void
name|testAlterIndex
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Only index parameters are allowed to be altered
name|String
name|indexTableName
init|=
name|TABLE_NAME
operator|+
literal|"__"
operator|+
name|INDEX_NAME
operator|+
literal|"__"
decl_stmt|;
name|int
name|oldCreateTime
init|=
call|(
name|int
call|)
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|/
literal|1000
argument_list|)
decl_stmt|;
name|String
name|oldHandlerClassName
init|=
literal|"TestHandlerClass1"
decl_stmt|;
name|String
name|oldLocation
init|=
literal|"/index/test/path1"
decl_stmt|;
name|String
name|oldInputFormat
init|=
literal|"org.apache.hadoop.hive.ql.io.HiveInputFormat"
decl_stmt|;
name|String
name|oldOutputFormat
init|=
literal|"org.apache.hadoop.hive.ql.io.HiveOutputFormat"
decl_stmt|;
name|String
name|oldIndexParamKey
init|=
literal|"indexParamKey1"
decl_stmt|;
name|String
name|oldIndexParamValue
init|=
literal|"indexParamValue1"
decl_stmt|;
name|String
name|oldIndexSdParamKey
init|=
literal|"sdparamkey1"
decl_stmt|;
name|String
name|oldIndexSdParamValue
init|=
literal|"sdparamvalue1"
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|indexParams
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|indexParams
operator|.
name|put
argument_list|(
name|oldIndexParamKey
argument_list|,
name|oldIndexParamValue
argument_list|)
expr_stmt|;
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
expr_stmt|;
name|Index
name|index
init|=
operator|new
name|IndexBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|DB_NAME
argument_list|)
operator|.
name|setTableName
argument_list|(
name|TABLE_NAME
argument_list|)
operator|.
name|setIndexName
argument_list|(
name|INDEX_NAME
argument_list|)
operator|.
name|setIndexTableName
argument_list|(
name|indexTableName
argument_list|)
operator|.
name|setCreateTime
argument_list|(
name|oldCreateTime
argument_list|)
operator|.
name|setLastAccessTime
argument_list|(
name|oldCreateTime
argument_list|)
operator|.
name|addCol
argument_list|(
literal|"id"
argument_list|,
literal|"int"
argument_list|,
literal|"test col id"
argument_list|)
operator|.
name|addCol
argument_list|(
literal|"value"
argument_list|,
literal|"string"
argument_list|,
literal|"test col value"
argument_list|)
operator|.
name|setDeferredRebuild
argument_list|(
literal|false
argument_list|)
operator|.
name|setIndexParams
argument_list|(
name|indexParams
argument_list|)
operator|.
name|setHandlerClass
argument_list|(
name|oldHandlerClassName
argument_list|)
operator|.
name|setLocation
argument_list|(
name|oldLocation
argument_list|)
operator|.
name|setInputFormat
argument_list|(
name|oldInputFormat
argument_list|)
operator|.
name|setOutputFormat
argument_list|(
name|oldOutputFormat
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
name|oldIndexSdParamKey
argument_list|,
name|oldIndexSdParamValue
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|createIndex
argument_list|(
name|index
argument_list|,
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
name|indexTableName
argument_list|)
argument_list|)
expr_stmt|;
name|Index
name|oldIndex
init|=
name|client
operator|.
name|getIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|)
decl_stmt|;
name|int
name|newCreateTime
init|=
call|(
name|int
call|)
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|/
literal|1000
argument_list|)
decl_stmt|;
name|String
name|newHandlerClassName
init|=
literal|"TestHandlerClass2"
decl_stmt|;
name|String
name|newLocation
init|=
literal|"/index/test/path2"
decl_stmt|;
name|String
name|newInputFormat
init|=
literal|"NewInputFormat"
decl_stmt|;
name|String
name|newOutputFormat
init|=
literal|"NewOutputFormat"
decl_stmt|;
name|String
name|newIndexParamValue
init|=
literal|"indexParamValue2"
decl_stmt|;
name|String
name|newIndexSdParamKey
init|=
literal|"sdparamkey2"
decl_stmt|;
name|String
name|newIndexSdParamValue
init|=
literal|"sdparamvalue2"
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|newIndexParams
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|newIndexParams
operator|.
name|put
argument_list|(
name|oldIndexParamKey
argument_list|,
name|newIndexParamValue
argument_list|)
expr_stmt|;
name|Index
name|newIndex
init|=
operator|new
name|IndexBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|DB_NAME
argument_list|)
operator|.
name|setTableName
argument_list|(
name|TABLE_NAME
argument_list|)
operator|.
name|setIndexName
argument_list|(
name|INDEX_NAME
argument_list|)
operator|.
name|setIndexTableName
argument_list|(
name|indexTableName
argument_list|)
operator|.
name|setCreateTime
argument_list|(
name|newCreateTime
argument_list|)
operator|.
name|setLastAccessTime
argument_list|(
name|newCreateTime
argument_list|)
operator|.
name|addCol
argument_list|(
literal|"id"
argument_list|,
literal|"int"
argument_list|,
literal|"test col id"
argument_list|)
operator|.
name|setDeferredRebuild
argument_list|(
literal|true
argument_list|)
operator|.
name|setIndexParams
argument_list|(
name|newIndexParams
argument_list|)
operator|.
name|setHandlerClass
argument_list|(
name|newHandlerClassName
argument_list|)
operator|.
name|setLocation
argument_list|(
name|newLocation
argument_list|)
operator|.
name|setInputFormat
argument_list|(
name|newInputFormat
argument_list|)
operator|.
name|setOutputFormat
argument_list|(
name|newOutputFormat
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
name|newIndexSdParamKey
argument_list|,
name|newIndexSdParamValue
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|alter_index
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
name|newIndex
argument_list|)
expr_stmt|;
name|Index
name|createdNewIndex
init|=
name|client
operator|.
name|getIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|)
decl_stmt|;
comment|// Check if the index parameters are changed
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
init|=
name|createdNewIndex
operator|.
name|getParameters
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|newIndexParamValue
argument_list|,
name|params
operator|.
name|get
argument_list|(
name|oldIndexParamKey
argument_list|)
argument_list|)
expr_stmt|;
comment|// Reset the index parameters and compare the old and new indexes to
comment|// check that the other attributes remained the same.
name|createdNewIndex
operator|.
name|setParameters
argument_list|(
name|oldIndex
operator|.
name|getParameters
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|oldIndex
argument_list|,
name|createdNewIndex
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterIndexNonExistingIndex
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
expr_stmt|;
name|Index
name|index
init|=
name|buildIndexWithDefaultValues
argument_list|()
decl_stmt|;
name|client
operator|.
name|alter_index
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterIndexNonExistingDb
parameter_list|()
throws|throws
name|Exception
block|{
name|Index
name|index
init|=
name|buildIndexWithDefaultValues
argument_list|()
decl_stmt|;
name|client
operator|.
name|alter_index
argument_list|(
literal|"nonexistingdb"
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterIndexNonExistingTable
parameter_list|()
throws|throws
name|Exception
block|{
name|Index
name|index
init|=
name|buildIndexWithDefaultValues
argument_list|()
decl_stmt|;
name|client
operator|.
name|alter_index
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterIndexNullIndexName
parameter_list|()
throws|throws
name|Exception
block|{
name|Index
name|index
init|=
name|buildIndexWithDefaultValues
argument_list|()
decl_stmt|;
name|client
operator|.
name|alter_index
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
literal|null
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterIndexNullDbName
parameter_list|()
throws|throws
name|Exception
block|{
name|Index
name|index
init|=
name|buildIndexWithDefaultValues
argument_list|()
decl_stmt|;
name|client
operator|.
name|alter_index
argument_list|(
literal|null
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterIndexNullTableName
parameter_list|()
throws|throws
name|Exception
block|{
name|Index
name|index
init|=
name|buildIndexWithDefaultValues
argument_list|()
decl_stmt|;
name|client
operator|.
name|alter_index
argument_list|(
name|DB_NAME
argument_list|,
literal|null
argument_list|,
name|INDEX_NAME
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAlterIndexNullIndex
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|client
operator|.
name|alter_index
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
literal|"Exception should have happened"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TTransportException
decl||
name|NullPointerException
name|e
parameter_list|)
block|{
comment|// TODO: NPE should not be thrown.
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterIndexEmptyIndexName
parameter_list|()
throws|throws
name|Exception
block|{
name|Index
name|index
init|=
name|buildIndexWithDefaultValues
argument_list|()
decl_stmt|;
name|client
operator|.
name|alter_index
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
literal|""
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterIndexEmptyDbName
parameter_list|()
throws|throws
name|Exception
block|{
name|Index
name|index
init|=
name|buildIndexWithDefaultValues
argument_list|()
decl_stmt|;
name|client
operator|.
name|alter_index
argument_list|(
literal|""
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterIndexEmptyTableName
parameter_list|()
throws|throws
name|Exception
block|{
name|Index
name|index
init|=
name|buildIndexWithDefaultValues
argument_list|()
decl_stmt|;
name|client
operator|.
name|alter_index
argument_list|(
name|DB_NAME
argument_list|,
literal|""
argument_list|,
name|INDEX_NAME
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterIndexNullSd
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
name|INDEX_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
expr_stmt|;
name|Index
name|index
init|=
name|buildIndexWithDefaultValues
argument_list|()
decl_stmt|;
name|index
operator|.
name|setSd
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_index
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
name|index
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidOperationException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterIndexDifferentIndexTable
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
name|INDEX_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
expr_stmt|;
name|Index
name|index
init|=
name|buildIndexWithDefaultValues
argument_list|()
decl_stmt|;
name|index
operator|.
name|setIndexTableName
argument_list|(
literal|"newindextable"
argument_list|)
expr_stmt|;
name|client
operator|.
name|alter_index
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testAlterIndexNullIndexNameInNewIndex
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
name|INDEX_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
expr_stmt|;
name|Index
name|index
init|=
operator|new
name|IndexBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
literal|null
argument_list|)
operator|.
name|setTableName
argument_list|(
literal|null
argument_list|)
operator|.
name|setIndexName
argument_list|(
literal|null
argument_list|)
operator|.
name|setIndexTableName
argument_list|(
literal|null
argument_list|)
operator|.
name|addCol
argument_list|(
literal|"id"
argument_list|,
literal|"int"
argument_list|,
literal|"test col id"
argument_list|)
operator|.
name|addCol
argument_list|(
literal|"value"
argument_list|,
literal|"string"
argument_list|,
literal|"test col value"
argument_list|)
operator|.
name|setDeferredRebuild
argument_list|(
literal|false
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|alter_index
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|Index
name|resultIndex
init|=
name|client
operator|.
name|getIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|resultIndex
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|DB_NAME
argument_list|,
name|resultIndex
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TABLE_NAME
argument_list|,
name|resultIndex
operator|.
name|getOrigTableName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|INDEX_NAME
argument_list|,
name|resultIndex
operator|.
name|getIndexName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|INDEX_TABLE_NAME
argument_list|,
name|resultIndex
operator|.
name|getIndexTableName
argument_list|()
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testAlterIndexNullCols
parameter_list|()
throws|throws
name|Exception
block|{
name|createIndex
argument_list|(
name|INDEX_NAME
argument_list|,
name|TABLE_NAME
argument_list|)
expr_stmt|;
name|Index
name|index
init|=
operator|new
name|IndexBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|DB_NAME
argument_list|)
operator|.
name|setTableName
argument_list|(
name|TABLE_NAME
argument_list|)
operator|.
name|setIndexName
argument_list|(
name|INDEX_NAME
argument_list|)
operator|.
name|setIndexTableName
argument_list|(
name|INDEX_TABLE_NAME
argument_list|)
operator|.
name|setCols
argument_list|(
literal|null
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|alter_index
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
name|index
argument_list|)
expr_stmt|;
name|client
operator|.
name|dropIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
comment|// Helper methods
specifier|private
name|Table
name|createTable
parameter_list|(
name|String
name|dbName
parameter_list|,
name|String
name|tableName
parameter_list|)
throws|throws
name|Exception
block|{
name|Table
name|table
init|=
name|buildTable
argument_list|(
name|dbName
argument_list|,
name|tableName
argument_list|)
decl_stmt|;
name|client
operator|.
name|createTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
return|return
name|table
return|;
block|}
specifier|private
name|Table
name|buildTable
parameter_list|(
name|String
name|dbName
parameter_list|,
name|String
name|tableName
parameter_list|)
throws|throws
name|Exception
block|{
name|Table
name|table
init|=
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tableName
argument_list|)
operator|.
name|addCol
argument_list|(
literal|"id"
argument_list|,
literal|"int"
argument_list|,
literal|"test col id"
argument_list|)
operator|.
name|addCol
argument_list|(
literal|"value"
argument_list|,
literal|"string"
argument_list|,
literal|"test col value"
argument_list|)
operator|.
name|addStorageDescriptorParam
argument_list|(
literal|"testSDParamKey"
argument_list|,
literal|"testSDParamValue"
argument_list|)
operator|.
name|setSerdeName
argument_list|(
name|tableName
argument_list|)
operator|.
name|setStoredAsSubDirectories
argument_list|(
literal|false
argument_list|)
operator|.
name|addSerdeParam
argument_list|(
literal|"testSerdeParamKey"
argument_list|,
literal|"testSerdeParamValue"
argument_list|)
operator|.
name|setLocation
argument_list|(
name|metaStore
operator|.
name|getWarehouseRoot
argument_list|()
operator|+
literal|"/"
operator|+
name|tableName
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|table
return|;
block|}
specifier|private
name|void
name|createIndex
parameter_list|(
name|String
name|indexName
parameter_list|,
name|String
name|origTableName
parameter_list|)
throws|throws
name|Exception
block|{
name|Table
name|origTable
init|=
name|createTable
argument_list|(
name|DB_NAME
argument_list|,
name|origTableName
argument_list|)
decl_stmt|;
name|String
name|indexTableName
init|=
name|origTableName
operator|+
literal|"__"
operator|+
name|indexName
operator|+
literal|"__"
decl_stmt|;
name|createIndex
argument_list|(
name|DB_NAME
argument_list|,
name|origTable
argument_list|,
name|indexName
argument_list|,
name|buildTable
argument_list|(
name|DB_NAME
argument_list|,
name|indexTableName
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|createIndex
parameter_list|(
name|String
name|dbName
parameter_list|,
name|Table
name|origTable
parameter_list|,
name|String
name|indexName
parameter_list|,
name|Table
name|indexTable
parameter_list|)
throws|throws
name|Exception
block|{
name|int
name|createTime
init|=
call|(
name|int
call|)
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|/
literal|1000
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|params
operator|.
name|put
argument_list|(
literal|"indexParamKey"
argument_list|,
literal|"indexParamValue"
argument_list|)
expr_stmt|;
name|Index
name|index
init|=
name|buildIndex
argument_list|(
name|dbName
argument_list|,
name|origTable
operator|.
name|getTableName
argument_list|()
argument_list|,
name|indexName
argument_list|,
name|indexTable
operator|.
name|getTableName
argument_list|()
argument_list|)
decl_stmt|;
name|index
operator|.
name|setCreateTime
argument_list|(
name|createTime
argument_list|)
expr_stmt|;
name|index
operator|.
name|setLastAccessTime
argument_list|(
name|createTime
argument_list|)
expr_stmt|;
name|index
operator|.
name|setParameters
argument_list|(
name|params
argument_list|)
expr_stmt|;
name|client
operator|.
name|createIndex
argument_list|(
name|index
argument_list|,
name|indexTable
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Index
name|buildIndexWithDefaultValues
parameter_list|()
throws|throws
name|MetaException
block|{
return|return
name|buildIndex
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|INDEX_NAME
argument_list|,
name|INDEX_TABLE_NAME
argument_list|)
return|;
block|}
specifier|private
name|Index
name|buildIndex
parameter_list|(
name|String
name|dbName
parameter_list|,
name|String
name|origTableName
parameter_list|,
name|String
name|indexName
parameter_list|,
name|String
name|indexTableName
parameter_list|)
throws|throws
name|MetaException
block|{
name|Index
name|index
init|=
operator|new
name|IndexBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName
argument_list|)
operator|.
name|setTableName
argument_list|(
name|origTableName
argument_list|)
operator|.
name|setIndexName
argument_list|(
name|indexName
argument_list|)
operator|.
name|setIndexTableName
argument_list|(
name|indexTableName
argument_list|)
operator|.
name|addCol
argument_list|(
literal|"id"
argument_list|,
literal|"int"
argument_list|,
literal|"test col id"
argument_list|)
operator|.
name|addCol
argument_list|(
literal|"value"
argument_list|,
literal|"string"
argument_list|,
literal|"test col value"
argument_list|)
operator|.
name|setDeferredRebuild
argument_list|(
literal|false
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|index
return|;
block|}
specifier|private
name|void
name|createDB
parameter_list|(
name|String
name|dbName
parameter_list|)
throws|throws
name|TException
block|{
name|Database
name|db
init|=
operator|new
name|DatabaseBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|dbName
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkIfIndexListEmpty
parameter_list|(
name|String
name|dbName
parameter_list|,
name|String
name|origTableName
parameter_list|)
throws|throws
name|MetaException
throws|,
name|TException
block|{
name|List
argument_list|<
name|String
argument_list|>
name|indexes
init|=
name|client
operator|.
name|listIndexNames
argument_list|(
name|dbName
argument_list|,
name|origTableName
argument_list|,
name|MAX
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|indexes
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|indexes
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkIfIndexExists
parameter_list|(
name|String
name|dbName
parameter_list|,
name|String
name|origTableName
parameter_list|,
name|String
name|indexName
parameter_list|)
throws|throws
name|MetaException
throws|,
name|TException
block|{
name|List
argument_list|<
name|String
argument_list|>
name|indexes
init|=
name|client
operator|.
name|listIndexNames
argument_list|(
name|dbName
argument_list|,
name|origTableName
argument_list|,
name|MAX
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|indexes
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|indexes
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|indexName
argument_list|,
name|indexes
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|verifyIndex
parameter_list|(
name|String
name|dbName
parameter_list|,
name|String
name|origTableName
parameter_list|,
name|String
name|indexName
parameter_list|,
name|String
name|indexTableName
parameter_list|)
throws|throws
name|MetaException
throws|,
name|UnknownTableException
throws|,
name|NoSuchObjectException
throws|,
name|TException
block|{
name|Index
name|index
init|=
name|client
operator|.
name|getIndex
argument_list|(
name|dbName
argument_list|,
name|origTableName
argument_list|,
name|indexName
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|dbName
argument_list|,
name|index
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|origTableName
argument_list|,
name|index
operator|.
name|getOrigTableName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|indexName
argument_list|,
name|index
operator|.
name|getIndexName
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|indexTableName
argument_list|,
name|index
operator|.
name|getIndexTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

