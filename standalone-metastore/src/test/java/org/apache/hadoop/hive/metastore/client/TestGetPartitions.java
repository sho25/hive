begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|IMetaStoreClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|MetaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|NoSuchObjectException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Partition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
operator|.
name|builder
operator|.
name|DatabaseBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
operator|.
name|builder
operator|.
name|PartitionBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|client
operator|.
name|builder
operator|.
name|TableBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|minihms
operator|.
name|AbstractMetaStoreService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|TException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|transport
operator|.
name|TTransportException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|TestCase
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|TestCase
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_comment
comment|/**  * API tests for HMS client's getPartitions methods.  */
end_comment

begin_class
annotation|@
name|RunWith
argument_list|(
name|Parameterized
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestGetPartitions
block|{
comment|// Needed until there is no junit release with @BeforeParam, @AfterParam (junit 4.13)
comment|// https://github.com/junit-team/junit4/commit/1bf8438b65858565dbb64736bfe13aae9cfc1b5a
comment|// Then we should remove our own copy
specifier|private
specifier|static
name|Set
argument_list|<
name|AbstractMetaStoreService
argument_list|>
name|metaStoreServices
init|=
literal|null
decl_stmt|;
specifier|private
name|AbstractMetaStoreService
name|metaStore
decl_stmt|;
specifier|private
name|IMetaStoreClient
name|client
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DB_NAME
init|=
literal|"testpartdb"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TABLE_NAME
init|=
literal|"testparttable"
decl_stmt|;
annotation|@
name|Parameterized
operator|.
name|Parameters
argument_list|(
name|name
operator|=
literal|"{0}"
argument_list|)
specifier|public
specifier|static
name|List
argument_list|<
name|Object
index|[]
argument_list|>
name|getMetaStoreToTest
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Object
index|[]
argument_list|>
name|result
init|=
name|MetaStoreFactoryForTests
operator|.
name|getMetaStores
argument_list|()
decl_stmt|;
name|metaStoreServices
operator|=
name|result
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|test
lambda|->
operator|(
name|AbstractMetaStoreService
operator|)
name|test
index|[
literal|1
index|]
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toSet
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|TestGetPartitions
parameter_list|(
name|String
name|name
parameter_list|,
name|AbstractMetaStoreService
name|metaStore
parameter_list|)
throws|throws
name|Exception
block|{
name|this
operator|.
name|metaStore
operator|=
name|metaStore
expr_stmt|;
name|this
operator|.
name|metaStore
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
comment|// Needed until there is no junit release with @BeforeParam, @AfterParam (junit 4.13)
comment|// https://github.com/junit-team/junit4/commit/1bf8438b65858565dbb64736bfe13aae9cfc1b5a
comment|// Then we should move this to @AfterParam
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|stopMetaStores
parameter_list|()
throws|throws
name|Exception
block|{
for|for
control|(
name|AbstractMetaStoreService
name|metaStoreService
range|:
name|metaStoreServices
control|)
block|{
name|metaStoreService
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Get new client
name|client
operator|=
name|metaStore
operator|.
name|getClient
argument_list|()
expr_stmt|;
comment|// Clean up the database
name|client
operator|.
name|dropDatabase
argument_list|(
name|DB_NAME
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|createDB
argument_list|(
name|DB_NAME
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
if|if
condition|(
name|client
operator|!=
literal|null
condition|)
block|{
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|client
operator|=
literal|null
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|createDB
parameter_list|(
name|String
name|dbName
parameter_list|)
throws|throws
name|TException
block|{
name|Database
name|db
init|=
operator|new
name|DatabaseBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|dbName
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|client
operator|.
name|createDatabase
argument_list|(
name|db
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|Table
name|createTestTable
parameter_list|(
name|IMetaStoreClient
name|client
parameter_list|,
name|String
name|dbName
parameter_list|,
name|String
name|tableName
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|partCols
parameter_list|,
name|boolean
name|setPartitionLevelPrivilages
parameter_list|)
throws|throws
name|Exception
block|{
name|TableBuilder
name|builder
init|=
operator|new
name|TableBuilder
argument_list|()
operator|.
name|setDbName
argument_list|(
name|dbName
argument_list|)
operator|.
name|setTableName
argument_list|(
name|tableName
argument_list|)
operator|.
name|addCol
argument_list|(
literal|"id"
argument_list|,
literal|"int"
argument_list|)
operator|.
name|addCol
argument_list|(
literal|"name"
argument_list|,
literal|"string"
argument_list|)
decl_stmt|;
name|partCols
operator|.
name|forEach
argument_list|(
name|col
lambda|->
name|builder
operator|.
name|addPartCol
argument_list|(
name|col
argument_list|,
literal|"string"
argument_list|)
argument_list|)
expr_stmt|;
name|Table
name|table
init|=
name|builder
operator|.
name|build
argument_list|()
decl_stmt|;
if|if
condition|(
name|setPartitionLevelPrivilages
condition|)
block|{
name|table
operator|.
name|putToParameters
argument_list|(
literal|"PARTITION_LEVEL_PRIVILEGE"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
block|}
name|client
operator|.
name|createTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
return|return
name|table
return|;
block|}
specifier|private
specifier|static
name|void
name|addPartition
parameter_list|(
name|IMetaStoreClient
name|client
parameter_list|,
name|Table
name|table
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|values
parameter_list|)
throws|throws
name|TException
block|{
name|PartitionBuilder
name|partitionBuilder
init|=
operator|new
name|PartitionBuilder
argument_list|()
operator|.
name|fromTable
argument_list|(
name|table
argument_list|)
decl_stmt|;
name|values
operator|.
name|forEach
argument_list|(
name|val
lambda|->
name|partitionBuilder
operator|.
name|addValue
argument_list|(
name|val
argument_list|)
argument_list|)
expr_stmt|;
name|client
operator|.
name|add_partition
argument_list|(
name|partitionBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|createTable3PartCols1PartGeneric
parameter_list|(
name|IMetaStoreClient
name|client
parameter_list|,
name|boolean
name|authOn
parameter_list|)
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|createTestTable
argument_list|(
name|client
argument_list|,
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"yyyy"
argument_list|,
literal|"mm"
argument_list|,
literal|"dd"
argument_list|)
argument_list|,
name|authOn
argument_list|)
decl_stmt|;
name|addPartition
argument_list|(
name|client
argument_list|,
name|t
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1997"
argument_list|,
literal|"05"
argument_list|,
literal|"16"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|createTable3PartCols1Part
parameter_list|(
name|IMetaStoreClient
name|client
parameter_list|)
throws|throws
name|Exception
block|{
name|createTable3PartCols1PartGeneric
argument_list|(
name|client
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|createTable3PartCols1PartAuthOn
parameter_list|(
name|IMetaStoreClient
name|client
parameter_list|)
throws|throws
name|Exception
block|{
name|createTable3PartCols1PartGeneric
argument_list|(
name|client
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|createTable4PartColsParts
parameter_list|(
name|IMetaStoreClient
name|client
parameter_list|)
throws|throws
name|Exception
block|{
name|Table
name|t
init|=
name|createTestTable
argument_list|(
name|client
argument_list|,
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"yyyy"
argument_list|,
literal|"mm"
argument_list|,
literal|"dd"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|testValues
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1999"
argument_list|,
literal|"01"
argument_list|,
literal|"02"
argument_list|)
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2009"
argument_list|,
literal|"02"
argument_list|,
literal|"10"
argument_list|)
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|"10"
argument_list|,
literal|"26"
argument_list|)
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"2017"
argument_list|,
literal|"11"
argument_list|,
literal|"27"
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|List
argument_list|<
name|String
argument_list|>
name|vals
range|:
name|testValues
control|)
block|{
name|addPartition
argument_list|(
name|client
argument_list|,
name|t
argument_list|,
name|vals
argument_list|)
expr_stmt|;
block|}
return|return
name|testValues
return|;
block|}
specifier|private
specifier|static
name|void
name|assertAuthInfoReturned
parameter_list|(
name|String
name|user
parameter_list|,
name|String
name|group
parameter_list|,
name|Partition
name|partition
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|partition
operator|.
name|getPrivileges
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|()
argument_list|,
name|partition
operator|.
name|getPrivileges
argument_list|()
operator|.
name|getUserPrivileges
argument_list|()
operator|.
name|get
argument_list|(
name|user
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|()
argument_list|,
name|partition
operator|.
name|getPrivileges
argument_list|()
operator|.
name|getGroupPrivileges
argument_list|()
operator|.
name|get
argument_list|(
name|group
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|()
argument_list|,
name|partition
operator|.
name|getPrivileges
argument_list|()
operator|.
name|getRolePrivileges
argument_list|()
operator|.
name|get
argument_list|(
literal|"public"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Testing getPartition(String,String,String) ->    *         get_partition_by_name(String,String,String).    * @throws Exception    */
annotation|@
name|Test
specifier|public
name|void
name|testGetPartition
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Partition
name|partition
init|=
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
literal|"yyyy=1997/mm=05/dd=16"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|partition
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1997"
argument_list|,
literal|"05"
argument_list|,
literal|"16"
argument_list|)
argument_list|,
name|partition
operator|.
name|getValues
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionCaseSensitive
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
literal|"YyYy=1997/mM=05/dD=16"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionIncompletePartName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
literal|"yyyy=1997/mm=05"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionEmptyPartName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionNonexistingPart
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
literal|"yyyy=1997/mm=05/dd=99"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionNoDbName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartition
argument_list|(
literal|""
argument_list|,
name|TABLE_NAME
argument_list|,
literal|"yyyy=1997/mm=05/dd=16"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionNoTblName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
literal|""
argument_list|,
literal|"yyyy=1997/mm=05/dd=16"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionNoTable
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
literal|"yyyy=1997/mm=05/dd=16"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionNoDb
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|dropDatabase
argument_list|(
name|DB_NAME
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
literal|"yyyy=1997/mm=05/dd=16"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionNullDbName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartition
argument_list|(
literal|null
argument_list|,
name|TABLE_NAME
argument_list|,
literal|"yyyy=1997/mm=05/dd=16"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionNullTblName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
literal|null
argument_list|,
literal|"yyyy=1997/mm=05/dd=16"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionNullPartName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|String
operator|)
literal|null
argument_list|)
expr_stmt|;
block|}
comment|/**    * Testing getPartition(String,String,List(String)) ->    *         get_partition(String,String,List(String)).    * @throws Exception    */
annotation|@
name|Test
specifier|public
name|void
name|testGetPartitionByValues
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|parts
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1997"
argument_list|,
literal|"05"
argument_list|,
literal|"16"
argument_list|)
decl_stmt|;
name|Partition
name|partition
init|=
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|parts
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|partition
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|parts
argument_list|,
name|partition
operator|.
name|getValues
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionByValuesWrongPart
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1997"
argument_list|,
literal|"05"
argument_list|,
literal|"66"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionByValuesWrongNumOfPartVals
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1997"
argument_list|,
literal|"05"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionByValuesEmptyPartVals
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionByValuesNoDbName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartition
argument_list|(
literal|""
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1997"
argument_list|,
literal|"05"
argument_list|,
literal|"16"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionByValuesNoTblName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
literal|""
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1997"
argument_list|,
literal|"05"
argument_list|,
literal|"16"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionByValuesNoTable
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1997"
argument_list|,
literal|"05"
argument_list|,
literal|"16"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionByValuesNoDb
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|dropDatabase
argument_list|(
name|DB_NAME
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1997"
argument_list|,
literal|"05"
argument_list|,
literal|"16"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionByValuesNullDbName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartition
argument_list|(
literal|null
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1997"
argument_list|,
literal|"05"
argument_list|,
literal|"16"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionByValuesNullTblName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
literal|null
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1997"
argument_list|,
literal|"05"
argument_list|,
literal|"16"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionByValuesNullValues
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartition
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|List
argument_list|<
name|String
argument_list|>
operator|)
literal|null
argument_list|)
expr_stmt|;
block|}
comment|/**    * Testing getPartitionsByNames(String,String,List(String)) ->    *         get_partitions_by_names(String,String,List(String)).    * @throws Exception    */
annotation|@
name|Test
specifier|public
name|void
name|testGetPartitionsByNames
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|testValues
init|=
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
decl_stmt|;
comment|//TODO: partition names in getPartitionsByNames are not case insensitive
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|getPartitionsByNames
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"yYYy=2017/MM=11/DD=27"
argument_list|,
literal|"yYyY=1999/mM=01/dD=02"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|partitions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|partitions
operator|=
name|client
operator|.
name|getPartitionsByNames
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"yyyy=2017/mm=11/dd=27"
argument_list|,
literal|"yyyy=1999/mm=01/dd=02"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|partitions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|testValues
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|partitions
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getValues
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|testValues
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
name|partitions
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getValues
argument_list|()
argument_list|)
expr_stmt|;
name|partitions
operator|=
name|client
operator|.
name|getPartitionsByNames
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"yyyy=2017"
argument_list|,
literal|"yyyy=1999/mm=01/dd=02"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|testValues
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|partitions
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getValues
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetPartitionsByNamesEmptyParts
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|testValues
init|=
name|createTable4PartColsParts
argument_list|(
name|client
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Partition
argument_list|>
name|partitions
init|=
name|client
operator|.
name|getPartitionsByNames
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|""
argument_list|,
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|partitions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|partitions
operator|=
name|client
operator|.
name|getPartitionsByNames
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|partitions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionsByNamesNoDbName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartitionsByNames
argument_list|(
literal|""
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"yyyy=2000/mm=01/dd=02"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionsByNamesNoTblName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartitionsByNames
argument_list|(
name|DB_NAME
argument_list|,
literal|""
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"yyyy=2000/mm=01/dd=02"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionsByNamesNoTable
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|getPartitionsByNames
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"yyyy=2000/mm=01/dd=02"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionsByNamesNoDb
parameter_list|()
throws|throws
name|Exception
block|{
name|client
operator|.
name|dropDatabase
argument_list|(
name|DB_NAME
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartitionsByNames
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"yyyy=2000/mm=01/dd=02"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetPartitionsByNamesNullDbName
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartitionsByNames
argument_list|(
literal|null
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"yyyy=2000/mm=01/dd=02"
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NullPointerException
decl||
name|TTransportException
name|e
parameter_list|)
block|{
comment|//TODO: should not throw different exceptions for different HMS deployment types
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetPartitionsByNamesNullTblName
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartitionsByNames
argument_list|(
name|DB_NAME
argument_list|,
literal|null
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"yyyy=2000/mm=01/dd=02"
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NullPointerException
decl||
name|TTransportException
name|e
parameter_list|)
block|{
comment|//TODO: should not throw different exceptions for different HMS deployment types
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionsByNamesNullNames
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartitionsByNames
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
operator|(
name|List
argument_list|<
name|String
argument_list|>
operator|)
literal|null
argument_list|)
expr_stmt|;
block|}
comment|/**    * Testing getPartitionWithAuthInfo(String,String,List(String),String,List(String)) ->    *         get_partition_with_auth(String,String,List(String),String,List(String)).    * @throws Exception    */
annotation|@
name|Test
specifier|public
name|void
name|testGetPartitionWithAuthInfoNoPrivilagesSet
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1Part
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Partition
name|partition
init|=
name|client
operator|.
name|getPartitionWithAuthInfo
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1997"
argument_list|,
literal|"05"
argument_list|,
literal|"16"
argument_list|)
argument_list|,
literal|""
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|partition
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|partition
operator|.
name|getPrivileges
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetPartitionWithAuthInfo
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1PartAuthOn
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Partition
name|partition
init|=
name|client
operator|.
name|getPartitionWithAuthInfo
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1997"
argument_list|,
literal|"05"
argument_list|,
literal|"16"
argument_list|)
argument_list|,
literal|"user0"
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"group0"
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|partition
argument_list|)
expr_stmt|;
name|assertAuthInfoReturned
argument_list|(
literal|"user0"
argument_list|,
literal|"group0"
argument_list|,
name|partition
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetPartitionWithAuthInfoEmptyUserGroup
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1PartAuthOn
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|Partition
name|partition
init|=
name|client
operator|.
name|getPartitionWithAuthInfo
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1997"
argument_list|,
literal|"05"
argument_list|,
literal|"16"
argument_list|)
argument_list|,
literal|""
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|partition
argument_list|)
expr_stmt|;
name|assertAuthInfoReturned
argument_list|(
literal|""
argument_list|,
literal|""
argument_list|,
name|partition
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionWithAuthInfoNoDbName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1PartAuthOn
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartitionWithAuthInfo
argument_list|(
literal|""
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1997"
argument_list|,
literal|"05"
argument_list|,
literal|"16"
argument_list|)
argument_list|,
literal|"user0"
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"group0"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionWithAuthInfoNoTblName
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1PartAuthOn
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartitionWithAuthInfo
argument_list|(
name|DB_NAME
argument_list|,
literal|""
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1997"
argument_list|,
literal|"05"
argument_list|,
literal|"16"
argument_list|)
argument_list|,
literal|"user0"
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"group0"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionWithAuthInfoNoSuchPart
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1PartAuthOn
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartitionWithAuthInfo
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1997"
argument_list|,
literal|"05"
argument_list|,
literal|"66"
argument_list|)
argument_list|,
literal|"user0"
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"group0"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionWithAuthInfoWrongNumOfPartVals
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1PartAuthOn
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartitionWithAuthInfo
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1997"
argument_list|,
literal|"05"
argument_list|)
argument_list|,
literal|"user0"
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"group0"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetPartitionWithAuthInfoNullDbName
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|createTable3PartCols1PartAuthOn
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartitionWithAuthInfo
argument_list|(
literal|null
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1997"
argument_list|,
literal|"05"
argument_list|,
literal|"16"
argument_list|)
argument_list|,
literal|"user0"
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"group0"
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NullPointerException
decl||
name|TTransportException
name|e
parameter_list|)
block|{
comment|//TODO: should not throw different exceptions for different HMS deployment types
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetPartitionWithAuthInfoNullTblName
parameter_list|()
throws|throws
name|Exception
block|{
try|try
block|{
name|createTable3PartCols1PartAuthOn
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartitionWithAuthInfo
argument_list|(
name|DB_NAME
argument_list|,
literal|null
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1997"
argument_list|,
literal|"05"
argument_list|,
literal|"16"
argument_list|)
argument_list|,
literal|"user0"
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"group0"
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should have thrown exception"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NullPointerException
decl||
name|TTransportException
name|e
parameter_list|)
block|{
comment|//TODO: should not throw different exceptions for different HMS deployment types
block|}
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|MetaException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionWithAuthInfoNullValues
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1PartAuthOn
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartitionWithAuthInfo
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
literal|null
argument_list|,
literal|"user0"
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"group0"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NoSuchObjectException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testGetPartitionWithAuthInfoNullUser
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1PartAuthOn
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartitionWithAuthInfo
argument_list|(
name|DB_NAME
argument_list|,
literal|""
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1997"
argument_list|,
literal|"05"
argument_list|,
literal|"16"
argument_list|)
argument_list|,
literal|null
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"group0"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetPartitionWithAuthInfoNullGroups
parameter_list|()
throws|throws
name|Exception
block|{
name|createTable3PartCols1PartAuthOn
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|client
operator|.
name|getPartitionWithAuthInfo
argument_list|(
name|DB_NAME
argument_list|,
name|TABLE_NAME
argument_list|,
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"1997"
argument_list|,
literal|"05"
argument_list|,
literal|"16"
argument_list|)
argument_list|,
literal|"user0"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

