begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Security
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|callback
operator|.
name|Callback
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|callback
operator|.
name|CallbackHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|callback
operator|.
name|NameCallback
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|callback
operator|.
name|PasswordCallback
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|callback
operator|.
name|UnsupportedCallbackException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|login
operator|.
name|LoginException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|sasl
operator|.
name|AuthenticationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|sasl
operator|.
name|AuthorizeCallback
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|sasl
operator|.
name|SaslException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|MetaStoreAuthenticationProviderFactory
operator|.
name|AuthMethods
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|MetaStorePlainSaslServer
operator|.
name|SaslPlainProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|transport
operator|.
name|TSaslClientTransport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|transport
operator|.
name|TSaslServerTransport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|transport
operator|.
name|TTransport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|transport
operator|.
name|TTransportFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|// This is a copy of org.apache.hive.service.auth.PlainSaslHelper modified for HMS. See whether
end_comment

begin_comment
comment|// we can deduplicate the code.
end_comment

begin_class
specifier|public
specifier|final
class|class
name|MetaStorePlainSaslHelper
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MetaStorePlainSaslHelper
operator|.
name|class
argument_list|)
decl_stmt|;
static|static
block|{
name|Security
operator|.
name|addProvider
argument_list|(
operator|new
name|SaslPlainProvider
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// This is a hack. This method does nothing but is used to load the class and thus
comment|// invoke the static initializer above which add SaSl service provider. Without that HMS trying
comment|// to authenticate using password based authentication gives NullPointerException.
comment|// We don't need this hack in HS2, but we do not know the code path through which this class
comment|// gets loaded in HS2.
specifier|public
specifier|static
name|void
name|init
parameter_list|()
block|{
comment|// Do nothing
name|LOG
operator|.
name|info
argument_list|(
literal|"init called to add SaslPlainProvider to Sasl providers."
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|TTransportFactory
name|getPlainTransportFactory
parameter_list|(
name|String
name|authTypeStr
parameter_list|,
name|Configuration
name|conf
parameter_list|)
throws|throws
name|LoginException
block|{
name|TSaslServerTransport
operator|.
name|Factory
name|saslFactory
init|=
operator|new
name|TSaslServerTransport
operator|.
name|Factory
argument_list|()
decl_stmt|;
try|try
block|{
name|saslFactory
operator|.
name|addServerDefinition
argument_list|(
literal|"PLAIN"
argument_list|,
name|authTypeStr
argument_list|,
literal|null
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
operator|new
name|PlainServerCallbackHandler
argument_list|(
name|authTypeStr
argument_list|,
name|conf
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|AuthenticationException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|LoginException
argument_list|(
literal|"Error setting callback handler"
operator|+
name|e
argument_list|)
throw|;
block|}
return|return
name|saslFactory
return|;
block|}
specifier|public
specifier|static
name|TTransport
name|getPlainTransport
parameter_list|(
name|String
name|username
parameter_list|,
name|String
name|password
parameter_list|,
name|TTransport
name|underlyingTransport
parameter_list|)
throws|throws
name|SaslException
block|{
return|return
operator|new
name|TSaslClientTransport
argument_list|(
literal|"PLAIN"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
argument_list|,
operator|new
name|PlainCallbackHandler
argument_list|(
name|username
argument_list|,
name|password
argument_list|)
argument_list|,
name|underlyingTransport
argument_list|)
return|;
block|}
specifier|private
name|MetaStorePlainSaslHelper
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Can't initialize class"
argument_list|)
throw|;
block|}
specifier|public
specifier|static
specifier|final
class|class
name|PlainServerCallbackHandler
implements|implements
name|CallbackHandler
block|{
specifier|private
specifier|final
name|AuthMethods
name|authMethod
decl_stmt|;
specifier|private
specifier|final
name|Configuration
name|conf
decl_stmt|;
name|PlainServerCallbackHandler
parameter_list|(
name|String
name|authMethodStr
parameter_list|,
name|Configuration
name|conf
parameter_list|)
throws|throws
name|AuthenticationException
block|{
name|authMethod
operator|=
name|AuthMethods
operator|.
name|getValidAuthMethod
argument_list|(
name|authMethodStr
argument_list|)
expr_stmt|;
name|this
operator|.
name|conf
operator|=
name|conf
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|handle
parameter_list|(
name|Callback
index|[]
name|callbacks
parameter_list|)
throws|throws
name|IOException
throws|,
name|UnsupportedCallbackException
block|{
name|String
name|username
init|=
literal|null
decl_stmt|;
name|String
name|password
init|=
literal|null
decl_stmt|;
name|AuthorizeCallback
name|ac
init|=
literal|null
decl_stmt|;
for|for
control|(
name|Callback
name|callback
range|:
name|callbacks
control|)
block|{
if|if
condition|(
name|callback
operator|instanceof
name|NameCallback
condition|)
block|{
name|NameCallback
name|nc
init|=
operator|(
name|NameCallback
operator|)
name|callback
decl_stmt|;
name|username
operator|=
name|nc
operator|.
name|getName
argument_list|()
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|callback
operator|instanceof
name|PasswordCallback
condition|)
block|{
name|PasswordCallback
name|pc
init|=
operator|(
name|PasswordCallback
operator|)
name|callback
decl_stmt|;
name|password
operator|=
operator|new
name|String
argument_list|(
name|pc
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|callback
operator|instanceof
name|AuthorizeCallback
condition|)
block|{
name|ac
operator|=
operator|(
name|AuthorizeCallback
operator|)
name|callback
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|UnsupportedCallbackException
argument_list|(
name|callback
argument_list|)
throw|;
block|}
block|}
name|MetaStorePasswdAuthenticationProvider
name|provider
init|=
name|MetaStoreAuthenticationProviderFactory
operator|.
name|getAuthenticationProvider
argument_list|(
name|conf
argument_list|,
name|authMethod
argument_list|)
decl_stmt|;
name|provider
operator|.
name|Authenticate
argument_list|(
name|username
argument_list|,
name|password
argument_list|)
expr_stmt|;
if|if
condition|(
name|ac
operator|!=
literal|null
condition|)
block|{
name|ac
operator|.
name|setAuthorized
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
specifier|static
class|class
name|PlainCallbackHandler
implements|implements
name|CallbackHandler
block|{
specifier|private
specifier|final
name|String
name|username
decl_stmt|;
specifier|private
specifier|final
name|String
name|password
decl_stmt|;
specifier|public
name|PlainCallbackHandler
parameter_list|(
name|String
name|username
parameter_list|,
name|String
name|password
parameter_list|)
block|{
name|this
operator|.
name|username
operator|=
name|username
expr_stmt|;
name|this
operator|.
name|password
operator|=
name|password
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|handle
parameter_list|(
name|Callback
index|[]
name|callbacks
parameter_list|)
throws|throws
name|IOException
throws|,
name|UnsupportedCallbackException
block|{
for|for
control|(
name|Callback
name|callback
range|:
name|callbacks
control|)
block|{
if|if
condition|(
name|callback
operator|instanceof
name|NameCallback
condition|)
block|{
name|NameCallback
name|nameCallback
init|=
operator|(
name|NameCallback
operator|)
name|callback
decl_stmt|;
name|nameCallback
operator|.
name|setName
argument_list|(
name|username
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|callback
operator|instanceof
name|PasswordCallback
condition|)
block|{
name|PasswordCallback
name|passCallback
init|=
operator|(
name|PasswordCallback
operator|)
name|callback
decl_stmt|;
name|passCallback
operator|.
name|setPassword
argument_list|(
name|password
operator|.
name|toCharArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|UnsupportedCallbackException
argument_list|(
name|callback
argument_list|)
throw|;
block|}
block|}
block|}
block|}
block|}
end_class

end_unit

