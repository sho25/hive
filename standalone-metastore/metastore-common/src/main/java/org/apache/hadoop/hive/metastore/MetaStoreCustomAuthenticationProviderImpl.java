begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|InvocationTargetException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|sasl
operator|.
name|AuthenticationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|MetaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|conf
operator|.
name|MetastoreConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|utils
operator|.
name|JavaUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|ReflectionUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * This authentication provider implements the {@code CUSTOM} authentication. It allows a {@link  * MetaStorePasswdAuthenticationProvider} to be specified at configuration time which may  * additionally  * implement {@link org.apache.hadoop.conf.Configurable Configurable} to grab Metastore's {@link  * org.apache.hadoop.conf.Configuration Configuration}.  */
end_comment

begin_comment
comment|// This file is copy of org.apache.hive.service.auth.AuthenticationProviderFactory. Need to
end_comment

begin_comment
comment|//  deduplicate this code.
end_comment

begin_class
specifier|public
class|class
name|MetaStoreCustomAuthenticationProviderImpl
implements|implements
name|MetaStorePasswdAuthenticationProvider
block|{
specifier|private
specifier|final
name|MetaStorePasswdAuthenticationProvider
name|customProvider
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MetaStoreCustomAuthenticationProviderImpl
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
name|MetaStoreCustomAuthenticationProviderImpl
parameter_list|(
name|Configuration
name|conf
parameter_list|)
throws|throws
name|AuthenticationException
block|{
name|String
name|customProviderName
init|=
name|MetastoreConf
operator|.
name|getVar
argument_list|(
name|conf
argument_list|,
name|MetastoreConf
operator|.
name|ConfVars
operator|.
name|METASTORE_CUSTOM_AUTHENTICATION_CLASS
argument_list|)
decl_stmt|;
name|Class
argument_list|<
name|?
extends|extends
name|MetaStorePasswdAuthenticationProvider
argument_list|>
name|customHandlerClass
decl_stmt|;
try|try
block|{
name|customHandlerClass
operator|=
name|JavaUtils
operator|.
name|getClass
argument_list|(
name|customProviderName
argument_list|,
name|MetaStorePasswdAuthenticationProvider
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MetaException
name|me
parameter_list|)
block|{
throw|throw
operator|new
name|AuthenticationException
argument_list|(
name|me
operator|.
name|getMessage
argument_list|()
argument_list|)
throw|;
block|}
name|MetaStorePasswdAuthenticationProvider
name|customProvider
decl_stmt|;
try|try
block|{
name|customProvider
operator|=
name|customHandlerClass
operator|.
name|getConstructor
argument_list|(
name|Configuration
operator|.
name|class
argument_list|)
operator|.
name|newInstance
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchMethodException
decl||
name|InstantiationException
decl||
name|IllegalAccessException
decl||
name|InvocationTargetException
name|e
parameter_list|)
block|{
name|customProvider
operator|=
name|ReflectionUtils
operator|.
name|newInstance
argument_list|(
name|customHandlerClass
argument_list|,
name|conf
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|customProvider
operator|=
name|customProvider
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|Authenticate
parameter_list|(
name|String
name|user
parameter_list|,
name|String
name|password
parameter_list|)
throws|throws
name|AuthenticationException
block|{
name|customProvider
operator|.
name|Authenticate
argument_list|(
name|user
argument_list|,
name|password
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

