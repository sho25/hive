begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|spark
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|spark
operator|.
name|client
operator|.
name|metrics
operator|.
name|Metrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|spark
operator|.
name|client
operator|.
name|rpc
operator|.
name|RpcDispatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|spark
operator|.
name|counter
operator|.
name|SparkCounters
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Throwables
import|;
end_import

begin_class
specifier|abstract
class|class
name|BaseProtocol
extends|extends
name|RpcDispatcher
block|{
specifier|protected
specifier|static
class|class
name|CancelJob
implements|implements
name|Serializable
block|{
specifier|final
name|String
name|id
decl_stmt|;
name|CancelJob
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
block|}
name|CancelJob
parameter_list|()
block|{
name|this
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
specifier|static
class|class
name|EndSession
implements|implements
name|Serializable
block|{    }
specifier|protected
specifier|static
class|class
name|Error
implements|implements
name|Serializable
block|{
specifier|final
name|String
name|cause
decl_stmt|;
name|Error
parameter_list|(
name|Throwable
name|cause
parameter_list|)
block|{
name|this
operator|.
name|cause
operator|=
name|Throwables
operator|.
name|getStackTraceAsString
argument_list|(
name|cause
argument_list|)
expr_stmt|;
block|}
name|Error
parameter_list|()
block|{
name|this
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
specifier|static
class|class
name|JobMetrics
implements|implements
name|Serializable
block|{
specifier|final
name|String
name|jobId
decl_stmt|;
specifier|final
name|int
name|sparkJobId
decl_stmt|;
specifier|final
name|int
name|stageId
decl_stmt|;
specifier|final
name|long
name|taskId
decl_stmt|;
specifier|final
name|Metrics
name|metrics
decl_stmt|;
name|JobMetrics
parameter_list|(
name|String
name|jobId
parameter_list|,
name|int
name|sparkJobId
parameter_list|,
name|int
name|stageId
parameter_list|,
name|long
name|taskId
parameter_list|,
name|Metrics
name|metrics
parameter_list|)
block|{
name|this
operator|.
name|jobId
operator|=
name|jobId
expr_stmt|;
name|this
operator|.
name|sparkJobId
operator|=
name|sparkJobId
expr_stmt|;
name|this
operator|.
name|stageId
operator|=
name|stageId
expr_stmt|;
name|this
operator|.
name|taskId
operator|=
name|taskId
expr_stmt|;
name|this
operator|.
name|metrics
operator|=
name|metrics
expr_stmt|;
block|}
name|JobMetrics
parameter_list|()
block|{
name|this
argument_list|(
literal|null
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
specifier|static
class|class
name|JobRequest
parameter_list|<
name|T
extends|extends
name|Serializable
parameter_list|>
implements|implements
name|Serializable
block|{
specifier|final
name|String
name|id
decl_stmt|;
specifier|final
name|Job
argument_list|<
name|T
argument_list|>
name|job
decl_stmt|;
name|JobRequest
parameter_list|(
name|String
name|id
parameter_list|,
name|Job
argument_list|<
name|T
argument_list|>
name|job
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
name|this
operator|.
name|job
operator|=
name|job
expr_stmt|;
block|}
name|JobRequest
parameter_list|()
block|{
name|this
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
specifier|static
class|class
name|JobResult
parameter_list|<
name|T
extends|extends
name|Serializable
parameter_list|>
implements|implements
name|Serializable
block|{
specifier|final
name|String
name|id
decl_stmt|;
specifier|final
name|T
name|result
decl_stmt|;
specifier|final
name|String
name|error
decl_stmt|;
specifier|final
name|SparkCounters
name|sparkCounters
decl_stmt|;
name|JobResult
parameter_list|(
name|String
name|id
parameter_list|,
name|T
name|result
parameter_list|,
name|Throwable
name|error
parameter_list|,
name|SparkCounters
name|sparkCounters
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
name|this
operator|.
name|result
operator|=
name|result
expr_stmt|;
name|this
operator|.
name|error
operator|=
name|error
operator|!=
literal|null
condition|?
name|Throwables
operator|.
name|getStackTraceAsString
argument_list|(
name|error
argument_list|)
else|:
literal|null
expr_stmt|;
name|this
operator|.
name|sparkCounters
operator|=
name|sparkCounters
expr_stmt|;
block|}
name|JobResult
parameter_list|()
block|{
name|this
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Inform the client that a new spark job has been submitted for the client job.    */
specifier|protected
specifier|static
class|class
name|JobSubmitted
implements|implements
name|Serializable
block|{
specifier|final
name|String
name|clientJobId
decl_stmt|;
specifier|final
name|int
name|sparkJobId
decl_stmt|;
name|JobSubmitted
parameter_list|(
name|String
name|clientJobId
parameter_list|,
name|int
name|sparkJobId
parameter_list|)
block|{
name|this
operator|.
name|clientJobId
operator|=
name|clientJobId
expr_stmt|;
name|this
operator|.
name|sparkJobId
operator|=
name|sparkJobId
expr_stmt|;
block|}
name|JobSubmitted
parameter_list|()
block|{
name|this
argument_list|(
literal|null
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

