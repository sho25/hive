begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|spark
operator|.
name|client
operator|.
name|metrics
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|spark
operator|.
name|executor
operator|.
name|TaskMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|common
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_comment
comment|/**  * Metrics pertaining to writing shuffle data.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|ShuffleWriteMetrics
implements|implements
name|Serializable
block|{
comment|/** Number of bytes written for the shuffle by tasks. */
specifier|public
specifier|final
name|long
name|shuffleBytesWritten
decl_stmt|;
comment|/** Time tasks spent blocking on writes to disk or buffer cache, in nanoseconds. */
specifier|public
specifier|final
name|long
name|shuffleWriteTime
decl_stmt|;
comment|/** Total number of records written to the shuffle by this task. */
specifier|public
specifier|final
name|long
name|shuffleRecordsWritten
decl_stmt|;
specifier|private
name|ShuffleWriteMetrics
parameter_list|()
block|{
comment|// For Serialization only.
name|this
argument_list|(
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ShuffleWriteMetrics
parameter_list|(
name|long
name|shuffleBytesWritten
parameter_list|,
name|long
name|shuffleWriteTime
parameter_list|,
name|long
name|shuffleRecordsWritten
parameter_list|)
block|{
name|this
operator|.
name|shuffleBytesWritten
operator|=
name|shuffleBytesWritten
expr_stmt|;
name|this
operator|.
name|shuffleWriteTime
operator|=
name|shuffleWriteTime
expr_stmt|;
name|this
operator|.
name|shuffleRecordsWritten
operator|=
name|shuffleRecordsWritten
expr_stmt|;
block|}
specifier|public
name|ShuffleWriteMetrics
parameter_list|(
name|TaskMetrics
name|metrics
parameter_list|)
block|{
name|this
argument_list|(
name|metrics
operator|.
name|shuffleWriteMetrics
argument_list|()
operator|.
name|shuffleBytesWritten
argument_list|()
argument_list|,
name|metrics
operator|.
name|shuffleWriteMetrics
argument_list|()
operator|.
name|shuffleWriteTime
argument_list|()
argument_list|,
name|metrics
operator|.
name|shuffleWriteMetrics
argument_list|()
operator|.
name|shuffleRecordsWritten
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"ShuffleWriteMetrics{"
operator|+
literal|"shuffleBytesWritten="
operator|+
name|shuffleBytesWritten
operator|+
literal|", shuffleWriteTime="
operator|+
name|shuffleWriteTime
operator|+
literal|'}'
return|;
block|}
block|}
end_class

end_unit

