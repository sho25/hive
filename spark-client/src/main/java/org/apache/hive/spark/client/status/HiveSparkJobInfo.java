begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|spark
operator|.
name|client
operator|.
name|status
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|spark
operator|.
name|JobExecutionStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|spark
operator|.
name|SparkJobInfo
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_comment
comment|/**  * Wrapper of SparkJobInfo  */
end_comment

begin_class
specifier|public
class|class
name|HiveSparkJobInfo
implements|implements
name|SparkJobInfo
implements|,
name|Serializable
block|{
specifier|private
specifier|final
name|int
name|jobId
decl_stmt|;
specifier|private
specifier|final
name|int
index|[]
name|stageIds
decl_stmt|;
specifier|private
specifier|final
name|JobExecutionStatus
name|status
decl_stmt|;
specifier|public
name|HiveSparkJobInfo
parameter_list|(
name|SparkJobInfo
name|jobInfo
parameter_list|)
block|{
name|this
operator|.
name|jobId
operator|=
name|jobInfo
operator|.
name|jobId
argument_list|()
expr_stmt|;
name|this
operator|.
name|stageIds
operator|=
name|jobInfo
operator|.
name|stageIds
argument_list|()
expr_stmt|;
name|this
operator|.
name|status
operator|=
name|jobInfo
operator|.
name|status
argument_list|()
expr_stmt|;
block|}
specifier|public
name|HiveSparkJobInfo
parameter_list|(
name|int
name|jobId
parameter_list|,
name|int
index|[]
name|stageIds
parameter_list|,
name|JobExecutionStatus
name|status
parameter_list|)
block|{
name|this
operator|.
name|jobId
operator|=
name|jobId
expr_stmt|;
name|this
operator|.
name|stageIds
operator|=
name|stageIds
expr_stmt|;
name|this
operator|.
name|status
operator|=
name|status
expr_stmt|;
block|}
specifier|public
name|HiveSparkJobInfo
parameter_list|()
block|{
name|this
argument_list|(
operator|-
literal|1
argument_list|,
operator|new
name|int
index|[
literal|0
index|]
argument_list|,
name|JobExecutionStatus
operator|.
name|UNKNOWN
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|jobId
parameter_list|()
block|{
return|return
name|jobId
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
index|[]
name|stageIds
parameter_list|()
block|{
return|return
name|stageIds
return|;
block|}
annotation|@
name|Override
specifier|public
name|JobExecutionStatus
name|status
parameter_list|()
block|{
return|return
name|status
return|;
block|}
block|}
end_class

end_unit

