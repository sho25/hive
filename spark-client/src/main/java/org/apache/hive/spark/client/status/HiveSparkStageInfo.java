begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hive
operator|.
name|spark
operator|.
name|client
operator|.
name|status
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|spark
operator|.
name|SparkStageInfo
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_comment
comment|/**  * Wrapper of SparkStageInfo  */
end_comment

begin_class
specifier|public
class|class
name|HiveSparkStageInfo
implements|implements
name|SparkStageInfo
implements|,
name|Serializable
block|{
specifier|private
specifier|final
name|int
name|stageId
decl_stmt|;
specifier|private
specifier|final
name|int
name|currentAttemptId
decl_stmt|;
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
specifier|private
specifier|final
name|int
name|numTasks
decl_stmt|;
specifier|private
specifier|final
name|int
name|numActiveTasks
decl_stmt|;
specifier|private
specifier|final
name|int
name|numCompletedTasks
decl_stmt|;
specifier|private
specifier|final
name|int
name|numFailedTasks
decl_stmt|;
specifier|public
name|HiveSparkStageInfo
parameter_list|(
name|SparkStageInfo
name|stageInfo
parameter_list|)
block|{
name|stageId
operator|=
name|stageInfo
operator|.
name|stageId
argument_list|()
expr_stmt|;
name|currentAttemptId
operator|=
name|stageInfo
operator|.
name|currentAttemptId
argument_list|()
expr_stmt|;
name|name
operator|=
name|stageInfo
operator|.
name|name
argument_list|()
expr_stmt|;
name|numTasks
operator|=
name|stageInfo
operator|.
name|numTasks
argument_list|()
expr_stmt|;
name|numActiveTasks
operator|=
name|stageInfo
operator|.
name|numActiveTasks
argument_list|()
expr_stmt|;
name|numCompletedTasks
operator|=
name|stageInfo
operator|.
name|numCompletedTasks
argument_list|()
expr_stmt|;
name|numFailedTasks
operator|=
name|stageInfo
operator|.
name|numFailedTasks
argument_list|()
expr_stmt|;
block|}
specifier|public
name|HiveSparkStageInfo
parameter_list|(
name|int
name|stageId
parameter_list|,
name|int
name|currentAttemptId
parameter_list|,
name|String
name|name
parameter_list|,
name|int
name|numTasks
parameter_list|,
name|int
name|numActiveTasks
parameter_list|,
name|int
name|numCompletedTasks
parameter_list|,
name|int
name|numFailedTasks
parameter_list|)
block|{
name|this
operator|.
name|stageId
operator|=
name|stageId
expr_stmt|;
name|this
operator|.
name|currentAttemptId
operator|=
name|currentAttemptId
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|numTasks
operator|=
name|numTasks
expr_stmt|;
name|this
operator|.
name|numActiveTasks
operator|=
name|numActiveTasks
expr_stmt|;
name|this
operator|.
name|numCompletedTasks
operator|=
name|numCompletedTasks
expr_stmt|;
name|this
operator|.
name|numFailedTasks
operator|=
name|numFailedTasks
expr_stmt|;
block|}
specifier|public
name|HiveSparkStageInfo
parameter_list|()
block|{
name|this
argument_list|(
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|stageId
parameter_list|()
block|{
return|return
name|stageId
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|currentAttemptId
parameter_list|()
block|{
return|return
name|currentAttemptId
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|name
parameter_list|()
block|{
return|return
name|name
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|numTasks
parameter_list|()
block|{
return|return
name|numTasks
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|numActiveTasks
parameter_list|()
block|{
return|return
name|numActiveTasks
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|numCompletedTasks
parameter_list|()
block|{
return|return
name|numCompletedTasks
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|numFailedTasks
parameter_list|()
block|{
return|return
name|numFailedTasks
return|;
block|}
block|}
end_class

end_unit

