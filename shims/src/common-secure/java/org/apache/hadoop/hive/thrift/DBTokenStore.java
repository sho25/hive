begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|thrift
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|InvocationTargetException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|codec
operator|.
name|binary
operator|.
name|Base64
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
operator|.
name|AbstractDelegationTokenSecretManager
operator|.
name|DelegationTokenInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|token
operator|.
name|delegation
operator|.
name|HiveDelegationTokenSupport
import|;
end_import

begin_class
specifier|public
class|class
name|DBTokenStore
implements|implements
name|DelegationTokenStore
block|{
annotation|@
name|Override
specifier|public
name|int
name|addMasterKey
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|TokenStoreException
block|{
return|return
operator|(
name|Integer
operator|)
name|invokeOnRawStore
argument_list|(
literal|"addMasterKey"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|s
block|}
argument_list|,
name|String
operator|.
name|class
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateMasterKey
parameter_list|(
name|int
name|keySeq
parameter_list|,
name|String
name|s
parameter_list|)
throws|throws
name|TokenStoreException
block|{
name|invokeOnRawStore
argument_list|(
literal|"updateMasterKey"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|Integer
operator|.
name|valueOf
argument_list|(
name|keySeq
argument_list|)
block|,
name|s
block|}
argument_list|,
name|Integer
operator|.
name|class
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|removeMasterKey
parameter_list|(
name|int
name|keySeq
parameter_list|)
block|{
return|return
operator|(
name|Boolean
operator|)
name|invokeOnRawStore
argument_list|(
literal|"removeMasterKey"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|Integer
operator|.
name|valueOf
argument_list|(
name|keySeq
argument_list|)
block|}
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
index|[]
name|getMasterKeys
parameter_list|()
throws|throws
name|TokenStoreException
block|{
return|return
operator|(
name|String
index|[]
operator|)
name|invokeOnRawStore
argument_list|(
literal|"getMasterKeys"
argument_list|,
operator|new
name|Object
index|[
literal|0
index|]
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|addToken
parameter_list|(
name|DelegationTokenIdentifier
name|tokenIdentifier
parameter_list|,
name|DelegationTokenInformation
name|token
parameter_list|)
throws|throws
name|TokenStoreException
block|{
try|try
block|{
name|String
name|identifier
init|=
name|TokenStoreDelegationTokenSecretManager
operator|.
name|encodeWritable
argument_list|(
name|tokenIdentifier
argument_list|)
decl_stmt|;
name|String
name|tokenStr
init|=
name|Base64
operator|.
name|encodeBase64URLSafeString
argument_list|(
name|HiveDelegationTokenSupport
operator|.
name|encodeDelegationTokenInformation
argument_list|(
name|token
argument_list|)
argument_list|)
decl_stmt|;
return|return
operator|(
name|Boolean
operator|)
name|invokeOnRawStore
argument_list|(
literal|"addToken"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|identifier
block|,
name|tokenStr
block|}
argument_list|,
name|String
operator|.
name|class
argument_list|,
name|String
operator|.
name|class
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|TokenStoreException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|DelegationTokenInformation
name|getToken
parameter_list|(
name|DelegationTokenIdentifier
name|tokenIdentifier
parameter_list|)
throws|throws
name|TokenStoreException
block|{
try|try
block|{
name|String
name|tokenStr
init|=
operator|(
name|String
operator|)
name|invokeOnRawStore
argument_list|(
literal|"getToken"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|TokenStoreDelegationTokenSecretManager
operator|.
name|encodeWritable
argument_list|(
name|tokenIdentifier
argument_list|)
block|}
argument_list|,
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
operator|(
literal|null
operator|==
name|tokenStr
operator|)
condition|?
literal|null
else|:
name|HiveDelegationTokenSupport
operator|.
name|decodeDelegationTokenInformation
argument_list|(
name|Base64
operator|.
name|decodeBase64
argument_list|(
name|tokenStr
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|TokenStoreException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|removeToken
parameter_list|(
name|DelegationTokenIdentifier
name|tokenIdentifier
parameter_list|)
throws|throws
name|TokenStoreException
block|{
try|try
block|{
return|return
operator|(
name|Boolean
operator|)
name|invokeOnRawStore
argument_list|(
literal|"removeToken"
argument_list|,
operator|new
name|Object
index|[]
block|{
name|TokenStoreDelegationTokenSecretManager
operator|.
name|encodeWritable
argument_list|(
name|tokenIdentifier
argument_list|)
block|}
argument_list|,
name|String
operator|.
name|class
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|TokenStoreException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
name|getAllDelegationTokenIdentifiers
parameter_list|()
throws|throws
name|TokenStoreException
block|{
name|List
argument_list|<
name|String
argument_list|>
name|tokenIdents
init|=
operator|(
name|List
argument_list|<
name|String
argument_list|>
operator|)
name|invokeOnRawStore
argument_list|(
literal|"getAllTokenIdentifiers"
argument_list|,
operator|new
name|Object
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
name|delTokenIdents
init|=
operator|new
name|ArrayList
argument_list|<
name|DelegationTokenIdentifier
argument_list|>
argument_list|(
name|tokenIdents
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|tokenIdent
range|:
name|tokenIdents
control|)
block|{
name|DelegationTokenIdentifier
name|delToken
init|=
operator|new
name|DelegationTokenIdentifier
argument_list|()
decl_stmt|;
try|try
block|{
name|TokenStoreDelegationTokenSecretManager
operator|.
name|decodeWritable
argument_list|(
name|delToken
argument_list|,
name|tokenIdent
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|TokenStoreException
argument_list|(
name|e
argument_list|)
throw|;
block|}
name|delTokenIdents
operator|.
name|add
argument_list|(
name|delToken
argument_list|)
expr_stmt|;
block|}
return|return
name|delTokenIdents
return|;
block|}
specifier|private
name|Object
name|hmsHandler
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|setStore
parameter_list|(
name|Object
name|hms
parameter_list|)
throws|throws
name|TokenStoreException
block|{
name|hmsHandler
operator|=
name|hms
expr_stmt|;
block|}
specifier|private
name|Object
name|invokeOnRawStore
parameter_list|(
name|String
name|methName
parameter_list|,
name|Object
index|[]
name|params
parameter_list|,
name|Class
argument_list|<
name|?
argument_list|>
modifier|...
name|paramTypes
parameter_list|)
throws|throws
name|TokenStoreException
block|{
try|try
block|{
name|Object
name|rawStore
init|=
name|hmsHandler
operator|.
name|getClass
argument_list|()
operator|.
name|getMethod
argument_list|(
literal|"getMS"
argument_list|)
operator|.
name|invoke
argument_list|(
name|hmsHandler
argument_list|)
decl_stmt|;
return|return
name|rawStore
operator|.
name|getClass
argument_list|()
operator|.
name|getMethod
argument_list|(
name|methName
argument_list|,
name|paramTypes
argument_list|)
operator|.
name|invoke
argument_list|(
name|rawStore
argument_list|,
name|params
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|TokenStoreException
argument_list|(
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|SecurityException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|TokenStoreException
argument_list|(
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|IllegalAccessException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|TokenStoreException
argument_list|(
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|InvocationTargetException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|TokenStoreException
argument_list|(
name|e
operator|.
name|getCause
argument_list|()
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|NoSuchMethodException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|TokenStoreException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setConf
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
comment|// No-op
block|}
annotation|@
name|Override
specifier|public
name|Configuration
name|getConf
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
comment|// No-op.
block|}
block|}
end_class

end_unit

