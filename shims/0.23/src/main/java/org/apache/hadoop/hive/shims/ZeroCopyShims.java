begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|shims
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FSDataInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|ReadOption
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|ByteBufferPool
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|shims
operator|.
name|HadoopShims
operator|.
name|ByteBufferPoolShim
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|shims
operator|.
name|HadoopShims
operator|.
name|ZeroCopyReaderShim
import|;
end_import

begin_class
class|class
name|ZeroCopyShims
block|{
specifier|private
specifier|static
specifier|final
class|class
name|ByteBufferPoolAdapter
implements|implements
name|ByteBufferPool
block|{
specifier|private
name|ByteBufferPoolShim
name|pool
decl_stmt|;
specifier|public
name|ByteBufferPoolAdapter
parameter_list|(
name|ByteBufferPoolShim
name|pool
parameter_list|)
block|{
name|this
operator|.
name|pool
operator|=
name|pool
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
specifier|final
name|ByteBuffer
name|getBuffer
parameter_list|(
name|boolean
name|direct
parameter_list|,
name|int
name|length
parameter_list|)
block|{
return|return
name|this
operator|.
name|pool
operator|.
name|getBuffer
argument_list|(
name|direct
argument_list|,
name|length
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
specifier|final
name|void
name|putBuffer
parameter_list|(
name|ByteBuffer
name|buffer
parameter_list|)
block|{
name|this
operator|.
name|pool
operator|.
name|putBuffer
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
specifier|final
class|class
name|ZeroCopyAdapter
implements|implements
name|ZeroCopyReaderShim
block|{
specifier|private
specifier|final
name|FSDataInputStream
name|in
decl_stmt|;
specifier|private
specifier|final
name|ByteBufferPoolAdapter
name|pool
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|EnumSet
argument_list|<
name|ReadOption
argument_list|>
name|CHECK_SUM
init|=
name|EnumSet
operator|.
name|noneOf
argument_list|(
name|ReadOption
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|EnumSet
argument_list|<
name|ReadOption
argument_list|>
name|NO_CHECK_SUM
init|=
name|EnumSet
operator|.
name|of
argument_list|(
name|ReadOption
operator|.
name|SKIP_CHECKSUMS
argument_list|)
decl_stmt|;
specifier|public
name|ZeroCopyAdapter
parameter_list|(
name|FSDataInputStream
name|in
parameter_list|,
name|ByteBufferPoolShim
name|poolshim
parameter_list|)
block|{
name|this
operator|.
name|in
operator|=
name|in
expr_stmt|;
if|if
condition|(
name|poolshim
operator|!=
literal|null
condition|)
block|{
name|pool
operator|=
operator|new
name|ByteBufferPoolAdapter
argument_list|(
name|poolshim
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|pool
operator|=
literal|null
expr_stmt|;
block|}
block|}
specifier|public
specifier|final
name|ByteBuffer
name|readBuffer
parameter_list|(
name|int
name|maxLength
parameter_list|,
name|boolean
name|verifyChecksums
parameter_list|)
throws|throws
name|IOException
block|{
name|EnumSet
argument_list|<
name|ReadOption
argument_list|>
name|options
init|=
name|NO_CHECK_SUM
decl_stmt|;
if|if
condition|(
name|verifyChecksums
condition|)
block|{
name|options
operator|=
name|CHECK_SUM
expr_stmt|;
block|}
return|return
name|this
operator|.
name|in
operator|.
name|read
argument_list|(
name|this
operator|.
name|pool
argument_list|,
name|maxLength
argument_list|,
name|options
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|void
name|releaseBuffer
parameter_list|(
name|ByteBuffer
name|buffer
parameter_list|)
block|{
name|this
operator|.
name|in
operator|.
name|releaseBuffer
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|ZeroCopyReaderShim
name|getZeroCopyReader
parameter_list|(
name|FSDataInputStream
name|in
parameter_list|,
name|ByteBufferPoolShim
name|pool
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|ZeroCopyAdapter
argument_list|(
name|in
argument_list|,
name|pool
argument_list|)
return|;
block|}
block|}
end_class

end_unit

