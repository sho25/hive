begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|io
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FsShell
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsPermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doThrow
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
specifier|public
class|class
name|TestHdfsUtils
block|{
comment|/**    * Tests that {@link HdfsUtils#setFullFileStatus(Configuration, HdfsUtils.HadoopFileStatus, String, FileSystem, Path, boolean)}    * does not throw an exception when setting the group and without recursion.    */
annotation|@
name|Test
specifier|public
name|void
name|testSetFullFileStatusFailInheritGroup
parameter_list|()
throws|throws
name|IOException
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"dfs.namenode.acls.enabled"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|HdfsUtils
operator|.
name|HadoopFileStatus
name|mockHadoopFileStatus
init|=
name|mock
argument_list|(
name|HdfsUtils
operator|.
name|HadoopFileStatus
operator|.
name|class
argument_list|)
decl_stmt|;
name|FileStatus
name|mockSourceStatus
init|=
name|mock
argument_list|(
name|FileStatus
operator|.
name|class
argument_list|)
decl_stmt|;
name|FileSystem
name|fs
init|=
name|mock
argument_list|(
name|FileSystem
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|mockSourceStatus
operator|.
name|getGroup
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|"fakeGroup1"
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockHadoopFileStatus
operator|.
name|getFileStatus
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockSourceStatus
argument_list|)
expr_stmt|;
name|doThrow
argument_list|(
name|RuntimeException
operator|.
name|class
argument_list|)
operator|.
name|when
argument_list|(
name|fs
argument_list|)
operator|.
name|setOwner
argument_list|(
name|any
argument_list|(
name|Path
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|HdfsUtils
operator|.
name|setFullFileStatus
argument_list|(
name|conf
argument_list|,
name|mockHadoopFileStatus
argument_list|,
literal|"fakeGroup2"
argument_list|,
name|fs
argument_list|,
operator|new
name|Path
argument_list|(
literal|"fakePath"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|fs
argument_list|)
operator|.
name|setOwner
argument_list|(
name|any
argument_list|(
name|Path
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Tests that {@link HdfsUtils#setFullFileStatus(Configuration, HdfsUtils.HadoopFileStatus, FileSystem, Path, boolean)}    * does not thrown an exception when setting ACLs and without recursion.    */
annotation|@
name|Test
specifier|public
name|void
name|testSetFullFileStatusFailInheritAcls
parameter_list|()
throws|throws
name|IOException
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"dfs.namenode.acls.enabled"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|HdfsUtils
operator|.
name|HadoopFileStatus
name|mockHadoopFileStatus
init|=
name|mock
argument_list|(
name|HdfsUtils
operator|.
name|HadoopFileStatus
operator|.
name|class
argument_list|)
decl_stmt|;
name|FileStatus
name|mockSourceStatus
init|=
name|mock
argument_list|(
name|FileStatus
operator|.
name|class
argument_list|)
decl_stmt|;
name|AclStatus
name|mockAclStatus
init|=
name|mock
argument_list|(
name|AclStatus
operator|.
name|class
argument_list|)
decl_stmt|;
name|FileSystem
name|mockFs
init|=
name|mock
argument_list|(
name|FileSystem
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|mockSourceStatus
operator|.
name|getPermission
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|FsPermission
argument_list|(
operator|(
name|short
operator|)
literal|777
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockAclStatus
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockHadoopFileStatus
operator|.
name|getFileStatus
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockSourceStatus
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockHadoopFileStatus
operator|.
name|getAclEntries
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockHadoopFileStatus
operator|.
name|getAclStatus
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockAclStatus
argument_list|)
expr_stmt|;
name|doThrow
argument_list|(
name|RuntimeException
operator|.
name|class
argument_list|)
operator|.
name|when
argument_list|(
name|mockFs
argument_list|)
operator|.
name|setAcl
argument_list|(
name|any
argument_list|(
name|Path
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|List
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|HdfsUtils
operator|.
name|setFullFileStatus
argument_list|(
name|conf
argument_list|,
name|mockHadoopFileStatus
argument_list|,
name|mockFs
argument_list|,
operator|new
name|Path
argument_list|(
literal|"fakePath"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockFs
argument_list|)
operator|.
name|setAcl
argument_list|(
name|any
argument_list|(
name|Path
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|List
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Tests that {@link HdfsUtils#setFullFileStatus(Configuration, HdfsUtils.HadoopFileStatus, FileSystem, Path, boolean)}    * does not thrown an exception when setting permissions and without recursion.    */
annotation|@
name|Test
specifier|public
name|void
name|testSetFullFileStatusFailInheritPerms
parameter_list|()
throws|throws
name|IOException
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"dfs.namenode.acls.enabled"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|HdfsUtils
operator|.
name|HadoopFileStatus
name|mockHadoopFileStatus
init|=
name|mock
argument_list|(
name|HdfsUtils
operator|.
name|HadoopFileStatus
operator|.
name|class
argument_list|)
decl_stmt|;
name|FileStatus
name|mockSourceStatus
init|=
name|mock
argument_list|(
name|FileStatus
operator|.
name|class
argument_list|)
decl_stmt|;
name|FileSystem
name|mockFs
init|=
name|mock
argument_list|(
name|FileSystem
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|mockSourceStatus
operator|.
name|getPermission
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|FsPermission
argument_list|(
operator|(
name|short
operator|)
literal|777
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockHadoopFileStatus
operator|.
name|getFileStatus
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockSourceStatus
argument_list|)
expr_stmt|;
name|doThrow
argument_list|(
name|RuntimeException
operator|.
name|class
argument_list|)
operator|.
name|when
argument_list|(
name|mockFs
argument_list|)
operator|.
name|setPermission
argument_list|(
name|any
argument_list|(
name|Path
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|FsPermission
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|HdfsUtils
operator|.
name|setFullFileStatus
argument_list|(
name|conf
argument_list|,
name|mockHadoopFileStatus
argument_list|,
name|mockFs
argument_list|,
operator|new
name|Path
argument_list|(
literal|"fakePath"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockFs
argument_list|)
operator|.
name|setPermission
argument_list|(
name|any
argument_list|(
name|Path
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|FsPermission
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Tests that {@link HdfsUtils#setFullFileStatus(Configuration, HdfsUtils.HadoopFileStatus, String, FileSystem, Path, boolean)}    * does not throw an exception when setting the group and with recursion.    */
annotation|@
name|Test
specifier|public
name|void
name|testSetFullFileStatusFailInheritGroupRecursive
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"dfs.namenode.acls.enabled"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|String
name|fakeSourceGroup
init|=
literal|"fakeGroup1"
decl_stmt|;
name|String
name|fakeTargetGroup
init|=
literal|"fakeGroup2"
decl_stmt|;
name|Path
name|fakeTarget
init|=
operator|new
name|Path
argument_list|(
literal|"fakePath"
argument_list|)
decl_stmt|;
name|HdfsUtils
operator|.
name|HadoopFileStatus
name|mockHadoopFileStatus
init|=
name|mock
argument_list|(
name|HdfsUtils
operator|.
name|HadoopFileStatus
operator|.
name|class
argument_list|)
decl_stmt|;
name|FileStatus
name|mockSourceStatus
init|=
name|mock
argument_list|(
name|FileStatus
operator|.
name|class
argument_list|)
decl_stmt|;
name|FsShell
name|mockFsShell
init|=
name|mock
argument_list|(
name|FsShell
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|mockSourceStatus
operator|.
name|getGroup
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|fakeSourceGroup
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockHadoopFileStatus
operator|.
name|getFileStatus
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockSourceStatus
argument_list|)
expr_stmt|;
name|doThrow
argument_list|(
name|RuntimeException
operator|.
name|class
argument_list|)
operator|.
name|when
argument_list|(
name|mockFsShell
argument_list|)
operator|.
name|run
argument_list|(
name|any
argument_list|(
name|String
index|[]
operator|.
expr|class
argument_list|)
argument_list|)
expr_stmt|;
name|HdfsUtils
operator|.
name|setFullFileStatus
argument_list|(
name|conf
argument_list|,
name|mockHadoopFileStatus
argument_list|,
name|fakeTargetGroup
argument_list|,
name|mock
argument_list|(
name|FileSystem
operator|.
name|class
argument_list|)
argument_list|,
name|fakeTarget
argument_list|,
literal|true
argument_list|,
name|mockFsShell
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockFsShell
argument_list|)
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-chgrp"
block|,
literal|"-R"
block|,
name|fakeSourceGroup
block|,
name|fakeTarget
operator|.
name|toString
argument_list|()
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**    * Tests that {@link HdfsUtils#setFullFileStatus(Configuration, HdfsUtils.HadoopFileStatus, FileSystem, Path, boolean)}    * does not thrown an exception when setting ACLs and with recursion.    */
annotation|@
name|Test
specifier|public
name|void
name|testSetFullFileStatusFailInheritAclsRecursive
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"dfs.namenode.acls.enabled"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|Path
name|fakeTarget
init|=
operator|new
name|Path
argument_list|(
literal|"fakePath"
argument_list|)
decl_stmt|;
name|HdfsUtils
operator|.
name|HadoopFileStatus
name|mockHadoopFileStatus
init|=
name|mock
argument_list|(
name|HdfsUtils
operator|.
name|HadoopFileStatus
operator|.
name|class
argument_list|)
decl_stmt|;
name|FileStatus
name|mockSourceStatus
init|=
name|mock
argument_list|(
name|FileStatus
operator|.
name|class
argument_list|)
decl_stmt|;
name|FsShell
name|mockFsShell
init|=
name|mock
argument_list|(
name|FsShell
operator|.
name|class
argument_list|)
decl_stmt|;
name|AclStatus
name|mockAclStatus
init|=
name|mock
argument_list|(
name|AclStatus
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|mockSourceStatus
operator|.
name|getPermission
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|FsPermission
argument_list|(
operator|(
name|short
operator|)
literal|777
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockAclStatus
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockHadoopFileStatus
operator|.
name|getFileStatus
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockSourceStatus
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockHadoopFileStatus
operator|.
name|getAclEntries
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|AclEntry
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockHadoopFileStatus
operator|.
name|getAclStatus
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockAclStatus
argument_list|)
expr_stmt|;
name|doThrow
argument_list|(
name|RuntimeException
operator|.
name|class
argument_list|)
operator|.
name|when
argument_list|(
name|mockFsShell
argument_list|)
operator|.
name|run
argument_list|(
name|any
argument_list|(
name|String
index|[]
operator|.
expr|class
argument_list|)
argument_list|)
expr_stmt|;
name|HdfsUtils
operator|.
name|setFullFileStatus
argument_list|(
name|conf
argument_list|,
name|mockHadoopFileStatus
argument_list|,
literal|""
argument_list|,
name|mock
argument_list|(
name|FileSystem
operator|.
name|class
argument_list|)
argument_list|,
name|fakeTarget
argument_list|,
literal|true
argument_list|,
name|mockFsShell
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockFsShell
argument_list|)
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-setfacl"
block|,
literal|"-R"
block|,
literal|"--set"
block|,
name|any
argument_list|(
name|String
operator|.
name|class
argument_list|)
block|,
name|fakeTarget
operator|.
name|toString
argument_list|()
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**    * Tests that {@link HdfsUtils#setFullFileStatus(Configuration, HdfsUtils.HadoopFileStatus, FileSystem, Path, boolean)}    * does not thrown an exception when setting permissions and with recursion.    */
annotation|@
name|Test
specifier|public
name|void
name|testSetFullFileStatusFailInheritPermsRecursive
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"dfs.namenode.acls.enabled"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|Path
name|fakeTarget
init|=
operator|new
name|Path
argument_list|(
literal|"fakePath"
argument_list|)
decl_stmt|;
name|HdfsUtils
operator|.
name|HadoopFileStatus
name|mockHadoopFileStatus
init|=
name|mock
argument_list|(
name|HdfsUtils
operator|.
name|HadoopFileStatus
operator|.
name|class
argument_list|)
decl_stmt|;
name|FileStatus
name|mockSourceStatus
init|=
name|mock
argument_list|(
name|FileStatus
operator|.
name|class
argument_list|)
decl_stmt|;
name|FsShell
name|mockFsShell
init|=
name|mock
argument_list|(
name|FsShell
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|mockSourceStatus
operator|.
name|getPermission
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|FsPermission
argument_list|(
operator|(
name|short
operator|)
literal|777
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|mockHadoopFileStatus
operator|.
name|getFileStatus
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|mockSourceStatus
argument_list|)
expr_stmt|;
name|doThrow
argument_list|(
name|RuntimeException
operator|.
name|class
argument_list|)
operator|.
name|when
argument_list|(
name|mockFsShell
argument_list|)
operator|.
name|run
argument_list|(
name|any
argument_list|(
name|String
index|[]
operator|.
expr|class
argument_list|)
argument_list|)
expr_stmt|;
name|HdfsUtils
operator|.
name|setFullFileStatus
argument_list|(
name|conf
argument_list|,
name|mockHadoopFileStatus
argument_list|,
literal|""
argument_list|,
name|mock
argument_list|(
name|FileSystem
operator|.
name|class
argument_list|)
argument_list|,
name|fakeTarget
argument_list|,
literal|true
argument_list|,
name|mockFsShell
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|mockFsShell
argument_list|)
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-chmod"
block|,
literal|"-R"
block|,
name|any
argument_list|(
name|String
operator|.
name|class
argument_list|)
block|,
name|fakeTarget
operator|.
name|toString
argument_list|()
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

