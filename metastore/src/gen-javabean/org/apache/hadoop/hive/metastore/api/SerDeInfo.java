begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Autogenerated by Thrift  *  * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|facebook
operator|.
name|thrift
operator|.
name|*
import|;
end_import

begin_import
import|import
name|com
operator|.
name|facebook
operator|.
name|thrift
operator|.
name|protocol
operator|.
name|*
import|;
end_import

begin_import
import|import
name|com
operator|.
name|facebook
operator|.
name|thrift
operator|.
name|transport
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|SerDeInfo
implements|implements
name|TBase
implements|,
name|java
operator|.
name|io
operator|.
name|Serializable
block|{
specifier|private
name|String
name|name
decl_stmt|;
specifier|private
name|String
name|serializationFormat
decl_stmt|;
specifier|private
name|String
name|serializationClass
decl_stmt|;
specifier|private
name|String
name|serializationLib
decl_stmt|;
specifier|private
name|String
name|fieldDelim
decl_stmt|;
specifier|private
name|String
name|collectionItemDelim
decl_stmt|;
specifier|private
name|String
name|mapKeyDelim
decl_stmt|;
specifier|private
name|String
name|lineDelim
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|parameters
decl_stmt|;
specifier|public
specifier|final
name|Isset
name|__isset
init|=
operator|new
name|Isset
argument_list|()
decl_stmt|;
specifier|public
specifier|static
specifier|final
class|class
name|Isset
implements|implements
name|java
operator|.
name|io
operator|.
name|Serializable
block|{
specifier|public
name|boolean
name|name
init|=
literal|false
decl_stmt|;
specifier|public
name|boolean
name|serializationFormat
init|=
literal|false
decl_stmt|;
specifier|public
name|boolean
name|serializationClass
init|=
literal|false
decl_stmt|;
specifier|public
name|boolean
name|serializationLib
init|=
literal|false
decl_stmt|;
specifier|public
name|boolean
name|fieldDelim
init|=
literal|false
decl_stmt|;
specifier|public
name|boolean
name|collectionItemDelim
init|=
literal|false
decl_stmt|;
specifier|public
name|boolean
name|mapKeyDelim
init|=
literal|false
decl_stmt|;
specifier|public
name|boolean
name|lineDelim
init|=
literal|false
decl_stmt|;
specifier|public
name|boolean
name|parameters
init|=
literal|false
decl_stmt|;
block|}
specifier|public
name|SerDeInfo
parameter_list|()
block|{ }
specifier|public
name|SerDeInfo
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|serializationFormat
parameter_list|,
name|String
name|serializationClass
parameter_list|,
name|String
name|serializationLib
parameter_list|,
name|String
name|fieldDelim
parameter_list|,
name|String
name|collectionItemDelim
parameter_list|,
name|String
name|mapKeyDelim
parameter_list|,
name|String
name|lineDelim
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|parameters
parameter_list|)
block|{
name|this
argument_list|()
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|name
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|serializationFormat
operator|=
name|serializationFormat
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|serializationFormat
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|serializationClass
operator|=
name|serializationClass
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|serializationClass
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|serializationLib
operator|=
name|serializationLib
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|serializationLib
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|fieldDelim
operator|=
name|fieldDelim
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|fieldDelim
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|collectionItemDelim
operator|=
name|collectionItemDelim
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|collectionItemDelim
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|mapKeyDelim
operator|=
name|mapKeyDelim
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|mapKeyDelim
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|lineDelim
operator|=
name|lineDelim
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|lineDelim
operator|=
literal|true
expr_stmt|;
name|this
operator|.
name|parameters
operator|=
name|parameters
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|parameters
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|this
operator|.
name|name
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|name
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|void
name|unsetName
parameter_list|()
block|{
name|this
operator|.
name|__isset
operator|.
name|name
operator|=
literal|false
expr_stmt|;
block|}
specifier|public
name|String
name|getSerializationFormat
parameter_list|()
block|{
return|return
name|this
operator|.
name|serializationFormat
return|;
block|}
specifier|public
name|void
name|setSerializationFormat
parameter_list|(
name|String
name|serializationFormat
parameter_list|)
block|{
name|this
operator|.
name|serializationFormat
operator|=
name|serializationFormat
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|serializationFormat
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|void
name|unsetSerializationFormat
parameter_list|()
block|{
name|this
operator|.
name|__isset
operator|.
name|serializationFormat
operator|=
literal|false
expr_stmt|;
block|}
specifier|public
name|String
name|getSerializationClass
parameter_list|()
block|{
return|return
name|this
operator|.
name|serializationClass
return|;
block|}
specifier|public
name|void
name|setSerializationClass
parameter_list|(
name|String
name|serializationClass
parameter_list|)
block|{
name|this
operator|.
name|serializationClass
operator|=
name|serializationClass
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|serializationClass
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|void
name|unsetSerializationClass
parameter_list|()
block|{
name|this
operator|.
name|__isset
operator|.
name|serializationClass
operator|=
literal|false
expr_stmt|;
block|}
specifier|public
name|String
name|getSerializationLib
parameter_list|()
block|{
return|return
name|this
operator|.
name|serializationLib
return|;
block|}
specifier|public
name|void
name|setSerializationLib
parameter_list|(
name|String
name|serializationLib
parameter_list|)
block|{
name|this
operator|.
name|serializationLib
operator|=
name|serializationLib
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|serializationLib
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|void
name|unsetSerializationLib
parameter_list|()
block|{
name|this
operator|.
name|__isset
operator|.
name|serializationLib
operator|=
literal|false
expr_stmt|;
block|}
specifier|public
name|String
name|getFieldDelim
parameter_list|()
block|{
return|return
name|this
operator|.
name|fieldDelim
return|;
block|}
specifier|public
name|void
name|setFieldDelim
parameter_list|(
name|String
name|fieldDelim
parameter_list|)
block|{
name|this
operator|.
name|fieldDelim
operator|=
name|fieldDelim
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|fieldDelim
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|void
name|unsetFieldDelim
parameter_list|()
block|{
name|this
operator|.
name|__isset
operator|.
name|fieldDelim
operator|=
literal|false
expr_stmt|;
block|}
specifier|public
name|String
name|getCollectionItemDelim
parameter_list|()
block|{
return|return
name|this
operator|.
name|collectionItemDelim
return|;
block|}
specifier|public
name|void
name|setCollectionItemDelim
parameter_list|(
name|String
name|collectionItemDelim
parameter_list|)
block|{
name|this
operator|.
name|collectionItemDelim
operator|=
name|collectionItemDelim
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|collectionItemDelim
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|void
name|unsetCollectionItemDelim
parameter_list|()
block|{
name|this
operator|.
name|__isset
operator|.
name|collectionItemDelim
operator|=
literal|false
expr_stmt|;
block|}
specifier|public
name|String
name|getMapKeyDelim
parameter_list|()
block|{
return|return
name|this
operator|.
name|mapKeyDelim
return|;
block|}
specifier|public
name|void
name|setMapKeyDelim
parameter_list|(
name|String
name|mapKeyDelim
parameter_list|)
block|{
name|this
operator|.
name|mapKeyDelim
operator|=
name|mapKeyDelim
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|mapKeyDelim
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|void
name|unsetMapKeyDelim
parameter_list|()
block|{
name|this
operator|.
name|__isset
operator|.
name|mapKeyDelim
operator|=
literal|false
expr_stmt|;
block|}
specifier|public
name|String
name|getLineDelim
parameter_list|()
block|{
return|return
name|this
operator|.
name|lineDelim
return|;
block|}
specifier|public
name|void
name|setLineDelim
parameter_list|(
name|String
name|lineDelim
parameter_list|)
block|{
name|this
operator|.
name|lineDelim
operator|=
name|lineDelim
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|lineDelim
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|void
name|unsetLineDelim
parameter_list|()
block|{
name|this
operator|.
name|__isset
operator|.
name|lineDelim
operator|=
literal|false
expr_stmt|;
block|}
specifier|public
name|int
name|getParametersSize
parameter_list|()
block|{
return|return
operator|(
name|this
operator|.
name|parameters
operator|==
literal|null
operator|)
condition|?
literal|0
else|:
name|this
operator|.
name|parameters
operator|.
name|size
argument_list|()
return|;
block|}
specifier|public
name|void
name|putToParameters
parameter_list|(
name|String
name|key
parameter_list|,
name|String
name|val
parameter_list|)
block|{
if|if
condition|(
name|this
operator|.
name|parameters
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|parameters
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|parameters
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|val
argument_list|)
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|parameters
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getParameters
parameter_list|()
block|{
return|return
name|this
operator|.
name|parameters
return|;
block|}
specifier|public
name|void
name|setParameters
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|parameters
parameter_list|)
block|{
name|this
operator|.
name|parameters
operator|=
name|parameters
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|parameters
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|void
name|unsetParameters
parameter_list|()
block|{
name|this
operator|.
name|parameters
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|parameters
operator|=
literal|false
expr_stmt|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|that
parameter_list|)
block|{
if|if
condition|(
name|that
operator|==
literal|null
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|that
operator|instanceof
name|SerDeInfo
condition|)
return|return
name|this
operator|.
name|equals
argument_list|(
operator|(
name|SerDeInfo
operator|)
name|that
argument_list|)
return|;
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|equals
parameter_list|(
name|SerDeInfo
name|that
parameter_list|)
block|{
if|if
condition|(
name|that
operator|==
literal|null
condition|)
return|return
literal|false
return|;
name|boolean
name|this_present_name
init|=
literal|true
operator|&&
operator|(
name|this
operator|.
name|name
operator|!=
literal|null
operator|)
decl_stmt|;
name|boolean
name|that_present_name
init|=
literal|true
operator|&&
operator|(
name|that
operator|.
name|name
operator|!=
literal|null
operator|)
decl_stmt|;
if|if
condition|(
name|this_present_name
operator|||
name|that_present_name
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|this_present_name
operator|&&
name|that_present_name
operator|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|this
operator|.
name|name
operator|.
name|equals
argument_list|(
name|that
operator|.
name|name
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
name|boolean
name|this_present_serializationFormat
init|=
literal|true
operator|&&
operator|(
name|this
operator|.
name|serializationFormat
operator|!=
literal|null
operator|)
decl_stmt|;
name|boolean
name|that_present_serializationFormat
init|=
literal|true
operator|&&
operator|(
name|that
operator|.
name|serializationFormat
operator|!=
literal|null
operator|)
decl_stmt|;
if|if
condition|(
name|this_present_serializationFormat
operator|||
name|that_present_serializationFormat
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|this_present_serializationFormat
operator|&&
name|that_present_serializationFormat
operator|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|this
operator|.
name|serializationFormat
operator|.
name|equals
argument_list|(
name|that
operator|.
name|serializationFormat
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
name|boolean
name|this_present_serializationClass
init|=
literal|true
operator|&&
operator|(
name|this
operator|.
name|serializationClass
operator|!=
literal|null
operator|)
decl_stmt|;
name|boolean
name|that_present_serializationClass
init|=
literal|true
operator|&&
operator|(
name|that
operator|.
name|serializationClass
operator|!=
literal|null
operator|)
decl_stmt|;
if|if
condition|(
name|this_present_serializationClass
operator|||
name|that_present_serializationClass
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|this_present_serializationClass
operator|&&
name|that_present_serializationClass
operator|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|this
operator|.
name|serializationClass
operator|.
name|equals
argument_list|(
name|that
operator|.
name|serializationClass
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
name|boolean
name|this_present_serializationLib
init|=
literal|true
operator|&&
operator|(
name|this
operator|.
name|serializationLib
operator|!=
literal|null
operator|)
decl_stmt|;
name|boolean
name|that_present_serializationLib
init|=
literal|true
operator|&&
operator|(
name|that
operator|.
name|serializationLib
operator|!=
literal|null
operator|)
decl_stmt|;
if|if
condition|(
name|this_present_serializationLib
operator|||
name|that_present_serializationLib
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|this_present_serializationLib
operator|&&
name|that_present_serializationLib
operator|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|this
operator|.
name|serializationLib
operator|.
name|equals
argument_list|(
name|that
operator|.
name|serializationLib
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
name|boolean
name|this_present_fieldDelim
init|=
literal|true
operator|&&
operator|(
name|this
operator|.
name|fieldDelim
operator|!=
literal|null
operator|)
decl_stmt|;
name|boolean
name|that_present_fieldDelim
init|=
literal|true
operator|&&
operator|(
name|that
operator|.
name|fieldDelim
operator|!=
literal|null
operator|)
decl_stmt|;
if|if
condition|(
name|this_present_fieldDelim
operator|||
name|that_present_fieldDelim
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|this_present_fieldDelim
operator|&&
name|that_present_fieldDelim
operator|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|this
operator|.
name|fieldDelim
operator|.
name|equals
argument_list|(
name|that
operator|.
name|fieldDelim
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
name|boolean
name|this_present_collectionItemDelim
init|=
literal|true
operator|&&
operator|(
name|this
operator|.
name|collectionItemDelim
operator|!=
literal|null
operator|)
decl_stmt|;
name|boolean
name|that_present_collectionItemDelim
init|=
literal|true
operator|&&
operator|(
name|that
operator|.
name|collectionItemDelim
operator|!=
literal|null
operator|)
decl_stmt|;
if|if
condition|(
name|this_present_collectionItemDelim
operator|||
name|that_present_collectionItemDelim
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|this_present_collectionItemDelim
operator|&&
name|that_present_collectionItemDelim
operator|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|this
operator|.
name|collectionItemDelim
operator|.
name|equals
argument_list|(
name|that
operator|.
name|collectionItemDelim
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
name|boolean
name|this_present_mapKeyDelim
init|=
literal|true
operator|&&
operator|(
name|this
operator|.
name|mapKeyDelim
operator|!=
literal|null
operator|)
decl_stmt|;
name|boolean
name|that_present_mapKeyDelim
init|=
literal|true
operator|&&
operator|(
name|that
operator|.
name|mapKeyDelim
operator|!=
literal|null
operator|)
decl_stmt|;
if|if
condition|(
name|this_present_mapKeyDelim
operator|||
name|that_present_mapKeyDelim
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|this_present_mapKeyDelim
operator|&&
name|that_present_mapKeyDelim
operator|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|this
operator|.
name|mapKeyDelim
operator|.
name|equals
argument_list|(
name|that
operator|.
name|mapKeyDelim
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
name|boolean
name|this_present_lineDelim
init|=
literal|true
operator|&&
operator|(
name|this
operator|.
name|lineDelim
operator|!=
literal|null
operator|)
decl_stmt|;
name|boolean
name|that_present_lineDelim
init|=
literal|true
operator|&&
operator|(
name|that
operator|.
name|lineDelim
operator|!=
literal|null
operator|)
decl_stmt|;
if|if
condition|(
name|this_present_lineDelim
operator|||
name|that_present_lineDelim
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|this_present_lineDelim
operator|&&
name|that_present_lineDelim
operator|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|this
operator|.
name|lineDelim
operator|.
name|equals
argument_list|(
name|that
operator|.
name|lineDelim
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
name|boolean
name|this_present_parameters
init|=
literal|true
operator|&&
operator|(
name|this
operator|.
name|parameters
operator|!=
literal|null
operator|)
decl_stmt|;
name|boolean
name|that_present_parameters
init|=
literal|true
operator|&&
operator|(
name|that
operator|.
name|parameters
operator|!=
literal|null
operator|)
decl_stmt|;
if|if
condition|(
name|this_present_parameters
operator|||
name|that_present_parameters
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|this_present_parameters
operator|&&
name|that_present_parameters
operator|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|this
operator|.
name|parameters
operator|.
name|equals
argument_list|(
name|that
operator|.
name|parameters
argument_list|)
condition|)
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
literal|0
return|;
block|}
specifier|public
name|void
name|read
parameter_list|(
name|TProtocol
name|iprot
parameter_list|)
throws|throws
name|TException
block|{
name|TField
name|field
decl_stmt|;
name|iprot
operator|.
name|readStructBegin
argument_list|()
expr_stmt|;
while|while
condition|(
literal|true
condition|)
block|{
name|field
operator|=
name|iprot
operator|.
name|readFieldBegin
argument_list|()
expr_stmt|;
if|if
condition|(
name|field
operator|.
name|type
operator|==
name|TType
operator|.
name|STOP
condition|)
block|{
break|break;
block|}
switch|switch
condition|(
name|field
operator|.
name|id
condition|)
block|{
case|case
operator|-
literal|1
case|:
if|if
condition|(
name|field
operator|.
name|type
operator|==
name|TType
operator|.
name|STRING
condition|)
block|{
name|this
operator|.
name|name
operator|=
name|iprot
operator|.
name|readString
argument_list|()
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|name
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|TProtocolUtil
operator|.
name|skip
argument_list|(
name|iprot
argument_list|,
name|field
operator|.
name|type
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
operator|-
literal|2
case|:
if|if
condition|(
name|field
operator|.
name|type
operator|==
name|TType
operator|.
name|STRING
condition|)
block|{
name|this
operator|.
name|serializationFormat
operator|=
name|iprot
operator|.
name|readString
argument_list|()
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|serializationFormat
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|TProtocolUtil
operator|.
name|skip
argument_list|(
name|iprot
argument_list|,
name|field
operator|.
name|type
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
operator|-
literal|3
case|:
if|if
condition|(
name|field
operator|.
name|type
operator|==
name|TType
operator|.
name|STRING
condition|)
block|{
name|this
operator|.
name|serializationClass
operator|=
name|iprot
operator|.
name|readString
argument_list|()
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|serializationClass
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|TProtocolUtil
operator|.
name|skip
argument_list|(
name|iprot
argument_list|,
name|field
operator|.
name|type
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
operator|-
literal|4
case|:
if|if
condition|(
name|field
operator|.
name|type
operator|==
name|TType
operator|.
name|STRING
condition|)
block|{
name|this
operator|.
name|serializationLib
operator|=
name|iprot
operator|.
name|readString
argument_list|()
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|serializationLib
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|TProtocolUtil
operator|.
name|skip
argument_list|(
name|iprot
argument_list|,
name|field
operator|.
name|type
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
operator|-
literal|5
case|:
if|if
condition|(
name|field
operator|.
name|type
operator|==
name|TType
operator|.
name|STRING
condition|)
block|{
name|this
operator|.
name|fieldDelim
operator|=
name|iprot
operator|.
name|readString
argument_list|()
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|fieldDelim
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|TProtocolUtil
operator|.
name|skip
argument_list|(
name|iprot
argument_list|,
name|field
operator|.
name|type
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
operator|-
literal|6
case|:
if|if
condition|(
name|field
operator|.
name|type
operator|==
name|TType
operator|.
name|STRING
condition|)
block|{
name|this
operator|.
name|collectionItemDelim
operator|=
name|iprot
operator|.
name|readString
argument_list|()
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|collectionItemDelim
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|TProtocolUtil
operator|.
name|skip
argument_list|(
name|iprot
argument_list|,
name|field
operator|.
name|type
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
operator|-
literal|7
case|:
if|if
condition|(
name|field
operator|.
name|type
operator|==
name|TType
operator|.
name|STRING
condition|)
block|{
name|this
operator|.
name|mapKeyDelim
operator|=
name|iprot
operator|.
name|readString
argument_list|()
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|mapKeyDelim
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|TProtocolUtil
operator|.
name|skip
argument_list|(
name|iprot
argument_list|,
name|field
operator|.
name|type
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
operator|-
literal|8
case|:
if|if
condition|(
name|field
operator|.
name|type
operator|==
name|TType
operator|.
name|STRING
condition|)
block|{
name|this
operator|.
name|lineDelim
operator|=
name|iprot
operator|.
name|readString
argument_list|()
expr_stmt|;
name|this
operator|.
name|__isset
operator|.
name|lineDelim
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|TProtocolUtil
operator|.
name|skip
argument_list|(
name|iprot
argument_list|,
name|field
operator|.
name|type
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
operator|-
literal|9
case|:
if|if
condition|(
name|field
operator|.
name|type
operator|==
name|TType
operator|.
name|MAP
condition|)
block|{
block|{
name|TMap
name|_map4
init|=
name|iprot
operator|.
name|readMapBegin
argument_list|()
decl_stmt|;
name|this
operator|.
name|parameters
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|(
literal|2
operator|*
name|_map4
operator|.
name|size
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|_i5
init|=
literal|0
init|;
name|_i5
operator|<
name|_map4
operator|.
name|size
condition|;
operator|++
name|_i5
control|)
block|{
name|String
name|_key6
decl_stmt|;
name|String
name|_val7
decl_stmt|;
name|_key6
operator|=
name|iprot
operator|.
name|readString
argument_list|()
expr_stmt|;
name|_val7
operator|=
name|iprot
operator|.
name|readString
argument_list|()
expr_stmt|;
name|this
operator|.
name|parameters
operator|.
name|put
argument_list|(
name|_key6
argument_list|,
name|_val7
argument_list|)
expr_stmt|;
block|}
name|iprot
operator|.
name|readMapEnd
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|__isset
operator|.
name|parameters
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|TProtocolUtil
operator|.
name|skip
argument_list|(
name|iprot
argument_list|,
name|field
operator|.
name|type
argument_list|)
expr_stmt|;
block|}
break|break;
default|default:
name|TProtocolUtil
operator|.
name|skip
argument_list|(
name|iprot
argument_list|,
name|field
operator|.
name|type
argument_list|)
expr_stmt|;
break|break;
block|}
name|iprot
operator|.
name|readFieldEnd
argument_list|()
expr_stmt|;
block|}
name|iprot
operator|.
name|readStructEnd
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|write
parameter_list|(
name|TProtocol
name|oprot
parameter_list|)
throws|throws
name|TException
block|{
name|TStruct
name|struct
init|=
operator|new
name|TStruct
argument_list|(
literal|"SerDeInfo"
argument_list|)
decl_stmt|;
name|oprot
operator|.
name|writeStructBegin
argument_list|(
name|struct
argument_list|)
expr_stmt|;
name|TField
name|field
init|=
operator|new
name|TField
argument_list|()
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|name
operator|!=
literal|null
condition|)
block|{
name|field
operator|.
name|name
operator|=
literal|"name"
expr_stmt|;
name|field
operator|.
name|type
operator|=
name|TType
operator|.
name|STRING
expr_stmt|;
name|field
operator|.
name|id
operator|=
operator|-
literal|1
expr_stmt|;
name|oprot
operator|.
name|writeFieldBegin
argument_list|(
name|field
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeString
argument_list|(
name|this
operator|.
name|name
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeFieldEnd
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|serializationFormat
operator|!=
literal|null
condition|)
block|{
name|field
operator|.
name|name
operator|=
literal|"serializationFormat"
expr_stmt|;
name|field
operator|.
name|type
operator|=
name|TType
operator|.
name|STRING
expr_stmt|;
name|field
operator|.
name|id
operator|=
operator|-
literal|2
expr_stmt|;
name|oprot
operator|.
name|writeFieldBegin
argument_list|(
name|field
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeString
argument_list|(
name|this
operator|.
name|serializationFormat
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeFieldEnd
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|serializationClass
operator|!=
literal|null
condition|)
block|{
name|field
operator|.
name|name
operator|=
literal|"serializationClass"
expr_stmt|;
name|field
operator|.
name|type
operator|=
name|TType
operator|.
name|STRING
expr_stmt|;
name|field
operator|.
name|id
operator|=
operator|-
literal|3
expr_stmt|;
name|oprot
operator|.
name|writeFieldBegin
argument_list|(
name|field
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeString
argument_list|(
name|this
operator|.
name|serializationClass
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeFieldEnd
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|serializationLib
operator|!=
literal|null
condition|)
block|{
name|field
operator|.
name|name
operator|=
literal|"serializationLib"
expr_stmt|;
name|field
operator|.
name|type
operator|=
name|TType
operator|.
name|STRING
expr_stmt|;
name|field
operator|.
name|id
operator|=
operator|-
literal|4
expr_stmt|;
name|oprot
operator|.
name|writeFieldBegin
argument_list|(
name|field
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeString
argument_list|(
name|this
operator|.
name|serializationLib
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeFieldEnd
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|fieldDelim
operator|!=
literal|null
condition|)
block|{
name|field
operator|.
name|name
operator|=
literal|"fieldDelim"
expr_stmt|;
name|field
operator|.
name|type
operator|=
name|TType
operator|.
name|STRING
expr_stmt|;
name|field
operator|.
name|id
operator|=
operator|-
literal|5
expr_stmt|;
name|oprot
operator|.
name|writeFieldBegin
argument_list|(
name|field
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeString
argument_list|(
name|this
operator|.
name|fieldDelim
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeFieldEnd
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|collectionItemDelim
operator|!=
literal|null
condition|)
block|{
name|field
operator|.
name|name
operator|=
literal|"collectionItemDelim"
expr_stmt|;
name|field
operator|.
name|type
operator|=
name|TType
operator|.
name|STRING
expr_stmt|;
name|field
operator|.
name|id
operator|=
operator|-
literal|6
expr_stmt|;
name|oprot
operator|.
name|writeFieldBegin
argument_list|(
name|field
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeString
argument_list|(
name|this
operator|.
name|collectionItemDelim
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeFieldEnd
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|mapKeyDelim
operator|!=
literal|null
condition|)
block|{
name|field
operator|.
name|name
operator|=
literal|"mapKeyDelim"
expr_stmt|;
name|field
operator|.
name|type
operator|=
name|TType
operator|.
name|STRING
expr_stmt|;
name|field
operator|.
name|id
operator|=
operator|-
literal|7
expr_stmt|;
name|oprot
operator|.
name|writeFieldBegin
argument_list|(
name|field
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeString
argument_list|(
name|this
operator|.
name|mapKeyDelim
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeFieldEnd
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|lineDelim
operator|!=
literal|null
condition|)
block|{
name|field
operator|.
name|name
operator|=
literal|"lineDelim"
expr_stmt|;
name|field
operator|.
name|type
operator|=
name|TType
operator|.
name|STRING
expr_stmt|;
name|field
operator|.
name|id
operator|=
operator|-
literal|8
expr_stmt|;
name|oprot
operator|.
name|writeFieldBegin
argument_list|(
name|field
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeString
argument_list|(
name|this
operator|.
name|lineDelim
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeFieldEnd
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|parameters
operator|!=
literal|null
condition|)
block|{
name|field
operator|.
name|name
operator|=
literal|"parameters"
expr_stmt|;
name|field
operator|.
name|type
operator|=
name|TType
operator|.
name|MAP
expr_stmt|;
name|field
operator|.
name|id
operator|=
operator|-
literal|9
expr_stmt|;
name|oprot
operator|.
name|writeFieldBegin
argument_list|(
name|field
argument_list|)
expr_stmt|;
block|{
name|oprot
operator|.
name|writeMapBegin
argument_list|(
operator|new
name|TMap
argument_list|(
name|TType
operator|.
name|STRING
argument_list|,
name|TType
operator|.
name|STRING
argument_list|,
name|this
operator|.
name|parameters
operator|.
name|size
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|_iter8
range|:
name|this
operator|.
name|parameters
operator|.
name|keySet
argument_list|()
control|)
block|{
name|oprot
operator|.
name|writeString
argument_list|(
name|_iter8
argument_list|)
expr_stmt|;
name|oprot
operator|.
name|writeString
argument_list|(
name|this
operator|.
name|parameters
operator|.
name|get
argument_list|(
name|_iter8
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|oprot
operator|.
name|writeMapEnd
argument_list|()
expr_stmt|;
block|}
name|oprot
operator|.
name|writeFieldEnd
argument_list|()
expr_stmt|;
block|}
name|oprot
operator|.
name|writeFieldStop
argument_list|()
expr_stmt|;
name|oprot
operator|.
name|writeStructEnd
argument_list|()
expr_stmt|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|(
literal|"SerDeInfo("
argument_list|)
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"name:"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|name
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|",serializationFormat:"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|serializationFormat
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|",serializationClass:"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|serializationClass
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|",serializationLib:"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|serializationLib
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|",fieldDelim:"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|fieldDelim
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|",collectionItemDelim:"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|collectionItemDelim
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|",mapKeyDelim:"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|mapKeyDelim
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|",lineDelim:"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|lineDelim
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|",parameters:"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|this
operator|.
name|parameters
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|")"
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

