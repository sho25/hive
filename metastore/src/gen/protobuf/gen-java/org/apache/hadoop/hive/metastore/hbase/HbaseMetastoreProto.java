begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Generated by the protocol buffer compiler.  DO NOT EDIT!
end_comment

begin_comment
comment|// source: hbase_metastore_proto.proto
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
package|;
end_package

begin_class
specifier|public
specifier|final
class|class
name|HbaseMetastoreProto
block|{
specifier|private
name|HbaseMetastoreProto
parameter_list|()
block|{}
specifier|public
specifier|static
name|void
name|registerAllExtensions
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistry
name|registry
parameter_list|)
block|{   }
comment|/**    * Protobuf enum {@code org.apache.hadoop.hive.metastore.hbase.PrincipalType}    */
specifier|public
enum|enum
name|PrincipalType
implements|implements
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolMessageEnum
block|{
comment|/**      *<code>USER = 0;</code>      */
name|USER
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
block|,
comment|/**      *<code>ROLE = 1;</code>      */
name|ROLE
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
block|,     ;
comment|/**      *<code>USER = 0;</code>      */
specifier|public
specifier|static
specifier|final
name|int
name|USER_VALUE
init|=
literal|0
decl_stmt|;
comment|/**      *<code>ROLE = 1;</code>      */
specifier|public
specifier|static
specifier|final
name|int
name|ROLE_VALUE
init|=
literal|1
decl_stmt|;
specifier|public
specifier|final
name|int
name|getNumber
parameter_list|()
block|{
return|return
name|value
return|;
block|}
specifier|public
specifier|static
name|PrincipalType
name|valueOf
parameter_list|(
name|int
name|value
parameter_list|)
block|{
switch|switch
condition|(
name|value
condition|)
block|{
case|case
literal|0
case|:
return|return
name|USER
return|;
case|case
literal|1
case|:
return|return
name|ROLE
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|PrincipalType
argument_list|>
name|internalGetValueMap
parameter_list|()
block|{
return|return
name|internalValueMap
return|;
block|}
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|PrincipalType
argument_list|>
name|internalValueMap
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|PrincipalType
argument_list|>
argument_list|()
block|{
specifier|public
name|PrincipalType
name|findValueByNumber
parameter_list|(
name|int
name|number
parameter_list|)
block|{
return|return
name|PrincipalType
operator|.
name|valueOf
argument_list|(
name|number
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|getValueDescriptor
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|getDescriptor
argument_list|()
operator|.
name|getEnumTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
return|;
block|}
specifier|private
specifier|static
specifier|final
name|PrincipalType
index|[]
name|VALUES
init|=
name|values
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|PrincipalType
name|valueOf
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|desc
parameter_list|)
block|{
if|if
condition|(
name|desc
operator|.
name|getType
argument_list|()
operator|!=
name|getDescriptor
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|IllegalArgumentException
argument_list|(
literal|"EnumValueDescriptor is not for this type."
argument_list|)
throw|;
block|}
return|return
name|VALUES
index|[
name|desc
operator|.
name|getIndex
argument_list|()
index|]
return|;
block|}
specifier|private
specifier|final
name|int
name|index
decl_stmt|;
specifier|private
specifier|final
name|int
name|value
decl_stmt|;
specifier|private
name|PrincipalType
parameter_list|(
name|int
name|index
parameter_list|,
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|index
operator|=
name|index
expr_stmt|;
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(enum_scope:org.apache.hadoop.hive.metastore.hbase.PrincipalType)
block|}
specifier|public
interface|interface
name|AggrStatsOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required int64 parts_found = 1;
comment|/**      *<code>required int64 parts_found = 1;</code>      */
name|boolean
name|hasPartsFound
parameter_list|()
function_decl|;
comment|/**      *<code>required int64 parts_found = 1;</code>      */
name|long
name|getPartsFound
parameter_list|()
function_decl|;
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
argument_list|>
name|getColStatsList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
name|getColStats
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>      */
name|int
name|getColStatsCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStatsOrBuilder
argument_list|>
name|getColStatsOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStatsOrBuilder
name|getColStatsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.AggrStats}    */
specifier|public
specifier|static
specifier|final
class|class
name|AggrStats
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|AggrStatsOrBuilder
block|{
comment|// Use AggrStats.newBuilder() to construct.
specifier|private
name|AggrStats
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|AggrStats
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|AggrStats
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|AggrStats
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|AggrStats
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|AggrStats
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|8
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|partsFound_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|colStats_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|colStats_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|colStats_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|colStats_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStats_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStats_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|AggrStats
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|AggrStats
argument_list|>
argument_list|()
block|{
specifier|public
name|AggrStats
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|AggrStats
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|AggrStats
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required int64 parts_found = 1;
specifier|public
specifier|static
specifier|final
name|int
name|PARTS_FOUND_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|long
name|partsFound_
decl_stmt|;
comment|/**      *<code>required int64 parts_found = 1;</code>      */
specifier|public
name|boolean
name|hasPartsFound
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>required int64 parts_found = 1;</code>      */
specifier|public
name|long
name|getPartsFound
parameter_list|()
block|{
return|return
name|partsFound_
return|;
block|}
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;
specifier|public
specifier|static
specifier|final
name|int
name|COL_STATS_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
argument_list|>
name|colStats_
decl_stmt|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
argument_list|>
name|getColStatsList
parameter_list|()
block|{
return|return
name|colStats_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStatsOrBuilder
argument_list|>
name|getColStatsOrBuilderList
parameter_list|()
block|{
return|return
name|colStats_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>      */
specifier|public
name|int
name|getColStatsCount
parameter_list|()
block|{
return|return
name|colStats_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
name|getColStats
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|colStats_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStatsOrBuilder
name|getColStatsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|colStats_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|partsFound_
operator|=
literal|0L
expr_stmt|;
name|colStats_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasPartsFound
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getColStatsCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getColStats
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|1
argument_list|,
name|partsFound_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|colStats_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|colStats_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|1
argument_list|,
name|partsFound_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|colStats_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|colStats_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.AggrStats}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStats_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStats_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.AggrStats.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getColStatsFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|partsFound_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
if|if
condition|(
name|colStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|colStats_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|colStatsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStats_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|partsFound_
operator|=
name|partsFound_
expr_stmt|;
if|if
condition|(
name|colStatsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|colStats_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|colStats_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|colStats_
operator|=
name|colStats_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|colStats_
operator|=
name|colStatsBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasPartsFound
argument_list|()
condition|)
block|{
name|setPartsFound
argument_list|(
name|other
operator|.
name|getPartsFound
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|colStatsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|colStats_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|colStats_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|colStats_
operator|=
name|other
operator|.
name|colStats_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureColStatsIsMutable
argument_list|()
expr_stmt|;
name|colStats_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|colStats_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|colStats_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|colStatsBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|colStatsBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|colStatsBuilder_
operator|=
literal|null
expr_stmt|;
name|colStats_
operator|=
name|other
operator|.
name|colStats_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|colStatsBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getColStatsFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|colStatsBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|colStats_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasPartsFound
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getColStatsCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getColStats
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStats
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required int64 parts_found = 1;
specifier|private
name|long
name|partsFound_
decl_stmt|;
comment|/**        *<code>required int64 parts_found = 1;</code>        */
specifier|public
name|boolean
name|hasPartsFound
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>required int64 parts_found = 1;</code>        */
specifier|public
name|long
name|getPartsFound
parameter_list|()
block|{
return|return
name|partsFound_
return|;
block|}
comment|/**        *<code>required int64 parts_found = 1;</code>        */
specifier|public
name|Builder
name|setPartsFound
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|partsFound_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required int64 parts_found = 1;</code>        */
specifier|public
name|Builder
name|clearPartsFound
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|partsFound_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
argument_list|>
name|colStats_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureColStatsIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|colStats_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
argument_list|>
argument_list|(
name|colStats_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStatsOrBuilder
argument_list|>
name|colStatsBuilder_
decl_stmt|;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
argument_list|>
name|getColStatsList
parameter_list|()
block|{
if|if
condition|(
name|colStatsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|colStats_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|colStatsBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>        */
specifier|public
name|int
name|getColStatsCount
parameter_list|()
block|{
if|if
condition|(
name|colStatsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|colStats_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|colStatsBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
name|getColStats
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|colStatsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|colStats_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|colStatsBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>        */
specifier|public
name|Builder
name|setColStats
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
name|value
parameter_list|)
block|{
if|if
condition|(
name|colStatsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureColStatsIsMutable
argument_list|()
expr_stmt|;
name|colStats_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|colStatsBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>        */
specifier|public
name|Builder
name|setColStats
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|colStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureColStatsIsMutable
argument_list|()
expr_stmt|;
name|colStats_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|colStatsBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>        */
specifier|public
name|Builder
name|addColStats
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
name|value
parameter_list|)
block|{
if|if
condition|(
name|colStatsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureColStatsIsMutable
argument_list|()
expr_stmt|;
name|colStats_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|colStatsBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>        */
specifier|public
name|Builder
name|addColStats
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
name|value
parameter_list|)
block|{
if|if
condition|(
name|colStatsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureColStatsIsMutable
argument_list|()
expr_stmt|;
name|colStats_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|colStatsBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>        */
specifier|public
name|Builder
name|addColStats
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|colStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureColStatsIsMutable
argument_list|()
expr_stmt|;
name|colStats_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|colStatsBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>        */
specifier|public
name|Builder
name|addColStats
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|colStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureColStatsIsMutable
argument_list|()
expr_stmt|;
name|colStats_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|colStatsBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>        */
specifier|public
name|Builder
name|addAllColStats
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|colStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureColStatsIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|colStats_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|colStatsBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>        */
specifier|public
name|Builder
name|clearColStats
parameter_list|()
block|{
if|if
condition|(
name|colStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|colStats_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|colStatsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>        */
specifier|public
name|Builder
name|removeColStats
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|colStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureColStatsIsMutable
argument_list|()
expr_stmt|;
name|colStats_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|colStatsBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|Builder
name|getColStatsBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getColStatsFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStatsOrBuilder
name|getColStatsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|colStatsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|colStats_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|colStatsBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStatsOrBuilder
argument_list|>
name|getColStatsOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|colStatsBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|colStatsBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|colStats_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|Builder
name|addColStatsBuilder
parameter_list|()
block|{
return|return
name|getColStatsFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|Builder
name|addColStatsBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getColStatsFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ColumnStats col_stats = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|Builder
argument_list|>
name|getColStatsBuilderList
parameter_list|()
block|{
return|return
name|getColStatsFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStatsOrBuilder
argument_list|>
name|getColStatsFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|colStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|colStatsBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStatsOrBuilder
argument_list|>
argument_list|(
name|colStats_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|colStats_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|colStatsBuilder_
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.AggrStats)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|AggrStats
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.AggrStats)
block|}
specifier|public
interface|interface
name|AggrStatsBloomFilterOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required bytes db_name = 1;
comment|/**      *<code>required bytes db_name = 1;</code>      */
name|boolean
name|hasDbName
parameter_list|()
function_decl|;
comment|/**      *<code>required bytes db_name = 1;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getDbName
parameter_list|()
function_decl|;
comment|// required bytes table_name = 2;
comment|/**      *<code>required bytes table_name = 2;</code>      */
name|boolean
name|hasTableName
parameter_list|()
function_decl|;
comment|/**      *<code>required bytes table_name = 2;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTableName
parameter_list|()
function_decl|;
comment|// required .org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter.BloomFilter bloom_filter = 3;
comment|/**      *<code>required .org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter.BloomFilter bloom_filter = 3;</code>      */
name|boolean
name|hasBloomFilter
parameter_list|()
function_decl|;
comment|/**      *<code>required .org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter.BloomFilter bloom_filter = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|getBloomFilter
parameter_list|()
function_decl|;
comment|/**      *<code>required .org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter.BloomFilter bloom_filter = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilterOrBuilder
name|getBloomFilterOrBuilder
parameter_list|()
function_decl|;
comment|// required int64 aggregated_at = 4;
comment|/**      *<code>required int64 aggregated_at = 4;</code>      */
name|boolean
name|hasAggregatedAt
parameter_list|()
function_decl|;
comment|/**      *<code>required int64 aggregated_at = 4;</code>      */
name|long
name|getAggregatedAt
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter}    */
specifier|public
specifier|static
specifier|final
class|class
name|AggrStatsBloomFilter
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|AggrStatsBloomFilterOrBuilder
block|{
comment|// Use AggrStatsBloomFilter.newBuilder() to construct.
specifier|private
name|AggrStatsBloomFilter
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|AggrStatsBloomFilter
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|AggrStatsBloomFilter
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|AggrStatsBloomFilter
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|AggrStatsBloomFilter
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|AggrStatsBloomFilter
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|dbName_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|tableName_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|bloomFilter_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|bloomFilter_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|bloomFilter_
argument_list|)
expr_stmt|;
name|bloomFilter_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
break|break;
block|}
case|case
literal|32
case|:
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|aggregatedAt_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|AggrStatsBloomFilter
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|AggrStatsBloomFilter
argument_list|>
argument_list|()
block|{
specifier|public
name|AggrStatsBloomFilter
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|AggrStatsBloomFilter
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|AggrStatsBloomFilter
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
interface|interface
name|BloomFilterOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required int32 num_bits = 1;
comment|/**        *<code>required int32 num_bits = 1;</code>        */
name|boolean
name|hasNumBits
parameter_list|()
function_decl|;
comment|/**        *<code>required int32 num_bits = 1;</code>        */
name|int
name|getNumBits
parameter_list|()
function_decl|;
comment|// required int32 num_funcs = 2;
comment|/**        *<code>required int32 num_funcs = 2;</code>        */
name|boolean
name|hasNumFuncs
parameter_list|()
function_decl|;
comment|/**        *<code>required int32 num_funcs = 2;</code>        */
name|int
name|getNumFuncs
parameter_list|()
function_decl|;
comment|// repeated int64 bits = 3;
comment|/**        *<code>repeated int64 bits = 3;</code>        */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Long
argument_list|>
name|getBitsList
parameter_list|()
function_decl|;
comment|/**        *<code>repeated int64 bits = 3;</code>        */
name|int
name|getBitsCount
parameter_list|()
function_decl|;
comment|/**        *<code>repeated int64 bits = 3;</code>        */
name|long
name|getBits
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter.BloomFilter}      */
specifier|public
specifier|static
specifier|final
class|class
name|BloomFilter
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|BloomFilterOrBuilder
block|{
comment|// Use BloomFilter.newBuilder() to construct.
specifier|private
name|BloomFilter
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|BloomFilter
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|BloomFilter
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|BloomFilter
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|BloomFilter
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|BloomFilter
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|8
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|numBits_
operator|=
name|input
operator|.
name|readInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|numFuncs_
operator|=
name|input
operator|.
name|readInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|24
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|bits_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Long
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|bits_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readInt64
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|int
name|length
init|=
name|input
operator|.
name|readRawVarint32
argument_list|()
decl_stmt|;
name|int
name|limit
init|=
name|input
operator|.
name|pushLimit
argument_list|(
name|length
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
operator|&&
name|input
operator|.
name|getBytesUntilLimit
argument_list|()
operator|>
literal|0
condition|)
block|{
name|bits_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Long
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
while|while
condition|(
name|input
operator|.
name|getBytesUntilLimit
argument_list|()
operator|>
literal|0
condition|)
block|{
name|bits_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readInt64
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|input
operator|.
name|popLimit
argument_list|(
name|limit
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|bits_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|bits_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_BloomFilter_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_BloomFilter_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|BloomFilter
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|BloomFilter
argument_list|>
argument_list|()
block|{
specifier|public
name|BloomFilter
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|BloomFilter
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|BloomFilter
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required int32 num_bits = 1;
specifier|public
specifier|static
specifier|final
name|int
name|NUM_BITS_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|int
name|numBits_
decl_stmt|;
comment|/**        *<code>required int32 num_bits = 1;</code>        */
specifier|public
name|boolean
name|hasNumBits
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>required int32 num_bits = 1;</code>        */
specifier|public
name|int
name|getNumBits
parameter_list|()
block|{
return|return
name|numBits_
return|;
block|}
comment|// required int32 num_funcs = 2;
specifier|public
specifier|static
specifier|final
name|int
name|NUM_FUNCS_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|int
name|numFuncs_
decl_stmt|;
comment|/**        *<code>required int32 num_funcs = 2;</code>        */
specifier|public
name|boolean
name|hasNumFuncs
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>required int32 num_funcs = 2;</code>        */
specifier|public
name|int
name|getNumFuncs
parameter_list|()
block|{
return|return
name|numFuncs_
return|;
block|}
comment|// repeated int64 bits = 3;
specifier|public
specifier|static
specifier|final
name|int
name|BITS_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Long
argument_list|>
name|bits_
decl_stmt|;
comment|/**        *<code>repeated int64 bits = 3;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Long
argument_list|>
name|getBitsList
parameter_list|()
block|{
return|return
name|bits_
return|;
block|}
comment|/**        *<code>repeated int64 bits = 3;</code>        */
specifier|public
name|int
name|getBitsCount
parameter_list|()
block|{
return|return
name|bits_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**        *<code>repeated int64 bits = 3;</code>        */
specifier|public
name|long
name|getBits
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|bits_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|numBits_
operator|=
literal|0
expr_stmt|;
name|numFuncs_
operator|=
literal|0
expr_stmt|;
name|bits_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasNumBits
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasNumFuncs
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt32
argument_list|(
literal|1
argument_list|,
name|numBits_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt32
argument_list|(
literal|2
argument_list|,
name|numFuncs_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|bits_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|3
argument_list|,
name|bits_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32Size
argument_list|(
literal|1
argument_list|,
name|numBits_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32Size
argument_list|(
literal|2
argument_list|,
name|numFuncs_
argument_list|)
expr_stmt|;
block|}
block|{
name|int
name|dataSize
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|bits_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|dataSize
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64SizeNoTag
argument_list|(
name|bits_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|dataSize
expr_stmt|;
name|size
operator|+=
literal|1
operator|*
name|getBitsList
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**        * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter.BloomFilter}        */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilterOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_BloomFilter_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_BloomFilter_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.AggrStatsBloomFilter.BloomFilter.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{           }
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|numBits_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|numFuncs_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|bits_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_BloomFilter_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|numBits_
operator|=
name|numBits_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|numFuncs_
operator|=
name|numFuncs_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|bits_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|bits_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|bits_
operator|=
name|bits_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasNumBits
argument_list|()
condition|)
block|{
name|setNumBits
argument_list|(
name|other
operator|.
name|getNumBits
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasNumFuncs
argument_list|()
condition|)
block|{
name|setNumFuncs
argument_list|(
name|other
operator|.
name|getNumFuncs
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|other
operator|.
name|bits_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|bits_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|bits_
operator|=
name|other
operator|.
name|bits_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureBitsIsMutable
argument_list|()
expr_stmt|;
name|bits_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|bits_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasNumBits
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasNumFuncs
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required int32 num_bits = 1;
specifier|private
name|int
name|numBits_
decl_stmt|;
comment|/**          *<code>required int32 num_bits = 1;</code>          */
specifier|public
name|boolean
name|hasNumBits
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**          *<code>required int32 num_bits = 1;</code>          */
specifier|public
name|int
name|getNumBits
parameter_list|()
block|{
return|return
name|numBits_
return|;
block|}
comment|/**          *<code>required int32 num_bits = 1;</code>          */
specifier|public
name|Builder
name|setNumBits
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|numBits_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>required int32 num_bits = 1;</code>          */
specifier|public
name|Builder
name|clearNumBits
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|numBits_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// required int32 num_funcs = 2;
specifier|private
name|int
name|numFuncs_
decl_stmt|;
comment|/**          *<code>required int32 num_funcs = 2;</code>          */
specifier|public
name|boolean
name|hasNumFuncs
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**          *<code>required int32 num_funcs = 2;</code>          */
specifier|public
name|int
name|getNumFuncs
parameter_list|()
block|{
return|return
name|numFuncs_
return|;
block|}
comment|/**          *<code>required int32 num_funcs = 2;</code>          */
specifier|public
name|Builder
name|setNumFuncs
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|numFuncs_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>required int32 num_funcs = 2;</code>          */
specifier|public
name|Builder
name|clearNumFuncs
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|numFuncs_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// repeated int64 bits = 3;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Long
argument_list|>
name|bits_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureBitsIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|bits_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Long
argument_list|>
argument_list|(
name|bits_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
block|}
comment|/**          *<code>repeated int64 bits = 3;</code>          */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Long
argument_list|>
name|getBitsList
parameter_list|()
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|bits_
argument_list|)
return|;
block|}
comment|/**          *<code>repeated int64 bits = 3;</code>          */
specifier|public
name|int
name|getBitsCount
parameter_list|()
block|{
return|return
name|bits_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**          *<code>repeated int64 bits = 3;</code>          */
specifier|public
name|long
name|getBits
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|bits_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**          *<code>repeated int64 bits = 3;</code>          */
specifier|public
name|Builder
name|setBits
parameter_list|(
name|int
name|index
parameter_list|,
name|long
name|value
parameter_list|)
block|{
name|ensureBitsIsMutable
argument_list|()
expr_stmt|;
name|bits_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated int64 bits = 3;</code>          */
specifier|public
name|Builder
name|addBits
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|ensureBitsIsMutable
argument_list|()
expr_stmt|;
name|bits_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated int64 bits = 3;</code>          */
specifier|public
name|Builder
name|addAllBits
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|java
operator|.
name|lang
operator|.
name|Long
argument_list|>
name|values
parameter_list|)
block|{
name|ensureBitsIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|bits_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated int64 bits = 3;</code>          */
specifier|public
name|Builder
name|clearBits
parameter_list|()
block|{
name|bits_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter.BloomFilter)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|BloomFilter
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter.BloomFilter)
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required bytes db_name = 1;
specifier|public
specifier|static
specifier|final
name|int
name|DB_NAME_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|dbName_
decl_stmt|;
comment|/**      *<code>required bytes db_name = 1;</code>      */
specifier|public
name|boolean
name|hasDbName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>required bytes db_name = 1;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getDbName
parameter_list|()
block|{
return|return
name|dbName_
return|;
block|}
comment|// required bytes table_name = 2;
specifier|public
specifier|static
specifier|final
name|int
name|TABLE_NAME_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|tableName_
decl_stmt|;
comment|/**      *<code>required bytes table_name = 2;</code>      */
specifier|public
name|boolean
name|hasTableName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>required bytes table_name = 2;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTableName
parameter_list|()
block|{
return|return
name|tableName_
return|;
block|}
comment|// required .org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter.BloomFilter bloom_filter = 3;
specifier|public
specifier|static
specifier|final
name|int
name|BLOOM_FILTER_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|bloomFilter_
decl_stmt|;
comment|/**      *<code>required .org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter.BloomFilter bloom_filter = 3;</code>      */
specifier|public
name|boolean
name|hasBloomFilter
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<code>required .org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter.BloomFilter bloom_filter = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|getBloomFilter
parameter_list|()
block|{
return|return
name|bloomFilter_
return|;
block|}
comment|/**      *<code>required .org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter.BloomFilter bloom_filter = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilterOrBuilder
name|getBloomFilterOrBuilder
parameter_list|()
block|{
return|return
name|bloomFilter_
return|;
block|}
comment|// required int64 aggregated_at = 4;
specifier|public
specifier|static
specifier|final
name|int
name|AGGREGATED_AT_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|long
name|aggregatedAt_
decl_stmt|;
comment|/**      *<code>required int64 aggregated_at = 4;</code>      */
specifier|public
name|boolean
name|hasAggregatedAt
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**      *<code>required int64 aggregated_at = 4;</code>      */
specifier|public
name|long
name|getAggregatedAt
parameter_list|()
block|{
return|return
name|aggregatedAt_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|dbName_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
expr_stmt|;
name|tableName_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
expr_stmt|;
name|bloomFilter_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|aggregatedAt_
operator|=
literal|0L
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasDbName
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasTableName
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasBloomFilter
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasAggregatedAt
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getBloomFilter
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|dbName_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|2
argument_list|,
name|tableName_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|3
argument_list|,
name|bloomFilter_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|4
argument_list|,
name|aggregatedAt_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|1
argument_list|,
name|dbName_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|2
argument_list|,
name|tableName_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|3
argument_list|,
name|bloomFilter_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|4
argument_list|,
name|aggregatedAt_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilterOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.AggrStatsBloomFilter.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getBloomFilterFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|dbName_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|tableName_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
if|if
condition|(
name|bloomFilterBuilder_
operator|==
literal|null
condition|)
block|{
name|bloomFilter_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|bloomFilterBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|aggregatedAt_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|dbName_
operator|=
name|dbName_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|tableName_
operator|=
name|tableName_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
if|if
condition|(
name|bloomFilterBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|bloomFilter_
operator|=
name|bloomFilter_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|bloomFilter_
operator|=
name|bloomFilterBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|result
operator|.
name|aggregatedAt_
operator|=
name|aggregatedAt_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasDbName
argument_list|()
condition|)
block|{
name|setDbName
argument_list|(
name|other
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasTableName
argument_list|()
condition|)
block|{
name|setTableName
argument_list|(
name|other
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasBloomFilter
argument_list|()
condition|)
block|{
name|mergeBloomFilter
argument_list|(
name|other
operator|.
name|getBloomFilter
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasAggregatedAt
argument_list|()
condition|)
block|{
name|setAggregatedAt
argument_list|(
name|other
operator|.
name|getAggregatedAt
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasDbName
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasTableName
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasBloomFilter
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasAggregatedAt
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getBloomFilter
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required bytes db_name = 1;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|dbName_
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
decl_stmt|;
comment|/**        *<code>required bytes db_name = 1;</code>        */
specifier|public
name|boolean
name|hasDbName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>required bytes db_name = 1;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getDbName
parameter_list|()
block|{
return|return
name|dbName_
return|;
block|}
comment|/**        *<code>required bytes db_name = 1;</code>        */
specifier|public
name|Builder
name|setDbName
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|dbName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required bytes db_name = 1;</code>        */
specifier|public
name|Builder
name|clearDbName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|dbName_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getDbName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// required bytes table_name = 2;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|tableName_
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
decl_stmt|;
comment|/**        *<code>required bytes table_name = 2;</code>        */
specifier|public
name|boolean
name|hasTableName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>required bytes table_name = 2;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTableName
parameter_list|()
block|{
return|return
name|tableName_
return|;
block|}
comment|/**        *<code>required bytes table_name = 2;</code>        */
specifier|public
name|Builder
name|setTableName
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|tableName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required bytes table_name = 2;</code>        */
specifier|public
name|Builder
name|clearTableName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|tableName_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getTableName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// required .org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter.BloomFilter bloom_filter = 3;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|bloomFilter_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilterOrBuilder
argument_list|>
name|bloomFilterBuilder_
decl_stmt|;
comment|/**        *<code>required .org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter.BloomFilter bloom_filter = 3;</code>        */
specifier|public
name|boolean
name|hasBloomFilter
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>required .org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter.BloomFilter bloom_filter = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|getBloomFilter
parameter_list|()
block|{
if|if
condition|(
name|bloomFilterBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|bloomFilter_
return|;
block|}
else|else
block|{
return|return
name|bloomFilterBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>required .org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter.BloomFilter bloom_filter = 3;</code>        */
specifier|public
name|Builder
name|setBloomFilter
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|value
parameter_list|)
block|{
if|if
condition|(
name|bloomFilterBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bloomFilter_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|bloomFilterBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter.BloomFilter bloom_filter = 3;</code>        */
specifier|public
name|Builder
name|setBloomFilter
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|bloomFilterBuilder_
operator|==
literal|null
condition|)
block|{
name|bloomFilter_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|bloomFilterBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter.BloomFilter bloom_filter = 3;</code>        */
specifier|public
name|Builder
name|mergeBloomFilter
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
name|value
parameter_list|)
block|{
if|if
condition|(
name|bloomFilterBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
operator|&&
name|bloomFilter_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|bloomFilter_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
operator|.
name|newBuilder
argument_list|(
name|bloomFilter_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|bloomFilter_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|bloomFilterBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter.BloomFilter bloom_filter = 3;</code>        */
specifier|public
name|Builder
name|clearBloomFilter
parameter_list|()
block|{
if|if
condition|(
name|bloomFilterBuilder_
operator|==
literal|null
condition|)
block|{
name|bloomFilter_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|bloomFilterBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter.BloomFilter bloom_filter = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
operator|.
name|Builder
name|getBloomFilterBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getBloomFilterFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>required .org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter.BloomFilter bloom_filter = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilterOrBuilder
name|getBloomFilterOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|bloomFilterBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|bloomFilterBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|bloomFilter_
return|;
block|}
block|}
comment|/**        *<code>required .org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter.BloomFilter bloom_filter = 3;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilterOrBuilder
argument_list|>
name|getBloomFilterFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|bloomFilterBuilder_
operator|==
literal|null
condition|)
block|{
name|bloomFilterBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilter
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsBloomFilter
operator|.
name|BloomFilterOrBuilder
argument_list|>
argument_list|(
name|bloomFilter_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|bloomFilter_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|bloomFilterBuilder_
return|;
block|}
comment|// required int64 aggregated_at = 4;
specifier|private
name|long
name|aggregatedAt_
decl_stmt|;
comment|/**        *<code>required int64 aggregated_at = 4;</code>        */
specifier|public
name|boolean
name|hasAggregatedAt
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**        *<code>required int64 aggregated_at = 4;</code>        */
specifier|public
name|long
name|getAggregatedAt
parameter_list|()
block|{
return|return
name|aggregatedAt_
return|;
block|}
comment|/**        *<code>required int64 aggregated_at = 4;</code>        */
specifier|public
name|Builder
name|setAggregatedAt
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|aggregatedAt_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required int64 aggregated_at = 4;</code>        */
specifier|public
name|Builder
name|clearAggregatedAt
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|aggregatedAt_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|AggrStatsBloomFilter
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.AggrStatsBloomFilter)
block|}
specifier|public
interface|interface
name|AggrStatsInvalidatorFilterOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
argument_list|>
name|getToInvalidateList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
name|getToInvalidate
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>      */
name|int
name|getToInvalidateCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|EntryOrBuilder
argument_list|>
name|getToInvalidateOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|EntryOrBuilder
name|getToInvalidateOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|// required int64 run_every = 2;
comment|/**      *<code>required int64 run_every = 2;</code>      */
name|boolean
name|hasRunEvery
parameter_list|()
function_decl|;
comment|/**      *<code>required int64 run_every = 2;</code>      */
name|long
name|getRunEvery
parameter_list|()
function_decl|;
comment|// required int64 max_cache_entry_life = 3;
comment|/**      *<code>required int64 max_cache_entry_life = 3;</code>      */
name|boolean
name|hasMaxCacheEntryLife
parameter_list|()
function_decl|;
comment|/**      *<code>required int64 max_cache_entry_life = 3;</code>      */
name|long
name|getMaxCacheEntryLife
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter}    */
specifier|public
specifier|static
specifier|final
class|class
name|AggrStatsInvalidatorFilter
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|AggrStatsInvalidatorFilterOrBuilder
block|{
comment|// Use AggrStatsInvalidatorFilter.newBuilder() to construct.
specifier|private
name|AggrStatsInvalidatorFilter
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|AggrStatsInvalidatorFilter
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|AggrStatsInvalidatorFilter
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|AggrStatsInvalidatorFilter
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|AggrStatsInvalidatorFilter
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|AggrStatsInvalidatorFilter
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|toInvalidate_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|toInvalidate_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|runEvery_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|24
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|maxCacheEntryLife_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|toInvalidate_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|toInvalidate_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|AggrStatsInvalidatorFilter
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|AggrStatsInvalidatorFilter
argument_list|>
argument_list|()
block|{
specifier|public
name|AggrStatsInvalidatorFilter
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|AggrStatsInvalidatorFilter
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|AggrStatsInvalidatorFilter
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
interface|interface
name|EntryOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required bytes db_name = 1;
comment|/**        *<code>required bytes db_name = 1;</code>        */
name|boolean
name|hasDbName
parameter_list|()
function_decl|;
comment|/**        *<code>required bytes db_name = 1;</code>        */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getDbName
parameter_list|()
function_decl|;
comment|// required bytes table_name = 2;
comment|/**        *<code>required bytes table_name = 2;</code>        */
name|boolean
name|hasTableName
parameter_list|()
function_decl|;
comment|/**        *<code>required bytes table_name = 2;</code>        */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTableName
parameter_list|()
function_decl|;
comment|// required bytes part_name = 3;
comment|/**        *<code>required bytes part_name = 3;</code>        */
name|boolean
name|hasPartName
parameter_list|()
function_decl|;
comment|/**        *<code>required bytes part_name = 3;</code>        */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getPartName
parameter_list|()
function_decl|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry}      */
specifier|public
specifier|static
specifier|final
class|class
name|Entry
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|EntryOrBuilder
block|{
comment|// Use Entry.newBuilder() to construct.
specifier|private
name|Entry
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Entry
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|Entry
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|Entry
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|Entry
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|Entry
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|dbName_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|tableName_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|partName_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_Entry_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_Entry_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Entry
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Entry
argument_list|>
argument_list|()
block|{
specifier|public
name|Entry
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Entry
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Entry
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required bytes db_name = 1;
specifier|public
specifier|static
specifier|final
name|int
name|DB_NAME_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|dbName_
decl_stmt|;
comment|/**        *<code>required bytes db_name = 1;</code>        */
specifier|public
name|boolean
name|hasDbName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>required bytes db_name = 1;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getDbName
parameter_list|()
block|{
return|return
name|dbName_
return|;
block|}
comment|// required bytes table_name = 2;
specifier|public
specifier|static
specifier|final
name|int
name|TABLE_NAME_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|tableName_
decl_stmt|;
comment|/**        *<code>required bytes table_name = 2;</code>        */
specifier|public
name|boolean
name|hasTableName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>required bytes table_name = 2;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTableName
parameter_list|()
block|{
return|return
name|tableName_
return|;
block|}
comment|// required bytes part_name = 3;
specifier|public
specifier|static
specifier|final
name|int
name|PART_NAME_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|partName_
decl_stmt|;
comment|/**        *<code>required bytes part_name = 3;</code>        */
specifier|public
name|boolean
name|hasPartName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>required bytes part_name = 3;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getPartName
parameter_list|()
block|{
return|return
name|partName_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|dbName_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
expr_stmt|;
name|tableName_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
expr_stmt|;
name|partName_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasDbName
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasTableName
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasPartName
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|dbName_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|2
argument_list|,
name|tableName_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|3
argument_list|,
name|partName_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|1
argument_list|,
name|dbName_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|2
argument_list|,
name|tableName_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|3
argument_list|,
name|partName_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**        * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry}        */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|EntryOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_Entry_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_Entry_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.AggrStatsInvalidatorFilter.Entry.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{           }
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|dbName_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|tableName_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|partName_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_Entry_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|dbName_
operator|=
name|dbName_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|tableName_
operator|=
name|tableName_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|partName_
operator|=
name|partName_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasDbName
argument_list|()
condition|)
block|{
name|setDbName
argument_list|(
name|other
operator|.
name|getDbName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasTableName
argument_list|()
condition|)
block|{
name|setTableName
argument_list|(
name|other
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasPartName
argument_list|()
condition|)
block|{
name|setPartName
argument_list|(
name|other
operator|.
name|getPartName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasDbName
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasTableName
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasPartName
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required bytes db_name = 1;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|dbName_
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
decl_stmt|;
comment|/**          *<code>required bytes db_name = 1;</code>          */
specifier|public
name|boolean
name|hasDbName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**          *<code>required bytes db_name = 1;</code>          */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getDbName
parameter_list|()
block|{
return|return
name|dbName_
return|;
block|}
comment|/**          *<code>required bytes db_name = 1;</code>          */
specifier|public
name|Builder
name|setDbName
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|dbName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>required bytes db_name = 1;</code>          */
specifier|public
name|Builder
name|clearDbName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|dbName_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getDbName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// required bytes table_name = 2;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|tableName_
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
decl_stmt|;
comment|/**          *<code>required bytes table_name = 2;</code>          */
specifier|public
name|boolean
name|hasTableName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**          *<code>required bytes table_name = 2;</code>          */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTableName
parameter_list|()
block|{
return|return
name|tableName_
return|;
block|}
comment|/**          *<code>required bytes table_name = 2;</code>          */
specifier|public
name|Builder
name|setTableName
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|tableName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>required bytes table_name = 2;</code>          */
specifier|public
name|Builder
name|clearTableName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|tableName_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getTableName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// required bytes part_name = 3;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|partName_
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
decl_stmt|;
comment|/**          *<code>required bytes part_name = 3;</code>          */
specifier|public
name|boolean
name|hasPartName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**          *<code>required bytes part_name = 3;</code>          */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getPartName
parameter_list|()
block|{
return|return
name|partName_
return|;
block|}
comment|/**          *<code>required bytes part_name = 3;</code>          */
specifier|public
name|Builder
name|setPartName
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|partName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>required bytes part_name = 3;</code>          */
specifier|public
name|Builder
name|clearPartName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|partName_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getPartName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|Entry
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry)
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;
specifier|public
specifier|static
specifier|final
name|int
name|TO_INVALIDATE_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
argument_list|>
name|toInvalidate_
decl_stmt|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
argument_list|>
name|getToInvalidateList
parameter_list|()
block|{
return|return
name|toInvalidate_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|EntryOrBuilder
argument_list|>
name|getToInvalidateOrBuilderList
parameter_list|()
block|{
return|return
name|toInvalidate_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>      */
specifier|public
name|int
name|getToInvalidateCount
parameter_list|()
block|{
return|return
name|toInvalidate_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
name|getToInvalidate
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|toInvalidate_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|EntryOrBuilder
name|getToInvalidateOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|toInvalidate_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|// required int64 run_every = 2;
specifier|public
specifier|static
specifier|final
name|int
name|RUN_EVERY_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|long
name|runEvery_
decl_stmt|;
comment|/**      *<code>required int64 run_every = 2;</code>      */
specifier|public
name|boolean
name|hasRunEvery
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>required int64 run_every = 2;</code>      */
specifier|public
name|long
name|getRunEvery
parameter_list|()
block|{
return|return
name|runEvery_
return|;
block|}
comment|// required int64 max_cache_entry_life = 3;
specifier|public
specifier|static
specifier|final
name|int
name|MAX_CACHE_ENTRY_LIFE_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|long
name|maxCacheEntryLife_
decl_stmt|;
comment|/**      *<code>required int64 max_cache_entry_life = 3;</code>      */
specifier|public
name|boolean
name|hasMaxCacheEntryLife
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>required int64 max_cache_entry_life = 3;</code>      */
specifier|public
name|long
name|getMaxCacheEntryLife
parameter_list|()
block|{
return|return
name|maxCacheEntryLife_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|toInvalidate_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|runEvery_
operator|=
literal|0L
expr_stmt|;
name|maxCacheEntryLife_
operator|=
literal|0L
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasRunEvery
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasMaxCacheEntryLife
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getToInvalidateCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getToInvalidate
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|toInvalidate_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|toInvalidate_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|2
argument_list|,
name|runEvery_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|3
argument_list|,
name|maxCacheEntryLife_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|toInvalidate_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|toInvalidate_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|2
argument_list|,
name|runEvery_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|3
argument_list|,
name|maxCacheEntryLife_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilterOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.AggrStatsInvalidatorFilter.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getToInvalidateFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|toInvalidateBuilder_
operator|==
literal|null
condition|)
block|{
name|toInvalidate_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|toInvalidateBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|runEvery_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|maxCacheEntryLife_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|toInvalidateBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|toInvalidate_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|toInvalidate_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|toInvalidate_
operator|=
name|toInvalidate_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|toInvalidate_
operator|=
name|toInvalidateBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|runEvery_
operator|=
name|runEvery_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|maxCacheEntryLife_
operator|=
name|maxCacheEntryLife_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|toInvalidateBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|toInvalidate_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|toInvalidate_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|toInvalidate_
operator|=
name|other
operator|.
name|toInvalidate_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureToInvalidateIsMutable
argument_list|()
expr_stmt|;
name|toInvalidate_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|toInvalidate_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|toInvalidate_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|toInvalidateBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|toInvalidateBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|toInvalidateBuilder_
operator|=
literal|null
expr_stmt|;
name|toInvalidate_
operator|=
name|other
operator|.
name|toInvalidate_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|toInvalidateBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getToInvalidateFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|toInvalidateBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|toInvalidate_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|other
operator|.
name|hasRunEvery
argument_list|()
condition|)
block|{
name|setRunEvery
argument_list|(
name|other
operator|.
name|getRunEvery
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasMaxCacheEntryLife
argument_list|()
condition|)
block|{
name|setMaxCacheEntryLife
argument_list|(
name|other
operator|.
name|getMaxCacheEntryLife
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasRunEvery
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasMaxCacheEntryLife
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getToInvalidateCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getToInvalidate
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
argument_list|>
name|toInvalidate_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureToInvalidateIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|toInvalidate_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
argument_list|>
argument_list|(
name|toInvalidate_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|EntryOrBuilder
argument_list|>
name|toInvalidateBuilder_
decl_stmt|;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
argument_list|>
name|getToInvalidateList
parameter_list|()
block|{
if|if
condition|(
name|toInvalidateBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|toInvalidate_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|toInvalidateBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>        */
specifier|public
name|int
name|getToInvalidateCount
parameter_list|()
block|{
if|if
condition|(
name|toInvalidateBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|toInvalidate_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|toInvalidateBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
name|getToInvalidate
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|toInvalidateBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|toInvalidate_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|toInvalidateBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>        */
specifier|public
name|Builder
name|setToInvalidate
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
name|value
parameter_list|)
block|{
if|if
condition|(
name|toInvalidateBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureToInvalidateIsMutable
argument_list|()
expr_stmt|;
name|toInvalidate_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|toInvalidateBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>        */
specifier|public
name|Builder
name|setToInvalidate
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|toInvalidateBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureToInvalidateIsMutable
argument_list|()
expr_stmt|;
name|toInvalidate_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|toInvalidateBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>        */
specifier|public
name|Builder
name|addToInvalidate
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
name|value
parameter_list|)
block|{
if|if
condition|(
name|toInvalidateBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureToInvalidateIsMutable
argument_list|()
expr_stmt|;
name|toInvalidate_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|toInvalidateBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>        */
specifier|public
name|Builder
name|addToInvalidate
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
name|value
parameter_list|)
block|{
if|if
condition|(
name|toInvalidateBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureToInvalidateIsMutable
argument_list|()
expr_stmt|;
name|toInvalidate_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|toInvalidateBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>        */
specifier|public
name|Builder
name|addToInvalidate
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|toInvalidateBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureToInvalidateIsMutable
argument_list|()
expr_stmt|;
name|toInvalidate_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|toInvalidateBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>        */
specifier|public
name|Builder
name|addToInvalidate
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|toInvalidateBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureToInvalidateIsMutable
argument_list|()
expr_stmt|;
name|toInvalidate_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|toInvalidateBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>        */
specifier|public
name|Builder
name|addAllToInvalidate
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|toInvalidateBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureToInvalidateIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|toInvalidate_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|toInvalidateBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>        */
specifier|public
name|Builder
name|clearToInvalidate
parameter_list|()
block|{
if|if
condition|(
name|toInvalidateBuilder_
operator|==
literal|null
condition|)
block|{
name|toInvalidate_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|toInvalidateBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>        */
specifier|public
name|Builder
name|removeToInvalidate
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|toInvalidateBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureToInvalidateIsMutable
argument_list|()
expr_stmt|;
name|toInvalidate_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|toInvalidateBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
operator|.
name|Builder
name|getToInvalidateBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getToInvalidateFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|EntryOrBuilder
name|getToInvalidateOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|toInvalidateBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|toInvalidate_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|toInvalidateBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|EntryOrBuilder
argument_list|>
name|getToInvalidateOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|toInvalidateBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|toInvalidateBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|toInvalidate_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
operator|.
name|Builder
name|addToInvalidateBuilder
parameter_list|()
block|{
return|return
name|getToInvalidateFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
operator|.
name|Builder
name|addToInvalidateBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getToInvalidateFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter.Entry to_invalidate = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
operator|.
name|Builder
argument_list|>
name|getToInvalidateBuilderList
parameter_list|()
block|{
return|return
name|getToInvalidateFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|EntryOrBuilder
argument_list|>
name|getToInvalidateFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|toInvalidateBuilder_
operator|==
literal|null
condition|)
block|{
name|toInvalidateBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|Entry
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|AggrStatsInvalidatorFilter
operator|.
name|EntryOrBuilder
argument_list|>
argument_list|(
name|toInvalidate_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|toInvalidate_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|toInvalidateBuilder_
return|;
block|}
comment|// required int64 run_every = 2;
specifier|private
name|long
name|runEvery_
decl_stmt|;
comment|/**        *<code>required int64 run_every = 2;</code>        */
specifier|public
name|boolean
name|hasRunEvery
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>required int64 run_every = 2;</code>        */
specifier|public
name|long
name|getRunEvery
parameter_list|()
block|{
return|return
name|runEvery_
return|;
block|}
comment|/**        *<code>required int64 run_every = 2;</code>        */
specifier|public
name|Builder
name|setRunEvery
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|runEvery_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required int64 run_every = 2;</code>        */
specifier|public
name|Builder
name|clearRunEvery
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|runEvery_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// required int64 max_cache_entry_life = 3;
specifier|private
name|long
name|maxCacheEntryLife_
decl_stmt|;
comment|/**        *<code>required int64 max_cache_entry_life = 3;</code>        */
specifier|public
name|boolean
name|hasMaxCacheEntryLife
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>required int64 max_cache_entry_life = 3;</code>        */
specifier|public
name|long
name|getMaxCacheEntryLife
parameter_list|()
block|{
return|return
name|maxCacheEntryLife_
return|;
block|}
comment|/**        *<code>required int64 max_cache_entry_life = 3;</code>        */
specifier|public
name|Builder
name|setMaxCacheEntryLife
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|maxCacheEntryLife_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required int64 max_cache_entry_life = 3;</code>        */
specifier|public
name|Builder
name|clearMaxCacheEntryLife
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|maxCacheEntryLife_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|AggrStatsInvalidatorFilter
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.AggrStatsInvalidatorFilter)
block|}
specifier|public
interface|interface
name|ColumnStatsOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// optional int64 last_analyzed = 1;
comment|/**      *<code>optional int64 last_analyzed = 1;</code>      */
name|boolean
name|hasLastAnalyzed
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 last_analyzed = 1;</code>      */
name|long
name|getLastAnalyzed
parameter_list|()
function_decl|;
comment|// required string column_type = 2;
comment|/**      *<code>required string column_type = 2;</code>      */
name|boolean
name|hasColumnType
parameter_list|()
function_decl|;
comment|/**      *<code>required string column_type = 2;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getColumnType
parameter_list|()
function_decl|;
comment|/**      *<code>required string column_type = 2;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getColumnTypeBytes
parameter_list|()
function_decl|;
comment|// optional int64 num_nulls = 3;
comment|/**      *<code>optional int64 num_nulls = 3;</code>      */
name|boolean
name|hasNumNulls
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 num_nulls = 3;</code>      */
name|long
name|getNumNulls
parameter_list|()
function_decl|;
comment|// optional int64 num_distinct_values = 4;
comment|/**      *<code>optional int64 num_distinct_values = 4;</code>      */
name|boolean
name|hasNumDistinctValues
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 num_distinct_values = 4;</code>      */
name|long
name|getNumDistinctValues
parameter_list|()
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.BooleanStats bool_stats = 5;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.BooleanStats bool_stats = 5;</code>      */
name|boolean
name|hasBoolStats
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.BooleanStats bool_stats = 5;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|getBoolStats
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.BooleanStats bool_stats = 5;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStatsOrBuilder
name|getBoolStatsOrBuilder
parameter_list|()
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.LongStats long_stats = 6;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.LongStats long_stats = 6;</code>      */
name|boolean
name|hasLongStats
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.LongStats long_stats = 6;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|getLongStats
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.LongStats long_stats = 6;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStatsOrBuilder
name|getLongStatsOrBuilder
parameter_list|()
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DoubleStats double_stats = 7;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DoubleStats double_stats = 7;</code>      */
name|boolean
name|hasDoubleStats
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DoubleStats double_stats = 7;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|getDoubleStats
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DoubleStats double_stats = 7;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStatsOrBuilder
name|getDoubleStatsOrBuilder
parameter_list|()
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats string_stats = 8;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats string_stats = 8;</code>      */
name|boolean
name|hasStringStats
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats string_stats = 8;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|getStringStats
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats string_stats = 8;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStatsOrBuilder
name|getStringStatsOrBuilder
parameter_list|()
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats binary_stats = 9;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats binary_stats = 9;</code>      */
name|boolean
name|hasBinaryStats
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats binary_stats = 9;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|getBinaryStats
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats binary_stats = 9;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStatsOrBuilder
name|getBinaryStatsOrBuilder
parameter_list|()
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats decimal_stats = 10;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats decimal_stats = 10;</code>      */
name|boolean
name|hasDecimalStats
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats decimal_stats = 10;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|getDecimalStats
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats decimal_stats = 10;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStatsOrBuilder
name|getDecimalStatsOrBuilder
parameter_list|()
function_decl|;
comment|// optional string column_name = 11;
comment|/**      *<code>optional string column_name = 11;</code>      */
name|boolean
name|hasColumnName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string column_name = 11;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getColumnName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string column_name = 11;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getColumnNameBytes
parameter_list|()
function_decl|;
comment|// optional string bit_vectors = 12;
comment|/**      *<code>optional string bit_vectors = 12;</code>      */
name|boolean
name|hasBitVectors
parameter_list|()
function_decl|;
comment|/**      *<code>optional string bit_vectors = 12;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getBitVectors
parameter_list|()
function_decl|;
comment|/**      *<code>optional string bit_vectors = 12;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getBitVectorsBytes
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.ColumnStats}    */
specifier|public
specifier|static
specifier|final
class|class
name|ColumnStats
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|ColumnStatsOrBuilder
block|{
comment|// Use ColumnStats.newBuilder() to construct.
specifier|private
name|ColumnStats
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|ColumnStats
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|ColumnStats
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|ColumnStats
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|ColumnStats
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|ColumnStats
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|8
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|lastAnalyzed_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|columnType_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|24
case|:
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|numNulls_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|32
case|:
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|numDistinctValues_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|42
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|boolStats_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|boolStats_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|boolStats_
argument_list|)
expr_stmt|;
name|boolStats_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
break|break;
block|}
case|case
literal|50
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|longStats_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|longStats_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|longStats_
argument_list|)
expr_stmt|;
name|longStats_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
break|break;
block|}
case|case
literal|58
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|doubleStats_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|doubleStats_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|doubleStats_
argument_list|)
expr_stmt|;
name|doubleStats_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
break|break;
block|}
case|case
literal|66
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|stringStats_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|stringStats_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|stringStats_
argument_list|)
expr_stmt|;
name|stringStats_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
break|break;
block|}
case|case
literal|74
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|binaryStats_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|binaryStats_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|binaryStats_
argument_list|)
expr_stmt|;
name|binaryStats_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
break|break;
block|}
case|case
literal|82
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|decimalStats_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|decimalStats_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|decimalStats_
argument_list|)
expr_stmt|;
name|decimalStats_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
break|break;
block|}
case|case
literal|90
case|:
block|{
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
name|columnName_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|98
case|:
block|{
name|bitField0_
operator||=
literal|0x00000800
expr_stmt|;
name|bitVectors_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ColumnStats
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|ColumnStats
argument_list|>
argument_list|()
block|{
specifier|public
name|ColumnStats
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|ColumnStats
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ColumnStats
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
interface|interface
name|BooleanStatsOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// optional int64 num_trues = 1;
comment|/**        *<code>optional int64 num_trues = 1;</code>        */
name|boolean
name|hasNumTrues
parameter_list|()
function_decl|;
comment|/**        *<code>optional int64 num_trues = 1;</code>        */
name|long
name|getNumTrues
parameter_list|()
function_decl|;
comment|// optional int64 num_falses = 2;
comment|/**        *<code>optional int64 num_falses = 2;</code>        */
name|boolean
name|hasNumFalses
parameter_list|()
function_decl|;
comment|/**        *<code>optional int64 num_falses = 2;</code>        */
name|long
name|getNumFalses
parameter_list|()
function_decl|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.ColumnStats.BooleanStats}      */
specifier|public
specifier|static
specifier|final
class|class
name|BooleanStats
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|BooleanStatsOrBuilder
block|{
comment|// Use BooleanStats.newBuilder() to construct.
specifier|private
name|BooleanStats
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|BooleanStats
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|BooleanStats
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|BooleanStats
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|BooleanStats
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|BooleanStats
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|8
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|numTrues_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|numFalses_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_BooleanStats_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_BooleanStats_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|BooleanStats
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|BooleanStats
argument_list|>
argument_list|()
block|{
specifier|public
name|BooleanStats
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|BooleanStats
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|BooleanStats
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional int64 num_trues = 1;
specifier|public
specifier|static
specifier|final
name|int
name|NUM_TRUES_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|long
name|numTrues_
decl_stmt|;
comment|/**        *<code>optional int64 num_trues = 1;</code>        */
specifier|public
name|boolean
name|hasNumTrues
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional int64 num_trues = 1;</code>        */
specifier|public
name|long
name|getNumTrues
parameter_list|()
block|{
return|return
name|numTrues_
return|;
block|}
comment|// optional int64 num_falses = 2;
specifier|public
specifier|static
specifier|final
name|int
name|NUM_FALSES_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|long
name|numFalses_
decl_stmt|;
comment|/**        *<code>optional int64 num_falses = 2;</code>        */
specifier|public
name|boolean
name|hasNumFalses
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>optional int64 num_falses = 2;</code>        */
specifier|public
name|long
name|getNumFalses
parameter_list|()
block|{
return|return
name|numFalses_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|numTrues_
operator|=
literal|0L
expr_stmt|;
name|numFalses_
operator|=
literal|0L
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|1
argument_list|,
name|numTrues_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|2
argument_list|,
name|numFalses_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|1
argument_list|,
name|numTrues_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|2
argument_list|,
name|numFalses_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**        * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.ColumnStats.BooleanStats}        */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStatsOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_BooleanStats_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_BooleanStats_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.ColumnStats.BooleanStats.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{           }
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|numTrues_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|numFalses_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_BooleanStats_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|numTrues_
operator|=
name|numTrues_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|numFalses_
operator|=
name|numFalses_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasNumTrues
argument_list|()
condition|)
block|{
name|setNumTrues
argument_list|(
name|other
operator|.
name|getNumTrues
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasNumFalses
argument_list|()
condition|)
block|{
name|setNumFalses
argument_list|(
name|other
operator|.
name|getNumFalses
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional int64 num_trues = 1;
specifier|private
name|long
name|numTrues_
decl_stmt|;
comment|/**          *<code>optional int64 num_trues = 1;</code>          */
specifier|public
name|boolean
name|hasNumTrues
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**          *<code>optional int64 num_trues = 1;</code>          */
specifier|public
name|long
name|getNumTrues
parameter_list|()
block|{
return|return
name|numTrues_
return|;
block|}
comment|/**          *<code>optional int64 num_trues = 1;</code>          */
specifier|public
name|Builder
name|setNumTrues
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|numTrues_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional int64 num_trues = 1;</code>          */
specifier|public
name|Builder
name|clearNumTrues
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|numTrues_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional int64 num_falses = 2;
specifier|private
name|long
name|numFalses_
decl_stmt|;
comment|/**          *<code>optional int64 num_falses = 2;</code>          */
specifier|public
name|boolean
name|hasNumFalses
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**          *<code>optional int64 num_falses = 2;</code>          */
specifier|public
name|long
name|getNumFalses
parameter_list|()
block|{
return|return
name|numFalses_
return|;
block|}
comment|/**          *<code>optional int64 num_falses = 2;</code>          */
specifier|public
name|Builder
name|setNumFalses
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|numFalses_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional int64 num_falses = 2;</code>          */
specifier|public
name|Builder
name|clearNumFalses
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|numFalses_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.ColumnStats.BooleanStats)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|BooleanStats
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.ColumnStats.BooleanStats)
block|}
specifier|public
interface|interface
name|LongStatsOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// optional sint64 low_value = 1;
comment|/**        *<code>optional sint64 low_value = 1;</code>        */
name|boolean
name|hasLowValue
parameter_list|()
function_decl|;
comment|/**        *<code>optional sint64 low_value = 1;</code>        */
name|long
name|getLowValue
parameter_list|()
function_decl|;
comment|// optional sint64 high_value = 2;
comment|/**        *<code>optional sint64 high_value = 2;</code>        */
name|boolean
name|hasHighValue
parameter_list|()
function_decl|;
comment|/**        *<code>optional sint64 high_value = 2;</code>        */
name|long
name|getHighValue
parameter_list|()
function_decl|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.ColumnStats.LongStats}      */
specifier|public
specifier|static
specifier|final
class|class
name|LongStats
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|LongStatsOrBuilder
block|{
comment|// Use LongStats.newBuilder() to construct.
specifier|private
name|LongStats
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|LongStats
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|LongStats
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|LongStats
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|LongStats
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|LongStats
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|8
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|lowValue_
operator|=
name|input
operator|.
name|readSInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|highValue_
operator|=
name|input
operator|.
name|readSInt64
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_LongStats_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_LongStats_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|LongStats
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|LongStats
argument_list|>
argument_list|()
block|{
specifier|public
name|LongStats
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|LongStats
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|LongStats
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional sint64 low_value = 1;
specifier|public
specifier|static
specifier|final
name|int
name|LOW_VALUE_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|long
name|lowValue_
decl_stmt|;
comment|/**        *<code>optional sint64 low_value = 1;</code>        */
specifier|public
name|boolean
name|hasLowValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional sint64 low_value = 1;</code>        */
specifier|public
name|long
name|getLowValue
parameter_list|()
block|{
return|return
name|lowValue_
return|;
block|}
comment|// optional sint64 high_value = 2;
specifier|public
specifier|static
specifier|final
name|int
name|HIGH_VALUE_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|long
name|highValue_
decl_stmt|;
comment|/**        *<code>optional sint64 high_value = 2;</code>        */
specifier|public
name|boolean
name|hasHighValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>optional sint64 high_value = 2;</code>        */
specifier|public
name|long
name|getHighValue
parameter_list|()
block|{
return|return
name|highValue_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|lowValue_
operator|=
literal|0L
expr_stmt|;
name|highValue_
operator|=
literal|0L
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeSInt64
argument_list|(
literal|1
argument_list|,
name|lowValue_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeSInt64
argument_list|(
literal|2
argument_list|,
name|highValue_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeSInt64Size
argument_list|(
literal|1
argument_list|,
name|lowValue_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeSInt64Size
argument_list|(
literal|2
argument_list|,
name|highValue_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**        * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.ColumnStats.LongStats}        */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStatsOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_LongStats_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_LongStats_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.ColumnStats.LongStats.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{           }
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|lowValue_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|highValue_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_LongStats_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|lowValue_
operator|=
name|lowValue_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|highValue_
operator|=
name|highValue_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasLowValue
argument_list|()
condition|)
block|{
name|setLowValue
argument_list|(
name|other
operator|.
name|getLowValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasHighValue
argument_list|()
condition|)
block|{
name|setHighValue
argument_list|(
name|other
operator|.
name|getHighValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional sint64 low_value = 1;
specifier|private
name|long
name|lowValue_
decl_stmt|;
comment|/**          *<code>optional sint64 low_value = 1;</code>          */
specifier|public
name|boolean
name|hasLowValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**          *<code>optional sint64 low_value = 1;</code>          */
specifier|public
name|long
name|getLowValue
parameter_list|()
block|{
return|return
name|lowValue_
return|;
block|}
comment|/**          *<code>optional sint64 low_value = 1;</code>          */
specifier|public
name|Builder
name|setLowValue
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|lowValue_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional sint64 low_value = 1;</code>          */
specifier|public
name|Builder
name|clearLowValue
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|lowValue_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional sint64 high_value = 2;
specifier|private
name|long
name|highValue_
decl_stmt|;
comment|/**          *<code>optional sint64 high_value = 2;</code>          */
specifier|public
name|boolean
name|hasHighValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**          *<code>optional sint64 high_value = 2;</code>          */
specifier|public
name|long
name|getHighValue
parameter_list|()
block|{
return|return
name|highValue_
return|;
block|}
comment|/**          *<code>optional sint64 high_value = 2;</code>          */
specifier|public
name|Builder
name|setHighValue
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|highValue_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional sint64 high_value = 2;</code>          */
specifier|public
name|Builder
name|clearHighValue
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|highValue_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.ColumnStats.LongStats)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|LongStats
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.ColumnStats.LongStats)
block|}
specifier|public
interface|interface
name|DoubleStatsOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// optional double low_value = 1;
comment|/**        *<code>optional double low_value = 1;</code>        */
name|boolean
name|hasLowValue
parameter_list|()
function_decl|;
comment|/**        *<code>optional double low_value = 1;</code>        */
name|double
name|getLowValue
parameter_list|()
function_decl|;
comment|// optional double high_value = 2;
comment|/**        *<code>optional double high_value = 2;</code>        */
name|boolean
name|hasHighValue
parameter_list|()
function_decl|;
comment|/**        *<code>optional double high_value = 2;</code>        */
name|double
name|getHighValue
parameter_list|()
function_decl|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.ColumnStats.DoubleStats}      */
specifier|public
specifier|static
specifier|final
class|class
name|DoubleStats
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|DoubleStatsOrBuilder
block|{
comment|// Use DoubleStats.newBuilder() to construct.
specifier|private
name|DoubleStats
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|DoubleStats
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|DoubleStats
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|DoubleStats
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|DoubleStats
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|DoubleStats
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|9
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|lowValue_
operator|=
name|input
operator|.
name|readDouble
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|17
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|highValue_
operator|=
name|input
operator|.
name|readDouble
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DoubleStats_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DoubleStats_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|DoubleStats
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|DoubleStats
argument_list|>
argument_list|()
block|{
specifier|public
name|DoubleStats
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|DoubleStats
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|DoubleStats
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional double low_value = 1;
specifier|public
specifier|static
specifier|final
name|int
name|LOW_VALUE_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|double
name|lowValue_
decl_stmt|;
comment|/**        *<code>optional double low_value = 1;</code>        */
specifier|public
name|boolean
name|hasLowValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional double low_value = 1;</code>        */
specifier|public
name|double
name|getLowValue
parameter_list|()
block|{
return|return
name|lowValue_
return|;
block|}
comment|// optional double high_value = 2;
specifier|public
specifier|static
specifier|final
name|int
name|HIGH_VALUE_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|double
name|highValue_
decl_stmt|;
comment|/**        *<code>optional double high_value = 2;</code>        */
specifier|public
name|boolean
name|hasHighValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>optional double high_value = 2;</code>        */
specifier|public
name|double
name|getHighValue
parameter_list|()
block|{
return|return
name|highValue_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|lowValue_
operator|=
literal|0D
expr_stmt|;
name|highValue_
operator|=
literal|0D
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeDouble
argument_list|(
literal|1
argument_list|,
name|lowValue_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeDouble
argument_list|(
literal|2
argument_list|,
name|highValue_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeDoubleSize
argument_list|(
literal|1
argument_list|,
name|lowValue_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeDoubleSize
argument_list|(
literal|2
argument_list|,
name|highValue_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**        * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.ColumnStats.DoubleStats}        */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStatsOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DoubleStats_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DoubleStats_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.ColumnStats.DoubleStats.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{           }
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|lowValue_
operator|=
literal|0D
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|highValue_
operator|=
literal|0D
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DoubleStats_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|lowValue_
operator|=
name|lowValue_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|highValue_
operator|=
name|highValue_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasLowValue
argument_list|()
condition|)
block|{
name|setLowValue
argument_list|(
name|other
operator|.
name|getLowValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasHighValue
argument_list|()
condition|)
block|{
name|setHighValue
argument_list|(
name|other
operator|.
name|getHighValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional double low_value = 1;
specifier|private
name|double
name|lowValue_
decl_stmt|;
comment|/**          *<code>optional double low_value = 1;</code>          */
specifier|public
name|boolean
name|hasLowValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**          *<code>optional double low_value = 1;</code>          */
specifier|public
name|double
name|getLowValue
parameter_list|()
block|{
return|return
name|lowValue_
return|;
block|}
comment|/**          *<code>optional double low_value = 1;</code>          */
specifier|public
name|Builder
name|setLowValue
parameter_list|(
name|double
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|lowValue_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional double low_value = 1;</code>          */
specifier|public
name|Builder
name|clearLowValue
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|lowValue_
operator|=
literal|0D
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional double high_value = 2;
specifier|private
name|double
name|highValue_
decl_stmt|;
comment|/**          *<code>optional double high_value = 2;</code>          */
specifier|public
name|boolean
name|hasHighValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**          *<code>optional double high_value = 2;</code>          */
specifier|public
name|double
name|getHighValue
parameter_list|()
block|{
return|return
name|highValue_
return|;
block|}
comment|/**          *<code>optional double high_value = 2;</code>          */
specifier|public
name|Builder
name|setHighValue
parameter_list|(
name|double
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|highValue_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional double high_value = 2;</code>          */
specifier|public
name|Builder
name|clearHighValue
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|highValue_
operator|=
literal|0D
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.ColumnStats.DoubleStats)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|DoubleStats
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.ColumnStats.DoubleStats)
block|}
specifier|public
interface|interface
name|StringStatsOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// optional int64 max_col_length = 1;
comment|/**        *<code>optional int64 max_col_length = 1;</code>        */
name|boolean
name|hasMaxColLength
parameter_list|()
function_decl|;
comment|/**        *<code>optional int64 max_col_length = 1;</code>        */
name|long
name|getMaxColLength
parameter_list|()
function_decl|;
comment|// optional double avg_col_length = 2;
comment|/**        *<code>optional double avg_col_length = 2;</code>        */
name|boolean
name|hasAvgColLength
parameter_list|()
function_decl|;
comment|/**        *<code>optional double avg_col_length = 2;</code>        */
name|double
name|getAvgColLength
parameter_list|()
function_decl|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats}      */
specifier|public
specifier|static
specifier|final
class|class
name|StringStats
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|StringStatsOrBuilder
block|{
comment|// Use StringStats.newBuilder() to construct.
specifier|private
name|StringStats
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|StringStats
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|StringStats
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|StringStats
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|StringStats
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|StringStats
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|8
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|maxColLength_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|17
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|avgColLength_
operator|=
name|input
operator|.
name|readDouble
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_StringStats_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_StringStats_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|StringStats
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|StringStats
argument_list|>
argument_list|()
block|{
specifier|public
name|StringStats
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|StringStats
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|StringStats
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional int64 max_col_length = 1;
specifier|public
specifier|static
specifier|final
name|int
name|MAX_COL_LENGTH_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|long
name|maxColLength_
decl_stmt|;
comment|/**        *<code>optional int64 max_col_length = 1;</code>        */
specifier|public
name|boolean
name|hasMaxColLength
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional int64 max_col_length = 1;</code>        */
specifier|public
name|long
name|getMaxColLength
parameter_list|()
block|{
return|return
name|maxColLength_
return|;
block|}
comment|// optional double avg_col_length = 2;
specifier|public
specifier|static
specifier|final
name|int
name|AVG_COL_LENGTH_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|double
name|avgColLength_
decl_stmt|;
comment|/**        *<code>optional double avg_col_length = 2;</code>        */
specifier|public
name|boolean
name|hasAvgColLength
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>optional double avg_col_length = 2;</code>        */
specifier|public
name|double
name|getAvgColLength
parameter_list|()
block|{
return|return
name|avgColLength_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|maxColLength_
operator|=
literal|0L
expr_stmt|;
name|avgColLength_
operator|=
literal|0D
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|1
argument_list|,
name|maxColLength_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeDouble
argument_list|(
literal|2
argument_list|,
name|avgColLength_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|1
argument_list|,
name|maxColLength_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeDoubleSize
argument_list|(
literal|2
argument_list|,
name|avgColLength_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**        * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats}        */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStatsOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_StringStats_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_StringStats_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.ColumnStats.StringStats.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{           }
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|maxColLength_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|avgColLength_
operator|=
literal|0D
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_StringStats_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|maxColLength_
operator|=
name|maxColLength_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|avgColLength_
operator|=
name|avgColLength_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasMaxColLength
argument_list|()
condition|)
block|{
name|setMaxColLength
argument_list|(
name|other
operator|.
name|getMaxColLength
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasAvgColLength
argument_list|()
condition|)
block|{
name|setAvgColLength
argument_list|(
name|other
operator|.
name|getAvgColLength
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional int64 max_col_length = 1;
specifier|private
name|long
name|maxColLength_
decl_stmt|;
comment|/**          *<code>optional int64 max_col_length = 1;</code>          */
specifier|public
name|boolean
name|hasMaxColLength
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**          *<code>optional int64 max_col_length = 1;</code>          */
specifier|public
name|long
name|getMaxColLength
parameter_list|()
block|{
return|return
name|maxColLength_
return|;
block|}
comment|/**          *<code>optional int64 max_col_length = 1;</code>          */
specifier|public
name|Builder
name|setMaxColLength
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|maxColLength_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional int64 max_col_length = 1;</code>          */
specifier|public
name|Builder
name|clearMaxColLength
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|maxColLength_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional double avg_col_length = 2;
specifier|private
name|double
name|avgColLength_
decl_stmt|;
comment|/**          *<code>optional double avg_col_length = 2;</code>          */
specifier|public
name|boolean
name|hasAvgColLength
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**          *<code>optional double avg_col_length = 2;</code>          */
specifier|public
name|double
name|getAvgColLength
parameter_list|()
block|{
return|return
name|avgColLength_
return|;
block|}
comment|/**          *<code>optional double avg_col_length = 2;</code>          */
specifier|public
name|Builder
name|setAvgColLength
parameter_list|(
name|double
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|avgColLength_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional double avg_col_length = 2;</code>          */
specifier|public
name|Builder
name|clearAvgColLength
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|avgColLength_
operator|=
literal|0D
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|StringStats
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats)
block|}
specifier|public
interface|interface
name|DecimalStatsOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal low_value = 1;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal low_value = 1;</code>        */
name|boolean
name|hasLowValue
parameter_list|()
function_decl|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal low_value = 1;</code>        */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|getLowValue
parameter_list|()
function_decl|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal low_value = 1;</code>        */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|DecimalOrBuilder
name|getLowValueOrBuilder
parameter_list|()
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal high_value = 2;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal high_value = 2;</code>        */
name|boolean
name|hasHighValue
parameter_list|()
function_decl|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal high_value = 2;</code>        */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|getHighValue
parameter_list|()
function_decl|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal high_value = 2;</code>        */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|DecimalOrBuilder
name|getHighValueOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats}      */
specifier|public
specifier|static
specifier|final
class|class
name|DecimalStats
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|DecimalStatsOrBuilder
block|{
comment|// Use DecimalStats.newBuilder() to construct.
specifier|private
name|DecimalStats
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|DecimalStats
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|DecimalStats
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|DecimalStats
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|DecimalStats
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|DecimalStats
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|lowValue_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|lowValue_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|lowValue_
argument_list|)
expr_stmt|;
name|lowValue_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|highValue_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|highValue_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|highValue_
argument_list|)
expr_stmt|;
name|highValue_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|DecimalStats
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|DecimalStats
argument_list|>
argument_list|()
block|{
specifier|public
name|DecimalStats
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|DecimalStats
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|DecimalStats
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
interface|interface
name|DecimalOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required bytes unscaled = 1;
comment|/**          *<code>required bytes unscaled = 1;</code>          */
name|boolean
name|hasUnscaled
parameter_list|()
function_decl|;
comment|/**          *<code>required bytes unscaled = 1;</code>          */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getUnscaled
parameter_list|()
function_decl|;
comment|// required int32 scale = 2;
comment|/**          *<code>required int32 scale = 2;</code>          */
name|boolean
name|hasScale
parameter_list|()
function_decl|;
comment|/**          *<code>required int32 scale = 2;</code>          */
name|int
name|getScale
parameter_list|()
function_decl|;
block|}
comment|/**        * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal}        */
specifier|public
specifier|static
specifier|final
class|class
name|Decimal
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|DecimalOrBuilder
block|{
comment|// Use Decimal.newBuilder() to construct.
specifier|private
name|Decimal
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Decimal
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|Decimal
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|Decimal
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|Decimal
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|Decimal
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|unscaled_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|scale_
operator|=
name|input
operator|.
name|readInt32
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_Decimal_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_Decimal_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Decimal
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Decimal
argument_list|>
argument_list|()
block|{
specifier|public
name|Decimal
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Decimal
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Decimal
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required bytes unscaled = 1;
specifier|public
specifier|static
specifier|final
name|int
name|UNSCALED_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|unscaled_
decl_stmt|;
comment|/**          *<code>required bytes unscaled = 1;</code>          */
specifier|public
name|boolean
name|hasUnscaled
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**          *<code>required bytes unscaled = 1;</code>          */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getUnscaled
parameter_list|()
block|{
return|return
name|unscaled_
return|;
block|}
comment|// required int32 scale = 2;
specifier|public
specifier|static
specifier|final
name|int
name|SCALE_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|int
name|scale_
decl_stmt|;
comment|/**          *<code>required int32 scale = 2;</code>          */
specifier|public
name|boolean
name|hasScale
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**          *<code>required int32 scale = 2;</code>          */
specifier|public
name|int
name|getScale
parameter_list|()
block|{
return|return
name|scale_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|unscaled_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
expr_stmt|;
name|scale_
operator|=
literal|0
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasUnscaled
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasScale
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|unscaled_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt32
argument_list|(
literal|2
argument_list|,
name|scale_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|1
argument_list|,
name|unscaled_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32Size
argument_list|(
literal|2
argument_list|,
name|scale_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**          * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal}          */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|DecimalOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_Decimal_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_Decimal_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.ColumnStats.DecimalStats.Decimal.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{             }
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|unscaled_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|scale_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_Decimal_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|unscaled_
operator|=
name|unscaled_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|scale_
operator|=
name|scale_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasUnscaled
argument_list|()
condition|)
block|{
name|setUnscaled
argument_list|(
name|other
operator|.
name|getUnscaled
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasScale
argument_list|()
condition|)
block|{
name|setScale
argument_list|(
name|other
operator|.
name|getScale
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasUnscaled
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasScale
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required bytes unscaled = 1;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|unscaled_
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
decl_stmt|;
comment|/**            *<code>required bytes unscaled = 1;</code>            */
specifier|public
name|boolean
name|hasUnscaled
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**            *<code>required bytes unscaled = 1;</code>            */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getUnscaled
parameter_list|()
block|{
return|return
name|unscaled_
return|;
block|}
comment|/**            *<code>required bytes unscaled = 1;</code>            */
specifier|public
name|Builder
name|setUnscaled
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|unscaled_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**            *<code>required bytes unscaled = 1;</code>            */
specifier|public
name|Builder
name|clearUnscaled
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|unscaled_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getUnscaled
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// required int32 scale = 2;
specifier|private
name|int
name|scale_
decl_stmt|;
comment|/**            *<code>required int32 scale = 2;</code>            */
specifier|public
name|boolean
name|hasScale
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**            *<code>required int32 scale = 2;</code>            */
specifier|public
name|int
name|getScale
parameter_list|()
block|{
return|return
name|scale_
return|;
block|}
comment|/**            *<code>required int32 scale = 2;</code>            */
specifier|public
name|Builder
name|setScale
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|scale_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**            *<code>required int32 scale = 2;</code>            */
specifier|public
name|Builder
name|clearScale
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|scale_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|Decimal
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal)
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal low_value = 1;
specifier|public
specifier|static
specifier|final
name|int
name|LOW_VALUE_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|lowValue_
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal low_value = 1;</code>        */
specifier|public
name|boolean
name|hasLowValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal low_value = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|getLowValue
parameter_list|()
block|{
return|return
name|lowValue_
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal low_value = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|DecimalOrBuilder
name|getLowValueOrBuilder
parameter_list|()
block|{
return|return
name|lowValue_
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal high_value = 2;
specifier|public
specifier|static
specifier|final
name|int
name|HIGH_VALUE_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|highValue_
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal high_value = 2;</code>        */
specifier|public
name|boolean
name|hasHighValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal high_value = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|getHighValue
parameter_list|()
block|{
return|return
name|highValue_
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal high_value = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|DecimalOrBuilder
name|getHighValueOrBuilder
parameter_list|()
block|{
return|return
name|highValue_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|lowValue_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|highValue_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
name|hasLowValue
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getLowValue
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasHighValue
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getHighValue
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|lowValue_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|highValue_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|lowValue_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|highValue_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**        * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats}        */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStatsOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.ColumnStats.DecimalStats.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getLowValueFieldBuilder
argument_list|()
expr_stmt|;
name|getHighValueFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|lowValueBuilder_
operator|==
literal|null
condition|)
block|{
name|lowValue_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|lowValueBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
if|if
condition|(
name|highValueBuilder_
operator|==
literal|null
condition|)
block|{
name|highValue_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|highValueBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
if|if
condition|(
name|lowValueBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|lowValue_
operator|=
name|lowValue_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|lowValue_
operator|=
name|lowValueBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
if|if
condition|(
name|highValueBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|highValue_
operator|=
name|highValue_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|highValue_
operator|=
name|highValueBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasLowValue
argument_list|()
condition|)
block|{
name|mergeLowValue
argument_list|(
name|other
operator|.
name|getLowValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasHighValue
argument_list|()
condition|)
block|{
name|mergeHighValue
argument_list|(
name|other
operator|.
name|getHighValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
name|hasLowValue
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getLowValue
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasHighValue
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getHighValue
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal low_value = 1;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|lowValue_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|DecimalOrBuilder
argument_list|>
name|lowValueBuilder_
decl_stmt|;
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal low_value = 1;</code>          */
specifier|public
name|boolean
name|hasLowValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal low_value = 1;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|getLowValue
parameter_list|()
block|{
if|if
condition|(
name|lowValueBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|lowValue_
return|;
block|}
else|else
block|{
return|return
name|lowValueBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal low_value = 1;</code>          */
specifier|public
name|Builder
name|setLowValue
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|value
parameter_list|)
block|{
if|if
condition|(
name|lowValueBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|lowValue_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|lowValueBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal low_value = 1;</code>          */
specifier|public
name|Builder
name|setLowValue
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|lowValueBuilder_
operator|==
literal|null
condition|)
block|{
name|lowValue_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|lowValueBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal low_value = 1;</code>          */
specifier|public
name|Builder
name|mergeLowValue
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|value
parameter_list|)
block|{
if|if
condition|(
name|lowValueBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
operator|&&
name|lowValue_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|lowValue_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|newBuilder
argument_list|(
name|lowValue_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|lowValue_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|lowValueBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal low_value = 1;</code>          */
specifier|public
name|Builder
name|clearLowValue
parameter_list|()
block|{
if|if
condition|(
name|lowValueBuilder_
operator|==
literal|null
condition|)
block|{
name|lowValue_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|lowValueBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal low_value = 1;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|Builder
name|getLowValueBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getLowValueFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal low_value = 1;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|DecimalOrBuilder
name|getLowValueOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|lowValueBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|lowValueBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|lowValue_
return|;
block|}
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal low_value = 1;</code>          */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|DecimalOrBuilder
argument_list|>
name|getLowValueFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|lowValueBuilder_
operator|==
literal|null
condition|)
block|{
name|lowValueBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|DecimalOrBuilder
argument_list|>
argument_list|(
name|lowValue_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|lowValue_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|lowValueBuilder_
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal high_value = 2;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|highValue_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|DecimalOrBuilder
argument_list|>
name|highValueBuilder_
decl_stmt|;
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal high_value = 2;</code>          */
specifier|public
name|boolean
name|hasHighValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal high_value = 2;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|getHighValue
parameter_list|()
block|{
if|if
condition|(
name|highValueBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|highValue_
return|;
block|}
else|else
block|{
return|return
name|highValueBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal high_value = 2;</code>          */
specifier|public
name|Builder
name|setHighValue
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|value
parameter_list|)
block|{
if|if
condition|(
name|highValueBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|highValue_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|highValueBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal high_value = 2;</code>          */
specifier|public
name|Builder
name|setHighValue
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|highValueBuilder_
operator|==
literal|null
condition|)
block|{
name|highValue_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|highValueBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal high_value = 2;</code>          */
specifier|public
name|Builder
name|mergeHighValue
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
name|value
parameter_list|)
block|{
if|if
condition|(
name|highValueBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
operator|&&
name|highValue_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|highValue_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|newBuilder
argument_list|(
name|highValue_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|highValue_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|highValueBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal high_value = 2;</code>          */
specifier|public
name|Builder
name|clearHighValue
parameter_list|()
block|{
if|if
condition|(
name|highValueBuilder_
operator|==
literal|null
condition|)
block|{
name|highValue_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|highValueBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal high_value = 2;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|Builder
name|getHighValueBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getHighValueFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal high_value = 2;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|DecimalOrBuilder
name|getHighValueOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|highValueBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|highValueBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|highValue_
return|;
block|}
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats.Decimal high_value = 2;</code>          */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|DecimalOrBuilder
argument_list|>
name|getHighValueFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|highValueBuilder_
operator|==
literal|null
condition|)
block|{
name|highValueBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Decimal
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|DecimalOrBuilder
argument_list|>
argument_list|(
name|highValue_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|highValue_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|highValueBuilder_
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|DecimalStats
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats)
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional int64 last_analyzed = 1;
specifier|public
specifier|static
specifier|final
name|int
name|LAST_ANALYZED_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|long
name|lastAnalyzed_
decl_stmt|;
comment|/**      *<code>optional int64 last_analyzed = 1;</code>      */
specifier|public
name|boolean
name|hasLastAnalyzed
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>optional int64 last_analyzed = 1;</code>      */
specifier|public
name|long
name|getLastAnalyzed
parameter_list|()
block|{
return|return
name|lastAnalyzed_
return|;
block|}
comment|// required string column_type = 2;
specifier|public
specifier|static
specifier|final
name|int
name|COLUMN_TYPE_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|columnType_
decl_stmt|;
comment|/**      *<code>required string column_type = 2;</code>      */
specifier|public
name|boolean
name|hasColumnType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>required string column_type = 2;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getColumnType
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|columnType_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|columnType_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>required string column_type = 2;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getColumnTypeBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|columnType_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|columnType_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional int64 num_nulls = 3;
specifier|public
specifier|static
specifier|final
name|int
name|NUM_NULLS_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|long
name|numNulls_
decl_stmt|;
comment|/**      *<code>optional int64 num_nulls = 3;</code>      */
specifier|public
name|boolean
name|hasNumNulls
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<code>optional int64 num_nulls = 3;</code>      */
specifier|public
name|long
name|getNumNulls
parameter_list|()
block|{
return|return
name|numNulls_
return|;
block|}
comment|// optional int64 num_distinct_values = 4;
specifier|public
specifier|static
specifier|final
name|int
name|NUM_DISTINCT_VALUES_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|long
name|numDistinctValues_
decl_stmt|;
comment|/**      *<code>optional int64 num_distinct_values = 4;</code>      */
specifier|public
name|boolean
name|hasNumDistinctValues
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**      *<code>optional int64 num_distinct_values = 4;</code>      */
specifier|public
name|long
name|getNumDistinctValues
parameter_list|()
block|{
return|return
name|numDistinctValues_
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.BooleanStats bool_stats = 5;
specifier|public
specifier|static
specifier|final
name|int
name|BOOL_STATS_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|boolStats_
decl_stmt|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.BooleanStats bool_stats = 5;</code>      */
specifier|public
name|boolean
name|hasBoolStats
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.BooleanStats bool_stats = 5;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|getBoolStats
parameter_list|()
block|{
return|return
name|boolStats_
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.BooleanStats bool_stats = 5;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStatsOrBuilder
name|getBoolStatsOrBuilder
parameter_list|()
block|{
return|return
name|boolStats_
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.LongStats long_stats = 6;
specifier|public
specifier|static
specifier|final
name|int
name|LONG_STATS_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|longStats_
decl_stmt|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.LongStats long_stats = 6;</code>      */
specifier|public
name|boolean
name|hasLongStats
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.LongStats long_stats = 6;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|getLongStats
parameter_list|()
block|{
return|return
name|longStats_
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.LongStats long_stats = 6;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStatsOrBuilder
name|getLongStatsOrBuilder
parameter_list|()
block|{
return|return
name|longStats_
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DoubleStats double_stats = 7;
specifier|public
specifier|static
specifier|final
name|int
name|DOUBLE_STATS_FIELD_NUMBER
init|=
literal|7
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|doubleStats_
decl_stmt|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DoubleStats double_stats = 7;</code>      */
specifier|public
name|boolean
name|hasDoubleStats
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DoubleStats double_stats = 7;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|getDoubleStats
parameter_list|()
block|{
return|return
name|doubleStats_
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DoubleStats double_stats = 7;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStatsOrBuilder
name|getDoubleStatsOrBuilder
parameter_list|()
block|{
return|return
name|doubleStats_
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats string_stats = 8;
specifier|public
specifier|static
specifier|final
name|int
name|STRING_STATS_FIELD_NUMBER
init|=
literal|8
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|stringStats_
decl_stmt|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats string_stats = 8;</code>      */
specifier|public
name|boolean
name|hasStringStats
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats string_stats = 8;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|getStringStats
parameter_list|()
block|{
return|return
name|stringStats_
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats string_stats = 8;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStatsOrBuilder
name|getStringStatsOrBuilder
parameter_list|()
block|{
return|return
name|stringStats_
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats binary_stats = 9;
specifier|public
specifier|static
specifier|final
name|int
name|BINARY_STATS_FIELD_NUMBER
init|=
literal|9
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|binaryStats_
decl_stmt|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats binary_stats = 9;</code>      */
specifier|public
name|boolean
name|hasBinaryStats
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats binary_stats = 9;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|getBinaryStats
parameter_list|()
block|{
return|return
name|binaryStats_
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats binary_stats = 9;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStatsOrBuilder
name|getBinaryStatsOrBuilder
parameter_list|()
block|{
return|return
name|binaryStats_
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats decimal_stats = 10;
specifier|public
specifier|static
specifier|final
name|int
name|DECIMAL_STATS_FIELD_NUMBER
init|=
literal|10
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|decimalStats_
decl_stmt|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats decimal_stats = 10;</code>      */
specifier|public
name|boolean
name|hasDecimalStats
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats decimal_stats = 10;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|getDecimalStats
parameter_list|()
block|{
return|return
name|decimalStats_
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats decimal_stats = 10;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStatsOrBuilder
name|getDecimalStatsOrBuilder
parameter_list|()
block|{
return|return
name|decimalStats_
return|;
block|}
comment|// optional string column_name = 11;
specifier|public
specifier|static
specifier|final
name|int
name|COLUMN_NAME_FIELD_NUMBER
init|=
literal|11
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|columnName_
decl_stmt|;
comment|/**      *<code>optional string column_name = 11;</code>      */
specifier|public
name|boolean
name|hasColumnName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
return|;
block|}
comment|/**      *<code>optional string column_name = 11;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getColumnName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|columnName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|columnName_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string column_name = 11;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getColumnNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|columnName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|columnName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional string bit_vectors = 12;
specifier|public
specifier|static
specifier|final
name|int
name|BIT_VECTORS_FIELD_NUMBER
init|=
literal|12
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|bitVectors_
decl_stmt|;
comment|/**      *<code>optional string bit_vectors = 12;</code>      */
specifier|public
name|boolean
name|hasBitVectors
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
return|;
block|}
comment|/**      *<code>optional string bit_vectors = 12;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getBitVectors
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|bitVectors_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|bitVectors_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string bit_vectors = 12;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getBitVectorsBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|bitVectors_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|bitVectors_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|lastAnalyzed_
operator|=
literal|0L
expr_stmt|;
name|columnType_
operator|=
literal|""
expr_stmt|;
name|numNulls_
operator|=
literal|0L
expr_stmt|;
name|numDistinctValues_
operator|=
literal|0L
expr_stmt|;
name|boolStats_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|longStats_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|doubleStats_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|stringStats_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|binaryStats_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|decimalStats_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|columnName_
operator|=
literal|""
expr_stmt|;
name|bitVectors_
operator|=
literal|""
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasColumnType
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasDecimalStats
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getDecimalStats
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|1
argument_list|,
name|lastAnalyzed_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|2
argument_list|,
name|getColumnTypeBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|3
argument_list|,
name|numNulls_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|4
argument_list|,
name|numDistinctValues_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|5
argument_list|,
name|boolStats_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|6
argument_list|,
name|longStats_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|7
argument_list|,
name|doubleStats_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|8
argument_list|,
name|stringStats_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|9
argument_list|,
name|binaryStats_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|10
argument_list|,
name|decimalStats_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|11
argument_list|,
name|getColumnNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|12
argument_list|,
name|getBitVectorsBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|1
argument_list|,
name|lastAnalyzed_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|2
argument_list|,
name|getColumnTypeBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|3
argument_list|,
name|numNulls_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|4
argument_list|,
name|numDistinctValues_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|5
argument_list|,
name|boolStats_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|6
argument_list|,
name|longStats_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|7
argument_list|,
name|doubleStats_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|8
argument_list|,
name|stringStats_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|9
argument_list|,
name|binaryStats_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|10
argument_list|,
name|decimalStats_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|11
argument_list|,
name|getColumnNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|12
argument_list|,
name|getBitVectorsBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.ColumnStats}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStatsOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.ColumnStats.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getBoolStatsFieldBuilder
argument_list|()
expr_stmt|;
name|getLongStatsFieldBuilder
argument_list|()
expr_stmt|;
name|getDoubleStatsFieldBuilder
argument_list|()
expr_stmt|;
name|getStringStatsFieldBuilder
argument_list|()
expr_stmt|;
name|getBinaryStatsFieldBuilder
argument_list|()
expr_stmt|;
name|getDecimalStatsFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|lastAnalyzed_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|columnType_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|numNulls_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|numDistinctValues_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
if|if
condition|(
name|boolStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|boolStats_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|boolStatsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
if|if
condition|(
name|longStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|longStats_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|longStatsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
if|if
condition|(
name|doubleStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|doubleStats_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|doubleStatsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
if|if
condition|(
name|stringStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|stringStats_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|stringStatsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
if|if
condition|(
name|binaryStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|binaryStats_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|binaryStatsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
if|if
condition|(
name|decimalStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|decimalStats_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|decimalStatsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
name|columnName_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000400
operator|)
expr_stmt|;
name|bitVectors_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000800
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|lastAnalyzed_
operator|=
name|lastAnalyzed_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|columnType_
operator|=
name|columnType_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|numNulls_
operator|=
name|numNulls_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|result
operator|.
name|numDistinctValues_
operator|=
name|numDistinctValues_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
if|if
condition|(
name|boolStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|boolStats_
operator|=
name|boolStats_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|boolStats_
operator|=
name|boolStatsBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
if|if
condition|(
name|longStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|longStats_
operator|=
name|longStats_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|longStats_
operator|=
name|longStatsBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000040
expr_stmt|;
block|}
if|if
condition|(
name|doubleStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|doubleStats_
operator|=
name|doubleStats_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|doubleStats_
operator|=
name|doubleStatsBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000080
expr_stmt|;
block|}
if|if
condition|(
name|stringStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|stringStats_
operator|=
name|stringStats_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|stringStats_
operator|=
name|stringStatsBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000100
expr_stmt|;
block|}
if|if
condition|(
name|binaryStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|binaryStats_
operator|=
name|binaryStats_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|binaryStats_
operator|=
name|binaryStatsBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000200
expr_stmt|;
block|}
if|if
condition|(
name|decimalStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|decimalStats_
operator|=
name|decimalStats_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|decimalStats_
operator|=
name|decimalStatsBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000400
expr_stmt|;
block|}
name|result
operator|.
name|columnName_
operator|=
name|columnName_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000800
expr_stmt|;
block|}
name|result
operator|.
name|bitVectors_
operator|=
name|bitVectors_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasLastAnalyzed
argument_list|()
condition|)
block|{
name|setLastAnalyzed
argument_list|(
name|other
operator|.
name|getLastAnalyzed
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasColumnType
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|columnType_
operator|=
name|other
operator|.
name|columnType_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasNumNulls
argument_list|()
condition|)
block|{
name|setNumNulls
argument_list|(
name|other
operator|.
name|getNumNulls
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasNumDistinctValues
argument_list|()
condition|)
block|{
name|setNumDistinctValues
argument_list|(
name|other
operator|.
name|getNumDistinctValues
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasBoolStats
argument_list|()
condition|)
block|{
name|mergeBoolStats
argument_list|(
name|other
operator|.
name|getBoolStats
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasLongStats
argument_list|()
condition|)
block|{
name|mergeLongStats
argument_list|(
name|other
operator|.
name|getLongStats
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasDoubleStats
argument_list|()
condition|)
block|{
name|mergeDoubleStats
argument_list|(
name|other
operator|.
name|getDoubleStats
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasStringStats
argument_list|()
condition|)
block|{
name|mergeStringStats
argument_list|(
name|other
operator|.
name|getStringStats
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasBinaryStats
argument_list|()
condition|)
block|{
name|mergeBinaryStats
argument_list|(
name|other
operator|.
name|getBinaryStats
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasDecimalStats
argument_list|()
condition|)
block|{
name|mergeDecimalStats
argument_list|(
name|other
operator|.
name|getDecimalStats
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasColumnName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
name|columnName_
operator|=
name|other
operator|.
name|columnName_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasBitVectors
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000800
expr_stmt|;
name|bitVectors_
operator|=
name|other
operator|.
name|bitVectors_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasColumnType
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasDecimalStats
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getDecimalStats
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional int64 last_analyzed = 1;
specifier|private
name|long
name|lastAnalyzed_
decl_stmt|;
comment|/**        *<code>optional int64 last_analyzed = 1;</code>        */
specifier|public
name|boolean
name|hasLastAnalyzed
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional int64 last_analyzed = 1;</code>        */
specifier|public
name|long
name|getLastAnalyzed
parameter_list|()
block|{
return|return
name|lastAnalyzed_
return|;
block|}
comment|/**        *<code>optional int64 last_analyzed = 1;</code>        */
specifier|public
name|Builder
name|setLastAnalyzed
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|lastAnalyzed_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int64 last_analyzed = 1;</code>        */
specifier|public
name|Builder
name|clearLastAnalyzed
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|lastAnalyzed_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// required string column_type = 2;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|columnType_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>required string column_type = 2;</code>        */
specifier|public
name|boolean
name|hasColumnType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>required string column_type = 2;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getColumnType
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|columnType_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|columnType_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string column_type = 2;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getColumnTypeBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|columnType_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|columnType_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string column_type = 2;</code>        */
specifier|public
name|Builder
name|setColumnType
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|columnType_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string column_type = 2;</code>        */
specifier|public
name|Builder
name|clearColumnType
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|columnType_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getColumnType
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string column_type = 2;</code>        */
specifier|public
name|Builder
name|setColumnTypeBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|columnType_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional int64 num_nulls = 3;
specifier|private
name|long
name|numNulls_
decl_stmt|;
comment|/**        *<code>optional int64 num_nulls = 3;</code>        */
specifier|public
name|boolean
name|hasNumNulls
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>optional int64 num_nulls = 3;</code>        */
specifier|public
name|long
name|getNumNulls
parameter_list|()
block|{
return|return
name|numNulls_
return|;
block|}
comment|/**        *<code>optional int64 num_nulls = 3;</code>        */
specifier|public
name|Builder
name|setNumNulls
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|numNulls_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int64 num_nulls = 3;</code>        */
specifier|public
name|Builder
name|clearNumNulls
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|numNulls_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional int64 num_distinct_values = 4;
specifier|private
name|long
name|numDistinctValues_
decl_stmt|;
comment|/**        *<code>optional int64 num_distinct_values = 4;</code>        */
specifier|public
name|boolean
name|hasNumDistinctValues
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**        *<code>optional int64 num_distinct_values = 4;</code>        */
specifier|public
name|long
name|getNumDistinctValues
parameter_list|()
block|{
return|return
name|numDistinctValues_
return|;
block|}
comment|/**        *<code>optional int64 num_distinct_values = 4;</code>        */
specifier|public
name|Builder
name|setNumDistinctValues
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|numDistinctValues_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int64 num_distinct_values = 4;</code>        */
specifier|public
name|Builder
name|clearNumDistinctValues
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|numDistinctValues_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.BooleanStats bool_stats = 5;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|boolStats_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStatsOrBuilder
argument_list|>
name|boolStatsBuilder_
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.BooleanStats bool_stats = 5;</code>        */
specifier|public
name|boolean
name|hasBoolStats
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.BooleanStats bool_stats = 5;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|getBoolStats
parameter_list|()
block|{
if|if
condition|(
name|boolStatsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|boolStats_
return|;
block|}
else|else
block|{
return|return
name|boolStatsBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.BooleanStats bool_stats = 5;</code>        */
specifier|public
name|Builder
name|setBoolStats
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|value
parameter_list|)
block|{
if|if
condition|(
name|boolStatsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|boolStats_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|boolStatsBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.BooleanStats bool_stats = 5;</code>        */
specifier|public
name|Builder
name|setBoolStats
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|boolStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|boolStats_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|boolStatsBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.BooleanStats bool_stats = 5;</code>        */
specifier|public
name|Builder
name|mergeBoolStats
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
name|value
parameter_list|)
block|{
if|if
condition|(
name|boolStatsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
operator|&&
name|boolStats_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|boolStats_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
operator|.
name|newBuilder
argument_list|(
name|boolStats_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|boolStats_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|boolStatsBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.BooleanStats bool_stats = 5;</code>        */
specifier|public
name|Builder
name|clearBoolStats
parameter_list|()
block|{
if|if
condition|(
name|boolStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|boolStats_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|boolStatsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.BooleanStats bool_stats = 5;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
operator|.
name|Builder
name|getBoolStatsBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getBoolStatsFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.BooleanStats bool_stats = 5;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStatsOrBuilder
name|getBoolStatsOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|boolStatsBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|boolStatsBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|boolStats_
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.BooleanStats bool_stats = 5;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStatsOrBuilder
argument_list|>
name|getBoolStatsFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|boolStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|boolStatsBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStats
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|BooleanStatsOrBuilder
argument_list|>
argument_list|(
name|boolStats_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|boolStats_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|boolStatsBuilder_
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.LongStats long_stats = 6;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|longStats_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStatsOrBuilder
argument_list|>
name|longStatsBuilder_
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.LongStats long_stats = 6;</code>        */
specifier|public
name|boolean
name|hasLongStats
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.LongStats long_stats = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|getLongStats
parameter_list|()
block|{
if|if
condition|(
name|longStatsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|longStats_
return|;
block|}
else|else
block|{
return|return
name|longStatsBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.LongStats long_stats = 6;</code>        */
specifier|public
name|Builder
name|setLongStats
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|value
parameter_list|)
block|{
if|if
condition|(
name|longStatsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|longStats_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|longStatsBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.LongStats long_stats = 6;</code>        */
specifier|public
name|Builder
name|setLongStats
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|longStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|longStats_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|longStatsBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.LongStats long_stats = 6;</code>        */
specifier|public
name|Builder
name|mergeLongStats
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
name|value
parameter_list|)
block|{
if|if
condition|(
name|longStatsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
operator|&&
name|longStats_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|longStats_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
operator|.
name|newBuilder
argument_list|(
name|longStats_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|longStats_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|longStatsBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.LongStats long_stats = 6;</code>        */
specifier|public
name|Builder
name|clearLongStats
parameter_list|()
block|{
if|if
condition|(
name|longStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|longStats_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|longStatsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.LongStats long_stats = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
operator|.
name|Builder
name|getLongStatsBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getLongStatsFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.LongStats long_stats = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStatsOrBuilder
name|getLongStatsOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|longStatsBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|longStatsBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|longStats_
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.LongStats long_stats = 6;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStatsOrBuilder
argument_list|>
name|getLongStatsFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|longStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|longStatsBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStats
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|LongStatsOrBuilder
argument_list|>
argument_list|(
name|longStats_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|longStats_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|longStatsBuilder_
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DoubleStats double_stats = 7;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|doubleStats_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStatsOrBuilder
argument_list|>
name|doubleStatsBuilder_
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DoubleStats double_stats = 7;</code>        */
specifier|public
name|boolean
name|hasDoubleStats
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DoubleStats double_stats = 7;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|getDoubleStats
parameter_list|()
block|{
if|if
condition|(
name|doubleStatsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|doubleStats_
return|;
block|}
else|else
block|{
return|return
name|doubleStatsBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DoubleStats double_stats = 7;</code>        */
specifier|public
name|Builder
name|setDoubleStats
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|value
parameter_list|)
block|{
if|if
condition|(
name|doubleStatsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|doubleStats_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|doubleStatsBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DoubleStats double_stats = 7;</code>        */
specifier|public
name|Builder
name|setDoubleStats
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|doubleStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|doubleStats_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|doubleStatsBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DoubleStats double_stats = 7;</code>        */
specifier|public
name|Builder
name|mergeDoubleStats
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
name|value
parameter_list|)
block|{
if|if
condition|(
name|doubleStatsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
operator|&&
name|doubleStats_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|doubleStats_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
operator|.
name|newBuilder
argument_list|(
name|doubleStats_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|doubleStats_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|doubleStatsBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DoubleStats double_stats = 7;</code>        */
specifier|public
name|Builder
name|clearDoubleStats
parameter_list|()
block|{
if|if
condition|(
name|doubleStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|doubleStats_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|doubleStatsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DoubleStats double_stats = 7;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
operator|.
name|Builder
name|getDoubleStatsBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getDoubleStatsFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DoubleStats double_stats = 7;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStatsOrBuilder
name|getDoubleStatsOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|doubleStatsBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|doubleStatsBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|doubleStats_
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DoubleStats double_stats = 7;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStatsOrBuilder
argument_list|>
name|getDoubleStatsFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|doubleStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|doubleStatsBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStats
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DoubleStatsOrBuilder
argument_list|>
argument_list|(
name|doubleStats_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|doubleStats_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|doubleStatsBuilder_
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats string_stats = 8;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|stringStats_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStatsOrBuilder
argument_list|>
name|stringStatsBuilder_
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats string_stats = 8;</code>        */
specifier|public
name|boolean
name|hasStringStats
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats string_stats = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|getStringStats
parameter_list|()
block|{
if|if
condition|(
name|stringStatsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|stringStats_
return|;
block|}
else|else
block|{
return|return
name|stringStatsBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats string_stats = 8;</code>        */
specifier|public
name|Builder
name|setStringStats
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|value
parameter_list|)
block|{
if|if
condition|(
name|stringStatsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|stringStats_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|stringStatsBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats string_stats = 8;</code>        */
specifier|public
name|Builder
name|setStringStats
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|stringStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|stringStats_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|stringStatsBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats string_stats = 8;</code>        */
specifier|public
name|Builder
name|mergeStringStats
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|value
parameter_list|)
block|{
if|if
condition|(
name|stringStatsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
operator|&&
name|stringStats_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|stringStats_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|newBuilder
argument_list|(
name|stringStats_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|stringStats_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|stringStatsBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats string_stats = 8;</code>        */
specifier|public
name|Builder
name|clearStringStats
parameter_list|()
block|{
if|if
condition|(
name|stringStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|stringStats_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|stringStatsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats string_stats = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|Builder
name|getStringStatsBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getStringStatsFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats string_stats = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStatsOrBuilder
name|getStringStatsOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|stringStatsBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|stringStatsBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|stringStats_
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats string_stats = 8;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStatsOrBuilder
argument_list|>
name|getStringStatsFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|stringStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|stringStatsBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStatsOrBuilder
argument_list|>
argument_list|(
name|stringStats_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|stringStats_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|stringStatsBuilder_
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats binary_stats = 9;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|binaryStats_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStatsOrBuilder
argument_list|>
name|binaryStatsBuilder_
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats binary_stats = 9;</code>        */
specifier|public
name|boolean
name|hasBinaryStats
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats binary_stats = 9;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|getBinaryStats
parameter_list|()
block|{
if|if
condition|(
name|binaryStatsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|binaryStats_
return|;
block|}
else|else
block|{
return|return
name|binaryStatsBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats binary_stats = 9;</code>        */
specifier|public
name|Builder
name|setBinaryStats
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|value
parameter_list|)
block|{
if|if
condition|(
name|binaryStatsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|binaryStats_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|binaryStatsBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats binary_stats = 9;</code>        */
specifier|public
name|Builder
name|setBinaryStats
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|binaryStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|binaryStats_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|binaryStatsBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats binary_stats = 9;</code>        */
specifier|public
name|Builder
name|mergeBinaryStats
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
name|value
parameter_list|)
block|{
if|if
condition|(
name|binaryStatsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
operator|&&
name|binaryStats_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|binaryStats_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|newBuilder
argument_list|(
name|binaryStats_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|binaryStats_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|binaryStatsBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats binary_stats = 9;</code>        */
specifier|public
name|Builder
name|clearBinaryStats
parameter_list|()
block|{
if|if
condition|(
name|binaryStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|binaryStats_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|binaryStatsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats binary_stats = 9;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|Builder
name|getBinaryStatsBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getBinaryStatsFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats binary_stats = 9;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStatsOrBuilder
name|getBinaryStatsOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|binaryStatsBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|binaryStatsBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|binaryStats_
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.StringStats binary_stats = 9;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStatsOrBuilder
argument_list|>
name|getBinaryStatsFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|binaryStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|binaryStatsBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStats
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|StringStatsOrBuilder
argument_list|>
argument_list|(
name|binaryStats_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|binaryStats_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|binaryStatsBuilder_
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats decimal_stats = 10;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|decimalStats_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStatsOrBuilder
argument_list|>
name|decimalStatsBuilder_
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats decimal_stats = 10;</code>        */
specifier|public
name|boolean
name|hasDecimalStats
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats decimal_stats = 10;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|getDecimalStats
parameter_list|()
block|{
if|if
condition|(
name|decimalStatsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|decimalStats_
return|;
block|}
else|else
block|{
return|return
name|decimalStatsBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats decimal_stats = 10;</code>        */
specifier|public
name|Builder
name|setDecimalStats
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|value
parameter_list|)
block|{
if|if
condition|(
name|decimalStatsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|decimalStats_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|decimalStatsBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats decimal_stats = 10;</code>        */
specifier|public
name|Builder
name|setDecimalStats
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|decimalStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|decimalStats_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|decimalStatsBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats decimal_stats = 10;</code>        */
specifier|public
name|Builder
name|mergeDecimalStats
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
name|value
parameter_list|)
block|{
if|if
condition|(
name|decimalStatsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
operator|&&
name|decimalStats_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|decimalStats_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|newBuilder
argument_list|(
name|decimalStats_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|decimalStats_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|decimalStatsBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats decimal_stats = 10;</code>        */
specifier|public
name|Builder
name|clearDecimalStats
parameter_list|()
block|{
if|if
condition|(
name|decimalStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|decimalStats_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|decimalStatsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats decimal_stats = 10;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Builder
name|getDecimalStatsBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getDecimalStatsFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats decimal_stats = 10;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStatsOrBuilder
name|getDecimalStatsOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|decimalStatsBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|decimalStatsBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|decimalStats_
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.ColumnStats.DecimalStats decimal_stats = 10;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStatsOrBuilder
argument_list|>
name|getDecimalStatsFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|decimalStatsBuilder_
operator|==
literal|null
condition|)
block|{
name|decimalStatsBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStats
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ColumnStats
operator|.
name|DecimalStatsOrBuilder
argument_list|>
argument_list|(
name|decimalStats_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|decimalStats_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|decimalStatsBuilder_
return|;
block|}
comment|// optional string column_name = 11;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|columnName_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string column_name = 11;</code>        */
specifier|public
name|boolean
name|hasColumnName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
return|;
block|}
comment|/**        *<code>optional string column_name = 11;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getColumnName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|columnName_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|columnName_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string column_name = 11;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getColumnNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|columnName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|columnName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string column_name = 11;</code>        */
specifier|public
name|Builder
name|setColumnName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
name|columnName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string column_name = 11;</code>        */
specifier|public
name|Builder
name|clearColumnName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000400
operator|)
expr_stmt|;
name|columnName_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getColumnName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string column_name = 11;</code>        */
specifier|public
name|Builder
name|setColumnNameBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
name|columnName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional string bit_vectors = 12;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|bitVectors_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string bit_vectors = 12;</code>        */
specifier|public
name|boolean
name|hasBitVectors
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
return|;
block|}
comment|/**        *<code>optional string bit_vectors = 12;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getBitVectors
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|bitVectors_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|bitVectors_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string bit_vectors = 12;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getBitVectorsBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|bitVectors_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|bitVectors_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string bit_vectors = 12;</code>        */
specifier|public
name|Builder
name|setBitVectors
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000800
expr_stmt|;
name|bitVectors_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string bit_vectors = 12;</code>        */
specifier|public
name|Builder
name|clearBitVectors
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000800
operator|)
expr_stmt|;
name|bitVectors_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getBitVectors
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string bit_vectors = 12;</code>        */
specifier|public
name|Builder
name|setBitVectorsBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000800
expr_stmt|;
name|bitVectors_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.ColumnStats)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|ColumnStats
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.ColumnStats)
block|}
specifier|public
interface|interface
name|DatabaseOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// optional string description = 1;
comment|/**      *<code>optional string description = 1;</code>      */
name|boolean
name|hasDescription
parameter_list|()
function_decl|;
comment|/**      *<code>optional string description = 1;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getDescription
parameter_list|()
function_decl|;
comment|/**      *<code>optional string description = 1;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getDescriptionBytes
parameter_list|()
function_decl|;
comment|// optional string uri = 2;
comment|/**      *<code>optional string uri = 2;</code>      */
name|boolean
name|hasUri
parameter_list|()
function_decl|;
comment|/**      *<code>optional string uri = 2;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getUri
parameter_list|()
function_decl|;
comment|/**      *<code>optional string uri = 2;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getUriBytes
parameter_list|()
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>      */
name|boolean
name|hasParameters
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getParameters
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
name|getParametersOrBuilder
parameter_list|()
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 4;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 4;</code>      */
name|boolean
name|hasPrivileges
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 4;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|getPrivileges
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 4;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetOrBuilder
name|getPrivilegesOrBuilder
parameter_list|()
function_decl|;
comment|// optional string owner_name = 5;
comment|/**      *<code>optional string owner_name = 5;</code>      */
name|boolean
name|hasOwnerName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string owner_name = 5;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getOwnerName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string owner_name = 5;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getOwnerNameBytes
parameter_list|()
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType owner_type = 6;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType owner_type = 6;</code>      */
name|boolean
name|hasOwnerType
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType owner_type = 6;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|getOwnerType
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.Database}    */
specifier|public
specifier|static
specifier|final
class|class
name|Database
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|DatabaseOrBuilder
block|{
comment|// Use Database.newBuilder() to construct.
specifier|private
name|Database
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Database
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|Database
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|Database
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|Database
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|Database
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|description_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|uri_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|parameters_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|parameters_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|parameters_
argument_list|)
expr_stmt|;
name|parameters_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
break|break;
block|}
case|case
literal|34
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|privileges_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|privileges_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|privileges_
argument_list|)
expr_stmt|;
name|privileges_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
break|break;
block|}
case|case
literal|42
case|:
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|ownerName_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|48
case|:
block|{
name|int
name|rawValue
init|=
name|input
operator|.
name|readEnum
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|value
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|valueOf
argument_list|(
name|rawValue
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unknownFields
operator|.
name|mergeVarintField
argument_list|(
literal|6
argument_list|,
name|rawValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|ownerType_
operator|=
name|value
expr_stmt|;
block|}
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Database_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Database_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Database
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Database
argument_list|>
argument_list|()
block|{
specifier|public
name|Database
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Database
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Database
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional string description = 1;
specifier|public
specifier|static
specifier|final
name|int
name|DESCRIPTION_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|description_
decl_stmt|;
comment|/**      *<code>optional string description = 1;</code>      */
specifier|public
name|boolean
name|hasDescription
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>optional string description = 1;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getDescription
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|description_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|description_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string description = 1;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getDescriptionBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|description_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|description_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional string uri = 2;
specifier|public
specifier|static
specifier|final
name|int
name|URI_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|uri_
decl_stmt|;
comment|/**      *<code>optional string uri = 2;</code>      */
specifier|public
name|boolean
name|hasUri
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>optional string uri = 2;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getUri
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|uri_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|uri_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string uri = 2;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getUriBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|uri_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|uri_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;
specifier|public
specifier|static
specifier|final
name|int
name|PARAMETERS_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|parameters_
decl_stmt|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>      */
specifier|public
name|boolean
name|hasParameters
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getParameters
parameter_list|()
block|{
return|return
name|parameters_
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
name|getParametersOrBuilder
parameter_list|()
block|{
return|return
name|parameters_
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 4;
specifier|public
specifier|static
specifier|final
name|int
name|PRIVILEGES_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|privileges_
decl_stmt|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 4;</code>      */
specifier|public
name|boolean
name|hasPrivileges
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 4;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|getPrivileges
parameter_list|()
block|{
return|return
name|privileges_
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 4;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetOrBuilder
name|getPrivilegesOrBuilder
parameter_list|()
block|{
return|return
name|privileges_
return|;
block|}
comment|// optional string owner_name = 5;
specifier|public
specifier|static
specifier|final
name|int
name|OWNER_NAME_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|ownerName_
decl_stmt|;
comment|/**      *<code>optional string owner_name = 5;</code>      */
specifier|public
name|boolean
name|hasOwnerName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**      *<code>optional string owner_name = 5;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getOwnerName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|ownerName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|ownerName_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string owner_name = 5;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getOwnerNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|ownerName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|ownerName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType owner_type = 6;
specifier|public
specifier|static
specifier|final
name|int
name|OWNER_TYPE_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|ownerType_
decl_stmt|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType owner_type = 6;</code>      */
specifier|public
name|boolean
name|hasOwnerType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType owner_type = 6;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|getOwnerType
parameter_list|()
block|{
return|return
name|ownerType_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|description_
operator|=
literal|""
expr_stmt|;
name|uri_
operator|=
literal|""
expr_stmt|;
name|parameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|privileges_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|ownerName_
operator|=
literal|""
expr_stmt|;
name|ownerType_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|USER
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
name|hasParameters
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getParameters
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasPrivileges
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getPrivileges
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|getDescriptionBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|2
argument_list|,
name|getUriBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|3
argument_list|,
name|parameters_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|4
argument_list|,
name|privileges_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|5
argument_list|,
name|getOwnerNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|output
operator|.
name|writeEnum
argument_list|(
literal|6
argument_list|,
name|ownerType_
operator|.
name|getNumber
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|1
argument_list|,
name|getDescriptionBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|2
argument_list|,
name|getUriBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|3
argument_list|,
name|parameters_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|4
argument_list|,
name|privileges_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|5
argument_list|,
name|getOwnerNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeEnumSize
argument_list|(
literal|6
argument_list|,
name|ownerType_
operator|.
name|getNumber
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.Database}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DatabaseOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Database_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Database_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.Database.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getParametersFieldBuilder
argument_list|()
expr_stmt|;
name|getPrivilegesFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|description_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|uri_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|parameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
name|privileges_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|privilegesBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|ownerName_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|ownerType_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|USER
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Database_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|description_
operator|=
name|description_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|uri_
operator|=
name|uri_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|parameters_
operator|=
name|parameters_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|parameters_
operator|=
name|parametersBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|privileges_
operator|=
name|privileges_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|privileges_
operator|=
name|privilegesBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
name|result
operator|.
name|ownerName_
operator|=
name|ownerName_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
name|result
operator|.
name|ownerType_
operator|=
name|ownerType_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasDescription
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|description_
operator|=
name|other
operator|.
name|description_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasUri
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|uri_
operator|=
name|other
operator|.
name|uri_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasParameters
argument_list|()
condition|)
block|{
name|mergeParameters
argument_list|(
name|other
operator|.
name|getParameters
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasPrivileges
argument_list|()
condition|)
block|{
name|mergePrivileges
argument_list|(
name|other
operator|.
name|getPrivileges
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasOwnerName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|ownerName_
operator|=
name|other
operator|.
name|ownerName_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasOwnerType
argument_list|()
condition|)
block|{
name|setOwnerType
argument_list|(
name|other
operator|.
name|getOwnerType
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
name|hasParameters
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getParameters
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasPrivileges
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getPrivileges
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Database
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional string description = 1;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|description_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string description = 1;</code>        */
specifier|public
name|boolean
name|hasDescription
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional string description = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getDescription
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|description_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|description_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string description = 1;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getDescriptionBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|description_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|description_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string description = 1;</code>        */
specifier|public
name|Builder
name|setDescription
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|description_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string description = 1;</code>        */
specifier|public
name|Builder
name|clearDescription
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|description_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getDescription
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string description = 1;</code>        */
specifier|public
name|Builder
name|setDescriptionBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|description_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional string uri = 2;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|uri_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string uri = 2;</code>        */
specifier|public
name|boolean
name|hasUri
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>optional string uri = 2;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getUri
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|uri_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|uri_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string uri = 2;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getUriBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|uri_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|uri_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string uri = 2;</code>        */
specifier|public
name|Builder
name|setUri
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|uri_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string uri = 2;</code>        */
specifier|public
name|Builder
name|clearUri
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|uri_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getUri
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string uri = 2;</code>        */
specifier|public
name|Builder
name|setUriBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|uri_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|parameters_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
argument_list|>
name|parametersBuilder_
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>        */
specifier|public
name|boolean
name|hasParameters
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getParameters
parameter_list|()
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|parameters_
return|;
block|}
else|else
block|{
return|return
name|parametersBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>        */
specifier|public
name|Builder
name|setParameters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|value
parameter_list|)
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|parameters_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>        */
specifier|public
name|Builder
name|setParameters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|parameters_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>        */
specifier|public
name|Builder
name|mergeParameters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|value
parameter_list|)
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
operator|&&
name|parameters_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|parameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|newBuilder
argument_list|(
name|parameters_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parameters_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>        */
specifier|public
name|Builder
name|clearParameters
parameter_list|()
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|parameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
name|getParametersBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getParametersFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
name|getParametersOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|parametersBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|parametersBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|parameters_
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
argument_list|>
name|getParametersFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|parametersBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
argument_list|>
argument_list|(
name|parameters_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|parameters_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|parametersBuilder_
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 4;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|privileges_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetOrBuilder
argument_list|>
name|privilegesBuilder_
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 4;</code>        */
specifier|public
name|boolean
name|hasPrivileges
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|getPrivileges
parameter_list|()
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|privileges_
return|;
block|}
else|else
block|{
return|return
name|privilegesBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 4;</code>        */
specifier|public
name|Builder
name|setPrivileges
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|value
parameter_list|)
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|privileges_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|privilegesBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 4;</code>        */
specifier|public
name|Builder
name|setPrivileges
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
name|privileges_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|privilegesBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 4;</code>        */
specifier|public
name|Builder
name|mergePrivileges
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|value
parameter_list|)
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
operator|&&
name|privileges_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|privileges_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|newBuilder
argument_list|(
name|privileges_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|privileges_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|privilegesBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 4;</code>        */
specifier|public
name|Builder
name|clearPrivileges
parameter_list|()
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
name|privileges_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|privilegesBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|Builder
name|getPrivilegesBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getPrivilegesFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetOrBuilder
name|getPrivilegesOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|privilegesBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|privilegesBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|privileges_
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 4;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetOrBuilder
argument_list|>
name|getPrivilegesFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
name|privilegesBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetOrBuilder
argument_list|>
argument_list|(
name|privileges_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|privileges_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|privilegesBuilder_
return|;
block|}
comment|// optional string owner_name = 5;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|ownerName_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string owner_name = 5;</code>        */
specifier|public
name|boolean
name|hasOwnerName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**        *<code>optional string owner_name = 5;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getOwnerName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|ownerName_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|ownerName_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string owner_name = 5;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getOwnerNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|ownerName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|ownerName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string owner_name = 5;</code>        */
specifier|public
name|Builder
name|setOwnerName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|ownerName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string owner_name = 5;</code>        */
specifier|public
name|Builder
name|clearOwnerName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|ownerName_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getOwnerName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string owner_name = 5;</code>        */
specifier|public
name|Builder
name|setOwnerNameBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|ownerName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType owner_type = 6;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|ownerType_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|USER
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType owner_type = 6;</code>        */
specifier|public
name|boolean
name|hasOwnerType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType owner_type = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|getOwnerType
parameter_list|()
block|{
return|return
name|ownerType_
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType owner_type = 6;</code>        */
specifier|public
name|Builder
name|setOwnerType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|ownerType_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType owner_type = 6;</code>        */
specifier|public
name|Builder
name|clearOwnerType
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|ownerType_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|USER
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.Database)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|Database
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.Database)
block|}
specifier|public
interface|interface
name|DelegationTokenOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required string token_str = 1;
comment|/**      *<code>required string token_str = 1;</code>      */
name|boolean
name|hasTokenStr
parameter_list|()
function_decl|;
comment|/**      *<code>required string token_str = 1;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getTokenStr
parameter_list|()
function_decl|;
comment|/**      *<code>required string token_str = 1;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTokenStrBytes
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.DelegationToken}    */
specifier|public
specifier|static
specifier|final
class|class
name|DelegationToken
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|DelegationTokenOrBuilder
block|{
comment|// Use DelegationToken.newBuilder() to construct.
specifier|private
name|DelegationToken
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|DelegationToken
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|DelegationToken
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|DelegationToken
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|DelegationToken
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|DelegationToken
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|tokenStr_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_DelegationToken_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_DelegationToken_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|DelegationToken
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|DelegationToken
argument_list|>
argument_list|()
block|{
specifier|public
name|DelegationToken
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|DelegationToken
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|DelegationToken
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string token_str = 1;
specifier|public
specifier|static
specifier|final
name|int
name|TOKEN_STR_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|tokenStr_
decl_stmt|;
comment|/**      *<code>required string token_str = 1;</code>      */
specifier|public
name|boolean
name|hasTokenStr
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>required string token_str = 1;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getTokenStr
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|tokenStr_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|tokenStr_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>required string token_str = 1;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTokenStrBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|tokenStr_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|tokenStr_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|tokenStr_
operator|=
literal|""
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasTokenStr
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|getTokenStrBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|1
argument_list|,
name|getTokenStrBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.DelegationToken}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationTokenOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_DelegationToken_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_DelegationToken_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.DelegationToken.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{         }
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|tokenStr_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_DelegationToken_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|tokenStr_
operator|=
name|tokenStr_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasTokenStr
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|tokenStr_
operator|=
name|other
operator|.
name|tokenStr_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasTokenStr
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|DelegationToken
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string token_str = 1;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|tokenStr_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>required string token_str = 1;</code>        */
specifier|public
name|boolean
name|hasTokenStr
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>required string token_str = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getTokenStr
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|tokenStr_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|tokenStr_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string token_str = 1;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTokenStrBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|tokenStr_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|tokenStr_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string token_str = 1;</code>        */
specifier|public
name|Builder
name|setTokenStr
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|tokenStr_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string token_str = 1;</code>        */
specifier|public
name|Builder
name|clearTokenStr
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|tokenStr_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getTokenStr
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string token_str = 1;</code>        */
specifier|public
name|Builder
name|setTokenStrBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|tokenStr_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.DelegationToken)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|DelegationToken
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.DelegationToken)
block|}
specifier|public
interface|interface
name|FieldSchemaOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required string name = 1;
comment|/**      *<code>required string name = 1;</code>      */
name|boolean
name|hasName
parameter_list|()
function_decl|;
comment|/**      *<code>required string name = 1;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
function_decl|;
comment|/**      *<code>required string name = 1;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
function_decl|;
comment|// required string type = 2;
comment|/**      *<code>required string type = 2;</code>      */
name|boolean
name|hasType
parameter_list|()
function_decl|;
comment|/**      *<code>required string type = 2;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getType
parameter_list|()
function_decl|;
comment|/**      *<code>required string type = 2;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTypeBytes
parameter_list|()
function_decl|;
comment|// optional string comment = 3;
comment|/**      *<code>optional string comment = 3;</code>      */
name|boolean
name|hasComment
parameter_list|()
function_decl|;
comment|/**      *<code>optional string comment = 3;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getComment
parameter_list|()
function_decl|;
comment|/**      *<code>optional string comment = 3;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getCommentBytes
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.FieldSchema}    */
specifier|public
specifier|static
specifier|final
class|class
name|FieldSchema
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|FieldSchemaOrBuilder
block|{
comment|// Use FieldSchema.newBuilder() to construct.
specifier|private
name|FieldSchema
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|FieldSchema
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|FieldSchema
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|FieldSchema
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|FieldSchema
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|FieldSchema
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|type_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|comment_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_FieldSchema_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_FieldSchema_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|FieldSchema
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
block|{
specifier|public
name|FieldSchema
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|FieldSchema
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|FieldSchema
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string name = 1;
specifier|public
specifier|static
specifier|final
name|int
name|NAME_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
decl_stmt|;
comment|/**      *<code>required string name = 1;</code>      */
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>required string name = 1;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|name_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>required string name = 1;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|name_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// required string type = 2;
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|type_
decl_stmt|;
comment|/**      *<code>required string type = 2;</code>      */
specifier|public
name|boolean
name|hasType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>required string type = 2;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getType
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|type_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|type_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>required string type = 2;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTypeBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|type_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|type_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional string comment = 3;
specifier|public
specifier|static
specifier|final
name|int
name|COMMENT_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|comment_
decl_stmt|;
comment|/**      *<code>optional string comment = 3;</code>      */
specifier|public
name|boolean
name|hasComment
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<code>optional string comment = 3;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getComment
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|comment_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|comment_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string comment = 3;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getCommentBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|comment_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|comment_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|name_
operator|=
literal|""
expr_stmt|;
name|type_
operator|=
literal|""
expr_stmt|;
name|comment_
operator|=
literal|""
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasName
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasType
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|getNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|2
argument_list|,
name|getTypeBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|3
argument_list|,
name|getCommentBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|1
argument_list|,
name|getNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|2
argument_list|,
name|getTypeBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|3
argument_list|,
name|getCommentBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.FieldSchema}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchemaOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_FieldSchema_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_FieldSchema_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.FieldSchema.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{         }
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|name_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|type_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|comment_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_FieldSchema_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|name_
operator|=
name|name_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|type_
operator|=
name|type_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|comment_
operator|=
name|comment_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|other
operator|.
name|name_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasType
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|type_
operator|=
name|other
operator|.
name|type_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasComment
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|comment_
operator|=
name|other
operator|.
name|comment_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasName
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasType
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string name = 1;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>required string name = 1;</code>        */
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>required string name = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|name_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string name = 1;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|name_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string name = 1;</code>        */
specifier|public
name|Builder
name|setName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string name = 1;</code>        */
specifier|public
name|Builder
name|clearName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|name_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string name = 1;</code>        */
specifier|public
name|Builder
name|setNameBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// required string type = 2;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|type_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>required string type = 2;</code>        */
specifier|public
name|boolean
name|hasType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>required string type = 2;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getType
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|type_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|type_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string type = 2;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTypeBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|type_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|type_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string type = 2;</code>        */
specifier|public
name|Builder
name|setType
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|type_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string type = 2;</code>        */
specifier|public
name|Builder
name|clearType
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|type_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getType
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string type = 2;</code>        */
specifier|public
name|Builder
name|setTypeBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|type_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional string comment = 3;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|comment_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string comment = 3;</code>        */
specifier|public
name|boolean
name|hasComment
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>optional string comment = 3;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getComment
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|comment_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|comment_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string comment = 3;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getCommentBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|comment_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|comment_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string comment = 3;</code>        */
specifier|public
name|Builder
name|setComment
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|comment_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string comment = 3;</code>        */
specifier|public
name|Builder
name|clearComment
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|comment_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getComment
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string comment = 3;</code>        */
specifier|public
name|Builder
name|setCommentBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|comment_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.FieldSchema)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|FieldSchema
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.FieldSchema)
block|}
specifier|public
interface|interface
name|FunctionOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// optional string class_name = 1;
comment|/**      *<code>optional string class_name = 1;</code>      */
name|boolean
name|hasClassName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string class_name = 1;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getClassName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string class_name = 1;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getClassNameBytes
parameter_list|()
function_decl|;
comment|// optional string owner_name = 2;
comment|/**      *<code>optional string owner_name = 2;</code>      */
name|boolean
name|hasOwnerName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string owner_name = 2;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getOwnerName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string owner_name = 2;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getOwnerNameBytes
parameter_list|()
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType owner_type = 3;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType owner_type = 3;</code>      */
name|boolean
name|hasOwnerType
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType owner_type = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|getOwnerType
parameter_list|()
function_decl|;
comment|// optional sint64 create_time = 4;
comment|/**      *<code>optional sint64 create_time = 4;</code>      */
name|boolean
name|hasCreateTime
parameter_list|()
function_decl|;
comment|/**      *<code>optional sint64 create_time = 4;</code>      */
name|long
name|getCreateTime
parameter_list|()
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Function.FunctionType function_type = 5;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Function.FunctionType function_type = 5;</code>      */
name|boolean
name|hasFunctionType
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Function.FunctionType function_type = 5;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|FunctionType
name|getFunctionType
parameter_list|()
function_decl|;
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
argument_list|>
name|getResourceUrisList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
name|getResourceUris
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>      */
name|int
name|getResourceUrisCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUriOrBuilder
argument_list|>
name|getResourceUrisOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUriOrBuilder
name|getResourceUrisOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.Function}    */
specifier|public
specifier|static
specifier|final
class|class
name|Function
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|FunctionOrBuilder
block|{
comment|// Use Function.newBuilder() to construct.
specifier|private
name|Function
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Function
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|Function
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|Function
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|Function
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|Function
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|className_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|ownerName_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|24
case|:
block|{
name|int
name|rawValue
init|=
name|input
operator|.
name|readEnum
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|value
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|valueOf
argument_list|(
name|rawValue
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unknownFields
operator|.
name|mergeVarintField
argument_list|(
literal|3
argument_list|,
name|rawValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|ownerType_
operator|=
name|value
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|32
case|:
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|createTime_
operator|=
name|input
operator|.
name|readSInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|40
case|:
block|{
name|int
name|rawValue
init|=
name|input
operator|.
name|readEnum
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|FunctionType
name|value
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|FunctionType
operator|.
name|valueOf
argument_list|(
name|rawValue
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unknownFields
operator|.
name|mergeVarintField
argument_list|(
literal|5
argument_list|,
name|rawValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|functionType_
operator|=
name|value
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|50
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|resourceUris_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
name|resourceUris_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|resourceUris_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|resourceUris_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Function_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Function_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Function
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Function
argument_list|>
argument_list|()
block|{
specifier|public
name|Function
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Function
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Function
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
comment|/**      * Protobuf enum {@code org.apache.hadoop.hive.metastore.hbase.Function.FunctionType}      */
specifier|public
enum|enum
name|FunctionType
implements|implements
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolMessageEnum
block|{
comment|/**        *<code>JAVA = 1;</code>        */
name|JAVA
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
block|,       ;
comment|/**        *<code>JAVA = 1;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|JAVA_VALUE
init|=
literal|1
decl_stmt|;
specifier|public
specifier|final
name|int
name|getNumber
parameter_list|()
block|{
return|return
name|value
return|;
block|}
specifier|public
specifier|static
name|FunctionType
name|valueOf
parameter_list|(
name|int
name|value
parameter_list|)
block|{
switch|switch
condition|(
name|value
condition|)
block|{
case|case
literal|1
case|:
return|return
name|JAVA
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|FunctionType
argument_list|>
name|internalGetValueMap
parameter_list|()
block|{
return|return
name|internalValueMap
return|;
block|}
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|FunctionType
argument_list|>
name|internalValueMap
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|FunctionType
argument_list|>
argument_list|()
block|{
specifier|public
name|FunctionType
name|findValueByNumber
parameter_list|(
name|int
name|number
parameter_list|)
block|{
return|return
name|FunctionType
operator|.
name|valueOf
argument_list|(
name|number
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|getValueDescriptor
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|getDescriptor
argument_list|()
operator|.
name|getEnumTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
return|;
block|}
specifier|private
specifier|static
specifier|final
name|FunctionType
index|[]
name|VALUES
init|=
name|values
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|FunctionType
name|valueOf
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|desc
parameter_list|)
block|{
if|if
condition|(
name|desc
operator|.
name|getType
argument_list|()
operator|!=
name|getDescriptor
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|IllegalArgumentException
argument_list|(
literal|"EnumValueDescriptor is not for this type."
argument_list|)
throw|;
block|}
return|return
name|VALUES
index|[
name|desc
operator|.
name|getIndex
argument_list|()
index|]
return|;
block|}
specifier|private
specifier|final
name|int
name|index
decl_stmt|;
specifier|private
specifier|final
name|int
name|value
decl_stmt|;
specifier|private
name|FunctionType
parameter_list|(
name|int
name|index
parameter_list|,
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|index
operator|=
name|index
expr_stmt|;
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(enum_scope:org.apache.hadoop.hive.metastore.hbase.Function.FunctionType)
block|}
specifier|public
interface|interface
name|ResourceUriOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri.ResourceType resource_type = 1;
comment|/**        *<code>required .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri.ResourceType resource_type = 1;</code>        */
name|boolean
name|hasResourceType
parameter_list|()
function_decl|;
comment|/**        *<code>required .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri.ResourceType resource_type = 1;</code>        */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|ResourceType
name|getResourceType
parameter_list|()
function_decl|;
comment|// required string uri = 2;
comment|/**        *<code>required string uri = 2;</code>        */
name|boolean
name|hasUri
parameter_list|()
function_decl|;
comment|/**        *<code>required string uri = 2;</code>        */
name|java
operator|.
name|lang
operator|.
name|String
name|getUri
parameter_list|()
function_decl|;
comment|/**        *<code>required string uri = 2;</code>        */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getUriBytes
parameter_list|()
function_decl|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri}      */
specifier|public
specifier|static
specifier|final
class|class
name|ResourceUri
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|ResourceUriOrBuilder
block|{
comment|// Use ResourceUri.newBuilder() to construct.
specifier|private
name|ResourceUri
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|ResourceUri
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|ResourceUri
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|ResourceUri
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|ResourceUri
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|ResourceUri
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|8
case|:
block|{
name|int
name|rawValue
init|=
name|input
operator|.
name|readEnum
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|ResourceType
name|value
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|ResourceType
operator|.
name|valueOf
argument_list|(
name|rawValue
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unknownFields
operator|.
name|mergeVarintField
argument_list|(
literal|1
argument_list|,
name|rawValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|resourceType_
operator|=
name|value
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|18
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|uri_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Function_ResourceUri_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Function_ResourceUri_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ResourceUri
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|ResourceUri
argument_list|>
argument_list|()
block|{
specifier|public
name|ResourceUri
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|ResourceUri
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ResourceUri
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
comment|/**        * Protobuf enum {@code org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri.ResourceType}        */
specifier|public
enum|enum
name|ResourceType
implements|implements
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolMessageEnum
block|{
comment|/**          *<code>JAR = 1;</code>          */
name|JAR
argument_list|(
literal|0
argument_list|,
literal|1
argument_list|)
block|,
comment|/**          *<code>FILE = 2;</code>          */
name|FILE
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
block|,
comment|/**          *<code>ARCHIVE = 3;</code>          */
name|ARCHIVE
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
block|,         ;
comment|/**          *<code>JAR = 1;</code>          */
specifier|public
specifier|static
specifier|final
name|int
name|JAR_VALUE
init|=
literal|1
decl_stmt|;
comment|/**          *<code>FILE = 2;</code>          */
specifier|public
specifier|static
specifier|final
name|int
name|FILE_VALUE
init|=
literal|2
decl_stmt|;
comment|/**          *<code>ARCHIVE = 3;</code>          */
specifier|public
specifier|static
specifier|final
name|int
name|ARCHIVE_VALUE
init|=
literal|3
decl_stmt|;
specifier|public
specifier|final
name|int
name|getNumber
parameter_list|()
block|{
return|return
name|value
return|;
block|}
specifier|public
specifier|static
name|ResourceType
name|valueOf
parameter_list|(
name|int
name|value
parameter_list|)
block|{
switch|switch
condition|(
name|value
condition|)
block|{
case|case
literal|1
case|:
return|return
name|JAR
return|;
case|case
literal|2
case|:
return|return
name|FILE
return|;
case|case
literal|3
case|:
return|return
name|ARCHIVE
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|ResourceType
argument_list|>
name|internalGetValueMap
parameter_list|()
block|{
return|return
name|internalValueMap
return|;
block|}
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|ResourceType
argument_list|>
name|internalValueMap
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|ResourceType
argument_list|>
argument_list|()
block|{
specifier|public
name|ResourceType
name|findValueByNumber
parameter_list|(
name|int
name|number
parameter_list|)
block|{
return|return
name|ResourceType
operator|.
name|valueOf
argument_list|(
name|number
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|getValueDescriptor
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|getDescriptor
argument_list|()
operator|.
name|getEnumTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
return|;
block|}
specifier|private
specifier|static
specifier|final
name|ResourceType
index|[]
name|VALUES
init|=
name|values
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|ResourceType
name|valueOf
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|desc
parameter_list|)
block|{
if|if
condition|(
name|desc
operator|.
name|getType
argument_list|()
operator|!=
name|getDescriptor
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|IllegalArgumentException
argument_list|(
literal|"EnumValueDescriptor is not for this type."
argument_list|)
throw|;
block|}
return|return
name|VALUES
index|[
name|desc
operator|.
name|getIndex
argument_list|()
index|]
return|;
block|}
specifier|private
specifier|final
name|int
name|index
decl_stmt|;
specifier|private
specifier|final
name|int
name|value
decl_stmt|;
specifier|private
name|ResourceType
parameter_list|(
name|int
name|index
parameter_list|,
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|index
operator|=
name|index
expr_stmt|;
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(enum_scope:org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri.ResourceType)
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri.ResourceType resource_type = 1;
specifier|public
specifier|static
specifier|final
name|int
name|RESOURCE_TYPE_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|ResourceType
name|resourceType_
decl_stmt|;
comment|/**        *<code>required .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri.ResourceType resource_type = 1;</code>        */
specifier|public
name|boolean
name|hasResourceType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>required .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri.ResourceType resource_type = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|ResourceType
name|getResourceType
parameter_list|()
block|{
return|return
name|resourceType_
return|;
block|}
comment|// required string uri = 2;
specifier|public
specifier|static
specifier|final
name|int
name|URI_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|uri_
decl_stmt|;
comment|/**        *<code>required string uri = 2;</code>        */
specifier|public
name|boolean
name|hasUri
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>required string uri = 2;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getUri
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|uri_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|uri_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**        *<code>required string uri = 2;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getUriBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|uri_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|uri_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|resourceType_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|ResourceType
operator|.
name|JAR
expr_stmt|;
name|uri_
operator|=
literal|""
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasResourceType
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasUri
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeEnum
argument_list|(
literal|1
argument_list|,
name|resourceType_
operator|.
name|getNumber
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|2
argument_list|,
name|getUriBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeEnumSize
argument_list|(
literal|1
argument_list|,
name|resourceType_
operator|.
name|getNumber
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|2
argument_list|,
name|getUriBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**        * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri}        */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUriOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Function_ResourceUri_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Function_ResourceUri_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.Function.ResourceUri.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{           }
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|resourceType_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|ResourceType
operator|.
name|JAR
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|uri_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Function_ResourceUri_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|resourceType_
operator|=
name|resourceType_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|uri_
operator|=
name|uri_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasResourceType
argument_list|()
condition|)
block|{
name|setResourceType
argument_list|(
name|other
operator|.
name|getResourceType
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasUri
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|uri_
operator|=
name|other
operator|.
name|uri_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasResourceType
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasUri
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri.ResourceType resource_type = 1;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|ResourceType
name|resourceType_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|ResourceType
operator|.
name|JAR
decl_stmt|;
comment|/**          *<code>required .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri.ResourceType resource_type = 1;</code>          */
specifier|public
name|boolean
name|hasResourceType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**          *<code>required .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri.ResourceType resource_type = 1;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|ResourceType
name|getResourceType
parameter_list|()
block|{
return|return
name|resourceType_
return|;
block|}
comment|/**          *<code>required .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri.ResourceType resource_type = 1;</code>          */
specifier|public
name|Builder
name|setResourceType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|ResourceType
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|resourceType_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>required .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri.ResourceType resource_type = 1;</code>          */
specifier|public
name|Builder
name|clearResourceType
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|resourceType_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|ResourceType
operator|.
name|JAR
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// required string uri = 2;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|uri_
init|=
literal|""
decl_stmt|;
comment|/**          *<code>required string uri = 2;</code>          */
specifier|public
name|boolean
name|hasUri
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**          *<code>required string uri = 2;</code>          */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getUri
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|uri_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|uri_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**          *<code>required string uri = 2;</code>          */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getUriBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|uri_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|uri_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**          *<code>required string uri = 2;</code>          */
specifier|public
name|Builder
name|setUri
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|uri_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>required string uri = 2;</code>          */
specifier|public
name|Builder
name|clearUri
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|uri_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getUri
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>required string uri = 2;</code>          */
specifier|public
name|Builder
name|setUriBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|uri_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|ResourceUri
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri)
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional string class_name = 1;
specifier|public
specifier|static
specifier|final
name|int
name|CLASS_NAME_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|className_
decl_stmt|;
comment|/**      *<code>optional string class_name = 1;</code>      */
specifier|public
name|boolean
name|hasClassName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>optional string class_name = 1;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getClassName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|className_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|className_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string class_name = 1;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getClassNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|className_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|className_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional string owner_name = 2;
specifier|public
specifier|static
specifier|final
name|int
name|OWNER_NAME_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|ownerName_
decl_stmt|;
comment|/**      *<code>optional string owner_name = 2;</code>      */
specifier|public
name|boolean
name|hasOwnerName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>optional string owner_name = 2;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getOwnerName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|ownerName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|ownerName_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string owner_name = 2;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getOwnerNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|ownerName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|ownerName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType owner_type = 3;
specifier|public
specifier|static
specifier|final
name|int
name|OWNER_TYPE_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|ownerType_
decl_stmt|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType owner_type = 3;</code>      */
specifier|public
name|boolean
name|hasOwnerType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType owner_type = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|getOwnerType
parameter_list|()
block|{
return|return
name|ownerType_
return|;
block|}
comment|// optional sint64 create_time = 4;
specifier|public
specifier|static
specifier|final
name|int
name|CREATE_TIME_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|long
name|createTime_
decl_stmt|;
comment|/**      *<code>optional sint64 create_time = 4;</code>      */
specifier|public
name|boolean
name|hasCreateTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**      *<code>optional sint64 create_time = 4;</code>      */
specifier|public
name|long
name|getCreateTime
parameter_list|()
block|{
return|return
name|createTime_
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Function.FunctionType function_type = 5;
specifier|public
specifier|static
specifier|final
name|int
name|FUNCTION_TYPE_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|FunctionType
name|functionType_
decl_stmt|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Function.FunctionType function_type = 5;</code>      */
specifier|public
name|boolean
name|hasFunctionType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Function.FunctionType function_type = 5;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|FunctionType
name|getFunctionType
parameter_list|()
block|{
return|return
name|functionType_
return|;
block|}
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;
specifier|public
specifier|static
specifier|final
name|int
name|RESOURCE_URIS_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
argument_list|>
name|resourceUris_
decl_stmt|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
argument_list|>
name|getResourceUrisList
parameter_list|()
block|{
return|return
name|resourceUris_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUriOrBuilder
argument_list|>
name|getResourceUrisOrBuilderList
parameter_list|()
block|{
return|return
name|resourceUris_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>      */
specifier|public
name|int
name|getResourceUrisCount
parameter_list|()
block|{
return|return
name|resourceUris_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
name|getResourceUris
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|resourceUris_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUriOrBuilder
name|getResourceUrisOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|resourceUris_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|className_
operator|=
literal|""
expr_stmt|;
name|ownerName_
operator|=
literal|""
expr_stmt|;
name|ownerType_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|USER
expr_stmt|;
name|createTime_
operator|=
literal|0L
expr_stmt|;
name|functionType_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|FunctionType
operator|.
name|JAVA
expr_stmt|;
name|resourceUris_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getResourceUrisCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getResourceUris
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|getClassNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|2
argument_list|,
name|getOwnerNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeEnum
argument_list|(
literal|3
argument_list|,
name|ownerType_
operator|.
name|getNumber
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|output
operator|.
name|writeSInt64
argument_list|(
literal|4
argument_list|,
name|createTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|output
operator|.
name|writeEnum
argument_list|(
literal|5
argument_list|,
name|functionType_
operator|.
name|getNumber
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|resourceUris_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|6
argument_list|,
name|resourceUris_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|1
argument_list|,
name|getClassNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|2
argument_list|,
name|getOwnerNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeEnumSize
argument_list|(
literal|3
argument_list|,
name|ownerType_
operator|.
name|getNumber
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeSInt64Size
argument_list|(
literal|4
argument_list|,
name|createTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeEnumSize
argument_list|(
literal|5
argument_list|,
name|functionType_
operator|.
name|getNumber
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|resourceUris_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|6
argument_list|,
name|resourceUris_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.Function}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FunctionOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Function_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Function_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.Function.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getResourceUrisFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|className_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|ownerName_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|ownerType_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|USER
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|createTime_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|functionType_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|FunctionType
operator|.
name|JAVA
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
if|if
condition|(
name|resourceUrisBuilder_
operator|==
literal|null
condition|)
block|{
name|resourceUris_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
block|}
else|else
block|{
name|resourceUrisBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Function_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|className_
operator|=
name|className_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|ownerName_
operator|=
name|ownerName_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|ownerType_
operator|=
name|ownerType_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|result
operator|.
name|createTime_
operator|=
name|createTime_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
name|result
operator|.
name|functionType_
operator|=
name|functionType_
expr_stmt|;
if|if
condition|(
name|resourceUrisBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|resourceUris_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|resourceUris_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|resourceUris_
operator|=
name|resourceUris_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|resourceUris_
operator|=
name|resourceUrisBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasClassName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|className_
operator|=
name|other
operator|.
name|className_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasOwnerName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|ownerName_
operator|=
name|other
operator|.
name|ownerName_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasOwnerType
argument_list|()
condition|)
block|{
name|setOwnerType
argument_list|(
name|other
operator|.
name|getOwnerType
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasCreateTime
argument_list|()
condition|)
block|{
name|setCreateTime
argument_list|(
name|other
operator|.
name|getCreateTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasFunctionType
argument_list|()
condition|)
block|{
name|setFunctionType
argument_list|(
name|other
operator|.
name|getFunctionType
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|resourceUrisBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|resourceUris_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|resourceUris_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|resourceUris_
operator|=
name|other
operator|.
name|resourceUris_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureResourceUrisIsMutable
argument_list|()
expr_stmt|;
name|resourceUris_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|resourceUris_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|resourceUris_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|resourceUrisBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|resourceUrisBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|resourceUrisBuilder_
operator|=
literal|null
expr_stmt|;
name|resourceUris_
operator|=
name|other
operator|.
name|resourceUris_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|resourceUrisBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getResourceUrisFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|resourceUrisBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|resourceUris_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getResourceUrisCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getResourceUris
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional string class_name = 1;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|className_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string class_name = 1;</code>        */
specifier|public
name|boolean
name|hasClassName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional string class_name = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getClassName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|className_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|className_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string class_name = 1;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getClassNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|className_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|className_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string class_name = 1;</code>        */
specifier|public
name|Builder
name|setClassName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|className_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string class_name = 1;</code>        */
specifier|public
name|Builder
name|clearClassName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|className_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getClassName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string class_name = 1;</code>        */
specifier|public
name|Builder
name|setClassNameBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|className_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional string owner_name = 2;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|ownerName_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string owner_name = 2;</code>        */
specifier|public
name|boolean
name|hasOwnerName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>optional string owner_name = 2;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getOwnerName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|ownerName_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|ownerName_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string owner_name = 2;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getOwnerNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|ownerName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|ownerName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string owner_name = 2;</code>        */
specifier|public
name|Builder
name|setOwnerName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|ownerName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string owner_name = 2;</code>        */
specifier|public
name|Builder
name|clearOwnerName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|ownerName_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getOwnerName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string owner_name = 2;</code>        */
specifier|public
name|Builder
name|setOwnerNameBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|ownerName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType owner_type = 3;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|ownerType_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|USER
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType owner_type = 3;</code>        */
specifier|public
name|boolean
name|hasOwnerType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType owner_type = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|getOwnerType
parameter_list|()
block|{
return|return
name|ownerType_
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType owner_type = 3;</code>        */
specifier|public
name|Builder
name|setOwnerType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|ownerType_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType owner_type = 3;</code>        */
specifier|public
name|Builder
name|clearOwnerType
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|ownerType_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|USER
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional sint64 create_time = 4;
specifier|private
name|long
name|createTime_
decl_stmt|;
comment|/**        *<code>optional sint64 create_time = 4;</code>        */
specifier|public
name|boolean
name|hasCreateTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**        *<code>optional sint64 create_time = 4;</code>        */
specifier|public
name|long
name|getCreateTime
parameter_list|()
block|{
return|return
name|createTime_
return|;
block|}
comment|/**        *<code>optional sint64 create_time = 4;</code>        */
specifier|public
name|Builder
name|setCreateTime
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|createTime_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional sint64 create_time = 4;</code>        */
specifier|public
name|Builder
name|clearCreateTime
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|createTime_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Function.FunctionType function_type = 5;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|FunctionType
name|functionType_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|FunctionType
operator|.
name|JAVA
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Function.FunctionType function_type = 5;</code>        */
specifier|public
name|boolean
name|hasFunctionType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Function.FunctionType function_type = 5;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|FunctionType
name|getFunctionType
parameter_list|()
block|{
return|return
name|functionType_
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Function.FunctionType function_type = 5;</code>        */
specifier|public
name|Builder
name|setFunctionType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|FunctionType
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|functionType_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Function.FunctionType function_type = 5;</code>        */
specifier|public
name|Builder
name|clearFunctionType
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|functionType_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|FunctionType
operator|.
name|JAVA
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
argument_list|>
name|resourceUris_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureResourceUrisIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|resourceUris_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
argument_list|>
argument_list|(
name|resourceUris_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUriOrBuilder
argument_list|>
name|resourceUrisBuilder_
decl_stmt|;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
argument_list|>
name|getResourceUrisList
parameter_list|()
block|{
if|if
condition|(
name|resourceUrisBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|resourceUris_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|resourceUrisBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>        */
specifier|public
name|int
name|getResourceUrisCount
parameter_list|()
block|{
if|if
condition|(
name|resourceUrisBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|resourceUris_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|resourceUrisBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
name|getResourceUris
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|resourceUrisBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|resourceUris_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|resourceUrisBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>        */
specifier|public
name|Builder
name|setResourceUris
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
name|value
parameter_list|)
block|{
if|if
condition|(
name|resourceUrisBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureResourceUrisIsMutable
argument_list|()
expr_stmt|;
name|resourceUris_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|resourceUrisBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>        */
specifier|public
name|Builder
name|setResourceUris
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|resourceUrisBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureResourceUrisIsMutable
argument_list|()
expr_stmt|;
name|resourceUris_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|resourceUrisBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>        */
specifier|public
name|Builder
name|addResourceUris
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
name|value
parameter_list|)
block|{
if|if
condition|(
name|resourceUrisBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureResourceUrisIsMutable
argument_list|()
expr_stmt|;
name|resourceUris_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|resourceUrisBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>        */
specifier|public
name|Builder
name|addResourceUris
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
name|value
parameter_list|)
block|{
if|if
condition|(
name|resourceUrisBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureResourceUrisIsMutable
argument_list|()
expr_stmt|;
name|resourceUris_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|resourceUrisBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>        */
specifier|public
name|Builder
name|addResourceUris
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|resourceUrisBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureResourceUrisIsMutable
argument_list|()
expr_stmt|;
name|resourceUris_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|resourceUrisBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>        */
specifier|public
name|Builder
name|addResourceUris
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|resourceUrisBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureResourceUrisIsMutable
argument_list|()
expr_stmt|;
name|resourceUris_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|resourceUrisBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>        */
specifier|public
name|Builder
name|addAllResourceUris
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|resourceUrisBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureResourceUrisIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|resourceUris_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|resourceUrisBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>        */
specifier|public
name|Builder
name|clearResourceUris
parameter_list|()
block|{
if|if
condition|(
name|resourceUrisBuilder_
operator|==
literal|null
condition|)
block|{
name|resourceUris_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|resourceUrisBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>        */
specifier|public
name|Builder
name|removeResourceUris
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|resourceUrisBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureResourceUrisIsMutable
argument_list|()
expr_stmt|;
name|resourceUris_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|resourceUrisBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|Builder
name|getResourceUrisBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getResourceUrisFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUriOrBuilder
name|getResourceUrisOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|resourceUrisBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|resourceUris_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|resourceUrisBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUriOrBuilder
argument_list|>
name|getResourceUrisOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|resourceUrisBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|resourceUrisBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|resourceUris_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|Builder
name|addResourceUrisBuilder
parameter_list|()
block|{
return|return
name|getResourceUrisFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|Builder
name|addResourceUrisBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getResourceUrisFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.Function.ResourceUri resource_uris = 6;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|Builder
argument_list|>
name|getResourceUrisBuilderList
parameter_list|()
block|{
return|return
name|getResourceUrisFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUriOrBuilder
argument_list|>
name|getResourceUrisFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|resourceUrisBuilder_
operator|==
literal|null
condition|)
block|{
name|resourceUrisBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUri
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Function
operator|.
name|ResourceUriOrBuilder
argument_list|>
argument_list|(
name|resourceUris_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|resourceUris_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|resourceUrisBuilder_
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.Function)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|Function
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.Function)
block|}
specifier|public
interface|interface
name|MasterKeyOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required string master_key = 1;
comment|/**      *<code>required string master_key = 1;</code>      */
name|boolean
name|hasMasterKey
parameter_list|()
function_decl|;
comment|/**      *<code>required string master_key = 1;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getMasterKey
parameter_list|()
function_decl|;
comment|/**      *<code>required string master_key = 1;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getMasterKeyBytes
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.MasterKey}    */
specifier|public
specifier|static
specifier|final
class|class
name|MasterKey
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|MasterKeyOrBuilder
block|{
comment|// Use MasterKey.newBuilder() to construct.
specifier|private
name|MasterKey
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|MasterKey
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|MasterKey
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|MasterKey
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|MasterKey
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|MasterKey
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|masterKey_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_MasterKey_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_MasterKey_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|MasterKey
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|MasterKey
argument_list|>
argument_list|()
block|{
specifier|public
name|MasterKey
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|MasterKey
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|MasterKey
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string master_key = 1;
specifier|public
specifier|static
specifier|final
name|int
name|MASTER_KEY_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|masterKey_
decl_stmt|;
comment|/**      *<code>required string master_key = 1;</code>      */
specifier|public
name|boolean
name|hasMasterKey
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>required string master_key = 1;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getMasterKey
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|masterKey_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|masterKey_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>required string master_key = 1;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getMasterKeyBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|masterKey_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|masterKey_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|masterKey_
operator|=
literal|""
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasMasterKey
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|getMasterKeyBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|1
argument_list|,
name|getMasterKeyBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.MasterKey}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKeyOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_MasterKey_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_MasterKey_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.MasterKey.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{         }
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|masterKey_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_MasterKey_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|masterKey_
operator|=
name|masterKey_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasMasterKey
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|masterKey_
operator|=
name|other
operator|.
name|masterKey_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasMasterKey
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|MasterKey
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string master_key = 1;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|masterKey_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>required string master_key = 1;</code>        */
specifier|public
name|boolean
name|hasMasterKey
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>required string master_key = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getMasterKey
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|masterKey_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|masterKey_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string master_key = 1;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getMasterKeyBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|masterKey_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|masterKey_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string master_key = 1;</code>        */
specifier|public
name|Builder
name|setMasterKey
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|masterKey_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string master_key = 1;</code>        */
specifier|public
name|Builder
name|clearMasterKey
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|masterKey_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getMasterKey
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string master_key = 1;</code>        */
specifier|public
name|Builder
name|setMasterKeyBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|masterKey_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.MasterKey)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|MasterKey
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.MasterKey)
block|}
specifier|public
interface|interface
name|ParameterEntryOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required string key = 1;
comment|/**      *<code>required string key = 1;</code>      */
name|boolean
name|hasKey
parameter_list|()
function_decl|;
comment|/**      *<code>required string key = 1;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getKey
parameter_list|()
function_decl|;
comment|/**      *<code>required string key = 1;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getKeyBytes
parameter_list|()
function_decl|;
comment|// required string value = 2;
comment|/**      *<code>required string value = 2;</code>      */
name|boolean
name|hasValue
parameter_list|()
function_decl|;
comment|/**      *<code>required string value = 2;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getValue
parameter_list|()
function_decl|;
comment|/**      *<code>required string value = 2;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getValueBytes
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.ParameterEntry}    */
specifier|public
specifier|static
specifier|final
class|class
name|ParameterEntry
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|ParameterEntryOrBuilder
block|{
comment|// Use ParameterEntry.newBuilder() to construct.
specifier|private
name|ParameterEntry
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|ParameterEntry
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|ParameterEntry
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|ParameterEntry
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|ParameterEntry
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|ParameterEntry
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|key_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|value_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ParameterEntry_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ParameterEntry_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ParameterEntry
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|ParameterEntry
argument_list|>
argument_list|()
block|{
specifier|public
name|ParameterEntry
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|ParameterEntry
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ParameterEntry
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string key = 1;
specifier|public
specifier|static
specifier|final
name|int
name|KEY_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|key_
decl_stmt|;
comment|/**      *<code>required string key = 1;</code>      */
specifier|public
name|boolean
name|hasKey
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>required string key = 1;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getKey
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|key_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|key_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>required string key = 1;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getKeyBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|key_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|key_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// required string value = 2;
specifier|public
specifier|static
specifier|final
name|int
name|VALUE_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|value_
decl_stmt|;
comment|/**      *<code>required string value = 2;</code>      */
specifier|public
name|boolean
name|hasValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>required string value = 2;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getValue
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|value_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|value_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>required string value = 2;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getValueBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|value_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|value_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|key_
operator|=
literal|""
expr_stmt|;
name|value_
operator|=
literal|""
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasKey
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasValue
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|getKeyBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|2
argument_list|,
name|getValueBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|1
argument_list|,
name|getKeyBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|2
argument_list|,
name|getValueBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.ParameterEntry}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntryOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ParameterEntry_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ParameterEntry_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.ParameterEntry.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{         }
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|key_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|value_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ParameterEntry_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|key_
operator|=
name|key_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|value_
operator|=
name|value_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasKey
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|key_
operator|=
name|other
operator|.
name|key_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasValue
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|value_
operator|=
name|other
operator|.
name|value_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasKey
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasValue
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string key = 1;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|key_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>required string key = 1;</code>        */
specifier|public
name|boolean
name|hasKey
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>required string key = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getKey
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|key_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|key_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string key = 1;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getKeyBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|key_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|key_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string key = 1;</code>        */
specifier|public
name|Builder
name|setKey
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|key_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string key = 1;</code>        */
specifier|public
name|Builder
name|clearKey
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|key_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getKey
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string key = 1;</code>        */
specifier|public
name|Builder
name|setKeyBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|key_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// required string value = 2;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|value_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>required string value = 2;</code>        */
specifier|public
name|boolean
name|hasValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>required string value = 2;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getValue
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|value_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|value_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string value = 2;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getValueBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|value_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|value_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string value = 2;</code>        */
specifier|public
name|Builder
name|setValue
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|value_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string value = 2;</code>        */
specifier|public
name|Builder
name|clearValue
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|value_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getValue
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string value = 2;</code>        */
specifier|public
name|Builder
name|setValueBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|value_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.ParameterEntry)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|ParameterEntry
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.ParameterEntry)
block|}
specifier|public
interface|interface
name|ParametersOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
argument_list|>
name|getParameterList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
name|getParameter
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>      */
name|int
name|getParameterCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntryOrBuilder
argument_list|>
name|getParameterOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntryOrBuilder
name|getParameterOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.Parameters}    */
specifier|public
specifier|static
specifier|final
class|class
name|Parameters
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|ParametersOrBuilder
block|{
comment|// Use Parameters.newBuilder() to construct.
specifier|private
name|Parameters
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Parameters
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|Parameters
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|Parameters
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|Parameters
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|Parameters
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|parameter_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|parameter_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|parameter_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|parameter_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Parameters_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Parameters_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Parameters
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Parameters
argument_list|>
argument_list|()
block|{
specifier|public
name|Parameters
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Parameters
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Parameters
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;
specifier|public
specifier|static
specifier|final
name|int
name|PARAMETER_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
argument_list|>
name|parameter_
decl_stmt|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
argument_list|>
name|getParameterList
parameter_list|()
block|{
return|return
name|parameter_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntryOrBuilder
argument_list|>
name|getParameterOrBuilderList
parameter_list|()
block|{
return|return
name|parameter_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>      */
specifier|public
name|int
name|getParameterCount
parameter_list|()
block|{
return|return
name|parameter_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
name|getParameter
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|parameter_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntryOrBuilder
name|getParameterOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|parameter_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|parameter_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getParameterCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getParameter
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|parameter_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|parameter_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|parameter_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|parameter_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.Parameters}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Parameters_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Parameters_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.Parameters.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getParameterFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
name|parameter_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|parameterBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Parameters_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|parameter_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|parameter_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|parameter_
operator|=
name|parameter_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|parameter_
operator|=
name|parameterBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|parameter_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|parameter_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|parameter_
operator|=
name|other
operator|.
name|parameter_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureParameterIsMutable
argument_list|()
expr_stmt|;
name|parameter_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|parameter_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|parameter_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|parameterBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|parameterBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|parameterBuilder_
operator|=
literal|null
expr_stmt|;
name|parameter_
operator|=
name|other
operator|.
name|parameter_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|parameterBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getParameterFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|parameterBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|parameter_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getParameterCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getParameter
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
argument_list|>
name|parameter_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureParameterIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|parameter_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
argument_list|>
argument_list|(
name|parameter_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntryOrBuilder
argument_list|>
name|parameterBuilder_
decl_stmt|;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
argument_list|>
name|getParameterList
parameter_list|()
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|parameter_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|parameterBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>        */
specifier|public
name|int
name|getParameterCount
parameter_list|()
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|parameter_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|parameterBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
name|getParameter
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|parameter_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|parameterBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>        */
specifier|public
name|Builder
name|setParameter
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
name|value
parameter_list|)
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureParameterIsMutable
argument_list|()
expr_stmt|;
name|parameter_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parameterBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>        */
specifier|public
name|Builder
name|setParameter
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureParameterIsMutable
argument_list|()
expr_stmt|;
name|parameter_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parameterBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>        */
specifier|public
name|Builder
name|addParameter
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
name|value
parameter_list|)
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureParameterIsMutable
argument_list|()
expr_stmt|;
name|parameter_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parameterBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>        */
specifier|public
name|Builder
name|addParameter
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
name|value
parameter_list|)
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureParameterIsMutable
argument_list|()
expr_stmt|;
name|parameter_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parameterBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>        */
specifier|public
name|Builder
name|addParameter
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureParameterIsMutable
argument_list|()
expr_stmt|;
name|parameter_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parameterBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>        */
specifier|public
name|Builder
name|addParameter
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureParameterIsMutable
argument_list|()
expr_stmt|;
name|parameter_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parameterBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>        */
specifier|public
name|Builder
name|addAllParameter
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureParameterIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|parameter_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parameterBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>        */
specifier|public
name|Builder
name|clearParameter
parameter_list|()
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
name|parameter_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parameterBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>        */
specifier|public
name|Builder
name|removeParameter
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureParameterIsMutable
argument_list|()
expr_stmt|;
name|parameter_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parameterBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
operator|.
name|Builder
name|getParameterBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getParameterFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntryOrBuilder
name|getParameterOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|parameter_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|parameterBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntryOrBuilder
argument_list|>
name|getParameterOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|parameterBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|parameterBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|parameter_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
operator|.
name|Builder
name|addParameterBuilder
parameter_list|()
block|{
return|return
name|getParameterFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
operator|.
name|Builder
name|addParameterBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getParameterFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.ParameterEntry parameter = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
operator|.
name|Builder
argument_list|>
name|getParameterBuilderList
parameter_list|()
block|{
return|return
name|getParameterFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntryOrBuilder
argument_list|>
name|getParameterFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|parameterBuilder_
operator|==
literal|null
condition|)
block|{
name|parameterBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntry
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParameterEntryOrBuilder
argument_list|>
argument_list|(
name|parameter_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|parameter_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|parameterBuilder_
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.Parameters)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|Parameters
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.Parameters)
block|}
specifier|public
interface|interface
name|PartitionOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// optional int64 create_time = 1;
comment|/**      *<code>optional int64 create_time = 1;</code>      */
name|boolean
name|hasCreateTime
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 create_time = 1;</code>      */
name|long
name|getCreateTime
parameter_list|()
function_decl|;
comment|// optional int64 last_access_time = 2;
comment|/**      *<code>optional int64 last_access_time = 2;</code>      */
name|boolean
name|hasLastAccessTime
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 last_access_time = 2;</code>      */
name|long
name|getLastAccessTime
parameter_list|()
function_decl|;
comment|// optional string location = 3;
comment|/**      *<code>optional string location = 3;</code>      */
name|boolean
name|hasLocation
parameter_list|()
function_decl|;
comment|/**      *<code>optional string location = 3;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getLocation
parameter_list|()
function_decl|;
comment|/**      *<code>optional string location = 3;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getLocationBytes
parameter_list|()
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 4;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 4;</code>      *      *<pre>      * storage descriptor parameters      *</pre>      */
name|boolean
name|hasSdParameters
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 4;</code>      *      *<pre>      * storage descriptor parameters      *</pre>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getSdParameters
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 4;</code>      *      *<pre>      * storage descriptor parameters      *</pre>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
name|getSdParametersOrBuilder
parameter_list|()
function_decl|;
comment|// required bytes sd_hash = 5;
comment|/**      *<code>required bytes sd_hash = 5;</code>      */
name|boolean
name|hasSdHash
parameter_list|()
function_decl|;
comment|/**      *<code>required bytes sd_hash = 5;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSdHash
parameter_list|()
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 6;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 6;</code>      *      *<pre>      * partition parameters      *</pre>      */
name|boolean
name|hasParameters
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 6;</code>      *      *<pre>      * partition parameters      *</pre>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getParameters
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 6;</code>      *      *<pre>      * partition parameters      *</pre>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
name|getParametersOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.Partition}    */
specifier|public
specifier|static
specifier|final
class|class
name|Partition
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|PartitionOrBuilder
block|{
comment|// Use Partition.newBuilder() to construct.
specifier|private
name|Partition
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Partition
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|Partition
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|Partition
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|Partition
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|Partition
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|8
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|createTime_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|lastAccessTime_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|location_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|34
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|sdParameters_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|sdParameters_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|sdParameters_
argument_list|)
expr_stmt|;
name|sdParameters_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
break|break;
block|}
case|case
literal|42
case|:
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|sdHash_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|50
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|parameters_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|parameters_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|parameters_
argument_list|)
expr_stmt|;
name|parameters_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Partition_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Partition_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Partition
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Partition
argument_list|>
argument_list|()
block|{
specifier|public
name|Partition
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Partition
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Partition
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional int64 create_time = 1;
specifier|public
specifier|static
specifier|final
name|int
name|CREATE_TIME_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|long
name|createTime_
decl_stmt|;
comment|/**      *<code>optional int64 create_time = 1;</code>      */
specifier|public
name|boolean
name|hasCreateTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>optional int64 create_time = 1;</code>      */
specifier|public
name|long
name|getCreateTime
parameter_list|()
block|{
return|return
name|createTime_
return|;
block|}
comment|// optional int64 last_access_time = 2;
specifier|public
specifier|static
specifier|final
name|int
name|LAST_ACCESS_TIME_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|long
name|lastAccessTime_
decl_stmt|;
comment|/**      *<code>optional int64 last_access_time = 2;</code>      */
specifier|public
name|boolean
name|hasLastAccessTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>optional int64 last_access_time = 2;</code>      */
specifier|public
name|long
name|getLastAccessTime
parameter_list|()
block|{
return|return
name|lastAccessTime_
return|;
block|}
comment|// optional string location = 3;
specifier|public
specifier|static
specifier|final
name|int
name|LOCATION_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|location_
decl_stmt|;
comment|/**      *<code>optional string location = 3;</code>      */
specifier|public
name|boolean
name|hasLocation
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<code>optional string location = 3;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getLocation
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|location_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|location_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string location = 3;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getLocationBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|location_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|location_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 4;
specifier|public
specifier|static
specifier|final
name|int
name|SD_PARAMETERS_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|sdParameters_
decl_stmt|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 4;</code>      *      *<pre>      * storage descriptor parameters      *</pre>      */
specifier|public
name|boolean
name|hasSdParameters
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 4;</code>      *      *<pre>      * storage descriptor parameters      *</pre>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getSdParameters
parameter_list|()
block|{
return|return
name|sdParameters_
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 4;</code>      *      *<pre>      * storage descriptor parameters      *</pre>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
name|getSdParametersOrBuilder
parameter_list|()
block|{
return|return
name|sdParameters_
return|;
block|}
comment|// required bytes sd_hash = 5;
specifier|public
specifier|static
specifier|final
name|int
name|SD_HASH_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|sdHash_
decl_stmt|;
comment|/**      *<code>required bytes sd_hash = 5;</code>      */
specifier|public
name|boolean
name|hasSdHash
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**      *<code>required bytes sd_hash = 5;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSdHash
parameter_list|()
block|{
return|return
name|sdHash_
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 6;
specifier|public
specifier|static
specifier|final
name|int
name|PARAMETERS_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|parameters_
decl_stmt|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 6;</code>      *      *<pre>      * partition parameters      *</pre>      */
specifier|public
name|boolean
name|hasParameters
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 6;</code>      *      *<pre>      * partition parameters      *</pre>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getParameters
parameter_list|()
block|{
return|return
name|parameters_
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 6;</code>      *      *<pre>      * partition parameters      *</pre>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
name|getParametersOrBuilder
parameter_list|()
block|{
return|return
name|parameters_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|createTime_
operator|=
literal|0L
expr_stmt|;
name|lastAccessTime_
operator|=
literal|0L
expr_stmt|;
name|location_
operator|=
literal|""
expr_stmt|;
name|sdParameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|sdHash_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
expr_stmt|;
name|parameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasSdHash
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasSdParameters
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getSdParameters
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasParameters
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getParameters
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|1
argument_list|,
name|createTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|2
argument_list|,
name|lastAccessTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|3
argument_list|,
name|getLocationBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|4
argument_list|,
name|sdParameters_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|5
argument_list|,
name|sdHash_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|6
argument_list|,
name|parameters_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|1
argument_list|,
name|createTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|2
argument_list|,
name|lastAccessTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|3
argument_list|,
name|getLocationBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|4
argument_list|,
name|sdParameters_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|5
argument_list|,
name|sdHash_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|6
argument_list|,
name|parameters_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.Partition}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Partition_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Partition_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.Partition.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getSdParametersFieldBuilder
argument_list|()
expr_stmt|;
name|getParametersFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|createTime_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|lastAccessTime_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|location_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
if|if
condition|(
name|sdParametersBuilder_
operator|==
literal|null
condition|)
block|{
name|sdParameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sdParametersBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|sdHash_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|parameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Partition_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|createTime_
operator|=
name|createTime_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|lastAccessTime_
operator|=
name|lastAccessTime_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|location_
operator|=
name|location_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
if|if
condition|(
name|sdParametersBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|sdParameters_
operator|=
name|sdParameters_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|sdParameters_
operator|=
name|sdParametersBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
name|result
operator|.
name|sdHash_
operator|=
name|sdHash_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|parameters_
operator|=
name|parameters_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|parameters_
operator|=
name|parametersBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasCreateTime
argument_list|()
condition|)
block|{
name|setCreateTime
argument_list|(
name|other
operator|.
name|getCreateTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasLastAccessTime
argument_list|()
condition|)
block|{
name|setLastAccessTime
argument_list|(
name|other
operator|.
name|getLastAccessTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasLocation
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|location_
operator|=
name|other
operator|.
name|location_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasSdParameters
argument_list|()
condition|)
block|{
name|mergeSdParameters
argument_list|(
name|other
operator|.
name|getSdParameters
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasSdHash
argument_list|()
condition|)
block|{
name|setSdHash
argument_list|(
name|other
operator|.
name|getSdHash
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasParameters
argument_list|()
condition|)
block|{
name|mergeParameters
argument_list|(
name|other
operator|.
name|getParameters
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasSdHash
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasSdParameters
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getSdParameters
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasParameters
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getParameters
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Partition
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional int64 create_time = 1;
specifier|private
name|long
name|createTime_
decl_stmt|;
comment|/**        *<code>optional int64 create_time = 1;</code>        */
specifier|public
name|boolean
name|hasCreateTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional int64 create_time = 1;</code>        */
specifier|public
name|long
name|getCreateTime
parameter_list|()
block|{
return|return
name|createTime_
return|;
block|}
comment|/**        *<code>optional int64 create_time = 1;</code>        */
specifier|public
name|Builder
name|setCreateTime
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|createTime_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int64 create_time = 1;</code>        */
specifier|public
name|Builder
name|clearCreateTime
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|createTime_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional int64 last_access_time = 2;
specifier|private
name|long
name|lastAccessTime_
decl_stmt|;
comment|/**        *<code>optional int64 last_access_time = 2;</code>        */
specifier|public
name|boolean
name|hasLastAccessTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>optional int64 last_access_time = 2;</code>        */
specifier|public
name|long
name|getLastAccessTime
parameter_list|()
block|{
return|return
name|lastAccessTime_
return|;
block|}
comment|/**        *<code>optional int64 last_access_time = 2;</code>        */
specifier|public
name|Builder
name|setLastAccessTime
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|lastAccessTime_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int64 last_access_time = 2;</code>        */
specifier|public
name|Builder
name|clearLastAccessTime
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|lastAccessTime_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional string location = 3;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|location_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string location = 3;</code>        */
specifier|public
name|boolean
name|hasLocation
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>optional string location = 3;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getLocation
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|location_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|location_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string location = 3;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getLocationBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|location_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|location_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string location = 3;</code>        */
specifier|public
name|Builder
name|setLocation
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|location_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string location = 3;</code>        */
specifier|public
name|Builder
name|clearLocation
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|location_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getLocation
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string location = 3;</code>        */
specifier|public
name|Builder
name|setLocationBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|location_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 4;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|sdParameters_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
argument_list|>
name|sdParametersBuilder_
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 4;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|public
name|boolean
name|hasSdParameters
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 4;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getSdParameters
parameter_list|()
block|{
if|if
condition|(
name|sdParametersBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|sdParameters_
return|;
block|}
else|else
block|{
return|return
name|sdParametersBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 4;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|public
name|Builder
name|setSdParameters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|value
parameter_list|)
block|{
if|if
condition|(
name|sdParametersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|sdParameters_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sdParametersBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 4;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|public
name|Builder
name|setSdParameters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|sdParametersBuilder_
operator|==
literal|null
condition|)
block|{
name|sdParameters_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sdParametersBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 4;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|public
name|Builder
name|mergeSdParameters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|value
parameter_list|)
block|{
if|if
condition|(
name|sdParametersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
operator|&&
name|sdParameters_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|sdParameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|newBuilder
argument_list|(
name|sdParameters_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sdParameters_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sdParametersBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 4;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|public
name|Builder
name|clearSdParameters
parameter_list|()
block|{
if|if
condition|(
name|sdParametersBuilder_
operator|==
literal|null
condition|)
block|{
name|sdParameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sdParametersBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 4;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
name|getSdParametersBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getSdParametersFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 4;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
name|getSdParametersOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|sdParametersBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|sdParametersBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|sdParameters_
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 4;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
argument_list|>
name|getSdParametersFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|sdParametersBuilder_
operator|==
literal|null
condition|)
block|{
name|sdParametersBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
argument_list|>
argument_list|(
name|sdParameters_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|sdParameters_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|sdParametersBuilder_
return|;
block|}
comment|// required bytes sd_hash = 5;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|sdHash_
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
decl_stmt|;
comment|/**        *<code>required bytes sd_hash = 5;</code>        */
specifier|public
name|boolean
name|hasSdHash
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**        *<code>required bytes sd_hash = 5;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSdHash
parameter_list|()
block|{
return|return
name|sdHash_
return|;
block|}
comment|/**        *<code>required bytes sd_hash = 5;</code>        */
specifier|public
name|Builder
name|setSdHash
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|sdHash_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required bytes sd_hash = 5;</code>        */
specifier|public
name|Builder
name|clearSdHash
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|sdHash_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getSdHash
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 6;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|parameters_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
argument_list|>
name|parametersBuilder_
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 6;</code>        *        *<pre>        * partition parameters        *</pre>        */
specifier|public
name|boolean
name|hasParameters
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 6;</code>        *        *<pre>        * partition parameters        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getParameters
parameter_list|()
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|parameters_
return|;
block|}
else|else
block|{
return|return
name|parametersBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 6;</code>        *        *<pre>        * partition parameters        *</pre>        */
specifier|public
name|Builder
name|setParameters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|value
parameter_list|)
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|parameters_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 6;</code>        *        *<pre>        * partition parameters        *</pre>        */
specifier|public
name|Builder
name|setParameters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|parameters_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 6;</code>        *        *<pre>        * partition parameters        *</pre>        */
specifier|public
name|Builder
name|mergeParameters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|value
parameter_list|)
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
operator|&&
name|parameters_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|parameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|newBuilder
argument_list|(
name|parameters_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parameters_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 6;</code>        *        *<pre>        * partition parameters        *</pre>        */
specifier|public
name|Builder
name|clearParameters
parameter_list|()
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|parameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 6;</code>        *        *<pre>        * partition parameters        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
name|getParametersBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getParametersFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 6;</code>        *        *<pre>        * partition parameters        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
name|getParametersOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|parametersBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|parametersBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|parameters_
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 6;</code>        *        *<pre>        * partition parameters        *</pre>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
argument_list|>
name|getParametersFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|parametersBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
argument_list|>
argument_list|(
name|parameters_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|parameters_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|parametersBuilder_
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.Partition)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|Partition
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.Partition)
block|}
specifier|public
interface|interface
name|PrincipalPrivilegeSetEntryOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required string principal_name = 1;
comment|/**      *<code>required string principal_name = 1;</code>      */
name|boolean
name|hasPrincipalName
parameter_list|()
function_decl|;
comment|/**      *<code>required string principal_name = 1;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getPrincipalName
parameter_list|()
function_decl|;
comment|/**      *<code>required string principal_name = 1;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getPrincipalNameBytes
parameter_list|()
function_decl|;
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
argument_list|>
name|getPrivilegesList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
name|getPrivileges
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>      */
name|int
name|getPrivilegesCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfoOrBuilder
argument_list|>
name|getPrivilegesOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfoOrBuilder
name|getPrivilegesOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry}    */
specifier|public
specifier|static
specifier|final
class|class
name|PrincipalPrivilegeSetEntry
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|PrincipalPrivilegeSetEntryOrBuilder
block|{
comment|// Use PrincipalPrivilegeSetEntry.newBuilder() to construct.
specifier|private
name|PrincipalPrivilegeSetEntry
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|PrincipalPrivilegeSetEntry
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|PrincipalPrivilegeSetEntry
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|PrincipalPrivilegeSetEntry
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|PrincipalPrivilegeSetEntry
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|PrincipalPrivilegeSetEntry
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|principalName_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|privileges_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|privileges_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|privileges_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|privileges_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSetEntry_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSetEntry_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|PrincipalPrivilegeSetEntry
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|PrincipalPrivilegeSetEntry
argument_list|>
argument_list|()
block|{
specifier|public
name|PrincipalPrivilegeSetEntry
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|PrincipalPrivilegeSetEntry
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|PrincipalPrivilegeSetEntry
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string principal_name = 1;
specifier|public
specifier|static
specifier|final
name|int
name|PRINCIPAL_NAME_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|principalName_
decl_stmt|;
comment|/**      *<code>required string principal_name = 1;</code>      */
specifier|public
name|boolean
name|hasPrincipalName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>required string principal_name = 1;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getPrincipalName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|principalName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|principalName_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>required string principal_name = 1;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getPrincipalNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|principalName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|principalName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;
specifier|public
specifier|static
specifier|final
name|int
name|PRIVILEGES_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
argument_list|>
name|privileges_
decl_stmt|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
argument_list|>
name|getPrivilegesList
parameter_list|()
block|{
return|return
name|privileges_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfoOrBuilder
argument_list|>
name|getPrivilegesOrBuilderList
parameter_list|()
block|{
return|return
name|privileges_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>      */
specifier|public
name|int
name|getPrivilegesCount
parameter_list|()
block|{
return|return
name|privileges_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
name|getPrivileges
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|privileges_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfoOrBuilder
name|getPrivilegesOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|privileges_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|principalName_
operator|=
literal|""
expr_stmt|;
name|privileges_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasPrincipalName
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|getPrincipalNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|privileges_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|privileges_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|1
argument_list|,
name|getPrincipalNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|privileges_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|privileges_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntryOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSetEntry_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSetEntry_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.PrincipalPrivilegeSetEntry.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getPrivilegesFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|principalName_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
name|privileges_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|privilegesBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSetEntry_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|principalName_
operator|=
name|principalName_
expr_stmt|;
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|privileges_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|privileges_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|privileges_
operator|=
name|privileges_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|privileges_
operator|=
name|privilegesBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasPrincipalName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|principalName_
operator|=
name|other
operator|.
name|principalName_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|privileges_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|privileges_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|privileges_
operator|=
name|other
operator|.
name|privileges_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensurePrivilegesIsMutable
argument_list|()
expr_stmt|;
name|privileges_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|privileges_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|privileges_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|privilegesBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|privilegesBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|privilegesBuilder_
operator|=
literal|null
expr_stmt|;
name|privileges_
operator|=
name|other
operator|.
name|privileges_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|privilegesBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getPrivilegesFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|privilegesBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|privileges_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasPrincipalName
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string principal_name = 1;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|principalName_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>required string principal_name = 1;</code>        */
specifier|public
name|boolean
name|hasPrincipalName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>required string principal_name = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getPrincipalName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|principalName_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|principalName_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string principal_name = 1;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getPrincipalNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|principalName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|principalName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string principal_name = 1;</code>        */
specifier|public
name|Builder
name|setPrincipalName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|principalName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string principal_name = 1;</code>        */
specifier|public
name|Builder
name|clearPrincipalName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|principalName_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getPrincipalName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string principal_name = 1;</code>        */
specifier|public
name|Builder
name|setPrincipalNameBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|principalName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
argument_list|>
name|privileges_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensurePrivilegesIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|privileges_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
argument_list|>
argument_list|(
name|privileges_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfoOrBuilder
argument_list|>
name|privilegesBuilder_
decl_stmt|;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
argument_list|>
name|getPrivilegesList
parameter_list|()
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|privileges_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|privilegesBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>        */
specifier|public
name|int
name|getPrivilegesCount
parameter_list|()
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|privileges_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|privilegesBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
name|getPrivileges
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|privileges_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|privilegesBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>        */
specifier|public
name|Builder
name|setPrivileges
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
name|value
parameter_list|)
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensurePrivilegesIsMutable
argument_list|()
expr_stmt|;
name|privileges_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|privilegesBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>        */
specifier|public
name|Builder
name|setPrivileges
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
name|ensurePrivilegesIsMutable
argument_list|()
expr_stmt|;
name|privileges_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|privilegesBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>        */
specifier|public
name|Builder
name|addPrivileges
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
name|value
parameter_list|)
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensurePrivilegesIsMutable
argument_list|()
expr_stmt|;
name|privileges_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|privilegesBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>        */
specifier|public
name|Builder
name|addPrivileges
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
name|value
parameter_list|)
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensurePrivilegesIsMutable
argument_list|()
expr_stmt|;
name|privileges_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|privilegesBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>        */
specifier|public
name|Builder
name|addPrivileges
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
name|ensurePrivilegesIsMutable
argument_list|()
expr_stmt|;
name|privileges_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|privilegesBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>        */
specifier|public
name|Builder
name|addPrivileges
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
name|ensurePrivilegesIsMutable
argument_list|()
expr_stmt|;
name|privileges_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|privilegesBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>        */
specifier|public
name|Builder
name|addAllPrivileges
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
name|ensurePrivilegesIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|privileges_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|privilegesBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>        */
specifier|public
name|Builder
name|clearPrivileges
parameter_list|()
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
name|privileges_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|privilegesBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>        */
specifier|public
name|Builder
name|removePrivileges
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
name|ensurePrivilegesIsMutable
argument_list|()
expr_stmt|;
name|privileges_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|privilegesBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
operator|.
name|Builder
name|getPrivilegesBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getPrivilegesFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfoOrBuilder
name|getPrivilegesOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|privileges_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|privilegesBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfoOrBuilder
argument_list|>
name|getPrivilegesOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|privilegesBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|privilegesBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|privileges_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
operator|.
name|Builder
name|addPrivilegesBuilder
parameter_list|()
block|{
return|return
name|getPrivilegesFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
operator|.
name|Builder
name|addPrivilegesBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getPrivilegesFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo privileges = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
operator|.
name|Builder
argument_list|>
name|getPrivilegesBuilderList
parameter_list|()
block|{
return|return
name|getPrivilegesFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfoOrBuilder
argument_list|>
name|getPrivilegesFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
name|privilegesBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfoOrBuilder
argument_list|>
argument_list|(
name|privileges_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|privileges_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|privilegesBuilder_
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|PrincipalPrivilegeSetEntry
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry)
block|}
specifier|public
interface|interface
name|PrincipalPrivilegeSetOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
argument_list|>
name|getUsersList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|getUsers
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>      */
name|int
name|getUsersCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntryOrBuilder
argument_list|>
name|getUsersOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntryOrBuilder
name|getUsersOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
argument_list|>
name|getRolesList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|getRoles
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>      */
name|int
name|getRolesCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntryOrBuilder
argument_list|>
name|getRolesOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntryOrBuilder
name|getRolesOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet}    */
specifier|public
specifier|static
specifier|final
class|class
name|PrincipalPrivilegeSet
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|PrincipalPrivilegeSetOrBuilder
block|{
comment|// Use PrincipalPrivilegeSet.newBuilder() to construct.
specifier|private
name|PrincipalPrivilegeSet
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|PrincipalPrivilegeSet
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|PrincipalPrivilegeSet
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|PrincipalPrivilegeSet
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|PrincipalPrivilegeSet
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|PrincipalPrivilegeSet
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|users_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|users_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|roles_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|roles_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|users_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|users_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|roles_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|roles_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSet_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSet_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|PrincipalPrivilegeSet
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|PrincipalPrivilegeSet
argument_list|>
argument_list|()
block|{
specifier|public
name|PrincipalPrivilegeSet
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|PrincipalPrivilegeSet
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|PrincipalPrivilegeSet
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;
specifier|public
specifier|static
specifier|final
name|int
name|USERS_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
argument_list|>
name|users_
decl_stmt|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
argument_list|>
name|getUsersList
parameter_list|()
block|{
return|return
name|users_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntryOrBuilder
argument_list|>
name|getUsersOrBuilderList
parameter_list|()
block|{
return|return
name|users_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>      */
specifier|public
name|int
name|getUsersCount
parameter_list|()
block|{
return|return
name|users_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|getUsers
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|users_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntryOrBuilder
name|getUsersOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|users_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;
specifier|public
specifier|static
specifier|final
name|int
name|ROLES_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
argument_list|>
name|roles_
decl_stmt|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
argument_list|>
name|getRolesList
parameter_list|()
block|{
return|return
name|roles_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntryOrBuilder
argument_list|>
name|getRolesOrBuilderList
parameter_list|()
block|{
return|return
name|roles_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>      */
specifier|public
name|int
name|getRolesCount
parameter_list|()
block|{
return|return
name|roles_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|getRoles
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|roles_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntryOrBuilder
name|getRolesOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|roles_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|users_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|roles_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getUsersCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getUsers
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getRolesCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getRoles
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|users_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|users_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|roles_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|roles_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|users_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|users_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|roles_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|roles_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSet_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSet_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.PrincipalPrivilegeSet.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getUsersFieldBuilder
argument_list|()
expr_stmt|;
name|getRolesFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|usersBuilder_
operator|==
literal|null
condition|)
block|{
name|users_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|usersBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|rolesBuilder_
operator|==
literal|null
condition|)
block|{
name|roles_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|rolesBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSet_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
if|if
condition|(
name|usersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|users_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|users_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|users_
operator|=
name|users_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|users_
operator|=
name|usersBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|rolesBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|roles_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|roles_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|roles_
operator|=
name|roles_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|roles_
operator|=
name|rolesBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|usersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|users_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|users_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|users_
operator|=
name|other
operator|.
name|users_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureUsersIsMutable
argument_list|()
expr_stmt|;
name|users_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|users_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|users_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|usersBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|usersBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|usersBuilder_
operator|=
literal|null
expr_stmt|;
name|users_
operator|=
name|other
operator|.
name|users_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|usersBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getUsersFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|usersBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|users_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|rolesBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|roles_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|roles_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|roles_
operator|=
name|other
operator|.
name|roles_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureRolesIsMutable
argument_list|()
expr_stmt|;
name|roles_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|roles_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|roles_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|rolesBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|rolesBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|rolesBuilder_
operator|=
literal|null
expr_stmt|;
name|roles_
operator|=
name|other
operator|.
name|roles_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|rolesBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getRolesFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|rolesBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|roles_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getUsersCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getUsers
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getRolesCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getRoles
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
argument_list|>
name|users_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureUsersIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|users_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
argument_list|>
argument_list|(
name|users_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntryOrBuilder
argument_list|>
name|usersBuilder_
decl_stmt|;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
argument_list|>
name|getUsersList
parameter_list|()
block|{
if|if
condition|(
name|usersBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|users_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|usersBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>        */
specifier|public
name|int
name|getUsersCount
parameter_list|()
block|{
if|if
condition|(
name|usersBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|users_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|usersBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|getUsers
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|usersBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|users_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|usersBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>        */
specifier|public
name|Builder
name|setUsers
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|value
parameter_list|)
block|{
if|if
condition|(
name|usersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUsersIsMutable
argument_list|()
expr_stmt|;
name|users_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|usersBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>        */
specifier|public
name|Builder
name|setUsers
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|usersBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUsersIsMutable
argument_list|()
expr_stmt|;
name|users_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|usersBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>        */
specifier|public
name|Builder
name|addUsers
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|value
parameter_list|)
block|{
if|if
condition|(
name|usersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUsersIsMutable
argument_list|()
expr_stmt|;
name|users_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|usersBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>        */
specifier|public
name|Builder
name|addUsers
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|value
parameter_list|)
block|{
if|if
condition|(
name|usersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUsersIsMutable
argument_list|()
expr_stmt|;
name|users_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|usersBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>        */
specifier|public
name|Builder
name|addUsers
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|usersBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUsersIsMutable
argument_list|()
expr_stmt|;
name|users_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|usersBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>        */
specifier|public
name|Builder
name|addUsers
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|usersBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUsersIsMutable
argument_list|()
expr_stmt|;
name|users_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|usersBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>        */
specifier|public
name|Builder
name|addAllUsers
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|usersBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUsersIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|users_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|usersBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>        */
specifier|public
name|Builder
name|clearUsers
parameter_list|()
block|{
if|if
condition|(
name|usersBuilder_
operator|==
literal|null
condition|)
block|{
name|users_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|usersBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>        */
specifier|public
name|Builder
name|removeUsers
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|usersBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUsersIsMutable
argument_list|()
expr_stmt|;
name|users_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|usersBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|Builder
name|getUsersBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getUsersFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntryOrBuilder
name|getUsersOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|usersBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|users_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|usersBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntryOrBuilder
argument_list|>
name|getUsersOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|usersBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|usersBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|users_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|Builder
name|addUsersBuilder
parameter_list|()
block|{
return|return
name|getUsersFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|Builder
name|addUsersBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getUsersFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry users = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|Builder
argument_list|>
name|getUsersBuilderList
parameter_list|()
block|{
return|return
name|getUsersFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntryOrBuilder
argument_list|>
name|getUsersFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|usersBuilder_
operator|==
literal|null
condition|)
block|{
name|usersBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntryOrBuilder
argument_list|>
argument_list|(
name|users_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|users_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|usersBuilder_
return|;
block|}
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
argument_list|>
name|roles_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureRolesIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|roles_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
argument_list|>
argument_list|(
name|roles_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntryOrBuilder
argument_list|>
name|rolesBuilder_
decl_stmt|;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
argument_list|>
name|getRolesList
parameter_list|()
block|{
if|if
condition|(
name|rolesBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|roles_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|rolesBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>        */
specifier|public
name|int
name|getRolesCount
parameter_list|()
block|{
if|if
condition|(
name|rolesBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|roles_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|rolesBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|getRoles
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|rolesBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|roles_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|rolesBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>        */
specifier|public
name|Builder
name|setRoles
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|value
parameter_list|)
block|{
if|if
condition|(
name|rolesBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureRolesIsMutable
argument_list|()
expr_stmt|;
name|roles_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|rolesBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>        */
specifier|public
name|Builder
name|setRoles
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|rolesBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRolesIsMutable
argument_list|()
expr_stmt|;
name|roles_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|rolesBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>        */
specifier|public
name|Builder
name|addRoles
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|value
parameter_list|)
block|{
if|if
condition|(
name|rolesBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureRolesIsMutable
argument_list|()
expr_stmt|;
name|roles_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|rolesBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>        */
specifier|public
name|Builder
name|addRoles
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
name|value
parameter_list|)
block|{
if|if
condition|(
name|rolesBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureRolesIsMutable
argument_list|()
expr_stmt|;
name|roles_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|rolesBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>        */
specifier|public
name|Builder
name|addRoles
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|rolesBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRolesIsMutable
argument_list|()
expr_stmt|;
name|roles_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|rolesBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>        */
specifier|public
name|Builder
name|addRoles
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|rolesBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRolesIsMutable
argument_list|()
expr_stmt|;
name|roles_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|rolesBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>        */
specifier|public
name|Builder
name|addAllRoles
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|rolesBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRolesIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|roles_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|rolesBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>        */
specifier|public
name|Builder
name|clearRoles
parameter_list|()
block|{
if|if
condition|(
name|rolesBuilder_
operator|==
literal|null
condition|)
block|{
name|roles_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|rolesBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>        */
specifier|public
name|Builder
name|removeRoles
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|rolesBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRolesIsMutable
argument_list|()
expr_stmt|;
name|roles_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|rolesBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|Builder
name|getRolesBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getRolesFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntryOrBuilder
name|getRolesOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|rolesBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|roles_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|rolesBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntryOrBuilder
argument_list|>
name|getRolesOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|rolesBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|rolesBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|roles_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|Builder
name|addRolesBuilder
parameter_list|()
block|{
return|return
name|getRolesFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|Builder
name|addRolesBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getRolesFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSetEntry roles = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|Builder
argument_list|>
name|getRolesBuilderList
parameter_list|()
block|{
return|return
name|getRolesFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntryOrBuilder
argument_list|>
name|getRolesFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|rolesBuilder_
operator|==
literal|null
condition|)
block|{
name|rolesBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntry
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetEntryOrBuilder
argument_list|>
argument_list|(
name|roles_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|roles_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|rolesBuilder_
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|PrincipalPrivilegeSet
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet)
block|}
specifier|public
interface|interface
name|PrivilegeGrantInfoOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// optional string privilege = 1;
comment|/**      *<code>optional string privilege = 1;</code>      */
name|boolean
name|hasPrivilege
parameter_list|()
function_decl|;
comment|/**      *<code>optional string privilege = 1;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getPrivilege
parameter_list|()
function_decl|;
comment|/**      *<code>optional string privilege = 1;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getPrivilegeBytes
parameter_list|()
function_decl|;
comment|// optional int64 create_time = 2;
comment|/**      *<code>optional int64 create_time = 2;</code>      */
name|boolean
name|hasCreateTime
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 create_time = 2;</code>      */
name|long
name|getCreateTime
parameter_list|()
function_decl|;
comment|// optional string grantor = 3;
comment|/**      *<code>optional string grantor = 3;</code>      */
name|boolean
name|hasGrantor
parameter_list|()
function_decl|;
comment|/**      *<code>optional string grantor = 3;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getGrantor
parameter_list|()
function_decl|;
comment|/**      *<code>optional string grantor = 3;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getGrantorBytes
parameter_list|()
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType grantor_type = 4;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType grantor_type = 4;</code>      */
name|boolean
name|hasGrantorType
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType grantor_type = 4;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|getGrantorType
parameter_list|()
function_decl|;
comment|// optional bool grant_option = 5;
comment|/**      *<code>optional bool grant_option = 5;</code>      */
name|boolean
name|hasGrantOption
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool grant_option = 5;</code>      */
name|boolean
name|getGrantOption
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo}    */
specifier|public
specifier|static
specifier|final
class|class
name|PrivilegeGrantInfo
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|PrivilegeGrantInfoOrBuilder
block|{
comment|// Use PrivilegeGrantInfo.newBuilder() to construct.
specifier|private
name|PrivilegeGrantInfo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|PrivilegeGrantInfo
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|PrivilegeGrantInfo
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|PrivilegeGrantInfo
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|PrivilegeGrantInfo
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|PrivilegeGrantInfo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|privilege_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|createTime_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|grantor_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|32
case|:
block|{
name|int
name|rawValue
init|=
name|input
operator|.
name|readEnum
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|value
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|valueOf
argument_list|(
name|rawValue
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unknownFields
operator|.
name|mergeVarintField
argument_list|(
literal|4
argument_list|,
name|rawValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|grantorType_
operator|=
name|value
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|40
case|:
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|grantOption_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrivilegeGrantInfo_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrivilegeGrantInfo_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|PrivilegeGrantInfo
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|PrivilegeGrantInfo
argument_list|>
argument_list|()
block|{
specifier|public
name|PrivilegeGrantInfo
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|PrivilegeGrantInfo
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|PrivilegeGrantInfo
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional string privilege = 1;
specifier|public
specifier|static
specifier|final
name|int
name|PRIVILEGE_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|privilege_
decl_stmt|;
comment|/**      *<code>optional string privilege = 1;</code>      */
specifier|public
name|boolean
name|hasPrivilege
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>optional string privilege = 1;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getPrivilege
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|privilege_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|privilege_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string privilege = 1;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getPrivilegeBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|privilege_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|privilege_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional int64 create_time = 2;
specifier|public
specifier|static
specifier|final
name|int
name|CREATE_TIME_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|long
name|createTime_
decl_stmt|;
comment|/**      *<code>optional int64 create_time = 2;</code>      */
specifier|public
name|boolean
name|hasCreateTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>optional int64 create_time = 2;</code>      */
specifier|public
name|long
name|getCreateTime
parameter_list|()
block|{
return|return
name|createTime_
return|;
block|}
comment|// optional string grantor = 3;
specifier|public
specifier|static
specifier|final
name|int
name|GRANTOR_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|grantor_
decl_stmt|;
comment|/**      *<code>optional string grantor = 3;</code>      */
specifier|public
name|boolean
name|hasGrantor
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<code>optional string grantor = 3;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getGrantor
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|grantor_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|grantor_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string grantor = 3;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getGrantorBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|grantor_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|grantor_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType grantor_type = 4;
specifier|public
specifier|static
specifier|final
name|int
name|GRANTOR_TYPE_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|grantorType_
decl_stmt|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType grantor_type = 4;</code>      */
specifier|public
name|boolean
name|hasGrantorType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType grantor_type = 4;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|getGrantorType
parameter_list|()
block|{
return|return
name|grantorType_
return|;
block|}
comment|// optional bool grant_option = 5;
specifier|public
specifier|static
specifier|final
name|int
name|GRANT_OPTION_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|boolean
name|grantOption_
decl_stmt|;
comment|/**      *<code>optional bool grant_option = 5;</code>      */
specifier|public
name|boolean
name|hasGrantOption
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**      *<code>optional bool grant_option = 5;</code>      */
specifier|public
name|boolean
name|getGrantOption
parameter_list|()
block|{
return|return
name|grantOption_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|privilege_
operator|=
literal|""
expr_stmt|;
name|createTime_
operator|=
literal|0L
expr_stmt|;
name|grantor_
operator|=
literal|""
expr_stmt|;
name|grantorType_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|USER
expr_stmt|;
name|grantOption_
operator|=
literal|false
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|getPrivilegeBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|2
argument_list|,
name|createTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|3
argument_list|,
name|getGrantorBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|output
operator|.
name|writeEnum
argument_list|(
literal|4
argument_list|,
name|grantorType_
operator|.
name|getNumber
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|5
argument_list|,
name|grantOption_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|1
argument_list|,
name|getPrivilegeBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|2
argument_list|,
name|createTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|3
argument_list|,
name|getGrantorBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeEnumSize
argument_list|(
literal|4
argument_list|,
name|grantorType_
operator|.
name|getNumber
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|5
argument_list|,
name|grantOption_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfoOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrivilegeGrantInfo_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrivilegeGrantInfo_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.PrivilegeGrantInfo.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{         }
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|privilege_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|createTime_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|grantor_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|grantorType_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|USER
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|grantOption_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrivilegeGrantInfo_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|privilege_
operator|=
name|privilege_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|createTime_
operator|=
name|createTime_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|grantor_
operator|=
name|grantor_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|result
operator|.
name|grantorType_
operator|=
name|grantorType_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
name|result
operator|.
name|grantOption_
operator|=
name|grantOption_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasPrivilege
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|privilege_
operator|=
name|other
operator|.
name|privilege_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasCreateTime
argument_list|()
condition|)
block|{
name|setCreateTime
argument_list|(
name|other
operator|.
name|getCreateTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasGrantor
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|grantor_
operator|=
name|other
operator|.
name|grantor_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasGrantorType
argument_list|()
condition|)
block|{
name|setGrantorType
argument_list|(
name|other
operator|.
name|getGrantorType
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasGrantOption
argument_list|()
condition|)
block|{
name|setGrantOption
argument_list|(
name|other
operator|.
name|getGrantOption
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrivilegeGrantInfo
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional string privilege = 1;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|privilege_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string privilege = 1;</code>        */
specifier|public
name|boolean
name|hasPrivilege
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional string privilege = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getPrivilege
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|privilege_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|privilege_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string privilege = 1;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getPrivilegeBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|privilege_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|privilege_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string privilege = 1;</code>        */
specifier|public
name|Builder
name|setPrivilege
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|privilege_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string privilege = 1;</code>        */
specifier|public
name|Builder
name|clearPrivilege
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|privilege_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getPrivilege
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string privilege = 1;</code>        */
specifier|public
name|Builder
name|setPrivilegeBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|privilege_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional int64 create_time = 2;
specifier|private
name|long
name|createTime_
decl_stmt|;
comment|/**        *<code>optional int64 create_time = 2;</code>        */
specifier|public
name|boolean
name|hasCreateTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>optional int64 create_time = 2;</code>        */
specifier|public
name|long
name|getCreateTime
parameter_list|()
block|{
return|return
name|createTime_
return|;
block|}
comment|/**        *<code>optional int64 create_time = 2;</code>        */
specifier|public
name|Builder
name|setCreateTime
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|createTime_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int64 create_time = 2;</code>        */
specifier|public
name|Builder
name|clearCreateTime
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|createTime_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional string grantor = 3;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|grantor_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string grantor = 3;</code>        */
specifier|public
name|boolean
name|hasGrantor
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>optional string grantor = 3;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getGrantor
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|grantor_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|grantor_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string grantor = 3;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getGrantorBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|grantor_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|grantor_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string grantor = 3;</code>        */
specifier|public
name|Builder
name|setGrantor
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|grantor_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string grantor = 3;</code>        */
specifier|public
name|Builder
name|clearGrantor
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|grantor_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getGrantor
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string grantor = 3;</code>        */
specifier|public
name|Builder
name|setGrantorBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|grantor_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType grantor_type = 4;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|grantorType_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|USER
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType grantor_type = 4;</code>        */
specifier|public
name|boolean
name|hasGrantorType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType grantor_type = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|getGrantorType
parameter_list|()
block|{
return|return
name|grantorType_
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType grantor_type = 4;</code>        */
specifier|public
name|Builder
name|setGrantorType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|grantorType_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType grantor_type = 4;</code>        */
specifier|public
name|Builder
name|clearGrantorType
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|grantorType_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|USER
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional bool grant_option = 5;
specifier|private
name|boolean
name|grantOption_
decl_stmt|;
comment|/**        *<code>optional bool grant_option = 5;</code>        */
specifier|public
name|boolean
name|hasGrantOption
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**        *<code>optional bool grant_option = 5;</code>        */
specifier|public
name|boolean
name|getGrantOption
parameter_list|()
block|{
return|return
name|grantOption_
return|;
block|}
comment|/**        *<code>optional bool grant_option = 5;</code>        */
specifier|public
name|Builder
name|setGrantOption
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|grantOption_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional bool grant_option = 5;</code>        */
specifier|public
name|Builder
name|clearGrantOption
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|grantOption_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|PrivilegeGrantInfo
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.PrivilegeGrantInfo)
block|}
specifier|public
interface|interface
name|RoleGrantInfoOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required string principal_name = 1;
comment|/**      *<code>required string principal_name = 1;</code>      */
name|boolean
name|hasPrincipalName
parameter_list|()
function_decl|;
comment|/**      *<code>required string principal_name = 1;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getPrincipalName
parameter_list|()
function_decl|;
comment|/**      *<code>required string principal_name = 1;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getPrincipalNameBytes
parameter_list|()
function_decl|;
comment|// required .org.apache.hadoop.hive.metastore.hbase.PrincipalType principal_type = 2;
comment|/**      *<code>required .org.apache.hadoop.hive.metastore.hbase.PrincipalType principal_type = 2;</code>      */
name|boolean
name|hasPrincipalType
parameter_list|()
function_decl|;
comment|/**      *<code>required .org.apache.hadoop.hive.metastore.hbase.PrincipalType principal_type = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|getPrincipalType
parameter_list|()
function_decl|;
comment|// optional int64 add_time = 3;
comment|/**      *<code>optional int64 add_time = 3;</code>      */
name|boolean
name|hasAddTime
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 add_time = 3;</code>      */
name|long
name|getAddTime
parameter_list|()
function_decl|;
comment|// optional string grantor = 4;
comment|/**      *<code>optional string grantor = 4;</code>      */
name|boolean
name|hasGrantor
parameter_list|()
function_decl|;
comment|/**      *<code>optional string grantor = 4;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getGrantor
parameter_list|()
function_decl|;
comment|/**      *<code>optional string grantor = 4;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getGrantorBytes
parameter_list|()
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType grantor_type = 5;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType grantor_type = 5;</code>      */
name|boolean
name|hasGrantorType
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType grantor_type = 5;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|getGrantorType
parameter_list|()
function_decl|;
comment|// optional bool grant_option = 6;
comment|/**      *<code>optional bool grant_option = 6;</code>      */
name|boolean
name|hasGrantOption
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool grant_option = 6;</code>      */
name|boolean
name|getGrantOption
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo}    */
specifier|public
specifier|static
specifier|final
class|class
name|RoleGrantInfo
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|RoleGrantInfoOrBuilder
block|{
comment|// Use RoleGrantInfo.newBuilder() to construct.
specifier|private
name|RoleGrantInfo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|RoleGrantInfo
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|RoleGrantInfo
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|RoleGrantInfo
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|RoleGrantInfo
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|RoleGrantInfo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|principalName_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|int
name|rawValue
init|=
name|input
operator|.
name|readEnum
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|value
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|valueOf
argument_list|(
name|rawValue
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unknownFields
operator|.
name|mergeVarintField
argument_list|(
literal|2
argument_list|,
name|rawValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|principalType_
operator|=
name|value
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|24
case|:
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|addTime_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|34
case|:
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|grantor_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|40
case|:
block|{
name|int
name|rawValue
init|=
name|input
operator|.
name|readEnum
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|value
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|valueOf
argument_list|(
name|rawValue
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unknownFields
operator|.
name|mergeVarintField
argument_list|(
literal|5
argument_list|,
name|rawValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|grantorType_
operator|=
name|value
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|48
case|:
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|grantOption_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfo_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfo_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|RoleGrantInfo
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|RoleGrantInfo
argument_list|>
argument_list|()
block|{
specifier|public
name|RoleGrantInfo
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|RoleGrantInfo
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|RoleGrantInfo
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string principal_name = 1;
specifier|public
specifier|static
specifier|final
name|int
name|PRINCIPAL_NAME_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|principalName_
decl_stmt|;
comment|/**      *<code>required string principal_name = 1;</code>      */
specifier|public
name|boolean
name|hasPrincipalName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>required string principal_name = 1;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getPrincipalName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|principalName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|principalName_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>required string principal_name = 1;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getPrincipalNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|principalName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|principalName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// required .org.apache.hadoop.hive.metastore.hbase.PrincipalType principal_type = 2;
specifier|public
specifier|static
specifier|final
name|int
name|PRINCIPAL_TYPE_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|principalType_
decl_stmt|;
comment|/**      *<code>required .org.apache.hadoop.hive.metastore.hbase.PrincipalType principal_type = 2;</code>      */
specifier|public
name|boolean
name|hasPrincipalType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>required .org.apache.hadoop.hive.metastore.hbase.PrincipalType principal_type = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|getPrincipalType
parameter_list|()
block|{
return|return
name|principalType_
return|;
block|}
comment|// optional int64 add_time = 3;
specifier|public
specifier|static
specifier|final
name|int
name|ADD_TIME_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|long
name|addTime_
decl_stmt|;
comment|/**      *<code>optional int64 add_time = 3;</code>      */
specifier|public
name|boolean
name|hasAddTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<code>optional int64 add_time = 3;</code>      */
specifier|public
name|long
name|getAddTime
parameter_list|()
block|{
return|return
name|addTime_
return|;
block|}
comment|// optional string grantor = 4;
specifier|public
specifier|static
specifier|final
name|int
name|GRANTOR_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|grantor_
decl_stmt|;
comment|/**      *<code>optional string grantor = 4;</code>      */
specifier|public
name|boolean
name|hasGrantor
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**      *<code>optional string grantor = 4;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getGrantor
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|grantor_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|grantor_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string grantor = 4;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getGrantorBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|grantor_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|grantor_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType grantor_type = 5;
specifier|public
specifier|static
specifier|final
name|int
name|GRANTOR_TYPE_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|grantorType_
decl_stmt|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType grantor_type = 5;</code>      */
specifier|public
name|boolean
name|hasGrantorType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType grantor_type = 5;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|getGrantorType
parameter_list|()
block|{
return|return
name|grantorType_
return|;
block|}
comment|// optional bool grant_option = 6;
specifier|public
specifier|static
specifier|final
name|int
name|GRANT_OPTION_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
specifier|private
name|boolean
name|grantOption_
decl_stmt|;
comment|/**      *<code>optional bool grant_option = 6;</code>      */
specifier|public
name|boolean
name|hasGrantOption
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**      *<code>optional bool grant_option = 6;</code>      */
specifier|public
name|boolean
name|getGrantOption
parameter_list|()
block|{
return|return
name|grantOption_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|principalName_
operator|=
literal|""
expr_stmt|;
name|principalType_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|USER
expr_stmt|;
name|addTime_
operator|=
literal|0L
expr_stmt|;
name|grantor_
operator|=
literal|""
expr_stmt|;
name|grantorType_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|USER
expr_stmt|;
name|grantOption_
operator|=
literal|false
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasPrincipalName
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasPrincipalType
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|getPrincipalNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeEnum
argument_list|(
literal|2
argument_list|,
name|principalType_
operator|.
name|getNumber
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|3
argument_list|,
name|addTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|4
argument_list|,
name|getGrantorBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|output
operator|.
name|writeEnum
argument_list|(
literal|5
argument_list|,
name|grantorType_
operator|.
name|getNumber
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|6
argument_list|,
name|grantOption_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|1
argument_list|,
name|getPrincipalNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeEnumSize
argument_list|(
literal|2
argument_list|,
name|principalType_
operator|.
name|getNumber
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|3
argument_list|,
name|addTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|4
argument_list|,
name|getGrantorBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeEnumSize
argument_list|(
literal|5
argument_list|,
name|grantorType_
operator|.
name|getNumber
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|6
argument_list|,
name|grantOption_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfo_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfo_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.RoleGrantInfo.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{         }
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|principalName_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|principalType_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|USER
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|addTime_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|grantor_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|grantorType_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|USER
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|grantOption_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfo_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|principalName_
operator|=
name|principalName_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|principalType_
operator|=
name|principalType_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|addTime_
operator|=
name|addTime_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|result
operator|.
name|grantor_
operator|=
name|grantor_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
name|result
operator|.
name|grantorType_
operator|=
name|grantorType_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
name|result
operator|.
name|grantOption_
operator|=
name|grantOption_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasPrincipalName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|principalName_
operator|=
name|other
operator|.
name|principalName_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasPrincipalType
argument_list|()
condition|)
block|{
name|setPrincipalType
argument_list|(
name|other
operator|.
name|getPrincipalType
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasAddTime
argument_list|()
condition|)
block|{
name|setAddTime
argument_list|(
name|other
operator|.
name|getAddTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasGrantor
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|grantor_
operator|=
name|other
operator|.
name|grantor_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasGrantorType
argument_list|()
condition|)
block|{
name|setGrantorType
argument_list|(
name|other
operator|.
name|getGrantorType
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasGrantOption
argument_list|()
condition|)
block|{
name|setGrantOption
argument_list|(
name|other
operator|.
name|getGrantOption
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasPrincipalName
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasPrincipalType
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string principal_name = 1;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|principalName_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>required string principal_name = 1;</code>        */
specifier|public
name|boolean
name|hasPrincipalName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>required string principal_name = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getPrincipalName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|principalName_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|principalName_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string principal_name = 1;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getPrincipalNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|principalName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|principalName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string principal_name = 1;</code>        */
specifier|public
name|Builder
name|setPrincipalName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|principalName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string principal_name = 1;</code>        */
specifier|public
name|Builder
name|clearPrincipalName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|principalName_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getPrincipalName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string principal_name = 1;</code>        */
specifier|public
name|Builder
name|setPrincipalNameBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|principalName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// required .org.apache.hadoop.hive.metastore.hbase.PrincipalType principal_type = 2;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|principalType_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|USER
decl_stmt|;
comment|/**        *<code>required .org.apache.hadoop.hive.metastore.hbase.PrincipalType principal_type = 2;</code>        */
specifier|public
name|boolean
name|hasPrincipalType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>required .org.apache.hadoop.hive.metastore.hbase.PrincipalType principal_type = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|getPrincipalType
parameter_list|()
block|{
return|return
name|principalType_
return|;
block|}
comment|/**        *<code>required .org.apache.hadoop.hive.metastore.hbase.PrincipalType principal_type = 2;</code>        */
specifier|public
name|Builder
name|setPrincipalType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|principalType_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .org.apache.hadoop.hive.metastore.hbase.PrincipalType principal_type = 2;</code>        */
specifier|public
name|Builder
name|clearPrincipalType
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|principalType_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|USER
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional int64 add_time = 3;
specifier|private
name|long
name|addTime_
decl_stmt|;
comment|/**        *<code>optional int64 add_time = 3;</code>        */
specifier|public
name|boolean
name|hasAddTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>optional int64 add_time = 3;</code>        */
specifier|public
name|long
name|getAddTime
parameter_list|()
block|{
return|return
name|addTime_
return|;
block|}
comment|/**        *<code>optional int64 add_time = 3;</code>        */
specifier|public
name|Builder
name|setAddTime
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|addTime_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int64 add_time = 3;</code>        */
specifier|public
name|Builder
name|clearAddTime
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|addTime_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional string grantor = 4;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|grantor_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string grantor = 4;</code>        */
specifier|public
name|boolean
name|hasGrantor
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**        *<code>optional string grantor = 4;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getGrantor
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|grantor_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|grantor_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string grantor = 4;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getGrantorBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|grantor_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|grantor_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string grantor = 4;</code>        */
specifier|public
name|Builder
name|setGrantor
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|grantor_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string grantor = 4;</code>        */
specifier|public
name|Builder
name|clearGrantor
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|grantor_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getGrantor
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string grantor = 4;</code>        */
specifier|public
name|Builder
name|setGrantorBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|grantor_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType grantor_type = 5;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|grantorType_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|USER
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType grantor_type = 5;</code>        */
specifier|public
name|boolean
name|hasGrantorType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType grantor_type = 5;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|getGrantorType
parameter_list|()
block|{
return|return
name|grantorType_
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType grantor_type = 5;</code>        */
specifier|public
name|Builder
name|setGrantorType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|grantorType_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalType grantor_type = 5;</code>        */
specifier|public
name|Builder
name|clearGrantorType
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|grantorType_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalType
operator|.
name|USER
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional bool grant_option = 6;
specifier|private
name|boolean
name|grantOption_
decl_stmt|;
comment|/**        *<code>optional bool grant_option = 6;</code>        */
specifier|public
name|boolean
name|hasGrantOption
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**        *<code>optional bool grant_option = 6;</code>        */
specifier|public
name|boolean
name|getGrantOption
parameter_list|()
block|{
return|return
name|grantOption_
return|;
block|}
comment|/**        *<code>optional bool grant_option = 6;</code>        */
specifier|public
name|Builder
name|setGrantOption
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|grantOption_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional bool grant_option = 6;</code>        */
specifier|public
name|Builder
name|clearGrantOption
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|grantOption_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|RoleGrantInfo
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo)
block|}
specifier|public
interface|interface
name|RoleGrantInfoListOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
argument_list|>
name|getGrantInfoList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
name|getGrantInfo
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>      */
name|int
name|getGrantInfoCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoOrBuilder
argument_list|>
name|getGrantInfoOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoOrBuilder
name|getGrantInfoOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.RoleGrantInfoList}    */
specifier|public
specifier|static
specifier|final
class|class
name|RoleGrantInfoList
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|RoleGrantInfoListOrBuilder
block|{
comment|// Use RoleGrantInfoList.newBuilder() to construct.
specifier|private
name|RoleGrantInfoList
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|RoleGrantInfoList
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|RoleGrantInfoList
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|RoleGrantInfoList
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|RoleGrantInfoList
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|RoleGrantInfoList
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|grantInfo_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|grantInfo_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|grantInfo_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|grantInfo_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfoList_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfoList_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|RoleGrantInfoList
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|RoleGrantInfoList
argument_list|>
argument_list|()
block|{
specifier|public
name|RoleGrantInfoList
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|RoleGrantInfoList
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|RoleGrantInfoList
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;
specifier|public
specifier|static
specifier|final
name|int
name|GRANT_INFO_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
argument_list|>
name|grantInfo_
decl_stmt|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
argument_list|>
name|getGrantInfoList
parameter_list|()
block|{
return|return
name|grantInfo_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoOrBuilder
argument_list|>
name|getGrantInfoOrBuilderList
parameter_list|()
block|{
return|return
name|grantInfo_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>      */
specifier|public
name|int
name|getGrantInfoCount
parameter_list|()
block|{
return|return
name|grantInfo_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
name|getGrantInfo
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|grantInfo_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoOrBuilder
name|getGrantInfoOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|grantInfo_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|grantInfo_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getGrantInfoCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getGrantInfo
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|grantInfo_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|grantInfo_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|grantInfo_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|grantInfo_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.RoleGrantInfoList}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoListOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfoList_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfoList_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.RoleGrantInfoList.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getGrantInfoFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|grantInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|grantInfo_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|grantInfoBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfoList_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
if|if
condition|(
name|grantInfoBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|grantInfo_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|grantInfo_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|grantInfo_
operator|=
name|grantInfo_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|grantInfo_
operator|=
name|grantInfoBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|grantInfoBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|grantInfo_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|grantInfo_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|grantInfo_
operator|=
name|other
operator|.
name|grantInfo_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureGrantInfoIsMutable
argument_list|()
expr_stmt|;
name|grantInfo_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|grantInfo_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|grantInfo_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|grantInfoBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|grantInfoBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|grantInfoBuilder_
operator|=
literal|null
expr_stmt|;
name|grantInfo_
operator|=
name|other
operator|.
name|grantInfo_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|grantInfoBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getGrantInfoFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|grantInfoBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|grantInfo_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getGrantInfoCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getGrantInfo
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoList
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
argument_list|>
name|grantInfo_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureGrantInfoIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|grantInfo_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
argument_list|>
argument_list|(
name|grantInfo_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoOrBuilder
argument_list|>
name|grantInfoBuilder_
decl_stmt|;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
argument_list|>
name|getGrantInfoList
parameter_list|()
block|{
if|if
condition|(
name|grantInfoBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|grantInfo_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|grantInfoBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>        */
specifier|public
name|int
name|getGrantInfoCount
parameter_list|()
block|{
if|if
condition|(
name|grantInfoBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|grantInfo_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|grantInfoBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
name|getGrantInfo
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|grantInfoBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|grantInfo_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|grantInfoBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>        */
specifier|public
name|Builder
name|setGrantInfo
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
name|value
parameter_list|)
block|{
if|if
condition|(
name|grantInfoBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureGrantInfoIsMutable
argument_list|()
expr_stmt|;
name|grantInfo_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|grantInfoBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>        */
specifier|public
name|Builder
name|setGrantInfo
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|grantInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureGrantInfoIsMutable
argument_list|()
expr_stmt|;
name|grantInfo_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|grantInfoBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>        */
specifier|public
name|Builder
name|addGrantInfo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
name|value
parameter_list|)
block|{
if|if
condition|(
name|grantInfoBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureGrantInfoIsMutable
argument_list|()
expr_stmt|;
name|grantInfo_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|grantInfoBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>        */
specifier|public
name|Builder
name|addGrantInfo
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
name|value
parameter_list|)
block|{
if|if
condition|(
name|grantInfoBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureGrantInfoIsMutable
argument_list|()
expr_stmt|;
name|grantInfo_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|grantInfoBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>        */
specifier|public
name|Builder
name|addGrantInfo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|grantInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureGrantInfoIsMutable
argument_list|()
expr_stmt|;
name|grantInfo_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|grantInfoBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>        */
specifier|public
name|Builder
name|addGrantInfo
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|grantInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureGrantInfoIsMutable
argument_list|()
expr_stmt|;
name|grantInfo_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|grantInfoBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>        */
specifier|public
name|Builder
name|addAllGrantInfo
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|grantInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureGrantInfoIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|grantInfo_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|grantInfoBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>        */
specifier|public
name|Builder
name|clearGrantInfo
parameter_list|()
block|{
if|if
condition|(
name|grantInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|grantInfo_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|grantInfoBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>        */
specifier|public
name|Builder
name|removeGrantInfo
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|grantInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureGrantInfoIsMutable
argument_list|()
expr_stmt|;
name|grantInfo_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|grantInfoBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
operator|.
name|Builder
name|getGrantInfoBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getGrantInfoFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoOrBuilder
name|getGrantInfoOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|grantInfoBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|grantInfo_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|grantInfoBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoOrBuilder
argument_list|>
name|getGrantInfoOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|grantInfoBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|grantInfoBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|grantInfo_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
operator|.
name|Builder
name|addGrantInfoBuilder
parameter_list|()
block|{
return|return
name|getGrantInfoFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
operator|.
name|Builder
name|addGrantInfoBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getGrantInfoFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.RoleGrantInfo grant_info = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
operator|.
name|Builder
argument_list|>
name|getGrantInfoBuilderList
parameter_list|()
block|{
return|return
name|getGrantInfoFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoOrBuilder
argument_list|>
name|getGrantInfoFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|grantInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|grantInfoBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfo
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleGrantInfoOrBuilder
argument_list|>
argument_list|(
name|grantInfo_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|grantInfo_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|grantInfoBuilder_
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.RoleGrantInfoList)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|RoleGrantInfoList
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.RoleGrantInfoList)
block|}
specifier|public
interface|interface
name|RoleListOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// repeated string role = 1;
comment|/**      *<code>repeated string role = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|getRoleList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated string role = 1;</code>      */
name|int
name|getRoleCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated string role = 1;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getRole
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated string role = 1;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getRoleBytes
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.RoleList}    */
specifier|public
specifier|static
specifier|final
class|class
name|RoleList
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|RoleListOrBuilder
block|{
comment|// Use RoleList.newBuilder() to construct.
specifier|private
name|RoleList
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|RoleList
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|RoleList
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|RoleList
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|RoleList
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|RoleList
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|role_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|role_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readBytes
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|role_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnmodifiableLazyStringList
argument_list|(
name|role_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleList_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleList_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|RoleList
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|RoleList
argument_list|>
argument_list|()
block|{
specifier|public
name|RoleList
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|RoleList
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|RoleList
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
comment|// repeated string role = 1;
specifier|public
specifier|static
specifier|final
name|int
name|ROLE_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringList
name|role_
decl_stmt|;
comment|/**      *<code>repeated string role = 1;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|getRoleList
parameter_list|()
block|{
return|return
name|role_
return|;
block|}
comment|/**      *<code>repeated string role = 1;</code>      */
specifier|public
name|int
name|getRoleCount
parameter_list|()
block|{
return|return
name|role_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated string role = 1;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getRole
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|role_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated string role = 1;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getRoleBytes
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|role_
operator|.
name|getByteString
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|role_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|role_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|role_
operator|.
name|getByteString
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
block|{
name|int
name|dataSize
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|role_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|dataSize
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSizeNoTag
argument_list|(
name|role_
operator|.
name|getByteString
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|dataSize
expr_stmt|;
name|size
operator|+=
literal|1
operator|*
name|getRoleList
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.RoleList}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleListOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleList_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleList_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.RoleList.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{         }
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|role_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleList_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|role_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnmodifiableLazyStringList
argument_list|(
name|role_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|role_
operator|=
name|role_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
operator|!
name|other
operator|.
name|role_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|role_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|role_
operator|=
name|other
operator|.
name|role_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureRoleIsMutable
argument_list|()
expr_stmt|;
name|role_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|role_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleList
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// repeated string role = 1;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringList
name|role_
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
decl_stmt|;
specifier|private
name|void
name|ensureRoleIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|role_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
argument_list|(
name|role_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
block|}
comment|/**        *<code>repeated string role = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|getRoleList
parameter_list|()
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|role_
argument_list|)
return|;
block|}
comment|/**        *<code>repeated string role = 1;</code>        */
specifier|public
name|int
name|getRoleCount
parameter_list|()
block|{
return|return
name|role_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**        *<code>repeated string role = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getRole
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|role_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated string role = 1;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getRoleBytes
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|role_
operator|.
name|getByteString
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated string role = 1;</code>        */
specifier|public
name|Builder
name|setRole
parameter_list|(
name|int
name|index
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureRoleIsMutable
argument_list|()
expr_stmt|;
name|role_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated string role = 1;</code>        */
specifier|public
name|Builder
name|addRole
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureRoleIsMutable
argument_list|()
expr_stmt|;
name|role_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated string role = 1;</code>        */
specifier|public
name|Builder
name|addAllRole
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|ensureRoleIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|role_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated string role = 1;</code>        */
specifier|public
name|Builder
name|clearRole
parameter_list|()
block|{
name|role_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated string role = 1;</code>        */
specifier|public
name|Builder
name|addRoleBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureRoleIsMutable
argument_list|()
expr_stmt|;
name|role_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.RoleList)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|RoleList
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.RoleList)
block|}
specifier|public
interface|interface
name|RoleOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// optional int64 create_time = 1;
comment|/**      *<code>optional int64 create_time = 1;</code>      */
name|boolean
name|hasCreateTime
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 create_time = 1;</code>      */
name|long
name|getCreateTime
parameter_list|()
function_decl|;
comment|// optional string owner_name = 2;
comment|/**      *<code>optional string owner_name = 2;</code>      */
name|boolean
name|hasOwnerName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string owner_name = 2;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getOwnerName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string owner_name = 2;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getOwnerNameBytes
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.Role}    */
specifier|public
specifier|static
specifier|final
class|class
name|Role
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|RoleOrBuilder
block|{
comment|// Use Role.newBuilder() to construct.
specifier|private
name|Role
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Role
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|Role
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|Role
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|Role
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|Role
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|8
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|createTime_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|ownerName_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Role_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Role_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Role
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Role
argument_list|>
argument_list|()
block|{
specifier|public
name|Role
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Role
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Role
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional int64 create_time = 1;
specifier|public
specifier|static
specifier|final
name|int
name|CREATE_TIME_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|long
name|createTime_
decl_stmt|;
comment|/**      *<code>optional int64 create_time = 1;</code>      */
specifier|public
name|boolean
name|hasCreateTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>optional int64 create_time = 1;</code>      */
specifier|public
name|long
name|getCreateTime
parameter_list|()
block|{
return|return
name|createTime_
return|;
block|}
comment|// optional string owner_name = 2;
specifier|public
specifier|static
specifier|final
name|int
name|OWNER_NAME_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|ownerName_
decl_stmt|;
comment|/**      *<code>optional string owner_name = 2;</code>      */
specifier|public
name|boolean
name|hasOwnerName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>optional string owner_name = 2;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getOwnerName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|ownerName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|ownerName_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string owner_name = 2;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getOwnerNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|ownerName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|ownerName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|createTime_
operator|=
literal|0L
expr_stmt|;
name|ownerName_
operator|=
literal|""
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|1
argument_list|,
name|createTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|2
argument_list|,
name|getOwnerNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|1
argument_list|,
name|createTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|2
argument_list|,
name|getOwnerNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.Role}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|RoleOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Role_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Role_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.Role.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{         }
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|createTime_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|ownerName_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Role_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|createTime_
operator|=
name|createTime_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|ownerName_
operator|=
name|ownerName_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasCreateTime
argument_list|()
condition|)
block|{
name|setCreateTime
argument_list|(
name|other
operator|.
name|getCreateTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasOwnerName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|ownerName_
operator|=
name|other
operator|.
name|ownerName_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Role
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional int64 create_time = 1;
specifier|private
name|long
name|createTime_
decl_stmt|;
comment|/**        *<code>optional int64 create_time = 1;</code>        */
specifier|public
name|boolean
name|hasCreateTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional int64 create_time = 1;</code>        */
specifier|public
name|long
name|getCreateTime
parameter_list|()
block|{
return|return
name|createTime_
return|;
block|}
comment|/**        *<code>optional int64 create_time = 1;</code>        */
specifier|public
name|Builder
name|setCreateTime
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|createTime_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int64 create_time = 1;</code>        */
specifier|public
name|Builder
name|clearCreateTime
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|createTime_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional string owner_name = 2;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|ownerName_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string owner_name = 2;</code>        */
specifier|public
name|boolean
name|hasOwnerName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>optional string owner_name = 2;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getOwnerName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|ownerName_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|ownerName_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string owner_name = 2;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getOwnerNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|ownerName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|ownerName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string owner_name = 2;</code>        */
specifier|public
name|Builder
name|setOwnerName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|ownerName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string owner_name = 2;</code>        */
specifier|public
name|Builder
name|clearOwnerName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|ownerName_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getOwnerName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string owner_name = 2;</code>        */
specifier|public
name|Builder
name|setOwnerNameBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|ownerName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.Role)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|Role
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.Role)
block|}
specifier|public
interface|interface
name|StorageDescriptorOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
argument_list|>
name|getColsList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|getCols
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>      */
name|int
name|getColsCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchemaOrBuilder
argument_list|>
name|getColsOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchemaOrBuilder
name|getColsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|// optional string input_format = 2;
comment|/**      *<code>optional string input_format = 2;</code>      */
name|boolean
name|hasInputFormat
parameter_list|()
function_decl|;
comment|/**      *<code>optional string input_format = 2;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getInputFormat
parameter_list|()
function_decl|;
comment|/**      *<code>optional string input_format = 2;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getInputFormatBytes
parameter_list|()
function_decl|;
comment|// optional string output_format = 3;
comment|/**      *<code>optional string output_format = 3;</code>      */
name|boolean
name|hasOutputFormat
parameter_list|()
function_decl|;
comment|/**      *<code>optional string output_format = 3;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getOutputFormat
parameter_list|()
function_decl|;
comment|/**      *<code>optional string output_format = 3;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getOutputFormatBytes
parameter_list|()
function_decl|;
comment|// optional bool is_compressed = 4;
comment|/**      *<code>optional bool is_compressed = 4;</code>      */
name|boolean
name|hasIsCompressed
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool is_compressed = 4;</code>      */
name|boolean
name|getIsCompressed
parameter_list|()
function_decl|;
comment|// optional sint32 num_buckets = 5;
comment|/**      *<code>optional sint32 num_buckets = 5;</code>      */
name|boolean
name|hasNumBuckets
parameter_list|()
function_decl|;
comment|/**      *<code>optional sint32 num_buckets = 5;</code>      */
name|int
name|getNumBuckets
parameter_list|()
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SerDeInfo serde_info = 6;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SerDeInfo serde_info = 6;</code>      */
name|boolean
name|hasSerdeInfo
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SerDeInfo serde_info = 6;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|getSerdeInfo
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SerDeInfo serde_info = 6;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfoOrBuilder
name|getSerdeInfoOrBuilder
parameter_list|()
function_decl|;
comment|// repeated string bucket_cols = 7;
comment|/**      *<code>repeated string bucket_cols = 7;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|getBucketColsList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated string bucket_cols = 7;</code>      */
name|int
name|getBucketColsCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated string bucket_cols = 7;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getBucketCols
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated string bucket_cols = 7;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getBucketColsBytes
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
argument_list|>
name|getSortColsList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
name|getSortCols
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>      */
name|int
name|getSortColsCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|OrderOrBuilder
argument_list|>
name|getSortColsOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|OrderOrBuilder
name|getSortColsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo skewed_info = 9;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo skewed_info = 9;</code>      */
name|boolean
name|hasSkewedInfo
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo skewed_info = 9;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|getSkewedInfo
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo skewed_info = 9;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfoOrBuilder
name|getSkewedInfoOrBuilder
parameter_list|()
function_decl|;
comment|// optional bool stored_as_sub_directories = 10;
comment|/**      *<code>optional bool stored_as_sub_directories = 10;</code>      */
name|boolean
name|hasStoredAsSubDirectories
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool stored_as_sub_directories = 10;</code>      */
name|boolean
name|getStoredAsSubDirectories
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.StorageDescriptor}    */
specifier|public
specifier|static
specifier|final
class|class
name|StorageDescriptor
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|StorageDescriptorOrBuilder
block|{
comment|// Use StorageDescriptor.newBuilder() to construct.
specifier|private
name|StorageDescriptor
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|StorageDescriptor
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|StorageDescriptor
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|StorageDescriptor
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|StorageDescriptor
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|StorageDescriptor
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|cols_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|cols_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|inputFormat_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|outputFormat_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|32
case|:
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|isCompressed_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|40
case|:
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|numBuckets_
operator|=
name|input
operator|.
name|readSInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|50
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|serdeInfo_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|serdeInfo_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|serdeInfo_
argument_list|)
expr_stmt|;
name|serdeInfo_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
break|break;
block|}
case|case
literal|58
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|bucketCols_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000040
expr_stmt|;
block|}
name|bucketCols_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readBytes
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|66
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|sortCols_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000080
expr_stmt|;
block|}
name|sortCols_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|74
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|skewedInfo_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|skewedInfo_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|skewedInfo_
argument_list|)
expr_stmt|;
name|skewedInfo_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
break|break;
block|}
case|case
literal|80
case|:
block|{
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|storedAsSubDirectories_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|cols_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|cols_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|bucketCols_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnmodifiableLazyStringList
argument_list|(
name|bucketCols_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|sortCols_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|sortCols_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|StorageDescriptor
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|StorageDescriptor
argument_list|>
argument_list|()
block|{
specifier|public
name|StorageDescriptor
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|StorageDescriptor
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|StorageDescriptor
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
interface|interface
name|OrderOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required string column_name = 1;
comment|/**        *<code>required string column_name = 1;</code>        */
name|boolean
name|hasColumnName
parameter_list|()
function_decl|;
comment|/**        *<code>required string column_name = 1;</code>        */
name|java
operator|.
name|lang
operator|.
name|String
name|getColumnName
parameter_list|()
function_decl|;
comment|/**        *<code>required string column_name = 1;</code>        */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getColumnNameBytes
parameter_list|()
function_decl|;
comment|// optional sint32 order = 2 [default = 1];
comment|/**        *<code>optional sint32 order = 2 [default = 1];</code>        */
name|boolean
name|hasOrder
parameter_list|()
function_decl|;
comment|/**        *<code>optional sint32 order = 2 [default = 1];</code>        */
name|int
name|getOrder
parameter_list|()
function_decl|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order}      */
specifier|public
specifier|static
specifier|final
class|class
name|Order
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|OrderOrBuilder
block|{
comment|// Use Order.newBuilder() to construct.
specifier|private
name|Order
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Order
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|Order
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|Order
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|Order
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|Order
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|columnName_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|order_
operator|=
name|input
operator|.
name|readSInt32
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_Order_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_Order_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Order
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Order
argument_list|>
argument_list|()
block|{
specifier|public
name|Order
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Order
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Order
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string column_name = 1;
specifier|public
specifier|static
specifier|final
name|int
name|COLUMN_NAME_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|columnName_
decl_stmt|;
comment|/**        *<code>required string column_name = 1;</code>        */
specifier|public
name|boolean
name|hasColumnName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>required string column_name = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getColumnName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|columnName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|columnName_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**        *<code>required string column_name = 1;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getColumnNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|columnName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|columnName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional sint32 order = 2 [default = 1];
specifier|public
specifier|static
specifier|final
name|int
name|ORDER_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|int
name|order_
decl_stmt|;
comment|/**        *<code>optional sint32 order = 2 [default = 1];</code>        */
specifier|public
name|boolean
name|hasOrder
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>optional sint32 order = 2 [default = 1];</code>        */
specifier|public
name|int
name|getOrder
parameter_list|()
block|{
return|return
name|order_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|columnName_
operator|=
literal|""
expr_stmt|;
name|order_
operator|=
literal|1
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasColumnName
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|getColumnNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeSInt32
argument_list|(
literal|2
argument_list|,
name|order_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|1
argument_list|,
name|getColumnNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeSInt32Size
argument_list|(
literal|2
argument_list|,
name|order_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**        * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order}        */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|OrderOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_Order_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_Order_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.StorageDescriptor.Order.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{           }
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|columnName_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|order_
operator|=
literal|1
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_Order_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|columnName_
operator|=
name|columnName_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|order_
operator|=
name|order_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasColumnName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|columnName_
operator|=
name|other
operator|.
name|columnName_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasOrder
argument_list|()
condition|)
block|{
name|setOrder
argument_list|(
name|other
operator|.
name|getOrder
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasColumnName
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string column_name = 1;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|columnName_
init|=
literal|""
decl_stmt|;
comment|/**          *<code>required string column_name = 1;</code>          */
specifier|public
name|boolean
name|hasColumnName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**          *<code>required string column_name = 1;</code>          */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getColumnName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|columnName_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|columnName_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**          *<code>required string column_name = 1;</code>          */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getColumnNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|columnName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|columnName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**          *<code>required string column_name = 1;</code>          */
specifier|public
name|Builder
name|setColumnName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|columnName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>required string column_name = 1;</code>          */
specifier|public
name|Builder
name|clearColumnName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|columnName_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getColumnName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>required string column_name = 1;</code>          */
specifier|public
name|Builder
name|setColumnNameBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|columnName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional sint32 order = 2 [default = 1];
specifier|private
name|int
name|order_
init|=
literal|1
decl_stmt|;
comment|/**          *<code>optional sint32 order = 2 [default = 1];</code>          */
specifier|public
name|boolean
name|hasOrder
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**          *<code>optional sint32 order = 2 [default = 1];</code>          */
specifier|public
name|int
name|getOrder
parameter_list|()
block|{
return|return
name|order_
return|;
block|}
comment|/**          *<code>optional sint32 order = 2 [default = 1];</code>          */
specifier|public
name|Builder
name|setOrder
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|order_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional sint32 order = 2 [default = 1];</code>          */
specifier|public
name|Builder
name|clearOrder
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|order_
operator|=
literal|1
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|Order
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order)
block|}
specifier|public
interface|interface
name|SerDeInfoOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// optional string name = 1;
comment|/**        *<code>optional string name = 1;</code>        */
name|boolean
name|hasName
parameter_list|()
function_decl|;
comment|/**        *<code>optional string name = 1;</code>        */
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
function_decl|;
comment|/**        *<code>optional string name = 1;</code>        */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
function_decl|;
comment|// optional string serialization_lib = 2;
comment|/**        *<code>optional string serialization_lib = 2;</code>        */
name|boolean
name|hasSerializationLib
parameter_list|()
function_decl|;
comment|/**        *<code>optional string serialization_lib = 2;</code>        */
name|java
operator|.
name|lang
operator|.
name|String
name|getSerializationLib
parameter_list|()
function_decl|;
comment|/**        *<code>optional string serialization_lib = 2;</code>        */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSerializationLibBytes
parameter_list|()
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>        */
name|boolean
name|hasParameters
parameter_list|()
function_decl|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>        */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getParameters
parameter_list|()
function_decl|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>        */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
name|getParametersOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SerDeInfo}      */
specifier|public
specifier|static
specifier|final
class|class
name|SerDeInfo
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|SerDeInfoOrBuilder
block|{
comment|// Use SerDeInfo.newBuilder() to construct.
specifier|private
name|SerDeInfo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|SerDeInfo
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|SerDeInfo
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|SerDeInfo
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|SerDeInfo
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|SerDeInfo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|serializationLib_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|parameters_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|parameters_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|parameters_
argument_list|)
expr_stmt|;
name|parameters_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SerDeInfo_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SerDeInfo_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|SerDeInfo
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|SerDeInfo
argument_list|>
argument_list|()
block|{
specifier|public
name|SerDeInfo
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|SerDeInfo
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|SerDeInfo
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional string name = 1;
specifier|public
specifier|static
specifier|final
name|int
name|NAME_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
decl_stmt|;
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|name_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|name_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional string serialization_lib = 2;
specifier|public
specifier|static
specifier|final
name|int
name|SERIALIZATION_LIB_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|serializationLib_
decl_stmt|;
comment|/**        *<code>optional string serialization_lib = 2;</code>        */
specifier|public
name|boolean
name|hasSerializationLib
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>optional string serialization_lib = 2;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getSerializationLib
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|serializationLib_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|serializationLib_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**        *<code>optional string serialization_lib = 2;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSerializationLibBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|serializationLib_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|serializationLib_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;
specifier|public
specifier|static
specifier|final
name|int
name|PARAMETERS_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|parameters_
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>        */
specifier|public
name|boolean
name|hasParameters
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getParameters
parameter_list|()
block|{
return|return
name|parameters_
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
name|getParametersOrBuilder
parameter_list|()
block|{
return|return
name|parameters_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|name_
operator|=
literal|""
expr_stmt|;
name|serializationLib_
operator|=
literal|""
expr_stmt|;
name|parameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
name|hasParameters
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getParameters
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|getNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|2
argument_list|,
name|getSerializationLibBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|3
argument_list|,
name|parameters_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|1
argument_list|,
name|getNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|2
argument_list|,
name|getSerializationLibBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|3
argument_list|,
name|parameters_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**        * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SerDeInfo}        */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfoOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SerDeInfo_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SerDeInfo_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.StorageDescriptor.SerDeInfo.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getParametersFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|name_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|serializationLib_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|parameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SerDeInfo_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|name_
operator|=
name|name_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|serializationLib_
operator|=
name|serializationLib_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|parameters_
operator|=
name|parameters_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|parameters_
operator|=
name|parametersBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|other
operator|.
name|name_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasSerializationLib
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|serializationLib_
operator|=
name|other
operator|.
name|serializationLib_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasParameters
argument_list|()
condition|)
block|{
name|mergeParameters
argument_list|(
name|other
operator|.
name|getParameters
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
name|hasParameters
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getParameters
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional string name = 1;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
init|=
literal|""
decl_stmt|;
comment|/**          *<code>optional string name = 1;</code>          */
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**          *<code>optional string name = 1;</code>          */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|name_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**          *<code>optional string name = 1;</code>          */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|name_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**          *<code>optional string name = 1;</code>          */
specifier|public
name|Builder
name|setName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional string name = 1;</code>          */
specifier|public
name|Builder
name|clearName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|name_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional string name = 1;</code>          */
specifier|public
name|Builder
name|setNameBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional string serialization_lib = 2;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|serializationLib_
init|=
literal|""
decl_stmt|;
comment|/**          *<code>optional string serialization_lib = 2;</code>          */
specifier|public
name|boolean
name|hasSerializationLib
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**          *<code>optional string serialization_lib = 2;</code>          */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getSerializationLib
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|serializationLib_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|serializationLib_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**          *<code>optional string serialization_lib = 2;</code>          */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSerializationLibBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|serializationLib_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|serializationLib_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**          *<code>optional string serialization_lib = 2;</code>          */
specifier|public
name|Builder
name|setSerializationLib
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|serializationLib_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional string serialization_lib = 2;</code>          */
specifier|public
name|Builder
name|clearSerializationLib
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|serializationLib_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getSerializationLib
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional string serialization_lib = 2;</code>          */
specifier|public
name|Builder
name|setSerializationLibBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|serializationLib_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|parameters_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
argument_list|>
name|parametersBuilder_
decl_stmt|;
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>          */
specifier|public
name|boolean
name|hasParameters
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getParameters
parameter_list|()
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|parameters_
return|;
block|}
else|else
block|{
return|return
name|parametersBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>          */
specifier|public
name|Builder
name|setParameters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|value
parameter_list|)
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|parameters_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>          */
specifier|public
name|Builder
name|setParameters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|parameters_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>          */
specifier|public
name|Builder
name|mergeParameters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|value
parameter_list|)
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
operator|&&
name|parameters_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|parameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|newBuilder
argument_list|(
name|parameters_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parameters_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>          */
specifier|public
name|Builder
name|clearParameters
parameter_list|()
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|parameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
name|getParametersBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getParametersFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
name|getParametersOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|parametersBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|parametersBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|parameters_
return|;
block|}
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 3;</code>          */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
argument_list|>
name|getParametersFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|parametersBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
argument_list|>
argument_list|(
name|parameters_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|parameters_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|parametersBuilder_
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SerDeInfo)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|SerDeInfo
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SerDeInfo)
block|}
specifier|public
interface|interface
name|SkewedInfoOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// repeated string skewed_col_names = 1;
comment|/**        *<code>repeated string skewed_col_names = 1;</code>        */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|getSkewedColNamesList
parameter_list|()
function_decl|;
comment|/**        *<code>repeated string skewed_col_names = 1;</code>        */
name|int
name|getSkewedColNamesCount
parameter_list|()
function_decl|;
comment|/**        *<code>repeated string skewed_col_names = 1;</code>        */
name|java
operator|.
name|lang
operator|.
name|String
name|getSkewedColNames
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**        *<code>repeated string skewed_col_names = 1;</code>        */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSkewedColNamesBytes
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>        */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
argument_list|>
name|getSkewedColValuesList
parameter_list|()
function_decl|;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>        */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
name|getSkewedColValues
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>        */
name|int
name|getSkewedColValuesCount
parameter_list|()
function_decl|;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>        */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueListOrBuilder
argument_list|>
name|getSkewedColValuesOrBuilderList
parameter_list|()
function_decl|;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>        */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueListOrBuilder
name|getSkewedColValuesOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>        */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
argument_list|>
name|getSkewedColValueLocationMapsList
parameter_list|()
function_decl|;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>        */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
name|getSkewedColValueLocationMaps
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>        */
name|int
name|getSkewedColValueLocationMapsCount
parameter_list|()
function_decl|;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>        */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMapOrBuilder
argument_list|>
name|getSkewedColValueLocationMapsOrBuilderList
parameter_list|()
function_decl|;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>        */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMapOrBuilder
name|getSkewedColValueLocationMapsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo}      */
specifier|public
specifier|static
specifier|final
class|class
name|SkewedInfo
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|SkewedInfoOrBuilder
block|{
comment|// Use SkewedInfo.newBuilder() to construct.
specifier|private
name|SkewedInfo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|SkewedInfo
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|SkewedInfo
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|SkewedInfo
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|SkewedInfo
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|SkewedInfo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|skewedColNames_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|skewedColNames_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readBytes
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|skewedColValues_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|skewedColValues_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|skewedColValueLocationMaps_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|skewedColValueLocationMaps_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|skewedColNames_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnmodifiableLazyStringList
argument_list|(
name|skewedColNames_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|skewedColValues_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|skewedColValues_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|skewedColValueLocationMaps_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|skewedColValueLocationMaps_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|SkewedInfo
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|SkewedInfo
argument_list|>
argument_list|()
block|{
specifier|public
name|SkewedInfo
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|SkewedInfo
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|SkewedInfo
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
interface|interface
name|SkewedColValueListOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// repeated string skewed_col_value = 1;
comment|/**          *<code>repeated string skewed_col_value = 1;</code>          */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|getSkewedColValueList
parameter_list|()
function_decl|;
comment|/**          *<code>repeated string skewed_col_value = 1;</code>          */
name|int
name|getSkewedColValueCount
parameter_list|()
function_decl|;
comment|/**          *<code>repeated string skewed_col_value = 1;</code>          */
name|java
operator|.
name|lang
operator|.
name|String
name|getSkewedColValue
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**          *<code>repeated string skewed_col_value = 1;</code>          */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSkewedColValueBytes
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**        * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList}        */
specifier|public
specifier|static
specifier|final
class|class
name|SkewedColValueList
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|SkewedColValueListOrBuilder
block|{
comment|// Use SkewedColValueList.newBuilder() to construct.
specifier|private
name|SkewedColValueList
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|SkewedColValueList
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|SkewedColValueList
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|SkewedColValueList
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|SkewedColValueList
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|SkewedColValueList
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|skewedColValue_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|skewedColValue_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readBytes
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|skewedColValue_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnmodifiableLazyStringList
argument_list|(
name|skewedColValue_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueList_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueList_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|SkewedColValueList
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|SkewedColValueList
argument_list|>
argument_list|()
block|{
specifier|public
name|SkewedColValueList
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|SkewedColValueList
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|SkewedColValueList
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
comment|// repeated string skewed_col_value = 1;
specifier|public
specifier|static
specifier|final
name|int
name|SKEWED_COL_VALUE_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringList
name|skewedColValue_
decl_stmt|;
comment|/**          *<code>repeated string skewed_col_value = 1;</code>          */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|getSkewedColValueList
parameter_list|()
block|{
return|return
name|skewedColValue_
return|;
block|}
comment|/**          *<code>repeated string skewed_col_value = 1;</code>          */
specifier|public
name|int
name|getSkewedColValueCount
parameter_list|()
block|{
return|return
name|skewedColValue_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**          *<code>repeated string skewed_col_value = 1;</code>          */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getSkewedColValue
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|skewedColValue_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**          *<code>repeated string skewed_col_value = 1;</code>          */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSkewedColValueBytes
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|skewedColValue_
operator|.
name|getByteString
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|skewedColValue_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|skewedColValue_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|skewedColValue_
operator|.
name|getByteString
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
block|{
name|int
name|dataSize
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|skewedColValue_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|dataSize
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSizeNoTag
argument_list|(
name|skewedColValue_
operator|.
name|getByteString
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|dataSize
expr_stmt|;
name|size
operator|+=
literal|1
operator|*
name|getSkewedColValueList
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**          * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList}          */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueListOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueList_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueList_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.StorageDescriptor.SkewedInfo.SkewedColValueList.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{             }
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|skewedColValue_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueList_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|skewedColValue_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnmodifiableLazyStringList
argument_list|(
name|skewedColValue_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|skewedColValue_
operator|=
name|skewedColValue_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
operator|!
name|other
operator|.
name|skewedColValue_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|skewedColValue_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|skewedColValue_
operator|=
name|other
operator|.
name|skewedColValue_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureSkewedColValueIsMutable
argument_list|()
expr_stmt|;
name|skewedColValue_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|skewedColValue_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// repeated string skewed_col_value = 1;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringList
name|skewedColValue_
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
decl_stmt|;
specifier|private
name|void
name|ensureSkewedColValueIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|skewedColValue_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
argument_list|(
name|skewedColValue_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
block|}
comment|/**            *<code>repeated string skewed_col_value = 1;</code>            */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|getSkewedColValueList
parameter_list|()
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|skewedColValue_
argument_list|)
return|;
block|}
comment|/**            *<code>repeated string skewed_col_value = 1;</code>            */
specifier|public
name|int
name|getSkewedColValueCount
parameter_list|()
block|{
return|return
name|skewedColValue_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**            *<code>repeated string skewed_col_value = 1;</code>            */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getSkewedColValue
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|skewedColValue_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**            *<code>repeated string skewed_col_value = 1;</code>            */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSkewedColValueBytes
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|skewedColValue_
operator|.
name|getByteString
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**            *<code>repeated string skewed_col_value = 1;</code>            */
specifier|public
name|Builder
name|setSkewedColValue
parameter_list|(
name|int
name|index
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureSkewedColValueIsMutable
argument_list|()
expr_stmt|;
name|skewedColValue_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**            *<code>repeated string skewed_col_value = 1;</code>            */
specifier|public
name|Builder
name|addSkewedColValue
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureSkewedColValueIsMutable
argument_list|()
expr_stmt|;
name|skewedColValue_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**            *<code>repeated string skewed_col_value = 1;</code>            */
specifier|public
name|Builder
name|addAllSkewedColValue
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|ensureSkewedColValueIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|skewedColValue_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**            *<code>repeated string skewed_col_value = 1;</code>            */
specifier|public
name|Builder
name|clearSkewedColValue
parameter_list|()
block|{
name|skewedColValue_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**            *<code>repeated string skewed_col_value = 1;</code>            */
specifier|public
name|Builder
name|addSkewedColValueBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureSkewedColValueIsMutable
argument_list|()
expr_stmt|;
name|skewedColValue_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|SkewedColValueList
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList)
block|}
specifier|public
interface|interface
name|SkewedColValueLocationMapOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// repeated string key = 1;
comment|/**          *<code>repeated string key = 1;</code>          */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|getKeyList
parameter_list|()
function_decl|;
comment|/**          *<code>repeated string key = 1;</code>          */
name|int
name|getKeyCount
parameter_list|()
function_decl|;
comment|/**          *<code>repeated string key = 1;</code>          */
name|java
operator|.
name|lang
operator|.
name|String
name|getKey
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**          *<code>repeated string key = 1;</code>          */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getKeyBytes
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|// required string value = 2;
comment|/**          *<code>required string value = 2;</code>          */
name|boolean
name|hasValue
parameter_list|()
function_decl|;
comment|/**          *<code>required string value = 2;</code>          */
name|java
operator|.
name|lang
operator|.
name|String
name|getValue
parameter_list|()
function_decl|;
comment|/**          *<code>required string value = 2;</code>          */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getValueBytes
parameter_list|()
function_decl|;
block|}
comment|/**        * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap}        */
specifier|public
specifier|static
specifier|final
class|class
name|SkewedColValueLocationMap
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|SkewedColValueLocationMapOrBuilder
block|{
comment|// Use SkewedColValueLocationMap.newBuilder() to construct.
specifier|private
name|SkewedColValueLocationMap
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|SkewedColValueLocationMap
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|SkewedColValueLocationMap
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|SkewedColValueLocationMap
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|SkewedColValueLocationMap
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|SkewedColValueLocationMap
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|key_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|key_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readBytes
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|value_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|key_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnmodifiableLazyStringList
argument_list|(
name|key_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueLocationMap_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueLocationMap_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|SkewedColValueLocationMap
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|SkewedColValueLocationMap
argument_list|>
argument_list|()
block|{
specifier|public
name|SkewedColValueLocationMap
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|SkewedColValueLocationMap
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|SkewedColValueLocationMap
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// repeated string key = 1;
specifier|public
specifier|static
specifier|final
name|int
name|KEY_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringList
name|key_
decl_stmt|;
comment|/**          *<code>repeated string key = 1;</code>          */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|getKeyList
parameter_list|()
block|{
return|return
name|key_
return|;
block|}
comment|/**          *<code>repeated string key = 1;</code>          */
specifier|public
name|int
name|getKeyCount
parameter_list|()
block|{
return|return
name|key_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**          *<code>repeated string key = 1;</code>          */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getKey
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|key_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**          *<code>repeated string key = 1;</code>          */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getKeyBytes
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|key_
operator|.
name|getByteString
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|// required string value = 2;
specifier|public
specifier|static
specifier|final
name|int
name|VALUE_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|value_
decl_stmt|;
comment|/**          *<code>required string value = 2;</code>          */
specifier|public
name|boolean
name|hasValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**          *<code>required string value = 2;</code>          */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getValue
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|value_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|value_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**          *<code>required string value = 2;</code>          */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getValueBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|value_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|value_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|key_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|value_
operator|=
literal|""
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasValue
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|key_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|key_
operator|.
name|getByteString
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|2
argument_list|,
name|getValueBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
block|{
name|int
name|dataSize
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|key_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|dataSize
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSizeNoTag
argument_list|(
name|key_
operator|.
name|getByteString
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|dataSize
expr_stmt|;
name|size
operator|+=
literal|1
operator|*
name|getKeyList
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|2
argument_list|,
name|getValueBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**          * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap}          */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMapOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueLocationMap_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueLocationMap_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{             }
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|key_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|value_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueLocationMap_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|key_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnmodifiableLazyStringList
argument_list|(
name|key_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|key_
operator|=
name|key_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|value_
operator|=
name|value_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
operator|!
name|other
operator|.
name|key_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|key_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|key_
operator|=
name|other
operator|.
name|key_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureKeyIsMutable
argument_list|()
expr_stmt|;
name|key_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|key_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasValue
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|value_
operator|=
name|other
operator|.
name|value_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasValue
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// repeated string key = 1;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringList
name|key_
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
decl_stmt|;
specifier|private
name|void
name|ensureKeyIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|key_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
argument_list|(
name|key_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
block|}
comment|/**            *<code>repeated string key = 1;</code>            */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|getKeyList
parameter_list|()
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|key_
argument_list|)
return|;
block|}
comment|/**            *<code>repeated string key = 1;</code>            */
specifier|public
name|int
name|getKeyCount
parameter_list|()
block|{
return|return
name|key_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**            *<code>repeated string key = 1;</code>            */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getKey
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|key_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**            *<code>repeated string key = 1;</code>            */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getKeyBytes
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|key_
operator|.
name|getByteString
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**            *<code>repeated string key = 1;</code>            */
specifier|public
name|Builder
name|setKey
parameter_list|(
name|int
name|index
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureKeyIsMutable
argument_list|()
expr_stmt|;
name|key_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**            *<code>repeated string key = 1;</code>            */
specifier|public
name|Builder
name|addKey
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureKeyIsMutable
argument_list|()
expr_stmt|;
name|key_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**            *<code>repeated string key = 1;</code>            */
specifier|public
name|Builder
name|addAllKey
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|ensureKeyIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|key_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**            *<code>repeated string key = 1;</code>            */
specifier|public
name|Builder
name|clearKey
parameter_list|()
block|{
name|key_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**            *<code>repeated string key = 1;</code>            */
specifier|public
name|Builder
name|addKeyBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureKeyIsMutable
argument_list|()
expr_stmt|;
name|key_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// required string value = 2;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|value_
init|=
literal|""
decl_stmt|;
comment|/**            *<code>required string value = 2;</code>            */
specifier|public
name|boolean
name|hasValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**            *<code>required string value = 2;</code>            */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getValue
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|value_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|value_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**            *<code>required string value = 2;</code>            */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getValueBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|value_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|value_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**            *<code>required string value = 2;</code>            */
specifier|public
name|Builder
name|setValue
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|value_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**            *<code>required string value = 2;</code>            */
specifier|public
name|Builder
name|clearValue
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|value_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getValue
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**            *<code>required string value = 2;</code>            */
specifier|public
name|Builder
name|setValueBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|value_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|SkewedColValueLocationMap
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap)
block|}
comment|// repeated string skewed_col_names = 1;
specifier|public
specifier|static
specifier|final
name|int
name|SKEWED_COL_NAMES_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringList
name|skewedColNames_
decl_stmt|;
comment|/**        *<code>repeated string skewed_col_names = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|getSkewedColNamesList
parameter_list|()
block|{
return|return
name|skewedColNames_
return|;
block|}
comment|/**        *<code>repeated string skewed_col_names = 1;</code>        */
specifier|public
name|int
name|getSkewedColNamesCount
parameter_list|()
block|{
return|return
name|skewedColNames_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**        *<code>repeated string skewed_col_names = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getSkewedColNames
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|skewedColNames_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated string skewed_col_names = 1;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSkewedColNamesBytes
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|skewedColNames_
operator|.
name|getByteString
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;
specifier|public
specifier|static
specifier|final
name|int
name|SKEWED_COL_VALUES_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
argument_list|>
name|skewedColValues_
decl_stmt|;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
argument_list|>
name|getSkewedColValuesList
parameter_list|()
block|{
return|return
name|skewedColValues_
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueListOrBuilder
argument_list|>
name|getSkewedColValuesOrBuilderList
parameter_list|()
block|{
return|return
name|skewedColValues_
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>        */
specifier|public
name|int
name|getSkewedColValuesCount
parameter_list|()
block|{
return|return
name|skewedColValues_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
name|getSkewedColValues
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|skewedColValues_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueListOrBuilder
name|getSkewedColValuesOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|skewedColValues_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;
specifier|public
specifier|static
specifier|final
name|int
name|SKEWED_COL_VALUE_LOCATION_MAPS_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
argument_list|>
name|skewedColValueLocationMaps_
decl_stmt|;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
argument_list|>
name|getSkewedColValueLocationMapsList
parameter_list|()
block|{
return|return
name|skewedColValueLocationMaps_
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMapOrBuilder
argument_list|>
name|getSkewedColValueLocationMapsOrBuilderList
parameter_list|()
block|{
return|return
name|skewedColValueLocationMaps_
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>        */
specifier|public
name|int
name|getSkewedColValueLocationMapsCount
parameter_list|()
block|{
return|return
name|skewedColValueLocationMaps_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
name|getSkewedColValueLocationMaps
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|skewedColValueLocationMaps_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMapOrBuilder
name|getSkewedColValueLocationMapsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|skewedColValueLocationMaps_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|skewedColNames_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|skewedColValues_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|skewedColValueLocationMaps_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getSkewedColValueLocationMapsCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getSkewedColValueLocationMaps
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|skewedColNames_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|skewedColNames_
operator|.
name|getByteString
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|skewedColValues_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|skewedColValues_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|skewedColValueLocationMaps_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|3
argument_list|,
name|skewedColValueLocationMaps_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
block|{
name|int
name|dataSize
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|skewedColNames_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|dataSize
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSizeNoTag
argument_list|(
name|skewedColNames_
operator|.
name|getByteString
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|dataSize
expr_stmt|;
name|size
operator|+=
literal|1
operator|*
name|getSkewedColNamesList
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|skewedColValues_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|skewedColValues_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|skewedColValueLocationMaps_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|3
argument_list|,
name|skewedColValueLocationMaps_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**        * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo}        */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfoOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.StorageDescriptor.SkewedInfo.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getSkewedColValuesFieldBuilder
argument_list|()
expr_stmt|;
name|getSkewedColValueLocationMapsFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|skewedColNames_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
if|if
condition|(
name|skewedColValuesBuilder_
operator|==
literal|null
condition|)
block|{
name|skewedColValues_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|skewedColValuesBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|skewedColValueLocationMapsBuilder_
operator|==
literal|null
condition|)
block|{
name|skewedColValueLocationMaps_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
else|else
block|{
name|skewedColValueLocationMapsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|skewedColNames_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnmodifiableLazyStringList
argument_list|(
name|skewedColNames_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|skewedColNames_
operator|=
name|skewedColNames_
expr_stmt|;
if|if
condition|(
name|skewedColValuesBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|skewedColValues_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|skewedColValues_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|skewedColValues_
operator|=
name|skewedColValues_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|skewedColValues_
operator|=
name|skewedColValuesBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|skewedColValueLocationMapsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|skewedColValueLocationMaps_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|skewedColValueLocationMaps_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|skewedColValueLocationMaps_
operator|=
name|skewedColValueLocationMaps_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|skewedColValueLocationMaps_
operator|=
name|skewedColValueLocationMapsBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
operator|!
name|other
operator|.
name|skewedColNames_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|skewedColNames_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|skewedColNames_
operator|=
name|other
operator|.
name|skewedColNames_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureSkewedColNamesIsMutable
argument_list|()
expr_stmt|;
name|skewedColNames_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|skewedColNames_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|skewedColValuesBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|skewedColValues_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|skewedColValues_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|skewedColValues_
operator|=
name|other
operator|.
name|skewedColValues_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureSkewedColValuesIsMutable
argument_list|()
expr_stmt|;
name|skewedColValues_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|skewedColValues_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|skewedColValues_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|skewedColValuesBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|skewedColValuesBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|skewedColValuesBuilder_
operator|=
literal|null
expr_stmt|;
name|skewedColValues_
operator|=
name|other
operator|.
name|skewedColValues_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|skewedColValuesBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getSkewedColValuesFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|skewedColValuesBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|skewedColValues_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|skewedColValueLocationMapsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|skewedColValueLocationMaps_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|skewedColValueLocationMaps_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|skewedColValueLocationMaps_
operator|=
name|other
operator|.
name|skewedColValueLocationMaps_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureSkewedColValueLocationMapsIsMutable
argument_list|()
expr_stmt|;
name|skewedColValueLocationMaps_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|skewedColValueLocationMaps_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|skewedColValueLocationMaps_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|skewedColValueLocationMapsBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|skewedColValueLocationMapsBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|skewedColValueLocationMapsBuilder_
operator|=
literal|null
expr_stmt|;
name|skewedColValueLocationMaps_
operator|=
name|other
operator|.
name|skewedColValueLocationMaps_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|skewedColValueLocationMapsBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getSkewedColValueLocationMapsFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|skewedColValueLocationMapsBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|skewedColValueLocationMaps_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getSkewedColValueLocationMapsCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getSkewedColValueLocationMaps
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// repeated string skewed_col_names = 1;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringList
name|skewedColNames_
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
decl_stmt|;
specifier|private
name|void
name|ensureSkewedColNamesIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|skewedColNames_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
argument_list|(
name|skewedColNames_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
block|}
comment|/**          *<code>repeated string skewed_col_names = 1;</code>          */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|getSkewedColNamesList
parameter_list|()
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|skewedColNames_
argument_list|)
return|;
block|}
comment|/**          *<code>repeated string skewed_col_names = 1;</code>          */
specifier|public
name|int
name|getSkewedColNamesCount
parameter_list|()
block|{
return|return
name|skewedColNames_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**          *<code>repeated string skewed_col_names = 1;</code>          */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getSkewedColNames
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|skewedColNames_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**          *<code>repeated string skewed_col_names = 1;</code>          */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSkewedColNamesBytes
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|skewedColNames_
operator|.
name|getByteString
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**          *<code>repeated string skewed_col_names = 1;</code>          */
specifier|public
name|Builder
name|setSkewedColNames
parameter_list|(
name|int
name|index
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureSkewedColNamesIsMutable
argument_list|()
expr_stmt|;
name|skewedColNames_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated string skewed_col_names = 1;</code>          */
specifier|public
name|Builder
name|addSkewedColNames
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureSkewedColNamesIsMutable
argument_list|()
expr_stmt|;
name|skewedColNames_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated string skewed_col_names = 1;</code>          */
specifier|public
name|Builder
name|addAllSkewedColNames
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|ensureSkewedColNamesIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|skewedColNames_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated string skewed_col_names = 1;</code>          */
specifier|public
name|Builder
name|clearSkewedColNames
parameter_list|()
block|{
name|skewedColNames_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated string skewed_col_names = 1;</code>          */
specifier|public
name|Builder
name|addSkewedColNamesBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureSkewedColNamesIsMutable
argument_list|()
expr_stmt|;
name|skewedColNames_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
argument_list|>
name|skewedColValues_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureSkewedColValuesIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|skewedColValues_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
argument_list|>
argument_list|(
name|skewedColValues_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueListOrBuilder
argument_list|>
name|skewedColValuesBuilder_
decl_stmt|;
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>          */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
argument_list|>
name|getSkewedColValuesList
parameter_list|()
block|{
if|if
condition|(
name|skewedColValuesBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|skewedColValues_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|skewedColValuesBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>          */
specifier|public
name|int
name|getSkewedColValuesCount
parameter_list|()
block|{
if|if
condition|(
name|skewedColValuesBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|skewedColValues_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|skewedColValuesBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
name|getSkewedColValues
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|skewedColValuesBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|skewedColValues_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|skewedColValuesBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>          */
specifier|public
name|Builder
name|setSkewedColValues
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
name|value
parameter_list|)
block|{
if|if
condition|(
name|skewedColValuesBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureSkewedColValuesIsMutable
argument_list|()
expr_stmt|;
name|skewedColValues_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|skewedColValuesBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>          */
specifier|public
name|Builder
name|setSkewedColValues
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|skewedColValuesBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSkewedColValuesIsMutable
argument_list|()
expr_stmt|;
name|skewedColValues_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|skewedColValuesBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>          */
specifier|public
name|Builder
name|addSkewedColValues
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
name|value
parameter_list|)
block|{
if|if
condition|(
name|skewedColValuesBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureSkewedColValuesIsMutable
argument_list|()
expr_stmt|;
name|skewedColValues_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|skewedColValuesBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>          */
specifier|public
name|Builder
name|addSkewedColValues
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
name|value
parameter_list|)
block|{
if|if
condition|(
name|skewedColValuesBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureSkewedColValuesIsMutable
argument_list|()
expr_stmt|;
name|skewedColValues_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|skewedColValuesBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>          */
specifier|public
name|Builder
name|addSkewedColValues
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|skewedColValuesBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSkewedColValuesIsMutable
argument_list|()
expr_stmt|;
name|skewedColValues_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|skewedColValuesBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>          */
specifier|public
name|Builder
name|addSkewedColValues
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|skewedColValuesBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSkewedColValuesIsMutable
argument_list|()
expr_stmt|;
name|skewedColValues_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|skewedColValuesBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>          */
specifier|public
name|Builder
name|addAllSkewedColValues
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|skewedColValuesBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSkewedColValuesIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|skewedColValues_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|skewedColValuesBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>          */
specifier|public
name|Builder
name|clearSkewedColValues
parameter_list|()
block|{
if|if
condition|(
name|skewedColValuesBuilder_
operator|==
literal|null
condition|)
block|{
name|skewedColValues_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|skewedColValuesBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>          */
specifier|public
name|Builder
name|removeSkewedColValues
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|skewedColValuesBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSkewedColValuesIsMutable
argument_list|()
expr_stmt|;
name|skewedColValues_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|skewedColValuesBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
operator|.
name|Builder
name|getSkewedColValuesBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getSkewedColValuesFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueListOrBuilder
name|getSkewedColValuesOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|skewedColValuesBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|skewedColValues_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|skewedColValuesBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>          */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueListOrBuilder
argument_list|>
name|getSkewedColValuesOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|skewedColValuesBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|skewedColValuesBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|skewedColValues_
argument_list|)
return|;
block|}
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
operator|.
name|Builder
name|addSkewedColValuesBuilder
parameter_list|()
block|{
return|return
name|getSkewedColValuesFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
operator|.
name|Builder
name|addSkewedColValuesBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getSkewedColValuesFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueList skewed_col_values = 2;</code>          */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
operator|.
name|Builder
argument_list|>
name|getSkewedColValuesBuilderList
parameter_list|()
block|{
return|return
name|getSkewedColValuesFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueListOrBuilder
argument_list|>
name|getSkewedColValuesFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|skewedColValuesBuilder_
operator|==
literal|null
condition|)
block|{
name|skewedColValuesBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueList
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueListOrBuilder
argument_list|>
argument_list|(
name|skewedColValues_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|skewedColValues_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|skewedColValuesBuilder_
return|;
block|}
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
argument_list|>
name|skewedColValueLocationMaps_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureSkewedColValueLocationMapsIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|skewedColValueLocationMaps_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
argument_list|>
argument_list|(
name|skewedColValueLocationMaps_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMapOrBuilder
argument_list|>
name|skewedColValueLocationMapsBuilder_
decl_stmt|;
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>          */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
argument_list|>
name|getSkewedColValueLocationMapsList
parameter_list|()
block|{
if|if
condition|(
name|skewedColValueLocationMapsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|skewedColValueLocationMaps_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|skewedColValueLocationMapsBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>          */
specifier|public
name|int
name|getSkewedColValueLocationMapsCount
parameter_list|()
block|{
if|if
condition|(
name|skewedColValueLocationMapsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|skewedColValueLocationMaps_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|skewedColValueLocationMapsBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
name|getSkewedColValueLocationMaps
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|skewedColValueLocationMapsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|skewedColValueLocationMaps_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|skewedColValueLocationMapsBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>          */
specifier|public
name|Builder
name|setSkewedColValueLocationMaps
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
name|value
parameter_list|)
block|{
if|if
condition|(
name|skewedColValueLocationMapsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureSkewedColValueLocationMapsIsMutable
argument_list|()
expr_stmt|;
name|skewedColValueLocationMaps_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|skewedColValueLocationMapsBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>          */
specifier|public
name|Builder
name|setSkewedColValueLocationMaps
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|skewedColValueLocationMapsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSkewedColValueLocationMapsIsMutable
argument_list|()
expr_stmt|;
name|skewedColValueLocationMaps_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|skewedColValueLocationMapsBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>          */
specifier|public
name|Builder
name|addSkewedColValueLocationMaps
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
name|value
parameter_list|)
block|{
if|if
condition|(
name|skewedColValueLocationMapsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureSkewedColValueLocationMapsIsMutable
argument_list|()
expr_stmt|;
name|skewedColValueLocationMaps_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|skewedColValueLocationMapsBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>          */
specifier|public
name|Builder
name|addSkewedColValueLocationMaps
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
name|value
parameter_list|)
block|{
if|if
condition|(
name|skewedColValueLocationMapsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureSkewedColValueLocationMapsIsMutable
argument_list|()
expr_stmt|;
name|skewedColValueLocationMaps_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|skewedColValueLocationMapsBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>          */
specifier|public
name|Builder
name|addSkewedColValueLocationMaps
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|skewedColValueLocationMapsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSkewedColValueLocationMapsIsMutable
argument_list|()
expr_stmt|;
name|skewedColValueLocationMaps_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|skewedColValueLocationMapsBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>          */
specifier|public
name|Builder
name|addSkewedColValueLocationMaps
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|skewedColValueLocationMapsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSkewedColValueLocationMapsIsMutable
argument_list|()
expr_stmt|;
name|skewedColValueLocationMaps_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|skewedColValueLocationMapsBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>          */
specifier|public
name|Builder
name|addAllSkewedColValueLocationMaps
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|skewedColValueLocationMapsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSkewedColValueLocationMapsIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|skewedColValueLocationMaps_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|skewedColValueLocationMapsBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>          */
specifier|public
name|Builder
name|clearSkewedColValueLocationMaps
parameter_list|()
block|{
if|if
condition|(
name|skewedColValueLocationMapsBuilder_
operator|==
literal|null
condition|)
block|{
name|skewedColValueLocationMaps_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|skewedColValueLocationMapsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>          */
specifier|public
name|Builder
name|removeSkewedColValueLocationMaps
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|skewedColValueLocationMapsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSkewedColValueLocationMapsIsMutable
argument_list|()
expr_stmt|;
name|skewedColValueLocationMaps_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|skewedColValueLocationMapsBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
operator|.
name|Builder
name|getSkewedColValueLocationMapsBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getSkewedColValueLocationMapsFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMapOrBuilder
name|getSkewedColValueLocationMapsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|skewedColValueLocationMapsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|skewedColValueLocationMaps_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|skewedColValueLocationMapsBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>          */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMapOrBuilder
argument_list|>
name|getSkewedColValueLocationMapsOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|skewedColValueLocationMapsBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|skewedColValueLocationMapsBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|skewedColValueLocationMaps_
argument_list|)
return|;
block|}
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
operator|.
name|Builder
name|addSkewedColValueLocationMapsBuilder
parameter_list|()
block|{
return|return
name|getSkewedColValueLocationMapsFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
operator|.
name|Builder
name|addSkewedColValueLocationMapsBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getSkewedColValueLocationMapsFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**          *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo.SkewedColValueLocationMap skewed_col_value_location_maps = 3;</code>          */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
operator|.
name|Builder
argument_list|>
name|getSkewedColValueLocationMapsBuilderList
parameter_list|()
block|{
return|return
name|getSkewedColValueLocationMapsFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMapOrBuilder
argument_list|>
name|getSkewedColValueLocationMapsFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|skewedColValueLocationMapsBuilder_
operator|==
literal|null
condition|)
block|{
name|skewedColValueLocationMapsBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMap
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|SkewedColValueLocationMapOrBuilder
argument_list|>
argument_list|(
name|skewedColValueLocationMaps_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|skewedColValueLocationMaps_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|skewedColValueLocationMapsBuilder_
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|SkewedInfo
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo)
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;
specifier|public
specifier|static
specifier|final
name|int
name|COLS_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
argument_list|>
name|cols_
decl_stmt|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
argument_list|>
name|getColsList
parameter_list|()
block|{
return|return
name|cols_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchemaOrBuilder
argument_list|>
name|getColsOrBuilderList
parameter_list|()
block|{
return|return
name|cols_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>      */
specifier|public
name|int
name|getColsCount
parameter_list|()
block|{
return|return
name|cols_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|getCols
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|cols_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchemaOrBuilder
name|getColsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|cols_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|// optional string input_format = 2;
specifier|public
specifier|static
specifier|final
name|int
name|INPUT_FORMAT_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|inputFormat_
decl_stmt|;
comment|/**      *<code>optional string input_format = 2;</code>      */
specifier|public
name|boolean
name|hasInputFormat
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>optional string input_format = 2;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getInputFormat
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|inputFormat_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|inputFormat_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string input_format = 2;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getInputFormatBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|inputFormat_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|inputFormat_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional string output_format = 3;
specifier|public
specifier|static
specifier|final
name|int
name|OUTPUT_FORMAT_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|outputFormat_
decl_stmt|;
comment|/**      *<code>optional string output_format = 3;</code>      */
specifier|public
name|boolean
name|hasOutputFormat
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>optional string output_format = 3;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getOutputFormat
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|outputFormat_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|outputFormat_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string output_format = 3;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getOutputFormatBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|outputFormat_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|outputFormat_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional bool is_compressed = 4;
specifier|public
specifier|static
specifier|final
name|int
name|IS_COMPRESSED_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|boolean
name|isCompressed_
decl_stmt|;
comment|/**      *<code>optional bool is_compressed = 4;</code>      */
specifier|public
name|boolean
name|hasIsCompressed
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<code>optional bool is_compressed = 4;</code>      */
specifier|public
name|boolean
name|getIsCompressed
parameter_list|()
block|{
return|return
name|isCompressed_
return|;
block|}
comment|// optional sint32 num_buckets = 5;
specifier|public
specifier|static
specifier|final
name|int
name|NUM_BUCKETS_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|int
name|numBuckets_
decl_stmt|;
comment|/**      *<code>optional sint32 num_buckets = 5;</code>      */
specifier|public
name|boolean
name|hasNumBuckets
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**      *<code>optional sint32 num_buckets = 5;</code>      */
specifier|public
name|int
name|getNumBuckets
parameter_list|()
block|{
return|return
name|numBuckets_
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SerDeInfo serde_info = 6;
specifier|public
specifier|static
specifier|final
name|int
name|SERDE_INFO_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|serdeInfo_
decl_stmt|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SerDeInfo serde_info = 6;</code>      */
specifier|public
name|boolean
name|hasSerdeInfo
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SerDeInfo serde_info = 6;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|getSerdeInfo
parameter_list|()
block|{
return|return
name|serdeInfo_
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SerDeInfo serde_info = 6;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfoOrBuilder
name|getSerdeInfoOrBuilder
parameter_list|()
block|{
return|return
name|serdeInfo_
return|;
block|}
comment|// repeated string bucket_cols = 7;
specifier|public
specifier|static
specifier|final
name|int
name|BUCKET_COLS_FIELD_NUMBER
init|=
literal|7
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringList
name|bucketCols_
decl_stmt|;
comment|/**      *<code>repeated string bucket_cols = 7;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|getBucketColsList
parameter_list|()
block|{
return|return
name|bucketCols_
return|;
block|}
comment|/**      *<code>repeated string bucket_cols = 7;</code>      */
specifier|public
name|int
name|getBucketColsCount
parameter_list|()
block|{
return|return
name|bucketCols_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated string bucket_cols = 7;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getBucketCols
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|bucketCols_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated string bucket_cols = 7;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getBucketColsBytes
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|bucketCols_
operator|.
name|getByteString
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;
specifier|public
specifier|static
specifier|final
name|int
name|SORT_COLS_FIELD_NUMBER
init|=
literal|8
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
argument_list|>
name|sortCols_
decl_stmt|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
argument_list|>
name|getSortColsList
parameter_list|()
block|{
return|return
name|sortCols_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|OrderOrBuilder
argument_list|>
name|getSortColsOrBuilderList
parameter_list|()
block|{
return|return
name|sortCols_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>      */
specifier|public
name|int
name|getSortColsCount
parameter_list|()
block|{
return|return
name|sortCols_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
name|getSortCols
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|sortCols_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|OrderOrBuilder
name|getSortColsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|sortCols_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo skewed_info = 9;
specifier|public
specifier|static
specifier|final
name|int
name|SKEWED_INFO_FIELD_NUMBER
init|=
literal|9
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|skewedInfo_
decl_stmt|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo skewed_info = 9;</code>      */
specifier|public
name|boolean
name|hasSkewedInfo
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo skewed_info = 9;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|getSkewedInfo
parameter_list|()
block|{
return|return
name|skewedInfo_
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo skewed_info = 9;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfoOrBuilder
name|getSkewedInfoOrBuilder
parameter_list|()
block|{
return|return
name|skewedInfo_
return|;
block|}
comment|// optional bool stored_as_sub_directories = 10;
specifier|public
specifier|static
specifier|final
name|int
name|STORED_AS_SUB_DIRECTORIES_FIELD_NUMBER
init|=
literal|10
decl_stmt|;
specifier|private
name|boolean
name|storedAsSubDirectories_
decl_stmt|;
comment|/**      *<code>optional bool stored_as_sub_directories = 10;</code>      */
specifier|public
name|boolean
name|hasStoredAsSubDirectories
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
return|;
block|}
comment|/**      *<code>optional bool stored_as_sub_directories = 10;</code>      */
specifier|public
name|boolean
name|getStoredAsSubDirectories
parameter_list|()
block|{
return|return
name|storedAsSubDirectories_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|cols_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|inputFormat_
operator|=
literal|""
expr_stmt|;
name|outputFormat_
operator|=
literal|""
expr_stmt|;
name|isCompressed_
operator|=
literal|false
expr_stmt|;
name|numBuckets_
operator|=
literal|0
expr_stmt|;
name|serdeInfo_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|bucketCols_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|sortCols_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|skewedInfo_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|storedAsSubDirectories_
operator|=
literal|false
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getColsCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getCols
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasSerdeInfo
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getSerdeInfo
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getSortColsCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getSortCols
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasSkewedInfo
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getSkewedInfo
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|cols_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|cols_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|2
argument_list|,
name|getInputFormatBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|3
argument_list|,
name|getOutputFormatBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|4
argument_list|,
name|isCompressed_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|output
operator|.
name|writeSInt32
argument_list|(
literal|5
argument_list|,
name|numBuckets_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|6
argument_list|,
name|serdeInfo_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|bucketCols_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|7
argument_list|,
name|bucketCols_
operator|.
name|getByteString
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|sortCols_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|8
argument_list|,
name|sortCols_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|9
argument_list|,
name|skewedInfo_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|10
argument_list|,
name|storedAsSubDirectories_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|cols_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|cols_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|2
argument_list|,
name|getInputFormatBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|3
argument_list|,
name|getOutputFormatBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|4
argument_list|,
name|isCompressed_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeSInt32Size
argument_list|(
literal|5
argument_list|,
name|numBuckets_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|6
argument_list|,
name|serdeInfo_
argument_list|)
expr_stmt|;
block|}
block|{
name|int
name|dataSize
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|bucketCols_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|dataSize
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSizeNoTag
argument_list|(
name|bucketCols_
operator|.
name|getByteString
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|dataSize
expr_stmt|;
name|size
operator|+=
literal|1
operator|*
name|getBucketColsList
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|sortCols_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|8
argument_list|,
name|sortCols_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|9
argument_list|,
name|skewedInfo_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|10
argument_list|,
name|storedAsSubDirectories_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.StorageDescriptor}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptorOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.StorageDescriptor.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getColsFieldBuilder
argument_list|()
expr_stmt|;
name|getSerdeInfoFieldBuilder
argument_list|()
expr_stmt|;
name|getSortColsFieldBuilder
argument_list|()
expr_stmt|;
name|getSkewedInfoFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|colsBuilder_
operator|==
literal|null
condition|)
block|{
name|cols_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|colsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|inputFormat_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|outputFormat_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|isCompressed_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|numBuckets_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
if|if
condition|(
name|serdeInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|serdeInfo_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serdeInfoBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|bucketCols_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
if|if
condition|(
name|sortColsBuilder_
operator|==
literal|null
condition|)
block|{
name|sortCols_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
block|}
else|else
block|{
name|sortColsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|skewedInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|skewedInfo_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|skewedInfoBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
name|storedAsSubDirectories_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|colsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|cols_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|cols_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|cols_
operator|=
name|cols_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|cols_
operator|=
name|colsBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|inputFormat_
operator|=
name|inputFormat_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|outputFormat_
operator|=
name|outputFormat_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|isCompressed_
operator|=
name|isCompressed_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|result
operator|.
name|numBuckets_
operator|=
name|numBuckets_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
if|if
condition|(
name|serdeInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|serdeInfo_
operator|=
name|serdeInfo_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|serdeInfo_
operator|=
name|serdeInfoBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|bucketCols_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnmodifiableLazyStringList
argument_list|(
name|bucketCols_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|bucketCols_
operator|=
name|bucketCols_
expr_stmt|;
if|if
condition|(
name|sortColsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|sortCols_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|sortCols_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|sortCols_
operator|=
name|sortCols_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|sortCols_
operator|=
name|sortColsBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
if|if
condition|(
name|skewedInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|skewedInfo_
operator|=
name|skewedInfo_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|skewedInfo_
operator|=
name|skewedInfoBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000040
expr_stmt|;
block|}
name|result
operator|.
name|storedAsSubDirectories_
operator|=
name|storedAsSubDirectories_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|colsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|cols_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|cols_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|cols_
operator|=
name|other
operator|.
name|cols_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureColsIsMutable
argument_list|()
expr_stmt|;
name|cols_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|cols_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|cols_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|colsBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|colsBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|colsBuilder_
operator|=
literal|null
expr_stmt|;
name|cols_
operator|=
name|other
operator|.
name|cols_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|colsBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getColsFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|colsBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|cols_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|other
operator|.
name|hasInputFormat
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|inputFormat_
operator|=
name|other
operator|.
name|inputFormat_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasOutputFormat
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|outputFormat_
operator|=
name|other
operator|.
name|outputFormat_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasIsCompressed
argument_list|()
condition|)
block|{
name|setIsCompressed
argument_list|(
name|other
operator|.
name|getIsCompressed
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasNumBuckets
argument_list|()
condition|)
block|{
name|setNumBuckets
argument_list|(
name|other
operator|.
name|getNumBuckets
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasSerdeInfo
argument_list|()
condition|)
block|{
name|mergeSerdeInfo
argument_list|(
name|other
operator|.
name|getSerdeInfo
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|other
operator|.
name|bucketCols_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|bucketCols_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|bucketCols_
operator|=
name|other
operator|.
name|bucketCols_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureBucketColsIsMutable
argument_list|()
expr_stmt|;
name|bucketCols_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|bucketCols_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|sortColsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|sortCols_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|sortCols_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|sortCols_
operator|=
name|other
operator|.
name|sortCols_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureSortColsIsMutable
argument_list|()
expr_stmt|;
name|sortCols_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|sortCols_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|sortCols_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|sortColsBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|sortColsBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|sortColsBuilder_
operator|=
literal|null
expr_stmt|;
name|sortCols_
operator|=
name|other
operator|.
name|sortCols_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|sortColsBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getSortColsFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|sortColsBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|sortCols_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|other
operator|.
name|hasSkewedInfo
argument_list|()
condition|)
block|{
name|mergeSkewedInfo
argument_list|(
name|other
operator|.
name|getSkewedInfo
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasStoredAsSubDirectories
argument_list|()
condition|)
block|{
name|setStoredAsSubDirectories
argument_list|(
name|other
operator|.
name|getStoredAsSubDirectories
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getColsCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getCols
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasSerdeInfo
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getSerdeInfo
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getSortColsCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getSortCols
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasSkewedInfo
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getSkewedInfo
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
argument_list|>
name|cols_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureColsIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|cols_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
argument_list|>
argument_list|(
name|cols_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchemaOrBuilder
argument_list|>
name|colsBuilder_
decl_stmt|;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
argument_list|>
name|getColsList
parameter_list|()
block|{
if|if
condition|(
name|colsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|cols_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|colsBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>        */
specifier|public
name|int
name|getColsCount
parameter_list|()
block|{
if|if
condition|(
name|colsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|cols_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|colsBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|getCols
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|colsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|cols_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|colsBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>        */
specifier|public
name|Builder
name|setCols
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|value
parameter_list|)
block|{
if|if
condition|(
name|colsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureColsIsMutable
argument_list|()
expr_stmt|;
name|cols_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|colsBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>        */
specifier|public
name|Builder
name|setCols
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|colsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureColsIsMutable
argument_list|()
expr_stmt|;
name|cols_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|colsBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>        */
specifier|public
name|Builder
name|addCols
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|value
parameter_list|)
block|{
if|if
condition|(
name|colsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureColsIsMutable
argument_list|()
expr_stmt|;
name|cols_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|colsBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>        */
specifier|public
name|Builder
name|addCols
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|value
parameter_list|)
block|{
if|if
condition|(
name|colsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureColsIsMutable
argument_list|()
expr_stmt|;
name|cols_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|colsBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>        */
specifier|public
name|Builder
name|addCols
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|colsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureColsIsMutable
argument_list|()
expr_stmt|;
name|cols_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|colsBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>        */
specifier|public
name|Builder
name|addCols
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|colsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureColsIsMutable
argument_list|()
expr_stmt|;
name|cols_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|colsBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>        */
specifier|public
name|Builder
name|addAllCols
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|colsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureColsIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|cols_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|colsBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>        */
specifier|public
name|Builder
name|clearCols
parameter_list|()
block|{
if|if
condition|(
name|colsBuilder_
operator|==
literal|null
condition|)
block|{
name|cols_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|colsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>        */
specifier|public
name|Builder
name|removeCols
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|colsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureColsIsMutable
argument_list|()
expr_stmt|;
name|cols_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|colsBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|Builder
name|getColsBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getColsFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchemaOrBuilder
name|getColsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|colsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|cols_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|colsBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchemaOrBuilder
argument_list|>
name|getColsOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|colsBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|colsBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|cols_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|Builder
name|addColsBuilder
parameter_list|()
block|{
return|return
name|getColsFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|Builder
name|addColsBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getColsFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema cols = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|Builder
argument_list|>
name|getColsBuilderList
parameter_list|()
block|{
return|return
name|getColsFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchemaOrBuilder
argument_list|>
name|getColsFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|colsBuilder_
operator|==
literal|null
condition|)
block|{
name|colsBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchemaOrBuilder
argument_list|>
argument_list|(
name|cols_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|cols_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|colsBuilder_
return|;
block|}
comment|// optional string input_format = 2;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|inputFormat_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string input_format = 2;</code>        */
specifier|public
name|boolean
name|hasInputFormat
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>optional string input_format = 2;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getInputFormat
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|inputFormat_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|inputFormat_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string input_format = 2;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getInputFormatBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|inputFormat_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|inputFormat_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string input_format = 2;</code>        */
specifier|public
name|Builder
name|setInputFormat
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|inputFormat_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string input_format = 2;</code>        */
specifier|public
name|Builder
name|clearInputFormat
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|inputFormat_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getInputFormat
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string input_format = 2;</code>        */
specifier|public
name|Builder
name|setInputFormatBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|inputFormat_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional string output_format = 3;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|outputFormat_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string output_format = 3;</code>        */
specifier|public
name|boolean
name|hasOutputFormat
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>optional string output_format = 3;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getOutputFormat
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|outputFormat_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|outputFormat_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string output_format = 3;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getOutputFormatBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|outputFormat_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|outputFormat_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string output_format = 3;</code>        */
specifier|public
name|Builder
name|setOutputFormat
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|outputFormat_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string output_format = 3;</code>        */
specifier|public
name|Builder
name|clearOutputFormat
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|outputFormat_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getOutputFormat
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string output_format = 3;</code>        */
specifier|public
name|Builder
name|setOutputFormatBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|outputFormat_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional bool is_compressed = 4;
specifier|private
name|boolean
name|isCompressed_
decl_stmt|;
comment|/**        *<code>optional bool is_compressed = 4;</code>        */
specifier|public
name|boolean
name|hasIsCompressed
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**        *<code>optional bool is_compressed = 4;</code>        */
specifier|public
name|boolean
name|getIsCompressed
parameter_list|()
block|{
return|return
name|isCompressed_
return|;
block|}
comment|/**        *<code>optional bool is_compressed = 4;</code>        */
specifier|public
name|Builder
name|setIsCompressed
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|isCompressed_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional bool is_compressed = 4;</code>        */
specifier|public
name|Builder
name|clearIsCompressed
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|isCompressed_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional sint32 num_buckets = 5;
specifier|private
name|int
name|numBuckets_
decl_stmt|;
comment|/**        *<code>optional sint32 num_buckets = 5;</code>        */
specifier|public
name|boolean
name|hasNumBuckets
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**        *<code>optional sint32 num_buckets = 5;</code>        */
specifier|public
name|int
name|getNumBuckets
parameter_list|()
block|{
return|return
name|numBuckets_
return|;
block|}
comment|/**        *<code>optional sint32 num_buckets = 5;</code>        */
specifier|public
name|Builder
name|setNumBuckets
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|numBuckets_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional sint32 num_buckets = 5;</code>        */
specifier|public
name|Builder
name|clearNumBuckets
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|numBuckets_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SerDeInfo serde_info = 6;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|serdeInfo_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfoOrBuilder
argument_list|>
name|serdeInfoBuilder_
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SerDeInfo serde_info = 6;</code>        */
specifier|public
name|boolean
name|hasSerdeInfo
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SerDeInfo serde_info = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|getSerdeInfo
parameter_list|()
block|{
if|if
condition|(
name|serdeInfoBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|serdeInfo_
return|;
block|}
else|else
block|{
return|return
name|serdeInfoBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SerDeInfo serde_info = 6;</code>        */
specifier|public
name|Builder
name|setSerdeInfo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|value
parameter_list|)
block|{
if|if
condition|(
name|serdeInfoBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|serdeInfo_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serdeInfoBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SerDeInfo serde_info = 6;</code>        */
specifier|public
name|Builder
name|setSerdeInfo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|serdeInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|serdeInfo_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serdeInfoBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SerDeInfo serde_info = 6;</code>        */
specifier|public
name|Builder
name|mergeSerdeInfo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
name|value
parameter_list|)
block|{
if|if
condition|(
name|serdeInfoBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
operator|&&
name|serdeInfo_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|serdeInfo_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
operator|.
name|newBuilder
argument_list|(
name|serdeInfo_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serdeInfo_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serdeInfoBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SerDeInfo serde_info = 6;</code>        */
specifier|public
name|Builder
name|clearSerdeInfo
parameter_list|()
block|{
if|if
condition|(
name|serdeInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|serdeInfo_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serdeInfoBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SerDeInfo serde_info = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
operator|.
name|Builder
name|getSerdeInfoBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getSerdeInfoFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SerDeInfo serde_info = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfoOrBuilder
name|getSerdeInfoOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|serdeInfoBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|serdeInfoBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|serdeInfo_
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SerDeInfo serde_info = 6;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfoOrBuilder
argument_list|>
name|getSerdeInfoFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|serdeInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|serdeInfoBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfo
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SerDeInfoOrBuilder
argument_list|>
argument_list|(
name|serdeInfo_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|serdeInfo_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|serdeInfoBuilder_
return|;
block|}
comment|// repeated string bucket_cols = 7;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringList
name|bucketCols_
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
decl_stmt|;
specifier|private
name|void
name|ensureBucketColsIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|bucketCols_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
argument_list|(
name|bucketCols_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
block|}
block|}
comment|/**        *<code>repeated string bucket_cols = 7;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|getBucketColsList
parameter_list|()
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|bucketCols_
argument_list|)
return|;
block|}
comment|/**        *<code>repeated string bucket_cols = 7;</code>        */
specifier|public
name|int
name|getBucketColsCount
parameter_list|()
block|{
return|return
name|bucketCols_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**        *<code>repeated string bucket_cols = 7;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getBucketCols
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|bucketCols_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated string bucket_cols = 7;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getBucketColsBytes
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|bucketCols_
operator|.
name|getByteString
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated string bucket_cols = 7;</code>        */
specifier|public
name|Builder
name|setBucketCols
parameter_list|(
name|int
name|index
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureBucketColsIsMutable
argument_list|()
expr_stmt|;
name|bucketCols_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated string bucket_cols = 7;</code>        */
specifier|public
name|Builder
name|addBucketCols
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureBucketColsIsMutable
argument_list|()
expr_stmt|;
name|bucketCols_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated string bucket_cols = 7;</code>        */
specifier|public
name|Builder
name|addAllBucketCols
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|ensureBucketColsIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|bucketCols_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated string bucket_cols = 7;</code>        */
specifier|public
name|Builder
name|clearBucketCols
parameter_list|()
block|{
name|bucketCols_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated string bucket_cols = 7;</code>        */
specifier|public
name|Builder
name|addBucketColsBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureBucketColsIsMutable
argument_list|()
expr_stmt|;
name|bucketCols_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
argument_list|>
name|sortCols_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureSortColsIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|sortCols_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
argument_list|>
argument_list|(
name|sortCols_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|OrderOrBuilder
argument_list|>
name|sortColsBuilder_
decl_stmt|;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
argument_list|>
name|getSortColsList
parameter_list|()
block|{
if|if
condition|(
name|sortColsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|sortCols_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|sortColsBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>        */
specifier|public
name|int
name|getSortColsCount
parameter_list|()
block|{
if|if
condition|(
name|sortColsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|sortCols_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|sortColsBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
name|getSortCols
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|sortColsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|sortCols_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|sortColsBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>        */
specifier|public
name|Builder
name|setSortCols
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
name|value
parameter_list|)
block|{
if|if
condition|(
name|sortColsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureSortColsIsMutable
argument_list|()
expr_stmt|;
name|sortCols_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sortColsBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>        */
specifier|public
name|Builder
name|setSortCols
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|sortColsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSortColsIsMutable
argument_list|()
expr_stmt|;
name|sortCols_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sortColsBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>        */
specifier|public
name|Builder
name|addSortCols
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
name|value
parameter_list|)
block|{
if|if
condition|(
name|sortColsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureSortColsIsMutable
argument_list|()
expr_stmt|;
name|sortCols_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sortColsBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>        */
specifier|public
name|Builder
name|addSortCols
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
name|value
parameter_list|)
block|{
if|if
condition|(
name|sortColsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureSortColsIsMutable
argument_list|()
expr_stmt|;
name|sortCols_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sortColsBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>        */
specifier|public
name|Builder
name|addSortCols
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|sortColsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSortColsIsMutable
argument_list|()
expr_stmt|;
name|sortCols_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sortColsBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>        */
specifier|public
name|Builder
name|addSortCols
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|sortColsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSortColsIsMutable
argument_list|()
expr_stmt|;
name|sortCols_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sortColsBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>        */
specifier|public
name|Builder
name|addAllSortCols
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|sortColsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSortColsIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|sortCols_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sortColsBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>        */
specifier|public
name|Builder
name|clearSortCols
parameter_list|()
block|{
if|if
condition|(
name|sortColsBuilder_
operator|==
literal|null
condition|)
block|{
name|sortCols_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sortColsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>        */
specifier|public
name|Builder
name|removeSortCols
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|sortColsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureSortColsIsMutable
argument_list|()
expr_stmt|;
name|sortCols_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sortColsBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
operator|.
name|Builder
name|getSortColsBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getSortColsFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|OrderOrBuilder
name|getSortColsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|sortColsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|sortCols_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|sortColsBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|OrderOrBuilder
argument_list|>
name|getSortColsOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|sortColsBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|sortColsBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|sortCols_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
operator|.
name|Builder
name|addSortColsBuilder
parameter_list|()
block|{
return|return
name|getSortColsFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
operator|.
name|Builder
name|addSortColsBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getSortColsFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.Order sort_cols = 8;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
operator|.
name|Builder
argument_list|>
name|getSortColsBuilderList
parameter_list|()
block|{
return|return
name|getSortColsFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|OrderOrBuilder
argument_list|>
name|getSortColsFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|sortColsBuilder_
operator|==
literal|null
condition|)
block|{
name|sortColsBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|Order
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|OrderOrBuilder
argument_list|>
argument_list|(
name|sortCols_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|sortCols_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|sortColsBuilder_
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo skewed_info = 9;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|skewedInfo_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfoOrBuilder
argument_list|>
name|skewedInfoBuilder_
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo skewed_info = 9;</code>        */
specifier|public
name|boolean
name|hasSkewedInfo
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo skewed_info = 9;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|getSkewedInfo
parameter_list|()
block|{
if|if
condition|(
name|skewedInfoBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|skewedInfo_
return|;
block|}
else|else
block|{
return|return
name|skewedInfoBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo skewed_info = 9;</code>        */
specifier|public
name|Builder
name|setSkewedInfo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|value
parameter_list|)
block|{
if|if
condition|(
name|skewedInfoBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|skewedInfo_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|skewedInfoBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo skewed_info = 9;</code>        */
specifier|public
name|Builder
name|setSkewedInfo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|skewedInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|skewedInfo_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|skewedInfoBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo skewed_info = 9;</code>        */
specifier|public
name|Builder
name|mergeSkewedInfo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
name|value
parameter_list|)
block|{
if|if
condition|(
name|skewedInfoBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
operator|&&
name|skewedInfo_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|skewedInfo_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|newBuilder
argument_list|(
name|skewedInfo_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|skewedInfo_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|skewedInfoBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo skewed_info = 9;</code>        */
specifier|public
name|Builder
name|clearSkewedInfo
parameter_list|()
block|{
if|if
condition|(
name|skewedInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|skewedInfo_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|skewedInfoBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo skewed_info = 9;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|Builder
name|getSkewedInfoBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getSkewedInfoFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo skewed_info = 9;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfoOrBuilder
name|getSkewedInfoOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|skewedInfoBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|skewedInfoBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|skewedInfo_
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.StorageDescriptor.SkewedInfo skewed_info = 9;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfoOrBuilder
argument_list|>
name|getSkewedInfoFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|skewedInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|skewedInfoBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfo
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|StorageDescriptor
operator|.
name|SkewedInfoOrBuilder
argument_list|>
argument_list|(
name|skewedInfo_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|skewedInfo_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|skewedInfoBuilder_
return|;
block|}
comment|// optional bool stored_as_sub_directories = 10;
specifier|private
name|boolean
name|storedAsSubDirectories_
decl_stmt|;
comment|/**        *<code>optional bool stored_as_sub_directories = 10;</code>        */
specifier|public
name|boolean
name|hasStoredAsSubDirectories
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
return|;
block|}
comment|/**        *<code>optional bool stored_as_sub_directories = 10;</code>        */
specifier|public
name|boolean
name|getStoredAsSubDirectories
parameter_list|()
block|{
return|return
name|storedAsSubDirectories_
return|;
block|}
comment|/**        *<code>optional bool stored_as_sub_directories = 10;</code>        */
specifier|public
name|Builder
name|setStoredAsSubDirectories
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
name|storedAsSubDirectories_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional bool stored_as_sub_directories = 10;</code>        */
specifier|public
name|Builder
name|clearStoredAsSubDirectories
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
name|storedAsSubDirectories_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.StorageDescriptor)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|StorageDescriptor
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.StorageDescriptor)
block|}
specifier|public
interface|interface
name|TableOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// optional string owner = 1;
comment|/**      *<code>optional string owner = 1;</code>      */
name|boolean
name|hasOwner
parameter_list|()
function_decl|;
comment|/**      *<code>optional string owner = 1;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getOwner
parameter_list|()
function_decl|;
comment|/**      *<code>optional string owner = 1;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getOwnerBytes
parameter_list|()
function_decl|;
comment|// optional int64 create_time = 2;
comment|/**      *<code>optional int64 create_time = 2;</code>      */
name|boolean
name|hasCreateTime
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 create_time = 2;</code>      */
name|long
name|getCreateTime
parameter_list|()
function_decl|;
comment|// optional int64 last_access_time = 3;
comment|/**      *<code>optional int64 last_access_time = 3;</code>      */
name|boolean
name|hasLastAccessTime
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 last_access_time = 3;</code>      */
name|long
name|getLastAccessTime
parameter_list|()
function_decl|;
comment|// optional int64 retention = 4;
comment|/**      *<code>optional int64 retention = 4;</code>      */
name|boolean
name|hasRetention
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 retention = 4;</code>      */
name|long
name|getRetention
parameter_list|()
function_decl|;
comment|// optional string location = 5;
comment|/**      *<code>optional string location = 5;</code>      */
name|boolean
name|hasLocation
parameter_list|()
function_decl|;
comment|/**      *<code>optional string location = 5;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getLocation
parameter_list|()
function_decl|;
comment|/**      *<code>optional string location = 5;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getLocationBytes
parameter_list|()
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 6;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 6;</code>      *      *<pre>      * storage descriptor parameters      *</pre>      */
name|boolean
name|hasSdParameters
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 6;</code>      *      *<pre>      * storage descriptor parameters      *</pre>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getSdParameters
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 6;</code>      *      *<pre>      * storage descriptor parameters      *</pre>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
name|getSdParametersOrBuilder
parameter_list|()
function_decl|;
comment|// required bytes sd_hash = 7;
comment|/**      *<code>required bytes sd_hash = 7;</code>      */
name|boolean
name|hasSdHash
parameter_list|()
function_decl|;
comment|/**      *<code>required bytes sd_hash = 7;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSdHash
parameter_list|()
function_decl|;
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
argument_list|>
name|getPartitionKeysList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|getPartitionKeys
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>      */
name|int
name|getPartitionKeysCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchemaOrBuilder
argument_list|>
name|getPartitionKeysOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchemaOrBuilder
name|getPartitionKeysOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 9;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 9;</code>      */
name|boolean
name|hasParameters
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 9;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getParameters
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 9;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
name|getParametersOrBuilder
parameter_list|()
function_decl|;
comment|// optional string view_original_text = 10;
comment|/**      *<code>optional string view_original_text = 10;</code>      */
name|boolean
name|hasViewOriginalText
parameter_list|()
function_decl|;
comment|/**      *<code>optional string view_original_text = 10;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getViewOriginalText
parameter_list|()
function_decl|;
comment|/**      *<code>optional string view_original_text = 10;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getViewOriginalTextBytes
parameter_list|()
function_decl|;
comment|// optional string view_expanded_text = 11;
comment|/**      *<code>optional string view_expanded_text = 11;</code>      */
name|boolean
name|hasViewExpandedText
parameter_list|()
function_decl|;
comment|/**      *<code>optional string view_expanded_text = 11;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getViewExpandedText
parameter_list|()
function_decl|;
comment|/**      *<code>optional string view_expanded_text = 11;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getViewExpandedTextBytes
parameter_list|()
function_decl|;
comment|// optional string table_type = 12;
comment|/**      *<code>optional string table_type = 12;</code>      */
name|boolean
name|hasTableType
parameter_list|()
function_decl|;
comment|/**      *<code>optional string table_type = 12;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getTableType
parameter_list|()
function_decl|;
comment|/**      *<code>optional string table_type = 12;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTableTypeBytes
parameter_list|()
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 13;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 13;</code>      */
name|boolean
name|hasPrivileges
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 13;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|getPrivileges
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 13;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetOrBuilder
name|getPrivilegesOrBuilder
parameter_list|()
function_decl|;
comment|// optional bool is_temporary = 14;
comment|/**      *<code>optional bool is_temporary = 14;</code>      */
name|boolean
name|hasIsTemporary
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool is_temporary = 14;</code>      */
name|boolean
name|getIsTemporary
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.Table}    */
specifier|public
specifier|static
specifier|final
class|class
name|Table
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|TableOrBuilder
block|{
comment|// Use Table.newBuilder() to construct.
specifier|private
name|Table
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Table
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|Table
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|Table
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|Table
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|Table
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|owner_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|createTime_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|24
case|:
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|lastAccessTime_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|32
case|:
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|retention_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|42
case|:
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|location_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|50
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|sdParameters_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|sdParameters_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|sdParameters_
argument_list|)
expr_stmt|;
name|sdParameters_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
break|break;
block|}
case|case
literal|58
case|:
block|{
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|sdHash_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|66
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|partitionKeys_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000080
expr_stmt|;
block|}
name|partitionKeys_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|74
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|parameters_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|parameters_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|parameters_
argument_list|)
expr_stmt|;
name|parameters_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
break|break;
block|}
case|case
literal|82
case|:
block|{
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
name|viewOriginalText_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|90
case|:
block|{
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
name|viewExpandedText_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|98
case|:
block|{
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
name|tableType_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|106
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|privileges_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|privileges_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|privileges_
argument_list|)
expr_stmt|;
name|privileges_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000800
expr_stmt|;
break|break;
block|}
case|case
literal|112
case|:
block|{
name|bitField0_
operator||=
literal|0x00001000
expr_stmt|;
name|isTemporary_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|partitionKeys_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|partitionKeys_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Table_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Table_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Table
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Table
argument_list|>
argument_list|()
block|{
specifier|public
name|Table
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Table
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Table
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional string owner = 1;
specifier|public
specifier|static
specifier|final
name|int
name|OWNER_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|owner_
decl_stmt|;
comment|/**      *<code>optional string owner = 1;</code>      */
specifier|public
name|boolean
name|hasOwner
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>optional string owner = 1;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getOwner
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|owner_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|owner_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string owner = 1;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getOwnerBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|owner_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|owner_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional int64 create_time = 2;
specifier|public
specifier|static
specifier|final
name|int
name|CREATE_TIME_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|long
name|createTime_
decl_stmt|;
comment|/**      *<code>optional int64 create_time = 2;</code>      */
specifier|public
name|boolean
name|hasCreateTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>optional int64 create_time = 2;</code>      */
specifier|public
name|long
name|getCreateTime
parameter_list|()
block|{
return|return
name|createTime_
return|;
block|}
comment|// optional int64 last_access_time = 3;
specifier|public
specifier|static
specifier|final
name|int
name|LAST_ACCESS_TIME_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|long
name|lastAccessTime_
decl_stmt|;
comment|/**      *<code>optional int64 last_access_time = 3;</code>      */
specifier|public
name|boolean
name|hasLastAccessTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<code>optional int64 last_access_time = 3;</code>      */
specifier|public
name|long
name|getLastAccessTime
parameter_list|()
block|{
return|return
name|lastAccessTime_
return|;
block|}
comment|// optional int64 retention = 4;
specifier|public
specifier|static
specifier|final
name|int
name|RETENTION_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|long
name|retention_
decl_stmt|;
comment|/**      *<code>optional int64 retention = 4;</code>      */
specifier|public
name|boolean
name|hasRetention
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**      *<code>optional int64 retention = 4;</code>      */
specifier|public
name|long
name|getRetention
parameter_list|()
block|{
return|return
name|retention_
return|;
block|}
comment|// optional string location = 5;
specifier|public
specifier|static
specifier|final
name|int
name|LOCATION_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|location_
decl_stmt|;
comment|/**      *<code>optional string location = 5;</code>      */
specifier|public
name|boolean
name|hasLocation
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**      *<code>optional string location = 5;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getLocation
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|location_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|location_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string location = 5;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getLocationBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|location_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|location_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 6;
specifier|public
specifier|static
specifier|final
name|int
name|SD_PARAMETERS_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|sdParameters_
decl_stmt|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 6;</code>      *      *<pre>      * storage descriptor parameters      *</pre>      */
specifier|public
name|boolean
name|hasSdParameters
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 6;</code>      *      *<pre>      * storage descriptor parameters      *</pre>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getSdParameters
parameter_list|()
block|{
return|return
name|sdParameters_
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 6;</code>      *      *<pre>      * storage descriptor parameters      *</pre>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
name|getSdParametersOrBuilder
parameter_list|()
block|{
return|return
name|sdParameters_
return|;
block|}
comment|// required bytes sd_hash = 7;
specifier|public
specifier|static
specifier|final
name|int
name|SD_HASH_FIELD_NUMBER
init|=
literal|7
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|sdHash_
decl_stmt|;
comment|/**      *<code>required bytes sd_hash = 7;</code>      */
specifier|public
name|boolean
name|hasSdHash
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
return|;
block|}
comment|/**      *<code>required bytes sd_hash = 7;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSdHash
parameter_list|()
block|{
return|return
name|sdHash_
return|;
block|}
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;
specifier|public
specifier|static
specifier|final
name|int
name|PARTITION_KEYS_FIELD_NUMBER
init|=
literal|8
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
argument_list|>
name|partitionKeys_
decl_stmt|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
argument_list|>
name|getPartitionKeysList
parameter_list|()
block|{
return|return
name|partitionKeys_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchemaOrBuilder
argument_list|>
name|getPartitionKeysOrBuilderList
parameter_list|()
block|{
return|return
name|partitionKeys_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>      */
specifier|public
name|int
name|getPartitionKeysCount
parameter_list|()
block|{
return|return
name|partitionKeys_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|getPartitionKeys
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|partitionKeys_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchemaOrBuilder
name|getPartitionKeysOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|partitionKeys_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 9;
specifier|public
specifier|static
specifier|final
name|int
name|PARAMETERS_FIELD_NUMBER
init|=
literal|9
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|parameters_
decl_stmt|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 9;</code>      */
specifier|public
name|boolean
name|hasParameters
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 9;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getParameters
parameter_list|()
block|{
return|return
name|parameters_
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 9;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
name|getParametersOrBuilder
parameter_list|()
block|{
return|return
name|parameters_
return|;
block|}
comment|// optional string view_original_text = 10;
specifier|public
specifier|static
specifier|final
name|int
name|VIEW_ORIGINAL_TEXT_FIELD_NUMBER
init|=
literal|10
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|viewOriginalText_
decl_stmt|;
comment|/**      *<code>optional string view_original_text = 10;</code>      */
specifier|public
name|boolean
name|hasViewOriginalText
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
return|;
block|}
comment|/**      *<code>optional string view_original_text = 10;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getViewOriginalText
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|viewOriginalText_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|viewOriginalText_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string view_original_text = 10;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getViewOriginalTextBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|viewOriginalText_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|viewOriginalText_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional string view_expanded_text = 11;
specifier|public
specifier|static
specifier|final
name|int
name|VIEW_EXPANDED_TEXT_FIELD_NUMBER
init|=
literal|11
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|viewExpandedText_
decl_stmt|;
comment|/**      *<code>optional string view_expanded_text = 11;</code>      */
specifier|public
name|boolean
name|hasViewExpandedText
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
return|;
block|}
comment|/**      *<code>optional string view_expanded_text = 11;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getViewExpandedText
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|viewExpandedText_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|viewExpandedText_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string view_expanded_text = 11;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getViewExpandedTextBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|viewExpandedText_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|viewExpandedText_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional string table_type = 12;
specifier|public
specifier|static
specifier|final
name|int
name|TABLE_TYPE_FIELD_NUMBER
init|=
literal|12
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|tableType_
decl_stmt|;
comment|/**      *<code>optional string table_type = 12;</code>      */
specifier|public
name|boolean
name|hasTableType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
return|;
block|}
comment|/**      *<code>optional string table_type = 12;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getTableType
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|tableType_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|tableType_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string table_type = 12;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTableTypeBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|tableType_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|tableType_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 13;
specifier|public
specifier|static
specifier|final
name|int
name|PRIVILEGES_FIELD_NUMBER
init|=
literal|13
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|privileges_
decl_stmt|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 13;</code>      */
specifier|public
name|boolean
name|hasPrivileges
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 13;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|getPrivileges
parameter_list|()
block|{
return|return
name|privileges_
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 13;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetOrBuilder
name|getPrivilegesOrBuilder
parameter_list|()
block|{
return|return
name|privileges_
return|;
block|}
comment|// optional bool is_temporary = 14;
specifier|public
specifier|static
specifier|final
name|int
name|IS_TEMPORARY_FIELD_NUMBER
init|=
literal|14
decl_stmt|;
specifier|private
name|boolean
name|isTemporary_
decl_stmt|;
comment|/**      *<code>optional bool is_temporary = 14;</code>      */
specifier|public
name|boolean
name|hasIsTemporary
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00001000
operator|)
operator|==
literal|0x00001000
operator|)
return|;
block|}
comment|/**      *<code>optional bool is_temporary = 14;</code>      */
specifier|public
name|boolean
name|getIsTemporary
parameter_list|()
block|{
return|return
name|isTemporary_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|owner_
operator|=
literal|""
expr_stmt|;
name|createTime_
operator|=
literal|0L
expr_stmt|;
name|lastAccessTime_
operator|=
literal|0L
expr_stmt|;
name|retention_
operator|=
literal|0L
expr_stmt|;
name|location_
operator|=
literal|""
expr_stmt|;
name|sdParameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|sdHash_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
expr_stmt|;
name|partitionKeys_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|parameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|viewOriginalText_
operator|=
literal|""
expr_stmt|;
name|viewExpandedText_
operator|=
literal|""
expr_stmt|;
name|tableType_
operator|=
literal|""
expr_stmt|;
name|privileges_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|isTemporary_
operator|=
literal|false
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasSdHash
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasSdParameters
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getSdParameters
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getPartitionKeysCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getPartitionKeys
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasParameters
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getParameters
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasPrivileges
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getPrivileges
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|getOwnerBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|2
argument_list|,
name|createTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|3
argument_list|,
name|lastAccessTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|4
argument_list|,
name|retention_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|5
argument_list|,
name|getLocationBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|6
argument_list|,
name|sdParameters_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|7
argument_list|,
name|sdHash_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|partitionKeys_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|8
argument_list|,
name|partitionKeys_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|9
argument_list|,
name|parameters_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|10
argument_list|,
name|getViewOriginalTextBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|11
argument_list|,
name|getViewExpandedTextBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|12
argument_list|,
name|getTableTypeBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|13
argument_list|,
name|privileges_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00001000
operator|)
operator|==
literal|0x00001000
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|14
argument_list|,
name|isTemporary_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|1
argument_list|,
name|getOwnerBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|2
argument_list|,
name|createTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|3
argument_list|,
name|lastAccessTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|4
argument_list|,
name|retention_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|5
argument_list|,
name|getLocationBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|6
argument_list|,
name|sdParameters_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|7
argument_list|,
name|sdHash_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|partitionKeys_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|8
argument_list|,
name|partitionKeys_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|9
argument_list|,
name|parameters_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|10
argument_list|,
name|getViewOriginalTextBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|11
argument_list|,
name|getViewExpandedTextBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|12
argument_list|,
name|getTableTypeBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|13
argument_list|,
name|privileges_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00001000
operator|)
operator|==
literal|0x00001000
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|14
argument_list|,
name|isTemporary_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.Table}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|TableOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Table_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Table_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.Table.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getSdParametersFieldBuilder
argument_list|()
expr_stmt|;
name|getPartitionKeysFieldBuilder
argument_list|()
expr_stmt|;
name|getParametersFieldBuilder
argument_list|()
expr_stmt|;
name|getPrivilegesFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|owner_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|createTime_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|lastAccessTime_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|retention_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|location_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
if|if
condition|(
name|sdParametersBuilder_
operator|==
literal|null
condition|)
block|{
name|sdParameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sdParametersBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|sdHash_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
if|if
condition|(
name|partitionKeysBuilder_
operator|==
literal|null
condition|)
block|{
name|partitionKeys_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
block|}
else|else
block|{
name|partitionKeysBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|parameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
name|viewOriginalText_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
name|viewExpandedText_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000400
operator|)
expr_stmt|;
name|tableType_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000800
operator|)
expr_stmt|;
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
name|privileges_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|privilegesBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00001000
operator|)
expr_stmt|;
name|isTemporary_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00002000
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Table_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|owner_
operator|=
name|owner_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|createTime_
operator|=
name|createTime_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|lastAccessTime_
operator|=
name|lastAccessTime_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|result
operator|.
name|retention_
operator|=
name|retention_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
name|result
operator|.
name|location_
operator|=
name|location_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
if|if
condition|(
name|sdParametersBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|sdParameters_
operator|=
name|sdParameters_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|sdParameters_
operator|=
name|sdParametersBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000040
expr_stmt|;
block|}
name|result
operator|.
name|sdHash_
operator|=
name|sdHash_
expr_stmt|;
if|if
condition|(
name|partitionKeysBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|partitionKeys_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|partitionKeys_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|partitionKeys_
operator|=
name|partitionKeys_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|partitionKeys_
operator|=
name|partitionKeysBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000080
expr_stmt|;
block|}
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|parameters_
operator|=
name|parameters_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|parameters_
operator|=
name|parametersBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000100
expr_stmt|;
block|}
name|result
operator|.
name|viewOriginalText_
operator|=
name|viewOriginalText_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000200
expr_stmt|;
block|}
name|result
operator|.
name|viewExpandedText_
operator|=
name|viewExpandedText_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000400
expr_stmt|;
block|}
name|result
operator|.
name|tableType_
operator|=
name|tableType_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00001000
operator|)
operator|==
literal|0x00001000
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000800
expr_stmt|;
block|}
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|privileges_
operator|=
name|privileges_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|privileges_
operator|=
name|privilegesBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00002000
operator|)
operator|==
literal|0x00002000
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00001000
expr_stmt|;
block|}
name|result
operator|.
name|isTemporary_
operator|=
name|isTemporary_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasOwner
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|owner_
operator|=
name|other
operator|.
name|owner_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasCreateTime
argument_list|()
condition|)
block|{
name|setCreateTime
argument_list|(
name|other
operator|.
name|getCreateTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasLastAccessTime
argument_list|()
condition|)
block|{
name|setLastAccessTime
argument_list|(
name|other
operator|.
name|getLastAccessTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasRetention
argument_list|()
condition|)
block|{
name|setRetention
argument_list|(
name|other
operator|.
name|getRetention
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasLocation
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|location_
operator|=
name|other
operator|.
name|location_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasSdParameters
argument_list|()
condition|)
block|{
name|mergeSdParameters
argument_list|(
name|other
operator|.
name|getSdParameters
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasSdHash
argument_list|()
condition|)
block|{
name|setSdHash
argument_list|(
name|other
operator|.
name|getSdHash
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|partitionKeysBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|partitionKeys_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|partitionKeys_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|partitionKeys_
operator|=
name|other
operator|.
name|partitionKeys_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensurePartitionKeysIsMutable
argument_list|()
expr_stmt|;
name|partitionKeys_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|partitionKeys_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|partitionKeys_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|partitionKeysBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|partitionKeysBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|partitionKeysBuilder_
operator|=
literal|null
expr_stmt|;
name|partitionKeys_
operator|=
name|other
operator|.
name|partitionKeys_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|partitionKeysBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getPartitionKeysFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|partitionKeysBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|partitionKeys_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|other
operator|.
name|hasParameters
argument_list|()
condition|)
block|{
name|mergeParameters
argument_list|(
name|other
operator|.
name|getParameters
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasViewOriginalText
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
name|viewOriginalText_
operator|=
name|other
operator|.
name|viewOriginalText_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasViewExpandedText
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
name|viewExpandedText_
operator|=
name|other
operator|.
name|viewExpandedText_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasTableType
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000800
expr_stmt|;
name|tableType_
operator|=
name|other
operator|.
name|tableType_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasPrivileges
argument_list|()
condition|)
block|{
name|mergePrivileges
argument_list|(
name|other
operator|.
name|getPrivileges
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasIsTemporary
argument_list|()
condition|)
block|{
name|setIsTemporary
argument_list|(
name|other
operator|.
name|getIsTemporary
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasSdHash
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasSdParameters
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getSdParameters
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getPartitionKeysCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getPartitionKeys
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasParameters
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getParameters
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasPrivileges
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getPrivileges
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Table
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional string owner = 1;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|owner_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string owner = 1;</code>        */
specifier|public
name|boolean
name|hasOwner
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional string owner = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getOwner
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|owner_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|owner_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string owner = 1;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getOwnerBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|owner_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|owner_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string owner = 1;</code>        */
specifier|public
name|Builder
name|setOwner
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|owner_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string owner = 1;</code>        */
specifier|public
name|Builder
name|clearOwner
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|owner_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getOwner
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string owner = 1;</code>        */
specifier|public
name|Builder
name|setOwnerBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|owner_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional int64 create_time = 2;
specifier|private
name|long
name|createTime_
decl_stmt|;
comment|/**        *<code>optional int64 create_time = 2;</code>        */
specifier|public
name|boolean
name|hasCreateTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>optional int64 create_time = 2;</code>        */
specifier|public
name|long
name|getCreateTime
parameter_list|()
block|{
return|return
name|createTime_
return|;
block|}
comment|/**        *<code>optional int64 create_time = 2;</code>        */
specifier|public
name|Builder
name|setCreateTime
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|createTime_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int64 create_time = 2;</code>        */
specifier|public
name|Builder
name|clearCreateTime
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|createTime_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional int64 last_access_time = 3;
specifier|private
name|long
name|lastAccessTime_
decl_stmt|;
comment|/**        *<code>optional int64 last_access_time = 3;</code>        */
specifier|public
name|boolean
name|hasLastAccessTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>optional int64 last_access_time = 3;</code>        */
specifier|public
name|long
name|getLastAccessTime
parameter_list|()
block|{
return|return
name|lastAccessTime_
return|;
block|}
comment|/**        *<code>optional int64 last_access_time = 3;</code>        */
specifier|public
name|Builder
name|setLastAccessTime
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|lastAccessTime_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int64 last_access_time = 3;</code>        */
specifier|public
name|Builder
name|clearLastAccessTime
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|lastAccessTime_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional int64 retention = 4;
specifier|private
name|long
name|retention_
decl_stmt|;
comment|/**        *<code>optional int64 retention = 4;</code>        */
specifier|public
name|boolean
name|hasRetention
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**        *<code>optional int64 retention = 4;</code>        */
specifier|public
name|long
name|getRetention
parameter_list|()
block|{
return|return
name|retention_
return|;
block|}
comment|/**        *<code>optional int64 retention = 4;</code>        */
specifier|public
name|Builder
name|setRetention
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|retention_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int64 retention = 4;</code>        */
specifier|public
name|Builder
name|clearRetention
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|retention_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional string location = 5;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|location_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string location = 5;</code>        */
specifier|public
name|boolean
name|hasLocation
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**        *<code>optional string location = 5;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getLocation
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|location_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|location_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string location = 5;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getLocationBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|location_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|location_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string location = 5;</code>        */
specifier|public
name|Builder
name|setLocation
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|location_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string location = 5;</code>        */
specifier|public
name|Builder
name|clearLocation
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|location_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getLocation
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string location = 5;</code>        */
specifier|public
name|Builder
name|setLocationBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|location_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 6;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|sdParameters_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
argument_list|>
name|sdParametersBuilder_
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 6;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|public
name|boolean
name|hasSdParameters
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 6;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getSdParameters
parameter_list|()
block|{
if|if
condition|(
name|sdParametersBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|sdParameters_
return|;
block|}
else|else
block|{
return|return
name|sdParametersBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 6;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|public
name|Builder
name|setSdParameters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|value
parameter_list|)
block|{
if|if
condition|(
name|sdParametersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|sdParameters_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sdParametersBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 6;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|public
name|Builder
name|setSdParameters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|sdParametersBuilder_
operator|==
literal|null
condition|)
block|{
name|sdParameters_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sdParametersBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 6;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|public
name|Builder
name|mergeSdParameters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|value
parameter_list|)
block|{
if|if
condition|(
name|sdParametersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
operator|&&
name|sdParameters_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|sdParameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|newBuilder
argument_list|(
name|sdParameters_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sdParameters_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sdParametersBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 6;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|public
name|Builder
name|clearSdParameters
parameter_list|()
block|{
if|if
condition|(
name|sdParametersBuilder_
operator|==
literal|null
condition|)
block|{
name|sdParameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sdParametersBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 6;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
name|getSdParametersBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getSdParametersFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 6;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
name|getSdParametersOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|sdParametersBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|sdParametersBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|sdParameters_
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 6;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
argument_list|>
name|getSdParametersFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|sdParametersBuilder_
operator|==
literal|null
condition|)
block|{
name|sdParametersBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
argument_list|>
argument_list|(
name|sdParameters_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|sdParameters_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|sdParametersBuilder_
return|;
block|}
comment|// required bytes sd_hash = 7;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|sdHash_
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
decl_stmt|;
comment|/**        *<code>required bytes sd_hash = 7;</code>        */
specifier|public
name|boolean
name|hasSdHash
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
return|;
block|}
comment|/**        *<code>required bytes sd_hash = 7;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSdHash
parameter_list|()
block|{
return|return
name|sdHash_
return|;
block|}
comment|/**        *<code>required bytes sd_hash = 7;</code>        */
specifier|public
name|Builder
name|setSdHash
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|sdHash_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required bytes sd_hash = 7;</code>        */
specifier|public
name|Builder
name|clearSdHash
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|sdHash_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getSdHash
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
argument_list|>
name|partitionKeys_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensurePartitionKeysIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|partitionKeys_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
argument_list|>
argument_list|(
name|partitionKeys_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchemaOrBuilder
argument_list|>
name|partitionKeysBuilder_
decl_stmt|;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
argument_list|>
name|getPartitionKeysList
parameter_list|()
block|{
if|if
condition|(
name|partitionKeysBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|partitionKeys_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|partitionKeysBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>        */
specifier|public
name|int
name|getPartitionKeysCount
parameter_list|()
block|{
if|if
condition|(
name|partitionKeysBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|partitionKeys_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|partitionKeysBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|getPartitionKeys
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|partitionKeysBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|partitionKeys_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|partitionKeysBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>        */
specifier|public
name|Builder
name|setPartitionKeys
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|value
parameter_list|)
block|{
if|if
condition|(
name|partitionKeysBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensurePartitionKeysIsMutable
argument_list|()
expr_stmt|;
name|partitionKeys_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|partitionKeysBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>        */
specifier|public
name|Builder
name|setPartitionKeys
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|partitionKeysBuilder_
operator|==
literal|null
condition|)
block|{
name|ensurePartitionKeysIsMutable
argument_list|()
expr_stmt|;
name|partitionKeys_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|partitionKeysBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>        */
specifier|public
name|Builder
name|addPartitionKeys
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|value
parameter_list|)
block|{
if|if
condition|(
name|partitionKeysBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensurePartitionKeysIsMutable
argument_list|()
expr_stmt|;
name|partitionKeys_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|partitionKeysBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>        */
specifier|public
name|Builder
name|addPartitionKeys
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
name|value
parameter_list|)
block|{
if|if
condition|(
name|partitionKeysBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensurePartitionKeysIsMutable
argument_list|()
expr_stmt|;
name|partitionKeys_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|partitionKeysBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>        */
specifier|public
name|Builder
name|addPartitionKeys
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|partitionKeysBuilder_
operator|==
literal|null
condition|)
block|{
name|ensurePartitionKeysIsMutable
argument_list|()
expr_stmt|;
name|partitionKeys_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|partitionKeysBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>        */
specifier|public
name|Builder
name|addPartitionKeys
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|partitionKeysBuilder_
operator|==
literal|null
condition|)
block|{
name|ensurePartitionKeysIsMutable
argument_list|()
expr_stmt|;
name|partitionKeys_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|partitionKeysBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>        */
specifier|public
name|Builder
name|addAllPartitionKeys
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|partitionKeysBuilder_
operator|==
literal|null
condition|)
block|{
name|ensurePartitionKeysIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|partitionKeys_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|partitionKeysBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>        */
specifier|public
name|Builder
name|clearPartitionKeys
parameter_list|()
block|{
if|if
condition|(
name|partitionKeysBuilder_
operator|==
literal|null
condition|)
block|{
name|partitionKeys_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|partitionKeysBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>        */
specifier|public
name|Builder
name|removePartitionKeys
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|partitionKeysBuilder_
operator|==
literal|null
condition|)
block|{
name|ensurePartitionKeysIsMutable
argument_list|()
expr_stmt|;
name|partitionKeys_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|partitionKeysBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|Builder
name|getPartitionKeysBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getPartitionKeysFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchemaOrBuilder
name|getPartitionKeysOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|partitionKeysBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|partitionKeys_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|partitionKeysBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchemaOrBuilder
argument_list|>
name|getPartitionKeysOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|partitionKeysBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|partitionKeysBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|partitionKeys_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|Builder
name|addPartitionKeysBuilder
parameter_list|()
block|{
return|return
name|getPartitionKeysFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|Builder
name|addPartitionKeysBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getPartitionKeysFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.FieldSchema partition_keys = 8;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|Builder
argument_list|>
name|getPartitionKeysBuilderList
parameter_list|()
block|{
return|return
name|getPartitionKeysFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchemaOrBuilder
argument_list|>
name|getPartitionKeysFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|partitionKeysBuilder_
operator|==
literal|null
condition|)
block|{
name|partitionKeysBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchema
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|FieldSchemaOrBuilder
argument_list|>
argument_list|(
name|partitionKeys_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|partitionKeys_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|partitionKeysBuilder_
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 9;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|parameters_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
argument_list|>
name|parametersBuilder_
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 9;</code>        */
specifier|public
name|boolean
name|hasParameters
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 9;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getParameters
parameter_list|()
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|parameters_
return|;
block|}
else|else
block|{
return|return
name|parametersBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 9;</code>        */
specifier|public
name|Builder
name|setParameters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|value
parameter_list|)
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|parameters_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 9;</code>        */
specifier|public
name|Builder
name|setParameters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|parameters_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 9;</code>        */
specifier|public
name|Builder
name|mergeParameters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|value
parameter_list|)
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
operator|&&
name|parameters_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|parameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|newBuilder
argument_list|(
name|parameters_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parameters_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 9;</code>        */
specifier|public
name|Builder
name|clearParameters
parameter_list|()
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|parameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 9;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
name|getParametersBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getParametersFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 9;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
name|getParametersOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|parametersBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|parametersBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|parameters_
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 9;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
argument_list|>
name|getParametersFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|parametersBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
argument_list|>
argument_list|(
name|parameters_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|parameters_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|parametersBuilder_
return|;
block|}
comment|// optional string view_original_text = 10;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|viewOriginalText_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string view_original_text = 10;</code>        */
specifier|public
name|boolean
name|hasViewOriginalText
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
return|;
block|}
comment|/**        *<code>optional string view_original_text = 10;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getViewOriginalText
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|viewOriginalText_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|viewOriginalText_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string view_original_text = 10;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getViewOriginalTextBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|viewOriginalText_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|viewOriginalText_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string view_original_text = 10;</code>        */
specifier|public
name|Builder
name|setViewOriginalText
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
name|viewOriginalText_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string view_original_text = 10;</code>        */
specifier|public
name|Builder
name|clearViewOriginalText
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
name|viewOriginalText_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getViewOriginalText
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string view_original_text = 10;</code>        */
specifier|public
name|Builder
name|setViewOriginalTextBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
name|viewOriginalText_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional string view_expanded_text = 11;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|viewExpandedText_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string view_expanded_text = 11;</code>        */
specifier|public
name|boolean
name|hasViewExpandedText
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
return|;
block|}
comment|/**        *<code>optional string view_expanded_text = 11;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getViewExpandedText
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|viewExpandedText_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|viewExpandedText_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string view_expanded_text = 11;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getViewExpandedTextBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|viewExpandedText_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|viewExpandedText_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string view_expanded_text = 11;</code>        */
specifier|public
name|Builder
name|setViewExpandedText
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
name|viewExpandedText_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string view_expanded_text = 11;</code>        */
specifier|public
name|Builder
name|clearViewExpandedText
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000400
operator|)
expr_stmt|;
name|viewExpandedText_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getViewExpandedText
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string view_expanded_text = 11;</code>        */
specifier|public
name|Builder
name|setViewExpandedTextBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
name|viewExpandedText_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional string table_type = 12;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|tableType_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string table_type = 12;</code>        */
specifier|public
name|boolean
name|hasTableType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
return|;
block|}
comment|/**        *<code>optional string table_type = 12;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getTableType
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|tableType_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|tableType_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string table_type = 12;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTableTypeBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|tableType_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|tableType_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string table_type = 12;</code>        */
specifier|public
name|Builder
name|setTableType
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000800
expr_stmt|;
name|tableType_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string table_type = 12;</code>        */
specifier|public
name|Builder
name|clearTableType
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000800
operator|)
expr_stmt|;
name|tableType_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getTableType
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string table_type = 12;</code>        */
specifier|public
name|Builder
name|setTableTypeBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000800
expr_stmt|;
name|tableType_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 13;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|privileges_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetOrBuilder
argument_list|>
name|privilegesBuilder_
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 13;</code>        */
specifier|public
name|boolean
name|hasPrivileges
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00001000
operator|)
operator|==
literal|0x00001000
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 13;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|getPrivileges
parameter_list|()
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|privileges_
return|;
block|}
else|else
block|{
return|return
name|privilegesBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 13;</code>        */
specifier|public
name|Builder
name|setPrivileges
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|value
parameter_list|)
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|privileges_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|privilegesBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00001000
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 13;</code>        */
specifier|public
name|Builder
name|setPrivileges
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
name|privileges_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|privilegesBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00001000
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 13;</code>        */
specifier|public
name|Builder
name|mergePrivileges
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
name|value
parameter_list|)
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00001000
operator|)
operator|==
literal|0x00001000
operator|)
operator|&&
name|privileges_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|privileges_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|newBuilder
argument_list|(
name|privileges_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|privileges_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|privilegesBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00001000
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 13;</code>        */
specifier|public
name|Builder
name|clearPrivileges
parameter_list|()
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
name|privileges_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|privilegesBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00001000
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 13;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|Builder
name|getPrivilegesBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00001000
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getPrivilegesFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 13;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetOrBuilder
name|getPrivilegesOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|privilegesBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|privilegesBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|privileges_
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PrincipalPrivilegeSet privileges = 13;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetOrBuilder
argument_list|>
name|getPrivilegesFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|privilegesBuilder_
operator|==
literal|null
condition|)
block|{
name|privilegesBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSet
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PrincipalPrivilegeSetOrBuilder
argument_list|>
argument_list|(
name|privileges_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|privileges_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|privilegesBuilder_
return|;
block|}
comment|// optional bool is_temporary = 14;
specifier|private
name|boolean
name|isTemporary_
decl_stmt|;
comment|/**        *<code>optional bool is_temporary = 14;</code>        */
specifier|public
name|boolean
name|hasIsTemporary
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00002000
operator|)
operator|==
literal|0x00002000
operator|)
return|;
block|}
comment|/**        *<code>optional bool is_temporary = 14;</code>        */
specifier|public
name|boolean
name|getIsTemporary
parameter_list|()
block|{
return|return
name|isTemporary_
return|;
block|}
comment|/**        *<code>optional bool is_temporary = 14;</code>        */
specifier|public
name|Builder
name|setIsTemporary
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00002000
expr_stmt|;
name|isTemporary_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional bool is_temporary = 14;</code>        */
specifier|public
name|Builder
name|clearIsTemporary
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00002000
operator|)
expr_stmt|;
name|isTemporary_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.Table)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|Table
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.Table)
block|}
specifier|public
interface|interface
name|IndexOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// optional string indexHandlerClass = 1;
comment|/**      *<code>optional string indexHandlerClass = 1;</code>      *      *<pre>      * reserved      *</pre>      */
name|boolean
name|hasIndexHandlerClass
parameter_list|()
function_decl|;
comment|/**      *<code>optional string indexHandlerClass = 1;</code>      *      *<pre>      * reserved      *</pre>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getIndexHandlerClass
parameter_list|()
function_decl|;
comment|/**      *<code>optional string indexHandlerClass = 1;</code>      *      *<pre>      * reserved      *</pre>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getIndexHandlerClassBytes
parameter_list|()
function_decl|;
comment|// required string dbName = 2;
comment|/**      *<code>required string dbName = 2;</code>      */
name|boolean
name|hasDbName
parameter_list|()
function_decl|;
comment|/**      *<code>required string dbName = 2;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getDbName
parameter_list|()
function_decl|;
comment|/**      *<code>required string dbName = 2;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getDbNameBytes
parameter_list|()
function_decl|;
comment|// required string origTableName = 3;
comment|/**      *<code>required string origTableName = 3;</code>      */
name|boolean
name|hasOrigTableName
parameter_list|()
function_decl|;
comment|/**      *<code>required string origTableName = 3;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getOrigTableName
parameter_list|()
function_decl|;
comment|/**      *<code>required string origTableName = 3;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getOrigTableNameBytes
parameter_list|()
function_decl|;
comment|// optional string location = 4;
comment|/**      *<code>optional string location = 4;</code>      */
name|boolean
name|hasLocation
parameter_list|()
function_decl|;
comment|/**      *<code>optional string location = 4;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getLocation
parameter_list|()
function_decl|;
comment|/**      *<code>optional string location = 4;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getLocationBytes
parameter_list|()
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 5;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 5;</code>      *      *<pre>      * storage descriptor parameters      *</pre>      */
name|boolean
name|hasSdParameters
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 5;</code>      *      *<pre>      * storage descriptor parameters      *</pre>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getSdParameters
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 5;</code>      *      *<pre>      * storage descriptor parameters      *</pre>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
name|getSdParametersOrBuilder
parameter_list|()
function_decl|;
comment|// optional int32 createTime = 6;
comment|/**      *<code>optional int32 createTime = 6;</code>      */
name|boolean
name|hasCreateTime
parameter_list|()
function_decl|;
comment|/**      *<code>optional int32 createTime = 6;</code>      */
name|int
name|getCreateTime
parameter_list|()
function_decl|;
comment|// optional int32 lastAccessTime = 7;
comment|/**      *<code>optional int32 lastAccessTime = 7;</code>      */
name|boolean
name|hasLastAccessTime
parameter_list|()
function_decl|;
comment|/**      *<code>optional int32 lastAccessTime = 7;</code>      */
name|int
name|getLastAccessTime
parameter_list|()
function_decl|;
comment|// optional string indexTableName = 8;
comment|/**      *<code>optional string indexTableName = 8;</code>      */
name|boolean
name|hasIndexTableName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string indexTableName = 8;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getIndexTableName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string indexTableName = 8;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getIndexTableNameBytes
parameter_list|()
function_decl|;
comment|// optional bytes sd_hash = 9;
comment|/**      *<code>optional bytes sd_hash = 9;</code>      */
name|boolean
name|hasSdHash
parameter_list|()
function_decl|;
comment|/**      *<code>optional bytes sd_hash = 9;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSdHash
parameter_list|()
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 10;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 10;</code>      */
name|boolean
name|hasParameters
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 10;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getParameters
parameter_list|()
function_decl|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 10;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
name|getParametersOrBuilder
parameter_list|()
function_decl|;
comment|// optional bool deferredRebuild = 11;
comment|/**      *<code>optional bool deferredRebuild = 11;</code>      */
name|boolean
name|hasDeferredRebuild
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool deferredRebuild = 11;</code>      */
name|boolean
name|getDeferredRebuild
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.Index}    */
specifier|public
specifier|static
specifier|final
class|class
name|Index
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|IndexOrBuilder
block|{
comment|// Use Index.newBuilder() to construct.
specifier|private
name|Index
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Index
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|Index
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|Index
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|Index
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|Index
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|indexHandlerClass_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|dbName_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|origTableName_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|34
case|:
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|location_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|42
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|sdParameters_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|sdParameters_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|sdParameters_
argument_list|)
expr_stmt|;
name|sdParameters_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
break|break;
block|}
case|case
literal|48
case|:
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|createTime_
operator|=
name|input
operator|.
name|readInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|56
case|:
block|{
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|lastAccessTime_
operator|=
name|input
operator|.
name|readInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|66
case|:
block|{
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
name|indexTableName_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|74
case|:
block|{
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
name|sdHash_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|82
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|parameters_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|parameters_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|parameters_
argument_list|)
expr_stmt|;
name|parameters_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
break|break;
block|}
case|case
literal|88
case|:
block|{
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
name|deferredRebuild_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Index_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Index_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Index
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Index
argument_list|>
argument_list|()
block|{
specifier|public
name|Index
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Index
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Index
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional string indexHandlerClass = 1;
specifier|public
specifier|static
specifier|final
name|int
name|INDEXHANDLERCLASS_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|indexHandlerClass_
decl_stmt|;
comment|/**      *<code>optional string indexHandlerClass = 1;</code>      *      *<pre>      * reserved      *</pre>      */
specifier|public
name|boolean
name|hasIndexHandlerClass
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>optional string indexHandlerClass = 1;</code>      *      *<pre>      * reserved      *</pre>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getIndexHandlerClass
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|indexHandlerClass_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|indexHandlerClass_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string indexHandlerClass = 1;</code>      *      *<pre>      * reserved      *</pre>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getIndexHandlerClassBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|indexHandlerClass_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|indexHandlerClass_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// required string dbName = 2;
specifier|public
specifier|static
specifier|final
name|int
name|DBNAME_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|dbName_
decl_stmt|;
comment|/**      *<code>required string dbName = 2;</code>      */
specifier|public
name|boolean
name|hasDbName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>required string dbName = 2;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getDbName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|dbName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|dbName_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>required string dbName = 2;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getDbNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|dbName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|dbName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// required string origTableName = 3;
specifier|public
specifier|static
specifier|final
name|int
name|ORIGTABLENAME_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|origTableName_
decl_stmt|;
comment|/**      *<code>required string origTableName = 3;</code>      */
specifier|public
name|boolean
name|hasOrigTableName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<code>required string origTableName = 3;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getOrigTableName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|origTableName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|origTableName_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>required string origTableName = 3;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getOrigTableNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|origTableName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|origTableName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional string location = 4;
specifier|public
specifier|static
specifier|final
name|int
name|LOCATION_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|location_
decl_stmt|;
comment|/**      *<code>optional string location = 4;</code>      */
specifier|public
name|boolean
name|hasLocation
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**      *<code>optional string location = 4;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getLocation
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|location_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|location_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string location = 4;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getLocationBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|location_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|location_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 5;
specifier|public
specifier|static
specifier|final
name|int
name|SD_PARAMETERS_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|sdParameters_
decl_stmt|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 5;</code>      *      *<pre>      * storage descriptor parameters      *</pre>      */
specifier|public
name|boolean
name|hasSdParameters
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 5;</code>      *      *<pre>      * storage descriptor parameters      *</pre>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getSdParameters
parameter_list|()
block|{
return|return
name|sdParameters_
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 5;</code>      *      *<pre>      * storage descriptor parameters      *</pre>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
name|getSdParametersOrBuilder
parameter_list|()
block|{
return|return
name|sdParameters_
return|;
block|}
comment|// optional int32 createTime = 6;
specifier|public
specifier|static
specifier|final
name|int
name|CREATETIME_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
specifier|private
name|int
name|createTime_
decl_stmt|;
comment|/**      *<code>optional int32 createTime = 6;</code>      */
specifier|public
name|boolean
name|hasCreateTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**      *<code>optional int32 createTime = 6;</code>      */
specifier|public
name|int
name|getCreateTime
parameter_list|()
block|{
return|return
name|createTime_
return|;
block|}
comment|// optional int32 lastAccessTime = 7;
specifier|public
specifier|static
specifier|final
name|int
name|LASTACCESSTIME_FIELD_NUMBER
init|=
literal|7
decl_stmt|;
specifier|private
name|int
name|lastAccessTime_
decl_stmt|;
comment|/**      *<code>optional int32 lastAccessTime = 7;</code>      */
specifier|public
name|boolean
name|hasLastAccessTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
return|;
block|}
comment|/**      *<code>optional int32 lastAccessTime = 7;</code>      */
specifier|public
name|int
name|getLastAccessTime
parameter_list|()
block|{
return|return
name|lastAccessTime_
return|;
block|}
comment|// optional string indexTableName = 8;
specifier|public
specifier|static
specifier|final
name|int
name|INDEXTABLENAME_FIELD_NUMBER
init|=
literal|8
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|indexTableName_
decl_stmt|;
comment|/**      *<code>optional string indexTableName = 8;</code>      */
specifier|public
name|boolean
name|hasIndexTableName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
return|;
block|}
comment|/**      *<code>optional string indexTableName = 8;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getIndexTableName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|indexTableName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|indexTableName_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string indexTableName = 8;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getIndexTableNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|indexTableName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|indexTableName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional bytes sd_hash = 9;
specifier|public
specifier|static
specifier|final
name|int
name|SD_HASH_FIELD_NUMBER
init|=
literal|9
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|sdHash_
decl_stmt|;
comment|/**      *<code>optional bytes sd_hash = 9;</code>      */
specifier|public
name|boolean
name|hasSdHash
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
return|;
block|}
comment|/**      *<code>optional bytes sd_hash = 9;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSdHash
parameter_list|()
block|{
return|return
name|sdHash_
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 10;
specifier|public
specifier|static
specifier|final
name|int
name|PARAMETERS_FIELD_NUMBER
init|=
literal|10
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|parameters_
decl_stmt|;
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 10;</code>      */
specifier|public
name|boolean
name|hasParameters
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 10;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getParameters
parameter_list|()
block|{
return|return
name|parameters_
return|;
block|}
comment|/**      *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 10;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
name|getParametersOrBuilder
parameter_list|()
block|{
return|return
name|parameters_
return|;
block|}
comment|// optional bool deferredRebuild = 11;
specifier|public
specifier|static
specifier|final
name|int
name|DEFERREDREBUILD_FIELD_NUMBER
init|=
literal|11
decl_stmt|;
specifier|private
name|boolean
name|deferredRebuild_
decl_stmt|;
comment|/**      *<code>optional bool deferredRebuild = 11;</code>      */
specifier|public
name|boolean
name|hasDeferredRebuild
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
return|;
block|}
comment|/**      *<code>optional bool deferredRebuild = 11;</code>      */
specifier|public
name|boolean
name|getDeferredRebuild
parameter_list|()
block|{
return|return
name|deferredRebuild_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|indexHandlerClass_
operator|=
literal|""
expr_stmt|;
name|dbName_
operator|=
literal|""
expr_stmt|;
name|origTableName_
operator|=
literal|""
expr_stmt|;
name|location_
operator|=
literal|""
expr_stmt|;
name|sdParameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|createTime_
operator|=
literal|0
expr_stmt|;
name|lastAccessTime_
operator|=
literal|0
expr_stmt|;
name|indexTableName_
operator|=
literal|""
expr_stmt|;
name|sdHash_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
expr_stmt|;
name|parameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|deferredRebuild_
operator|=
literal|false
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasDbName
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasOrigTableName
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasSdParameters
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getSdParameters
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasParameters
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getParameters
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|getIndexHandlerClassBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|2
argument_list|,
name|getDbNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|3
argument_list|,
name|getOrigTableNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|4
argument_list|,
name|getLocationBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|5
argument_list|,
name|sdParameters_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt32
argument_list|(
literal|6
argument_list|,
name|createTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt32
argument_list|(
literal|7
argument_list|,
name|lastAccessTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|8
argument_list|,
name|getIndexTableNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|9
argument_list|,
name|sdHash_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|10
argument_list|,
name|parameters_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|11
argument_list|,
name|deferredRebuild_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|1
argument_list|,
name|getIndexHandlerClassBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|2
argument_list|,
name|getDbNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|3
argument_list|,
name|getOrigTableNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|4
argument_list|,
name|getLocationBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|5
argument_list|,
name|sdParameters_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32Size
argument_list|(
literal|6
argument_list|,
name|createTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32Size
argument_list|(
literal|7
argument_list|,
name|lastAccessTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|8
argument_list|,
name|getIndexTableNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|9
argument_list|,
name|sdHash_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|10
argument_list|,
name|parameters_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|11
argument_list|,
name|deferredRebuild_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.Index}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|IndexOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Index_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Index_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.Index.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getSdParametersFieldBuilder
argument_list|()
expr_stmt|;
name|getParametersFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|indexHandlerClass_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|dbName_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|origTableName_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|location_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
if|if
condition|(
name|sdParametersBuilder_
operator|==
literal|null
condition|)
block|{
name|sdParameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sdParametersBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|createTime_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|lastAccessTime_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|indexTableName_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|sdHash_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|parameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
name|deferredRebuild_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000400
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Index_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|indexHandlerClass_
operator|=
name|indexHandlerClass_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|dbName_
operator|=
name|dbName_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|origTableName_
operator|=
name|origTableName_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|result
operator|.
name|location_
operator|=
name|location_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
if|if
condition|(
name|sdParametersBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|sdParameters_
operator|=
name|sdParameters_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|sdParameters_
operator|=
name|sdParametersBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
name|result
operator|.
name|createTime_
operator|=
name|createTime_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000040
expr_stmt|;
block|}
name|result
operator|.
name|lastAccessTime_
operator|=
name|lastAccessTime_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000080
expr_stmt|;
block|}
name|result
operator|.
name|indexTableName_
operator|=
name|indexTableName_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000100
expr_stmt|;
block|}
name|result
operator|.
name|sdHash_
operator|=
name|sdHash_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000200
expr_stmt|;
block|}
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|parameters_
operator|=
name|parameters_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|parameters_
operator|=
name|parametersBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000400
expr_stmt|;
block|}
name|result
operator|.
name|deferredRebuild_
operator|=
name|deferredRebuild_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasIndexHandlerClass
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|indexHandlerClass_
operator|=
name|other
operator|.
name|indexHandlerClass_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasDbName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|dbName_
operator|=
name|other
operator|.
name|dbName_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasOrigTableName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|origTableName_
operator|=
name|other
operator|.
name|origTableName_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasLocation
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|location_
operator|=
name|other
operator|.
name|location_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasSdParameters
argument_list|()
condition|)
block|{
name|mergeSdParameters
argument_list|(
name|other
operator|.
name|getSdParameters
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasCreateTime
argument_list|()
condition|)
block|{
name|setCreateTime
argument_list|(
name|other
operator|.
name|getCreateTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasLastAccessTime
argument_list|()
condition|)
block|{
name|setLastAccessTime
argument_list|(
name|other
operator|.
name|getLastAccessTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasIndexTableName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
name|indexTableName_
operator|=
name|other
operator|.
name|indexTableName_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasSdHash
argument_list|()
condition|)
block|{
name|setSdHash
argument_list|(
name|other
operator|.
name|getSdHash
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasParameters
argument_list|()
condition|)
block|{
name|mergeParameters
argument_list|(
name|other
operator|.
name|getParameters
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasDeferredRebuild
argument_list|()
condition|)
block|{
name|setDeferredRebuild
argument_list|(
name|other
operator|.
name|getDeferredRebuild
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasDbName
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasOrigTableName
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasSdParameters
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getSdParameters
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasParameters
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getParameters
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Index
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional string indexHandlerClass = 1;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|indexHandlerClass_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string indexHandlerClass = 1;</code>        *        *<pre>        * reserved        *</pre>        */
specifier|public
name|boolean
name|hasIndexHandlerClass
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional string indexHandlerClass = 1;</code>        *        *<pre>        * reserved        *</pre>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getIndexHandlerClass
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|indexHandlerClass_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|indexHandlerClass_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string indexHandlerClass = 1;</code>        *        *<pre>        * reserved        *</pre>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getIndexHandlerClassBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|indexHandlerClass_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|indexHandlerClass_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string indexHandlerClass = 1;</code>        *        *<pre>        * reserved        *</pre>        */
specifier|public
name|Builder
name|setIndexHandlerClass
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|indexHandlerClass_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string indexHandlerClass = 1;</code>        *        *<pre>        * reserved        *</pre>        */
specifier|public
name|Builder
name|clearIndexHandlerClass
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|indexHandlerClass_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getIndexHandlerClass
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string indexHandlerClass = 1;</code>        *        *<pre>        * reserved        *</pre>        */
specifier|public
name|Builder
name|setIndexHandlerClassBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|indexHandlerClass_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// required string dbName = 2;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|dbName_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>required string dbName = 2;</code>        */
specifier|public
name|boolean
name|hasDbName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>required string dbName = 2;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getDbName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|dbName_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|dbName_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string dbName = 2;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getDbNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|dbName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|dbName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string dbName = 2;</code>        */
specifier|public
name|Builder
name|setDbName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|dbName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string dbName = 2;</code>        */
specifier|public
name|Builder
name|clearDbName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|dbName_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getDbName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string dbName = 2;</code>        */
specifier|public
name|Builder
name|setDbNameBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|dbName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// required string origTableName = 3;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|origTableName_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>required string origTableName = 3;</code>        */
specifier|public
name|boolean
name|hasOrigTableName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>required string origTableName = 3;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getOrigTableName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|origTableName_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|origTableName_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string origTableName = 3;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getOrigTableNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|origTableName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|origTableName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string origTableName = 3;</code>        */
specifier|public
name|Builder
name|setOrigTableName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|origTableName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string origTableName = 3;</code>        */
specifier|public
name|Builder
name|clearOrigTableName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|origTableName_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getOrigTableName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string origTableName = 3;</code>        */
specifier|public
name|Builder
name|setOrigTableNameBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|origTableName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional string location = 4;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|location_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string location = 4;</code>        */
specifier|public
name|boolean
name|hasLocation
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**        *<code>optional string location = 4;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getLocation
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|location_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|location_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string location = 4;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getLocationBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|location_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|location_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string location = 4;</code>        */
specifier|public
name|Builder
name|setLocation
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|location_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string location = 4;</code>        */
specifier|public
name|Builder
name|clearLocation
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|location_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getLocation
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string location = 4;</code>        */
specifier|public
name|Builder
name|setLocationBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|location_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 5;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|sdParameters_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
argument_list|>
name|sdParametersBuilder_
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 5;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|public
name|boolean
name|hasSdParameters
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 5;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getSdParameters
parameter_list|()
block|{
if|if
condition|(
name|sdParametersBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|sdParameters_
return|;
block|}
else|else
block|{
return|return
name|sdParametersBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 5;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|public
name|Builder
name|setSdParameters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|value
parameter_list|)
block|{
if|if
condition|(
name|sdParametersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|sdParameters_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sdParametersBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 5;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|public
name|Builder
name|setSdParameters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|sdParametersBuilder_
operator|==
literal|null
condition|)
block|{
name|sdParameters_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sdParametersBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 5;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|public
name|Builder
name|mergeSdParameters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|value
parameter_list|)
block|{
if|if
condition|(
name|sdParametersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
operator|&&
name|sdParameters_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|sdParameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|newBuilder
argument_list|(
name|sdParameters_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sdParameters_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sdParametersBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 5;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|public
name|Builder
name|clearSdParameters
parameter_list|()
block|{
if|if
condition|(
name|sdParametersBuilder_
operator|==
literal|null
condition|)
block|{
name|sdParameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sdParametersBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 5;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
name|getSdParametersBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getSdParametersFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 5;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
name|getSdParametersOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|sdParametersBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|sdParametersBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|sdParameters_
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters sd_parameters = 5;</code>        *        *<pre>        * storage descriptor parameters        *</pre>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
argument_list|>
name|getSdParametersFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|sdParametersBuilder_
operator|==
literal|null
condition|)
block|{
name|sdParametersBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
argument_list|>
argument_list|(
name|sdParameters_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|sdParameters_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|sdParametersBuilder_
return|;
block|}
comment|// optional int32 createTime = 6;
specifier|private
name|int
name|createTime_
decl_stmt|;
comment|/**        *<code>optional int32 createTime = 6;</code>        */
specifier|public
name|boolean
name|hasCreateTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**        *<code>optional int32 createTime = 6;</code>        */
specifier|public
name|int
name|getCreateTime
parameter_list|()
block|{
return|return
name|createTime_
return|;
block|}
comment|/**        *<code>optional int32 createTime = 6;</code>        */
specifier|public
name|Builder
name|setCreateTime
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|createTime_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int32 createTime = 6;</code>        */
specifier|public
name|Builder
name|clearCreateTime
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|createTime_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional int32 lastAccessTime = 7;
specifier|private
name|int
name|lastAccessTime_
decl_stmt|;
comment|/**        *<code>optional int32 lastAccessTime = 7;</code>        */
specifier|public
name|boolean
name|hasLastAccessTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
return|;
block|}
comment|/**        *<code>optional int32 lastAccessTime = 7;</code>        */
specifier|public
name|int
name|getLastAccessTime
parameter_list|()
block|{
return|return
name|lastAccessTime_
return|;
block|}
comment|/**        *<code>optional int32 lastAccessTime = 7;</code>        */
specifier|public
name|Builder
name|setLastAccessTime
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|lastAccessTime_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int32 lastAccessTime = 7;</code>        */
specifier|public
name|Builder
name|clearLastAccessTime
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|lastAccessTime_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional string indexTableName = 8;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|indexTableName_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string indexTableName = 8;</code>        */
specifier|public
name|boolean
name|hasIndexTableName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
return|;
block|}
comment|/**        *<code>optional string indexTableName = 8;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getIndexTableName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|indexTableName_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|indexTableName_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string indexTableName = 8;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getIndexTableNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|indexTableName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|indexTableName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string indexTableName = 8;</code>        */
specifier|public
name|Builder
name|setIndexTableName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
name|indexTableName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string indexTableName = 8;</code>        */
specifier|public
name|Builder
name|clearIndexTableName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|indexTableName_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getIndexTableName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string indexTableName = 8;</code>        */
specifier|public
name|Builder
name|setIndexTableNameBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
name|indexTableName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional bytes sd_hash = 9;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|sdHash_
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
decl_stmt|;
comment|/**        *<code>optional bytes sd_hash = 9;</code>        */
specifier|public
name|boolean
name|hasSdHash
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
return|;
block|}
comment|/**        *<code>optional bytes sd_hash = 9;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSdHash
parameter_list|()
block|{
return|return
name|sdHash_
return|;
block|}
comment|/**        *<code>optional bytes sd_hash = 9;</code>        */
specifier|public
name|Builder
name|setSdHash
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
name|sdHash_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional bytes sd_hash = 9;</code>        */
specifier|public
name|Builder
name|clearSdHash
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
name|sdHash_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getSdHash
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 10;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|parameters_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
argument_list|>
name|parametersBuilder_
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 10;</code>        */
specifier|public
name|boolean
name|hasParameters
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 10;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|getParameters
parameter_list|()
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|parameters_
return|;
block|}
else|else
block|{
return|return
name|parametersBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 10;</code>        */
specifier|public
name|Builder
name|setParameters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|value
parameter_list|)
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|parameters_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 10;</code>        */
specifier|public
name|Builder
name|setParameters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|parameters_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 10;</code>        */
specifier|public
name|Builder
name|mergeParameters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
name|value
parameter_list|)
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
operator|&&
name|parameters_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|parameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|newBuilder
argument_list|(
name|parameters_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parameters_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 10;</code>        */
specifier|public
name|Builder
name|clearParameters
parameter_list|()
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|parameters_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|parametersBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 10;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
name|getParametersBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getParametersFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 10;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
name|getParametersOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|parametersBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|parametersBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|parameters_
return|;
block|}
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.Parameters parameters = 10;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
argument_list|>
name|getParametersFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|parametersBuilder_
operator|==
literal|null
condition|)
block|{
name|parametersBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|Parameters
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|ParametersOrBuilder
argument_list|>
argument_list|(
name|parameters_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|parameters_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|parametersBuilder_
return|;
block|}
comment|// optional bool deferredRebuild = 11;
specifier|private
name|boolean
name|deferredRebuild_
decl_stmt|;
comment|/**        *<code>optional bool deferredRebuild = 11;</code>        */
specifier|public
name|boolean
name|hasDeferredRebuild
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
return|;
block|}
comment|/**        *<code>optional bool deferredRebuild = 11;</code>        */
specifier|public
name|boolean
name|getDeferredRebuild
parameter_list|()
block|{
return|return
name|deferredRebuild_
return|;
block|}
comment|/**        *<code>optional bool deferredRebuild = 11;</code>        */
specifier|public
name|Builder
name|setDeferredRebuild
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
name|deferredRebuild_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional bool deferredRebuild = 11;</code>        */
specifier|public
name|Builder
name|clearDeferredRebuild
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000400
operator|)
expr_stmt|;
name|deferredRebuild_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.Index)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|Index
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.Index)
block|}
specifier|public
interface|interface
name|PartitionKeyComparatorOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required string names = 1;
comment|/**      *<code>required string names = 1;</code>      */
name|boolean
name|hasNames
parameter_list|()
function_decl|;
comment|/**      *<code>required string names = 1;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getNames
parameter_list|()
function_decl|;
comment|/**      *<code>required string names = 1;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNamesBytes
parameter_list|()
function_decl|;
comment|// required string types = 2;
comment|/**      *<code>required string types = 2;</code>      */
name|boolean
name|hasTypes
parameter_list|()
function_decl|;
comment|/**      *<code>required string types = 2;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getTypes
parameter_list|()
function_decl|;
comment|/**      *<code>required string types = 2;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTypesBytes
parameter_list|()
function_decl|;
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
argument_list|>
name|getOpList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
name|getOp
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>      */
name|int
name|getOpCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|OperatorOrBuilder
argument_list|>
name|getOpOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|OperatorOrBuilder
name|getOpOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
argument_list|>
name|getRangeList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
name|getRange
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>      */
name|int
name|getRangeCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|RangeOrBuilder
argument_list|>
name|getRangeOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|RangeOrBuilder
name|getRangeOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator}    */
specifier|public
specifier|static
specifier|final
class|class
name|PartitionKeyComparator
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|PartitionKeyComparatorOrBuilder
block|{
comment|// Use PartitionKeyComparator.newBuilder() to construct.
specifier|private
name|PartitionKeyComparator
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|PartitionKeyComparator
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|PartitionKeyComparator
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|PartitionKeyComparator
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|PartitionKeyComparator
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|PartitionKeyComparator
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|names_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|types_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|op_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|op_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|34
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|range_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|range_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|op_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|op_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|range_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|range_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|PartitionKeyComparator
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|PartitionKeyComparator
argument_list|>
argument_list|()
block|{
specifier|public
name|PartitionKeyComparator
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|PartitionKeyComparator
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|PartitionKeyComparator
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
interface|interface
name|MarkOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required string value = 1;
comment|/**        *<code>required string value = 1;</code>        */
name|boolean
name|hasValue
parameter_list|()
function_decl|;
comment|/**        *<code>required string value = 1;</code>        */
name|java
operator|.
name|lang
operator|.
name|String
name|getValue
parameter_list|()
function_decl|;
comment|/**        *<code>required string value = 1;</code>        */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getValueBytes
parameter_list|()
function_decl|;
comment|// required bool inclusive = 2;
comment|/**        *<code>required bool inclusive = 2;</code>        */
name|boolean
name|hasInclusive
parameter_list|()
function_decl|;
comment|/**        *<code>required bool inclusive = 2;</code>        */
name|boolean
name|getInclusive
parameter_list|()
function_decl|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark}      */
specifier|public
specifier|static
specifier|final
class|class
name|Mark
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|MarkOrBuilder
block|{
comment|// Use Mark.newBuilder() to construct.
specifier|private
name|Mark
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Mark
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|Mark
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|Mark
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|Mark
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|Mark
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|value_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|inclusive_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Mark_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Mark_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Mark
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Mark
argument_list|>
argument_list|()
block|{
specifier|public
name|Mark
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Mark
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Mark
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string value = 1;
specifier|public
specifier|static
specifier|final
name|int
name|VALUE_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|value_
decl_stmt|;
comment|/**        *<code>required string value = 1;</code>        */
specifier|public
name|boolean
name|hasValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>required string value = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getValue
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|value_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|value_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**        *<code>required string value = 1;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getValueBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|value_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|value_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// required bool inclusive = 2;
specifier|public
specifier|static
specifier|final
name|int
name|INCLUSIVE_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|boolean
name|inclusive_
decl_stmt|;
comment|/**        *<code>required bool inclusive = 2;</code>        */
specifier|public
name|boolean
name|hasInclusive
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>required bool inclusive = 2;</code>        */
specifier|public
name|boolean
name|getInclusive
parameter_list|()
block|{
return|return
name|inclusive_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|value_
operator|=
literal|""
expr_stmt|;
name|inclusive_
operator|=
literal|false
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasValue
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasInclusive
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|getValueBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|2
argument_list|,
name|inclusive_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|1
argument_list|,
name|getValueBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|2
argument_list|,
name|inclusive_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**        * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark}        */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|MarkOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Mark_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Mark_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.PartitionKeyComparator.Mark.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{           }
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|value_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|inclusive_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Mark_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|value_
operator|=
name|value_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|inclusive_
operator|=
name|inclusive_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasValue
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|value_
operator|=
name|other
operator|.
name|value_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasInclusive
argument_list|()
condition|)
block|{
name|setInclusive
argument_list|(
name|other
operator|.
name|getInclusive
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasValue
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasInclusive
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string value = 1;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|value_
init|=
literal|""
decl_stmt|;
comment|/**          *<code>required string value = 1;</code>          */
specifier|public
name|boolean
name|hasValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**          *<code>required string value = 1;</code>          */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getValue
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|value_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|value_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**          *<code>required string value = 1;</code>          */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getValueBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|value_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|value_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**          *<code>required string value = 1;</code>          */
specifier|public
name|Builder
name|setValue
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|value_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>required string value = 1;</code>          */
specifier|public
name|Builder
name|clearValue
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|value_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getValue
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>required string value = 1;</code>          */
specifier|public
name|Builder
name|setValueBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|value_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// required bool inclusive = 2;
specifier|private
name|boolean
name|inclusive_
decl_stmt|;
comment|/**          *<code>required bool inclusive = 2;</code>          */
specifier|public
name|boolean
name|hasInclusive
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**          *<code>required bool inclusive = 2;</code>          */
specifier|public
name|boolean
name|getInclusive
parameter_list|()
block|{
return|return
name|inclusive_
return|;
block|}
comment|/**          *<code>required bool inclusive = 2;</code>          */
specifier|public
name|Builder
name|setInclusive
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|inclusive_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>required bool inclusive = 2;</code>          */
specifier|public
name|Builder
name|clearInclusive
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|inclusive_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|Mark
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark)
block|}
specifier|public
interface|interface
name|RangeOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required string key = 1;
comment|/**        *<code>required string key = 1;</code>        */
name|boolean
name|hasKey
parameter_list|()
function_decl|;
comment|/**        *<code>required string key = 1;</code>        */
name|java
operator|.
name|lang
operator|.
name|String
name|getKey
parameter_list|()
function_decl|;
comment|/**        *<code>required string key = 1;</code>        */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getKeyBytes
parameter_list|()
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark start = 2;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark start = 2;</code>        */
name|boolean
name|hasStart
parameter_list|()
function_decl|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark start = 2;</code>        */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|getStart
parameter_list|()
function_decl|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark start = 2;</code>        */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|MarkOrBuilder
name|getStartOrBuilder
parameter_list|()
function_decl|;
comment|// optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark end = 3;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark end = 3;</code>        */
name|boolean
name|hasEnd
parameter_list|()
function_decl|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark end = 3;</code>        */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|getEnd
parameter_list|()
function_decl|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark end = 3;</code>        */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|MarkOrBuilder
name|getEndOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range}      */
specifier|public
specifier|static
specifier|final
class|class
name|Range
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|RangeOrBuilder
block|{
comment|// Use Range.newBuilder() to construct.
specifier|private
name|Range
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Range
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|Range
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|Range
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|Range
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|Range
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|key_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|start_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|start_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|start_
argument_list|)
expr_stmt|;
name|start_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|end_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|end_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|end_
argument_list|)
expr_stmt|;
name|end_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Range_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Range_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Range
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Range
argument_list|>
argument_list|()
block|{
specifier|public
name|Range
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Range
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Range
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string key = 1;
specifier|public
specifier|static
specifier|final
name|int
name|KEY_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|key_
decl_stmt|;
comment|/**        *<code>required string key = 1;</code>        */
specifier|public
name|boolean
name|hasKey
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>required string key = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getKey
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|key_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|key_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**        *<code>required string key = 1;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getKeyBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|key_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|key_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark start = 2;
specifier|public
specifier|static
specifier|final
name|int
name|START_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|start_
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark start = 2;</code>        */
specifier|public
name|boolean
name|hasStart
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark start = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|getStart
parameter_list|()
block|{
return|return
name|start_
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark start = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|MarkOrBuilder
name|getStartOrBuilder
parameter_list|()
block|{
return|return
name|start_
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark end = 3;
specifier|public
specifier|static
specifier|final
name|int
name|END_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|end_
decl_stmt|;
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark end = 3;</code>        */
specifier|public
name|boolean
name|hasEnd
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark end = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|getEnd
parameter_list|()
block|{
return|return
name|end_
return|;
block|}
comment|/**        *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark end = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|MarkOrBuilder
name|getEndOrBuilder
parameter_list|()
block|{
return|return
name|end_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|key_
operator|=
literal|""
expr_stmt|;
name|start_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|end_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasKey
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasStart
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getStart
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasEnd
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getEnd
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|getKeyBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|start_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|3
argument_list|,
name|end_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|1
argument_list|,
name|getKeyBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|start_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|3
argument_list|,
name|end_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**        * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range}        */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|RangeOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Range_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Range_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.PartitionKeyComparator.Range.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getStartFieldBuilder
argument_list|()
expr_stmt|;
name|getEndFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|key_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
if|if
condition|(
name|startBuilder_
operator|==
literal|null
condition|)
block|{
name|start_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|startBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
if|if
condition|(
name|endBuilder_
operator|==
literal|null
condition|)
block|{
name|end_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|endBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Range_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|key_
operator|=
name|key_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
if|if
condition|(
name|startBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|start_
operator|=
name|start_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|start_
operator|=
name|startBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
if|if
condition|(
name|endBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|end_
operator|=
name|end_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|end_
operator|=
name|endBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasKey
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|key_
operator|=
name|other
operator|.
name|key_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasStart
argument_list|()
condition|)
block|{
name|mergeStart
argument_list|(
name|other
operator|.
name|getStart
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasEnd
argument_list|()
condition|)
block|{
name|mergeEnd
argument_list|(
name|other
operator|.
name|getEnd
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasKey
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|hasStart
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getStart
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasEnd
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getEnd
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string key = 1;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|key_
init|=
literal|""
decl_stmt|;
comment|/**          *<code>required string key = 1;</code>          */
specifier|public
name|boolean
name|hasKey
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**          *<code>required string key = 1;</code>          */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getKey
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|key_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|key_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**          *<code>required string key = 1;</code>          */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getKeyBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|key_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|key_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**          *<code>required string key = 1;</code>          */
specifier|public
name|Builder
name|setKey
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|key_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>required string key = 1;</code>          */
specifier|public
name|Builder
name|clearKey
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|key_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getKey
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>required string key = 1;</code>          */
specifier|public
name|Builder
name|setKeyBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|key_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark start = 2;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|start_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|MarkOrBuilder
argument_list|>
name|startBuilder_
decl_stmt|;
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark start = 2;</code>          */
specifier|public
name|boolean
name|hasStart
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark start = 2;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|getStart
parameter_list|()
block|{
if|if
condition|(
name|startBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|start_
return|;
block|}
else|else
block|{
return|return
name|startBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark start = 2;</code>          */
specifier|public
name|Builder
name|setStart
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|value
parameter_list|)
block|{
if|if
condition|(
name|startBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|start_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|startBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark start = 2;</code>          */
specifier|public
name|Builder
name|setStart
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|startBuilder_
operator|==
literal|null
condition|)
block|{
name|start_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|startBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark start = 2;</code>          */
specifier|public
name|Builder
name|mergeStart
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|value
parameter_list|)
block|{
if|if
condition|(
name|startBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
operator|&&
name|start_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|start_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|newBuilder
argument_list|(
name|start_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|start_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|startBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark start = 2;</code>          */
specifier|public
name|Builder
name|clearStart
parameter_list|()
block|{
if|if
condition|(
name|startBuilder_
operator|==
literal|null
condition|)
block|{
name|start_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|startBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark start = 2;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|Builder
name|getStartBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getStartFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark start = 2;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|MarkOrBuilder
name|getStartOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|startBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|startBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|start_
return|;
block|}
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark start = 2;</code>          */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|MarkOrBuilder
argument_list|>
name|getStartFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|startBuilder_
operator|==
literal|null
condition|)
block|{
name|startBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|MarkOrBuilder
argument_list|>
argument_list|(
name|start_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|start_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|startBuilder_
return|;
block|}
comment|// optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark end = 3;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|end_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|MarkOrBuilder
argument_list|>
name|endBuilder_
decl_stmt|;
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark end = 3;</code>          */
specifier|public
name|boolean
name|hasEnd
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark end = 3;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|getEnd
parameter_list|()
block|{
if|if
condition|(
name|endBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|end_
return|;
block|}
else|else
block|{
return|return
name|endBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark end = 3;</code>          */
specifier|public
name|Builder
name|setEnd
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|value
parameter_list|)
block|{
if|if
condition|(
name|endBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|end_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|endBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark end = 3;</code>          */
specifier|public
name|Builder
name|setEnd
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|endBuilder_
operator|==
literal|null
condition|)
block|{
name|end_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|endBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark end = 3;</code>          */
specifier|public
name|Builder
name|mergeEnd
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
name|value
parameter_list|)
block|{
if|if
condition|(
name|endBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
operator|&&
name|end_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|end_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|newBuilder
argument_list|(
name|end_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|end_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|endBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark end = 3;</code>          */
specifier|public
name|Builder
name|clearEnd
parameter_list|()
block|{
if|if
condition|(
name|endBuilder_
operator|==
literal|null
condition|)
block|{
name|end_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|endBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark end = 3;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|Builder
name|getEndBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getEndFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark end = 3;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|MarkOrBuilder
name|getEndOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|endBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|endBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|end_
return|;
block|}
block|}
comment|/**          *<code>optional .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Mark end = 3;</code>          */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|MarkOrBuilder
argument_list|>
name|getEndFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|endBuilder_
operator|==
literal|null
condition|)
block|{
name|endBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Mark
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|MarkOrBuilder
argument_list|>
argument_list|(
name|end_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|end_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|endBuilder_
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|Range
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range)
block|}
specifier|public
interface|interface
name|OperatorOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator.Type type = 1;
comment|/**        *<code>required .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator.Type type = 1;</code>        */
name|boolean
name|hasType
parameter_list|()
function_decl|;
comment|/**        *<code>required .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator.Type type = 1;</code>        */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|Type
name|getType
parameter_list|()
function_decl|;
comment|// required string key = 2;
comment|/**        *<code>required string key = 2;</code>        */
name|boolean
name|hasKey
parameter_list|()
function_decl|;
comment|/**        *<code>required string key = 2;</code>        */
name|java
operator|.
name|lang
operator|.
name|String
name|getKey
parameter_list|()
function_decl|;
comment|/**        *<code>required string key = 2;</code>        */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getKeyBytes
parameter_list|()
function_decl|;
comment|// required string val = 3;
comment|/**        *<code>required string val = 3;</code>        */
name|boolean
name|hasVal
parameter_list|()
function_decl|;
comment|/**        *<code>required string val = 3;</code>        */
name|java
operator|.
name|lang
operator|.
name|String
name|getVal
parameter_list|()
function_decl|;
comment|/**        *<code>required string val = 3;</code>        */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getValBytes
parameter_list|()
function_decl|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator}      */
specifier|public
specifier|static
specifier|final
class|class
name|Operator
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|OperatorOrBuilder
block|{
comment|// Use Operator.newBuilder() to construct.
specifier|private
name|Operator
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Operator
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|Operator
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|Operator
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|Operator
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|Operator
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|8
case|:
block|{
name|int
name|rawValue
init|=
name|input
operator|.
name|readEnum
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|Type
name|value
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|Type
operator|.
name|valueOf
argument_list|(
name|rawValue
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unknownFields
operator|.
name|mergeVarintField
argument_list|(
literal|1
argument_list|,
name|rawValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|type_
operator|=
name|value
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|18
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|key_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|val_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Operator_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Operator_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Operator
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Operator
argument_list|>
argument_list|()
block|{
specifier|public
name|Operator
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Operator
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Operator
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
comment|/**        * Protobuf enum {@code org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator.Type}        */
specifier|public
enum|enum
name|Type
implements|implements
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolMessageEnum
block|{
comment|/**          *<code>LIKE = 0;</code>          */
name|LIKE
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
block|,
comment|/**          *<code>NOTEQUALS = 1;</code>          */
name|NOTEQUALS
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
block|,         ;
comment|/**          *<code>LIKE = 0;</code>          */
specifier|public
specifier|static
specifier|final
name|int
name|LIKE_VALUE
init|=
literal|0
decl_stmt|;
comment|/**          *<code>NOTEQUALS = 1;</code>          */
specifier|public
specifier|static
specifier|final
name|int
name|NOTEQUALS_VALUE
init|=
literal|1
decl_stmt|;
specifier|public
specifier|final
name|int
name|getNumber
parameter_list|()
block|{
return|return
name|value
return|;
block|}
specifier|public
specifier|static
name|Type
name|valueOf
parameter_list|(
name|int
name|value
parameter_list|)
block|{
switch|switch
condition|(
name|value
condition|)
block|{
case|case
literal|0
case|:
return|return
name|LIKE
return|;
case|case
literal|1
case|:
return|return
name|NOTEQUALS
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|Type
argument_list|>
name|internalGetValueMap
parameter_list|()
block|{
return|return
name|internalValueMap
return|;
block|}
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|Type
argument_list|>
name|internalValueMap
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|Type
argument_list|>
argument_list|()
block|{
specifier|public
name|Type
name|findValueByNumber
parameter_list|(
name|int
name|number
parameter_list|)
block|{
return|return
name|Type
operator|.
name|valueOf
argument_list|(
name|number
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|getValueDescriptor
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|getDescriptor
argument_list|()
operator|.
name|getEnumTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
return|;
block|}
specifier|private
specifier|static
specifier|final
name|Type
index|[]
name|VALUES
init|=
name|values
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|Type
name|valueOf
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|desc
parameter_list|)
block|{
if|if
condition|(
name|desc
operator|.
name|getType
argument_list|()
operator|!=
name|getDescriptor
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|IllegalArgumentException
argument_list|(
literal|"EnumValueDescriptor is not for this type."
argument_list|)
throw|;
block|}
return|return
name|VALUES
index|[
name|desc
operator|.
name|getIndex
argument_list|()
index|]
return|;
block|}
specifier|private
specifier|final
name|int
name|index
decl_stmt|;
specifier|private
specifier|final
name|int
name|value
decl_stmt|;
specifier|private
name|Type
parameter_list|(
name|int
name|index
parameter_list|,
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|index
operator|=
name|index
expr_stmt|;
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(enum_scope:org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator.Type)
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator.Type type = 1;
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|Type
name|type_
decl_stmt|;
comment|/**        *<code>required .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator.Type type = 1;</code>        */
specifier|public
name|boolean
name|hasType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>required .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator.Type type = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|Type
name|getType
parameter_list|()
block|{
return|return
name|type_
return|;
block|}
comment|// required string key = 2;
specifier|public
specifier|static
specifier|final
name|int
name|KEY_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|key_
decl_stmt|;
comment|/**        *<code>required string key = 2;</code>        */
specifier|public
name|boolean
name|hasKey
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>required string key = 2;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getKey
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|key_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|key_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**        *<code>required string key = 2;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getKeyBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|key_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|key_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// required string val = 3;
specifier|public
specifier|static
specifier|final
name|int
name|VAL_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|val_
decl_stmt|;
comment|/**        *<code>required string val = 3;</code>        */
specifier|public
name|boolean
name|hasVal
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>required string val = 3;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getVal
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|val_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|val_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**        *<code>required string val = 3;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getValBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|val_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|val_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|type_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|Type
operator|.
name|LIKE
expr_stmt|;
name|key_
operator|=
literal|""
expr_stmt|;
name|val_
operator|=
literal|""
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasType
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasKey
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasVal
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeEnum
argument_list|(
literal|1
argument_list|,
name|type_
operator|.
name|getNumber
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|2
argument_list|,
name|getKeyBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|3
argument_list|,
name|getValBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeEnumSize
argument_list|(
literal|1
argument_list|,
name|type_
operator|.
name|getNumber
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|2
argument_list|,
name|getKeyBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|3
argument_list|,
name|getValBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**        * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator}        */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|OperatorOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Operator_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Operator_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.PartitionKeyComparator.Operator.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{           }
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|type_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|Type
operator|.
name|LIKE
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|key_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|val_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Operator_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|type_
operator|=
name|type_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|key_
operator|=
name|key_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|val_
operator|=
name|val_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasType
argument_list|()
condition|)
block|{
name|setType
argument_list|(
name|other
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasKey
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|key_
operator|=
name|other
operator|.
name|key_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasVal
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|val_
operator|=
name|other
operator|.
name|val_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasType
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasKey
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasVal
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator.Type type = 1;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|Type
name|type_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|Type
operator|.
name|LIKE
decl_stmt|;
comment|/**          *<code>required .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator.Type type = 1;</code>          */
specifier|public
name|boolean
name|hasType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**          *<code>required .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator.Type type = 1;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|Type
name|getType
parameter_list|()
block|{
return|return
name|type_
return|;
block|}
comment|/**          *<code>required .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator.Type type = 1;</code>          */
specifier|public
name|Builder
name|setType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|Type
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|type_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>required .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator.Type type = 1;</code>          */
specifier|public
name|Builder
name|clearType
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|type_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|Type
operator|.
name|LIKE
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// required string key = 2;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|key_
init|=
literal|""
decl_stmt|;
comment|/**          *<code>required string key = 2;</code>          */
specifier|public
name|boolean
name|hasKey
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**          *<code>required string key = 2;</code>          */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getKey
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|key_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|key_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**          *<code>required string key = 2;</code>          */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getKeyBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|key_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|key_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**          *<code>required string key = 2;</code>          */
specifier|public
name|Builder
name|setKey
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|key_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>required string key = 2;</code>          */
specifier|public
name|Builder
name|clearKey
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|key_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getKey
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>required string key = 2;</code>          */
specifier|public
name|Builder
name|setKeyBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|key_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// required string val = 3;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|val_
init|=
literal|""
decl_stmt|;
comment|/**          *<code>required string val = 3;</code>          */
specifier|public
name|boolean
name|hasVal
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**          *<code>required string val = 3;</code>          */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getVal
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|val_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|val_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**          *<code>required string val = 3;</code>          */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getValBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|val_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|val_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**          *<code>required string val = 3;</code>          */
specifier|public
name|Builder
name|setVal
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|val_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>required string val = 3;</code>          */
specifier|public
name|Builder
name|clearVal
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|val_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getVal
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>required string val = 3;</code>          */
specifier|public
name|Builder
name|setValBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|val_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|Operator
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator)
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string names = 1;
specifier|public
specifier|static
specifier|final
name|int
name|NAMES_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|names_
decl_stmt|;
comment|/**      *<code>required string names = 1;</code>      */
specifier|public
name|boolean
name|hasNames
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>required string names = 1;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getNames
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|names_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|names_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>required string names = 1;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNamesBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|names_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|names_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// required string types = 2;
specifier|public
specifier|static
specifier|final
name|int
name|TYPES_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|types_
decl_stmt|;
comment|/**      *<code>required string types = 2;</code>      */
specifier|public
name|boolean
name|hasTypes
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>required string types = 2;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getTypes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|types_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|types_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>required string types = 2;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTypesBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|types_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|types_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;
specifier|public
specifier|static
specifier|final
name|int
name|OP_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
argument_list|>
name|op_
decl_stmt|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
argument_list|>
name|getOpList
parameter_list|()
block|{
return|return
name|op_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|OperatorOrBuilder
argument_list|>
name|getOpOrBuilderList
parameter_list|()
block|{
return|return
name|op_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>      */
specifier|public
name|int
name|getOpCount
parameter_list|()
block|{
return|return
name|op_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
name|getOp
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|op_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|OperatorOrBuilder
name|getOpOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|op_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;
specifier|public
specifier|static
specifier|final
name|int
name|RANGE_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
argument_list|>
name|range_
decl_stmt|;
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
argument_list|>
name|getRangeList
parameter_list|()
block|{
return|return
name|range_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|RangeOrBuilder
argument_list|>
name|getRangeOrBuilderList
parameter_list|()
block|{
return|return
name|range_
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>      */
specifier|public
name|int
name|getRangeCount
parameter_list|()
block|{
return|return
name|range_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
name|getRange
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|range_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|RangeOrBuilder
name|getRangeOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|range_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|names_
operator|=
literal|""
expr_stmt|;
name|types_
operator|=
literal|""
expr_stmt|;
name|op_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|range_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasNames
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasTypes
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getOpCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getOp
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getRangeCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getRange
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|getNamesBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|2
argument_list|,
name|getTypesBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|op_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|3
argument_list|,
name|op_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|range_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|4
argument_list|,
name|range_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|1
argument_list|,
name|getNamesBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|2
argument_list|,
name|getTypesBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|op_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|3
argument_list|,
name|op_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|range_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|4
argument_list|,
name|range_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparatorOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.PartitionKeyComparator.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getOpFieldBuilder
argument_list|()
expr_stmt|;
name|getRangeFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|names_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|types_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
if|if
condition|(
name|opBuilder_
operator|==
literal|null
condition|)
block|{
name|op_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
else|else
block|{
name|opBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|rangeBuilder_
operator|==
literal|null
condition|)
block|{
name|range_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
block|}
else|else
block|{
name|rangeBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|names_
operator|=
name|names_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|types_
operator|=
name|types_
expr_stmt|;
if|if
condition|(
name|opBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|op_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|op_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|op_
operator|=
name|op_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|op_
operator|=
name|opBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|rangeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|range_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|range_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|range_
operator|=
name|range_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|range_
operator|=
name|rangeBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasNames
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|names_
operator|=
name|other
operator|.
name|names_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasTypes
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|types_
operator|=
name|other
operator|.
name|types_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|opBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|op_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|op_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|op_
operator|=
name|other
operator|.
name|op_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureOpIsMutable
argument_list|()
expr_stmt|;
name|op_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|op_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|op_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|opBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|opBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|opBuilder_
operator|=
literal|null
expr_stmt|;
name|op_
operator|=
name|other
operator|.
name|op_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|opBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getOpFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|opBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|op_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|rangeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|range_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|range_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|range_
operator|=
name|other
operator|.
name|range_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureRangeIsMutable
argument_list|()
expr_stmt|;
name|range_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|range_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|range_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|rangeBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|rangeBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|rangeBuilder_
operator|=
literal|null
expr_stmt|;
name|range_
operator|=
name|other
operator|.
name|range_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|rangeBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getRangeFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|rangeBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|range_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasNames
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasTypes
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getOpCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getOp
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getRangeCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getRange
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string names = 1;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|names_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>required string names = 1;</code>        */
specifier|public
name|boolean
name|hasNames
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>required string names = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getNames
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|names_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|names_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string names = 1;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNamesBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|names_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|names_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string names = 1;</code>        */
specifier|public
name|Builder
name|setNames
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|names_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string names = 1;</code>        */
specifier|public
name|Builder
name|clearNames
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|names_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getNames
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string names = 1;</code>        */
specifier|public
name|Builder
name|setNamesBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|names_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// required string types = 2;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|types_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>required string types = 2;</code>        */
specifier|public
name|boolean
name|hasTypes
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>required string types = 2;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getTypes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|types_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|types_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string types = 2;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTypesBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|types_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|types_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string types = 2;</code>        */
specifier|public
name|Builder
name|setTypes
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|types_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string types = 2;</code>        */
specifier|public
name|Builder
name|clearTypes
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|types_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getTypes
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string types = 2;</code>        */
specifier|public
name|Builder
name|setTypesBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|types_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
argument_list|>
name|op_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureOpIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|op_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
argument_list|>
argument_list|(
name|op_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|OperatorOrBuilder
argument_list|>
name|opBuilder_
decl_stmt|;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
argument_list|>
name|getOpList
parameter_list|()
block|{
if|if
condition|(
name|opBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|op_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|opBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>        */
specifier|public
name|int
name|getOpCount
parameter_list|()
block|{
if|if
condition|(
name|opBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|op_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|opBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
name|getOp
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|opBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|op_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|opBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>        */
specifier|public
name|Builder
name|setOp
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
name|value
parameter_list|)
block|{
if|if
condition|(
name|opBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureOpIsMutable
argument_list|()
expr_stmt|;
name|op_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|opBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>        */
specifier|public
name|Builder
name|setOp
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|opBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureOpIsMutable
argument_list|()
expr_stmt|;
name|op_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|opBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>        */
specifier|public
name|Builder
name|addOp
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
name|value
parameter_list|)
block|{
if|if
condition|(
name|opBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureOpIsMutable
argument_list|()
expr_stmt|;
name|op_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|opBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>        */
specifier|public
name|Builder
name|addOp
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
name|value
parameter_list|)
block|{
if|if
condition|(
name|opBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureOpIsMutable
argument_list|()
expr_stmt|;
name|op_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|opBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>        */
specifier|public
name|Builder
name|addOp
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|opBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureOpIsMutable
argument_list|()
expr_stmt|;
name|op_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|opBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>        */
specifier|public
name|Builder
name|addOp
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|opBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureOpIsMutable
argument_list|()
expr_stmt|;
name|op_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|opBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>        */
specifier|public
name|Builder
name|addAllOp
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|opBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureOpIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|op_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|opBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>        */
specifier|public
name|Builder
name|clearOp
parameter_list|()
block|{
if|if
condition|(
name|opBuilder_
operator|==
literal|null
condition|)
block|{
name|op_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|opBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>        */
specifier|public
name|Builder
name|removeOp
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|opBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureOpIsMutable
argument_list|()
expr_stmt|;
name|op_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|opBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|Builder
name|getOpBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getOpFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|OperatorOrBuilder
name|getOpOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|opBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|op_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|opBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|OperatorOrBuilder
argument_list|>
name|getOpOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|opBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|opBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|op_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|Builder
name|addOpBuilder
parameter_list|()
block|{
return|return
name|getOpFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|Builder
name|addOpBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getOpFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Operator op = 3;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|Builder
argument_list|>
name|getOpBuilderList
parameter_list|()
block|{
return|return
name|getOpFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|OperatorOrBuilder
argument_list|>
name|getOpFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|opBuilder_
operator|==
literal|null
condition|)
block|{
name|opBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Operator
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|OperatorOrBuilder
argument_list|>
argument_list|(
name|op_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|op_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|opBuilder_
return|;
block|}
comment|// repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
argument_list|>
name|range_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureRangeIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|range_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
argument_list|>
argument_list|(
name|range_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|RangeOrBuilder
argument_list|>
name|rangeBuilder_
decl_stmt|;
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
argument_list|>
name|getRangeList
parameter_list|()
block|{
if|if
condition|(
name|rangeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|range_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|rangeBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>        */
specifier|public
name|int
name|getRangeCount
parameter_list|()
block|{
if|if
condition|(
name|rangeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|range_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|rangeBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
name|getRange
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|rangeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|range_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|rangeBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>        */
specifier|public
name|Builder
name|setRange
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
name|value
parameter_list|)
block|{
if|if
condition|(
name|rangeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureRangeIsMutable
argument_list|()
expr_stmt|;
name|range_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|rangeBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>        */
specifier|public
name|Builder
name|setRange
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|rangeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRangeIsMutable
argument_list|()
expr_stmt|;
name|range_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|rangeBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>        */
specifier|public
name|Builder
name|addRange
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
name|value
parameter_list|)
block|{
if|if
condition|(
name|rangeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureRangeIsMutable
argument_list|()
expr_stmt|;
name|range_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|rangeBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>        */
specifier|public
name|Builder
name|addRange
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
name|value
parameter_list|)
block|{
if|if
condition|(
name|rangeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureRangeIsMutable
argument_list|()
expr_stmt|;
name|range_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|rangeBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>        */
specifier|public
name|Builder
name|addRange
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|rangeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRangeIsMutable
argument_list|()
expr_stmt|;
name|range_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|rangeBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>        */
specifier|public
name|Builder
name|addRange
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|rangeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRangeIsMutable
argument_list|()
expr_stmt|;
name|range_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|rangeBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>        */
specifier|public
name|Builder
name|addAllRange
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|rangeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRangeIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|range_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|rangeBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>        */
specifier|public
name|Builder
name|clearRange
parameter_list|()
block|{
if|if
condition|(
name|rangeBuilder_
operator|==
literal|null
condition|)
block|{
name|range_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|rangeBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>        */
specifier|public
name|Builder
name|removeRange
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|rangeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRangeIsMutable
argument_list|()
expr_stmt|;
name|range_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|rangeBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
operator|.
name|Builder
name|getRangeBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getRangeFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|RangeOrBuilder
name|getRangeOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|rangeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|range_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|rangeBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|RangeOrBuilder
argument_list|>
name|getRangeOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|rangeBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|rangeBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|range_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
operator|.
name|Builder
name|addRangeBuilder
parameter_list|()
block|{
return|return
name|getRangeFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
operator|.
name|Builder
name|addRangeBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getRangeFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator.Range range = 4;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
operator|.
name|Builder
argument_list|>
name|getRangeBuilderList
parameter_list|()
block|{
return|return
name|getRangeFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|RangeOrBuilder
argument_list|>
name|getRangeFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|rangeBuilder_
operator|==
literal|null
condition|)
block|{
name|rangeBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|Range
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
operator|.
name|HbaseMetastoreProto
operator|.
name|PartitionKeyComparator
operator|.
name|RangeOrBuilder
argument_list|>
argument_list|(
name|range_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|range_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|rangeBuilder_
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|PartitionKeyComparator
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:org.apache.hadoop.hive.metastore.hbase.PartitionKeyComparator)
block|}
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStats_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStats_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_BloomFilter_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_BloomFilter_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_Entry_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_Entry_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_BooleanStats_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_BooleanStats_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_LongStats_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_LongStats_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DoubleStats_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DoubleStats_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_StringStats_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_StringStats_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_Decimal_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_Decimal_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Database_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Database_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_DelegationToken_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_DelegationToken_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_FieldSchema_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_FieldSchema_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Function_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Function_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Function_ResourceUri_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Function_ResourceUri_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_MasterKey_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_MasterKey_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ParameterEntry_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ParameterEntry_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Parameters_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Parameters_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Partition_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Partition_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSetEntry_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSetEntry_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSet_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSet_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrivilegeGrantInfo_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrivilegeGrantInfo_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfo_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfo_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfoList_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfoList_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleList_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleList_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Role_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Role_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_Order_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_Order_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SerDeInfo_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SerDeInfo_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueList_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueList_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueLocationMap_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueLocationMap_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Table_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Table_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Index_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Index_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Mark_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Mark_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Range_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Range_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Operator_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Operator_fieldAccessorTable
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|descriptor
return|;
block|}
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
name|descriptor
decl_stmt|;
static|static
block|{
name|java
operator|.
name|lang
operator|.
name|String
index|[]
name|descriptorData
init|=
block|{
literal|"\n\033hbase_metastore_proto.proto\022&org.apach"
operator|+
literal|"e.hadoop.hive.metastore.hbase\"h\n\tAggrSta"
operator|+
literal|"ts\022\023\n\013parts_found\030\001 \002(\003\022F\n\tcol_stats\030\002 \003"
operator|+
literal|"(\01323.org.apache.hadoop.hive.metastore.hb"
operator|+
literal|"ase.ColumnStats\"\364\001\n\024AggrStatsBloomFilter"
operator|+
literal|"\022\017\n\007db_name\030\001 \002(\014\022\022\n\ntable_name\030\002 \002(\014\022^\n"
operator|+
literal|"\014bloom_filter\030\003 \002(\0132H.org.apache.hadoop."
operator|+
literal|"hive.metastore.hbase.AggrStatsBloomFilte"
operator|+
literal|"r.BloomFilter\022\025\n\raggregated_at\030\004 \002(\003\032@\n\013"
operator|+
literal|"BloomFilter\022\020\n\010num_bits\030\001 \002(\005\022\021\n\tnum_fun"
block|,
literal|"cs\030\002 \002(\005\022\014\n\004bits\030\003 \003(\003\"\357\001\n\032AggrStatsInva"
operator|+
literal|"lidatorFilter\022_\n\rto_invalidate\030\001 \003(\0132H.o"
operator|+
literal|"rg.apache.hadoop.hive.metastore.hbase.Ag"
operator|+
literal|"grStatsInvalidatorFilter.Entry\022\021\n\trun_ev"
operator|+
literal|"ery\030\002 \002(\003\022\034\n\024max_cache_entry_life\030\003 \002(\003\032"
operator|+
literal|"?\n\005Entry\022\017\n\007db_name\030\001 \002(\014\022\022\n\ntable_name\030"
operator|+
literal|"\002 \002(\014\022\021\n\tpart_name\030\003 \002(\014\"\362\010\n\013ColumnStats"
operator|+
literal|"\022\025\n\rlast_analyzed\030\001 \001(\003\022\023\n\013column_type\030\002"
operator|+
literal|" \002(\t\022\021\n\tnum_nulls\030\003 \001(\003\022\033\n\023num_distinct_"
operator|+
literal|"values\030\004 \001(\003\022T\n\nbool_stats\030\005 \001(\0132@.org.a"
block|,
literal|"pache.hadoop.hive.metastore.hbase.Column"
operator|+
literal|"Stats.BooleanStats\022Q\n\nlong_stats\030\006 \001(\0132="
operator|+
literal|".org.apache.hadoop.hive.metastore.hbase."
operator|+
literal|"ColumnStats.LongStats\022U\n\014double_stats\030\007 "
operator|+
literal|"\001(\0132?.org.apache.hadoop.hive.metastore.h"
operator|+
literal|"base.ColumnStats.DoubleStats\022U\n\014string_s"
operator|+
literal|"tats\030\010 \001(\0132?.org.apache.hadoop.hive.meta"
operator|+
literal|"store.hbase.ColumnStats.StringStats\022U\n\014b"
operator|+
literal|"inary_stats\030\t \001(\0132?.org.apache.hadoop.hi"
operator|+
literal|"ve.metastore.hbase.ColumnStats.StringSta"
block|,
literal|"ts\022W\n\rdecimal_stats\030\n \001(\0132@.org.apache.h"
operator|+
literal|"adoop.hive.metastore.hbase.ColumnStats.D"
operator|+
literal|"ecimalStats\022\023\n\013column_name\030\013 \001(\t\022\023\n\013bit_"
operator|+
literal|"vectors\030\014 \001(\t\0325\n\014BooleanStats\022\021\n\tnum_tru"
operator|+
literal|"es\030\001 \001(\003\022\022\n\nnum_falses\030\002 \001(\003\0322\n\tLongStat"
operator|+
literal|"s\022\021\n\tlow_value\030\001 \001(\022\022\022\n\nhigh_value\030\002 \001(\022"
operator|+
literal|"\0324\n\013DoubleStats\022\021\n\tlow_value\030\001 \001(\001\022\022\n\nhi"
operator|+
literal|"gh_value\030\002 \001(\001\032=\n\013StringStats\022\026\n\016max_col"
operator|+
literal|"_length\030\001 \001(\003\022\026\n\016avg_col_length\030\002 \001(\001\032\365\001"
operator|+
literal|"\n\014DecimalStats\022[\n\tlow_value\030\001 \001(\0132H.org."
block|,
literal|"apache.hadoop.hive.metastore.hbase.Colum"
operator|+
literal|"nStats.DecimalStats.Decimal\022\\\n\nhigh_valu"
operator|+
literal|"e\030\002 \001(\0132H.org.apache.hadoop.hive.metasto"
operator|+
literal|"re.hbase.ColumnStats.DecimalStats.Decima"
operator|+
literal|"l\032*\n\007Decimal\022\020\n\010unscaled\030\001 \002(\014\022\r\n\005scale\030"
operator|+
literal|"\002 \002(\005\"\246\002\n\010Database\022\023\n\013description\030\001 \001(\t\022"
operator|+
literal|"\013\n\003uri\030\002 \001(\t\022F\n\nparameters\030\003 \001(\01322.org.a"
operator|+
literal|"pache.hadoop.hive.metastore.hbase.Parame"
operator|+
literal|"ters\022Q\n\nprivileges\030\004 \001(\0132=.org.apache.ha"
operator|+
literal|"doop.hive.metastore.hbase.PrincipalPrivi"
block|,
literal|"legeSet\022\022\n\nowner_name\030\005 \001(\t\022I\n\nowner_typ"
operator|+
literal|"e\030\006 \001(\01625.org.apache.hadoop.hive.metasto"
operator|+
literal|"re.hbase.PrincipalType\"$\n\017DelegationToke"
operator|+
literal|"n\022\021\n\ttoken_str\030\001 \002(\t\":\n\013FieldSchema\022\014\n\004n"
operator|+
literal|"ame\030\001 \002(\t\022\014\n\004type\030\002 \002(\t\022\017\n\007comment\030\003 \001(\t"
operator|+
literal|"\"\206\004\n\010Function\022\022\n\nclass_name\030\001 \001(\t\022\022\n\nown"
operator|+
literal|"er_name\030\002 \001(\t\022I\n\nowner_type\030\003 \001(\01625.org."
operator|+
literal|"apache.hadoop.hive.metastore.hbase.Princ"
operator|+
literal|"ipalType\022\023\n\013create_time\030\004 \001(\022\022T\n\rfunctio"
operator|+
literal|"n_type\030\005 \001(\0162=.org.apache.hadoop.hive.me"
block|,
literal|"tastore.hbase.Function.FunctionType\022S\n\rr"
operator|+
literal|"esource_uris\030\006 \003(\0132<.org.apache.hadoop.h"
operator|+
literal|"ive.metastore.hbase.Function.ResourceUri"
operator|+
literal|"\032\254\001\n\013ResourceUri\022`\n\rresource_type\030\001 \002(\0162"
operator|+
literal|"I.org.apache.hadoop.hive.metastore.hbase"
operator|+
literal|".Function.ResourceUri.ResourceType\022\013\n\003ur"
operator|+
literal|"i\030\002 \002(\t\".\n\014ResourceType\022\007\n\003JAR\020\001\022\010\n\004FILE"
operator|+
literal|"\020\002\022\013\n\007ARCHIVE\020\003\"\030\n\014FunctionType\022\010\n\004JAVA\020"
operator|+
literal|"\001\"\037\n\tMasterKey\022\022\n\nmaster_key\030\001 \002(\t\",\n\016Pa"
operator|+
literal|"rameterEntry\022\013\n\003key\030\001 \002(\t\022\r\n\005value\030\002 \002(\t"
block|,
literal|"\"W\n\nParameters\022I\n\tparameter\030\001 \003(\01326.org."
operator|+
literal|"apache.hadoop.hive.metastore.hbase.Param"
operator|+
literal|"eterEntry\"\360\001\n\tPartition\022\023\n\013create_time\030\001"
operator|+
literal|" \001(\003\022\030\n\020last_access_time\030\002 \001(\003\022\020\n\010locati"
operator|+
literal|"on\030\003 \001(\t\022I\n\rsd_parameters\030\004 \001(\01322.org.ap"
operator|+
literal|"ache.hadoop.hive.metastore.hbase.Paramet"
operator|+
literal|"ers\022\017\n\007sd_hash\030\005 \002(\014\022F\n\nparameters\030\006 \001(\013"
operator|+
literal|"22.org.apache.hadoop.hive.metastore.hbas"
operator|+
literal|"e.Parameters\"\204\001\n\032PrincipalPrivilegeSetEn"
operator|+
literal|"try\022\026\n\016principal_name\030\001 \002(\t\022N\n\nprivilege"
block|,
literal|"s\030\002 \003(\0132:.org.apache.hadoop.hive.metasto"
operator|+
literal|"re.hbase.PrivilegeGrantInfo\"\275\001\n\025Principa"
operator|+
literal|"lPrivilegeSet\022Q\n\005users\030\001 \003(\0132B.org.apach"
operator|+
literal|"e.hadoop.hive.metastore.hbase.PrincipalP"
operator|+
literal|"rivilegeSetEntry\022Q\n\005roles\030\002 \003(\0132B.org.ap"
operator|+
literal|"ache.hadoop.hive.metastore.hbase.Princip"
operator|+
literal|"alPrivilegeSetEntry\"\260\001\n\022PrivilegeGrantIn"
operator|+
literal|"fo\022\021\n\tprivilege\030\001 \001(\t\022\023\n\013create_time\030\002 \001"
operator|+
literal|"(\003\022\017\n\007grantor\030\003 \001(\t\022K\n\014grantor_type\030\004 \001("
operator|+
literal|"\01625.org.apache.hadoop.hive.metastore.hba"
block|,
literal|"se.PrincipalType\022\024\n\014grant_option\030\005 \001(\010\"\374"
operator|+
literal|"\001\n\rRoleGrantInfo\022\026\n\016principal_name\030\001 \002(\t"
operator|+
literal|"\022M\n\016principal_type\030\002 \002(\01625.org.apache.ha"
operator|+
literal|"doop.hive.metastore.hbase.PrincipalType\022"
operator|+
literal|"\020\n\010add_time\030\003 \001(\003\022\017\n\007grantor\030\004 \001(\t\022K\n\014gr"
operator|+
literal|"antor_type\030\005 \001(\01625.org.apache.hadoop.hiv"
operator|+
literal|"e.metastore.hbase.PrincipalType\022\024\n\014grant"
operator|+
literal|"_option\030\006 \001(\010\"^\n\021RoleGrantInfoList\022I\n\ngr"
operator|+
literal|"ant_info\030\001 \003(\01325.org.apache.hadoop.hive."
operator|+
literal|"metastore.hbase.RoleGrantInfo\"\030\n\010RoleLis"
block|,
literal|"t\022\014\n\004role\030\001 \003(\t\"/\n\004Role\022\023\n\013create_time\030\001"
operator|+
literal|" \001(\003\022\022\n\nowner_name\030\002 \001(\t\"\254\010\n\021StorageDesc"
operator|+
literal|"riptor\022A\n\004cols\030\001 \003(\01323.org.apache.hadoop"
operator|+
literal|".hive.metastore.hbase.FieldSchema\022\024\n\014inp"
operator|+
literal|"ut_format\030\002 \001(\t\022\025\n\routput_format\030\003 \001(\t\022\025"
operator|+
literal|"\n\ris_compressed\030\004 \001(\010\022\023\n\013num_buckets\030\005 \001"
operator|+
literal|"(\021\022W\n\nserde_info\030\006 \001(\0132C.org.apache.hado"
operator|+
literal|"op.hive.metastore.hbase.StorageDescripto"
operator|+
literal|"r.SerDeInfo\022\023\n\013bucket_cols\030\007 \003(\t\022R\n\tsort"
operator|+
literal|"_cols\030\010 \003(\0132?.org.apache.hadoop.hive.met"
block|,
literal|"astore.hbase.StorageDescriptor.Order\022Y\n\013"
operator|+
literal|"skewed_info\030\t \001(\0132D.org.apache.hadoop.hi"
operator|+
literal|"ve.metastore.hbase.StorageDescriptor.Ske"
operator|+
literal|"wedInfo\022!\n\031stored_as_sub_directories\030\n \001"
operator|+
literal|"(\010\032.\n\005Order\022\023\n\013column_name\030\001 \002(\t\022\020\n\005orde"
operator|+
literal|"r\030\002 \001(\021:\0011\032|\n\tSerDeInfo\022\014\n\004name\030\001 \001(\t\022\031\n"
operator|+
literal|"\021serialization_lib\030\002 \001(\t\022F\n\nparameters\030\003"
operator|+
literal|" \001(\01322.org.apache.hadoop.hive.metastore."
operator|+
literal|"hbase.Parameters\032\214\003\n\nSkewedInfo\022\030\n\020skewe"
operator|+
literal|"d_col_names\030\001 \003(\t\022r\n\021skewed_col_values\030\002"
block|,
literal|" \003(\0132W.org.apache.hadoop.hive.metastore."
operator|+
literal|"hbase.StorageDescriptor.SkewedInfo.Skewe"
operator|+
literal|"dColValueList\022\206\001\n\036skewed_col_value_locat"
operator|+
literal|"ion_maps\030\003 \003(\0132^.org.apache.hadoop.hive."
operator|+
literal|"metastore.hbase.StorageDescriptor.Skewed"
operator|+
literal|"Info.SkewedColValueLocationMap\032.\n\022Skewed"
operator|+
literal|"ColValueList\022\030\n\020skewed_col_value\030\001 \003(\t\0327"
operator|+
literal|"\n\031SkewedColValueLocationMap\022\013\n\003key\030\001 \003(\t"
operator|+
literal|"\022\r\n\005value\030\002 \002(\t\"\220\004\n\005Table\022\r\n\005owner\030\001 \001(\t"
operator|+
literal|"\022\023\n\013create_time\030\002 \001(\003\022\030\n\020last_access_tim"
block|,
literal|"e\030\003 \001(\003\022\021\n\tretention\030\004 \001(\003\022\020\n\010location\030\005"
operator|+
literal|" \001(\t\022I\n\rsd_parameters\030\006 \001(\01322.org.apache"
operator|+
literal|".hadoop.hive.metastore.hbase.Parameters\022"
operator|+
literal|"\017\n\007sd_hash\030\007 \002(\014\022K\n\016partition_keys\030\010 \003(\013"
operator|+
literal|"23.org.apache.hadoop.hive.metastore.hbas"
operator|+
literal|"e.FieldSchema\022F\n\nparameters\030\t \001(\01322.org."
operator|+
literal|"apache.hadoop.hive.metastore.hbase.Param"
operator|+
literal|"eters\022\032\n\022view_original_text\030\n \001(\t\022\032\n\022vie"
operator|+
literal|"w_expanded_text\030\013 \001(\t\022\022\n\ntable_type\030\014 \001("
operator|+
literal|"\t\022Q\n\nprivileges\030\r \001(\0132=.org.apache.hadoo"
block|,
literal|"p.hive.metastore.hbase.PrincipalPrivileg"
operator|+
literal|"eSet\022\024\n\014is_temporary\030\016 \001(\010\"\334\002\n\005Index\022\031\n\021"
operator|+
literal|"indexHandlerClass\030\001 \001(\t\022\016\n\006dbName\030\002 \002(\t\022"
operator|+
literal|"\025\n\rorigTableName\030\003 \002(\t\022\020\n\010location\030\004 \001(\t"
operator|+
literal|"\022I\n\rsd_parameters\030\005 \001(\01322.org.apache.had"
operator|+
literal|"oop.hive.metastore.hbase.Parameters\022\022\n\nc"
operator|+
literal|"reateTime\030\006 \001(\005\022\026\n\016lastAccessTime\030\007 \001(\005\022"
operator|+
literal|"\026\n\016indexTableName\030\010 \001(\t\022\017\n\007sd_hash\030\t \001(\014"
operator|+
literal|"\022F\n\nparameters\030\n \001(\01322.org.apache.hadoop"
operator|+
literal|".hive.metastore.hbase.Parameters\022\027\n\017defe"
block|,
literal|"rredRebuild\030\013 \001(\010\"\353\004\n\026PartitionKeyCompar"
operator|+
literal|"ator\022\r\n\005names\030\001 \002(\t\022\r\n\005types\030\002 \002(\t\022S\n\002op"
operator|+
literal|"\030\003 \003(\0132G.org.apache.hadoop.hive.metastor"
operator|+
literal|"e.hbase.PartitionKeyComparator.Operator\022"
operator|+
literal|"S\n\005range\030\004 \003(\0132D.org.apache.hadoop.hive."
operator|+
literal|"metastore.hbase.PartitionKeyComparator.R"
operator|+
literal|"ange\032(\n\004Mark\022\r\n\005value\030\001 \002(\t\022\021\n\tinclusive"
operator|+
literal|"\030\002 \002(\010\032\272\001\n\005Range\022\013\n\003key\030\001 \002(\t\022R\n\005start\030\002"
operator|+
literal|" \001(\0132C.org.apache.hadoop.hive.metastore."
operator|+
literal|"hbase.PartitionKeyComparator.Mark\022P\n\003end"
block|,
literal|"\030\003 \001(\0132C.org.apache.hadoop.hive.metastor"
operator|+
literal|"e.hbase.PartitionKeyComparator.Mark\032\241\001\n\010"
operator|+
literal|"Operator\022Z\n\004type\030\001 \002(\0162L.org.apache.hado"
operator|+
literal|"op.hive.metastore.hbase.PartitionKeyComp"
operator|+
literal|"arator.Operator.Type\022\013\n\003key\030\002 \002(\t\022\013\n\003val"
operator|+
literal|"\030\003 \002(\t\"\037\n\004Type\022\010\n\004LIKE\020\000\022\r\n\tNOTEQUALS\020\001*"
operator|+
literal|"#\n\rPrincipalType\022\010\n\004USER\020\000\022\010\n\004ROLE\020\001"
block|}
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
operator|.
name|InternalDescriptorAssigner
name|assigner
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
operator|.
name|InternalDescriptorAssigner
argument_list|()
block|{
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistry
name|assignDescriptors
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
name|root
parameter_list|)
block|{
name|descriptor
operator|=
name|root
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStats_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStats_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStats_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"PartsFound"
block|,
literal|"ColStats"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"DbName"
block|,
literal|"TableName"
block|,
literal|"BloomFilter"
block|,
literal|"AggregatedAt"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_BloomFilter_descriptor
operator|=
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_descriptor
operator|.
name|getNestedTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_BloomFilter_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsBloomFilter_BloomFilter_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"NumBits"
block|,
literal|"NumFuncs"
block|,
literal|"Bits"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"ToInvalidate"
block|,
literal|"RunEvery"
block|,
literal|"MaxCacheEntryLife"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_Entry_descriptor
operator|=
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_descriptor
operator|.
name|getNestedTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_Entry_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_AggrStatsInvalidatorFilter_Entry_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"DbName"
block|,
literal|"TableName"
block|,
literal|"PartName"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"LastAnalyzed"
block|,
literal|"ColumnType"
block|,
literal|"NumNulls"
block|,
literal|"NumDistinctValues"
block|,
literal|"BoolStats"
block|,
literal|"LongStats"
block|,
literal|"DoubleStats"
block|,
literal|"StringStats"
block|,
literal|"BinaryStats"
block|,
literal|"DecimalStats"
block|,
literal|"ColumnName"
block|,
literal|"BitVectors"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_BooleanStats_descriptor
operator|=
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_descriptor
operator|.
name|getNestedTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_BooleanStats_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_BooleanStats_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"NumTrues"
block|,
literal|"NumFalses"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_LongStats_descriptor
operator|=
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_descriptor
operator|.
name|getNestedTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_LongStats_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_LongStats_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"LowValue"
block|,
literal|"HighValue"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DoubleStats_descriptor
operator|=
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_descriptor
operator|.
name|getNestedTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DoubleStats_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DoubleStats_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"LowValue"
block|,
literal|"HighValue"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_StringStats_descriptor
operator|=
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_descriptor
operator|.
name|getNestedTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_StringStats_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_StringStats_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"MaxColLength"
block|,
literal|"AvgColLength"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_descriptor
operator|=
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_descriptor
operator|.
name|getNestedTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"LowValue"
block|,
literal|"HighValue"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_Decimal_descriptor
operator|=
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_descriptor
operator|.
name|getNestedTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_Decimal_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ColumnStats_DecimalStats_Decimal_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Unscaled"
block|,
literal|"Scale"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Database_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Database_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Database_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Description"
block|,
literal|"Uri"
block|,
literal|"Parameters"
block|,
literal|"Privileges"
block|,
literal|"OwnerName"
block|,
literal|"OwnerType"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_DelegationToken_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_DelegationToken_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_DelegationToken_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"TokenStr"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_FieldSchema_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_FieldSchema_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_FieldSchema_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Name"
block|,
literal|"Type"
block|,
literal|"Comment"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Function_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|7
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Function_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Function_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"ClassName"
block|,
literal|"OwnerName"
block|,
literal|"OwnerType"
block|,
literal|"CreateTime"
block|,
literal|"FunctionType"
block|,
literal|"ResourceUris"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Function_ResourceUri_descriptor
operator|=
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Function_descriptor
operator|.
name|getNestedTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Function_ResourceUri_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Function_ResourceUri_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"ResourceType"
block|,
literal|"Uri"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_MasterKey_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|8
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_MasterKey_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_MasterKey_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"MasterKey"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ParameterEntry_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|9
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ParameterEntry_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_ParameterEntry_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Key"
block|,
literal|"Value"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Parameters_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Parameters_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Parameters_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Parameter"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Partition_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|11
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Partition_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Partition_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"CreateTime"
block|,
literal|"LastAccessTime"
block|,
literal|"Location"
block|,
literal|"SdParameters"
block|,
literal|"SdHash"
block|,
literal|"Parameters"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSetEntry_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|12
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSetEntry_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSetEntry_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"PrincipalName"
block|,
literal|"Privileges"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSet_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|13
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSet_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrincipalPrivilegeSet_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Users"
block|,
literal|"Roles"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrivilegeGrantInfo_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|14
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrivilegeGrantInfo_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PrivilegeGrantInfo_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Privilege"
block|,
literal|"CreateTime"
block|,
literal|"Grantor"
block|,
literal|"GrantorType"
block|,
literal|"GrantOption"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfo_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|15
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfo_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfo_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"PrincipalName"
block|,
literal|"PrincipalType"
block|,
literal|"AddTime"
block|,
literal|"Grantor"
block|,
literal|"GrantorType"
block|,
literal|"GrantOption"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfoList_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|16
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfoList_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleGrantInfoList_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"GrantInfo"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleList_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|17
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleList_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_RoleList_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Role"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Role_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|18
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Role_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Role_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"CreateTime"
block|,
literal|"OwnerName"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|19
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Cols"
block|,
literal|"InputFormat"
block|,
literal|"OutputFormat"
block|,
literal|"IsCompressed"
block|,
literal|"NumBuckets"
block|,
literal|"SerdeInfo"
block|,
literal|"BucketCols"
block|,
literal|"SortCols"
block|,
literal|"SkewedInfo"
block|,
literal|"StoredAsSubDirectories"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_Order_descriptor
operator|=
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_descriptor
operator|.
name|getNestedTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_Order_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_Order_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"ColumnName"
block|,
literal|"Order"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SerDeInfo_descriptor
operator|=
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_descriptor
operator|.
name|getNestedTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SerDeInfo_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SerDeInfo_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Name"
block|,
literal|"SerializationLib"
block|,
literal|"Parameters"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_descriptor
operator|=
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_descriptor
operator|.
name|getNestedTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"SkewedColNames"
block|,
literal|"SkewedColValues"
block|,
literal|"SkewedColValueLocationMaps"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueList_descriptor
operator|=
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_descriptor
operator|.
name|getNestedTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueList_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueList_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"SkewedColValue"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueLocationMap_descriptor
operator|=
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_descriptor
operator|.
name|getNestedTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueLocationMap_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_StorageDescriptor_SkewedInfo_SkewedColValueLocationMap_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Key"
block|,
literal|"Value"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Table_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Table_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Table_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Owner"
block|,
literal|"CreateTime"
block|,
literal|"LastAccessTime"
block|,
literal|"Retention"
block|,
literal|"Location"
block|,
literal|"SdParameters"
block|,
literal|"SdHash"
block|,
literal|"PartitionKeys"
block|,
literal|"Parameters"
block|,
literal|"ViewOriginalText"
block|,
literal|"ViewExpandedText"
block|,
literal|"TableType"
block|,
literal|"Privileges"
block|,
literal|"IsTemporary"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Index_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|21
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Index_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_Index_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"IndexHandlerClass"
block|,
literal|"DbName"
block|,
literal|"OrigTableName"
block|,
literal|"Location"
block|,
literal|"SdParameters"
block|,
literal|"CreateTime"
block|,
literal|"LastAccessTime"
block|,
literal|"IndexTableName"
block|,
literal|"SdHash"
block|,
literal|"Parameters"
block|,
literal|"DeferredRebuild"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|22
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Names"
block|,
literal|"Types"
block|,
literal|"Op"
block|,
literal|"Range"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Mark_descriptor
operator|=
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_descriptor
operator|.
name|getNestedTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Mark_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Mark_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Value"
block|,
literal|"Inclusive"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Range_descriptor
operator|=
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_descriptor
operator|.
name|getNestedTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Range_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Range_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Key"
block|,
literal|"Start"
block|,
literal|"End"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Operator_descriptor
operator|=
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_descriptor
operator|.
name|getNestedTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Operator_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_org_apache_hadoop_hive_metastore_hbase_PartitionKeyComparator_Operator_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Type"
block|,
literal|"Key"
block|,
literal|"Val"
block|, }
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
operator|.
name|internalBuildGeneratedFileFrom
argument_list|(
name|descriptorData
argument_list|,
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
index|[]
block|{         }
argument_list|,
name|assigner
argument_list|)
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(outer_class_scope)
block|}
end_class

end_unit

