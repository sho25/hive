begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|cache
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|conf
operator|.
name|HiveConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|ObjectStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|TestObjectStore
operator|.
name|MockPartitionExpressionProxy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|FieldSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Partition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|StorageDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|TestCachedStore
block|{
specifier|private
name|CachedStore
name|cachedStore
init|=
operator|new
name|CachedStore
argument_list|()
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|HiveConf
name|conf
init|=
operator|new
name|HiveConf
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setVar
argument_list|(
name|HiveConf
operator|.
name|ConfVars
operator|.
name|METASTORE_EXPRESSION_PROXY_CLASS
argument_list|,
name|MockPartitionExpressionProxy
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|ObjectStore
name|objectStore
init|=
operator|new
name|ObjectStore
argument_list|()
decl_stmt|;
name|objectStore
operator|.
name|setConf
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|cachedStore
operator|.
name|setRawStore
argument_list|(
name|objectStore
argument_list|)
expr_stmt|;
name|SharedCache
operator|.
name|getDatabaseCache
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|SharedCache
operator|.
name|getTableCache
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|SharedCache
operator|.
name|getPartitionCache
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|SharedCache
operator|.
name|getSdCache
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
name|SharedCache
operator|.
name|getPartitionColStatsCache
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSharedStoreDb
parameter_list|()
block|{
name|Database
name|db1
init|=
operator|new
name|Database
argument_list|()
decl_stmt|;
name|Database
name|db2
init|=
operator|new
name|Database
argument_list|()
decl_stmt|;
name|Database
name|db3
init|=
operator|new
name|Database
argument_list|()
decl_stmt|;
name|Database
name|newDb1
init|=
operator|new
name|Database
argument_list|()
decl_stmt|;
name|newDb1
operator|.
name|setName
argument_list|(
literal|"db1"
argument_list|)
expr_stmt|;
name|SharedCache
operator|.
name|addDatabaseToCache
argument_list|(
literal|"db1"
argument_list|,
name|db1
argument_list|)
expr_stmt|;
name|SharedCache
operator|.
name|addDatabaseToCache
argument_list|(
literal|"db2"
argument_list|,
name|db2
argument_list|)
expr_stmt|;
name|SharedCache
operator|.
name|addDatabaseToCache
argument_list|(
literal|"db3"
argument_list|,
name|db3
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|SharedCache
operator|.
name|getCachedDatabaseCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|SharedCache
operator|.
name|alterDatabaseInCache
argument_list|(
literal|"db1"
argument_list|,
name|newDb1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|SharedCache
operator|.
name|getCachedDatabaseCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|SharedCache
operator|.
name|removeDatabaseFromCache
argument_list|(
literal|"db2"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|SharedCache
operator|.
name|getCachedDatabaseCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|dbs
init|=
name|SharedCache
operator|.
name|listCachedDatabases
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|dbs
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|dbs
operator|.
name|contains
argument_list|(
literal|"db1"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|dbs
operator|.
name|contains
argument_list|(
literal|"db3"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSharedStoreTable
parameter_list|()
block|{
name|Table
name|tbl1
init|=
operator|new
name|Table
argument_list|()
decl_stmt|;
name|StorageDescriptor
name|sd1
init|=
operator|new
name|StorageDescriptor
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols1
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|cols1
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"col1"
argument_list|,
literal|"int"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params1
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|params1
operator|.
name|put
argument_list|(
literal|"key"
argument_list|,
literal|"value"
argument_list|)
expr_stmt|;
name|sd1
operator|.
name|setCols
argument_list|(
name|cols1
argument_list|)
expr_stmt|;
name|sd1
operator|.
name|setParameters
argument_list|(
name|params1
argument_list|)
expr_stmt|;
name|sd1
operator|.
name|setLocation
argument_list|(
literal|"loc1"
argument_list|)
expr_stmt|;
name|tbl1
operator|.
name|setSd
argument_list|(
name|sd1
argument_list|)
expr_stmt|;
name|tbl1
operator|.
name|setPartitionKeys
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|Table
name|tbl2
init|=
operator|new
name|Table
argument_list|()
decl_stmt|;
name|StorageDescriptor
name|sd2
init|=
operator|new
name|StorageDescriptor
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols2
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|cols2
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"col1"
argument_list|,
literal|"int"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params2
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|params2
operator|.
name|put
argument_list|(
literal|"key"
argument_list|,
literal|"value"
argument_list|)
expr_stmt|;
name|sd2
operator|.
name|setCols
argument_list|(
name|cols2
argument_list|)
expr_stmt|;
name|sd2
operator|.
name|setParameters
argument_list|(
name|params2
argument_list|)
expr_stmt|;
name|sd2
operator|.
name|setLocation
argument_list|(
literal|"loc2"
argument_list|)
expr_stmt|;
name|tbl2
operator|.
name|setSd
argument_list|(
name|sd2
argument_list|)
expr_stmt|;
name|tbl2
operator|.
name|setPartitionKeys
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|Table
name|tbl3
init|=
operator|new
name|Table
argument_list|()
decl_stmt|;
name|StorageDescriptor
name|sd3
init|=
operator|new
name|StorageDescriptor
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols3
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|cols3
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"col3"
argument_list|,
literal|"int"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params3
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|params3
operator|.
name|put
argument_list|(
literal|"key2"
argument_list|,
literal|"value2"
argument_list|)
expr_stmt|;
name|sd3
operator|.
name|setCols
argument_list|(
name|cols3
argument_list|)
expr_stmt|;
name|sd3
operator|.
name|setParameters
argument_list|(
name|params3
argument_list|)
expr_stmt|;
name|sd3
operator|.
name|setLocation
argument_list|(
literal|"loc3"
argument_list|)
expr_stmt|;
name|tbl3
operator|.
name|setSd
argument_list|(
name|sd3
argument_list|)
expr_stmt|;
name|tbl3
operator|.
name|setPartitionKeys
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|Table
name|newTbl1
init|=
operator|new
name|Table
argument_list|()
decl_stmt|;
name|newTbl1
operator|.
name|setDbName
argument_list|(
literal|"db2"
argument_list|)
expr_stmt|;
name|newTbl1
operator|.
name|setTableName
argument_list|(
literal|"tbl1"
argument_list|)
expr_stmt|;
name|StorageDescriptor
name|newSd1
init|=
operator|new
name|StorageDescriptor
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|newCols1
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|newCols1
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"newcol1"
argument_list|,
literal|"int"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|newParams1
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|newParams1
operator|.
name|put
argument_list|(
literal|"key"
argument_list|,
literal|"value"
argument_list|)
expr_stmt|;
name|newSd1
operator|.
name|setCols
argument_list|(
name|newCols1
argument_list|)
expr_stmt|;
name|newSd1
operator|.
name|setParameters
argument_list|(
name|params1
argument_list|)
expr_stmt|;
name|newSd1
operator|.
name|setLocation
argument_list|(
literal|"loc1"
argument_list|)
expr_stmt|;
name|newTbl1
operator|.
name|setSd
argument_list|(
name|newSd1
argument_list|)
expr_stmt|;
name|newTbl1
operator|.
name|setPartitionKeys
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
argument_list|)
expr_stmt|;
name|SharedCache
operator|.
name|addTableToCache
argument_list|(
literal|"db1"
argument_list|,
literal|"tbl1"
argument_list|,
name|tbl1
argument_list|)
expr_stmt|;
name|SharedCache
operator|.
name|addTableToCache
argument_list|(
literal|"db1"
argument_list|,
literal|"tbl2"
argument_list|,
name|tbl2
argument_list|)
expr_stmt|;
name|SharedCache
operator|.
name|addTableToCache
argument_list|(
literal|"db1"
argument_list|,
literal|"tbl3"
argument_list|,
name|tbl3
argument_list|)
expr_stmt|;
name|SharedCache
operator|.
name|addTableToCache
argument_list|(
literal|"db2"
argument_list|,
literal|"tbl1"
argument_list|,
name|tbl1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|SharedCache
operator|.
name|getCachedTableCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|SharedCache
operator|.
name|getSdCache
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|Table
name|t
init|=
name|SharedCache
operator|.
name|getTableFromCache
argument_list|(
literal|"db1"
argument_list|,
literal|"tbl1"
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|t
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
argument_list|,
literal|"loc1"
argument_list|)
expr_stmt|;
name|SharedCache
operator|.
name|removeTableFromCache
argument_list|(
literal|"db1"
argument_list|,
literal|"tbl1"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|SharedCache
operator|.
name|getCachedTableCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|SharedCache
operator|.
name|getSdCache
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|SharedCache
operator|.
name|alterTableInCache
argument_list|(
literal|"db2"
argument_list|,
literal|"tbl1"
argument_list|,
name|newTbl1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|SharedCache
operator|.
name|getCachedTableCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|SharedCache
operator|.
name|getSdCache
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|SharedCache
operator|.
name|removeTableFromCache
argument_list|(
literal|"db1"
argument_list|,
literal|"tbl2"
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|SharedCache
operator|.
name|getCachedTableCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|SharedCache
operator|.
name|getSdCache
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSharedStorePartition
parameter_list|()
block|{
name|Partition
name|part1
init|=
operator|new
name|Partition
argument_list|()
decl_stmt|;
name|StorageDescriptor
name|sd1
init|=
operator|new
name|StorageDescriptor
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols1
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|cols1
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"col1"
argument_list|,
literal|"int"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params1
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|params1
operator|.
name|put
argument_list|(
literal|"key"
argument_list|,
literal|"value"
argument_list|)
expr_stmt|;
name|sd1
operator|.
name|setCols
argument_list|(
name|cols1
argument_list|)
expr_stmt|;
name|sd1
operator|.
name|setParameters
argument_list|(
name|params1
argument_list|)
expr_stmt|;
name|sd1
operator|.
name|setLocation
argument_list|(
literal|"loc1"
argument_list|)
expr_stmt|;
name|part1
operator|.
name|setSd
argument_list|(
name|sd1
argument_list|)
expr_stmt|;
name|part1
operator|.
name|setValues
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"201701"
argument_list|)
argument_list|)
expr_stmt|;
name|Partition
name|part2
init|=
operator|new
name|Partition
argument_list|()
decl_stmt|;
name|StorageDescriptor
name|sd2
init|=
operator|new
name|StorageDescriptor
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols2
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|cols2
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"col1"
argument_list|,
literal|"int"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params2
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|params2
operator|.
name|put
argument_list|(
literal|"key"
argument_list|,
literal|"value"
argument_list|)
expr_stmt|;
name|sd2
operator|.
name|setCols
argument_list|(
name|cols2
argument_list|)
expr_stmt|;
name|sd2
operator|.
name|setParameters
argument_list|(
name|params2
argument_list|)
expr_stmt|;
name|sd2
operator|.
name|setLocation
argument_list|(
literal|"loc2"
argument_list|)
expr_stmt|;
name|part2
operator|.
name|setSd
argument_list|(
name|sd2
argument_list|)
expr_stmt|;
name|part2
operator|.
name|setValues
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"201702"
argument_list|)
argument_list|)
expr_stmt|;
name|Partition
name|part3
init|=
operator|new
name|Partition
argument_list|()
decl_stmt|;
name|StorageDescriptor
name|sd3
init|=
operator|new
name|StorageDescriptor
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols3
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|cols3
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"col3"
argument_list|,
literal|"int"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params3
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|params3
operator|.
name|put
argument_list|(
literal|"key2"
argument_list|,
literal|"value2"
argument_list|)
expr_stmt|;
name|sd3
operator|.
name|setCols
argument_list|(
name|cols3
argument_list|)
expr_stmt|;
name|sd3
operator|.
name|setParameters
argument_list|(
name|params3
argument_list|)
expr_stmt|;
name|sd3
operator|.
name|setLocation
argument_list|(
literal|"loc3"
argument_list|)
expr_stmt|;
name|part3
operator|.
name|setSd
argument_list|(
name|sd3
argument_list|)
expr_stmt|;
name|part3
operator|.
name|setValues
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"201703"
argument_list|)
argument_list|)
expr_stmt|;
name|Partition
name|newPart1
init|=
operator|new
name|Partition
argument_list|()
decl_stmt|;
name|newPart1
operator|.
name|setDbName
argument_list|(
literal|"db1"
argument_list|)
expr_stmt|;
name|newPart1
operator|.
name|setTableName
argument_list|(
literal|"tbl1"
argument_list|)
expr_stmt|;
name|StorageDescriptor
name|newSd1
init|=
operator|new
name|StorageDescriptor
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|newCols1
init|=
operator|new
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
argument_list|()
decl_stmt|;
name|newCols1
operator|.
name|add
argument_list|(
operator|new
name|FieldSchema
argument_list|(
literal|"newcol1"
argument_list|,
literal|"int"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|newParams1
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|newParams1
operator|.
name|put
argument_list|(
literal|"key"
argument_list|,
literal|"value"
argument_list|)
expr_stmt|;
name|newSd1
operator|.
name|setCols
argument_list|(
name|newCols1
argument_list|)
expr_stmt|;
name|newSd1
operator|.
name|setParameters
argument_list|(
name|params1
argument_list|)
expr_stmt|;
name|newSd1
operator|.
name|setLocation
argument_list|(
literal|"loc1"
argument_list|)
expr_stmt|;
name|newPart1
operator|.
name|setSd
argument_list|(
name|newSd1
argument_list|)
expr_stmt|;
name|newPart1
operator|.
name|setValues
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"201701"
argument_list|)
argument_list|)
expr_stmt|;
name|SharedCache
operator|.
name|addPartitionToCache
argument_list|(
literal|"db1"
argument_list|,
literal|"tbl1"
argument_list|,
name|part1
argument_list|)
expr_stmt|;
name|SharedCache
operator|.
name|addPartitionToCache
argument_list|(
literal|"db1"
argument_list|,
literal|"tbl1"
argument_list|,
name|part2
argument_list|)
expr_stmt|;
name|SharedCache
operator|.
name|addPartitionToCache
argument_list|(
literal|"db1"
argument_list|,
literal|"tbl1"
argument_list|,
name|part3
argument_list|)
expr_stmt|;
name|SharedCache
operator|.
name|addPartitionToCache
argument_list|(
literal|"db1"
argument_list|,
literal|"tbl2"
argument_list|,
name|part1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|SharedCache
operator|.
name|getCachedPartitionCount
argument_list|()
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|SharedCache
operator|.
name|getSdCache
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|Partition
name|t
init|=
name|SharedCache
operator|.
name|getPartitionFromCache
argument_list|(
literal|"db1"
argument_list|,
literal|"tbl1"
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"201701"
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|t
operator|.
name|getSd
argument_list|()
operator|.
name|getLocation
argument_list|()
argument_list|,
literal|"loc1"
argument_list|)
expr_stmt|;
name|SharedCache
operator|.
name|removePartitionFromCache
argument_list|(
literal|"db1"
argument_list|,
literal|"tbl2"
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"201701"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|SharedCache
operator|.
name|getCachedPartitionCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|SharedCache
operator|.
name|getSdCache
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|SharedCache
operator|.
name|alterPartitionInCache
argument_list|(
literal|"db1"
argument_list|,
literal|"tbl1"
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"201701"
argument_list|)
argument_list|,
name|newPart1
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|SharedCache
operator|.
name|getCachedPartitionCount
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|SharedCache
operator|.
name|getSdCache
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|SharedCache
operator|.
name|removePartitionFromCache
argument_list|(
literal|"db1"
argument_list|,
literal|"tbl1"
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"201702"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|SharedCache
operator|.
name|getCachedPartitionCount
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|SharedCache
operator|.
name|getSdCache
argument_list|()
operator|.
name|size
argument_list|()
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

