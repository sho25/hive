begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Database
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Writable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * Wrapper for {@link org.apache.hadoop.hive.metastore.api.Database} that makes it writable  */
end_comment

begin_class
class|class
name|DatabaseWritable
implements|implements
name|Writable
block|{
specifier|final
name|Database
name|db
decl_stmt|;
name|DatabaseWritable
parameter_list|()
block|{
name|this
operator|.
name|db
operator|=
operator|new
name|Database
argument_list|()
expr_stmt|;
block|}
name|DatabaseWritable
parameter_list|(
name|Database
name|db
parameter_list|)
block|{
name|this
operator|.
name|db
operator|=
name|db
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
name|DataOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|HBaseUtils
operator|.
name|writeStr
argument_list|(
name|out
argument_list|,
name|db
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|HBaseUtils
operator|.
name|writeStr
argument_list|(
name|out
argument_list|,
name|db
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
name|HBaseUtils
operator|.
name|writeStr
argument_list|(
name|out
argument_list|,
name|db
operator|.
name|getLocationUri
argument_list|()
argument_list|)
expr_stmt|;
name|HBaseUtils
operator|.
name|writeStrStrMap
argument_list|(
name|out
argument_list|,
name|db
operator|.
name|getParameters
argument_list|()
argument_list|)
expr_stmt|;
name|HBaseUtils
operator|.
name|writePrivileges
argument_list|(
name|out
argument_list|,
name|db
operator|.
name|getPrivileges
argument_list|()
argument_list|)
expr_stmt|;
name|HBaseUtils
operator|.
name|writeStr
argument_list|(
name|out
argument_list|,
name|db
operator|.
name|getOwnerName
argument_list|()
argument_list|)
expr_stmt|;
name|HBaseUtils
operator|.
name|writePrincipalType
argument_list|(
name|out
argument_list|,
name|db
operator|.
name|getOwnerType
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|readFields
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|db
operator|.
name|setName
argument_list|(
name|HBaseUtils
operator|.
name|readStr
argument_list|(
name|in
argument_list|)
argument_list|)
expr_stmt|;
name|db
operator|.
name|setDescription
argument_list|(
name|HBaseUtils
operator|.
name|readStr
argument_list|(
name|in
argument_list|)
argument_list|)
expr_stmt|;
name|db
operator|.
name|setLocationUri
argument_list|(
name|HBaseUtils
operator|.
name|readStr
argument_list|(
name|in
argument_list|)
argument_list|)
expr_stmt|;
name|db
operator|.
name|setParameters
argument_list|(
name|HBaseUtils
operator|.
name|readStrStrMap
argument_list|(
name|in
argument_list|)
argument_list|)
expr_stmt|;
name|db
operator|.
name|setPrivileges
argument_list|(
name|HBaseUtils
operator|.
name|readPrivileges
argument_list|(
name|in
argument_list|)
argument_list|)
expr_stmt|;
name|db
operator|.
name|setOwnerName
argument_list|(
name|HBaseUtils
operator|.
name|readStr
argument_list|(
name|in
argument_list|)
argument_list|)
expr_stmt|;
name|db
operator|.
name|setOwnerType
argument_list|(
name|HBaseUtils
operator|.
name|readPrincipalType
argument_list|(
name|in
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

