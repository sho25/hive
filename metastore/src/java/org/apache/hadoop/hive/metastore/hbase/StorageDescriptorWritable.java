begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|StorageDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Writable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * Wrapper for {@link org.apache.hadoop.hive.metastore.api.StorageDescriptor} to make it writable.  */
end_comment

begin_class
specifier|public
class|class
name|StorageDescriptorWritable
implements|implements
name|Writable
block|{
specifier|static
specifier|final
specifier|private
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|StorageDescriptorWritable
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|StorageDescriptor
name|sd
decl_stmt|;
name|StorageDescriptorWritable
parameter_list|()
block|{
name|sd
operator|=
operator|new
name|SharedStorageDescriptor
argument_list|()
expr_stmt|;
block|}
name|StorageDescriptorWritable
parameter_list|(
name|StorageDescriptor
name|sd
parameter_list|)
block|{
name|this
operator|.
name|sd
operator|=
name|sd
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
name|DataOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|HBaseUtils
operator|.
name|writeStr
argument_list|(
name|out
argument_list|,
name|sd
operator|.
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
name|HBaseUtils
operator|.
name|writeStrStrMap
argument_list|(
name|out
argument_list|,
name|sd
operator|.
name|getParameters
argument_list|()
argument_list|)
expr_stmt|;
name|byte
index|[]
name|hash
init|=
name|HBaseReadWrite
operator|.
name|getInstance
argument_list|()
operator|.
name|putStorageDescriptor
argument_list|(
name|sd
argument_list|)
decl_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
name|hash
operator|.
name|length
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
name|hash
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|readFields
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|sd
operator|.
name|setLocation
argument_list|(
name|HBaseUtils
operator|.
name|readStr
argument_list|(
name|in
argument_list|)
argument_list|)
expr_stmt|;
name|sd
operator|.
name|setParameters
argument_list|(
name|HBaseUtils
operator|.
name|readStrStrMap
argument_list|(
name|in
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|len
init|=
name|in
operator|.
name|readInt
argument_list|()
decl_stmt|;
name|byte
index|[]
name|hash
init|=
operator|new
name|byte
index|[
name|len
index|]
decl_stmt|;
name|in
operator|.
name|readFully
argument_list|(
name|hash
argument_list|,
literal|0
argument_list|,
name|len
argument_list|)
expr_stmt|;
operator|(
operator|(
name|SharedStorageDescriptor
operator|)
name|sd
operator|)
operator|.
name|readShared
argument_list|(
name|hash
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

