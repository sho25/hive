begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|annotations
operator|.
name|VisibleForTesting
import|;
end_import

begin_comment
comment|/**  * A simple metric to count how many times something occurs.  */
end_comment

begin_class
class|class
name|Counter
block|{
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
specifier|private
name|long
name|cnt
decl_stmt|;
name|Counter
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|cnt
operator|=
literal|0
expr_stmt|;
block|}
name|void
name|incr
parameter_list|()
block|{
name|cnt
operator|++
expr_stmt|;
block|}
name|void
name|clear
parameter_list|()
block|{
name|cnt
operator|=
literal|0
expr_stmt|;
block|}
name|String
name|dump
parameter_list|()
block|{
name|StringBuilder
name|bldr
init|=
operator|new
name|StringBuilder
argument_list|(
literal|"Dumping metric: "
argument_list|)
decl_stmt|;
name|bldr
operator|.
name|append
argument_list|(
name|name
argument_list|)
operator|.
name|append
argument_list|(
literal|' '
argument_list|)
operator|.
name|append
argument_list|(
name|cnt
argument_list|)
expr_stmt|;
return|return
name|bldr
operator|.
name|toString
argument_list|()
return|;
block|}
annotation|@
name|VisibleForTesting
name|long
name|getCnt
parameter_list|()
block|{
return|return
name|cnt
return|;
block|}
block|}
end_class

end_unit

