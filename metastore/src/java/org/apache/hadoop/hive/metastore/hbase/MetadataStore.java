begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_interface
specifier|public
interface|interface
name|MetadataStore
block|{
comment|/**    * @param fileIds file ID list.    * @param result The ref parameter, used to return the serialized file metadata.    */
name|void
name|getFileMetadata
parameter_list|(
name|List
argument_list|<
name|Long
argument_list|>
name|fileIds
parameter_list|,
name|ByteBuffer
index|[]
name|result
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * @param fileIds file ID list.    * @param metadataBuffers Serialized file metadata, one per file ID.    * @param addedCols The column names for additional columns created by file-format-specific    *                  metadata handler, to be stored in the cache.    * @param addedVals The values for addedCols; one value per file ID per added column.    */
name|void
name|storeFileMetadata
parameter_list|(
name|List
argument_list|<
name|Long
argument_list|>
name|fileIds
parameter_list|,
name|List
argument_list|<
name|ByteBuffer
argument_list|>
name|metadataBuffers
parameter_list|,
name|ByteBuffer
index|[]
name|addedCols
parameter_list|,
name|ByteBuffer
index|[]
index|[]
name|addedVals
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
function_decl|;
comment|/**    * @param fileId The file ID.    * @param metadataBuffers Serialized file metadata.    * @param addedCols The column names for additional columns created by file-format-specific    *                  metadata handler, to be stored in the cache.    * @param addedVals The values for addedCols; one value per added column.    */
name|void
name|storeFileMetadata
parameter_list|(
name|long
name|fileId
parameter_list|,
name|ByteBuffer
name|metadata
parameter_list|,
name|ByteBuffer
index|[]
name|addedCols
parameter_list|,
name|ByteBuffer
index|[]
name|addedVals
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
function_decl|;
block|}
end_interface

end_unit

