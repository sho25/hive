begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|FieldSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Order
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|SerDeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|SkewedInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|StorageDescriptor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * A {@link org.apache.hadoop.hive.metastore.api.StorageDescriptor} with most of it's content  * shared.  Location and parameters are left alone, everything else is redirected to a shared  * reference in the cache.  */
end_comment

begin_class
specifier|public
class|class
name|SharedStorageDescriptor
extends|extends
name|StorageDescriptor
block|{
specifier|static
specifier|final
specifier|private
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|SharedStorageDescriptor
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
name|StorageDescriptor
name|shared
decl_stmt|;
specifier|private
name|boolean
name|copied
init|=
literal|false
decl_stmt|;
specifier|private
name|CopyOnWriteColList
name|colList
init|=
literal|null
decl_stmt|;
specifier|private
name|CopyOnWriteOrderList
name|orderList
init|=
literal|null
decl_stmt|;
specifier|private
name|CopyOnWriteBucketList
name|bucketList
init|=
literal|null
decl_stmt|;
name|SharedStorageDescriptor
parameter_list|()
block|{   }
specifier|public
name|SharedStorageDescriptor
parameter_list|(
name|SharedStorageDescriptor
name|that
parameter_list|)
block|{
name|this
operator|.
name|setLocation
argument_list|(
name|that
operator|.
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|setParameters
argument_list|(
name|that
operator|.
name|getParameters
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|shared
operator|=
name|that
operator|.
name|shared
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|StorageDescriptor
name|deepCopy
parameter_list|()
block|{
return|return
operator|new
name|SharedStorageDescriptor
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isSetCols
parameter_list|()
block|{
return|return
name|shared
operator|.
name|isSetCols
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|getCols
parameter_list|()
block|{
return|return
name|copied
condition|?
name|shared
operator|.
name|getCols
argument_list|()
else|:
operator|(
name|shared
operator|.
name|getCols
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|copyCols
argument_list|(
name|shared
operator|.
name|getCols
argument_list|()
argument_list|)
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getColsSize
parameter_list|()
block|{
return|return
name|shared
operator|.
name|getColsSize
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|FieldSchema
argument_list|>
name|getColsIterator
parameter_list|()
block|{
return|return
name|shared
operator|.
name|getColsIterator
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setCols
parameter_list|(
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|setCols
argument_list|(
name|cols
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|addToCols
parameter_list|(
name|FieldSchema
name|fs
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|addToCols
argument_list|(
name|fs
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unsetCols
parameter_list|()
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|unsetCols
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isSetInputFormat
parameter_list|()
block|{
return|return
name|shared
operator|.
name|isSetInputFormat
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getInputFormat
parameter_list|()
block|{
return|return
name|shared
operator|.
name|getInputFormat
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setInputFormat
parameter_list|(
name|String
name|inputFormat
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|setInputFormat
argument_list|(
name|inputFormat
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unsetInputFormat
parameter_list|()
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|unsetInputFormat
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isSetOutputFormat
parameter_list|()
block|{
return|return
name|shared
operator|.
name|isSetOutputFormat
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getOutputFormat
parameter_list|()
block|{
return|return
name|shared
operator|.
name|getOutputFormat
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setOutputFormat
parameter_list|(
name|String
name|outputFormat
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|setOutputFormat
argument_list|(
name|outputFormat
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unsetOutputFormat
parameter_list|()
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|unsetOutputFormat
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isSetCompressed
parameter_list|()
block|{
return|return
name|shared
operator|.
name|isSetCompressed
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isCompressed
parameter_list|()
block|{
return|return
name|shared
operator|.
name|isCompressed
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setCompressed
parameter_list|(
name|boolean
name|isCompressed
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|setCompressed
argument_list|(
name|isCompressed
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unsetCompressed
parameter_list|()
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|unsetCompressed
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isSetNumBuckets
parameter_list|()
block|{
return|return
name|shared
operator|.
name|isSetNumBuckets
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getNumBuckets
parameter_list|()
block|{
return|return
name|shared
operator|.
name|getNumBuckets
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setNumBuckets
parameter_list|(
name|int
name|numBuckets
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|setNumBuckets
argument_list|(
name|numBuckets
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unsetNumBuckets
parameter_list|()
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|unsetNumBuckets
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isSetSerdeInfo
parameter_list|()
block|{
return|return
name|shared
operator|.
name|isSetSerdeInfo
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|SerDeInfo
name|getSerdeInfo
parameter_list|()
block|{
return|return
name|copied
condition|?
name|shared
operator|.
name|getSerdeInfo
argument_list|()
else|:
operator|(
name|shared
operator|.
name|getSerdeInfo
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
operator|new
name|SerDeInfoWrapper
argument_list|(
name|shared
operator|.
name|getSerdeInfo
argument_list|()
argument_list|)
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setSerdeInfo
parameter_list|(
name|SerDeInfo
name|serdeInfo
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|setSerdeInfo
argument_list|(
name|serdeInfo
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unsetSerdeInfo
parameter_list|()
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|unsetSerdeInfo
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isSetBucketCols
parameter_list|()
block|{
return|return
name|shared
operator|.
name|isSetBucketCols
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getBucketCols
parameter_list|()
block|{
return|return
name|copied
condition|?
name|shared
operator|.
name|getBucketCols
argument_list|()
else|:
operator|(
name|shared
operator|.
name|getBucketCols
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|copyBucketCols
argument_list|(
name|shared
operator|.
name|getBucketCols
argument_list|()
argument_list|)
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getBucketColsSize
parameter_list|()
block|{
return|return
name|shared
operator|.
name|getBucketColsSize
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|String
argument_list|>
name|getBucketColsIterator
parameter_list|()
block|{
return|return
name|shared
operator|.
name|getBucketColsIterator
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setBucketCols
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|bucketCols
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|setBucketCols
argument_list|(
name|bucketCols
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|addToBucketCols
parameter_list|(
name|String
name|bucketCol
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|addToBucketCols
argument_list|(
name|bucketCol
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unsetBucketCols
parameter_list|()
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|unsetBucketCols
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isSetSortCols
parameter_list|()
block|{
return|return
name|shared
operator|.
name|isSetSortCols
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|Order
argument_list|>
name|getSortCols
parameter_list|()
block|{
return|return
name|copied
condition|?
name|shared
operator|.
name|getSortCols
argument_list|()
else|:
operator|(
name|shared
operator|.
name|getSortCols
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
name|copySort
argument_list|(
name|shared
operator|.
name|getSortCols
argument_list|()
argument_list|)
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getSortColsSize
parameter_list|()
block|{
return|return
name|shared
operator|.
name|getSortColsSize
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|Order
argument_list|>
name|getSortColsIterator
parameter_list|()
block|{
return|return
name|shared
operator|.
name|getSortColsIterator
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setSortCols
parameter_list|(
name|List
argument_list|<
name|Order
argument_list|>
name|sortCols
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|setSortCols
argument_list|(
name|sortCols
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|addToSortCols
parameter_list|(
name|Order
name|sortCol
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|addToSortCols
argument_list|(
name|sortCol
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unsetSortCols
parameter_list|()
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|unsetSortCols
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isSetSkewedInfo
parameter_list|()
block|{
return|return
name|shared
operator|.
name|isSetSkewedInfo
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|SkewedInfo
name|getSkewedInfo
parameter_list|()
block|{
return|return
name|copied
condition|?
name|shared
operator|.
name|getSkewedInfo
argument_list|()
else|:
operator|(
name|shared
operator|.
name|getSkewedInfo
argument_list|()
operator|==
literal|null
condition|?
literal|null
else|:
operator|new
name|SkewWrapper
argument_list|(
name|shared
operator|.
name|getSkewedInfo
argument_list|()
argument_list|)
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setSkewedInfo
parameter_list|(
name|SkewedInfo
name|skewedInfo
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|setSkewedInfo
argument_list|(
name|skewedInfo
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unsetSkewedInfo
parameter_list|()
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|unsetSkewedInfo
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isSetStoredAsSubDirectories
parameter_list|()
block|{
return|return
name|shared
operator|.
name|isSetStoredAsSubDirectories
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isStoredAsSubDirectories
parameter_list|()
block|{
return|return
name|shared
operator|.
name|isStoredAsSubDirectories
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setStoredAsSubDirectories
parameter_list|(
name|boolean
name|sasd
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|setStoredAsSubDirectories
argument_list|(
name|sasd
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unsetStoredAsSubDirectories
parameter_list|()
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|unsetStoredAsSubDirectories
argument_list|()
expr_stmt|;
block|}
name|void
name|setShared
parameter_list|(
name|StorageDescriptor
name|sd
parameter_list|)
block|{
name|shared
operator|=
name|sd
expr_stmt|;
block|}
name|StorageDescriptor
name|getShared
parameter_list|()
block|{
return|return
name|shared
return|;
block|}
specifier|private
name|void
name|copyOnWrite
parameter_list|()
block|{
if|if
condition|(
operator|!
name|copied
condition|)
block|{
name|shared
operator|=
operator|new
name|StorageDescriptor
argument_list|(
name|shared
argument_list|)
expr_stmt|;
name|copied
operator|=
literal|true
expr_stmt|;
block|}
block|}
specifier|private
class|class
name|SerDeInfoWrapper
extends|extends
name|SerDeInfo
block|{
name|SerDeInfoWrapper
parameter_list|(
name|SerDeInfo
name|serde
parameter_list|)
block|{
name|super
argument_list|(
name|serde
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getSerdeInfo
argument_list|()
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unsetName
parameter_list|()
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getSerdeInfo
argument_list|()
operator|.
name|unsetName
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setSerializationLib
parameter_list|(
name|String
name|lib
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getSerdeInfo
argument_list|()
operator|.
name|setSerializationLib
argument_list|(
name|lib
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unsetSerializationLib
parameter_list|()
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getSerdeInfo
argument_list|()
operator|.
name|unsetSerializationLib
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setParameters
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|parameters
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getSerdeInfo
argument_list|()
operator|.
name|setParameters
argument_list|(
name|parameters
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unsetParameters
parameter_list|()
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getSerdeInfo
argument_list|()
operator|.
name|unsetParameters
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|putToParameters
parameter_list|(
name|String
name|key
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getSerdeInfo
argument_list|()
operator|.
name|putToParameters
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
class|class
name|SkewWrapper
extends|extends
name|SkewedInfo
block|{
name|SkewWrapper
parameter_list|(
name|SkewedInfo
name|skew
parameter_list|)
block|{
name|super
argument_list|(
name|skew
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setSkewedColNames
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|skewedColNames
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getSkewedInfo
argument_list|()
operator|.
name|setSkewedColNames
argument_list|(
name|skewedColNames
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unsetSkewedColNames
parameter_list|()
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getSkewedInfo
argument_list|()
operator|.
name|unsetSkewedColNames
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|addToSkewedColNames
parameter_list|(
name|String
name|skewCol
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getSkewedInfo
argument_list|()
operator|.
name|addToSkewedColNames
argument_list|(
name|skewCol
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setSkewedColValues
parameter_list|(
name|List
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|skewedColValues
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getSkewedInfo
argument_list|()
operator|.
name|setSkewedColValues
argument_list|(
name|skewedColValues
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unsetSkewedColValues
parameter_list|()
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getSkewedInfo
argument_list|()
operator|.
name|unsetSkewedColValues
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|addToSkewedColValues
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|skewedColValue
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getSkewedInfo
argument_list|()
operator|.
name|addToSkewedColValues
argument_list|(
name|skewedColValue
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setSkewedColValueLocationMaps
parameter_list|(
name|Map
argument_list|<
name|List
argument_list|<
name|String
argument_list|>
argument_list|,
name|String
argument_list|>
name|maps
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getSkewedInfo
argument_list|()
operator|.
name|setSkewedColValueLocationMaps
argument_list|(
name|maps
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unsetSkewedColValueLocationMaps
parameter_list|()
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getSkewedInfo
argument_list|()
operator|.
name|unsetSkewedColValueLocationMaps
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|putToSkewedColValueLocationMaps
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|key
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getSkewedInfo
argument_list|()
operator|.
name|putToSkewedColValueLocationMaps
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|CopyOnWriteOrderList
name|copySort
parameter_list|(
name|List
argument_list|<
name|Order
argument_list|>
name|sort
parameter_list|)
block|{
if|if
condition|(
name|orderList
operator|==
literal|null
condition|)
block|{
name|orderList
operator|=
operator|new
name|CopyOnWriteOrderList
argument_list|(
name|sort
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|sort
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|orderList
operator|.
name|secretAdd
argument_list|(
operator|new
name|OrderWrapper
argument_list|(
name|i
argument_list|,
name|sort
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|orderList
return|;
block|}
specifier|private
class|class
name|CopyOnWriteOrderList
extends|extends
name|ArrayList
argument_list|<
name|Order
argument_list|>
block|{
name|CopyOnWriteOrderList
parameter_list|(
name|int
name|size
parameter_list|)
block|{
name|super
argument_list|(
name|size
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|secretAdd
parameter_list|(
name|OrderWrapper
name|order
parameter_list|)
block|{
name|super
operator|.
name|add
argument_list|(
name|order
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|add
parameter_list|(
name|Order
name|t
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
return|return
name|shared
operator|.
name|getSortCols
argument_list|()
operator|.
name|add
argument_list|(
name|t
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|remove
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
return|return
name|shared
operator|.
name|getSortCols
argument_list|()
operator|.
name|remove
argument_list|(
name|o
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|addAll
parameter_list|(
name|Collection
argument_list|<
name|?
extends|extends
name|Order
argument_list|>
name|c
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
return|return
name|shared
operator|.
name|getSortCols
argument_list|()
operator|.
name|addAll
argument_list|(
name|c
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|addAll
parameter_list|(
name|int
name|index
parameter_list|,
name|Collection
argument_list|<
name|?
extends|extends
name|Order
argument_list|>
name|c
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
return|return
name|shared
operator|.
name|getSortCols
argument_list|()
operator|.
name|addAll
argument_list|(
name|c
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|removeAll
parameter_list|(
name|Collection
argument_list|<
name|?
argument_list|>
name|c
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
return|return
name|shared
operator|.
name|getSortCols
argument_list|()
operator|.
name|removeAll
argument_list|(
name|c
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|retainAll
parameter_list|(
name|Collection
argument_list|<
name|?
argument_list|>
name|c
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
return|return
name|shared
operator|.
name|getSortCols
argument_list|()
operator|.
name|retainAll
argument_list|(
name|c
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|clear
parameter_list|()
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getSortCols
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Order
name|set
parameter_list|(
name|int
name|index
parameter_list|,
name|Order
name|element
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
return|return
name|shared
operator|.
name|getSortCols
argument_list|()
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|element
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|add
parameter_list|(
name|int
name|index
parameter_list|,
name|Order
name|element
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getSortCols
argument_list|()
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|element
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Order
name|remove
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
return|return
name|shared
operator|.
name|getSortCols
argument_list|()
operator|.
name|remove
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
specifier|private
class|class
name|OrderWrapper
extends|extends
name|Order
block|{
specifier|final
specifier|private
name|int
name|pos
decl_stmt|;
name|OrderWrapper
parameter_list|(
name|int
name|pos
parameter_list|,
name|Order
name|order
parameter_list|)
block|{
name|super
argument_list|(
name|order
argument_list|)
expr_stmt|;
name|this
operator|.
name|pos
operator|=
name|pos
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setCol
parameter_list|(
name|String
name|col
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getSortCols
argument_list|()
operator|.
name|get
argument_list|(
name|pos
argument_list|)
operator|.
name|setCol
argument_list|(
name|col
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unsetCol
parameter_list|()
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getSortCols
argument_list|()
operator|.
name|get
argument_list|(
name|pos
argument_list|)
operator|.
name|unsetCol
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setOrder
parameter_list|(
name|int
name|order
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getSortCols
argument_list|()
operator|.
name|get
argument_list|(
name|pos
argument_list|)
operator|.
name|setOrder
argument_list|(
name|order
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unsetOrder
parameter_list|()
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getSortCols
argument_list|()
operator|.
name|get
argument_list|(
name|pos
argument_list|)
operator|.
name|unsetOrder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|CopyOnWriteColList
name|copyCols
parameter_list|(
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|cols
parameter_list|)
block|{
if|if
condition|(
name|colList
operator|==
literal|null
condition|)
block|{
name|colList
operator|=
operator|new
name|CopyOnWriteColList
argument_list|(
name|cols
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|cols
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|colList
operator|.
name|secretAdd
argument_list|(
operator|new
name|FieldSchemaWrapper
argument_list|(
name|i
argument_list|,
name|cols
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|colList
return|;
block|}
specifier|private
class|class
name|CopyOnWriteColList
extends|extends
name|ArrayList
argument_list|<
name|FieldSchema
argument_list|>
block|{
name|CopyOnWriteColList
parameter_list|(
name|int
name|size
parameter_list|)
block|{
name|super
argument_list|(
name|size
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|secretAdd
parameter_list|(
name|FieldSchemaWrapper
name|col
parameter_list|)
block|{
name|super
operator|.
name|add
argument_list|(
name|col
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|add
parameter_list|(
name|FieldSchema
name|t
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
return|return
name|shared
operator|.
name|getCols
argument_list|()
operator|.
name|add
argument_list|(
name|t
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|remove
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
return|return
name|shared
operator|.
name|getCols
argument_list|()
operator|.
name|remove
argument_list|(
name|o
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|addAll
parameter_list|(
name|Collection
argument_list|<
name|?
extends|extends
name|FieldSchema
argument_list|>
name|c
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
return|return
name|shared
operator|.
name|getCols
argument_list|()
operator|.
name|addAll
argument_list|(
name|c
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|addAll
parameter_list|(
name|int
name|index
parameter_list|,
name|Collection
argument_list|<
name|?
extends|extends
name|FieldSchema
argument_list|>
name|c
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
return|return
name|shared
operator|.
name|getCols
argument_list|()
operator|.
name|addAll
argument_list|(
name|c
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|removeAll
parameter_list|(
name|Collection
argument_list|<
name|?
argument_list|>
name|c
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
return|return
name|shared
operator|.
name|getCols
argument_list|()
operator|.
name|removeAll
argument_list|(
name|c
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|retainAll
parameter_list|(
name|Collection
argument_list|<
name|?
argument_list|>
name|c
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
return|return
name|shared
operator|.
name|getCols
argument_list|()
operator|.
name|retainAll
argument_list|(
name|c
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|clear
parameter_list|()
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getCols
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|FieldSchema
name|set
parameter_list|(
name|int
name|index
parameter_list|,
name|FieldSchema
name|element
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
return|return
name|shared
operator|.
name|getCols
argument_list|()
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|element
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|add
parameter_list|(
name|int
name|index
parameter_list|,
name|FieldSchema
name|element
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getCols
argument_list|()
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|element
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|FieldSchema
name|remove
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
return|return
name|shared
operator|.
name|getCols
argument_list|()
operator|.
name|remove
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
specifier|private
class|class
name|FieldSchemaWrapper
extends|extends
name|FieldSchema
block|{
specifier|final
specifier|private
name|int
name|pos
decl_stmt|;
name|FieldSchemaWrapper
parameter_list|(
name|int
name|pos
parameter_list|,
name|FieldSchema
name|col
parameter_list|)
block|{
name|super
argument_list|(
name|col
argument_list|)
expr_stmt|;
name|this
operator|.
name|pos
operator|=
name|pos
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getCols
argument_list|()
operator|.
name|get
argument_list|(
name|pos
argument_list|)
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unsetName
parameter_list|()
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getCols
argument_list|()
operator|.
name|get
argument_list|(
name|pos
argument_list|)
operator|.
name|unsetName
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setType
parameter_list|(
name|String
name|type
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getCols
argument_list|()
operator|.
name|get
argument_list|(
name|pos
argument_list|)
operator|.
name|setType
argument_list|(
name|type
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unsetType
parameter_list|()
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getCols
argument_list|()
operator|.
name|get
argument_list|(
name|pos
argument_list|)
operator|.
name|unsetType
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setComment
parameter_list|(
name|String
name|comment
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getCols
argument_list|()
operator|.
name|get
argument_list|(
name|pos
argument_list|)
operator|.
name|setComment
argument_list|(
name|comment
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unsetComment
parameter_list|()
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getCols
argument_list|()
operator|.
name|get
argument_list|(
name|pos
argument_list|)
operator|.
name|unsetComment
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|CopyOnWriteBucketList
name|copyBucketCols
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|cols
parameter_list|)
block|{
if|if
condition|(
name|bucketList
operator|==
literal|null
condition|)
block|{
name|bucketList
operator|=
operator|new
name|CopyOnWriteBucketList
argument_list|(
name|cols
argument_list|)
expr_stmt|;
block|}
return|return
name|bucketList
return|;
block|}
specifier|private
class|class
name|CopyOnWriteBucketList
extends|extends
name|ArrayList
argument_list|<
name|String
argument_list|>
block|{
name|CopyOnWriteBucketList
parameter_list|(
name|Collection
argument_list|<
name|String
argument_list|>
name|c
parameter_list|)
block|{
name|super
argument_list|(
name|c
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|secretAdd
parameter_list|(
name|String
name|col
parameter_list|)
block|{
name|super
operator|.
name|add
argument_list|(
name|col
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|add
parameter_list|(
name|String
name|t
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
return|return
name|shared
operator|.
name|getBucketCols
argument_list|()
operator|.
name|add
argument_list|(
name|t
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|remove
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
return|return
name|shared
operator|.
name|getBucketCols
argument_list|()
operator|.
name|remove
argument_list|(
name|o
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|addAll
parameter_list|(
name|Collection
argument_list|<
name|?
extends|extends
name|String
argument_list|>
name|c
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
return|return
name|shared
operator|.
name|getBucketCols
argument_list|()
operator|.
name|addAll
argument_list|(
name|c
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|addAll
parameter_list|(
name|int
name|index
parameter_list|,
name|Collection
argument_list|<
name|?
extends|extends
name|String
argument_list|>
name|c
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
return|return
name|shared
operator|.
name|getBucketCols
argument_list|()
operator|.
name|addAll
argument_list|(
name|c
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|removeAll
parameter_list|(
name|Collection
argument_list|<
name|?
argument_list|>
name|c
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
return|return
name|shared
operator|.
name|getBucketCols
argument_list|()
operator|.
name|removeAll
argument_list|(
name|c
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|retainAll
parameter_list|(
name|Collection
argument_list|<
name|?
argument_list|>
name|c
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
return|return
name|shared
operator|.
name|getBucketCols
argument_list|()
operator|.
name|retainAll
argument_list|(
name|c
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|clear
parameter_list|()
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getBucketCols
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|set
parameter_list|(
name|int
name|index
parameter_list|,
name|String
name|element
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
return|return
name|shared
operator|.
name|getBucketCols
argument_list|()
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|element
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|add
parameter_list|(
name|int
name|index
parameter_list|,
name|String
name|element
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
name|shared
operator|.
name|getBucketCols
argument_list|()
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|element
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|remove
parameter_list|(
name|int
name|index
parameter_list|)
block|{
name|copyOnWrite
argument_list|()
expr_stmt|;
return|return
name|shared
operator|.
name|getBucketCols
argument_list|()
operator|.
name|remove
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

