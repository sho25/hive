begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|FieldSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|Order
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|SerDeInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|SkewedInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|StorageDescriptor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * A {@link org.apache.hadoop.hive.metastore.api.StorageDescriptor} with most of it's content  * shared.  Location and parameters are left alone, everything else is redirected to a shared  * reference in the cache.  */
end_comment

begin_class
specifier|public
class|class
name|SharedStorageDescriptor
extends|extends
name|StorageDescriptor
block|{
specifier|static
specifier|final
specifier|private
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|SharedStorageDescriptor
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|StorageDescriptor
name|shared
decl_stmt|;
name|SharedStorageDescriptor
parameter_list|()
block|{   }
specifier|public
name|SharedStorageDescriptor
parameter_list|(
name|SharedStorageDescriptor
name|that
parameter_list|)
block|{
name|this
operator|.
name|setLocation
argument_list|(
name|that
operator|.
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|setParameters
argument_list|(
name|that
operator|.
name|getParameters
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|shared
operator|=
name|that
operator|.
name|shared
expr_stmt|;
block|}
name|void
name|readShared
parameter_list|(
name|byte
index|[]
name|hash
parameter_list|)
throws|throws
name|IOException
block|{
name|shared
operator|=
name|HBaseReadWrite
operator|.
name|getInstance
argument_list|()
operator|.
name|getStorageDescriptor
argument_list|(
name|hash
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|FieldSchema
argument_list|>
name|getCols
parameter_list|()
block|{
return|return
name|shared
operator|.
name|getCols
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getColsSize
parameter_list|()
block|{
return|return
name|shared
operator|.
name|getColsSize
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|FieldSchema
argument_list|>
name|getColsIterator
parameter_list|()
block|{
return|return
name|shared
operator|.
name|getColsIterator
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getInputFormat
parameter_list|()
block|{
return|return
name|shared
operator|.
name|getInputFormat
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getOutputFormat
parameter_list|()
block|{
return|return
name|shared
operator|.
name|getOutputFormat
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isCompressed
parameter_list|()
block|{
return|return
name|shared
operator|.
name|isCompressed
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getNumBuckets
parameter_list|()
block|{
return|return
name|shared
operator|.
name|getNumBuckets
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|SerDeInfo
name|getSerdeInfo
parameter_list|()
block|{
return|return
name|shared
operator|.
name|getSerdeInfo
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getBucketCols
parameter_list|()
block|{
return|return
name|shared
operator|.
name|getBucketCols
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getBucketColsSize
parameter_list|()
block|{
return|return
name|shared
operator|.
name|getBucketColsSize
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|String
argument_list|>
name|getBucketColsIterator
parameter_list|()
block|{
return|return
name|shared
operator|.
name|getBucketColsIterator
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|Order
argument_list|>
name|getSortCols
parameter_list|()
block|{
return|return
name|shared
operator|.
name|getSortCols
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getSortColsSize
parameter_list|()
block|{
return|return
name|shared
operator|.
name|getSortColsSize
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|Order
argument_list|>
name|getSortColsIterator
parameter_list|()
block|{
return|return
name|shared
operator|.
name|getSortColsIterator
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|SkewedInfo
name|getSkewedInfo
parameter_list|()
block|{
return|return
name|shared
operator|.
name|getSkewedInfo
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isStoredAsSubDirectories
parameter_list|()
block|{
return|return
name|shared
operator|.
name|isStoredAsSubDirectories
argument_list|()
return|;
block|}
block|}
end_class

end_unit

