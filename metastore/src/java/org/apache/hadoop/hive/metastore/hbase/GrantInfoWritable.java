begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|hbase
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hive
operator|.
name|metastore
operator|.
name|api
operator|.
name|PrincipalType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Writable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * A class to serialize grant information.  There is not a corresponding thrift object.  */
end_comment

begin_class
class|class
name|GrantInfoWritable
implements|implements
name|Writable
block|{
name|String
name|principalName
decl_stmt|;
name|PrincipalType
name|principalType
decl_stmt|;
name|int
name|addTime
decl_stmt|;
name|String
name|grantor
decl_stmt|;
name|PrincipalType
name|grantorType
decl_stmt|;
name|boolean
name|grantOption
decl_stmt|;
name|GrantInfoWritable
parameter_list|()
block|{   }
comment|/**    *    * @param name name of the user or role    * @param type whether this is a user or a role    * @param addTime time user was added to role    * @param grantor user or role who granted this principal into the role    * @param grantorType whether the grantor was a user or a role    * @param withGrantOption whether this principal has the grant option    */
name|GrantInfoWritable
parameter_list|(
name|String
name|name
parameter_list|,
name|PrincipalType
name|type
parameter_list|,
name|int
name|addTime
parameter_list|,
name|String
name|grantor
parameter_list|,
name|PrincipalType
name|grantorType
parameter_list|,
name|boolean
name|withGrantOption
parameter_list|)
block|{
name|principalName
operator|=
name|name
expr_stmt|;
name|principalType
operator|=
name|type
expr_stmt|;
name|this
operator|.
name|addTime
operator|=
name|addTime
expr_stmt|;
name|this
operator|.
name|grantor
operator|=
name|grantor
expr_stmt|;
name|this
operator|.
name|grantorType
operator|=
name|grantorType
expr_stmt|;
name|grantOption
operator|=
name|withGrantOption
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
name|DataOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|HBaseUtils
operator|.
name|writeStr
argument_list|(
name|out
argument_list|,
name|principalName
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
name|principalType
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
name|addTime
argument_list|)
expr_stmt|;
name|HBaseUtils
operator|.
name|writeStr
argument_list|(
name|out
argument_list|,
name|grantor
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeInt
argument_list|(
name|grantorType
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeBoolean
argument_list|(
name|grantOption
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|readFields
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|principalName
operator|=
name|HBaseUtils
operator|.
name|readStr
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|principalType
operator|=
name|PrincipalType
operator|.
name|findByValue
argument_list|(
name|in
operator|.
name|readInt
argument_list|()
argument_list|)
expr_stmt|;
name|addTime
operator|=
name|in
operator|.
name|readInt
argument_list|()
expr_stmt|;
name|grantor
operator|=
name|HBaseUtils
operator|.
name|readStr
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|grantorType
operator|=
name|PrincipalType
operator|.
name|findByValue
argument_list|(
name|in
operator|.
name|readInt
argument_list|()
argument_list|)
expr_stmt|;
name|grantOption
operator|=
name|in
operator|.
name|readBoolean
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

